{"version":3,"sources":["webpack:///./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js-pure/internals/well-known-symbol.js","webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js-pure/internals/fails.js","webpack:///./node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack:///./node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/modules/es.date.to-string.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js-pure/internals/to-integer.js","webpack:///./node_modules/core-js-pure/internals/require-object-coercible.js","webpack:///./node_modules/core-js-pure/internals/bind-context.js","webpack:///./node_modules/core-js/internals/an-instance.js","webpack:///./node_modules/core-js/internals/html.js","webpack:///./node_modules/core-js-pure/internals/object-to-string.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js-pure/es/symbol/index.js","webpack:///./node_modules/core-js/internals/check-correctness-of-iteration.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js-pure/internals/native-symbol.js","webpack:///./node_modules/core-js/internals/iterate.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack:///./node_modules/core-js-pure/es/symbol/iterator.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/internals/set-species.js","webpack:///./node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.split.js","webpack:///./node_modules/core-js-pure/internals/set-to-string-tag.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/task.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.replace.js","webpack:///./node_modules/core-js-pure/internals/internal-state.js","webpack:///./node_modules/core-js-pure/internals/a-possible-prototype.js","webpack:///./node_modules/core-js/internals/get-iterator-method.js","webpack:///./node_modules/core-js-pure/features/symbol/iterator.js","webpack:///./node_modules/core-js/internals/object-define-properties.js","webpack:///./node_modules/core-js-pure/internals/global.js","webpack:///./node_modules/core-js/internals/a-possible-prototype.js","webpack:///./node_modules/core-js-pure/modules/es.string.iterator.js","webpack:///./node_modules/core-js-pure/internals/uid.js","webpack:///./node_modules/core-js/internals/iterators.js","webpack:///./node_modules/core-js-pure/internals/define-iterator.js","webpack:///./node_modules/core-js-pure/internals/object-define-property.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js-pure/internals/array-species-create.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/add-to-unscopables.js","webpack:///./node_modules/core-js/internals/host-report-errors.js","webpack:///./node_modules/core-js-pure/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js-pure/internals/object-create.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js-pure/internals/v8-version.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js-pure/internals/to-object.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack:///./node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/v8-version.js","webpack:///./node_modules/core-js/internals/object-assign.js","webpack:///./node_modules/core-js-pure/internals/is-array.js","webpack:///./node_modules/@babel/runtime-corejs3/core-js/symbol/iterator.js","webpack:///./node_modules/core-js-pure/internals/array-includes.js","webpack:///./node_modules/core-js-pure/internals/indexed-object.js","webpack:///./node_modules/core-js-pure/internals/to-length.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/core-js-pure/internals/create-property.js","webpack:///./node_modules/core-js-pure/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js-pure/internals/an-object.js","webpack:///./node_modules/core-js-pure/internals/is-pure.js","webpack:///./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js-pure/internals/to-primitive.js","webpack:///./node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js-pure/internals/iterators.js","webpack:///./node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack:///./node_modules/core-js-pure/internals/path.js","webpack:///./node_modules/core-js-pure/internals/shared-store.js","webpack:///./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/core-js-pure/internals/dom-iterables.js","webpack:///./node_modules/core-js-pure/internals/has.js","webpack:///./node_modules/core-js-pure/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/to-object.js","webpack:///./node_modules/core-js/internals/object-create.js","webpack:///./node_modules/core-js/internals/define-iterator.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./node_modules/core-js-pure/modules/es.math.to-string-tag.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack:///./node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js-pure/internals/classof.js","webpack:///./node_modules/core-js-pure/internals/set-global.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js-pure/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js-pure/internals/native-weak-map.js","webpack:///./node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.search.js","webpack:///./node_modules/core-js-pure/internals/get-built-in.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.species.js","webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/core-js-pure/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js-pure/internals/enum-bug-keys.js","webpack:///./node_modules/core-js/internals/function-to-string.js","webpack:///./node_modules/core-js/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js-pure/internals/object-keys.js","webpack:///./node_modules/core-js-pure/internals/is-forced.js","webpack:///./node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js-pure/internals/to-indexed-object.js","webpack:///./node_modules/core-js-pure/internals/export.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack:///./node_modules/core-js-pure/internals/function-to-string.js","webpack:///./node_modules/@babel/runtime-corejs3/core-js/symbol.js","webpack:///./node_modules/core-js/internals/iterators-core.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js-pure/internals/shared-key.js","webpack:///./node_modules/core-js-pure/internals/object-keys-internal.js","webpack:///./node_modules/core-js/internals/user-agent.js","webpack:///./node_modules/core-js/internals/microtask.js","webpack:///./node_modules/core-js-pure/features/symbol/index.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js-pure/internals/iterators-core.js","webpack:///./node_modules/@babel/runtime-corejs3/helpers/esm/typeof.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js-pure/internals/descriptors.js","webpack:///./node_modules/core-js-pure/internals/object-define-properties.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack:///./node_modules/core-js-pure/internals/user-agent.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js-pure/internals/string-multibyte.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js-pure/internals/a-function.js","webpack:///./node_modules/core-js/modules/es.object.assign.js","webpack:///./node_modules/mxgraph/javascript/dist/build.js","webpack:///./node_modules/core-js/internals/promise-resolve.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js/internals/set-to-string-tag.js","webpack:///./node_modules/core-js-pure/internals/shared.js","webpack:///./node_modules/core-js-pure/internals/redefine.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js-pure/internals/array-iteration.js","webpack:///./node_modules/core-js/internals/object-keys.js","webpack:///./node_modules/core-js-pure/internals/is-object.js","webpack:///./node_modules/core-js/internals/object-get-prototype-of.js","webpack:///./node_modules/core-js/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/modules/es.array.iterator.js","webpack:///./node_modules/core-js/internals/redefine-all.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack:///./node_modules/core-js/internals/perform.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.match.js","webpack:///./node_modules/core-js/modules/es.promise.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/is-array-iterator-method.js","webpack:///./node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack:///./node_modules/core-js-pure/internals/html.js","webpack:///./node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js-pure/internals/create-iterator-constructor.js","webpack:///./node_modules/core-js/internals/classof.js","webpack:///./node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/bind-context.js","webpack:///./node_modules/core-js-pure/internals/wrapped-well-known-symbol.js","webpack:///./node_modules/core-js-pure/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js-pure/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js"],"names":["DESCRIPTORS","definePropertyModule","createPropertyDescriptor","module","exports","object","key","value","f","global","shared","uid","NATIVE_SYMBOL","Symbol","store","name","propertyIsEnumerableModule","toIndexedObject","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","O","P","error","call","exec","defineWellKnownSymbol","internalObjectKeys","enumBugKeys","hiddenKeys","concat","getOwnPropertyNames","fails","createElement","defineProperty","get","a","redefine","DatePrototype","Date","prototype","INVALID_DATE","TO_STRING","nativeDateToString","getTime","NaN","this","ceil","Math","floor","argument","isNaN","it","undefined","TypeError","aFunction","fn","that","length","b","c","apply","arguments","Constructor","getBuiltIn","classof","wellKnownSymbol","TO_STRING_TAG","test","String","toString","path","ITERATOR","SAFE_CLOSING","called","iteratorWithReturn","next","done","Array","from","SKIP_CLOSING","ITERATION_SUPPORT","getOwnPropertySymbols","anObject","isArrayIteratorMethod","toLength","bind","getIteratorMethod","callWithSafeIterationClosing","Result","stopped","result","iterate","iterable","AS_ENTRIES","IS_ITERATOR","iterator","iterFn","index","step","boundFunction","stop","WrappedWellKnownSymbolModule","toInteger","max","min","integer","createNonEnumerableProperty","setGlobal","copyConstructorProperties","isForced","options","source","FORCED","target","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","noTargetGet","forced","sham","SPECIES","CONSTRUCTOR_NAME","configurable","METHOD_REQUIRED","TAG","SET_METHOD","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","obj","_toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","isFinite","isPromise","then","catch","isArray","JSON","stringify","toNumber","makeMap","str","expectsLowerCase","map","create","list","split","i","toLowerCase","isReservedAttribute","remove","arr","item","indexOf","splice","hasOwnProperty","hasOwn","cached","cache","hit","camelizeRE","camelize","replace","_","toUpperCase","capitalize","charAt","slice","hyphenateRE","hyphenate","polyfillBind","ctx","boundFn","l","_length","nativeBind","Function","toArray","start","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","keysA","keys","keysB","looseIndexOf","once","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","charCodeAt","def","enumerable","writable","bailRE","RegExp","parsePath","segments","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Set","set","clear","warn","Dep","id","subs","addSub","sub","push","removeSub","depend","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","tag","data","children","text","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","args","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","dedupeHooks","hooks","mergeAssets","type","key$1","props","methods","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","def$$1","mergeOptions","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","capture","globalHandleError","invokeWithErrorHandling","handler","_handled","logError","console","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","p","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","resolveSlots","slots","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","needNormalization","listeners","injections","scopedSlots","_c","d","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","updateChildComponent","insert","_isMounted","callHook","queueActivatedComponent","activateChildComponent","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","cid","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","transformModel","nativeOn","abstract","installComponentHooks","_isComponent","_parentVnode","inlineTemplate","toMerge","_merged","mergeHook$1","f1","f2","callback","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","is","pre","applyNS","registerDeepBindings","force","style","class","initRender","_vnode","parentVnode","_renderChildren","parentData","_parentListeners","currentRenderingInstance","renderMixin","Vue","$nextTick","_render","ref","ensureCtor","comp","base","__esModule","toStringTag","factory","errorComp","resolved","owner","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","$forceUpdate","clearTimeout","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","updateComponentListeners","remove$1","$off","_target","onceHandler","oldListeners","eventsMixin","hookRE","$once","i$1","cbs","$emit","setActiveInstance","prevActiveInstance","initLifecycle","$children","$refs","_watcher","_inactive","_directInactive","_isBeingDestroyed","lifecycleMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","teardown","_watchers","_data","mountComponent","el","updateComponent","Watcher","before","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","$attrs","$listeners","propKeys","_propKeys","isInInactiveTree","direct","handlers","j","queue","activatedChildren","waiting","flushing","resetSchedulerState","currentFlushTimestamp","getNow","now","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueWatcher","uid$2","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","parseInt","builtInComponents","initGlobalAPI","configDef","util","defineReactive","delete","observable","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","end","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","svgContainer","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","trim","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","pos","getBoundingClientRect","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","body","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","top","platformComponents","bitmap","defer","channel","port","html","location","clearImmediate","process","MessageChannel","Dispatch","ONREADYSTATECHANGE","runner","listener","post","postMessage","protocol","host","port2","port1","onmessage","importScripts","NATIVE_WEAK_MAP","objectHas","sharedKey","WeakMap","enforce","getterFor","TYPE","state","wmget","wmhas","wmset","metadata","STATE","Iterators","objectKeys","Properties","check","globalThis","self","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","iterated","string","point","postfix","random","$","createIteratorConstructor","getPrototypeOf","setPrototypeOf","setToStringTag","IS_PURE","IteratorsCore","IteratorPrototype","BUGGY_SAFARI_ITERATORS","KEYS","VALUES","ENTRIES","returnThis","Iterable","NAME","IteratorConstructor","DEFAULT","IS_SET","CurrentIteratorPrototype","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","proto","nativeDefineProperty","Attributes","originalArray","C","propertyIsEnumerable","UNSCOPABLES","ArrayPrototype","defaultConstructor","S","documentCreateElement","IE_PROTO","PROTOTYPE","Empty","createDict","iframeDocument","iframe","lt","script","gt","js","contentWindow","open","write","close","F","versions","v8","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","fromIndex","includes","requireObjectCoercible","DOMIterables","COLLECTION_NAME","Collection","CollectionPrototype","copyright","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","CORRECT_PROTOTYPE_GETTER","ObjectPrototype","IndexedObject","nativeAssign","assign","A","B","alphabet","chr","T","argumentsLength","propertyKey","nativeFunctionToString","enforceInternalState","TEMPLATE","unsafe","simple","nativePropertyIsEnumerable","NASHORN_BUG","1","V","input","PREFERRED_STRING","valueOf","SHARED","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","EXISTS","nativeObjectCreate","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","wrappedWellKnownSymbolModule","$forEach","HIDDEN","SYMBOL","TO_PRIMITIVE","$Symbol","nativeJSONStringify","nativeGetOwnPropertyNames","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","wrap","description","isSymbol","$defineProperty","$defineProperties","properties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","$getOwnPropertyDescriptor","$getOwnPropertyNames","names","IS_OBJECT_PROTOTYPE","keyFor","sym","useSetter","useSimple","replacer","$replacer","windowNames","getWindowNames","classofRaw","CORRECT_ARGUMENTS","tryGet","callee","addToUnscopables","ARRAY_ITERATOR","kind","Arguments","replacement","feature","detection","POLYFILL","NATIVE","variable","returnMethod","V8_VERSION","METHOD_NAME","array","foo","wrapConstructor","NativeConstructor","Wrapper","USE_NATIVE","VIRTUAL_PROTOTYPE","nativeProperty","resultProperty","PROTO","nativeSource","targetPrototype","real","NativePromise","speciesConstructor","promiseResolve","onFinally","isFunction","x","PrototypeOfArrayIteratorPrototype","arrayIterator","FunctionPrototype","FunctionPrototypeToString","nameRE","flush","head","toggle","promise","macrotask","WebKitMutationObserver","IS_NODE","queueMicrotaskDescriptor","queueMicrotask","domain","exit","task","_typeof2","_typeof","g","CONVERT_TO_STRING","first","second","position","size","codeAt","__mxOutput","mxClient","VERSION","IS_IE","IS_IE6","IS_IE11","IS_EDGE","IS_QUIRKS","documentMode","IS_EM","VML_PREFIX","OFFICE_PREFIX","IS_NS","IS_OP","IS_OT","IS_SF","IS_IOS","IS_GC","IS_CHROMEAPP","chrome","app","runtime","IS_FF","IS_MT","IS_VML","appName","IS_SVG","NO_FO","IS_WIN","appVersion","IS_MAC","IS_CHROMEOS","IS_TOUCH","documentElement","IS_POINTER","PointerEvent","IS_LOCAL","href","defaultBundles","isBrowserSupported","link","rel","doc","getElementsByTagName","loadResources","lan","mxResources","mxLoadResources","mxForceIncludes","mxResourceExtension","mxLoadStylesheets","mxBasePath","substring","basePath","mxImageBasePath","imageBasePath","mxLanguage","language","userLanguage","mxDefaultLanguage","defaultLanguage","mxLanguages","languages","namespaces","styleSheets","styleSheet","createStyleSheet","mxLog","consoleName","TRACE","DEBUG","WARN","buffer","title","table","tbody","tr","td","verticalAlign","textarea","height","resize","compatMode","width","addButton","evt","content","mxUtils","getInnerHtml","debug","copy","alert","popup","w","innerHeight","innerWidth","clientHeight","clientWidth","mxWindow","setMaximizable","setScrollable","setResizable","setClosable","destroyOnClose","elt","getElement","resizeHandler","sender","addListener","mxEvent","RESIZE_END","MAXIMIZE","NORMALIZE","writeln","lab","funct","button","isVisible","setVisible","visible","t0","dt","visibility","scrollTop","scrollHeight","mxObjectIdentity","FIELD_NAME","ctor","getFunctionName","mxDictionary","put","previous","getKeys","getValues","visit","visitor","resources","extension","resourcesEncoded","loadDefaultBundle","loadSpecialBundle","isLanguageSupported","getDefaultBundle","basename","getSpecialBundle","dash","mxConstants","NONE","defaultBundle","specialBundle","req","parse","getText","load","isReady","lines","idx","unescape","defaultValue","replacePlaceholders","mxPoint","y","mxRectangle","equals","setRect","getCenterX","getCenterY","rect","minX","minY","maxX","maxY","intersect","r1","r2","b1","b2","grow","amount","getPoint","rotate90","t","fromRectangle","mxEffects","animateChanges","graph","changes","maxStep","animate","isRequired","mxGeometryChange","mxTerminalChange","mxValueChange","mxChildChange","mxStyleChange","getView","getState","cell","setOpacity","shape","scale","geometry","sx","sy","cellRenderer","redraw","cascadeOpacity","opacity","childCount","getChildCount","getChildAt","childState","edges","getEdges","edgeState","fadeOut","isEnabled","errorResource","closeResource","errorImage","removeCursors","element","cursor","getCurrentStyle","currentStyle","parseCssNumber","setPrefixedStyle","prefix","hasScrollbars","overflow","scope","eval","expr","_mxJavaScriptExpression","message","findNode","NODETYPE_ELEMENT","ltrim","idx2","isNode","nodeName","attributeName","attributeValue","isAncestorNode","getChildNodes","importNode","allChildren","attributes","createXmlDocument","implementation","createDocument","ActiveXObject","parseXml","DOMParser","xml","parser","parseFromString","validateOnParse","resolveExternals","loadXML","clearSelection","selection","empty","getSelection","removeAllRanges","getPrettyXml","tab","indent","NODETYPE_TEXT","getTextContent","htmlEntities","removeWhitespace","previousSibling","newline","isVml","tagUrn","getXml","linefeed","XMLSerializer","xmlSerializer","serializeToString","extractTextWithWhitespace","elems","blocks","doExtract","elts","elem","nodeValue","replaceTrailingNewlines","innerText","serializer","getOuterHtml","outerHTML","br","count","label","para","addTransparentBackgroundFilter","linkAction","editor","action","pad","execute","linkInvoke","functName","color","textDecoration","paddingLeft","getDocumentSize","fit","ds","offsetLeft","offsetWidth","offset","getDocumentScrollOrigin","sl","st","right","offsetTop","bottom","url","mxXmlRequest","send","onload","onerror","binary","ontimeout","setBinary","getAll","urls","remain","errors","status","getStatus","submit","simulate","loadInto","onreadystatechange","readyState","getNumber","getColor","transients","equalPoints","equalEntries","removeDuplicates","dict","superCtor","output","toRadians","deg","PI","toDegree","rad","arcToCurves","x0","y0","angle","largeArcFlag","sweepFlag","fS","psai","abs","sds","cty","cpsi","cos","spsi","sin","rxd","ryd","rxdd","rydd","r1x","r2y","lamda","sqrt","seif","txd","tyd","tx","ty","atan2","s1","dr","sse","seg","segr","cpsir1","cpsir2","spsir1","spsir2","mc","ms","x2","y2","x3","y3","getBoundingBox","rotation","cx","p1","p2","p3","p4","getRotatedPoint","pt","x1","y1","getPortConstraints","terminal","edge","STYLE_PORT_CONSTRAINT","STYLE_SOURCE_PORT_CONSTRAINT","STYLE_TARGET_PORT_CONSTRAINT","directions","returnValue","DIRECTION_MASK_NONE","constraintRotationEnabled","STYLE_PORT_CONSTRAINT_ROTATION","STYLE_ROTATION","quad","DIRECTION_NORTH","DIRECTION_MASK_NORTH","DIRECTION_MASK_EAST","DIRECTION_MASK_SOUTH","DIRECTION_MASK_WEST","DIRECTION_WEST","DIRECTION_SOUTH","DIRECTION_EAST","reversePortConstraints","constraint","findNearestSegment","absolutePoints","dist","ptSegDistSq","getDirectedBounds","m","flipH","flipV","STYLE_DIRECTION","STYLE_FLIPH","STYLE_FLIPV","round","m2","getPerimeterPoint","pts","center","intersection","ip","distSq","rectangleIntersectsSegment","bounds","contains","intersects","tw","th","rw","rh","rx","ry","intersectsHotspot","hotspot","cy","STYLE_STARTSIZE","view","STYLE_HORIZONTAL","alpha","getOffset","container","scrollOffset","fixed","r","scrollLeft","wnd","defaultView","parentWindow","pageXOffset","pageYOffset","getScrollOrigin","includeAncestors","includeDocument","origin","convertPoint","chars","rtrim","isNumeric","isInteger","mod","denom","nume_a","nume_b","ua","ub","px","py","projlenSq","dotprod","lenSq","ptLineDist","relativeCcw","ccw","createImage","imageNode","borderStyle","sortCells","cells","ascending","lookup","o1","o2","mxCellPath","PATH_SEPARATOR","compare","getStylename","pairs","stylename","getStylenames","indexOfStylename","tokens","addStylename","removeStylename","removeAllStylenames","setCellStyles","beginUpdate","setStyle","endUpdate","isValue","sep","setCellStyleFlags","flag","setStyleFlag","cont","getAlignmentAsPoint","align","valign","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_MIDDLE","ALIGN_BOTTOM","getSizeForString","fontSize","fontFamily","textWidth","DEFAULT_FONTSIZE","DEFAULT_FONTFAMILY","div","lineHeight","LINE_HEIGHT","zoom","whiteSpace","getViewXml","getModel","getRoot","eventsEnabled","isEventsEnabled","setEventsEnabled","drawPane","overlayPane","dialect","DIALECT_SVG","NS_SVG","canvas","translate","getTranslate","temp","mxTemporaryCellStates","enc","mxCodec","encode","getScaleForPageCount","pageCount","pageFormat","border","PAGE_FORMAT_A4_PORTRAIT","availablePageWidth","availablePageHeight","graphBounds","getGraphBounds","sc","getScale","graphWidth","graphHeight","pageFormatAspectRatio","graphAspectRatio","pagesAspectRatio","pageRoot","pagesAspectRatioSqrt","numRowPages","numColumnPages","scaleChange","currentTotalPages","numLoops","roundRowDownProportion","roundColumnDownProportion","posterWidth","links","outer","ownerSVGElement","minWidth","minHeight","printScreen","print","focus","isInternalWindow","prompt","confirm","icon","padding","img","makeDraggable","graphF","dragElement","autoscroll","scalePreview","highlightDropTargets","getDropTarget","dragSource","mxDragSource","dragOffset","TOOLTIP_VERTICAL_OFFSET","setGuidesEnabled","getGraphForEvent","createDragElement","createPreviewElement","DEFAULT_HOTSPOT","MIN_HOTSPOT_SIZE","MAX_HOTSPOT_SIZE","RENDERING_HINT_EXACT","RENDERING_HINT_FASTER","RENDERING_HINT_FASTEST","DIALECT_VML","DIALECT_MIXEDHTML","DIALECT_PREFERHTML","DIALECT_STRICTHTML","NS_XHTML","NS_XLINK","SHADOWCOLOR","VML_SHADOWCOLOR","SHADOW_OFFSET_X","SHADOW_OFFSET_Y","SHADOW_OPACITY","NODETYPE_ATTRIBUTE","NODETYPE_CDATA","NODETYPE_ENTITY_REFERENCE","NODETYPE_ENTITY","NODETYPE_PROCESSING_INSTRUCTION","NODETYPE_COMMENT","NODETYPE_DOCUMENT","NODETYPE_DOCUMENTTYPE","NODETYPE_DOCUMENT_FRAGMENT","NODETYPE_NOTATION","DEFAULT_VALID_COLOR","DEFAULT_INVALID_COLOR","OUTLINE_HIGHLIGHT_COLOR","OUTLINE_HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_STROKEWIDTH","HIGHLIGHT_SIZE","HIGHLIGHT_OPACITY","CURSOR_MOVABLE_VERTEX","CURSOR_MOVABLE_EDGE","CURSOR_LABEL_HANDLE","CURSOR_TERMINAL_HANDLE","CURSOR_BEND_HANDLE","CURSOR_VIRTUAL_BEND_HANDLE","CURSOR_CONNECT","HIGHLIGHT_COLOR","CONNECT_TARGET_COLOR","INVALID_CONNECT_TARGET_COLOR","DROP_TARGET_COLOR","VALID_COLOR","INVALID_COLOR","EDGE_SELECTION_COLOR","VERTEX_SELECTION_COLOR","VERTEX_SELECTION_STROKEWIDTH","EDGE_SELECTION_STROKEWIDTH","VERTEX_SELECTION_DASHED","EDGE_SELECTION_DASHED","GUIDE_COLOR","GUIDE_STROKEWIDTH","OUTLINE_COLOR","OUTLINE_STROKEWIDTH","HANDLE_SIZE","LABEL_HANDLE_SIZE","HANDLE_FILLCOLOR","HANDLE_STROKECOLOR","LABEL_HANDLE_FILLCOLOR","CONNECT_HANDLE_FILLCOLOR","LOCKED_HANDLE_FILLCOLOR","OUTLINE_HANDLE_FILLCOLOR","OUTLINE_HANDLE_STROKECOLOR","DEFAULT_TEXT_DIRECTION","WORD_WRAP","ABSOLUTE_LINE_HEIGHT","DEFAULT_FONTSTYLE","DEFAULT_STARTSIZE","DEFAULT_MARKERSIZE","DEFAULT_IMAGESIZE","ENTITY_SEGMENT","RECTANGLE_ROUNDING_FACTOR","LINE_ARCSIZE","ARROW_SPACING","ARROW_WIDTH","ARROW_SIZE","PAGE_FORMAT_A4_LANDSCAPE","PAGE_FORMAT_LETTER_PORTRAIT","PAGE_FORMAT_LETTER_LANDSCAPE","STYLE_PERIMETER","STYLE_SOURCE_PORT","STYLE_TARGET_PORT","STYLE_OPACITY","STYLE_FILL_OPACITY","STYLE_STROKE_OPACITY","STYLE_TEXT_OPACITY","STYLE_TEXT_DIRECTION","STYLE_OVERFLOW","STYLE_ORTHOGONAL","STYLE_EXIT_X","STYLE_EXIT_Y","STYLE_EXIT_DX","STYLE_EXIT_DY","STYLE_EXIT_PERIMETER","STYLE_ENTRY_X","STYLE_ENTRY_Y","STYLE_ENTRY_DX","STYLE_ENTRY_DY","STYLE_ENTRY_PERIMETER","STYLE_WHITE_SPACE","STYLE_FILLCOLOR","STYLE_POINTER_EVENTS","STYLE_SWIMLANE_FILLCOLOR","STYLE_MARGIN","STYLE_GRADIENTCOLOR","STYLE_GRADIENT_DIRECTION","STYLE_STROKECOLOR","STYLE_SEPARATORCOLOR","STYLE_STROKEWIDTH","STYLE_ALIGN","STYLE_VERTICAL_ALIGN","STYLE_LABEL_WIDTH","STYLE_LABEL_POSITION","STYLE_VERTICAL_LABEL_POSITION","STYLE_IMAGE_ASPECT","STYLE_IMAGE_ALIGN","STYLE_IMAGE_VERTICAL_ALIGN","STYLE_GLASS","STYLE_IMAGE","STYLE_IMAGE_WIDTH","STYLE_IMAGE_HEIGHT","STYLE_IMAGE_BACKGROUND","STYLE_IMAGE_BORDER","STYLE_NOLABEL","STYLE_NOEDGESTYLE","STYLE_LABEL_BACKGROUNDCOLOR","STYLE_LABEL_BORDERCOLOR","STYLE_LABEL_PADDING","STYLE_INDICATOR_SHAPE","STYLE_INDICATOR_IMAGE","STYLE_INDICATOR_COLOR","STYLE_INDICATOR_STROKECOLOR","STYLE_INDICATOR_GRADIENTCOLOR","STYLE_INDICATOR_SPACING","STYLE_INDICATOR_WIDTH","STYLE_INDICATOR_HEIGHT","STYLE_INDICATOR_DIRECTION","STYLE_SHADOW","STYLE_SEGMENT","STYLE_ENDARROW","STYLE_STARTARROW","STYLE_ENDSIZE","STYLE_SWIMLANE_LINE","STYLE_ENDFILL","STYLE_STARTFILL","STYLE_DASHED","STYLE_DASH_PATTERN","STYLE_FIX_DASH","STYLE_ROUNDED","STYLE_CURVED","STYLE_ARCSIZE","STYLE_ABSOLUTE_ARCSIZE","STYLE_SOURCE_PERIMETER_SPACING","STYLE_TARGET_PERIMETER_SPACING","STYLE_PERIMETER_SPACING","STYLE_SPACING","STYLE_SPACING_TOP","STYLE_SPACING_LEFT","STYLE_SPACING_BOTTOM","STYLE_SPACING_RIGHT","STYLE_ANCHOR_POINT_DIRECTION","STYLE_ELBOW","STYLE_FONTCOLOR","STYLE_FONTFAMILY","STYLE_FONTSIZE","STYLE_FONTSTYLE","STYLE_ASPECT","STYLE_AUTOSIZE","STYLE_FOLDABLE","STYLE_EDITABLE","STYLE_BACKGROUND_OUTLINE","STYLE_BENDABLE","STYLE_MOVABLE","STYLE_RESIZABLE","STYLE_RESIZE_WIDTH","STYLE_RESIZE_HEIGHT","STYLE_ROTATABLE","STYLE_CLONEABLE","STYLE_DELETABLE","STYLE_SHAPE","STYLE_EDGE","STYLE_JETTY_SIZE","STYLE_SOURCE_JETTY_SIZE","STYLE_TARGET_JETTY_SIZE","STYLE_LOOP","STYLE_ORTHOGONAL_LOOP","STYLE_ROUTING_CENTER_X","STYLE_ROUTING_CENTER_Y","FONT_BOLD","FONT_ITALIC","FONT_UNDERLINE","SHAPE_RECTANGLE","SHAPE_ELLIPSE","SHAPE_DOUBLE_ELLIPSE","SHAPE_RHOMBUS","SHAPE_LINE","SHAPE_IMAGE","SHAPE_ARROW","SHAPE_ARROW_CONNECTOR","SHAPE_LABEL","SHAPE_CYLINDER","SHAPE_SWIMLANE","SHAPE_CONNECTOR","SHAPE_ACTOR","SHAPE_CLOUD","SHAPE_TRIANGLE","SHAPE_HEXAGON","ARROW_CLASSIC","ARROW_CLASSIC_THIN","ARROW_BLOCK","ARROW_BLOCK_THIN","ARROW_OPEN","ARROW_OPEN_THIN","ARROW_OVAL","ARROW_DIAMOND","ARROW_DIAMOND_THIN","ALIGN_LEFT","ALIGN_TOP","TEXT_DIRECTION_DEFAULT","TEXT_DIRECTION_AUTO","TEXT_DIRECTION_LTR","TEXT_DIRECTION_RTL","DIRECTION_MASK_ALL","ELBOW_VERTICAL","ELBOW_HORIZONTAL","EDGESTYLE_ELBOW","EDGESTYLE_ENTITY_RELATION","EDGESTYLE_LOOP","EDGESTYLE_SIDETOSIDE","EDGESTYLE_TOPTOBOTTOM","EDGESTYLE_ORTHOGONAL","EDGESTYLE_SEGMENT","PERIMETER_ELLIPSE","PERIMETER_RECTANGLE","PERIMETER_RHOMBUS","PERIMETER_HEXAGON","PERIMETER_TRIANGLE","mxEventObject","mxMouseEvent","sourceState","mxEventSource","eventSource","setEventSource","consumed","getName","getProperties","getProperty","isConsumed","consume","graphX","graphY","getEvent","getSource","isSource","getX","getClientX","getY","getClientY","getGraphX","getGraphY","getCell","isPopupTrigger","preventDefault","isMouseEvent","eventListeners","getEventSource","removeListener","fireEvent","listen","updateListenerList","eventName","mxListenerList","entry","attachEvent","updateListener","listenerCount","detachEvent","removeAllListeners","addGestureListeners","startListener","moveListener","endListener","removeGestureListeners","redirectMouseEvents","down","move","up","dblClick","fireMouseEvent","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","release","addMouseWheelListener","wheelHandler","delta","detail","wheelDelta","disableContextMenu","srcElement","isTouchEvent","pointerType","MSPOINTER_TYPE_TOUCH","mozInputSource","isPenEvent","MSPOINTER_TYPE_PEN","isMultiTouchEvent","touches","MSPOINTER_TYPE_MOUSE","isLeftMouseButton","buttons","which","isMiddleMouseButton","isRightMouseButton","isControlDown","isShiftDown","isMetaDown","isAltDown","shiftKey","ctrlKey","metaKey","getMainEvent","changedTouches","clientX","clientY","stopPropagation","cancelBubble","LABEL_HANDLE","ROTATION_HANDLE","CUSTOM_HANDLE","VIRTUAL_HANDLE","ACTIVATE","RESIZE_START","RESIZE","MOVE_START","MOVE","MOVE_END","PAN_START","PAN","PAN_END","MINIMIZE","HIDE","SHOW","CLOSE","DESTROY","REFRESH","SIZE","SELECT","FIRED","FIRE_MOUSE_EVENT","GESTURE","TAP_AND_HOLD","GET","RECEIVE","CONNECT","DISCONNECT","SUSPEND","RESUME","MARK","ROOT","POST","OPEN","SAVE","BEFORE_ADD_VERTEX","ADD_VERTEX","AFTER_ADD_VERTEX","DONE","EXECUTE","EXECUTED","BEGIN_UPDATE","START_EDIT","END_UPDATE","END_EDIT","BEFORE_UNDO","UNDO","REDO","CHANGE","NOTIFY","LAYOUT_CELLS","CLICK","SCALE","TRANSLATE","SCALE_AND_TRANSLATE","UP","DOWN","ADD","REMOVE","CLEAR","ADD_CELLS","CELLS_ADDED","MOVE_CELLS","CELLS_MOVED","RESIZE_CELLS","CELLS_RESIZED","TOGGLE_CELLS","CELLS_TOGGLED","ORDER_CELLS","CELLS_ORDERED","REMOVE_CELLS","CELLS_REMOVED","GROUP_CELLS","UNGROUP_CELLS","REMOVE_CELLS_FROM_PARENT","FOLD_CELLS","CELLS_FOLDED","ALIGN_CELLS","LABEL_CHANGED","CONNECT_CELL","CELL_CONNECTED","SPLIT_EDGE","FLIP_EDGE","START_EDITING","EDITING_STARTED","EDITING_STOPPED","ADD_OVERLAY","REMOVE_OVERLAY","UPDATE_CELL_SIZE","ESCAPE","DOUBLE_CLICK","START","RESET","username","password","withCredentials","request","decodeSimulateValues","isBinary","responseText","getDocumentElement","responseXML","XMLHttpRequest","overrideMimeType","onreadystatechaange","setRequestHeaders","setRequestHeader","onbeforeunload","form","pars","decodeURIComponent","mxClipboard","STEPSIZE","insertCount","setCells","getCells","isEmpty","cut","removeCells","getSelectionCells","getExportableCells","getTopmostCells","cloneCells","paste","getImportableCells","getDefaultParent","importCells","setSelectionCells","minimizable","movable","replaceNode","installMaximizeHandler","installMinimizeHandler","installCloseHandler","setMinimizable","setTitle","installMoveHandler","replaceChild","mxForm","className","mxImage","mxDivResizer","resizeWidth","resizeHeight","handlingResize","dropHandler","mouseDown","eventConsumer","evtName","me","mxToolbar","mxUndoableEdit","significant","mxUndoManager","closeImage","minimizeImage","normalizeImage","maximizeImage","resizeImage","minimumSize","contentHeightCorrection","touchAction","contentWrapper","activator","hide","scrollable","activeWindow","zIndex","previousWindow","isResizable","resizable","startX","startY","dragHandler","setSize","minimize","getMinimumSize","marginLeft","minimized","maxDisplay","maximize","minSize","maximizable","maximized","minDisplay","docHeight","setLocation","closeImg","setImage","image","marginRight","marginTop","closable","getTable","addButtons","okFunct","cancelFunct","addText","addField","addCheckbox","checked","addTextarea","rows","addCombo","isMultiSelect","select","addOption","combo","isSelected","getDocumentWidth","getDocumentHeight","previewElement","enabled","currentGraph","currentDropTarget","currentPoint","currentGuide","currentHighlight","guidesEnabled","gridEnabled","dragElementZIndex","dragElementOpacity","checkEventSource","setEnabled","isGuidesEnabled","isGridEnabled","setGridEnabled","getCellAt","isActive","mouseMoveHandler","reset","dragExit","removeDragElement","removeListeners","stopDrag","startDrag","mouseMove","mouseUpHandler","mouseUp","pointerEvents","getElementForEvent","elementFromPoint","graphContainsEvent","dragEnter","dragOver","drop","isMouseDown","isMouseTrigger","mxGuide","graphHandler","getGuideStates","mxCellHighlight","panDx","panDy","autoScroll","scrollPointToVisible","autoExtend","isDropEnabled","highlight","isGridEnabledEvent","hideGuide","isEnabledForEvent","off","gridSize","snap","previewOffset","dropTarget","noReset","updateDefaultMode","addItem","pressedIcon","factoryMethod","initialClassName","mouseHandler","backgroundColor","menu","mxPopupMenu","currentImg","isMenuShowing","hideMenu","addActionCombo","addSwitchMode","altIcon","selectedMode","defaultMode","selectMode","addMode","defaultFunction","domNode","resetMode","addSeparator","addBreak","addLine","hr","undone","redone","isSignificant","die","undo","redo","history","indexOfNextAdd","canUndo","edit","canRedo","undoableEditHappened","undoableEdit","edits","mxUrlConverter","mxPanningManager","thread","tdx","tdy","t0x","t0y","scrollbars","mouseListener","addMouseListener","mouseUpListener","createThread","setInterval","panGraph","getDx","getDy","panTo","handleMouseOut","damper","clearInterval","setTranslate","removeMouseListener","mxAutoSaveManager","changeHandler","graphModelChanged","setGraph","mxAnimation","mxMorphing","steps","ease","mxImageBundle","alt","images","mxImageExport","mxAbstractCanvas2D","converter","createUrlConverter","mxXmlCanvas2D","root","writeDefaults","mxSvgCanvas2D","styleEnabled","gradients","defs","createStyle","baseUrl","baseDomain","updateBaseUrl","pathname","lastIndexOf","getBaseUrl","setBaseUrl","getBaseDomain","setBaseDomain","isRelativeUrl","convert","submenuImage","useLeftButtonForPopup","itemCount","autoExpand","smartSeparators","labels","iconCls","willAddSeparator","containsItems","col1","col2","col3","paddingRight","textAlign","createSubmenu","currentSelection","eventReceiver","activeRow","hideSubmenu","showSubmenu","createRange","addCheckmark","backgroundImage","backgroundRepeat","backgroundPosition","row","showMenu","autoSaveDelay","autoSaveThrottle","autoSaveThreshold","ignoredChanges","lastSnapshot","save","isRunning","startAnimation","updateAnimation","stopAnimation","mxCellStatePreview","animateCell","recurse","getDelta","isVertex","moveState","stopRecursion","getOriginForCell","getParent","geo","getCellGeometry","relative","pgeo","putImage","getImage","includeOverlays","drawState","visitStatesRecursive","drawCellState","drawOverlays","getLinkForCellState","setLink","drawShape","drawText","mxShape","checkBounds","paint","restore","overlays","states","rotateHtml","lastX","lastY","moveOp","lineOp","quadOp","curveOp","closeOp","createState","fillAlpha","strokeAlpha","fillColor","gradientFillAlpha","gradientColor","gradientAlpha","gradientDirection","strokeColor","strokeWidth","dashed","dashPattern","fixDash","lineCap","lineJoin","miterLimit","fontColor","fontBackgroundColor","fontBorderColor","fontStyle","shadow","shadowColor","shadowAlpha","shadowDx","shadowDy","rotationCx","rotationCy","format","addOp","rotatePoint","theta","rotate","setAlpha","setFillAlpha","setStrokeAlpha","setFillColor","setGradient","color1","color2","direction","alpha1","alpha2","setStrokeColor","setStrokeWidth","setDashed","setDashPattern","setLineCap","setLineJoin","setMiterLimit","setFontColor","setFontBackgroundColor","setFontBorderColor","setFontSize","setFontFamily","setFontStyle","setShadow","setShadowColor","setShadowAlpha","setShadowOffset","begin","moveTo","lineTo","quadTo","curveTo","arcTo","curves","textEnabled","compressed","toFixed","roundrect","ellipse","aspect","clip","stroke","fill","fillAndStroke","useDomParser","matchHtmlAlignment","foEnabled","foAltText","foOffset","textOffset","imageOffset","strokeTolerance","minStrokeWidth","refCount","blockImagePointerEvents","lineHeightCorrection","pointerEventsValue","fontMetricsPadding","cacheOffsetSize","createAlternateContent","fo","createGradientId","getSvgGradient","gradient","tmpId","getElementById","createSvgGradient","op","addNode","filled","stroked","updateFill","updateStroke","createShadow","createTolerance","originalRoot","getCurrentStrokeWidth","sw","updateStrokeAttributes","createDashPattern","pat","tol","convertHtml","xd","xb","adoptNode","ta","createDiv","lh","invalidateCachedOffsetSize","mxCachedOffsetWidth","mxCachedFinalOffsetWidth","mxCachedFinalOffsetHeight","updateText","group","maxHeight","maxWidth","ow","oh","padX","sizeDiv","padY","wordWrap","ws","div2","padDx","plainText","createClip","updateFont","anchor","textHeight","addTextBackground","bbox","getBBox","ie","fontWeight","mxVmlCanvas2D","setStates","stencil","initStyles","mxStencil","desc","parseDescription","parseConstraints","rotatedHtmlBackground","vmlScale","createVmlElement","coordsize","strokeweight","strokecolor","createStroke","createFill","createTransparentFill","flip","endcap","joinstyle","miterlimit","dashstyle","getVmlDashStyle","tok","createShadowStroke","createShadowFill","cpx0","cpy0","qpx1","qpy1","cpx3","cpy3","cpx1","cpy1","cpx2","cpy2","createRect","box","margin","inner","rot","real_cos","real_sin","top_fix","left_fix","divParent","textpathok","tp","horizontal","vertical","guideX","guideY","rounded","getGuideTolerance","createGuideShape","guide","mxPolyline","isDashed","isStateIgnored","trx","overrideX","stateX","valueX","overrideY","stateY","valueY","tt","ttX","ttY","middle","snapX","override","getOverlayPane","snapY","points","getGuideColor","scrollWidth","antiAlias","minSvgStrokeWidth","boundingBox","svgStrokeTolerance","svgPointerEvents","shapePointerEvents","stencilPointerEvents","outline","useSvgBoundingBox","strokewidth","fillOpacity","strokeOpacity","isParseVml","isHtmlAllowed","getSvgScreenOffset","createSvg","createHtml","createVml","reconfigure","updateBoundsFromPoints","redrawShape","redrawHtmlShape","updateBoundingBox","lastChild","getLabelBounds","isPaintBoundsInverted","getLabelMargins","createVmlGroup","createCanvas","insertAdjacentHTML","destroyCanvas","createSvgCanvas","updateVmlContainer","createVmlCanvas","updateHtmlBounds","updateHtmlFilters","updateHtmlColors","isShadow","east","south","west","north","borderColor","borderWidth","setTransparentBackgroundImage","mxRefCount","releaseSvgGradients","oldGradients","strokeDrawn","updateTransform","configureCanvas","bg","bb","createBoundingBox","createTransparentSvgRectangle","paintEdgeShape","paintVertexShape","getGradientBounds","getShapeRotation","paintBackground","paintForeground","getArcSize","paintGlassEffect","arc","isRounded","addPoints","arcSize","initialMove","pe","p0","wp","nx1","ny1","nx2","ny2","resetStyles","spacing","startSize","endSize","startArrow","endArrow","glass","setCursor","getCursor","isRoundable","augmentBoundingBox","getRotation","getTextRotation","mxText","verticalTextRotation","grads","defaultLocalized","allowEval","constraints","w0","h0","bgNode","fgNode","conns","parseConstraint","perimeter","mxConnectionConstraint","evaluateTextAttribute","attribute","evaluateAttribute","loc","computeAspect","minScale","drawChildren","disableShadow","drawNode","inverse","parseRegularly","pointCount","segs","childName","ps","arcsize","factor","mxStencilRegistry","getStencil","stencils","addStencil","mxMarker","markers","addMarker","createMarker","unitX","unitY","mxActor","mxCloud","mxRectangleShape","mxEllipse","mxDoubleEllipse","mxRhombus","mxArrow","arrowWidth","mxArrowConnector","arrowSpacing","family","spacingTop","spacingRight","spacingBottom","spacingLeft","background","clipped","labelPadding","textDirection","updateMargin","mxTriangle","mxHexagon","mxLine","mxImageShape","mxLabel","mxCylinder","mxConnector","mxSwimlane","mxGraphLayout","WeightedCellSorter","weightedValue","mxStackLayout","mxPartitionLayout","mxCompactTreeLayout","invert","mxRadialTreeLayout","mxFastOrganicLayout","mxCircleLayout","radius","mxParallelEdgeLayout","mxCompositeLayout","layouts","master","mxEdgeLabelLayout","mxGraphAbstractHierarchyCell","mxGraphHierarchyNode","connectsAsTarget","connectsAsSource","mxGraphHierarchyEdge","ids","mxGraphHierarchyModel","layout","vertices","roots","tightenToSource","getGraph","vertexMapper","edgeMapper","maxRank","internalVertices","getChildVertices","SOURCESCANSTARTRANK","createInternalCells","internalEdge","realEdges","realEdge","targetCell","getVisibleTerminal","internalTargetCell","mxSwimlaneModel","mxHierarchicalLayoutStage","mxMedianHybridCrossingReduction","MedianCellSorter","mxMinimumCycleRemover","mxCoordinateAssignment","intraCellSpacing","interRankCellSpacing","orientation","initialX","parallelEdgeSpacing","mxSwimlaneOrdering","mxHierarchicalLayout","deterministic","createArrow","widthFactor","endOffsetX","endOffsetY","createOpenArrow","diamond","swFactor","tk","redrawPath","hw","hh","prev","paintLine","paintCurvedLine","ix","iy","arrow","nx","ny","basex","basey","floorx","floory","p0x","p0y","p1x","p1y","p2x","p2y","p3x","p3y","p5x","p5y","getEdgeWidth","isMarkerStart","getStartArrowWidth","isMarkerEnd","getEndArrowWidth","startWidth","endWidth","edgeWidth","openEnded","isOpenEnded","markerStart","markerEnd","isArrowRounded","i0","orthx","orthy","startNx","startNy","paintMarker","outStartX","outStartY","inEndX","inEndY","dx1","dy1","dist1","tmp1","dist2","strokeWidthFactor","angleFactor","outX","outY","inX","inY","c1x","c1y","c2x","c2y","inStartX","inStartY","ptX","ptY","widthArrowRatio","spaceX","spaceY","baseSpacingTop","baseSpacingBottom","baseSpacingLeft","baseSpacingRight","replaceLinefeeds","ignoreClippedStringSize","ignoreStringSize","textWidthPadding","lastValue","cacheEnabled","unscaledWidth","lastUnscaledWidth","realHtml","fmt","getAutoDirection","updateSize","textDiv","updateHtmlFilter","updateHtmlTransform","updateInnerHtml","divs","unrotatedBoundingBox","updateValue","bd","enableWrap","getSpacing","mid","preserveImageAspect","useVml","imageSize","indicatorSize","indicatorSpacing","indicatorShape","indicator","indicatorColor","indicatorStrokeColor","indicatorGradientColor","indicatorDirection","paintImage","paintIndicator","getImageBounds","getIndicatorBounds","indicatorImage","getCylinderSize","isForeground","sourceMarker","targetMarker","getTitleSize","isHorizontal","shapeVertical","realHorizontal","realFlipH","realFlipV","swimlaneLine","paintRoundedSwimlane","paintSwimlane","paintSeparator","paintDivider","useBoundingBox","moveCell","getConstraint","getCellStyle","vertex","directed","func","visited","edgeCount","getEdgeCount","getEdgeAt","getTerminal","isAncestor","traverseAncestors","isVertexMovable","isCellMovable","isVertexIgnored","isCellVisible","isEdgeIgnored","setEdgeStyleEnabled","setOrthogonalEdge","getParentOffset","parentGeo","getGeometry","setEdgePoints","mxGeometry","setRelative","parentOffset","setGeometry","setVertexLocation","getVertexBounds","dx0","dy0","arrangeGroups","topBorder","rightBorder","bottomBorder","leftBorder","updateGroupBounds","nudge","rankIndex","marginBottom","keepFirstLocation","resizeParent","resizeParentMax","resizeLast","borderCollapse","allowGaps","pstate","getIndex","getParentSize","isLayer","currentRoot","getLayoutCells","c1","c2","geo1","geo2","fillValue","isSwimlane","horz","childStyle","setChildGeometry","isCellCollapsed","updateParentGeometry","pgeo2","resizeVertices","other","getStartSize","maintainParentLocation","groupPadding","groupPaddingTop","groupPaddingRight","groupPaddingBottom","groupPaddingLeft","parentsChanged","moveTree","levelDistance","nodeDistance","resetEdges","prefHozEdgeSep","prefVertEdgeOff","minEdgeJetty","channelBuffer","edgeRouting","sortEdges","alignRanks","maxRankHeight","getConnections","findTreeRoots","parentX","parentY","dfs","findRankHeights","setCellHeights","horizontalLayout","verticalLayout","moveNode","adjustParents","localEdgeProcessing","sortOutgoingEdges","e1","e2","end1","end2","rank","createNode","out","attachParent","layoutLeaf","offsetX","offsetY","siblingOffset","contour","upperHead","createLine","lowerHead","upperTail","lowerTail","sum","merge","total","upper","lower","bridge","a1","a2","line1","line2","line","processNodeOutgoing","parentCell","sortedCells","sortingCriterion","availableWidth","requiredWidth","edgeSpacing","currentXOffset","currentYOffset","maxYOffset","parentBounds","childCell","childBounds","getEdgesBetween","newPoints","angleOffset","rootx","rooty","autoRadius","rowMinX","rowMaxX","rowMinCenX","rowMaxCenX","rowRadi","rootBounds","centerX","centerY","vertexBounds","calcRowDims","maxLeftGrad","maxRightGrad","leftGrad","rightGrad","xLeftLimit","xRightLimit","fullWidth","xProportion","totalTheta","averTheta","nextTheta","lastTheta","rowNum","rowHasChildren","useInputOrigin","disableEdgeStyle","forceConstant","forceConstantSquared","minDistanceLimit","maxDistanceLimit","minDistanceLimitSquared","initialTemp","temperature","maxIterations","iteration","vertexArray","dispX","dispY","cellLocation","radiusSquared","isMoveable","neighbours","indices","allowedToRun","initialBounds","getBoundingBoxFromGeometry","getOpposites","resetEdge","calcRepulsion","calcAttraction","calcPositions","reduceTemperature","minx","miny","moveCells","deltaLength","newXDisp","newYDisp","k","xDelta","yDelta","deltaLengthSquared","displacementX","displacementY","vertexCount","deltaLengthWithRadius","moveCircle","getRadius","circle","phi","findParallels","parallels","getEdgeId","trg","route","scx","scy","tcx","tcy","placeLabels","avoid","labRect","dy2","dx2","minRank","nextLayerConnectedCells","previousLayerConnectedCells","getNextLayerConnectedCells","layer","getPreviousLayerConnectedCells","getGeneralPurposeVariable","setGeneralPurposeVariable","setX","setY","hashCode","getRankValue","otherNode","getCoreCell","isReversed","ranks","dfsCount","undirectedEdges","directedEdges","initialRank","startNodes","internalNode","internalNodes","startNodesCopy","edgesToBeMarked","layerDeterminingEdges","allEdgesScanned","minimumLayer","removedCell","currentMaxLayer","fixRanks","rankList","rootsArray","oldRootsArray","parentToCellRankDifference","dfsRoots","trackAncestors","seenNodes","extendedDfs","connectingEdge","rootId","outgoingEdges","targetNode","ancestors","childHash","hashCodeLength","ranksPerGroup","swimlanes","swimlaneIndex","ii","maxChainDfs","lowerRank","upperRank","chainCount","slIndex","incomingEdges","nestedBestRanks","currentBestCrossings","iterationsWithoutImprovement","maxNoImprovementIterations","calculateCrossings","weightedMedian","transpose","candidateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","connectedCells","nodeIndices","connectedNode","otherCellRankPosition","firstIndex","treeSize","treeIndex","mainLoopIteration","improved","maxCount","orderedCells","tempRank","leftCellAboveConnections","leftCellBelowConnections","rightCellAboveConnections","rightCellBelowConnections","leftAbovePositions","leftBelowPositions","rightAbovePositions","rightBelowPositions","leftCell","rightCell","totalCurrentCrossings","totalSwitchedCrossings","ik","downwardSweep","medianRank","rankValue","numCellsForRank","medianValues","reservedPositions","nextLevelConnectedCells","nextRankValue","sorterEntry","medianValue","arrayCount","medianPoint","leftMedian","rightMedian","unseenNodesArray","unseenNodes","modelRoots","seenNodesCopy","jettyPositions","limitX","currentXDelta","widestRank","rankTopY","rankBottomY","widestRankValue","rankWidths","rankY","fineTuning","nextLayerConnectedCache","previousLayerConnectedCache","printStatus","initialCoords","minNode","bestXDelta","medianPos","minPath","setCellLocations","nodeList","nodeWrapper","maxTries","tolerance","cellWrapper","numNextLayerConnected","numPreviousLayerConnected","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","currentPosition","cellMedian","positionChanged","leftLimit","rankSize","rightLimit","connectedCell","connectedCellWrapper","rankMedianPosition","weightedValues","cellMap","currentCell","calculatedWeightedValue","numConnectionsNextLevel","leftBuffer","rightBuffer","collection","totalWeight","facade","calculateWidestRank","rankCoordinates","localX","boundsWarning","numEdges","lastRankMaxCellHeight","maxCellHeight","distanceToNextRank","referenceX","edgeStraight","refSegCount","upSegCount","downSegCount","upXPositions","downXPositions","currentX","nextX","repositionValid","rankArray","MAX_VALUE","edgeStyle","mxHierarchicalEdgeStyle","ORTHOGONAL","POLYLINE","CURVE","setEdgePosition","cellIndex","currentCells","currentRank","sorter","connectedEdgeCount","connectedEdges","connections","innerCell","connIndex","numActualEdges","parallelEdgeCount","jettys","layoutReversed","realSource","reversed","arrayOffset","jetty","modelSource","isPort","loopStart","loopLimit","loopDelta","positionX","topChannelY","bottomChannelY","modelTarget","realTarget","processReversedEdge","realCell","positionY","reversedOverSwimlane","cellId","STRAIGHT","mxSwimlaneLayout","mxGraphModel","currentEdit","createUndoableEdit","setRoot","mxRootChange","previousIndex","mxCollapseChange","collapsed","mxVisibleChange","mxCellAttributeChange","mxCell","onInit","moveParent","parentBorder","interHierarchySpacing","edgesCache","edgeSourceTermCache","edgesTargetTermCache","rootsCopy","findRoots","best","maxDiff","fanOut","fanIn","diff","cachedEdges","isCollapsed","terminalCache","term","hierarchyVertices","allVertexSet","filledVertexSet","filterDescendants","filledVertexSetEmpty","candidateRoots","vertexSet","cycleStage","layeringStage","crossingStage","placementStage","allVertices","currentComp","vertexID","edgeIsSource","netCount","isSource2","otherTerm","dummyVertexWidth","dummyVertices","getChildCells","insertVertex","layoutBounds","lane","childrenY","maxChildrenY","newGeo","leftGroupBorder","isValidAncestor","laneCounter","otherVertex","otherIndex","maintainEdgeParent","ignoreRelativeEdgeParent","createIds","nextId","updateLevel","endingUpdate","createRoot","isCreateIds","setCreateIds","filterCells","getDescendants","rootChanged","oldRoot","cellAdded","parentChanged","updateEdgeParents","getId","setId","createId","collision","updateEdgeParent","getNearestCommonAncestor","origin1","getOrigin","origin2","cell1","cell2","getParentPath","cellRemoved","parentForCellChanged","oldIndex","par","getChildren","getChildEdges","setTerminal","terminalChanged","setTerminals","terminalForCellChanged","insertEdge","removeEdge","getDirectedEdgeCount","outgoing","ignoredEdge","getIncomingEdges","getOutgoingEdges","incoming","includeLoops","tmp2","directedMatch","oppositeMatch","sources","targets","terminals","topmost","isConnectable","setValue","valueForCellChanged","valueChanged","geometryForCellChanged","styleForCellChanged","setCollapsed","collapsedStateForCellChanged","visibleStateForCellChanged","mergeChildren","cloneAllEdges","mapping","mergeChildrenImpl","getParents","parents","cloneCell","includeChildren","clones","cloneCellImpl","restoreClone","ident","cellCloned","cloneChild","connect","isConnect","connectable","mxTransient","newValue","setVertex","setEdge","setConnectable","setParent","removeFromParent","getEdgeIndex","isOutgoing","removeFromTerminal","userObject","cloneValue","TRANSLATE_CONTROL_POINTS","alternateBounds","sourcePoint","targetPoint","swap","getTerminalPoint","setTerminalPoint","ct","fixedAspect","t1","t2","mxPerimeter","RectanglePerimeter","orthogonal","pi","pi2","beta","tan","EllipsePerimeter","det","xout1","xout2","yout1","yout2","pow","xout","yout","RhombusPerimeter","TrianglePerimeter","corner","HexagonPerimeter","mxPrintPreview","pageSelector","pageScale","mxStylesheet","putDefaultVertexStyle","createDefaultVertexStyle","putDefaultEdgeStyle","createDefaultEdgeStyle","mxCellState","absoluteOffset","mxGraphSelectionModel","mxSelectionChange","selectionModel","added","mxCellEditor","zoomHandler","isEditing","editingCell","stopEditing","mxCellRenderer","autoOrigin","printOverlays","printControls","printBackgroundImage","targetWindow","clipping","getWindow","getDoctype","appendGraph","forcePageBreaks","keepOpen","previousInitializeOverlay","initializeOverlay","overlay","getDrawPane","initControl","control","handleEvents","clickHandler","isNewWindow","writeHead","currentScale","availableHeight","hpages","vpages","writePageSelector","createPageSelector","addPage","pageBreakAfter","addPageBreak","cov","getCoverPages","apx","getAppendices","pageNum","renderPage","addGraphFragment","insertBackgroundImage","closeDocument","writePostfix","pageNumber","pageBreakInside","innerDiv","viewport","previousContainer","getCanvas","backgroundPane","getBackgroundPane","graphEnabled","tempClip","rendering","orig","svgs","getLinkForCell","putCellStyle","getDefaultVertexStyle","getDefaultEdgeStyle","defaultStyle","tmpStyle","invalidStyle","invalid","visibleSourceState","visibleTargetState","terminalDistance","getPerimeterBounds","setAbsoluteTerminalPoint","getVisibleTerminalState","setVisibleTerminalState","terminalState","getCellBounds","cellBounds","getPaintBounds","paintBounds","updateCachedBounds","setState","doneResource","updatingSelectionResource","singleSelection","isSingleSelection","setSingleSelection","changeSelection","setCell","getFirstSelectableCell","isCellSelectable","addCell","addCells","removeCell","autoSize","selectText","emptyLabelText","escapeCancelsEditing","minResize","wordWrapPadding","blurEnabled","initialValue","contentEditable","isLegacyEditor","installListeners","applyValue","labelChanged","setAlign","getInitialValue","getEditingValue","getCurrentValue","isCancelEditingKeyEvent","focusLost","isStopEditingEvent","keyCode","keypressHandler","clearOnChange","getEmptyLabelText","keyupHandler","resizeThread","isEnterStopsCellEditing","isEventSource","lw","bds","hpos","vpos","legacySpacing","isWrapping","getEditorBounds","isInvokesStopCellEditing","getBackgroundColor","absoluteRoot","startEditing","tooltipHandler","hideTooltip","bold","italic","uline","isHideLabel","isSelectText","execCommand","cancel","blur","prepareTextarea","getEditingCell","defaultShapes","defaultEdgeShape","defaultVertexShape","defaultTextShape","legacyControlPosition","forceControlClickHandler","registerShape","initializeShape","configureShape","createShape","getShapeConstructor","createIndicatorShape","getShape","getIndicatorShape","getIndicatorColor","getIndicatorGradientColor","getIndicatorImage","postConfigureShape","resolveColor","checkPlaceholderStyles","field","referenced","getSwimlane","swimlaneIndicatorColorAttribute","rstate","getLabelValue","getLabel","createLabel","isForceHtml","isHtmlLabel","getVerticalAlign","isLabelClipped","initializeLabel","forceGetCell","isLabelEvent","nativeDblClickEnabled","createCellOverlays","getCellOverlays","installCellOverlayListeners","createControl","getFoldingImage","foldingEnabled","createControlClickHandler","collapse","foldCells","isShapeEvent","redrawLabel","wrapping","isTextShapeInvalid","nextScale","getTextScale","isClipping","vis","redrawLabelShape","dh","rotateLabelBounds","redrawCellOverlays","getBounds","redrawControl","getControlBounds","insertStateAfter","htmlNode","shapes","getShapesForState","shapeChanged","selectionCellsHandler","updateHandler","isShapeInvalid","doRedrawShape","mxEdgeStyle","EntityRelation","segment","isSourceLeft","sourceGeometry","isTargetLeft","targetGeometry","getRoutingCenterY","xe","ye","midY","Loop","transformControlPoint","getRoutingCenterX","ElbowConnector","SideToSide","TopToBottom","SegmentConnector","hints","lastPushed","hint","pushPoint","lastInx","newHints","currentTerm","currentPt","hozChan","vertChan","currentHint","fixedVertAlign","fixedHozAlign","inHozChan","inVertChan","orthBuffer","orthPointsFallback","dirVectors","wayPoints1","routePatterns","inlineRoutePatterns","vertexSeperations","limits","LEFT_MASK","TOP_MASK","RIGHT_MASK","BOTTOM_MASK","LEFT","TOP","RIGHT","BOTTOM","SIDE_MASK","CENTER_MASK","SOURCE_MASK","TARGET_MASK","VERTEX_MASK","getJettySize","OrthConnector","sourceEdge","targetEdge","sourceX","sourceY","sourceWidth","sourceHeight","targetX","targetY","targetWidth","targetHeight","scaledSourceBuffer","scaledTargetBuffer","totalBuffer","tooShort","portConstraint","newRect","sourceCenX","sourceCenY","targetCenX","targetCenY","sourceTopDist","sourceLeftDist","sourceBottomDist","sourceRightDist","dirPref","horPref","vertPref","preferredHorizDist","preferredVertDist","prefOrdering","preferredOrderSet","sourceIndex","targetIndex","routePattern","currentIndex","lastOrientation","initialOrientation","currentOrientation","nextDirection","directionIndex","sou","side","limit","souTar","deltaX","deltaY","targetOrientation","sameOrient","getRoutePattern","mxStyleRegistry","putValue","mxGraphView","mxCurrentRootChange","isUp","mxGraph","renderHint","stylesheet","mouseListeners","multiplicities","imageBundles","createCellRenderer","setSelectionModel","createSelectionModel","setStylesheet","createStylesheet","createGraphView","graphModelChangeListener","createHandlers","revalidate","mxCellOverlay","tooltip","mxOutline","mxMultiplicity","validNeighbors","countError","typeError","validNeighborsAllowed","mxLayoutManager","undoHandler","beforeUndo","moveHandler","cellsMoved","mxSwimlaneManager","addEnabled","resizeEnabled","addHandler","isAddEnabled","cellsAdded","isResizeEnabled","cellsResized","isCellVisibleFn","oldValidateCellState","validateCellState","oldBounds","oldStates","getStates","oldScale","oldDoRedrawShape","oldPaint","resurse","setScale","resetValidationState","validateCell","setGraphBounds","deltas","mxGraphHandler","panHandler","updatePreview","updateHint","escapeHandler","refreshHandler","pBounds","getPreviewBounds","livePreviewUsed","setHandlesVisibleForCells","mxPanningHandler","forcePanningHandler","isForcePanningEvent","gestureHandler","eo","isPinchEnabled","initialScale","mouseDownEvent","maxScale","zoomTo","mxPopupMenuHandler","inTolerance","mxCellMarker","validColor","invalidColor","mxSelectionCellsHandler","refresh","getSelectionModel","mxConnectionHandler","mxConstraintHandler","resetHandler","currentFocus","mxRubberband","forceRubberbandHandler","isForceRubberbandEvent","repaint","mxHandle","mxVertexHandler","livePreview","invalidate","validate","mxEdgeHandler","isRendering","mxElbowEdgeHandler","mxEdgeSegmentHandler","mxKeyHandler","normalKeys","shiftKeys","controlKeys","controlShiftKeys","keydownHandler","keyDown","mxTooltipHandler","mxCellTracker","highlightColor","repaintHandler","mxDefaultKeyHandler","escape","hideProperties","mxDefaultPopupMenu","mxDefaultToolbar","mxEditor","actions","addActions","cycleAttributeValues","popupHandler","undoManager","createGraph","toolbar","createToolbar","keyHandler","configure","cycleAttributeName","EMPTY_POINT","updatingDocumentResource","captureDocumentGesture","optimizeVmlReflows","lastNode","lastHtmlNode","lastForegroundNode","lastForegroundHtmlNode","setCurrentRoot","sizeDidChange","scaleAndTranslate","previousScale","previousTranslate","viewStateChanged","removeState","includeEdges","invalidating","prevDisplay","getEmptyBounds","validateBackground","createBackgroundPageShape","validateBackgroundImage","validateBackgroundPage","getBackgroundImage","redrawBackgroundImage","pageVisible","getBackgroundPageBounds","backgroundPageShape","isHideOnHover","updateCellState","stateValidated","pState","getChildOffsetForCell","updateVertexState","updateEdgeState","updateVertexLabelOffset","updateFixedTerminalPoints","updatePoints","updateFloatingTerminalPoints","updateEdgeBounds","updateEdgeLabelOffset","fg","keepEdgesInForeground","keepEdgesInBackground","updateFixedTerminalPoint","getConnectionConstraint","getFixedTerminalPoint","getConnectionPoint","isOrthogonal","updateBoundsFromStencil","asp","getEdgeStyle","getTerminalPort","srcBounds","trgBounds","isLoopStyleEnabled","tc","defaultLoopStyle","isAllowEval","updateFloatingTerminalPoint","getFloatingTerminalPoint","getNextPoint","orth","getPerimeterFunction","opposite","markerSize","gx","gy","getRelativePoint","totalLength","minDist","xSegment","ySegment","projlen","yDistance","setRendering","setAllowEval","getCellStates","getDecoratorPane","decoratorPane","isContainerEvent","isScrollEvent","outWidth","inWidth","outHeight","inHeight","fireGestureEvent","popupMenuHandler","endHandler","createHtmlPane","updateContainerStyle","onResize","updateHtmlCanvasSize","pane","createVmlPane","getTranslateForRoot","cellEditor","portsEnabled","doubleTapEnabled","doubleTapTimeout","doubleTapTolerance","lastTouchY","lastTouchTime","tapAndHoldEnabled","tapAndHoldDelay","tapAndHoldInProgress","tapAndHoldValid","initialTouchX","initialTouchY","defaultOverlap","defaultParent","alternateEdgeStyle","pageBreaksVisible","pageBreakColor","pageBreakDashed","minPageBreakDist","preferPageSize","escapeEnabled","invokesStopCellEditing","enterStopsCellEditing","useScrollbarsForPanning","exportEnabled","importEnabled","cellsLocked","cellsCloneable","cellsEditable","cellsDeletable","cellsMovable","edgeLabelsMovable","vertexLabelsMovable","dropEnabled","splitEnabled","cellsResizable","cellsBendable","cellsSelectable","cellsDisconnectable","autoSizeCells","autoSizeCellsOnAdd","ignoreScrollbars","translateToScrollPosition","timerAutoScroll","allowAutoPanning","maximumGraphBounds","minimumGraphSize","minimumContainerSize","maximumContainerSize","resizeContainer","allowNegativeCoordinates","constrainChildren","constrainRelativeChildren","extendParents","extendParentsOnAdd","extendParentsOnMove","recursiveResize","collapseToPreferredSize","zoomFactor","keepSelectionVisibleOnZoom","centerZoom","resetViewOnRootChange","resetEdgesOnResize","resetEdgesOnMove","resetEdgesOnConnect","allowLoops","multigraph","connectableEdges","allowDanglingEdges","cloneInvalidEdges","disconnectOnMove","labelsVisible","htmlLabels","swimlaneSelectionEnabled","swimlaneNesting","minFitScale","maxFitScale","collapsedImage","expandedImage","warningImage","alreadyConnectedResource","containsValidationErrorsResource","collapseExpandResource","createCellEditor","createTooltipHandler","createSelectionCellsHandler","connectionHandler","createConnectionHandler","createGraphHandler","panningHandler","createPanningHandler","panningEnabled","createPopupMenuHandler","getStylesheet","getSelectionCellsForChanges","processChange","updateSelection","removeSelectionCells","setDefaultParent","removeStateForCell","newParent","home","addCellOverlay","removeCellOverlay","removeCellOverlays","clearCellOverlays","setCellWarning","warning","isSelect","setSelectionCell","startEditingAtCell","getSelectionCell","isCellEditable","convertValueToString","cellLabelChanged","isAutoSizeCell","cellSizeUpdated","click","mxe","isTransparentClickEvent","isCellSelected","selectCellForEvent","swimlane","isSwimlaneSelectionEnabled","getSwimlaneAt","isToggleEvent","tapAndHold","panningTrigger","marker","currentColor","markedState","mark","createEdgeState","panningManager","createPanningManager","getBorderSizes","borderLeftStyle","borderLeftWidth","paddingTop","borderTopStyle","borderTopWidth","borderRightStyle","borderRightWidth","paddingBottom","borderBottomStyle","borderBottomWidth","getPreferredPageSize","page","hCount","vCount","keepOrigin","ignoreWidth","ignoreHeight","getBorder","cssBorder","w1","h1","w2","h2","s2","doResizeContainer","updatePageBreaks","gb","horizontalCount","verticalCount","horizontalPageBreaks","verticalPageBreaks","drawPageBreaks","breaks","pageBreak","postProcessCellStyle","getImageFromBundles","encodeURIComponent","comma","setCellStyle","toggleCellStyle","toggleCellStyles","toggleCellStyleFlags","alignCells","param","resizeCell","flipEdge","addImageBundle","bundle","removeImageBundle","orderCells","back","cellsOrdered","groupCells","getCellsForGroup","createGroupCell","getBoundsForGroup","ungroupCells","removeCellsAfterUngroup","cellsRemoved","addAllEdges","removeCellsFromParent","moveGroup","allowInvalidEdges","keepPosition","trans","getEdgeValidationError","createVertex","createEdge","addEdge","absolute","constrain","parentState","zero","oldState","isAllowNegativeCoordinates","autoSizeCell","isExtendParentsOnAdd","isExtendParent","extendParent","constrainChild","cellConnected","updateCellSize","getDeletableCells","getAllEdges","disconnectTerminal","connected","tstate","splitEdge","newEdge","toggleCells","cellsToggled","checkFoldable","getFoldableCells","cellsFolded","isCellFoldable","swapBounds","willCollapse","updateAlternateBounds","getPreferredSizeForCell","allCells","ignoreChildren","cellStyle","gs2","resizeCells","isRecursiveResize","cellResized","ignoreRelative","resizeChildCells","constrainChildCells","scaleCell","isCellResizable","isCloneInvalidEdges","setAllowNegativeCoordinates","isDisconnectOnMove","isAllowDanglingEdges","isExtendParentsOnMove","disconnect","disconnectGraph","translateCell","getCellContainmentArea","getMaximumGraphBounds","sizeFirst","isConstrainRelativeChildren","isConstrainChild","overlap","getOverlap","getOutlineConstraint","getAllConnectionConstraints","setConnectionConstraint","connectCell","isPortsEnabled","getTerminalForPort","isCellDisconnectable","getCurrentRoot","enterGroup","isValidRoot","exitGroup","includeDescendants","addPoint","shiftPreview1","shiftPreview2","zoomIn","zoomOut","zoomActual","cw","sh","scrollRectToVisible","zoomToRect","scaleX","scaleY","aspectFactor","rectRight","rectBottom","newHeight","deltaHeightBuffer","upperBuffer","newWidth","deltaWidthBuffer","newScale","scrollCellToVisible","tr2","isChanged","widthLimit","heightLimit","ddx","ddy","isCellConnectable","isLoop","isCloneEvent","isConstrainedEvent","isIgnoreTerminalEvent","validationAlert","isEdgeValid","isValidConnection","sourceOut","targetIn","validateEdge","validateGraph","isValid","getCellValidationError","outCount","inCount","rule","setBackgroundImage","isHtmlLabels","setHtmlLabels","getTooltip","tip","getHandler","getTooltipForNode","getTooltipForCell","getCursorForMouseEvent","getCursorForCell","setBorder","isResizeContainer","setResizeContainer","isEscapeEnabled","setEscapeEnabled","setInvokesStopCellEditing","setEnterStopsCellEditing","isCellLocked","isCellsLocked","setCellsLocked","getCloneableCells","isCellCloneable","isCellsCloneable","setCellsCloneable","canExportCell","canImportCell","isCellsSelectable","setCellsSelectable","isCellDeletable","isCellsDeletable","setCellsDeletable","isLabelMovable","isCellRotatable","getMovableCells","isCellsMovable","setCellsMovable","setPortsEnabled","getGridSize","setGridSize","getTolerance","setTolerance","isVertexLabelsMovable","setVertexLabelsMovable","isEdgeLabelsMovable","setEdgeLabelsMovable","isSwimlaneNesting","setSwimlaneNesting","setSwimlaneSelectionEnabled","isMultigraph","setMultigraph","isAllowLoops","setAllowDanglingEdges","setConnectableEdges","isConnectableEdges","setCloneInvalidEdges","setAllowLoops","setDisconnectOnMove","setDropEnabled","isSplitEnabled","setSplitEnabled","isCellsResizable","setCellsResizable","isTerminalPointMovable","isCellBendable","isCellsBendable","setCellsBendable","isCellsEditable","setCellsEditable","isCellsDisconnectable","setCellsDisconnectable","isValidSource","isValidTarget","setTooltips","setPanning","isAutoSizeCells","setAutoSizeCells","isExtendParents","setExtendParents","setExtendParentsOnAdd","setExtendParentsOnMove","setRecursiveResize","isConstrainChildren","setConstrainChildren","setConstrainRelativeChildren","isAllowOverlapParent","isValidDropTarget","isSplitTarget","ignoreFn","hitsSwimlaneContent","getPointForEvent","addOffset","getCellsBeyond","rightHalfpane","bottomHalfpane","isolate","isSelectionEmpty","getSelectionCount","addSelectionCell","addSelectionCells","removeSelectionCell","selectRegion","selectCellsForEvent","selectNextCell","selectCell","selectPreviousCell","selectParentCell","selectChildCell","isNext","isParent","isChild","sel","selectAll","descendants","selectVertices","selectCells","selectEdges","createHandler","createEdgeHandler","createVertexHandler","createElbowEdgeHandler","createEdgeSegmentHandler","updateMouseEvent","getStateForTouchEvent","isEventIgnored","mouseEvent","lastEvent","mouseMoveRedirect","mouseUpRedirect","isSyntheticEventIgnored","lastMouseX","lastMouseY","ignoreMouseEvents","isEventSourceIgnored","candidate","getEventState","currentTime","fireDoubleClick","lastTouchEvent","lastTouchX","doubleClickCounter","doubleClickFired","lastTouchCell","valid","tapAndHoldThread","consumeMouseEvent","graphRenderHint","showViewport","sizerSize","updateOnPan","sizerImage","suspended","forceVmlHandles","outlineGraphModelChanged","selectionBorder","redirect","redirect2","sizer","createSizer","setZoomEnabled","getSourceContainerSize","getOutlineOffset","getSourceGraphBounds","sourceScale","scaledGraphBounds","unscaledGraphBounds","unscaledFinderBounds","union","completeWidth","completeHeight","outlineScale","navView","scale2","scale3","allowHandleBoundsCheck","getTranslateForEvent","viewRatio","checkTerminal","checkNeighbors","sourceValue","targetValue","checkType","attrValue","bubbling","isBubbling","setBubbling","getLayout","getCellsForChanges","executeLayoutForCells","sorted","reverse","layoutCells","getCellsForChange","executeLayout","setHorizontal","setAddEnabled","setResizeEnabled","isSwimlaneIgnored","isCellHorizontal","swimlaneAdded","parentHorizontal","resizeSwimlane","addEdges","translateState","revalidateState","maxCells","highlightEnabled","cloneEnabled","moveEnabled","currentDx","currentDy","updateCursor","selectEnabled","removeEmptyParents","connectOnDrop","scrollOnMove","previewColor","htmlPreview","scaleGrid","rotationEnabled","maxLivePreview","isCloneEnabled","setCloneEnabled","isMoveEnabled","setMoveEnabled","isSelectEnabled","setSelectEnabled","isRemoveCellsFromParent","setRemoveCellsFromParent","getInitialCellForEvent","isDelayedSelection","delayedSelection","cellWasClicked","initialCell","createPreviewShape","cloning","cellCount","addStates","ignore","isCellMoving","useGuidesForEvent","vector","roundLength","removeHint","livePreviewActive","setHighlightColor","resetLivePreview","remote","updateLivePreview","updatePreviewShape","tempState","originalPointerEvents","pt0","ptn","redrawHandles","resetPreviewStates","setHandlesVisible","selectDelayed","destroyShapes","guides","shouldRemoveCellsFromParent","shouldRemoveParent","useLeftButtonForPanning","usePopupTrigger","ignoreCell","previewEnabled","useGrid","pinchEnabled","isPanningEnabled","setPanningEnabled","setPinchEnabled","isPanningTrigger","consumePanningTrigger","selectOnPopup","clearSelectionOnBackground","triggerX","triggerY","screenX","screenY","isSelectOnPopup","popupTrigger","getCellForPopupEvent","hotspotEnabled","validState","setHotspot","getHotspot","setHotspotEnabled","isHotspotEnabled","hasValidState","getValidState","getMarkedState","unmark","setCurrentState","isValidState","getMarkerColor","markCell","getStateToMark","maxHandlers","oldHandlers","isHandlerActive","moveIconFront","moveIconBack","connectImage","targetConnectImage","createTarget","constraintHandler","waypointsEnabled","ignoreMouseDown","connectIconOffset","drillHandler","mouseDownCounter","movePreviewAway","outlineConnect","insertBeforeSource","isInsertBefore","isCreateTarget","setCreateTarget","iconState","redrawIcons","icons","isConnectableCell","isConnecting","validateConnection","getConnectImage","isMoveIconToFrontForState","createIcons","currentState","getIconPosition","destroyIcons","selectedIcon","isStartEvent","currentConstraint","sourceConstraint","waypoints","isImmediateConnectSource","isOutlineConnectEvent","clientLeft","clientTop","gridX","gridY","isHighlightAt","updateCurrentState","isCellEnabled","setFocus","convertWaypoint","snapToPreview","pt2","getTargetPerimeterPoint","getSourcePerimeterPoint","originalPoint","drawPreview","hitsIcon","updateIcons","realPoints","targetPerimeter","sourcePerimeter","isStopEvent","addWaypointForEvent","checkConstraints","getEdgeColor","terminalInserted","createTargetVertex","getAlignmentTolerance","pointImage","focusIcons","focusHighlight","currentFocusArea","focusPoints","getImageForConstraint","destroyFocusHighlight","isKeepFocusEvent","getCellForEvent","existingEdge","mouseleaveHandler","grid","mouse","minDistSq","hl","createHighlightShape","cp","defaultOpacity","sharedDiv","currentY","createMouseEvent","ignoreGrid","getPosition","setPosition","copyStyle","processEvent","getTotalRotation","flipPoint","snapPoint","isHtmlRequired","initShape","singleSizer","handleImage","parentHighlightEnabled","rotationRaster","rotationCursor","manageSizers","constrainGroupByChildren","rotationHandleVSpacing","horizontalOffset","verticalOffset","selectionBounds","getSelectionBounds","createSelectionShape","sizers","labelShape","isRotationHandleVisible","rotationShape","customHandles","createCustomHandles","updateMinBounds","isCenteredEvent","minBounds","createParentHighlightShape","getSelectionColor","getSelectionStrokeWidth","isSelectionDashed","createSizerShape","isSizerVisible","moveSizerTo","getHandleForEvent","checkShape","isCustomHandleEvent","handle","isLivePreviewBorder","childOffsetX","childOffsetY","preview","hideSizers","edgeHandlers","checkTolerance","roundAngle","moveLabel","rotateVertex","resizeVertex","currentAlpha","atan","raster","unscaledBounds","dx3","dy3","dx4","dy4","dx5","dy5","rotateCell","rotateClick","constrained","moveChildren","centered","cdx","cdy","ignoreHandles","getHandlePadding","crs","da","getRotationHandlePosition","updateParentHighlight","parentHighlight","bends","removeEnabled","dblClickRemoveEnabled","mergeRemoveEnabled","straightRemoveEnabled","virtualBendsEnabled","virtualBendOpacity","preferHtml","snapToTerminals","manageLabelHandle","abspoints","getSelectionPoints","targetState","createBends","isVirtualBendsEnabled","virtualBends","createVirtualBends","createLabelHandleShape","initBend","isAddPointEvent","isRemovePointEvent","otherCell","isHandleVisible","bend","createHandleShape","removePoint","isHandleEnabled","labelHandleImage","isAddVirtualBendEvent","isTarget","isLabel","clonePreviewState","getSnapToTerminalTolerance","isSnapToTerminalsEvent","snapToPoint","snapToTerminal","getPreviewTerminalState","getPreviewPoints","checkRemove","updatePreviewState","targetConstraint","setPreviewColor","changeTerminalPoint","changePoints","isClone","addPointAt","getHandleFillColor","checkLabelHandle","xn","yn","bn","redrawInnerBends","destroyBends","flipEnabled","doubleClickOrientationResource","createVirtualBend","dblClickHandler","getCursorForBend","getCurrentPoints","pt1","rpts","straight","bindKey","code","bindShiftKey","bindControlKey","bindControlShiftKey","getFunction","isGraphEvent","ignoreTouchEvents","hideOnHover","setHideOnHover","getStateForEvent","stateSource","resetTimer","restart","keepOnTop","drawHighlight","getStrokeWidth","bindAction","createMenu","conditions","createConditions","addItems","condition","as","enabledCond","addAction","isCell","condNodes","insertFunction","pressed","addActionOption","setMode","addPrototype","ptype","installDropHandler","addVertex","horizontalFlow","edgeGeometry","sprite","loader","askZoomResource","lastSavedResource","currentFileResource","propertiesResource","tasksResource","helpResource","outlineResource","dblClickAction","swimlaneRequired","forcedInserting","templates","defaultEdge","defaultEdgeStyle","defaultGroup","groupBorderSize","filename","postParameterName","escapePostData","urlPost","urlImage","layoutDiagram","swimlaneSpacing","maintainSwimlanes","layoutSwimlanes","cycleAttributeIndex","tasks","tasksWindowImage","tasksTop","help","helpWindowImage","urlHelp","helpWidth","helpHeight","propertiesWidth","propertiesHeight","movePropertiesDialog","validating","isModified","setModified","getUrlImage","showProperties","showTasks","showHelp","showOutline","dec","decode","resetHistory","resetFirstTime","cookie","actionname","addTemplate","template","getTemplate","installDblClickHandler","installUndoHandler","installDrillHandler","installChangeHandler","installInsertHandler","createPopupMenu","createSwimlaneManager","createLayoutManager","swimlaneMgr","layoutMgr","swimlaneLayout","createSwimlaneLayout","diagramLayout","createDiagramLayout","setGraphContainer","rubberband","insertHandler","gs","setToolbarContainer","setStatusContainer","tstamp","toLocaleString","setStatus","setTitleContainer","getTitle","treeLayout","getRootTitle","createGroup","readGraphModel","getUrlPost","writeGraphModel","postDiagram","swapStyles","createProperties","isPropertiesVisible","yField","xField","widthField","heightField","texts","okFunction","cancelFunction","createTasks","refreshTasks","frame","modename","consumeCycleAttribute","cycleAttribute","isConstrainedMoving","mxCodecRegistry","codecs","aliases","register","codec","classname","addAlias","codecname","getCodec","mxObjectCodec","objects","idrefs","elements","encodeDefaults","putObject","getObject","updateElements","addElement","Error","reference","into","encodeCell","isCellCodec","decodeCell","restoreStructures","decoder","insertIntoGraph","cloneTemplate","getFieldName","attributename","mapped","getAttributeName","fieldname","isExcluded","isReference","beforeEncode","encodeObject","afterEncode","encodeValue","writeAttribute","writePrimitiveAttribute","writeComplexAttribute","convertAttributeToXml","isBooleanAttribute","convertAttributeFromXml","isNumericAttribute","beforeDecode","decodeNode","afterDecode","decodeAttributes","decodeChildren","decodeAttribute","isIgnoredAttribute","processInclude","decodeChild","getFieldTemplate","addObjectValue","isWrite","mxCellCodec","rootNode","decodeRoot","rootCell","mxModelCodec","mxRootChangeCodec","childRef","mxChildChangeCodec","mxTerminalChangeCodec","mxGenericChangeCodec","mxGraphCodec","mxGraphViewCodec","mxStylesheetCodec","styleNode","getStringValue","mxDefaultKeyHandlerCodec","mxDefaultToolbarCodec","act","inc","mxDefaultPopupMenuCodec","role","decodeTemplates","decodeUi","setMapContainer","mxEditorCodec","newPromiseCapability","promiseCapability","aPossiblePrototype","CORRECT_SETTER","arraySpeciesCreate","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","specificCreate","find","findIndex","Internal","OwnPromiseCapability","PromiseWrapper","nativeThen","redefineAll","setSpecies","anInstance","checkCorrectnessOfIteration","microtask","hostReportErrors","newPromiseCapabilityModule","perform","PROMISE","getInternalPromiseState","PromiseConstructor","$fetch","newGenericPromiseCapability","DISPATCH_EVENT","UNHANDLED_REJECTION","REJECTION_HANDLED","PENDING","FULFILLED","REJECTED","HANDLED","UNHANDLED","FakePromise","PromiseRejectionEvent","INCORRECT_ITERATION","all","isThenable","isReject","notified","chain","reactions","ok","exited","reaction","fail","rejection","onHandleUnhandled","onUnhandled","IS_UNHANDLED","isUnhandled","unwrap","internalReject","internalResolve","wrapper","executor","onFulfilled","onRejected","fetch","capability","$promiseResolve","remaining","alreadyCalled","race","PromiseCapability","$$resolve","$$reject","createProperty","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","E"],"mappings":"oGAAA,IAAIA,EAAc,EAAQ,QACtBC,EAAuB,EAAQ,QAC/BC,EAA2B,EAAQ,QAEvCC,EAAOC,QAAUJ,EAAc,SAAUK,EAAQC,EAAKC,GACpD,OAAON,EAAqBO,EAAEH,EAAQC,EAAKJ,EAAyB,EAAGK,KACrE,SAAUF,EAAQC,EAAKC,GAEzB,OADAF,EAAOC,GAAOC,EACPF,I,uBCRT,IAAII,EAAS,EAAQ,QACjBC,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QACdC,EAAgB,EAAQ,QAExBC,EAASJ,EAAOI,OAChBC,EAAQJ,EAAO,OAEnBP,EAAOC,QAAU,SAAUW,GACzB,OAAOD,EAAMC,KAAUD,EAAMC,GAAQH,GAAiBC,EAAOE,KACvDH,EAAgBC,EAASF,GAAK,UAAYI,M,uBCVlD,IAAIf,EAAc,EAAQ,QACtBgB,EAA6B,EAAQ,QACrCd,EAA2B,EAAQ,QACnCe,EAAkB,EAAQ,QAC1BC,EAAc,EAAQ,QACtBC,EAAM,EAAQ,QACdC,EAAiB,EAAQ,QAEzBC,EAAiCC,OAAOC,yBAI5CnB,EAAQI,EAAIR,EAAcqB,EAAiC,SAAkCG,EAAGC,GAG9F,GAFAD,EAAIP,EAAgBO,GACpBC,EAAIP,EAAYO,GAAG,GACfL,EAAgB,IAClB,OAAOC,EAA+BG,EAAGC,GACzC,MAAOC,IACT,GAAIP,EAAIK,EAAGC,GAAI,OAAOvB,GAA0Bc,EAA2BR,EAAEmB,KAAKH,EAAGC,GAAID,EAAEC,M,qBClB7FtB,EAAOC,QAAU,SAAUwB,GACzB,IACE,QAASA,IACT,MAAOF,GACP,OAAO,K,uBCJX,IAAIG,EAAwB,EAAQ,QAIpCA,EAAsB,iB,uBCJtB,IAAIC,EAAqB,EAAQ,QAC7BC,EAAc,EAAQ,QAEtBC,EAAaD,EAAYE,OAAO,SAAU,aAI9C7B,EAAQI,EAAIc,OAAOY,qBAAuB,SAA6BV,GACrE,OAAOM,EAAmBN,EAAGQ,K,uBCR/B,IAAIhC,EAAc,EAAQ,QACtBmC,EAAQ,EAAQ,QAChBC,EAAgB,EAAQ,QAG5BjC,EAAOC,SAAWJ,IAAgBmC,GAAM,WACtC,OAEQ,GAFDb,OAAOe,eAAeD,EAAc,OAAQ,IAAK,CACtDE,IAAK,WAAc,OAAO,KACzBC,M,uBCRL,IAAIC,EAAW,EAAQ,QAEnBC,EAAgBC,KAAKC,UACrBC,EAAe,eACfC,EAAY,WACZC,EAAqBL,EAAcI,GACnCE,EAAUN,EAAcM,QAIxB,IAAIL,KAAKM,KAAO,IAAMJ,GACxBJ,EAASC,EAAeI,GAAW,WACjC,IAAItC,EAAQwC,EAAQpB,KAAKsB,MAEzB,OAAO1C,IAAUA,EAAQuC,EAAmBnB,KAAKsB,MAAQL,M,uBCd7D,IAAIf,EAAwB,EAAQ,QAIpCA,EAAsB,a,mBCJtB,IAAIqB,EAAOC,KAAKD,KACZE,EAAQD,KAAKC,MAIjBjD,EAAOC,QAAU,SAAUiD,GACzB,OAAOC,MAAMD,GAAYA,GAAY,GAAKA,EAAW,EAAID,EAAQF,GAAMG,K,mBCJzElD,EAAOC,QAAU,SAAUmD,GACzB,QAAUC,GAAND,EAAiB,MAAME,UAAU,wBAA0BF,GAC/D,OAAOA,I,uBCJT,IAAIG,EAAY,EAAQ,QAGxBvD,EAAOC,QAAU,SAAUuD,EAAIC,EAAMC,GAEnC,GADAH,EAAUC,QACGH,IAATI,EAAoB,OAAOD,EAC/B,OAAQE,GACN,KAAK,EAAG,OAAO,WACb,OAAOF,EAAGhC,KAAKiC,IAEjB,KAAK,EAAG,OAAO,SAAUrB,GACvB,OAAOoB,EAAGhC,KAAKiC,EAAMrB,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGuB,GAC1B,OAAOH,EAAGhC,KAAKiC,EAAMrB,EAAGuB,IAE1B,KAAK,EAAG,OAAO,SAAUvB,EAAGuB,EAAGC,GAC7B,OAAOJ,EAAGhC,KAAKiC,EAAMrB,EAAGuB,EAAGC,IAG/B,OAAO,WACL,OAAOJ,EAAGK,MAAMJ,EAAMK,c,qBCrB1B9D,EAAOC,QAAU,SAAUmD,EAAIW,EAAanD,GAC1C,KAAMwC,aAAcW,GAClB,MAAMT,UAAU,cAAgB1C,EAAOA,EAAO,IAAM,IAAM,cAC1D,OAAOwC,I,uBCHX,IAAIY,EAAa,EAAQ,QAEzBhE,EAAOC,QAAU+D,EAAW,WAAY,oB,oCCDxC,IAAIC,EAAU,EAAQ,QAClBC,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAChCE,EAAO,GAEXA,EAAKD,GAAiB,IAItBnE,EAAOC,QAA2B,eAAjBoE,OAAOD,GAAyB,WAC/C,MAAO,WAAaH,EAAQnB,MAAQ,KAClCsB,EAAKE,U,qBCbTtE,EAAOC,QAAU,SAAUmD,GACzB,GAAiB,mBAANA,EACT,MAAME,UAAUe,OAAOjB,GAAM,sBAC7B,OAAOA,I,uBCHX,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,IAAImB,EAAO,EAAQ,QAEnBvE,EAAOC,QAAUsE,EAAK7D,Q,uBCrBtB,IAAIwD,EAAkB,EAAQ,QAE1BM,EAAWN,EAAgB,YAC3BO,GAAe,EAEnB,IACE,IAAIC,EAAS,EACTC,EAAqB,CACvBC,KAAM,WACJ,MAAO,CAAEC,OAAQH,MAEnB,OAAU,WACRD,GAAe,IAGnBE,EAAmBH,GAAY,WAC7B,OAAO1B,MAGTgC,MAAMC,KAAKJ,GAAoB,WAAc,MAAM,KACnD,MAAOpD,IAETvB,EAAOC,QAAU,SAAUwB,EAAMuD,GAC/B,IAAKA,IAAiBP,EAAc,OAAO,EAC3C,IAAIQ,GAAoB,EACxB,IACE,IAAI/E,EAAS,GACbA,EAAOsE,GAAY,WACjB,MAAO,CACLI,KAAM,WACJ,MAAO,CAAEC,KAAMI,GAAoB,MAIzCxD,EAAKvB,GACL,MAAOqB,IACT,OAAO0D,I,qBClCTjF,EAAOC,QAAU,SAAUmD,GACzB,QAAUC,GAAND,EAAiB,MAAME,UAAU,wBAA0BF,GAC/D,OAAOA,I,uBCJT,IAAIpB,EAAQ,EAAQ,QAEpBhC,EAAOC,UAAYkB,OAAO+D,wBAA0BlD,GAAM,WAGxD,OAAQqC,OAAO3D,c,qBCLjB,IAAIyE,EAAW,EAAQ,QACnBC,EAAwB,EAAQ,QAChCC,EAAW,EAAQ,QACnBC,EAAO,EAAQ,QACfC,EAAoB,EAAQ,QAC5BC,EAA+B,EAAQ,QAEvCC,EAAS,SAAUC,EAASC,GAC9B7C,KAAK4C,QAAUA,EACf5C,KAAK6C,OAASA,GAGZC,EAAU5F,EAAOC,QAAU,SAAU4F,EAAUrC,EAAIC,EAAMqC,EAAYC,GACvE,IACIC,EAAUC,EAAQC,EAAOxC,EAAQiC,EAAQf,EAAMuB,EAD/CC,EAAgBd,EAAK9B,EAAIC,EAAMqC,EAAa,EAAI,GAGpD,GAAIC,EACFC,EAAWH,MACN,CAEL,GADAI,EAASV,EAAkBM,GACN,mBAAVI,EAAsB,MAAM3C,UAAU,0BAEjD,GAAI8B,EAAsBa,GAAS,CACjC,IAAKC,EAAQ,EAAGxC,EAAS2B,EAASQ,EAASnC,QAASA,EAASwC,EAAOA,IAIlE,GAHAP,EAASG,EACLM,EAAcjB,EAASgB,EAAON,EAASK,IAAQ,GAAIC,EAAK,IACxDC,EAAcP,EAASK,IACvBP,GAAUA,aAAkBF,EAAQ,OAAOE,EAC/C,OAAO,IAAIF,GAAO,GAEtBO,EAAWC,EAAOzE,KAAKqE,GAGzBjB,EAAOoB,EAASpB,KAChB,QAASuB,EAAOvB,EAAKpD,KAAKwE,IAAWnB,KAEnC,GADAc,EAASH,EAA6BQ,EAAUI,EAAeD,EAAK/F,MAAO0F,GACtD,iBAAVH,GAAsBA,GAAUA,aAAkBF,EAAQ,OAAOE,EAC5E,OAAO,IAAIF,GAAO,IAGtBG,EAAQS,KAAO,SAAUV,GACvB,OAAO,IAAIF,GAAO,EAAME,K,uBCzC1B,IAAIjE,EAAwB,EAAQ,QAIpCA,EAAsB,gB,qBCJtB,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,IAAI4E,EAA+B,EAAQ,QAE3CtG,EAAOC,QAAUqG,EAA6BjG,EAAE,a,uBCLhD,IAAIkG,EAAY,EAAQ,QAEpBC,EAAMxD,KAAKwD,IACXC,EAAMzD,KAAKyD,IAKfzG,EAAOC,QAAU,SAAUiG,EAAOxC,GAChC,IAAIgD,EAAUH,EAAUL,GACxB,OAAOQ,EAAU,EAAIF,EAAIE,EAAUhD,EAAQ,GAAK+C,EAAIC,EAAShD,K,uBCV/D,IAAIpD,EAAS,EAAQ,QACjBc,EAA2B,EAAQ,QAAmDf,EACtFsG,EAA8B,EAAQ,QACtCtE,EAAW,EAAQ,QACnBuE,EAAY,EAAQ,QACpBC,EAA4B,EAAQ,QACpCC,EAAW,EAAQ,QAgBvB9G,EAAOC,QAAU,SAAU8G,EAASC,GAClC,IAGIC,EAAQC,EAAQ/G,EAAKgH,EAAgBC,EAAgBC,EAHrDC,EAASP,EAAQG,OACjBK,EAASR,EAAQzG,OACjBkH,EAAST,EAAQU,KASrB,GANEP,EADEK,EACOjH,EACAkH,EACAlH,EAAOgH,IAAWV,EAAUU,EAAQ,KAEnChH,EAAOgH,IAAW,IAAI9E,UAE9B0E,EAAQ,IAAK/G,KAAO6G,EAAQ,CAQ9B,GAPAI,EAAiBJ,EAAO7G,GACpB4G,EAAQW,aACVL,EAAajG,EAAyB8F,EAAQ/G,GAC9CgH,EAAiBE,GAAcA,EAAWjH,OACrC+G,EAAiBD,EAAO/G,GAC/B8G,EAASH,EAASS,EAASpH,EAAMmH,GAAUE,EAAS,IAAM,KAAOrH,EAAK4G,EAAQY,SAEzEV,QAA6B5D,IAAnB8D,EAA8B,CAC3C,UAAWC,WAA0BD,EAAgB,SACrDN,EAA0BO,EAAgBD,IAGxCJ,EAAQa,MAAST,GAAkBA,EAAeS,OACpDjB,EAA4BS,EAAgB,QAAQ,GAGtD/E,EAAS6E,EAAQ/G,EAAKiH,EAAgBL,M,uBCnD1C,IAAIpF,EAAqB,EAAQ,QAC7BC,EAAc,EAAQ,QAEtBC,EAAaD,EAAYE,OAAO,SAAU,aAI9C7B,EAAQI,EAAIc,OAAOY,qBAAuB,SAA6BV,GACrE,OAAOM,EAAmBN,EAAGQ,K,kCCP/B,IAAImC,EAAa,EAAQ,QACrBlE,EAAuB,EAAQ,QAC/BoE,EAAkB,EAAQ,QAC1BrE,EAAc,EAAQ,QAEtBgI,EAAU3D,EAAgB,WAE9BlE,EAAOC,QAAU,SAAU6H,GACzB,IAAI/D,EAAcC,EAAW8D,GACzB5F,EAAiBpC,EAAqBO,EAEtCR,GAAekE,IAAgBA,EAAY8D,IAC7C3F,EAAe6B,EAAa8D,EAAS,CACnCE,cAAc,EACd5F,IAAK,WAAc,OAAOW,U,uBCfhC,IAAIpB,EAAwB,EAAQ,QAIpCA,EAAsB,iB,uBCJtB,IAAIA,EAAwB,EAAQ,QAIpCA,EAAsB,U,qBCJtB,IAAIQ,EAAiB,EAAQ,QAAuC7B,EAChEsG,EAA8B,EAAQ,QACtC3F,EAAM,EAAQ,QACdsD,EAAW,EAAQ,QACnBJ,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAChC8D,EAAkB1D,IAAa,GAAKA,SAExCtE,EAAOC,QAAU,SAAUmD,EAAI6E,EAAKT,EAAQU,GAC1C,GAAI9E,EAAI,CACN,IAAI8D,EAASM,EAASpE,EAAKA,EAAGZ,UACzBxB,EAAIkG,EAAQ/C,IACfjC,EAAegF,EAAQ/C,EAAe,CAAE4D,cAAc,EAAM3H,MAAO6H,IAEjEC,GAAcF,GAChBrB,EAA4BO,EAAQ,WAAY5C,M,kCCVvC,SAAS6D,EACtBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,IAqBIC,EArBA7B,EAAmC,oBAAlBqB,EACjBA,EAAcrB,QACdqB,EAiDJ,GA9CIC,IACFtB,EAAQsB,OAASA,EACjBtB,EAAQuB,gBAAkBA,EAC1BvB,EAAQ8B,WAAY,GAIlBN,IACFxB,EAAQ+B,YAAa,GAInBL,IACF1B,EAAQgC,SAAW,UAAYN,GAI7BC,GACFE,EAAO,SAAUI,GAEfA,EACEA,GACClG,KAAKmG,QAAUnG,KAAKmG,OAAOC,YAC3BpG,KAAKqG,QAAUrG,KAAKqG,OAAOF,QAAUnG,KAAKqG,OAAOF,OAAOC,WAEtDF,GAA0C,qBAAxBI,sBACrBJ,EAAUI,qBAGRZ,GACFA,EAAahH,KAAKsB,KAAMkG,GAGtBA,GAAWA,EAAQK,uBACrBL,EAAQK,sBAAsBC,IAAIZ,IAKtC3B,EAAQwC,aAAeX,GACdJ,IACTI,EAAOD,EACH,WAAcH,EAAahH,KAAKsB,KAAMA,KAAK0G,MAAMC,SAASC,aAC1DlB,GAGFI,EACF,GAAI7B,EAAQ+B,WAAY,CAGtB/B,EAAQ4C,cAAgBf,EAExB,IAAIgB,EAAiB7C,EAAQsB,OAC7BtB,EAAQsB,OAAS,SAAmCwB,EAAGb,GAErD,OADAJ,EAAKpH,KAAKwH,GACHY,EAAeC,EAAGb,QAEtB,CAEL,IAAIc,EAAW/C,EAAQgD,aACvBhD,EAAQgD,aAAeD,EACnB,GAAGhI,OAAOgI,EAAUlB,GACpB,CAACA,GAIT,MAAO,CACL3I,QAASmI,EACTrB,QAASA,GA1Fb,mC,qCCAA;;;;;;AAOA,IAAIiD,EAAc7I,OAAO8I,OAAO,IAIhC,SAASC,EAASC,GAChB,YAAa9G,IAAN8G,GAAyB,OAANA,EAG5B,SAASC,EAAOD,GACd,YAAa9G,IAAN8G,GAAyB,OAANA,EAG5B,SAASE,EAAQF,GACf,OAAa,IAANA,EAGT,SAASG,EAASH,GAChB,OAAa,IAANA,EAMT,SAASI,EAAanK,GACpB,MACmB,kBAAVA,GACU,kBAAVA,GAEU,kBAAVA,GACU,mBAAVA,EASX,SAASoK,EAAUC,GACjB,OAAe,OAARA,GAA+B,kBAARA,EAMhC,IAAIC,EAAYvJ,OAAOqB,UAAU8B,SAUjC,SAASqG,EAAeF,GACtB,MAA+B,oBAAxBC,EAAUlJ,KAAKiJ,GAGxB,SAASG,EAAUT,GACjB,MAA6B,oBAAtBO,EAAUlJ,KAAK2I,GAMxB,SAASU,EAAmBC,GAC1B,IAAIC,EAAIC,WAAW3G,OAAOyG,IAC1B,OAAOC,GAAK,GAAK/H,KAAKC,MAAM8H,KAAOA,GAAKE,SAASH,GAGnD,SAASI,EAAWJ,GAClB,OACEV,EAAMU,IACc,oBAAbA,EAAIK,MACU,oBAAdL,EAAIM,MAOf,SAAS9G,EAAUwG,GACjB,OAAc,MAAPA,EACH,GACAhG,MAAMuG,QAAQP,IAASH,EAAcG,IAAQA,EAAIxG,WAAaoG,EAC5DY,KAAKC,UAAUT,EAAK,KAAM,GAC1BzG,OAAOyG,GAOf,SAASU,EAAUV,GACjB,IAAIC,EAAIC,WAAWF,GACnB,OAAO3H,MAAM4H,GAAKD,EAAMC,EAO1B,SAASU,EACPC,EACAC,GAIA,IAFA,IAAIC,EAAMzK,OAAO0K,OAAO,MACpBC,EAAOJ,EAAIK,MAAM,KACZC,EAAI,EAAGA,EAAIF,EAAKpI,OAAQsI,IAC/BJ,EAAIE,EAAKE,KAAM,EAEjB,OAAOL,EACH,SAAUb,GAAO,OAAOc,EAAId,EAAImB,gBAChC,SAAUnB,GAAO,OAAOc,EAAId,IAMfW,EAAQ,kBAAkB,GAA7C,IAKIS,EAAsBT,EAAQ,8BAKlC,SAASU,EAAQC,EAAKC,GACpB,GAAID,EAAI1I,OAAQ,CACd,IAAIwC,EAAQkG,EAAIE,QAAQD,GACxB,GAAInG,GAAS,EACX,OAAOkG,EAAIG,OAAOrG,EAAO,IAQ/B,IAAIsG,EAAiBrL,OAAOqB,UAAUgK,eACtC,SAASC,EAAQhC,EAAKtK,GACpB,OAAOqM,EAAehL,KAAKiJ,EAAKtK,GAMlC,SAASuM,EAAQlJ,GACf,IAAImJ,EAAQxL,OAAO0K,OAAO,MAC1B,OAAO,SAAoBH,GACzB,IAAIkB,EAAMD,EAAMjB,GAChB,OAAOkB,IAAQD,EAAMjB,GAAOlI,EAAGkI,KAOnC,IAAImB,EAAa,SACbC,EAAWJ,GAAO,SAAUhB,GAC9B,OAAOA,EAAIqB,QAAQF,GAAY,SAAUG,EAAGpJ,GAAK,OAAOA,EAAIA,EAAEqJ,cAAgB,SAM5EC,EAAaR,GAAO,SAAUhB,GAChC,OAAOA,EAAIyB,OAAO,GAAGF,cAAgBvB,EAAI0B,MAAM,MAM7CC,EAAc,aACdC,EAAYZ,GAAO,SAAUhB,GAC/B,OAAOA,EAAIqB,QAAQM,EAAa,OAAOpB,iBAYzC,SAASsB,EAAc/J,EAAIgK,GACzB,SAASC,EAASrL,GAChB,IAAIsL,EAAI5J,UAAUJ,OAClB,OAAOgK,EACHA,EAAI,EACFlK,EAAGK,MAAM2J,EAAK1J,WACdN,EAAGhC,KAAKgM,EAAKpL,GACfoB,EAAGhC,KAAKgM,GAId,OADAC,EAAQE,QAAUnK,EAAGE,OACd+J,EAGT,SAASG,EAAYpK,EAAIgK,GACvB,OAAOhK,EAAG8B,KAAKkI,GAGjB,IAAIlI,EAAOuI,SAASrL,UAAU8C,KAC1BsI,EACAL,EAKJ,SAASO,EAAShC,EAAMiC,GACtBA,EAAQA,GAAS,EACjB,IAAI/B,EAAIF,EAAKpI,OAASqK,EAClBC,EAAM,IAAIlJ,MAAMkH,GACpB,MAAOA,IACLgC,EAAIhC,GAAKF,EAAKE,EAAI+B,GAEpB,OAAOC,EAMT,SAASC,EAAQC,EAAIC,GACnB,IAAK,IAAIhO,KAAOgO,EACdD,EAAG/N,GAAOgO,EAAMhO,GAElB,OAAO+N,EAMT,SAASE,EAAUhC,GAEjB,IADA,IAAIiC,EAAM,GACDrC,EAAI,EAAGA,EAAII,EAAI1I,OAAQsI,IAC1BI,EAAIJ,IACNiC,EAAOI,EAAKjC,EAAIJ,IAGpB,OAAOqC,EAUT,SAASC,EAAMlM,EAAGuB,EAAGC,IAKrB,IAAI2K,EAAK,SAAUnM,EAAGuB,EAAGC,GAAK,OAAO,GAOjC4K,EAAW,SAAUxB,GAAK,OAAOA,GAMrC,SAASyB,EAAYrM,EAAGuB,GACtB,GAAIvB,IAAMuB,EAAK,OAAO,EACtB,IAAI+K,EAAYlE,EAASpI,GACrBuM,EAAYnE,EAAS7G,GACzB,IAAI+K,IAAaC,EAwBV,OAAKD,IAAcC,GACjBtK,OAAOjC,KAAOiC,OAAOV,GAxB5B,IACE,IAAIiL,EAAW9J,MAAMuG,QAAQjJ,GACzByM,EAAW/J,MAAMuG,QAAQ1H,GAC7B,GAAIiL,GAAYC,EACd,OAAOzM,EAAEsB,SAAWC,EAAED,QAAUtB,EAAE0M,OAAM,SAAUC,EAAG/C,GACnD,OAAOyC,EAAWM,EAAGpL,EAAEqI,OAEpB,GAAI5J,aAAaG,MAAQoB,aAAapB,KAC3C,OAAOH,EAAEQ,YAAce,EAAEf,UACpB,GAAKgM,GAAaC,EAQvB,OAAO,EAPP,IAAIG,EAAQ7N,OAAO8N,KAAK7M,GACpB8M,EAAQ/N,OAAO8N,KAAKtL,GACxB,OAAOqL,EAAMtL,SAAWwL,EAAMxL,QAAUsL,EAAMF,OAAM,SAAU3O,GAC5D,OAAOsO,EAAWrM,EAAEjC,GAAMwD,EAAExD,OAMhC,MAAO4O,GAEP,OAAO,GAcb,SAASI,EAAc/C,EAAKtB,GAC1B,IAAK,IAAIkB,EAAI,EAAGA,EAAII,EAAI1I,OAAQsI,IAC9B,GAAIyC,EAAWrC,EAAIJ,GAAIlB,GAAQ,OAAOkB,EAExC,OAAQ,EAMV,SAASoD,EAAM5L,GACb,IAAIkB,GAAS,EACb,OAAO,WACAA,IACHA,GAAS,EACTlB,EAAGK,MAAMf,KAAMgB,aAKrB,IAAIuL,EAAW,uBAEXC,EAAc,CAChB,YACA,YACA,UAGEC,EAAkB,CACpB,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,gBACA,kBAOEC,EAAS,CAKXC,sBAAuBtO,OAAO0K,OAAO,MAKrC6D,QAAQ,EAKRC,eAAe,EAKfC,UAAU,EAKVC,aAAa,EAKbC,aAAc,KAKdC,YAAa,KAKbC,gBAAiB,GAMjBC,SAAU9O,OAAO0K,OAAO,MAMxBqE,cAAe3B,EAMf4B,eAAgB5B,EAMhB6B,iBAAkB7B,EAKlB8B,gBAAiB/B,EAKjBgC,qBAAsB9B,EAMtB+B,YAAahC,EAMbiC,OAAO,EAKPC,gBAAiBlB,GAUfmB,EAAgB,8JAKpB,SAASC,EAAYjF,GACnB,IAAI9H,GAAK8H,EAAM,IAAIkF,WAAW,GAC9B,OAAa,KAANhN,GAAoB,KAANA,EAMvB,SAASiN,EAAKpG,EAAKtK,EAAK2K,EAAKgG,GAC3B3P,OAAOe,eAAeuI,EAAKtK,EAAK,CAC9BC,MAAO0K,EACPgG,aAAcA,EACdC,UAAU,EACVhJ,cAAc,IAOlB,IAAIiJ,EAAS,IAAIC,OAAQ,KAAQP,EAAoB,OAAI,WACzD,SAASQ,EAAW3M,GAClB,IAAIyM,EAAO5M,KAAKG,GAAhB,CAGA,IAAI4M,EAAW5M,EAAKwH,MAAM,KAC1B,OAAO,SAAUtB,GACf,IAAK,IAAIuB,EAAI,EAAGA,EAAImF,EAASzN,OAAQsI,IAAK,CACxC,IAAKvB,EAAO,OACZA,EAAMA,EAAI0G,EAASnF,IAErB,OAAOvB,IAOX,IAmCI2G,EAnCAC,EAAW,aAAe,GAG1BC,EAA8B,qBAAXC,OACnBC,EAAkC,qBAAlBC,iBAAmCA,cAAcC,SACjEC,EAAeH,GAAUC,cAAcC,SAASzF,cAChD2F,EAAKN,GAAaC,OAAOM,UAAUC,UAAU7F,cAC7C8F,GAAOH,GAAM,eAAexN,KAAKwN,GACjCI,GAAQJ,GAAMA,EAAGtF,QAAQ,YAAc,EACvC2F,GAASL,GAAMA,EAAGtF,QAAQ,SAAW,EAErC4F,IADaN,GAAMA,EAAGtF,QAAQ,WACrBsF,GAAM,uBAAuBxN,KAAKwN,IAA0B,QAAjBD,GAGpDQ,IAFWP,GAAM,cAAcxN,KAAKwN,GACtBA,GAAM,YAAYxN,KAAKwN,GAC9BA,GAAMA,EAAGQ,MAAM,mBAGtBC,GAAc,GAAKC,MAEnBC,IAAkB,EACtB,GAAIjB,EACF,IACE,IAAIkB,GAAO,GACXrR,OAAOe,eAAesQ,GAAM,UAAW,CACrCrQ,IAAK,WAEHoQ,IAAkB,KAGtBhB,OAAOkB,iBAAiB,eAAgB,KAAMD,IAC9C,MAAOzD,KAMX,IAAI2D,GAAoB,WAWtB,YAVkBrP,IAAd+N,IAOAA,GALGE,IAAcE,GAA4B,qBAAXlR,IAGtBA,EAAO,YAAgD,WAAlCA,EAAO,WAAWqS,IAAIC,UAKpDxB,GAILxB,GAAW0B,GAAaC,OAAOsB,6BAGnC,SAASC,GAAUC,GACjB,MAAuB,oBAATA,GAAuB,cAAc3O,KAAK2O,EAAKzO,YAG/D,IAII0O,GAJAC,GACgB,qBAAXvS,QAA0BoS,GAASpS,SACvB,qBAAZwS,SAA2BJ,GAASI,QAAQC,SAMnDH,GAFiB,qBAARI,KAAuBN,GAASM,KAElCA,IAGc,WACnB,SAASA,IACPtQ,KAAKuQ,IAAMlS,OAAO0K,OAAO,MAY3B,OAVAuH,EAAI5Q,UAAUxB,IAAM,SAAcb,GAChC,OAAyB,IAAlB2C,KAAKuQ,IAAIlT,IAElBiT,EAAI5Q,UAAU8G,IAAM,SAAcnJ,GAChC2C,KAAKuQ,IAAIlT,IAAO,GAElBiT,EAAI5Q,UAAU8Q,MAAQ,WACpBxQ,KAAKuQ,IAAMlS,OAAO0K,OAAO,OAGpBuH,EAdW,GAoBtB,IAAIG,GAAOjF,EA8FP9N,GAAM,EAMNgT,GAAM,WACR1Q,KAAK2Q,GAAKjT,KACVsC,KAAK4Q,KAAO,IAGdF,GAAIhR,UAAUmR,OAAS,SAAiBC,GACtC9Q,KAAK4Q,KAAKG,KAAKD,IAGjBJ,GAAIhR,UAAUsR,UAAY,SAAoBF,GAC5CzH,EAAOrJ,KAAK4Q,KAAME,IAGpBJ,GAAIhR,UAAUuR,OAAS,WACjBP,GAAItM,QACNsM,GAAItM,OAAO8M,OAAOlR,OAItB0Q,GAAIhR,UAAUyR,OAAS,WAErB,IAAIP,EAAO5Q,KAAK4Q,KAAKtG,QAOrB,IAAK,IAAIpB,EAAI,EAAG0B,EAAIgG,EAAKhQ,OAAQsI,EAAI0B,EAAG1B,IACtC0H,EAAK1H,GAAGkI,UAOZV,GAAItM,OAAS,KACb,IAAIiN,GAAc,GAElB,SAASC,GAAYlN,GACnBiN,GAAYN,KAAK3M,GACjBsM,GAAItM,OAASA,EAGf,SAASmN,KACPF,GAAYG,MACZd,GAAItM,OAASiN,GAAYA,GAAYzQ,OAAS,GAKhD,IAAI6Q,GAAQ,SACVC,EACAC,EACAC,EACAC,EACAC,EACA5L,EACA6L,EACAC,GAEAhS,KAAK0R,IAAMA,EACX1R,KAAK2R,KAAOA,EACZ3R,KAAK4R,SAAWA,EAChB5R,KAAK6R,KAAOA,EACZ7R,KAAK8R,IAAMA,EACX9R,KAAKiS,QAAK1R,EACVP,KAAKkG,QAAUA,EACflG,KAAKkS,eAAY3R,EACjBP,KAAKmS,eAAY5R,EACjBP,KAAKoS,eAAY7R,EACjBP,KAAK3C,IAAMsU,GAAQA,EAAKtU,IACxB2C,KAAK+R,iBAAmBA,EACxB/R,KAAKqS,uBAAoB9R,EACzBP,KAAKqG,YAAS9F,EACdP,KAAKsS,KAAM,EACXtS,KAAKuS,UAAW,EAChBvS,KAAKwS,cAAe,EACpBxS,KAAKyS,WAAY,EACjBzS,KAAK0S,UAAW,EAChB1S,KAAK2S,QAAS,EACd3S,KAAKgS,aAAeA,EACpBhS,KAAK4S,eAAYrS,EACjBP,KAAK6S,oBAAqB,GAGxBC,GAAqB,CAAEC,MAAO,CAAE9N,cAAc,IAIlD6N,GAAmBC,MAAM1T,IAAM,WAC7B,OAAOW,KAAKqS,mBAGdhU,OAAO2U,iBAAkBvB,GAAM/R,UAAWoT,IAE1C,IAAIG,GAAmB,SAAUpB,QACjB,IAATA,IAAkBA,EAAO,IAE9B,IAAIqB,EAAO,IAAIzB,GAGf,OAFAyB,EAAKrB,KAAOA,EACZqB,EAAKT,WAAY,EACVS,GAGT,SAASC,GAAiBnL,GACxB,OAAO,IAAIyJ,QAAMlR,OAAWA,OAAWA,EAAWgB,OAAOyG,IAO3D,SAASoL,GAAYC,GACnB,IAAIC,EAAS,IAAI7B,GACf4B,EAAM3B,IACN2B,EAAM1B,KAIN0B,EAAMzB,UAAYyB,EAAMzB,SAAStH,QACjC+I,EAAMxB,KACNwB,EAAMvB,IACNuB,EAAMnN,QACNmN,EAAMtB,iBACNsB,EAAMrB,cAWR,OATAsB,EAAOrB,GAAKoB,EAAMpB,GAClBqB,EAAOf,SAAWc,EAAMd,SACxBe,EAAOjW,IAAMgW,EAAMhW,IACnBiW,EAAOb,UAAYY,EAAMZ,UACzBa,EAAOpB,UAAYmB,EAAMnB,UACzBoB,EAAOnB,UAAYkB,EAAMlB,UACzBmB,EAAOlB,UAAYiB,EAAMjB,UACzBkB,EAAOV,UAAYS,EAAMT,UACzBU,EAAOZ,UAAW,EACXY,EAQT,IAAIC,GAAavR,MAAMtC,UACnB8T,GAAenV,OAAO0K,OAAOwK,IAE7BE,GAAiB,CACnB,OACA,MACA,QACA,UACA,SACA,OACA,WAMFA,GAAeC,SAAQ,SAAUC,GAE/B,IAAIC,EAAWL,GAAWI,GAC1B5F,EAAIyF,GAAcG,GAAQ,WACxB,IAAIE,EAAO,GAAIC,EAAM9S,UAAUJ,OAC/B,MAAQkT,IAAQD,EAAMC,GAAQ9S,UAAW8S,GAEzC,IAEIC,EAFAlR,EAAS+Q,EAAS7S,MAAMf,KAAM6T,GAC9BG,EAAKhU,KAAKiU,OAEd,OAAQN,GACN,IAAK,OACL,IAAK,UACHI,EAAWF,EACX,MACF,IAAK,SACHE,EAAWF,EAAKvJ,MAAM,GACtB,MAKJ,OAHIyJ,GAAYC,EAAGE,aAAaH,GAEhCC,EAAGG,IAAIhD,SACAtO,QAMX,IAAIuR,GAAY/V,OAAOY,oBAAoBuU,IAMvCa,IAAgB,EAEpB,SAASC,GAAiBhX,GACxB+W,GAAgB/W,EASlB,IAAIiX,GAAW,SAAmBjX,GAChC0C,KAAK1C,MAAQA,EACb0C,KAAKmU,IAAM,IAAIzD,GACf1Q,KAAKwU,QAAU,EACfzG,EAAIzQ,EAAO,SAAU0C,MACjBgC,MAAMuG,QAAQjL,IACZiR,EACFkG,GAAanX,EAAOkW,IAEpBkB,GAAYpX,EAAOkW,GAAcY,IAEnCpU,KAAKkU,aAAa5W,IAElB0C,KAAK2U,KAAKrX,IA+Bd,SAASmX,GAAcrQ,EAAQwQ,GAE7BxQ,EAAOyQ,UAAYD,EASrB,SAASF,GAAatQ,EAAQwQ,EAAKzI,GACjC,IAAK,IAAIjD,EAAI,EAAG0B,EAAIuB,EAAKvL,OAAQsI,EAAI0B,EAAG1B,IAAK,CAC3C,IAAI7L,EAAM8O,EAAKjD,GACf6E,EAAI3J,EAAQ/G,EAAKuX,EAAIvX,KASzB,SAASyX,GAASxX,EAAOyX,GAIvB,IAAIf,EAHJ,GAAKtM,EAASpK,MAAUA,aAAiBmU,IAkBzC,OAdI9H,EAAOrM,EAAO,WAAaA,EAAM2W,kBAAkBM,GACrDP,EAAK1W,EAAM2W,OAEXI,KACCzE,OACA5N,MAAMuG,QAAQjL,IAAUuK,EAAcvK,KACvCe,OAAO2W,aAAa1X,KACnBA,EAAM2X,SAEPjB,EAAK,IAAIO,GAASjX,IAEhByX,GAAcf,GAChBA,EAAGQ,UAEER,EAMT,SAASkB,GACPvN,EACAtK,EACA2K,EACAmN,EACAC,GAEA,IAAIjB,EAAM,IAAIzD,GAEV2E,EAAWhX,OAAOC,yBAAyBqJ,EAAKtK,GACpD,IAAIgY,IAAsC,IAA1BA,EAASpQ,aAAzB,CAKA,IAAIqQ,EAASD,GAAYA,EAAShW,IAC9BkW,EAASF,GAAYA,EAAS9E,IAC5B+E,IAAUC,GAAgC,IAArBvU,UAAUJ,SACnCoH,EAAML,EAAItK,IAGZ,IAAImY,GAAWJ,GAAWN,GAAQ9M,GAClC3J,OAAOe,eAAeuI,EAAKtK,EAAK,CAC9B2Q,YAAY,EACZ/I,cAAc,EACd5F,IAAK,WACH,IAAI/B,EAAQgY,EAASA,EAAO5W,KAAKiJ,GAAOK,EAUxC,OATI0I,GAAItM,SACN+P,EAAIlD,SACAuE,IACFA,EAAQrB,IAAIlD,SACRjP,MAAMuG,QAAQjL,IAChBmY,GAAYnY,KAIXA,GAETiT,IAAK,SAAyBmF,GAC5B,IAAIpY,EAAQgY,EAASA,EAAO5W,KAAKiJ,GAAOK,EAEpC0N,IAAWpY,GAAUoY,IAAWA,GAAUpY,IAAUA,GAQpDgY,IAAWC,IACXA,EACFA,EAAO7W,KAAKiJ,EAAK+N,GAEjB1N,EAAM0N,EAERF,GAAWJ,GAAWN,GAAQY,GAC9BvB,EAAIhD,cAUV,SAASZ,GAAKnM,EAAQ/G,EAAK2K,GAMzB,GAAIhG,MAAMuG,QAAQnE,IAAW2D,EAAkB1K,GAG7C,OAFA+G,EAAOxD,OAASV,KAAKwD,IAAIU,EAAOxD,OAAQvD,GACxC+G,EAAOqF,OAAOpM,EAAK,EAAG2K,GACfA,EAET,GAAI3K,KAAO+G,KAAY/G,KAAOgB,OAAOqB,WAEnC,OADA0E,EAAO/G,GAAO2K,EACPA,EAET,IAAIgM,EAAK,EAASC,OAClB,OAAI7P,EAAO6Q,QAAWjB,GAAMA,EAAGQ,QAKtBxM,EAEJgM,GAILkB,GAAkBlB,EAAG1W,MAAOD,EAAK2K,GACjCgM,EAAGG,IAAIhD,SACAnJ,IALL5D,EAAO/G,GAAO2K,EACPA,GAUX,SAAS2N,GAAKvR,EAAQ/G,GAMpB,GAAI2E,MAAMuG,QAAQnE,IAAW2D,EAAkB1K,GAC7C+G,EAAOqF,OAAOpM,EAAK,OADrB,CAIA,IAAI2W,EAAK,EAASC,OACd7P,EAAO6Q,QAAWjB,GAAMA,EAAGQ,SAO1B7K,EAAOvF,EAAQ/G,YAGb+G,EAAO/G,GACT2W,GAGLA,EAAGG,IAAIhD,WAOT,SAASsE,GAAanY,GACpB,IAAK,IAAI2O,OAAI,EAAU/C,EAAI,EAAG0B,EAAItN,EAAMsD,OAAQsI,EAAI0B,EAAG1B,IACrD+C,EAAI3O,EAAM4L,GACV+C,GAAKA,EAAEgI,QAAUhI,EAAEgI,OAAOE,IAAIlD,SAC1BjP,MAAMuG,QAAQ0D,IAChBwJ,GAAYxJ,GAhNlBsI,GAAS7U,UAAUiV,KAAO,SAAehN,GAEvC,IADA,IAAIwE,EAAO9N,OAAO8N,KAAKxE,GACduB,EAAI,EAAGA,EAAIiD,EAAKvL,OAAQsI,IAC/BgM,GAAkBvN,EAAKwE,EAAKjD,KAOhCqL,GAAS7U,UAAUwU,aAAe,SAAuB0B,GACvD,IAAK,IAAI1M,EAAI,EAAG0B,EAAIgL,EAAMhV,OAAQsI,EAAI0B,EAAG1B,IACvC4L,GAAQc,EAAM1M,KAgNlB,IAAI2M,GAASnJ,EAAOC,sBAoBpB,SAASmJ,GAAW1K,EAAInJ,GACtB,IAAKA,EAAQ,OAAOmJ,EAOpB,IANA,IAAI/N,EAAK0Y,EAAOC,EAEZ7J,EAAOgE,GACPC,QAAQC,QAAQpO,GAChB5D,OAAO8N,KAAKlK,GAEPiH,EAAI,EAAGA,EAAIiD,EAAKvL,OAAQsI,IAC/B7L,EAAM8O,EAAKjD,GAEC,WAAR7L,IACJ0Y,EAAQ3K,EAAG/N,GACX2Y,EAAU/T,EAAK5E,GACVsM,EAAOyB,EAAI/N,GAGd0Y,IAAUC,GACVnO,EAAckO,IACdlO,EAAcmO,IAEdF,GAAUC,EAAOC,GANjBzF,GAAInF,EAAI/N,EAAK2Y,IASjB,OAAO5K,EAMT,SAAS6K,GACPC,EACAC,EACAC,GAEA,OAAKA,EAoBI,WAEL,IAAIC,EAAmC,oBAAbF,EACtBA,EAASzX,KAAK0X,EAAIA,GAClBD,EACAG,EAAmC,oBAAdJ,EACrBA,EAAUxX,KAAK0X,EAAIA,GACnBF,EACJ,OAAIG,EACKP,GAAUO,EAAcC,GAExBA,GA7BNH,EAGAD,EAQE,WACL,OAAOJ,GACe,oBAAbK,EAA0BA,EAASzX,KAAKsB,KAAMA,MAAQmW,EACxC,oBAAdD,EAA2BA,EAAUxX,KAAKsB,KAAMA,MAAQkW,IAV1DC,EAHAD,EA2Db,SAASK,GACPL,EACAC,GAEA,IAAI5K,EAAM4K,EACND,EACEA,EAAUlX,OAAOmX,GACjBnU,MAAMuG,QAAQ4N,GACZA,EACA,CAACA,GACLD,EACJ,OAAO3K,EACHiL,GAAYjL,GACZA,EAGN,SAASiL,GAAaC,GAEpB,IADA,IAAIlL,EAAM,GACDrC,EAAI,EAAGA,EAAIuN,EAAM7V,OAAQsI,KACD,IAA3BqC,EAAI/B,QAAQiN,EAAMvN,KACpBqC,EAAIwF,KAAK0F,EAAMvN,IAGnB,OAAOqC,EAcT,SAASmL,GACPR,EACAC,EACAC,EACA/Y,GAEA,IAAIkO,EAAMlN,OAAO0K,OAAOmN,GAAa,MACrC,OAAIC,EAEKhL,EAAOI,EAAK4K,GAEZ5K,EAzEXsK,GAAOlE,KAAO,SACZuE,EACAC,EACAC,GAEA,OAAKA,EAcEH,GAAcC,EAAWC,EAAUC,GAbpCD,GAAgC,oBAAbA,EAQdD,EAEFD,GAAcC,EAAWC,IAmCpC1J,EAAgBiH,SAAQ,SAAU5N,GAChC+P,GAAO/P,GAAQyQ,MAyBjB/J,EAAYkH,SAAQ,SAAUiD,GAC5Bd,GAAOc,EAAO,KAAOD,MASvBb,GAAOrG,MAAQ,SACb0G,EACAC,EACAC,EACA/Y,GAMA,GAHI6Y,IAAc3G,KAAe2G,OAAY3V,GACzC4V,IAAa5G,KAAe4G,OAAW5V,IAEtC4V,EAAY,OAAO9X,OAAO0K,OAAOmN,GAAa,MAInD,IAAKA,EAAa,OAAOC,EACzB,IAAIjL,EAAM,GAEV,IAAK,IAAI0L,KADTzL,EAAOD,EAAKgL,GACMC,EAAU,CAC1B,IAAI9P,EAAS6E,EAAI0L,GACb7D,EAAQoD,EAASS,GACjBvQ,IAAWrE,MAAMuG,QAAQlC,KAC3BA,EAAS,CAACA,IAEZ6E,EAAI0L,GAASvQ,EACTA,EAAOrH,OAAO+T,GACd/Q,MAAMuG,QAAQwK,GAASA,EAAQ,CAACA,GAEtC,OAAO7H,GAMT2K,GAAOgB,MACPhB,GAAOiB,QACPjB,GAAOkB,OACPlB,GAAOmB,SAAW,SAChBd,EACAC,EACAC,EACA/Y,GAKA,IAAK6Y,EAAa,OAAOC,EACzB,IAAIjL,EAAM7M,OAAO0K,OAAO,MAGxB,OAFAoC,EAAOD,EAAKgL,GACRC,GAAYhL,EAAOD,EAAKiL,GACrBjL,GAET2K,GAAOoB,QAAUhB,GAKjB,IAAIiB,GAAe,SAAUhB,EAAWC,GACtC,YAAoB5V,IAAb4V,EACHD,EACAC,GA+BN,SAASgB,GAAgBlT,EAASmS,GAChC,IAAIS,EAAQ5S,EAAQ4S,MACpB,GAAKA,EAAL,CACA,IACI3N,EAAGlB,EAAKlK,EADRyN,EAAM,GAEV,GAAIvJ,MAAMuG,QAAQsO,GAAQ,CACxB3N,EAAI2N,EAAMjW,OACV,MAAOsI,IACLlB,EAAM6O,EAAM3N,GACO,kBAARlB,IACTlK,EAAOkM,EAAShC,GAChBuD,EAAIzN,GAAQ,CAAE6Y,KAAM,YAKnB,GAAI9O,EAAcgP,GACvB,IAAK,IAAIxZ,KAAOwZ,EACd7O,EAAM6O,EAAMxZ,GACZS,EAAOkM,EAAS3M,GAChBkO,EAAIzN,GAAQ+J,EAAcG,GACtBA,EACA,CAAE2O,KAAM3O,QAEL,EAOX/D,EAAQ4S,MAAQtL,GAMlB,SAAS6L,GAAiBnT,EAASmS,GACjC,IAAIW,EAAS9S,EAAQ8S,OACrB,GAAKA,EAAL,CACA,IAAIM,EAAapT,EAAQ8S,OAAS,GAClC,GAAI/U,MAAMuG,QAAQwO,GAChB,IAAK,IAAI7N,EAAI,EAAGA,EAAI6N,EAAOnW,OAAQsI,IACjCmO,EAAWN,EAAO7N,IAAM,CAAEjH,KAAM8U,EAAO7N,SAEpC,GAAIrB,EAAckP,GACvB,IAAK,IAAI1Z,KAAO0Z,EAAQ,CACtB,IAAI/O,EAAM+O,EAAO1Z,GACjBga,EAAWha,GAAOwK,EAAcG,GAC5BmD,EAAO,CAAElJ,KAAM5E,GAAO2K,GACtB,CAAE/F,KAAM+F,QAEL,GAYb,SAASsP,GAAqBrT,GAC5B,IAAIsT,EAAOtT,EAAQuT,WACnB,GAAID,EACF,IAAK,IAAIla,KAAOka,EAAM,CACpB,IAAIE,EAASF,EAAKla,GACI,oBAAXoa,IACTF,EAAKla,GAAO,CAAEmF,KAAMiV,EAAQrG,OAAQqG,KAoB5C,SAASC,GACPrR,EACA0M,EACAqD,GAkBA,GAZqB,oBAAVrD,IACTA,EAAQA,EAAM9O,SAGhBkT,GAAepE,EAAOqD,GACtBgB,GAAgBrE,EAAOqD,GACvBkB,GAAoBvE,IAMfA,EAAM4E,QACL5E,EAAM6E,UACRvR,EAASqR,GAAarR,EAAQ0M,EAAM6E,QAASxB,IAE3CrD,EAAM8E,QACR,IAAK,IAAI3O,EAAI,EAAG0B,EAAImI,EAAM8E,OAAOjX,OAAQsI,EAAI0B,EAAG1B,IAC9C7C,EAASqR,GAAarR,EAAQ0M,EAAM8E,OAAO3O,GAAIkN,GAKrD,IACI/Y,EADA4G,EAAU,GAEd,IAAK5G,KAAOgJ,EACVyR,EAAWza,GAEb,IAAKA,KAAO0V,EACLpJ,EAAOtD,EAAQhJ,IAClBya,EAAWza,GAGf,SAASya,EAAYza,GACnB,IAAI0a,EAAQlC,GAAOxY,IAAQ6Z,GAC3BjT,EAAQ5G,GAAO0a,EAAM1R,EAAOhJ,GAAM0V,EAAM1V,GAAM+Y,EAAI/Y,GAEpD,OAAO4G,EAQT,SAAS+T,GACP/T,EACA0S,EACAhG,EACAsH,GAGA,GAAkB,kBAAPtH,EAAX,CAGA,IAAIuH,EAASjU,EAAQ0S,GAErB,GAAIhN,EAAOuO,EAAQvH,GAAO,OAAOuH,EAAOvH,GACxC,IAAIwH,EAAcnO,EAAS2G,GAC3B,GAAIhH,EAAOuO,EAAQC,GAAgB,OAAOD,EAAOC,GACjD,IAAIC,EAAehO,EAAW+N,GAC9B,GAAIxO,EAAOuO,EAAQE,GAAiB,OAAOF,EAAOE,GAElD,IAAI7M,EAAM2M,EAAOvH,IAAOuH,EAAOC,IAAgBD,EAAOE,GAOtD,OAAO7M,GAOT,SAAS8M,GACPhb,EACAib,EACAC,EACAnC,GAEA,IAAIoC,EAAOF,EAAYjb,GACnBob,GAAU9O,EAAO4O,EAAWlb,GAC5BC,EAAQib,EAAUlb,GAElBqb,EAAeC,GAAaC,QAASJ,EAAK7B,MAC9C,GAAI+B,GAAgB,EAClB,GAAID,IAAW9O,EAAO6O,EAAM,WAC1Blb,GAAQ,OACH,GAAc,KAAVA,GAAgBA,IAAUkN,EAAUnN,GAAM,CAGnD,IAAIwb,EAAcF,GAAapX,OAAQiX,EAAK7B,OACxCkC,EAAc,GAAKH,EAAeG,KACpCvb,GAAQ,GAKd,QAAciD,IAAVjD,EAAqB,CACvBA,EAAQwb,GAAoB1C,EAAIoC,EAAMnb,GAGtC,IAAI0b,EAAoB1E,GACxBC,IAAgB,GAChBQ,GAAQxX,GACRgX,GAAgByE,GASlB,OAAOzb,EAMT,SAASwb,GAAqB1C,EAAIoC,EAAMnb,GAEtC,GAAKsM,EAAO6O,EAAM,WAAlB,CAGA,IAAIzK,EAAMyK,EAAKQ,QAYf,OAAI5C,GAAMA,EAAGzP,SAAS4R,gBACWhY,IAA/B6V,EAAGzP,SAAS4R,UAAUlb,SACHkD,IAAnB6V,EAAG6C,OAAO5b,GAEH+Y,EAAG6C,OAAO5b,GAIG,oBAAR0Q,GAA6C,aAAvBmL,GAAQV,EAAK7B,MAC7C5I,EAAIrP,KAAK0X,GACTrI,GAqFN,SAASmL,GAASxY,GAChB,IAAI4O,EAAQ5O,GAAMA,EAAGc,WAAW8N,MAAM,sBACtC,OAAOA,EAAQA,EAAM,GAAK,GAG5B,SAAS6J,GAAY7Z,EAAGuB,GACtB,OAAOqY,GAAQ5Z,KAAO4Z,GAAQrY,GAGhC,SAAS8X,GAAchC,EAAMyC,GAC3B,IAAKpX,MAAMuG,QAAQ6Q,GACjB,OAAOD,GAAWC,EAAezC,GAAQ,GAAK,EAEhD,IAAK,IAAIzN,EAAI,EAAG4K,EAAMsF,EAAcxY,OAAQsI,EAAI4K,EAAK5K,IACnD,GAAIiQ,GAAWC,EAAclQ,GAAIyN,GAC/B,OAAOzN,EAGX,OAAQ,EAgDV,SAASmQ,GAAaC,EAAKlD,EAAImD,GAG7BjI,KACA,IACE,GAAI8E,EAAI,CACN,IAAIoD,EAAMpD,EACV,MAAQoD,EAAMA,EAAIC,QAAU,CAC1B,IAAIhD,EAAQ+C,EAAI7S,SAAS+S,cACzB,GAAIjD,EACF,IAAK,IAAIvN,EAAI,EAAGA,EAAIuN,EAAM7V,OAAQsI,IAChC,IACE,IAAIyQ,GAAgD,IAAtClD,EAAMvN,GAAGxK,KAAK8a,EAAKF,EAAKlD,EAAImD,GAC1C,GAAII,EAAW,OACf,MAAO1N,IACP2N,GAAkB3N,GAAGuN,EAAK,wBAMpCI,GAAkBN,EAAKlD,EAAImD,GAC3B,QACAhI,MAIJ,SAASsI,GACPC,EACA5T,EACA2N,EACAuC,EACAmD,GAEA,IAAIhO,EACJ,IACEA,EAAMsI,EAAOiG,EAAQ/Y,MAAMmF,EAAS2N,GAAQiG,EAAQpb,KAAKwH,GACrDqF,IAAQA,EAAI0J,QAAU7M,EAAUmD,KAASA,EAAIwO,WAC/CxO,EAAIjD,OAAM,SAAU2D,GAAK,OAAOoN,GAAYpN,EAAGmK,EAAImD,EAAO,uBAG1DhO,EAAIwO,UAAW,GAEjB,MAAO9N,IACPoN,GAAYpN,GAAGmK,EAAImD,GAErB,OAAOhO,EAGT,SAASqO,GAAmBN,EAAKlD,EAAImD,GACnC,GAAI7M,EAAOM,aACT,IACE,OAAON,EAAOM,aAAatO,KAAK,KAAM4a,EAAKlD,EAAImD,GAC/C,MAAOtN,IAGHA,KAAMqN,GACRU,GAAS/N,GAAG,KAAM,uBAIxB+N,GAASV,EAAKlD,EAAImD,GAGpB,SAASS,GAAUV,EAAKlD,EAAImD,GAK1B,IAAK/K,IAAaE,GAA8B,qBAAZuL,QAGlC,MAAMX,EAFNW,QAAQxb,MAAM6a,GAQlB,IAyBIY,GAzBAC,IAAmB,EAEnBC,GAAY,GACZC,IAAU,EAEd,SAASC,KACPD,IAAU,EACV,IAAIE,EAASH,GAAU9P,MAAM,GAC7B8P,GAAUxZ,OAAS,EACnB,IAAK,IAAIsI,EAAI,EAAGA,EAAIqR,EAAO3Z,OAAQsI,IACjCqR,EAAOrR,KAwBX,GAAuB,qBAAZsR,SAA2BxK,GAASwK,SAAU,CACvD,IAAIC,GAAID,QAAQE,UAChBR,GAAY,WACVO,GAAEpS,KAAKiS,IAMHlL,IAASuL,WAAWnP,IAE1B2O,IAAmB,OACd,GAAKlL,IAAoC,qBAArB2L,mBACzB5K,GAAS4K,mBAEuB,yCAAhCA,iBAAiBpZ,WAoBjB0Y,GAJiC,qBAAjBW,cAAgC7K,GAAS6K,cAI7C,WACVA,aAAaP,KAIH,WACVK,WAAWL,GAAgB,QAzB5B,CAID,IAAIQ,GAAU,EACVC,GAAW,IAAIH,iBAAiBN,IAChCU,GAAWC,SAASC,eAAe3Z,OAAOuZ,KAC9CC,GAASjG,QAAQkG,GAAU,CACzBG,eAAe,IAEjBjB,GAAY,WACVY,IAAWA,GAAU,GAAK,EAC1BE,GAASrJ,KAAOpQ,OAAOuZ,KAEzBX,IAAmB,EAerB,SAASiB,GAAUC,EAAI3Q,GACrB,IAAI4Q,EAiBJ,GAhBAlB,GAAUrJ,MAAK,WACb,GAAIsK,EACF,IACEA,EAAG3c,KAAKgM,GACR,MAAOuB,IACPoN,GAAYpN,GAAGvB,EAAK,iBAEb4Q,GACTA,EAAS5Q,MAGR2P,KACHA,IAAU,EACVH,OAGGmB,GAAyB,qBAAZb,QAChB,OAAO,IAAIA,SAAQ,SAAUE,GAC3BY,EAAWZ,KAiGjB,IAAIa,GAAc,IAAIrL,GAOtB,SAASsL,GAAUxT,GACjByT,GAAUzT,EAAKuT,IACfA,GAAY/K,QAGd,SAASiL,GAAWzT,EAAK0T,GACvB,IAAIxS,EAAGiD,EACHwP,EAAM3Z,MAAMuG,QAAQP,GACxB,MAAM2T,IAAQjU,EAASM,IAAS3J,OAAOud,SAAS5T,IAAQA,aAAeyJ,IAAvE,CAGA,GAAIzJ,EAAIiM,OAAQ,CACd,IAAI4H,EAAQ7T,EAAIiM,OAAOE,IAAIxD,GAC3B,GAAI+K,EAAKxd,IAAI2d,GACX,OAEFH,EAAKlV,IAAIqV,GAEX,GAAIF,EAAK,CACPzS,EAAIlB,EAAIpH,OACR,MAAOsI,IAAOuS,GAAUzT,EAAIkB,GAAIwS,OAC3B,CACLvP,EAAO9N,OAAO8N,KAAKnE,GACnBkB,EAAIiD,EAAKvL,OACT,MAAOsI,IAAOuS,GAAUzT,EAAImE,EAAKjD,IAAKwS,KA6B1C,IAAII,GAAiBlS,GAAO,SAAU9L,GACpC,IAAIie,EAA6B,MAAnBje,EAAKuM,OAAO,GAC1BvM,EAAOie,EAAUje,EAAKwM,MAAM,GAAKxM,EACjC,IAAIke,EAA6B,MAAnBle,EAAKuM,OAAO,GAC1BvM,EAAOke,EAAUle,EAAKwM,MAAM,GAAKxM,EACjC,IAAI6b,EAA6B,MAAnB7b,EAAKuM,OAAO,GAE1B,OADAvM,EAAO6b,EAAU7b,EAAKwM,MAAM,GAAKxM,EAC1B,CACLA,KAAMA,EACNwO,KAAM0P,EACNrC,QAASA,EACToC,QAASA,MAIb,SAASE,GAAiBC,EAAK9F,GAC7B,SAAS+F,IACP,IAAIC,EAAcpb,UAEdkb,EAAMC,EAAQD,IAClB,IAAIla,MAAMuG,QAAQ2T,GAOhB,OAAOrC,GAAwBqC,EAAK,KAAMlb,UAAWoV,EAAI,gBALzD,IADA,IAAI9C,EAAS4I,EAAI5R,QACRpB,EAAI,EAAGA,EAAIoK,EAAO1S,OAAQsI,IACjC2Q,GAAwBvG,EAAOpK,GAAI,KAAMkT,EAAahG,EAAI,gBAQhE,OADA+F,EAAQD,IAAMA,EACPC,EAGT,SAASE,GACPC,EACAC,EACA/V,EACAgW,EACAC,EACArG,GAEA,IAAItY,EAAc0b,EAAKkD,EAAKC,EAC5B,IAAK7e,KAAQwe,EACF9C,EAAM8C,EAAGxe,GAClB4e,EAAMH,EAAMze,GACZ6e,EAAQb,GAAehe,GACnBsJ,EAAQoS,KAKDpS,EAAQsV,IACbtV,EAAQoS,EAAI0C,OACd1C,EAAM8C,EAAGxe,GAAQme,GAAgBzC,EAAKpD,IAEpC7O,EAAOoV,EAAMrQ,QACfkN,EAAM8C,EAAGxe,GAAQ2e,EAAkBE,EAAM7e,KAAM0b,EAAKmD,EAAMhD,UAE5DnT,EAAImW,EAAM7e,KAAM0b,EAAKmD,EAAMhD,QAASgD,EAAMZ,QAASY,EAAMC,SAChDpD,IAAQkD,IACjBA,EAAIR,IAAM1C,EACV8C,EAAGxe,GAAQ4e,IAGf,IAAK5e,KAAQye,EACPnV,EAAQkV,EAAGxe,MACb6e,EAAQb,GAAehe,GACvB0e,EAAUG,EAAM7e,KAAMye,EAAMze,GAAO6e,EAAMhD,UAO/C,SAASkD,GAAgB9O,EAAK+O,EAAShX,GAIrC,IAAIqW,EAHApO,aAAe0D,KACjB1D,EAAMA,EAAI4D,KAAK7L,OAASiI,EAAI4D,KAAK7L,KAAO,KAG1C,IAAIiX,EAAUhP,EAAI+O,GAElB,SAASE,IACPlX,EAAK/E,MAAMf,KAAMgB,WAGjBqI,EAAO8S,EAAQD,IAAKc,GAGlB5V,EAAQ2V,GAEVZ,EAAUF,GAAgB,CAACe,IAGvB1V,EAAMyV,EAAQb,MAAQ3U,EAAOwV,EAAQE,SAEvCd,EAAUY,EACVZ,EAAQD,IAAInL,KAAKiM,IAGjBb,EAAUF,GAAgB,CAACc,EAASC,IAIxCb,EAAQc,QAAS,EACjBlP,EAAI+O,GAAWX,EAKjB,SAASe,GACPvL,EACA1B,EACAyB,GAKA,IAAI4G,EAAcrI,EAAKhM,QAAQ4S,MAC/B,IAAIzP,EAAQkR,GAAZ,CAGA,IAAI/M,EAAM,GACN4R,EAAQxL,EAAKwL,MACbtG,EAAQlF,EAAKkF,MACjB,GAAIvP,EAAM6V,IAAU7V,EAAMuP,GACxB,IAAK,IAAIxZ,KAAOib,EAAa,CAC3B,IAAI8E,EAAS5S,EAAUnN,GAiBvBggB,GAAU9R,EAAKsL,EAAOxZ,EAAK+f,GAAQ,IACnCC,GAAU9R,EAAK4R,EAAO9f,EAAK+f,GAAQ,GAGvC,OAAO7R,GAGT,SAAS8R,GACP9R,EACA+R,EACAjgB,EACA+f,EACAG,GAEA,GAAIjW,EAAMgW,GAAO,CACf,GAAI3T,EAAO2T,EAAMjgB,GAKf,OAJAkO,EAAIlO,GAAOigB,EAAKjgB,GACXkgB,UACID,EAAKjgB,IAEP,EACF,GAAIsM,EAAO2T,EAAMF,GAKtB,OAJA7R,EAAIlO,GAAOigB,EAAKF,GACXG,UACID,EAAKF,IAEP,EAGX,OAAO,EAiBT,SAASI,GAAyB5L,GAChC,IAAK,IAAI1I,EAAI,EAAGA,EAAI0I,EAAShR,OAAQsI,IACnC,GAAIlH,MAAMuG,QAAQqJ,EAAS1I,IACzB,OAAOlH,MAAMtC,UAAUV,OAAO+B,MAAM,GAAI6Q,GAG5C,OAAOA,EAOT,SAAS6L,GAAmB7L,GAC1B,OAAOnK,EAAYmK,GACf,CAACuB,GAAgBvB,IACjB5P,MAAMuG,QAAQqJ,GACZ8L,GAAuB9L,QACvBrR,EAGR,SAASod,GAAYzK,GACnB,OAAO5L,EAAM4L,IAAS5L,EAAM4L,EAAKrB,OAASrK,EAAQ0L,EAAKT,WAGzD,SAASiL,GAAwB9L,EAAUgM,GACzC,IACI1U,EAAGpI,EAAG+c,EAAWC,EADjBvS,EAAM,GAEV,IAAKrC,EAAI,EAAGA,EAAI0I,EAAShR,OAAQsI,IAC/BpI,EAAI8Q,EAAS1I,GACT9B,EAAQtG,IAAmB,mBAANA,IACzB+c,EAAYtS,EAAI3K,OAAS,EACzBkd,EAAOvS,EAAIsS,GAEP7b,MAAMuG,QAAQzH,GACZA,EAAEF,OAAS,IACbE,EAAI4c,GAAuB5c,GAAK8c,GAAe,IAAM,IAAM1U,GAEvDyU,GAAW7c,EAAE,KAAO6c,GAAWG,KACjCvS,EAAIsS,GAAa1K,GAAgB2K,EAAKjM,KAAQ/Q,EAAE,GAAI+Q,MACpD/Q,EAAEid,SAEJxS,EAAIwF,KAAKhQ,MAAMwK,EAAKzK,IAEb2G,EAAY3G,GACjB6c,GAAWG,GAIbvS,EAAIsS,GAAa1K,GAAgB2K,EAAKjM,KAAO/Q,GAC9B,KAANA,GAETyK,EAAIwF,KAAKoC,GAAgBrS,IAGvB6c,GAAW7c,IAAM6c,GAAWG,GAE9BvS,EAAIsS,GAAa1K,GAAgB2K,EAAKjM,KAAO/Q,EAAE+Q,OAG3CtK,EAAOqK,EAASoM,WAClB1W,EAAMxG,EAAE4Q,MACRtK,EAAQtG,EAAEzD,MACViK,EAAMsW,KACN9c,EAAEzD,IAAM,UAAYugB,EAAc,IAAM1U,EAAI,MAE9CqC,EAAIwF,KAAKjQ,KAIf,OAAOyK,EAKT,SAAS0S,GAAa7H,GACpB,IAAIa,EAAUb,EAAGzP,SAASsQ,QACtBA,IACFb,EAAG8H,UAA+B,oBAAZjH,EAClBA,EAAQvY,KAAK0X,GACba,GAIR,SAASkH,GAAgB/H,GACvB,IAAIvT,EAASub,GAAchI,EAAGzP,SAASoQ,OAAQX,GAC3CvT,IACFyR,IAAgB,GAChBjW,OAAO8N,KAAKtJ,GAAQ6Q,SAAQ,SAAUrW,GAYlC6X,GAAkBkB,EAAI/Y,EAAKwF,EAAOxF,OAGtCiX,IAAgB,IAIpB,SAAS8J,GAAerH,EAAQX,GAC9B,GAAIW,EAAQ,CAOV,IALA,IAAIlU,EAASxE,OAAO0K,OAAO,MACvBoD,EAAOgE,GACPC,QAAQC,QAAQ0G,GAChB1Y,OAAO8N,KAAK4K,GAEP7N,EAAI,EAAGA,EAAIiD,EAAKvL,OAAQsI,IAAK,CACpC,IAAI7L,EAAM8O,EAAKjD,GAEf,GAAY,WAAR7L,EAAJ,CACA,IAAIghB,EAAatH,EAAO1Z,GAAK4E,KACzBiC,EAASkS,EACb,MAAOlS,EAAQ,CACb,GAAIA,EAAOga,WAAavU,EAAOzF,EAAOga,UAAWG,GAAa,CAC5Dxb,EAAOxF,GAAO6G,EAAOga,UAAUG,GAC/B,MAEFna,EAASA,EAAOuV,QAElB,IAAKvV,EACH,GAAI,YAAa6S,EAAO1Z,GAAM,CAC5B,IAAIihB,EAAiBvH,EAAO1Z,GAAK2b,QACjCnW,EAAOxF,GAAiC,oBAAnBihB,EACjBA,EAAe5f,KAAK0X,GACpBkI,OACK,GAKf,OAAOzb,GAWX,SAAS0b,GACP3M,EACA1L,GAEA,IAAK0L,IAAaA,EAAShR,OACzB,MAAO,GAGT,IADA,IAAI4d,EAAQ,GACHtV,EAAI,EAAG0B,EAAIgH,EAAShR,OAAQsI,EAAI0B,EAAG1B,IAAK,CAC/C,IAAI6J,EAAQnB,EAAS1I,GACjByI,EAAOoB,EAAMpB,KAOjB,GALIA,GAAQA,EAAKwL,OAASxL,EAAKwL,MAAMsB,aAC5B9M,EAAKwL,MAAMsB,KAIf1L,EAAM7M,UAAYA,GAAW6M,EAAMb,YAAchM,IACpDyL,GAAqB,MAAbA,EAAK8M,MAUZD,EAAMxF,UAAYwF,EAAMxF,QAAU,KAAKjI,KAAKgC,OAT7C,CACA,IAAIjV,EAAO6T,EAAK8M,KACZA,EAAQD,EAAM1gB,KAAU0gB,EAAM1gB,GAAQ,IACxB,aAAdiV,EAAMrB,IACR+M,EAAK1N,KAAKhQ,MAAM0d,EAAM1L,EAAMnB,UAAY,IAExC6M,EAAK1N,KAAKgC,IAOhB,IAAK,IAAI2L,KAAUF,EACbA,EAAME,GAAQ1S,MAAM2S,YACfH,EAAME,GAGjB,OAAOF,EAGT,SAASG,GAAczL,GACrB,OAAQA,EAAKT,YAAcS,EAAKlB,cAA+B,MAAdkB,EAAKrB,KAKxD,SAAS+M,GACPJ,EACAK,EACAC,GAEA,IAAIvT,EACAwT,EAAiB1gB,OAAO8N,KAAK0S,GAAaje,OAAS,EACnDoe,EAAWR,IAAUA,EAAMS,SAAWF,EACtC1hB,EAAMmhB,GAASA,EAAMU,KACzB,GAAKV,EAEE,IAAIA,EAAMW,YAEf,OAAOX,EAAMW,YACR,GACLH,GACAF,GACAA,IAAc5X,GACd7J,IAAQyhB,EAAUI,OACjBH,IACAD,EAAUM,WAIX,OAAON,EAGP,IAAK,IAAIlI,KADTrL,EAAM,GACYiT,EACZA,EAAM5H,IAAuB,MAAbA,EAAM,KACxBrL,EAAIqL,GAASyI,GAAoBR,EAAajI,EAAO4H,EAAM5H,UAnB/DrL,EAAM,GAwBR,IAAK,IAAI+T,KAAST,EACVS,KAAS/T,IACbA,EAAI+T,GAASC,GAAgBV,EAAaS,IAW9C,OANId,GAASngB,OAAO2W,aAAawJ,KAC/B,EAAQW,YAAc5T,GAExBwC,EAAIxC,EAAK,UAAWyT,GACpBjR,EAAIxC,EAAK,OAAQlO,GACjB0Q,EAAIxC,EAAK,aAAcwT,GAChBxT,EAGT,SAAS8T,GAAoBR,EAAaxhB,EAAKqD,GAC7C,IAAI2W,EAAa,WACf,IAAI9L,EAAMvK,UAAUJ,OAASF,EAAGK,MAAM,KAAMC,WAAaN,EAAG,IAI5D,OAHA6K,EAAMA,GAAsB,kBAARA,IAAqBvJ,MAAMuG,QAAQgD,GACnD,CAACA,GACDkS,GAAkBlS,GACfA,IACU,IAAfA,EAAI3K,QACY,IAAf2K,EAAI3K,QAAgB2K,EAAI,GAAGkH,gBAC1BlS,EACAgL,GAYN,OAPI7K,EAAG8e,OACLnhB,OAAOe,eAAeyf,EAAaxhB,EAAK,CACtCgC,IAAKgY,EACLrJ,YAAY,EACZ/I,cAAc,IAGXoS,EAGT,SAASkI,GAAgBf,EAAOnhB,GAC9B,OAAO,WAAc,OAAOmhB,EAAMnhB,IAQpC,SAASoiB,GACPzX,EACAzC,GAEA,IAAI2F,EAAKhC,EAAG0B,EAAGuB,EAAM9O,EACrB,GAAI2E,MAAMuG,QAAQP,IAAuB,kBAARA,EAE/B,IADAkD,EAAM,IAAIlJ,MAAMgG,EAAIpH,QACfsI,EAAI,EAAG0B,EAAI5C,EAAIpH,OAAQsI,EAAI0B,EAAG1B,IACjCgC,EAAIhC,GAAK3D,EAAOyC,EAAIkB,GAAIA,QAErB,GAAmB,kBAARlB,EAEhB,IADAkD,EAAM,IAAIlJ,MAAMgG,GACXkB,EAAI,EAAGA,EAAIlB,EAAKkB,IACnBgC,EAAIhC,GAAK3D,EAAO2D,EAAI,EAAGA,QAEpB,GAAIxB,EAASM,GAClB,GAAImI,IAAanI,EAAIpK,OAAOsF,UAAW,CACrCgI,EAAM,GACN,IAAIhI,EAAW8E,EAAIpK,OAAOsF,YACtBL,EAASK,EAASpB,OACtB,OAAQe,EAAOd,KACbmJ,EAAI6F,KAAKxL,EAAO1C,EAAOvF,MAAO4N,EAAItK,SAClCiC,EAASK,EAASpB,YAKpB,IAFAqK,EAAO9N,OAAO8N,KAAKnE,GACnBkD,EAAM,IAAIlJ,MAAMmK,EAAKvL,QAChBsI,EAAI,EAAG0B,EAAIuB,EAAKvL,OAAQsI,EAAI0B,EAAG1B,IAClC7L,EAAM8O,EAAKjD,GACXgC,EAAIhC,GAAK3D,EAAOyC,EAAI3K,GAAMA,EAAK6L,GAQrC,OAJK5B,EAAM4D,KACTA,EAAM,IAER,EAAM8S,UAAW,EACV9S,EAQT,SAASwU,GACP5hB,EACA6hB,EACA9I,EACA+I,GAEA,IACIC,EADAC,EAAe9f,KAAK+f,aAAajiB,GAEjCgiB,GACFjJ,EAAQA,GAAS,GACb+I,IAOF/I,EAAQ1L,EAAOA,EAAO,GAAIyU,GAAa/I,IAEzCgJ,EAAQC,EAAajJ,IAAU8I,GAE/BE,EAAQ7f,KAAKggB,OAAOliB,IAAS6hB,EAG/B,IAAIvb,EAASyS,GAASA,EAAM4H,KAC5B,OAAIra,EACKpE,KAAKigB,eAAe,WAAY,CAAExB,KAAMra,GAAUyb,GAElDA,EASX,SAASK,GAAevP,GACtB,OAAOqH,GAAahY,KAAK2G,SAAU,UAAWgK,GAAI,IAASjF,EAK7D,SAASyU,GAAeC,EAAQC,GAC9B,OAAIre,MAAMuG,QAAQ6X,IACmB,IAA5BA,EAAO5W,QAAQ6W,GAEfD,IAAWC,EAStB,SAASC,GACPC,EACAljB,EACAmjB,EACAC,EACAC,GAEA,IAAIC,EAAgBjU,EAAOS,SAAS9P,IAAQmjB,EAC5C,OAAIE,GAAkBD,IAAiB/T,EAAOS,SAAS9P,GAC9C8iB,GAAcO,EAAgBD,GAC5BE,EACFR,GAAcQ,EAAeJ,GAC3BE,EACFjW,EAAUiW,KAAkBpjB,OAD9B,EAUT,SAASujB,GACPjP,EACAD,EACApU,EACAujB,EACAC,GAEA,GAAIxjB,EACF,GAAKoK,EAASpK,GAKP,CAIL,IAAIggB,EAHAtb,MAAMuG,QAAQjL,KAChBA,EAAQgO,EAAShO,IAGnB,IAAIyjB,EAAO,SAAW1jB,GACpB,GACU,UAARA,GACQ,UAARA,GACA+L,EAAoB/L,GAEpBigB,EAAO3L,MACF,CACL,IAAIgF,EAAOhF,EAAKwL,OAASxL,EAAKwL,MAAMxG,KACpC2G,EAAOuD,GAAUnU,EAAOe,YAAYiE,EAAKiF,EAAMtZ,GAC3CsU,EAAKqP,WAAarP,EAAKqP,SAAW,IAClCrP,EAAKwL,QAAUxL,EAAKwL,MAAQ,IAElC,IAAI8D,EAAejX,EAAS3M,GACxB6jB,EAAgB1W,EAAUnN,GAC9B,KAAM4jB,KAAgB3D,MAAW4D,KAAiB5D,KAChDA,EAAKjgB,GAAOC,EAAMD,GAEdyjB,GAAQ,CACV,IAAIxE,EAAK3K,EAAK2K,KAAO3K,EAAK2K,GAAK,IAC/BA,EAAI,UAAYjf,GAAQ,SAAU8jB,GAChC7jB,EAAMD,GAAO8jB,KAMrB,IAAK,IAAI9jB,KAAOC,EAAOyjB,EAAM1jB,QAGjC,OAAOsU,EAQT,SAASyP,GACPhe,EACAie,GAEA,IAAIzX,EAAS5J,KAAKshB,eAAiBthB,KAAKshB,aAAe,IACnDC,EAAO3X,EAAOxG,GAGlB,OAAIme,IAASF,EACJE,GAGTA,EAAO3X,EAAOxG,GAASpD,KAAK2G,SAASnB,gBAAgBpC,GAAO1E,KAC1DsB,KAAKwhB,aACL,KACAxhB,MAEFyhB,GAAWF,EAAO,aAAene,GAAQ,GAClCme,GAOT,SAASG,GACPH,EACAne,EACA/F,GAGA,OADAokB,GAAWF,EAAO,WAAane,GAAS/F,EAAO,IAAMA,EAAO,KAAM,GAC3DkkB,EAGT,SAASE,GACPF,EACAlkB,EACAsV,GAEA,GAAI3Q,MAAMuG,QAAQgZ,GAChB,IAAK,IAAIrY,EAAI,EAAGA,EAAIqY,EAAK3gB,OAAQsI,IAC3BqY,EAAKrY,IAAyB,kBAAZqY,EAAKrY,IACzByY,GAAeJ,EAAKrY,GAAK7L,EAAM,IAAM6L,EAAIyJ,QAI7CgP,GAAeJ,EAAMlkB,EAAKsV,GAI9B,SAASgP,GAAgBzO,EAAM7V,EAAKsV,GAClCO,EAAKX,UAAW,EAChBW,EAAK7V,IAAMA,EACX6V,EAAKP,OAASA,EAKhB,SAASiP,GAAqBjQ,EAAMrU,GAClC,GAAIA,EACF,GAAKuK,EAAcvK,GAKZ,CACL,IAAIgf,EAAK3K,EAAK2K,GAAK3K,EAAK2K,GAAKnR,EAAO,GAAIwG,EAAK2K,IAAM,GACnD,IAAK,IAAIjf,KAAOC,EAAO,CACrB,IAAI0J,EAAWsV,EAAGjf,GACdwkB,EAAOvkB,EAAMD,GACjBif,EAAGjf,GAAO2J,EAAW,GAAGhI,OAAOgI,EAAU6a,GAAQA,QAIvD,OAAOlQ,EAKT,SAASmQ,GACP5F,EACA3Q,EAEAwW,EACAC,GAEAzW,EAAMA,GAAO,CAAE0T,SAAU8C,GACzB,IAAK,IAAI7Y,EAAI,EAAGA,EAAIgT,EAAItb,OAAQsI,IAAK,CACnC,IAAIuV,EAAOvC,EAAIhT,GACXlH,MAAMuG,QAAQkW,GAChBqD,GAAmBrD,EAAMlT,EAAKwW,GACrBtD,IAELA,EAAKe,QACPf,EAAK/d,GAAG8e,OAAQ,GAElBjU,EAAIkT,EAAKphB,KAAOohB,EAAK/d,IAMzB,OAHIshB,IACF,EAAM9C,KAAO8C,GAERzW,EAKT,SAAS0W,GAAiBC,EAASC,GACjC,IAAK,IAAIjZ,EAAI,EAAGA,EAAIiZ,EAAOvhB,OAAQsI,GAAK,EAAG,CACzC,IAAI7L,EAAM8kB,EAAOjZ,GACE,kBAAR7L,GAAoBA,IAC7B6kB,EAAQC,EAAOjZ,IAAMiZ,EAAOjZ,EAAI,IASpC,OAAOgZ,EAMT,SAASE,GAAiB9kB,EAAO+kB,GAC/B,MAAwB,kBAAV/kB,EAAqB+kB,EAAS/kB,EAAQA,EAKtD,SAASglB,GAAsBle,GAC7BA,EAAOme,GAAKb,GACZtd,EAAOoe,GAAK9Z,EACZtE,EAAOqe,GAAKjhB,EACZ4C,EAAOse,GAAKjD,GACZrb,EAAOue,GAAKjD,GACZtb,EAAOwe,GAAKjX,EACZvH,EAAOye,GAAKxW,EACZjI,EAAO0e,GAAK1B,GACZhd,EAAO2e,GAAK7C,GACZ9b,EAAO4e,GAAK1C,GACZlc,EAAO6e,GAAKrC,GACZxc,EAAO8e,GAAK/P,GACZ/O,EAAO+e,GAAKlQ,GACZ7O,EAAOgf,GAAKtB,GACZ1d,EAAOif,GAAKzB,GACZxd,EAAOkf,GAAKrB,GACZ7d,EAAOmf,GAAKnB,GAKd,SAASoB,GACP7R,EACAkF,EACAjF,EACAvL,EACA4J,GAEA,IAKIwT,EALAC,EAAS1jB,KAETiE,EAAUgM,EAAKhM,QAIf0F,EAAOtD,EAAQ,SACjBod,EAAYplB,OAAO0K,OAAO1C,GAE1Bod,EAAUE,UAAYtd,IAKtBod,EAAYpd,EAEZA,EAASA,EAAOsd,WAElB,IAAIC,EAAarc,EAAOtD,EAAQ8B,WAC5B8d,GAAqBD,EAEzB5jB,KAAK2R,KAAOA,EACZ3R,KAAK6W,MAAQA,EACb7W,KAAK4R,SAAWA,EAChB5R,KAAKqG,OAASA,EACdrG,KAAK8jB,UAAYnS,EAAK2K,IAAMpV,EAC5BlH,KAAK+jB,WAAa3F,GAAcna,EAAQ8S,OAAQ1Q,GAChDrG,KAAKwe,MAAQ,WAOX,OANKkF,EAAO1D,QACVpB,GACEjN,EAAKqS,YACLN,EAAO1D,OAASzB,GAAa3M,EAAUvL,IAGpCqd,EAAO1D,QAGhB3hB,OAAOe,eAAeY,KAAM,cAAe,CACzCgO,YAAY,EACZ3O,IAAK,WACH,OAAOuf,GAAqBjN,EAAKqS,YAAahkB,KAAKwe,YAKnDoF,IAEF5jB,KAAK2G,SAAW1C,EAEhBjE,KAAKggB,OAAShgB,KAAKwe,QACnBxe,KAAK+f,aAAenB,GAAqBjN,EAAKqS,YAAahkB,KAAKggB,SAG9D/b,EAAQgC,SACVjG,KAAKikB,GAAK,SAAU3kB,EAAGuB,EAAGC,EAAGojB,GAC3B,IAAI7Q,EAAQlU,GAAcskB,EAAWnkB,EAAGuB,EAAGC,EAAGojB,EAAGL,GAKjD,OAJIxQ,IAAUrR,MAAMuG,QAAQ8K,KAC1BA,EAAMjB,UAAYnO,EAAQgC,SAC1BoN,EAAMnB,UAAY7L,GAEbgN,GAGTrT,KAAKikB,GAAK,SAAU3kB,EAAGuB,EAAGC,EAAGojB,GAAK,OAAO/kB,GAAcskB,EAAWnkB,EAAGuB,EAAGC,EAAGojB,EAAGL,IAMlF,SAASM,GACPlU,EACAsI,EACA5G,EACA8R,EACA7R,GAEA,IAAI3N,EAAUgM,EAAKhM,QACf4S,EAAQ,GACRyB,EAAcrU,EAAQ4S,MAC1B,GAAIvP,EAAMgR,GACR,IAAK,IAAIjb,KAAOib,EACdzB,EAAMxZ,GAAOgb,GAAahb,EAAKib,EAAaC,GAAarR,QAGvDI,EAAMqK,EAAKwL,QAAUiH,GAAWvN,EAAOlF,EAAKwL,OAC5C7V,EAAMqK,EAAKkF,QAAUuN,GAAWvN,EAAOlF,EAAKkF,OAGlD,IAAIwN,EAAgB,IAAIb,GACtB7R,EACAkF,EACAjF,EACA6R,EACAxT,GAGEoD,EAAQpP,EAAQsB,OAAO7G,KAAK,KAAM2lB,EAAcJ,GAAII,GAExD,GAAIhR,aAAiB5B,GACnB,OAAO6S,GAA6BjR,EAAO1B,EAAM0S,EAAche,OAAQpC,EAASogB,GAC3E,GAAIriB,MAAMuG,QAAQ8K,GAAQ,CAG/B,IAFA,IAAIkR,EAAS9G,GAAkBpK,IAAU,GACrC9H,EAAM,IAAIvJ,MAAMuiB,EAAO3jB,QAClBsI,EAAI,EAAGA,EAAIqb,EAAO3jB,OAAQsI,IACjCqC,EAAIrC,GAAKob,GAA6BC,EAAOrb,GAAIyI,EAAM0S,EAAche,OAAQpC,EAASogB,GAExF,OAAO9Y,GAIX,SAAS+Y,GAA8BjR,EAAO1B,EAAM8R,EAAWxf,EAASogB,GAItE,IAAIG,EAAQpR,GAAWC,GASvB,OARAmR,EAAMtS,UAAYuR,EAClBe,EAAMrS,UAAYlO,EAId0N,EAAK8M,QACN+F,EAAM7S,OAAS6S,EAAM7S,KAAO,KAAK8M,KAAO9M,EAAK8M,MAEzC+F,EAGT,SAASJ,GAAYhZ,EAAInJ,GACvB,IAAK,IAAI5E,KAAO4E,EACdmJ,EAAGpB,EAAS3M,IAAQ4E,EAAK5E,GA7D7BilB,GAAqBkB,GAAwB9jB,WA0E7C,IAAI+kB,GAAsB,CACxBC,KAAM,SAAerR,EAAOsR,GAC1B,GACEtR,EAAMhB,oBACLgB,EAAMhB,kBAAkBuS,cACzBvR,EAAM1B,KAAKkT,UACX,CAEA,IAAIC,EAAczR,EAClBoR,GAAoBM,SAASD,EAAaA,OACrC,CACL,IAAI/R,EAAQM,EAAMhB,kBAAoB2S,GACpC3R,EACA4R,IAEFlS,EAAMmS,OAAOP,EAAYtR,EAAMvB,SAAMvR,EAAWokB,KAIpDI,SAAU,SAAmBI,EAAU9R,GACrC,IAAIpP,EAAUoP,EAAMtB,iBAChBgB,EAAQM,EAAMhB,kBAAoB8S,EAAS9S,kBAC/C+S,GACErS,EACA9O,EAAQsU,UACRtU,EAAQ6f,UACRzQ,EACApP,EAAQ2N,WAIZyT,OAAQ,SAAiBhS,GACvB,IAAInN,EAAUmN,EAAMnN,QAChBmM,EAAoBgB,EAAMhB,kBACzBA,EAAkBiT,aACrBjT,EAAkBiT,YAAa,EAC/BC,GAASlT,EAAmB,YAE1BgB,EAAM1B,KAAKkT,YACT3e,EAAQof,WAMVE,GAAwBnT,GAExBoT,GAAuBpT,GAAmB,KAKhDqT,QAAS,SAAkBrS,GACzB,IAAIhB,EAAoBgB,EAAMhB,kBACzBA,EAAkBuS,eAChBvR,EAAM1B,KAAKkT,UAGdc,GAAyBtT,GAAmB,GAF5CA,EAAkBuT,cAQtBC,GAAexnB,OAAO8N,KAAKsY,IAE/B,SAASqB,GACP7V,EACA0B,EACAzL,EACA0L,EACAF,GAEA,IAAItK,EAAQ6I,GAAZ,CAIA,IAAI8V,EAAW7f,EAAQS,SAASgR,MAShC,GANIjQ,EAASuI,KACXA,EAAO8V,EAAS5a,OAAO8E,IAKL,oBAATA,EAAX,CAQA,IAAI+B,EACJ,GAAI5K,EAAQ6I,EAAK+V,OACfhU,EAAe/B,EACfA,EAAOgW,GAAsBjU,EAAc+T,QAC9BxlB,IAAT0P,GAIF,OAAOiW,GACLlU,EACAL,EACAzL,EACA0L,EACAF,GAKNC,EAAOA,GAAQ,GAIfwU,GAA0BlW,GAGtB3I,EAAMqK,EAAKyU,QACbC,GAAepW,EAAKhM,QAAS0N,GAI/B,IAAI4G,EAAY2E,GAA0BvL,EAAM1B,EAAMyB,GAGtD,GAAInK,EAAO0I,EAAKhM,QAAQ+B,YACtB,OAAOme,GAA0BlU,EAAMsI,EAAW5G,EAAMzL,EAAS0L,GAKnE,IAAIkS,EAAYnS,EAAK2K,GAKrB,GAFA3K,EAAK2K,GAAK3K,EAAK2U,SAEX/e,EAAO0I,EAAKhM,QAAQsiB,UAAW,CAKjC,IAAI9H,EAAO9M,EAAK8M,KAChB9M,EAAO,GACH8M,IACF9M,EAAK8M,KAAOA,GAKhB+H,GAAsB7U,GAGtB,IAAI7T,EAAOmS,EAAKhM,QAAQnG,MAAQ4T,EAC5B2B,EAAQ,IAAI5B,GACb,iBAAoBxB,EAAQ,KAAKnS,EAAQ,IAAMA,EAAQ,IACxD6T,OAAMpR,OAAWA,OAAWA,EAAW2F,EACvC,CAAE+J,KAAMA,EAAMsI,UAAWA,EAAWuL,UAAWA,EAAWpS,IAAKA,EAAKE,SAAUA,GAC9EI,GAGF,OAAOqB,IAGT,SAAS2R,GACP3R,EACAhN,GAEA,IAAIpC,EAAU,CACZwiB,cAAc,EACdC,aAAcrT,EACdhN,OAAQA,GAGNsgB,EAAiBtT,EAAM1B,KAAKgV,eAKhC,OAJIrf,EAAMqf,KACR1iB,EAAQsB,OAASohB,EAAephB,OAChCtB,EAAQuB,gBAAkBmhB,EAAenhB,iBAEpC,IAAI6N,EAAMtB,iBAAiB9B,KAAKhM,GAGzC,SAASuiB,GAAuB7U,GAE9B,IADA,IAAI8E,EAAQ9E,EAAK7L,OAAS6L,EAAK7L,KAAO,IAC7BoD,EAAI,EAAGA,EAAI2c,GAAajlB,OAAQsI,IAAK,CAC5C,IAAI7L,EAAMwoB,GAAa3c,GACnBlC,EAAWyP,EAAMpZ,GACjBupB,EAAUnC,GAAoBpnB,GAC9B2J,IAAa4f,GAAa5f,GAAYA,EAAS6f,UACjDpQ,EAAMpZ,GAAO2J,EAAW8f,GAAYF,EAAS5f,GAAY4f,IAK/D,SAASE,GAAaC,EAAIC,GACxB,IAAI/J,EAAS,SAAU3d,EAAGuB,GAExBkmB,EAAGznB,EAAGuB,GACNmmB,EAAG1nB,EAAGuB,IAGR,OADAoc,EAAO4J,SAAU,EACV5J,EAKT,SAASoJ,GAAgBpiB,EAAS0N,GAChC,IAAI6G,EAAQvU,EAAQmiB,OAASniB,EAAQmiB,MAAM5N,MAAS,QAChDmE,EAAS1Y,EAAQmiB,OAASniB,EAAQmiB,MAAMzJ,OAAU,SACpDhL,EAAKwL,QAAUxL,EAAKwL,MAAQ,KAAK3E,GAAQ7G,EAAKyU,MAAM9oB,MACtD,IAAIgf,EAAK3K,EAAK2K,KAAO3K,EAAK2K,GAAK,IAC3BtV,EAAWsV,EAAGK,GACdsK,EAAWtV,EAAKyU,MAAMa,SACtB3f,EAAMN,IAENhF,MAAMuG,QAAQvB,IACsB,IAAhCA,EAASwC,QAAQyd,GACjBjgB,IAAaigB,KAEjB3K,EAAGK,GAAS,CAACsK,GAAUjoB,OAAOgI,IAGhCsV,EAAGK,GAASsK,EAMhB,IAAIC,GAAmB,EACnBC,GAAmB,EAIvB,SAAShoB,GACP+G,EACAwL,EACAC,EACAC,EACAwV,EACAC,GAUA,OARIrlB,MAAMuG,QAAQoJ,IAASlK,EAAYkK,MACrCyV,EAAoBxV,EACpBA,EAAWD,EACXA,OAAOpR,GAELgH,EAAO8f,KACTD,EAAoBD,IAEfG,GAAephB,EAASwL,EAAKC,EAAMC,EAAUwV,GAGtD,SAASE,GACPphB,EACAwL,EACAC,EACAC,EACAwV,GAEA,GAAI9f,EAAMqK,IAASrK,EAAM,EAAO2M,QAM9B,OAAOhB,KAMT,GAHI3L,EAAMqK,IAASrK,EAAMqK,EAAK4V,MAC5B7V,EAAMC,EAAK4V,KAER7V,EAEH,OAAOuB,KA2BT,IAAII,EAAOpB,EAELhC,GAdFjO,MAAMuG,QAAQqJ,IACO,oBAAhBA,EAAS,KAEhBD,EAAOA,GAAQ,GACfA,EAAKqS,YAAc,CAAEhL,QAASpH,EAAS,IACvCA,EAAShR,OAAS,GAEhBwmB,IAAsBD,GACxBvV,EAAW6L,GAAkB7L,GACpBwV,IAAsBF,KAC/BtV,EAAW4L,GAAwB5L,IAGlB,kBAARF,IAETO,EAAM/L,EAAQC,QAAUD,EAAQC,OAAO8L,IAAOvF,EAAOa,gBAAgBmE,GAGnE2B,EAFE3G,EAAOU,cAAcsE,GAEf,IAAID,GACV/E,EAAOc,qBAAqBkE,GAAMC,EAAMC,OACxCrR,OAAWA,EAAW2F,GAEbyL,GAASA,EAAK6V,MAAQlgB,EAAM2I,EAAO+H,GAAa9R,EAAQS,SAAU,aAAc+K,IAOnF,IAAID,GACVC,EAAKC,EAAMC,OACXrR,OAAWA,EAAW2F,GAPhB4f,GAAgB7V,EAAM0B,EAAMzL,EAAS0L,EAAUF,IAYzD2B,EAAQyS,GAAgBpU,EAAKC,EAAMzL,EAAS0L,GAE9C,OAAI5P,MAAMuG,QAAQ8K,GACTA,EACE/L,EAAM+L,IACX/L,EAAM2K,IAAOwV,GAAQpU,EAAOpB,GAC5B3K,EAAMqK,IAAS+V,GAAqB/V,GACjC0B,GAEAJ,KAIX,SAASwU,GAASpU,EAAOpB,EAAI0V,GAO3B,GANAtU,EAAMpB,GAAKA,EACO,kBAAdoB,EAAM3B,MAERO,OAAK1R,EACLonB,GAAQ,GAENrgB,EAAM+L,EAAMzB,UACd,IAAK,IAAI1I,EAAI,EAAG0B,EAAIyI,EAAMzB,SAAShR,OAAQsI,EAAI0B,EAAG1B,IAAK,CACrD,IAAI6J,EAAQM,EAAMzB,SAAS1I,GACvB5B,EAAMyL,EAAMrB,OACdtK,EAAQ2L,EAAMd,KAAQ1K,EAAOogB,IAAwB,QAAd5U,EAAMrB,MAC7C+V,GAAQ1U,EAAOd,EAAI0V,IAS3B,SAASD,GAAsB/V,GACzBjK,EAASiK,EAAKiW,QAChBpM,GAAS7J,EAAKiW,OAEZlgB,EAASiK,EAAKkW,QAChBrM,GAAS7J,EAAKkW,OAMlB,SAASC,GAAY1R,GACnBA,EAAG2R,OAAS,KACZ3R,EAAGkL,aAAe,KAClB,IAAIrd,EAAUmS,EAAGzP,SACbqhB,EAAc5R,EAAGjQ,OAASlC,EAAQyiB,aAClCrC,EAAgB2D,GAAeA,EAAY9hB,QAC/CkQ,EAAG4J,OAASzB,GAAata,EAAQgkB,gBAAiB5D,GAClDjO,EAAG2J,aAAe7Y,EAKlBkP,EAAG6N,GAAK,SAAU3kB,EAAGuB,EAAGC,EAAGojB,GAAK,OAAO/kB,GAAciX,EAAI9W,EAAGuB,EAAGC,EAAGojB,GAAG,IAGrE9N,EAAG6J,eAAiB,SAAU3gB,EAAGuB,EAAGC,EAAGojB,GAAK,OAAO/kB,GAAciX,EAAI9W,EAAGuB,EAAGC,EAAGojB,GAAG,IAIjF,IAAIgE,EAAaF,GAAeA,EAAYrW,KAW1CuD,GAAkBkB,EAAI,SAAU8R,GAAcA,EAAW/K,OAASjW,EAAa,MAAM,GACrFgO,GAAkBkB,EAAI,aAAcnS,EAAQkkB,kBAAoBjhB,EAAa,MAAM,GAIvF,IAkQI9C,GAlQAgkB,GAA2B,KAE/B,SAASC,GAAaC,GAEpBhG,GAAqBgG,EAAI5oB,WAEzB4oB,EAAI5oB,UAAU6oB,UAAY,SAAU7nB,GAClC,OAAO0a,GAAS1a,EAAIV,OAGtBsoB,EAAI5oB,UAAU8oB,QAAU,WACtB,IAiBInV,EAjBA+C,EAAKpW,KACLyoB,EAAMrS,EAAGzP,SACTpB,EAASkjB,EAAIljB,OACbmhB,EAAe+B,EAAI/B,aAEnBA,IACFtQ,EAAG2J,aAAenB,GAChB8H,EAAa/U,KAAKqS,YAClB5N,EAAG4J,OACH5J,EAAG2J,eAMP3J,EAAGjQ,OAASugB,EAGZ,IAIE0B,GAA2BhS,EAC3B/C,EAAQ9N,EAAO7G,KAAK0X,EAAGoL,aAAcpL,EAAG6J,gBACxC,MAAOhU,IACPoN,GAAYpN,GAAGmK,EAAI,UAYjB/C,EAAQ+C,EAAG2R,OAEb,QACAK,GAA2B,KAmB7B,OAhBIpmB,MAAMuG,QAAQ8K,IAA2B,IAAjBA,EAAMzS,SAChCyS,EAAQA,EAAM,IAGVA,aAAiB5B,KAQrB4B,EAAQJ,MAGVI,EAAMhN,OAASqgB,EACRrT,GAMX,SAASqV,GAAYC,EAAMC,GAOzB,OALED,EAAKE,YACJ1Y,IAA0C,WAA7BwY,EAAK/qB,OAAOkrB,gBAE1BH,EAAOA,EAAK3P,SAEPtR,EAASihB,GACZC,EAAKzd,OAAOwd,GACZA,EAGN,SAASzC,GACP6C,EACApX,EACAzL,EACA0L,EACAF,GAEA,IAAIwB,EAAOD,KAGX,OAFAC,EAAKlB,aAAe+W,EACpB7V,EAAKN,UAAY,CAAEjB,KAAMA,EAAMzL,QAASA,EAAS0L,SAAUA,EAAUF,IAAKA,GACnEwB,EAGT,SAAS+S,GACP8C,EACAhD,GAEA,GAAIxe,EAAOwhB,EAAQtqB,QAAU6I,EAAMyhB,EAAQC,WACzC,OAAOD,EAAQC,UAGjB,GAAI1hB,EAAMyhB,EAAQE,UAChB,OAAOF,EAAQE,SAGjB,IAAIC,EAAQd,GAMZ,GALIc,GAAS5hB,EAAMyhB,EAAQI,UAA8C,IAAnCJ,EAAQI,OAAO3f,QAAQ0f,IAE3DH,EAAQI,OAAOpY,KAAKmY,GAGlB3hB,EAAOwhB,EAAQK,UAAY9hB,EAAMyhB,EAAQM,aAC3C,OAAON,EAAQM,YAGjB,GAAIH,IAAU5hB,EAAMyhB,EAAQI,QAAS,CACnC,IAAIA,EAASJ,EAAQI,OAAS,CAACD,GAC3BI,GAAO,EACPC,EAAe,KACfC,EAAe,KAElB,EAAQC,IAAI,kBAAkB,WAAc,OAAOpgB,EAAO8f,EAAQD,MAEnE,IAAIQ,EAAc,SAAUC,GAC1B,IAAK,IAAIzgB,EAAI,EAAG0B,EAAIue,EAAOvoB,OAAQsI,EAAI0B,EAAG1B,IACvCigB,EAAOjgB,GAAI0gB,eAGVD,IACFR,EAAOvoB,OAAS,EACK,OAAjB2oB,IACFM,aAAaN,GACbA,EAAe,MAEI,OAAjBC,IACFK,aAAaL,GACbA,EAAe,QAKjB9O,EAAUpO,GAAK,SAAUf,GAE3Bwd,EAAQE,SAAWP,GAAWnd,EAAKwa,GAG9BuD,EAGHH,EAAOvoB,OAAS,EAFhB8oB,GAAY,MAMZI,EAASxd,GAAK,SAAUyd,GAKtBziB,EAAMyhB,EAAQC,aAChBD,EAAQtqB,OAAQ,EAChBirB,GAAY,OAIZne,EAAMwd,EAAQrO,EAASoP,GA+C3B,OA7CIpiB,EAAS6D,KACPnD,EAAUmD,GAERnE,EAAQ2hB,EAAQE,WAClB1d,EAAIlD,KAAKqS,EAASoP,GAEX1hB,EAAUmD,EAAIye,aACvBze,EAAIye,UAAU3hB,KAAKqS,EAASoP,GAExBxiB,EAAMiE,EAAI9M,SACZsqB,EAAQC,UAAYN,GAAWnd,EAAI9M,MAAOsnB,IAGxCze,EAAMiE,EAAI6d,WACZL,EAAQM,YAAcX,GAAWnd,EAAI6d,QAASrD,GAC5B,IAAdxa,EAAI0e,MACNlB,EAAQK,SAAU,EAElBG,EAAe5O,YAAW,WACxB4O,EAAe,KACXniB,EAAQ2hB,EAAQE,WAAa7hB,EAAQ2hB,EAAQtqB,SAC/CsqB,EAAQK,SAAU,EAClBM,GAAY,MAEbne,EAAI0e,OAAS,MAIhB3iB,EAAMiE,EAAI2e,WACZV,EAAe7O,YAAW,WACxB6O,EAAe,KACXpiB,EAAQ2hB,EAAQE,WAClBa,EAGM,QAGPve,EAAI2e,YAKbZ,GAAO,EAEAP,EAAQK,QACXL,EAAQM,YACRN,EAAQE,UAMhB,SAASpW,GAAoBK,GAC3B,OAAOA,EAAKT,WAAaS,EAAKlB,aAKhC,SAASmY,GAAwBvY,GAC/B,GAAI5P,MAAMuG,QAAQqJ,GAChB,IAAK,IAAI1I,EAAI,EAAGA,EAAI0I,EAAShR,OAAQsI,IAAK,CACxC,IAAIpI,EAAI8Q,EAAS1I,GACjB,GAAI5B,EAAMxG,KAAOwG,EAAMxG,EAAEiR,mBAAqBc,GAAmB/R,IAC/D,OAAOA,GAUf,SAASspB,GAAYhU,GACnBA,EAAGiU,QAAUhsB,OAAO0K,OAAO,MAC3BqN,EAAGkU,eAAgB,EAEnB,IAAIxG,EAAY1N,EAAGzP,SAASwhB,iBACxBrE,GACFyG,GAAyBnU,EAAI0N,GAMjC,SAAStd,GAAKmW,EAAOjc,GACnB0D,GAAOqlB,IAAI9M,EAAOjc,GAGpB,SAAS8pB,GAAU7N,EAAOjc,GACxB0D,GAAOqmB,KAAK9N,EAAOjc,GAGrB,SAAS+b,GAAmBE,EAAOjc,GACjC,IAAIgqB,EAAUtmB,GACd,OAAO,SAASumB,IACd,IAAIpf,EAAM7K,EAAGK,MAAM,KAAMC,WACb,OAARuK,GACFmf,EAAQD,KAAK9N,EAAOgO,IAK1B,SAASJ,GACPnU,EACA0N,EACA8G,GAEAxmB,GAASgS,EACTiG,GAAgByH,EAAW8G,GAAgB,GAAIpkB,GAAKgkB,GAAU/N,GAAmBrG,GACjFhS,QAAS7D,EAGX,SAASsqB,GAAavC,GACpB,IAAIwC,EAAS,SACbxC,EAAI5oB,UAAU+pB,IAAM,SAAU9M,EAAOjc,GACnC,IAAI0V,EAAKpW,KACT,GAAIgC,MAAMuG,QAAQoU,GAChB,IAAK,IAAIzT,EAAI,EAAG0B,EAAI+R,EAAM/b,OAAQsI,EAAI0B,EAAG1B,IACvCkN,EAAGqT,IAAI9M,EAAMzT,GAAIxI,QAGlB0V,EAAGiU,QAAQ1N,KAAWvG,EAAGiU,QAAQ1N,GAAS,KAAK5L,KAAKrQ,GAGjDoqB,EAAOxpB,KAAKqb,KACdvG,EAAGkU,eAAgB,GAGvB,OAAOlU,GAGTkS,EAAI5oB,UAAUqrB,MAAQ,SAAUpO,EAAOjc,GACrC,IAAI0V,EAAKpW,KACT,SAASsc,IACPlG,EAAGqU,KAAK9N,EAAOL,GACf5b,EAAGK,MAAMqV,EAAIpV,WAIf,OAFAsb,EAAG5b,GAAKA,EACR0V,EAAGqT,IAAI9M,EAAOL,GACPlG,GAGTkS,EAAI5oB,UAAU+qB,KAAO,SAAU9N,EAAOjc,GACpC,IAAI0V,EAAKpW,KAET,IAAKgB,UAAUJ,OAEb,OADAwV,EAAGiU,QAAUhsB,OAAO0K,OAAO,MACpBqN,EAGT,GAAIpU,MAAMuG,QAAQoU,GAAQ,CACxB,IAAK,IAAIqO,EAAM,EAAGpgB,EAAI+R,EAAM/b,OAAQoqB,EAAMpgB,EAAGogB,IAC3C5U,EAAGqU,KAAK9N,EAAMqO,GAAMtqB,GAEtB,OAAO0V,EAGT,IASIiF,EATA4P,EAAM7U,EAAGiU,QAAQ1N,GACrB,IAAKsO,EACH,OAAO7U,EAET,IAAK1V,EAEH,OADA0V,EAAGiU,QAAQ1N,GAAS,KACbvG,EAIT,IAAIlN,EAAI+hB,EAAIrqB,OACZ,MAAOsI,IAEL,GADAmS,EAAK4P,EAAI/hB,GACLmS,IAAO3a,GAAM2a,EAAG3a,KAAOA,EAAI,CAC7BuqB,EAAIxhB,OAAOP,EAAG,GACd,MAGJ,OAAOkN,GAGTkS,EAAI5oB,UAAUwrB,MAAQ,SAAUvO,GAC9B,IAAIvG,EAAKpW,KAaLirB,EAAM7U,EAAGiU,QAAQ1N,GACrB,GAAIsO,EAAK,CACPA,EAAMA,EAAIrqB,OAAS,EAAIoK,EAAQigB,GAAOA,EAGtC,IAFA,IAAIpX,EAAO7I,EAAQhK,UAAW,GAC1BuY,EAAO,sBAAyBoD,EAAQ,IACnCzT,EAAI,EAAG0B,EAAIqgB,EAAIrqB,OAAQsI,EAAI0B,EAAG1B,IACrC2Q,GAAwBoR,EAAI/hB,GAAIkN,EAAIvC,EAAMuC,EAAImD,GAGlD,OAAOnD,GAMX,IAAI6O,GAAiB,KAGrB,SAASkG,GAAkB/U,GACzB,IAAIgV,EAAqBnG,GAEzB,OADAA,GAAiB7O,EACV,WACL6O,GAAiBmG,GAIrB,SAASC,GAAejV,GACtB,IAAInS,EAAUmS,EAAGzP,SAGbN,EAASpC,EAAQoC,OACrB,GAAIA,IAAWpC,EAAQsiB,SAAU,CAC/B,MAAOlgB,EAAOM,SAAS4f,UAAYlgB,EAAOoT,QACxCpT,EAASA,EAAOoT,QAElBpT,EAAOilB,UAAUva,KAAKqF,GAGxBA,EAAGqD,QAAUpT,EACb+P,EAAG1P,MAAQL,EAASA,EAAOK,MAAQ0P,EAEnCA,EAAGkV,UAAY,GACflV,EAAGmV,MAAQ,GAEXnV,EAAGoV,SAAW,KACdpV,EAAGqV,UAAY,KACfrV,EAAGsV,iBAAkB,EACrBtV,EAAGkP,YAAa,EAChBlP,EAAGwO,cAAe,EAClBxO,EAAGuV,mBAAoB,EAGzB,SAASC,GAAgBtD,GACvBA,EAAI5oB,UAAUmsB,QAAU,SAAUxY,EAAOsR,GACvC,IAAIvO,EAAKpW,KACL8rB,EAAS1V,EAAG2V,IACZC,EAAY5V,EAAG2R,OACfkE,EAAwBd,GAAkB/U,GAC9CA,EAAG2R,OAAS1U,EAQV+C,EAAG2V,IALAC,EAKM5V,EAAG8V,UAAUF,EAAW3Y,GAHxB+C,EAAG8V,UAAU9V,EAAG2V,IAAK1Y,EAAOsR,GAAW,GAKlDsH,IAEIH,IACFA,EAAOK,QAAU,MAEf/V,EAAG2V,MACL3V,EAAG2V,IAAII,QAAU/V,GAGfA,EAAGjQ,QAAUiQ,EAAGqD,SAAWrD,EAAGjQ,SAAWiQ,EAAGqD,QAAQsO,SACtD3R,EAAGqD,QAAQsS,IAAM3V,EAAG2V,MAMxBzD,EAAI5oB,UAAUkqB,aAAe,WAC3B,IAAIxT,EAAKpW,KACLoW,EAAGoV,UACLpV,EAAGoV,SAASpa,UAIhBkX,EAAI5oB,UAAUkmB,SAAW,WACvB,IAAIxP,EAAKpW,KACT,IAAIoW,EAAGuV,kBAAP,CAGApG,GAASnP,EAAI,iBACbA,EAAGuV,mBAAoB,EAEvB,IAAItlB,EAAS+P,EAAGqD,SACZpT,GAAWA,EAAOslB,mBAAsBvV,EAAGzP,SAAS4f,UACtDld,EAAOhD,EAAOilB,UAAWlV,GAGvBA,EAAGoV,UACLpV,EAAGoV,SAASY,WAEd,IAAIljB,EAAIkN,EAAGiW,UAAUzrB,OACrB,MAAOsI,IACLkN,EAAGiW,UAAUnjB,GAAGkjB,WAIdhW,EAAGkW,MAAMrY,QACXmC,EAAGkW,MAAMrY,OAAOO,UAGlB4B,EAAGwO,cAAe,EAElBxO,EAAG8V,UAAU9V,EAAG2R,OAAQ,MAExBxC,GAASnP,EAAI,aAEbA,EAAGqU,OAECrU,EAAG2V,MACL3V,EAAG2V,IAAII,QAAU,MAGf/V,EAAGjQ,SACLiQ,EAAGjQ,OAAOE,OAAS,QAKzB,SAASkmB,GACPnW,EACAoW,EACA7H,GAyBA,IAAI8H,EA2CJ,OAlEArW,EAAG2V,IAAMS,EACJpW,EAAGzP,SAASpB,SACf6Q,EAAGzP,SAASpB,OAAS0N,IAmBvBsS,GAASnP,EAAI,eAsBXqW,EAAkB,WAChBrW,EAAGyV,QAAQzV,EAAGoS,UAAW7D,IAO7B,IAAI+H,GAAQtW,EAAIqW,EAAiBjhB,EAAM,CACrCmhB,OAAQ,WACFvW,EAAGkP,aAAelP,EAAGwO,cACvBW,GAASnP,EAAI,mBAGhB,GACHuO,GAAY,EAIK,MAAbvO,EAAGjQ,SACLiQ,EAAGkP,YAAa,EAChBC,GAASnP,EAAI,YAERA,EAGT,SAASgP,GACPhP,EACAmC,EACAuL,EACAkE,EACA4E,GAYA,IAAIC,EAAiB7E,EAAYrW,KAAKqS,YAClC8I,EAAiB1W,EAAG2J,aACpBgN,KACDF,IAAmBA,EAAe5N,SAClC6N,IAAmB5lB,IAAgB4lB,EAAe7N,SAClD4N,GAAkBzW,EAAG2J,aAAab,OAAS2N,EAAe3N,MAMzD8N,KACFJ,GACAxW,EAAGzP,SAASshB,iBACZ8E,GAkBF,GAfA3W,EAAGzP,SAAS+f,aAAesB,EAC3B5R,EAAGjQ,OAAS6hB,EAER5R,EAAG2R,SACL3R,EAAG2R,OAAO1hB,OAAS2hB,GAErB5R,EAAGzP,SAASshB,gBAAkB2E,EAK9BxW,EAAG6W,OAASjF,EAAYrW,KAAKwL,OAASjW,EACtCkP,EAAG8W,WAAapJ,GAAa5c,EAGzBqR,GAAanC,EAAGzP,SAASkQ,MAAO,CAClCvC,IAAgB,GAGhB,IAFA,IAAIuC,EAAQT,EAAG6C,OACXkU,EAAW/W,EAAGzP,SAASymB,WAAa,GAC/BlkB,EAAI,EAAGA,EAAIikB,EAASvsB,OAAQsI,IAAK,CACxC,IAAI7L,EAAM8vB,EAASjkB,GACfoP,EAAclC,EAAGzP,SAASkQ,MAC9BA,EAAMxZ,GAAOgb,GAAahb,EAAKib,EAAaC,EAAWnC,GAEzD9B,IAAgB,GAEhB8B,EAAGzP,SAAS4R,UAAYA,EAI1BuL,EAAYA,GAAa5c,EACzB,IAAI0jB,EAAexU,EAAGzP,SAASwhB,iBAC/B/R,EAAGzP,SAASwhB,iBAAmBrE,EAC/ByG,GAAyBnU,EAAI0N,EAAW8G,GAGpCoC,IACF5W,EAAG4J,OAASzB,GAAaqO,EAAgB5E,EAAY9hB,SACrDkQ,EAAGwT,gBAQP,SAASyD,GAAkBjX,GACzB,MAAOA,IAAOA,EAAKA,EAAGqD,SACpB,GAAIrD,EAAGqV,UAAa,OAAO,EAE7B,OAAO,EAGT,SAAShG,GAAwBrP,EAAIkX,GACnC,GAAIA,GAEF,GADAlX,EAAGsV,iBAAkB,EACjB2B,GAAiBjX,GACnB,YAEG,GAAIA,EAAGsV,gBACZ,OAEF,GAAItV,EAAGqV,WAA8B,OAAjBrV,EAAGqV,UAAoB,CACzCrV,EAAGqV,WAAY,EACf,IAAK,IAAIviB,EAAI,EAAGA,EAAIkN,EAAGkV,UAAU1qB,OAAQsI,IACvCuc,GAAuBrP,EAAGkV,UAAUpiB,IAEtCqc,GAASnP,EAAI,cAIjB,SAASuP,GAA0BvP,EAAIkX,GACrC,KAAIA,IACFlX,EAAGsV,iBAAkB,GACjB2B,GAAiBjX,OAIlBA,EAAGqV,UAAW,CACjBrV,EAAGqV,WAAY,EACf,IAAK,IAAIviB,EAAI,EAAGA,EAAIkN,EAAGkV,UAAU1qB,OAAQsI,IACvCyc,GAAyBvP,EAAGkV,UAAUpiB,IAExCqc,GAASnP,EAAI,gBAIjB,SAASmP,GAAUnP,EAAItQ,GAErBwL,KACA,IAAIic,EAAWnX,EAAGzP,SAASb,GACvByT,EAAOzT,EAAO,QAClB,GAAIynB,EACF,IAAK,IAAIrkB,EAAI,EAAGskB,EAAID,EAAS3sB,OAAQsI,EAAIskB,EAAGtkB,IAC1C2Q,GAAwB0T,EAASrkB,GAAIkN,EAAI,KAAMA,EAAImD,GAGnDnD,EAAGkU,eACLlU,EAAG8U,MAAM,QAAUplB,GAErByL,KAKF,IAEIkc,GAAQ,GACRC,GAAoB,GACpBxvB,GAAM,GAENyvB,IAAU,EACVC,IAAW,EACXxqB,GAAQ,EAKZ,SAASyqB,KACPzqB,GAAQqqB,GAAM7sB,OAAS8sB,GAAkB9sB,OAAS,EAClD1C,GAAM,GAINyvB,GAAUC,IAAW,EAQvB,IAAIE,GAAwB,EAGxBC,GAAStuB,KAAKuuB,IAQlB,GAAIxf,IAAcS,GAAM,CACtB,IAAIlC,GAAc0B,OAAO1B,YAEvBA,IAC2B,oBAApBA,GAAYihB,KACnBD,KAAW9S,SAASgT,YAAY,SAASC,YAMzCH,GAAS,WAAc,OAAOhhB,GAAYihB,QAO9C,SAASG,KAGP,IAAIC,EAASzd,EAcb,IAhBAmd,GAAwBC,KACxBH,IAAW,EAWXH,GAAMY,MAAK,SAAU/uB,EAAGuB,GAAK,OAAOvB,EAAEqR,GAAK9P,EAAE8P,MAIxCvN,GAAQ,EAAGA,GAAQqqB,GAAM7sB,OAAQwC,KACpCgrB,EAAUX,GAAMrqB,IACZgrB,EAAQzB,QACVyB,EAAQzB,SAEVhc,EAAKyd,EAAQzd,GACbzS,GAAIyS,GAAM,KACVyd,EAAQE,MAmBV,IAAIC,EAAiBb,GAAkBpjB,QACnCkkB,EAAef,GAAMnjB,QAEzBujB,KAGAY,GAAmBF,GACnBG,GAAiBF,GAIb1hB,IAAYJ,EAAOI,UACrBA,GAAS6hB,KAAK,SAIlB,SAASD,GAAkBjB,GACzB,IAAIvkB,EAAIukB,EAAM7sB,OACd,MAAOsI,IAAK,CACV,IAAIklB,EAAUX,EAAMvkB,GAChBkN,EAAKgY,EAAQhY,GACbA,EAAGoV,WAAa4C,GAAWhY,EAAGkP,aAAelP,EAAGwO,cAClDW,GAASnP,EAAI,YASnB,SAASoP,GAAyBpP,GAGhCA,EAAGqV,WAAY,EACfiC,GAAkB3c,KAAKqF,GAGzB,SAASqY,GAAoBhB,GAC3B,IAAK,IAAIvkB,EAAI,EAAGA,EAAIukB,EAAM7sB,OAAQsI,IAChCukB,EAAMvkB,GAAGuiB,WAAY,EACrBhG,GAAuBgI,EAAMvkB,IAAI,GASrC,SAAS0lB,GAAcR,GACrB,IAAIzd,EAAKyd,EAAQzd,GACjB,GAAe,MAAXzS,GAAIyS,GAAa,CAEnB,GADAzS,GAAIyS,IAAM,EACLid,GAEE,CAGL,IAAI1kB,EAAIukB,GAAM7sB,OAAS,EACvB,MAAOsI,EAAI9F,IAASqqB,GAAMvkB,GAAGyH,GAAKyd,EAAQzd,GACxCzH,IAEFukB,GAAMhkB,OAAOP,EAAI,EAAG,EAAGklB,QARvBX,GAAM1c,KAAKqd,GAWRT,KACHA,IAAU,EAMVvS,GAAS+S,MASf,IAAIU,GAAQ,EAORnC,GAAU,SACZtW,EACA0Y,EACAzT,EACApX,EACA8qB,GAEA/uB,KAAKoW,GAAKA,EACN2Y,IACF3Y,EAAGoV,SAAWxrB,MAEhBoW,EAAGiW,UAAUtb,KAAK/Q,MAEdiE,GACFjE,KAAKgvB,OAAS/qB,EAAQ+qB,KACtBhvB,KAAKivB,OAAShrB,EAAQgrB,KACtBjvB,KAAKkvB,OAASjrB,EAAQirB,KACtBlvB,KAAKspB,OAASrlB,EAAQqlB,KACtBtpB,KAAK2sB,OAAS1oB,EAAQ0oB,QAEtB3sB,KAAKgvB,KAAOhvB,KAAKivB,KAAOjvB,KAAKkvB,KAAOlvB,KAAKspB,MAAO,EAElDtpB,KAAKqb,GAAKA,EACVrb,KAAK2Q,KAAOke,GACZ7uB,KAAKmvB,QAAS,EACdnvB,KAAKovB,MAAQpvB,KAAKkvB,KAClBlvB,KAAKqvB,KAAO,GACZrvB,KAAKsvB,QAAU,GACftvB,KAAKuvB,OAAS,IAAIrf,GAClBlQ,KAAKwvB,UAAY,IAAItf,GACrBlQ,KAAKyvB,WAED,GAEmB,oBAAZX,EACT9uB,KAAKsV,OAASwZ,GAEd9uB,KAAKsV,OAASlH,EAAU0gB,GACnB9uB,KAAKsV,SACRtV,KAAKsV,OAAS9J,IASlBxL,KAAK1C,MAAQ0C,KAAKkvB,UACd3uB,EACAP,KAAKX,OAMXqtB,GAAQhtB,UAAUL,IAAM,WAEtB,IAAI/B,EADJgU,GAAWtR,MAEX,IAAIoW,EAAKpW,KAAKoW,GACd,IACE9Y,EAAQ0C,KAAKsV,OAAO5W,KAAK0X,EAAIA,GAC7B,MAAOnK,IACP,IAAIjM,KAAKivB,KAGP,MAAMhjB,GAFNoN,GAAYpN,GAAGmK,EAAK,uBAA2BpW,KAAe,WAAI,KAIpE,QAGIA,KAAKgvB,MACPxT,GAASle,GAEXiU,KACAvR,KAAK0vB,cAEP,OAAOpyB,GAMTovB,GAAQhtB,UAAUwR,OAAS,SAAiBiD,GAC1C,IAAIxD,EAAKwD,EAAIxD,GACR3Q,KAAKwvB,UAAUtxB,IAAIyS,KACtB3Q,KAAKwvB,UAAUhpB,IAAImK,GACnB3Q,KAAKsvB,QAAQve,KAAKoD,GACbnU,KAAKuvB,OAAOrxB,IAAIyS,IACnBwD,EAAItD,OAAO7Q,QAQjB0sB,GAAQhtB,UAAUgwB,YAAc,WAC9B,IAAIxmB,EAAIlJ,KAAKqvB,KAAKzuB,OAClB,MAAOsI,IAAK,CACV,IAAIiL,EAAMnU,KAAKqvB,KAAKnmB,GACflJ,KAAKwvB,UAAUtxB,IAAIiW,EAAIxD,KAC1BwD,EAAInD,UAAUhR,MAGlB,IAAI2vB,EAAM3vB,KAAKuvB,OACfvvB,KAAKuvB,OAASvvB,KAAKwvB,UACnBxvB,KAAKwvB,UAAYG,EACjB3vB,KAAKwvB,UAAUhf,QACfmf,EAAM3vB,KAAKqvB,KACXrvB,KAAKqvB,KAAOrvB,KAAKsvB,QACjBtvB,KAAKsvB,QAAUK,EACf3vB,KAAKsvB,QAAQ1uB,OAAS,GAOxB8rB,GAAQhtB,UAAU0R,OAAS,WAErBpR,KAAKkvB,KACPlvB,KAAKovB,OAAQ,EACJpvB,KAAKspB,KACdtpB,KAAKsuB,MAELM,GAAa5uB,OAQjB0sB,GAAQhtB,UAAU4uB,IAAM,WACtB,GAAItuB,KAAKmvB,OAAQ,CACf,IAAI7xB,EAAQ0C,KAAKX,MACjB,GACE/B,IAAU0C,KAAK1C,OAIfoK,EAASpK,IACT0C,KAAKgvB,KACL,CAEA,IAAIY,EAAW5vB,KAAK1C,MAEpB,GADA0C,KAAK1C,MAAQA,EACT0C,KAAKivB,KACP,IACEjvB,KAAKqb,GAAG3c,KAAKsB,KAAKoW,GAAI9Y,EAAOsyB,GAC7B,MAAO3jB,IACPoN,GAAYpN,GAAGjM,KAAKoW,GAAK,yBAA6BpW,KAAe,WAAI,UAG3EA,KAAKqb,GAAG3c,KAAKsB,KAAKoW,GAAI9Y,EAAOsyB,MAUrClD,GAAQhtB,UAAUmwB,SAAW,WAC3B7vB,KAAK1C,MAAQ0C,KAAKX,MAClBW,KAAKovB,OAAQ,GAMf1C,GAAQhtB,UAAUuR,OAAS,WACzB,IAAI/H,EAAIlJ,KAAKqvB,KAAKzuB,OAClB,MAAOsI,IACLlJ,KAAKqvB,KAAKnmB,GAAG+H,UAOjByb,GAAQhtB,UAAU0sB,SAAW,WAC3B,GAAIpsB,KAAKmvB,OAAQ,CAIVnvB,KAAKoW,GAAGuV,mBACXtiB,EAAOrJ,KAAKoW,GAAGiW,UAAWrsB,MAE5B,IAAIkJ,EAAIlJ,KAAKqvB,KAAKzuB,OAClB,MAAOsI,IACLlJ,KAAKqvB,KAAKnmB,GAAG8H,UAAUhR,MAEzBA,KAAKmvB,QAAS,IAMlB,IAAIW,GAA2B,CAC7B9hB,YAAY,EACZ/I,cAAc,EACd5F,IAAKmM,EACL+E,IAAK/E,GAGP,SAASgU,GAAOpb,EAAQ2rB,EAAW1yB,GACjCyyB,GAAyBzwB,IAAM,WAC7B,OAAOW,KAAK+vB,GAAW1yB,IAEzByyB,GAAyBvf,IAAM,SAAsBvI,GACnDhI,KAAK+vB,GAAW1yB,GAAO2K,GAEzB3J,OAAOe,eAAegF,EAAQ/G,EAAKyyB,IAGrC,SAASE,GAAW5Z,GAClBA,EAAGiW,UAAY,GACf,IAAI3c,EAAO0G,EAAGzP,SACV+I,EAAKmH,OAASoZ,GAAU7Z,EAAI1G,EAAKmH,OACjCnH,EAAKoH,SAAWoZ,GAAY9Z,EAAI1G,EAAKoH,SACrCpH,EAAKiC,KACPwe,GAAS/Z,GAETtB,GAAQsB,EAAGkW,MAAQ,IAAI,GAErB5c,EAAKsH,UAAYoZ,GAAaha,EAAI1G,EAAKsH,UACvCtH,EAAKF,OAASE,EAAKF,QAAUD,IAC/B8gB,GAAUja,EAAI1G,EAAKF,OAIvB,SAASygB,GAAW7Z,EAAIka,GACtB,IAAI/X,EAAYnC,EAAGzP,SAAS4R,WAAa,GACrC1B,EAAQT,EAAG6C,OAAS,GAGpB9M,EAAOiK,EAAGzP,SAASymB,UAAY,GAC/BmD,GAAUna,EAAGqD,QAEZ8W,GACHjc,IAAgB,GAElB,IAAIyM,EAAO,SAAW1jB,GACpB8O,EAAK4E,KAAK1T,GACV,IAAIC,EAAQ+a,GAAahb,EAAKizB,EAAc/X,EAAWnC,GAuBrDlB,GAAkB2B,EAAOxZ,EAAKC,GAK1BD,KAAO+Y,GACXoJ,GAAMpJ,EAAI,SAAU/Y,IAIxB,IAAK,IAAIA,KAAOizB,EAAcvP,EAAM1jB,GACpCiX,IAAgB,GAGlB,SAAS6b,GAAU/Z,GACjB,IAAIzE,EAAOyE,EAAGzP,SAASgL,KACvBA,EAAOyE,EAAGkW,MAAwB,oBAAT3a,EACrB6e,GAAQ7e,EAAMyE,GACdzE,GAAQ,GACP9J,EAAc8J,KACjBA,EAAO,IAQT,IAAIxF,EAAO9N,OAAO8N,KAAKwF,GACnBkF,EAAQT,EAAGzP,SAASkQ,MAEpB3N,GADUkN,EAAGzP,SAASmQ,QAClB3K,EAAKvL,QACb,MAAOsI,IAAK,CACV,IAAI7L,EAAM8O,EAAKjD,GACX,EAQA2N,GAASlN,EAAOkN,EAAOxZ,IAMfwQ,EAAWxQ,IACrBmiB,GAAMpJ,EAAI,QAAS/Y,GAIvByX,GAAQnD,GAAM,GAGhB,SAAS6e,GAAS7e,EAAMyE,GAEtB9E,KACA,IACE,OAAOK,EAAKjT,KAAK0X,EAAIA,GACrB,MAAOnK,IAEP,OADAoN,GAAYpN,GAAGmK,EAAI,UACZ,GACP,QACA7E,MAIJ,IAAIkf,GAAyB,CAAEvB,MAAM,GAErC,SAASkB,GAAcha,EAAIY,GAEzB,IAAI0Z,EAAWta,EAAGua,kBAAoBtyB,OAAO0K,OAAO,MAEhD6nB,EAAQhhB,KAEZ,IAAK,IAAIvS,KAAO2Z,EAAU,CACxB,IAAI6Z,EAAU7Z,EAAS3Z,GACnBiY,EAA4B,oBAAZub,EAAyBA,EAAUA,EAAQxxB,IAC3D,EAOCuxB,IAEHF,EAASrzB,GAAO,IAAIqvB,GAClBtW,EACAd,GAAU9J,EACVA,EACAilB,KAOEpzB,KAAO+Y,GACX0a,GAAe1a,EAAI/Y,EAAKwzB,IAW9B,SAASC,GACP1sB,EACA/G,EACAwzB,GAEA,IAAIE,GAAenhB,KACI,oBAAZihB,GACTf,GAAyBzwB,IAAM0xB,EAC3BC,GAAqB3zB,GACrB4zB,GAAoBJ,GACxBf,GAAyBvf,IAAM/E,IAE/BskB,GAAyBzwB,IAAMwxB,EAAQxxB,IACnC0xB,IAAiC,IAAlBF,EAAQhnB,MACrBmnB,GAAqB3zB,GACrB4zB,GAAoBJ,EAAQxxB,KAC9BmM,EACJskB,GAAyBvf,IAAMsgB,EAAQtgB,KAAO/E,GAWhDnN,OAAOe,eAAegF,EAAQ/G,EAAKyyB,IAGrC,SAASkB,GAAsB3zB,GAC7B,OAAO,WACL,IAAI+wB,EAAUpuB,KAAK2wB,mBAAqB3wB,KAAK2wB,kBAAkBtzB,GAC/D,GAAI+wB,EAOF,OANIA,EAAQgB,OACVhB,EAAQyB,WAENnf,GAAItM,QACNgqB,EAAQnd,SAEHmd,EAAQ9wB,OAKrB,SAAS2zB,GAAoBvwB,GAC3B,OAAO,WACL,OAAOA,EAAGhC,KAAKsB,KAAMA,OAIzB,SAASkwB,GAAa9Z,EAAIU,GACZV,EAAGzP,SAASkQ,MACxB,IAAK,IAAIxZ,KAAOyZ,EAsBdV,EAAG/Y,GAA+B,oBAAjByZ,EAAQzZ,GAAsBmO,EAAOhJ,EAAKsU,EAAQzZ,GAAM+Y,GAI7E,SAASia,GAAWja,EAAI5G,GACtB,IAAK,IAAInS,KAAOmS,EAAO,CACrB,IAAIsK,EAAUtK,EAAMnS,GACpB,GAAI2E,MAAMuG,QAAQuR,GAChB,IAAK,IAAI5Q,EAAI,EAAGA,EAAI4Q,EAAQlZ,OAAQsI,IAClCgoB,GAAc9a,EAAI/Y,EAAKyc,EAAQ5Q,SAGjCgoB,GAAc9a,EAAI/Y,EAAKyc,IAK7B,SAASoX,GACP9a,EACA0Y,EACAhV,EACA7V,GASA,OAPI4D,EAAciS,KAChB7V,EAAU6V,EACVA,EAAUA,EAAQA,SAEG,kBAAZA,IACTA,EAAU1D,EAAG0D,IAER1D,EAAG+a,OAAOrC,EAAShV,EAAS7V,GAGrC,SAASmtB,GAAY9I,GAInB,IAAI+I,EAAU,CACd,IAAc,WAAc,OAAOrxB,KAAKssB,QACpCgF,EAAW,CACf,IAAe,WAAc,OAAOtxB,KAAKiZ,SAazC5a,OAAOe,eAAekpB,EAAI5oB,UAAW,QAAS2xB,GAC9ChzB,OAAOe,eAAekpB,EAAI5oB,UAAW,SAAU4xB,GAE/ChJ,EAAI5oB,UAAU6xB,KAAOhhB,GACrB+X,EAAI5oB,UAAU8xB,QAAU7b,GAExB2S,EAAI5oB,UAAUyxB,OAAS,SACrBrC,EACAzT,EACApX,GAEA,IAAImS,EAAKpW,KACT,GAAI6H,EAAcwT,GAChB,OAAO6V,GAAc9a,EAAI0Y,EAASzT,EAAIpX,GAExCA,EAAUA,GAAW,GACrBA,EAAQgrB,MAAO,EACf,IAAIb,EAAU,IAAI1B,GAAQtW,EAAI0Y,EAASzT,EAAIpX,GAC3C,GAAIA,EAAQwtB,UACV,IACEpW,EAAG3c,KAAK0X,EAAIgY,EAAQ9wB,OACpB,MAAOmB,GACP4a,GAAY5a,EAAO2X,EAAK,mCAAuCgY,EAAkB,WAAI,KAGzF,OAAO,WACLA,EAAQhC,aAOd,IAAIsF,GAAQ,EAEZ,SAASC,GAAWrJ,GAClBA,EAAI5oB,UAAUkyB,MAAQ,SAAU3tB,GAC9B,IAAImS,EAAKpW,KAEToW,EAAGyb,KAAOH,KAWVtb,EAAGnB,QAAS,EAERhR,GAAWA,EAAQwiB,aAIrBqL,GAAsB1b,EAAInS,GAE1BmS,EAAGzP,SAAW+Q,GACZyO,GAA0B/P,EAAG2b,aAC7B9tB,GAAW,GACXmS,GAOFA,EAAGoL,aAAepL,EAGpBA,EAAG4b,MAAQ5b,EACXiV,GAAcjV,GACdgU,GAAWhU,GACX0R,GAAW1R,GACXmP,GAASnP,EAAI,gBACb+H,GAAe/H,GACf4Z,GAAU5Z,GACV6H,GAAY7H,GACZmP,GAASnP,EAAI,WASTA,EAAGzP,SAAS6lB,IACdpW,EAAG8O,OAAO9O,EAAGzP,SAAS6lB,KAK5B,SAASsF,GAAuB1b,EAAInS,GAClC,IAAIyL,EAAO0G,EAAGzP,SAAWtI,OAAO0K,OAAOqN,EAAG2b,YAAY9tB,SAElD+jB,EAAc/jB,EAAQyiB,aAC1BhX,EAAKrJ,OAASpC,EAAQoC,OACtBqJ,EAAKgX,aAAesB,EAEpB,IAAIiK,EAAwBjK,EAAYjW,iBACxCrC,EAAK6I,UAAY0Z,EAAsB1Z,UACvC7I,EAAKyY,iBAAmB8J,EAAsBnO,UAC9CpU,EAAKuY,gBAAkBgK,EAAsBrgB,SAC7ClC,EAAKwiB,cAAgBD,EAAsBvgB,IAEvCzN,EAAQsB,SACVmK,EAAKnK,OAAStB,EAAQsB,OACtBmK,EAAKlK,gBAAkBvB,EAAQuB,iBAInC,SAAS2gB,GAA2BlW,GAClC,IAAIhM,EAAUgM,EAAKhM,QACnB,GAAIgM,EAAKkiB,MAAO,CACd,IAAIC,EAAejM,GAA0BlW,EAAKkiB,OAC9CE,EAAqBpiB,EAAKmiB,aAC9B,GAAIA,IAAiBC,EAAoB,CAGvCpiB,EAAKmiB,aAAeA,EAEpB,IAAIE,EAAkBC,GAAuBtiB,GAEzCqiB,GACFnnB,EAAO8E,EAAKuiB,cAAeF,GAE7BruB,EAAUgM,EAAKhM,QAAUyT,GAAa0a,EAAcniB,EAAKuiB,eACrDvuB,EAAQnG,OACVmG,EAAQwuB,WAAWxuB,EAAQnG,MAAQmS,IAIzC,OAAOhM,EAGT,SAASsuB,GAAwBtiB,GAC/B,IAAIyiB,EACAC,EAAS1iB,EAAKhM,QACd2uB,EAAS3iB,EAAK4iB,cAClB,IAAK,IAAIx1B,KAAOs1B,EACVA,EAAOt1B,KAASu1B,EAAOv1B,KACpBq1B,IAAYA,EAAW,IAC5BA,EAASr1B,GAAOs1B,EAAOt1B,IAG3B,OAAOq1B,EAGT,SAASpK,GAAKrkB,GAMZjE,KAAK4xB,MAAM3tB,GAWb,SAAS6uB,GAASxK,GAChBA,EAAIyK,IAAM,SAAUC,GAClB,IAAIC,EAAoBjzB,KAAKkzB,oBAAsBlzB,KAAKkzB,kBAAoB,IAC5E,GAAID,EAAiBzpB,QAAQwpB,IAAW,EACtC,OAAOhzB,KAIT,IAAI6T,EAAO7I,EAAQhK,UAAW,GAQ9B,OAPA6S,EAAKsf,QAAQnzB,MACiB,oBAAnBgzB,EAAOI,QAChBJ,EAAOI,QAAQryB,MAAMiyB,EAAQnf,GACF,oBAAXmf,GAChBA,EAAOjyB,MAAM,KAAM8S,GAErBof,EAAiBliB,KAAKiiB,GACfhzB,MAMX,SAASqzB,GAAa/K,GACpBA,EAAIgL,MAAQ,SAAUA,GAEpB,OADAtzB,KAAKiE,QAAUyT,GAAa1X,KAAKiE,QAASqvB,GACnCtzB,MAMX,SAASuzB,GAAYjL,GAMnBA,EAAItC,IAAM,EACV,IAAIA,EAAM,EAKVsC,EAAInd,OAAS,SAAUqnB,GACrBA,EAAgBA,GAAiB,GACjC,IAAIgB,EAAQxzB,KACRyzB,EAAUD,EAAMxN,IAChB0N,EAAclB,EAAcmB,QAAUnB,EAAcmB,MAAQ,IAChE,GAAID,EAAYD,GACd,OAAOC,EAAYD,GAGrB,IAAI31B,EAAO00B,EAAc10B,MAAQ01B,EAAMvvB,QAAQnG,KAK/C,IAAI81B,EAAM,SAAuB3vB,GAC/BjE,KAAK4xB,MAAM3tB,IA6Cb,OA3CA2vB,EAAIl0B,UAAYrB,OAAO0K,OAAOyqB,EAAM9zB,WACpCk0B,EAAIl0B,UAAUqyB,YAAc6B,EAC5BA,EAAI5N,IAAMA,IACV4N,EAAI3vB,QAAUyT,GACZ8b,EAAMvvB,QACNuuB,GAEFoB,EAAI,SAAWJ,EAKXI,EAAI3vB,QAAQ4S,OACdgd,GAAYD,GAEVA,EAAI3vB,QAAQ+S,UACd8c,GAAeF,GAIjBA,EAAIzoB,OAASqoB,EAAMroB,OACnByoB,EAAIN,MAAQE,EAAMF,MAClBM,EAAIb,IAAMS,EAAMT,IAIhBvmB,EAAYkH,SAAQ,SAAUiD,GAC5Bid,EAAIjd,GAAQ6c,EAAM7c,MAGhB7Y,IACF81B,EAAI3vB,QAAQwuB,WAAW30B,GAAQ81B,GAMjCA,EAAIxB,aAAeoB,EAAMvvB,QACzB2vB,EAAIpB,cAAgBA,EACpBoB,EAAIf,cAAgB1nB,EAAO,GAAIyoB,EAAI3vB,SAGnCyvB,EAAYD,GAAWG,EAChBA,GAIX,SAASC,GAAaE,GACpB,IAAIld,EAAQkd,EAAK9vB,QAAQ4S,MACzB,IAAK,IAAIxZ,KAAOwZ,EACd2I,GAAMuU,EAAKr0B,UAAW,SAAUrC,GAIpC,SAASy2B,GAAgBC,GACvB,IAAI/c,EAAW+c,EAAK9vB,QAAQ+S,SAC5B,IAAK,IAAI3Z,KAAO2Z,EACd8Z,GAAeiD,EAAKr0B,UAAWrC,EAAK2Z,EAAS3Z,IAMjD,SAAS22B,GAAoB1L,GAI3B9b,EAAYkH,SAAQ,SAAUiD,GAC5B2R,EAAI3R,GAAQ,SACVhG,EACAsjB,GAEA,OAAKA,GAOU,cAATtd,GAAwB9O,EAAcosB,KACxCA,EAAWn2B,KAAOm2B,EAAWn2B,MAAQ6S,EACrCsjB,EAAaj0B,KAAKiE,QAAQ0T,MAAMxM,OAAO8oB,IAE5B,cAATtd,GAA8C,oBAAfsd,IACjCA,EAAa,CAAEzxB,KAAMyxB,EAAY7iB,OAAQ6iB,IAE3Cj0B,KAAKiE,QAAQ0S,EAAO,KAAKhG,GAAMsjB,EACxBA,GAdAj0B,KAAKiE,QAAQ0S,EAAO,KAAKhG,OAwBxC,SAASujB,GAAkBxkB,GACzB,OAAOA,IAASA,EAAKO,KAAKhM,QAAQnG,MAAQ4R,EAAKgC,KAGjD,SAASyiB,GAASC,EAASt2B,GACzB,OAAIkE,MAAMuG,QAAQ6rB,GACTA,EAAQ5qB,QAAQ1L,IAAS,EACJ,kBAAZs2B,EACTA,EAAQnrB,MAAM,KAAKO,QAAQ1L,IAAS,IAClCgK,EAASssB,IACXA,EAAQ9yB,KAAKxD,GAMxB,SAASu2B,GAAYC,EAAmBC,GACtC,IAAI1qB,EAAQyqB,EAAkBzqB,MAC1BsC,EAAOmoB,EAAkBnoB,KACzB4b,EAASuM,EAAkBvM,OAC/B,IAAK,IAAI1qB,KAAOwM,EAAO,CACrB,IAAI2qB,EAAa3qB,EAAMxM,GACvB,GAAIm3B,EAAY,CACd,IAAI12B,EAAOo2B,GAAiBM,EAAWziB,kBACnCjU,IAASy2B,EAAOz2B,IAClB22B,GAAgB5qB,EAAOxM,EAAK8O,EAAM4b,KAM1C,SAAS0M,GACP5qB,EACAxM,EACA8O,EACAuoB,GAEA,IAAIC,EAAY9qB,EAAMxM,IAClBs3B,GAAeD,GAAWC,EAAUjjB,MAAQgjB,EAAQhjB,KACtDijB,EAAUtiB,kBAAkBuT,WAE9B/b,EAAMxM,GAAO,KACbgM,EAAO8C,EAAM9O,GA/Mfs0B,GAAUrJ,IACV8I,GAAW9I,IACXuC,GAAYvC,IACZsD,GAAetD,IACfD,GAAYC,IA8MZ,IAAIsM,GAAe,CAACrzB,OAAQ4M,OAAQnM,OAEhC6yB,GAAY,CACd/2B,KAAM,aACNyoB,UAAU,EAEV1P,MAAO,CACLie,QAASF,GACTG,QAASH,GACTlxB,IAAK,CAACnC,OAAQyzB,SAGhBC,QAAS,WACPj1B,KAAK6J,MAAQxL,OAAO0K,OAAO,MAC3B/I,KAAKmM,KAAO,IAGd+oB,UAAW,WACT,IAAK,IAAI73B,KAAO2C,KAAK6J,MACnB4qB,GAAgBz0B,KAAK6J,MAAOxM,EAAK2C,KAAKmM,OAI1CgpB,QAAS,WACP,IAAIzR,EAAS1jB,KAEbA,KAAKmxB,OAAO,WAAW,SAAUnpB,GAC/BqsB,GAAW3Q,GAAQ,SAAU5lB,GAAQ,OAAOq2B,GAAQnsB,EAAKlK,SAE3DkC,KAAKmxB,OAAO,WAAW,SAAUnpB,GAC/BqsB,GAAW3Q,GAAQ,SAAU5lB,GAAQ,OAAQq2B,GAAQnsB,EAAKlK,UAI9DyH,OAAQ,WACN,IAAIkZ,EAAOze,KAAKggB,OAAOhH,QACnB3F,EAAQ8W,GAAuB1L,GAC/B1M,EAAmBsB,GAASA,EAAMtB,iBACtC,GAAIA,EAAkB,CAEpB,IAAIjU,EAAOo2B,GAAiBniB,GACxB0W,EAAMzoB,KACN80B,EAAUrM,EAAIqM,QACdC,EAAUtM,EAAIsM,QAClB,GAEGD,KAAah3B,IAASq2B,GAAQW,EAASh3B,KAEvCi3B,GAAWj3B,GAAQq2B,GAAQY,EAASj3B,GAErC,OAAOuV,EAGT,IAAI+hB,EAAQp1B,KACR6J,EAAQurB,EAAMvrB,MACdsC,EAAOipB,EAAMjpB,KACb9O,EAAmB,MAAbgW,EAAMhW,IAGZ0U,EAAiB9B,KAAK+V,KAAOjU,EAAiBL,IAAO,KAAQK,EAAoB,IAAK,IACtFsB,EAAMhW,IACNwM,EAAMxM,IACRgW,EAAMhB,kBAAoBxI,EAAMxM,GAAKgV,kBAErChJ,EAAO8C,EAAM9O,GACb8O,EAAK4E,KAAK1T,KAEVwM,EAAMxM,GAAOgW,EACblH,EAAK4E,KAAK1T,GAEN2C,KAAK0D,KAAOyI,EAAKvL,OAASy0B,SAASr1B,KAAK0D,MAC1C+wB,GAAgB5qB,EAAOsC,EAAK,GAAIA,EAAMnM,KAAK+nB,SAI/C1U,EAAM1B,KAAKkT,WAAY,EAEzB,OAAOxR,GAAUoL,GAAQA,EAAK,KAI9B6W,GAAoB,CACtBT,UAAWA,IAKb,SAASU,GAAejN,GAEtB,IAAIkN,EAAY,CAChB,IAAgB,WAAc,OAAO9oB,IAQrCrO,OAAOe,eAAekpB,EAAK,SAAUkN,GAKrClN,EAAImN,KAAO,CACThlB,KAAMA,GACNtF,OAAQA,EACRuM,aAAcA,GACdge,eAAgBxgB,IAGlBoT,EAAI/X,IAAMA,GACV+X,EAAIqN,OAAShgB,GACb2S,EAAIlN,SAAWA,GAGfkN,EAAIsN,WAAa,SAAUjuB,GAEzB,OADAmN,GAAQnN,GACDA,GAGT2gB,EAAIrkB,QAAU5F,OAAO0K,OAAO,MAC5ByD,EAAYkH,SAAQ,SAAUiD,GAC5B2R,EAAIrkB,QAAQ0S,EAAO,KAAOtY,OAAO0K,OAAO,SAK1Cuf,EAAIrkB,QAAQ0T,MAAQ2Q,EAEpBnd,EAAOmd,EAAIrkB,QAAQwuB,WAAY6C,IAE/BxC,GAAQxK,GACR+K,GAAY/K,GACZiL,GAAWjL,GACX0L,GAAmB1L,GAGrBiN,GAAcjN,IAEdjqB,OAAOe,eAAekpB,GAAI5oB,UAAW,YAAa,CAChDL,IAAKuQ,KAGPvR,OAAOe,eAAekpB,GAAI5oB,UAAW,cAAe,CAClDL,IAAK,WAEH,OAAOW,KAAKmG,QAAUnG,KAAKmG,OAAOC,cAKtC/H,OAAOe,eAAekpB,GAAK,0BAA2B,CACpDhrB,MAAOkmB,KAGT8E,GAAIuN,QAAU,SAMd,IAAIxoB,GAAiB1E,EAAQ,eAGzBmtB,GAAcntB,EAAQ,yCACtB8E,GAAc,SAAUiE,EAAKiF,EAAMof,GACrC,MACY,UAATA,GAAoBD,GAAYpkB,IAAkB,WAATiF,GAChC,aAATof,GAA+B,WAARrkB,GACd,YAATqkB,GAA8B,UAARrkB,GACb,UAATqkB,GAA4B,UAARrkB,GAIrBskB,GAAmBrtB,EAAQ,wCAE3BstB,GAA8BttB,EAAQ,sCAEtCutB,GAAyB,SAAU74B,EAAKC,GAC1C,OAAO64B,GAAiB74B,IAAoB,UAAVA,EAC9B,QAEQ,oBAARD,GAA6B44B,GAA4B34B,GACvDA,EACA,QAGJ84B,GAAgBztB,EAClB,wYAQE0tB,GAAU,+BAEVC,GAAU,SAAUx4B,GACtB,MAA0B,MAAnBA,EAAKuM,OAAO,IAAmC,UAArBvM,EAAKwM,MAAM,EAAG,IAG7CisB,GAAe,SAAUz4B,GAC3B,OAAOw4B,GAAQx4B,GAAQA,EAAKwM,MAAM,EAAGxM,EAAK8C,QAAU,IAGlDu1B,GAAmB,SAAUnuB,GAC/B,OAAc,MAAPA,IAAuB,IAARA,GAKxB,SAASwuB,GAAkBnjB,GACzB,IAAI1B,EAAO0B,EAAM1B,KACb8kB,EAAapjB,EACbqjB,EAAYrjB,EAChB,MAAO/L,EAAMovB,EAAUrkB,mBACrBqkB,EAAYA,EAAUrkB,kBAAkB0V,OACpC2O,GAAaA,EAAU/kB,OACzBA,EAAOglB,GAAeD,EAAU/kB,KAAMA,IAG1C,MAAOrK,EAAMmvB,EAAaA,EAAWpwB,QAC/BowB,GAAcA,EAAW9kB,OAC3BA,EAAOglB,GAAehlB,EAAM8kB,EAAW9kB,OAG3C,OAAOilB,GAAYjlB,EAAKklB,YAAallB,EAAKkW,OAG5C,SAAS8O,GAAgB5jB,EAAO1M,GAC9B,MAAO,CACLwwB,YAAa73B,GAAO+T,EAAM8jB,YAAaxwB,EAAOwwB,aAC9ChP,MAAOvgB,EAAMyL,EAAM8U,OACf,CAAC9U,EAAM8U,MAAOxhB,EAAOwhB,OACrBxhB,EAAOwhB,OAIf,SAAS+O,GACPC,EACAC,GAEA,OAAIxvB,EAAMuvB,IAAgBvvB,EAAMwvB,GACvB93B,GAAO63B,EAAaE,GAAeD,IAGrC,GAGT,SAAS93B,GAAQM,EAAGuB,GAClB,OAAOvB,EAAIuB,EAAKvB,EAAI,IAAMuB,EAAKvB,EAAKuB,GAAK,GAG3C,SAASk2B,GAAgBz5B,GACvB,OAAI0E,MAAMuG,QAAQjL,GACT05B,GAAe15B,GAEpBoK,EAASpK,GACJ25B,GAAgB35B,GAEJ,kBAAVA,EACFA,EAGF,GAGT,SAAS05B,GAAgB15B,GAGvB,IAFA,IACI45B,EADA3rB,EAAM,GAEDrC,EAAI,EAAG0B,EAAItN,EAAMsD,OAAQsI,EAAI0B,EAAG1B,IACnC5B,EAAM4vB,EAAcH,GAAez5B,EAAM4L,MAAwB,KAAhBguB,IAC/C3rB,IAAOA,GAAO,KAClBA,GAAO2rB,GAGX,OAAO3rB,EAGT,SAAS0rB,GAAiB35B,GACxB,IAAIiO,EAAM,GACV,IAAK,IAAIlO,KAAOC,EACVA,EAAMD,KACJkO,IAAOA,GAAO,KAClBA,GAAOlO,GAGX,OAAOkO,EAKT,IAAI4rB,GAAe,CACjBC,IAAK,6BACLC,KAAM,sCAGJC,GAAY3uB,EACd,snBAeE4uB,GAAQ5uB,EACV,kNAGA,GAGEyE,GAAgB,SAAUsE,GAC5B,OAAO4lB,GAAU5lB,IAAQ6lB,GAAM7lB,IAGjC,SAASnE,GAAiBmE,GACxB,OAAI6lB,GAAM7lB,GACD,MAIG,SAARA,EACK,YADT,EAKF,IAAI8lB,GAAsBn5B,OAAO0K,OAAO,MACxC,SAASuE,GAAkBoE,GAEzB,IAAKlD,EACH,OAAO,EAET,GAAIpB,GAAcsE,GAChB,OAAO,EAIT,GAFAA,EAAMA,EAAIvI,cAEsB,MAA5BquB,GAAoB9lB,GACtB,OAAO8lB,GAAoB9lB,GAE7B,IAAI8a,EAAKvR,SAAS9b,cAAcuS,GAChC,OAAIA,EAAIlI,QAAQ,MAAQ,EAEdguB,GAAoB9lB,GAC1B8a,EAAGuF,cAAgBtjB,OAAOgpB,oBAC1BjL,EAAGuF,cAAgBtjB,OAAOipB,YAGpBF,GAAoB9lB,GAAO,qBAAqBpQ,KAAKkrB,EAAGhrB,YAIpE,IAAIm2B,GAAkBhvB,EAAQ,6CAO9B,SAASivB,GAAOpL,GACd,GAAkB,kBAAPA,EAAiB,CAC1B,IAAIqL,EAAW5c,SAAS6c,cAActL,GACtC,OAAKqL,GAII5c,SAAS9b,cAAc,OAIhC,OAAOqtB,EAMX,SAASuL,GAAiBC,EAAS3kB,GACjC,IAAIvB,EAAMmJ,SAAS9b,cAAc64B,GACjC,MAAgB,WAAZA,EACKlmB,GAGLuB,EAAM1B,MAAQ0B,EAAM1B,KAAKwL,YAAuC5c,IAA9B8S,EAAM1B,KAAKwL,MAAM8a,UACrDnmB,EAAIomB,aAAa,WAAY,YAExBpmB,GAGT,SAASqmB,GAAiBC,EAAWJ,GACnC,OAAO/c,SAASkd,gBAAgBhB,GAAaiB,GAAYJ,GAG3D,SAAS9c,GAAgBrJ,GACvB,OAAOoJ,SAASC,eAAerJ,GAGjC,SAASwmB,GAAexmB,GACtB,OAAOoJ,SAASod,cAAcxmB,GAGhC,SAASymB,GAAc7B,EAAY8B,EAASC,GAC1C/B,EAAW6B,aAAaC,EAASC,GAGnC,SAASC,GAAavlB,EAAMH,GAC1BG,EAAKulB,YAAY1lB,GAGnB,SAAS2lB,GAAaxlB,EAAMH,GAC1BG,EAAKwlB,YAAY3lB,GAGnB,SAAS0jB,GAAYvjB,GACnB,OAAOA,EAAKujB,WAGd,SAASkC,GAAazlB,GACpB,OAAOA,EAAKylB,YAGd,SAASX,GAAS9kB,GAChB,OAAOA,EAAK8kB,QAGd,SAASY,GAAgB1lB,EAAMrB,GAC7BqB,EAAK2lB,YAAchnB,EAGrB,SAASinB,GAAe5lB,EAAMvN,GAC5BuN,EAAKglB,aAAavyB,EAAS,IAG7B,IAAIozB,GAAuB16B,OAAO8I,OAAO,CACvChI,cAAe44B,GACfI,gBAAiBA,GACjBjd,eAAgBA,GAChBmd,cAAeA,GACfC,aAAcA,GACdG,YAAaA,GACbC,YAAaA,GACbjC,WAAYA,GACZkC,YAAaA,GACbX,QAASA,GACTY,eAAgBA,GAChBE,cAAeA,KAKbrQ,GAAM,CACR1f,OAAQ,SAAiBmB,EAAGmJ,GAC1B2lB,GAAY3lB,IAEdjC,OAAQ,SAAiB+T,EAAU9R,GAC7B8R,EAASxT,KAAK8W,MAAQpV,EAAM1B,KAAK8W,MACnCuQ,GAAY7T,GAAU,GACtB6T,GAAY3lB,KAGhBqS,QAAS,SAAkBrS,GACzB2lB,GAAY3lB,GAAO,KAIvB,SAAS2lB,GAAa3lB,EAAO4lB,GAC3B,IAAI57B,EAAMgW,EAAM1B,KAAK8W,IACrB,GAAKnhB,EAAMjK,GAAX,CAEA,IAAI+Y,EAAK/C,EAAMnN,QACXuiB,EAAMpV,EAAMhB,mBAAqBgB,EAAMvB,IACvConB,EAAO9iB,EAAGmV,MACV0N,EACEj3B,MAAMuG,QAAQ2wB,EAAK77B,IACrBgM,EAAO6vB,EAAK77B,GAAMorB,GACTyQ,EAAK77B,KAASorB,IACvByQ,EAAK77B,QAAOkD,GAGV8S,EAAM1B,KAAKwnB,SACRn3B,MAAMuG,QAAQ2wB,EAAK77B,IAEb67B,EAAK77B,GAAKmM,QAAQif,GAAO,GAElCyQ,EAAK77B,GAAK0T,KAAK0X,GAHfyQ,EAAK77B,GAAO,CAACorB,GAMfyQ,EAAK77B,GAAOorB,GAiBlB,IAAI2Q,GAAY,IAAI3nB,GAAM,GAAI,GAAI,IAE9BgF,GAAQ,CAAC,SAAU,WAAY,SAAU,SAAU,WAEvD,SAAS4iB,GAAW/5B,EAAGuB,GACrB,OACEvB,EAAEjC,MAAQwD,EAAExD,MAERiC,EAAEoS,MAAQ7Q,EAAE6Q,KACZpS,EAAEmT,YAAc5R,EAAE4R,WAClBnL,EAAMhI,EAAEqS,QAAUrK,EAAMzG,EAAE8Q,OAC1B2nB,GAAch6B,EAAGuB,IAEjB0G,EAAOjI,EAAEuT,qBACTvT,EAAE0S,eAAiBnR,EAAEmR,cACrB5K,EAAQvG,EAAEmR,aAAavT,QAM/B,SAAS66B,GAAeh6B,EAAGuB,GACzB,GAAc,UAAVvB,EAAEoS,IAAmB,OAAO,EAChC,IAAIxI,EACAqwB,EAAQjyB,EAAM4B,EAAI5J,EAAEqS,OAASrK,EAAM4B,EAAIA,EAAEiU,QAAUjU,EAAEyN,KACrD6iB,EAAQlyB,EAAM4B,EAAIrI,EAAE8Q,OAASrK,EAAM4B,EAAIA,EAAEiU,QAAUjU,EAAEyN,KACzD,OAAO4iB,IAAUC,GAAS7B,GAAgB4B,IAAU5B,GAAgB6B,GAGtE,SAASC,GAAmB7nB,EAAU8nB,EAAUC,GAC9C,IAAIzwB,EAAG7L,EACHyL,EAAM,GACV,IAAKI,EAAIwwB,EAAUxwB,GAAKywB,IAAUzwB,EAChC7L,EAAMuU,EAAS1I,GAAG7L,IACdiK,EAAMjK,KAAQyL,EAAIzL,GAAO6L,GAE/B,OAAOJ,EAGT,SAAS8wB,GAAqBC,GAC5B,IAAI3wB,EAAGskB,EACHvC,EAAM,GAEN6O,EAAUD,EAAQC,QAClBf,EAAUc,EAAQd,QAEtB,IAAK7vB,EAAI,EAAGA,EAAIuN,GAAM7V,SAAUsI,EAE9B,IADA+hB,EAAIxU,GAAMvN,IAAM,GACXskB,EAAI,EAAGA,EAAIsM,EAAQl5B,SAAU4sB,EAC5BlmB,EAAMwyB,EAAQtM,GAAG/W,GAAMvN,MACzB+hB,EAAIxU,GAAMvN,IAAI6H,KAAK+oB,EAAQtM,GAAG/W,GAAMvN,KAK1C,SAAS6wB,EAAajoB,GACpB,OAAO,IAAIL,GAAMsnB,EAAQf,QAAQlmB,GAAK3I,cAAe,GAAI,QAAI5I,EAAWuR,GAG1E,SAASkoB,EAAYC,EAAUnW,GAC7B,SAAStH,IACuB,MAAxBA,EAAUsH,WACdoW,EAAWD,GAIf,OADAzd,EAAUsH,UAAYA,EACftH,EAGT,SAAS0d,EAAY1N,GACnB,IAAInmB,EAAS0yB,EAAQtC,WAAWjK,GAE5BllB,EAAMjB,IACR0yB,EAAQN,YAAYpyB,EAAQmmB,GAsBhC,SAAS2N,EACP9mB,EACA+mB,EACAC,EACAC,EACAC,EACAC,EACAp3B,GAYA,GAVIkE,EAAM+L,EAAMvB,MAAQxK,EAAMkzB,KAM5BnnB,EAAQmnB,EAAWp3B,GAASgQ,GAAWC,IAGzCA,EAAMb,cAAgB+nB,GAClBzU,EAAgBzS,EAAO+mB,EAAoBC,EAAWC,GAA1D,CAIA,IAAI3oB,EAAO0B,EAAM1B,KACbC,EAAWyB,EAAMzB,SACjBF,EAAM2B,EAAM3B,IACZpK,EAAMoK,IAeR2B,EAAMvB,IAAMuB,EAAMpB,GACd8mB,EAAQZ,gBAAgB9kB,EAAMpB,GAAIP,GAClCqnB,EAAQ55B,cAAcuS,EAAK2B,GAC/BonB,EAASpnB,GAIPqnB,EAAernB,EAAOzB,EAAUwoB,GAC5B9yB,EAAMqK,IACRgpB,EAAkBtnB,EAAO+mB,GAE3B/U,EAAOgV,EAAWhnB,EAAMvB,IAAKwoB,IAMtB/yB,EAAO8L,EAAMZ,YACtBY,EAAMvB,IAAMinB,EAAQV,cAAchlB,EAAMxB,MACxCwT,EAAOgV,EAAWhnB,EAAMvB,IAAKwoB,KAE7BjnB,EAAMvB,IAAMinB,EAAQ7d,eAAe7H,EAAMxB,MACzCwT,EAAOgV,EAAWhnB,EAAMvB,IAAKwoB,KAIjC,SAASxU,EAAiBzS,EAAO+mB,EAAoBC,EAAWC,GAC9D,IAAIpxB,EAAImK,EAAM1B,KACd,GAAIrK,EAAM4B,GAAI,CACZ,IAAI0xB,EAAgBtzB,EAAM+L,EAAMhB,oBAAsBnJ,EAAE2b,UAQxD,GAPIvd,EAAM4B,EAAIA,EAAEpD,OAASwB,EAAM4B,EAAIA,EAAEwb,OACnCxb,EAAEmK,GAAO,GAMP/L,EAAM+L,EAAMhB,mBAMd,OALAwoB,EAAcxnB,EAAO+mB,GACrB/U,EAAOgV,EAAWhnB,EAAMvB,IAAKwoB,GACzB/yB,EAAOqzB,IACTE,EAAoBznB,EAAO+mB,EAAoBC,EAAWC,IAErD,GAKb,SAASO,EAAexnB,EAAO+mB,GACzB9yB,EAAM+L,EAAM1B,KAAKopB,iBACnBX,EAAmBrpB,KAAKhQ,MAAMq5B,EAAoB/mB,EAAM1B,KAAKopB,eAC7D1nB,EAAM1B,KAAKopB,cAAgB,MAE7B1nB,EAAMvB,IAAMuB,EAAMhB,kBAAkB0Z,IAChCiP,EAAY3nB,IACdsnB,EAAkBtnB,EAAO+mB,GACzBK,EAASpnB,KAIT2lB,GAAY3lB,GAEZ+mB,EAAmBrpB,KAAKsC,IAI5B,SAASynB,EAAqBznB,EAAO+mB,EAAoBC,EAAWC,GAClE,IAAIpxB,EAKA+xB,EAAY5nB,EAChB,MAAO4nB,EAAU5oB,kBAEf,GADA4oB,EAAYA,EAAU5oB,kBAAkB0V,OACpCzgB,EAAM4B,EAAI+xB,EAAUtpB,OAASrK,EAAM4B,EAAIA,EAAEgyB,YAAa,CACxD,IAAKhyB,EAAI,EAAGA,EAAI+hB,EAAIkQ,SAASv6B,SAAUsI,EACrC+hB,EAAIkQ,SAASjyB,GAAGkwB,GAAW6B,GAE7Bb,EAAmBrpB,KAAKkqB,GACxB,MAKJ5V,EAAOgV,EAAWhnB,EAAMvB,IAAKwoB,GAG/B,SAASjV,EAAQhf,EAAQyL,EAAKspB,GACxB9zB,EAAMjB,KACJiB,EAAM8zB,GACJrC,EAAQtC,WAAW2E,KAAY/0B,GACjC0yB,EAAQT,aAAajyB,EAAQyL,EAAKspB,GAGpCrC,EAAQL,YAAYryB,EAAQyL,IAKlC,SAAS4oB,EAAgBrnB,EAAOzB,EAAUwoB,GACxC,GAAIp4B,MAAMuG,QAAQqJ,GAAW,CACvB,EAGJ,IAAK,IAAI1I,EAAI,EAAGA,EAAI0I,EAAShR,SAAUsI,EACrCixB,EAAUvoB,EAAS1I,GAAIkxB,EAAoB/mB,EAAMvB,IAAK,MAAM,EAAMF,EAAU1I,QAErEzB,EAAY4L,EAAMxB,OAC3BknB,EAAQL,YAAYrlB,EAAMvB,IAAKinB,EAAQ7d,eAAe3Z,OAAO8R,EAAMxB,QAIvE,SAASmpB,EAAa3nB,GACpB,MAAOA,EAAMhB,kBACXgB,EAAQA,EAAMhB,kBAAkB0V,OAElC,OAAOzgB,EAAM+L,EAAM3B,KAGrB,SAASipB,EAAmBtnB,EAAO+mB,GACjC,IAAK,IAAIpP,EAAM,EAAGA,EAAMC,EAAIliB,OAAOnI,SAAUoqB,EAC3CC,EAAIliB,OAAOiiB,GAAKoO,GAAW/lB,GAE7BnK,EAAImK,EAAM1B,KAAK7L,KACXwB,EAAM4B,KACJ5B,EAAM4B,EAAEH,SAAWG,EAAEH,OAAOqwB,GAAW/lB,GACvC/L,EAAM4B,EAAEmc,SAAW+U,EAAmBrpB,KAAKsC,IAOnD,SAASonB,EAAUpnB,GACjB,IAAInK,EACJ,GAAI5B,EAAM4B,EAAImK,EAAMjB,WAClB2mB,EAAQD,cAAczlB,EAAMvB,IAAK5I,OAC5B,CACL,IAAImyB,EAAWhoB,EACf,MAAOgoB,EACD/zB,EAAM4B,EAAImyB,EAASn1B,UAAYoB,EAAM4B,EAAIA,EAAEvC,SAASV,WACtD8yB,EAAQD,cAAczlB,EAAMvB,IAAK5I,GAEnCmyB,EAAWA,EAASh1B,OAIpBiB,EAAM4B,EAAI+b,KACZ/b,IAAMmK,EAAMnN,SACZgD,IAAMmK,EAAMnB,WACZ5K,EAAM4B,EAAIA,EAAEvC,SAASV,WAErB8yB,EAAQD,cAAczlB,EAAMvB,IAAK5I,GAIrC,SAASoyB,EAAWjB,EAAWC,EAAQ/V,EAAQgX,EAAU5B,EAAQS,GAC/D,KAAOmB,GAAY5B,IAAU4B,EAC3BpB,EAAU5V,EAAOgX,GAAWnB,EAAoBC,EAAWC,GAAQ,EAAO/V,EAAQgX,GAItF,SAASC,EAAmBnoB,GAC1B,IAAInK,EAAGskB,EACH7b,EAAO0B,EAAM1B,KACjB,GAAIrK,EAAMqK,GAER,IADIrK,EAAM4B,EAAIyI,EAAK7L,OAASwB,EAAM4B,EAAIA,EAAEwc,UAAYxc,EAAEmK,GACjDnK,EAAI,EAAGA,EAAI+hB,EAAIvF,QAAQ9kB,SAAUsI,EAAK+hB,EAAIvF,QAAQxc,GAAGmK,GAE5D,GAAI/L,EAAM4B,EAAImK,EAAMzB,UAClB,IAAK4b,EAAI,EAAGA,EAAIna,EAAMzB,SAAShR,SAAU4sB,EACvCgO,EAAkBnoB,EAAMzB,SAAS4b,IAKvC,SAASiO,EAAcpB,EAAW9V,EAAQgX,EAAU5B,GAClD,KAAO4B,GAAY5B,IAAU4B,EAAU,CACrC,IAAIG,EAAKnX,EAAOgX,GACZj0B,EAAMo0B,KACJp0B,EAAMo0B,EAAGhqB,MACXiqB,EAA0BD,GAC1BF,EAAkBE,IAElBxB,EAAWwB,EAAG5pB,OAMtB,SAAS6pB,EAA2BtoB,EAAOuoB,GACzC,GAAIt0B,EAAMs0B,IAAOt0B,EAAM+L,EAAM1B,MAAO,CAClC,IAAIzI,EACA4a,EAAYmH,EAAI5hB,OAAOzI,OAAS,EAapC,IAZI0G,EAAMs0B,GAGRA,EAAG9X,WAAaA,EAGhB8X,EAAK5B,EAAW3mB,EAAMvB,IAAKgS,GAGzBxc,EAAM4B,EAAImK,EAAMhB,oBAAsB/K,EAAM4B,EAAIA,EAAE6e,SAAWzgB,EAAM4B,EAAEyI,OACvEgqB,EAA0BzyB,EAAG0yB,GAE1B1yB,EAAI,EAAGA,EAAI+hB,EAAI5hB,OAAOzI,SAAUsI,EACnC+hB,EAAI5hB,OAAOH,GAAGmK,EAAOuoB,GAEnBt0B,EAAM4B,EAAImK,EAAM1B,KAAK7L,OAASwB,EAAM4B,EAAIA,EAAEG,QAC5CH,EAAEmK,EAAOuoB,GAETA,SAGF1B,EAAW7mB,EAAMvB,KAIrB,SAAS+pB,EAAgBxB,EAAWyB,EAAOC,EAAO3B,EAAoB4B,GACpE,IAQIC,EAAaC,EAAUC,EAAa7B,EARpC8B,EAAc,EACdC,EAAc,EACdC,EAAYR,EAAMl7B,OAAS,EAC3B27B,EAAgBT,EAAM,GACtBU,EAAcV,EAAMQ,GACpBG,EAAYV,EAAMn7B,OAAS,EAC3B87B,EAAgBX,EAAM,GACtBY,EAAcZ,EAAMU,GAMpBG,GAAWZ,EAMf,MAAOI,GAAeE,GAAaD,GAAeI,EAC5Cr1B,EAAQm1B,GACVA,EAAgBT,IAAQM,GACfh1B,EAAQo1B,GACjBA,EAAcV,IAAQQ,GACbjD,GAAUkD,EAAeG,IAClCG,EAAWN,EAAeG,EAAetC,EAAoB2B,EAAOM,GACpEE,EAAgBT,IAAQM,GACxBM,EAAgBX,IAAQM,IACfhD,GAAUmD,EAAaG,IAChCE,EAAWL,EAAaG,EAAavC,EAAoB2B,EAAOU,GAChED,EAAcV,IAAQQ,GACtBK,EAAcZ,IAAQU,IACbpD,GAAUkD,EAAeI,IAClCE,EAAWN,EAAeI,EAAavC,EAAoB2B,EAAOU,GAClEG,GAAW7D,EAAQT,aAAa+B,EAAWkC,EAAczqB,IAAKinB,EAAQJ,YAAY6D,EAAY1qB,MAC9FyqB,EAAgBT,IAAQM,GACxBO,EAAcZ,IAAQU,IACbpD,GAAUmD,EAAaE,IAChCG,EAAWL,EAAaE,EAAetC,EAAoB2B,EAAOM,GAClEO,GAAW7D,EAAQT,aAAa+B,EAAWmC,EAAY1qB,IAAKyqB,EAAczqB,KAC1E0qB,EAAcV,IAAQQ,GACtBI,EAAgBX,IAAQM,KAEpBj1B,EAAQ60B,KAAgBA,EAAcxC,GAAkBqC,EAAOM,EAAaE,IAChFJ,EAAW50B,EAAMo1B,EAAcr/B,KAC3B4+B,EAAYS,EAAcr/B,KAC1By/B,EAAaJ,EAAeZ,EAAOM,EAAaE,GAChDl1B,EAAQ80B,GACV/B,EAAUuC,EAAetC,EAAoBC,EAAWkC,EAAczqB,KAAK,EAAOiqB,EAAOM,IAEzFF,EAAcL,EAAMI,GAChB7C,GAAU8C,EAAaO,IACzBG,EAAWV,EAAaO,EAAetC,EAAoB2B,EAAOM,GAClEP,EAAMI,QAAY37B,EAClBq8B,GAAW7D,EAAQT,aAAa+B,EAAW8B,EAAYrqB,IAAKyqB,EAAczqB,MAG1EqoB,EAAUuC,EAAetC,EAAoBC,EAAWkC,EAAczqB,KAAK,EAAOiqB,EAAOM,IAG7FK,EAAgBX,IAAQM,IAGxBD,EAAcE,GAChBhC,EAASlzB,EAAQ20B,EAAMU,EAAY,IAAM,KAAOV,EAAMU,EAAY,GAAG3qB,IACrEwpB,EAAUjB,EAAWC,EAAQyB,EAAOM,EAAaI,EAAWrC,IACnDiC,EAAcI,GACvBhB,EAAapB,EAAWyB,EAAOM,EAAaE,GAsBhD,SAASQ,EAAc5pB,EAAM4oB,EAAO7wB,EAAO8xB,GACzC,IAAK,IAAI7zB,EAAI+B,EAAO/B,EAAI6zB,EAAK7zB,IAAK,CAChC,IAAIpI,EAAIg7B,EAAM5yB,GACd,GAAI5B,EAAMxG,IAAMu4B,GAAUnmB,EAAMpS,GAAM,OAAOoI,GAIjD,SAAS2zB,EACP1X,EACA9R,EACA+mB,EACAI,EACAp3B,EACA44B,GAEA,GAAI7W,IAAa9R,EAAjB,CAII/L,EAAM+L,EAAMvB,MAAQxK,EAAMkzB,KAE5BnnB,EAAQmnB,EAAWp3B,GAASgQ,GAAWC,IAGzC,IAAIvB,EAAMuB,EAAMvB,IAAMqT,EAASrT,IAE/B,GAAIvK,EAAO4d,EAAStS,oBACdvL,EAAM+L,EAAMrB,aAAaiX,UAC3B+T,EAAQ7X,EAASrT,IAAKuB,EAAO+mB,GAE7B/mB,EAAMR,oBAAqB,OAS/B,GAAItL,EAAO8L,EAAMd,WACfhL,EAAO4d,EAAS5S,WAChBc,EAAMhW,MAAQ8nB,EAAS9nB,MACtBkK,EAAO8L,EAAMX,WAAanL,EAAO8L,EAAMV,SAExCU,EAAMhB,kBAAoB8S,EAAS9S,sBALrC,CASA,IAAInJ,EACAyI,EAAO0B,EAAM1B,KACbrK,EAAMqK,IAASrK,EAAM4B,EAAIyI,EAAK7L,OAASwB,EAAM4B,EAAIA,EAAE6b,WACrD7b,EAAEic,EAAU9R,GAGd,IAAIyoB,EAAQ3W,EAASvT,SACjB8pB,EAAKroB,EAAMzB,SACf,GAAItK,EAAMqK,IAASqpB,EAAY3nB,GAAQ,CACrC,IAAKnK,EAAI,EAAGA,EAAI+hB,EAAI7Z,OAAOxQ,SAAUsI,EAAK+hB,EAAI7Z,OAAOlI,GAAGic,EAAU9R,GAC9D/L,EAAM4B,EAAIyI,EAAK7L,OAASwB,EAAM4B,EAAIA,EAAEkI,SAAWlI,EAAEic,EAAU9R,GAE7DjM,EAAQiM,EAAMxB,MACZvK,EAAMw0B,IAAUx0B,EAAMo0B,GACpBI,IAAUJ,GAAMG,EAAe/pB,EAAKgqB,EAAOJ,EAAItB,EAAoB4B,GAC9D10B,EAAMo0B,IAIXp0B,EAAM6d,EAAStT,OAASknB,EAAQH,eAAe9mB,EAAK,IACxDwpB,EAAUxpB,EAAK,KAAM4pB,EAAI,EAAGA,EAAG96B,OAAS,EAAGw5B,IAClC9yB,EAAMw0B,GACfL,EAAa3pB,EAAKgqB,EAAO,EAAGA,EAAMl7B,OAAS,GAClC0G,EAAM6d,EAAStT,OACxBknB,EAAQH,eAAe9mB,EAAK,IAErBqT,EAAStT,OAASwB,EAAMxB,MACjCknB,EAAQH,eAAe9mB,EAAKuB,EAAMxB,MAEhCvK,EAAMqK,IACJrK,EAAM4B,EAAIyI,EAAK7L,OAASwB,EAAM4B,EAAIA,EAAE+zB,YAAc/zB,EAAEic,EAAU9R,KAItE,SAAS6pB,EAAkB7pB,EAAOoa,EAAO0P,GAGvC,GAAI51B,EAAO41B,IAAY71B,EAAM+L,EAAMhN,QACjCgN,EAAMhN,OAAOsL,KAAKopB,cAAgBtN,OAElC,IAAK,IAAIvkB,EAAI,EAAGA,EAAIukB,EAAM7sB,SAAUsI,EAClCukB,EAAMvkB,GAAGyI,KAAK7L,KAAKuf,OAAOoI,EAAMvkB,IAKtC,IAKIk0B,EAAmBz0B,EAAQ,2CAG/B,SAASq0B,EAASlrB,EAAKuB,EAAO+mB,EAAoBiD,GAChD,IAAIn0B,EACAwI,EAAM2B,EAAM3B,IACZC,EAAO0B,EAAM1B,KACbC,EAAWyB,EAAMzB,SAIrB,GAHAyrB,EAASA,GAAW1rB,GAAQA,EAAK6V,IACjCnU,EAAMvB,IAAMA,EAERvK,EAAO8L,EAAMZ,YAAcnL,EAAM+L,EAAMrB,cAEzC,OADAqB,EAAMR,oBAAqB,GACpB,EAQT,GAAIvL,EAAMqK,KACJrK,EAAM4B,EAAIyI,EAAK7L,OAASwB,EAAM4B,EAAIA,EAAEwb,OAASxb,EAAEmK,GAAO,GACtD/L,EAAM4B,EAAImK,EAAMhB,oBAGlB,OADAwoB,EAAcxnB,EAAO+mB,IACd,EAGX,GAAI9yB,EAAMoK,GAAM,CACd,GAAIpK,EAAMsK,GAER,GAAKE,EAAIwrB,gBAIP,GAAIh2B,EAAM4B,EAAIyI,IAASrK,EAAM4B,EAAIA,EAAE8X,WAAa1Z,EAAM4B,EAAIA,EAAEq0B,YAC1D,GAAIr0B,IAAM4I,EAAIyrB,UAWZ,OAAO,MAEJ,CAIL,IAFA,IAAIC,GAAgB,EAChB9G,EAAY5kB,EAAI2rB,WACXzS,EAAM,EAAGA,EAAMpZ,EAAShR,OAAQoqB,IAAO,CAC9C,IAAK0L,IAAcsG,EAAQtG,EAAW9kB,EAASoZ,GAAMoP,EAAoBiD,GAAS,CAChFG,GAAgB,EAChB,MAEF9G,EAAYA,EAAUiC,YAIxB,IAAK6E,GAAiB9G,EAUpB,OAAO,OAxCXgE,EAAernB,EAAOzB,EAAUwoB,GA6CpC,GAAI9yB,EAAMqK,GAAO,CACf,IAAI+rB,GAAa,EACjB,IAAK,IAAIrgC,KAAOsU,EACd,IAAKyrB,EAAiB//B,GAAM,CAC1BqgC,GAAa,EACb/C,EAAkBtnB,EAAO+mB,GACzB,OAGCsD,GAAc/rB,EAAK,UAEtB6J,GAAS7J,EAAK,gBAGTG,EAAIH,OAAS0B,EAAMxB,OAC5BC,EAAIH,KAAO0B,EAAMxB,MAEnB,OAAO,EAcT,OAAO,SAAgBsT,EAAU9R,EAAOsR,EAAWqX,GACjD,IAAI50B,EAAQiM,GAAZ,CAKA,IAAIsqB,GAAiB,EACjBvD,EAAqB,GAEzB,GAAIhzB,EAAQ+d,GAEVwY,GAAiB,EACjBxD,EAAU9mB,EAAO+mB,OACZ,CACL,IAAIwD,EAAgBt2B,EAAM6d,EAAS0Y,UACnC,IAAKD,GAAiBvE,GAAUlU,EAAU9R,GAExCwpB,EAAW1X,EAAU9R,EAAO+mB,EAAoB,KAAM,KAAM4B,OACvD,CACL,GAAI4B,EAAe,CAQjB,GAJ0B,IAAtBzY,EAAS0Y,UAAkB1Y,EAAS2Y,aAAavxB,KACnD4Y,EAAS4Y,gBAAgBxxB,GACzBoY,GAAY,GAEVpd,EAAOod,IACLqY,EAAQ7X,EAAU9R,EAAO+mB,GAE3B,OADA8C,EAAiB7pB,EAAO+mB,GAAoB,GACrCjV,EAaXA,EAAW4U,EAAY5U,GAIzB,IAAI6Y,EAAS7Y,EAASrT,IAClBuoB,EAAYtB,EAAQtC,WAAWuH,GAcnC,GAXA7D,EACE9mB,EACA+mB,EAIA4D,EAAOC,SAAW,KAAO5D,EACzBtB,EAAQJ,YAAYqF,IAIlB12B,EAAM+L,EAAMhN,QAAS,CACvB,IAAIg1B,EAAWhoB,EAAMhN,OACjB63B,EAAYlD,EAAY3nB,GAC5B,MAAOgoB,EAAU,CACf,IAAK,IAAInyB,EAAI,EAAGA,EAAI+hB,EAAIvF,QAAQ9kB,SAAUsI,EACxC+hB,EAAIvF,QAAQxc,GAAGmyB,GAGjB,GADAA,EAASvpB,IAAMuB,EAAMvB,IACjBosB,EAAW,CACb,IAAK,IAAIlT,EAAM,EAAGA,EAAMC,EAAIliB,OAAOnI,SAAUoqB,EAC3CC,EAAIliB,OAAOiiB,GAAKoO,GAAWiC,GAK7B,IAAIhW,EAASgW,EAAS1pB,KAAK7L,KAAKuf,OAChC,GAAIA,EAAOpI,OAET,IAAK,IAAIkhB,EAAM,EAAGA,EAAM9Y,EAAOnJ,IAAItb,OAAQu9B,IACzC9Y,EAAOnJ,IAAIiiB,UAIfnF,GAAYqC,GAEdA,EAAWA,EAASh1B,QAKpBiB,EAAM+yB,GACRoB,EAAapB,EAAW,CAAClV,GAAW,EAAG,GAC9B7d,EAAM6d,EAASzT,MACxB8pB,EAAkBrW,IAMxB,OADA+X,EAAiB7pB,EAAO+mB,EAAoBuD,GACrCtqB,EAAMvB,IAnGPxK,EAAM6d,IAAaqW,EAAkBrW,IAyG/C,IAAI3N,GAAa,CACfzO,OAAQq1B,GACRhtB,OAAQgtB,GACR1Y,QAAS,SAA2BrS,GAClC+qB,GAAiB/qB,EAAO+lB,MAI5B,SAASgF,GAAkBjZ,EAAU9R,IAC/B8R,EAASxT,KAAK6F,YAAcnE,EAAM1B,KAAK6F,aACzCqU,GAAQ1G,EAAU9R,GAItB,SAASwY,GAAS1G,EAAU9R,GAC1B,IAQIhW,EAAKghC,EAAQC,EARbC,EAAWpZ,IAAaiU,GACxBoF,EAAYnrB,IAAU+lB,GACtBqF,EAAUC,GAAsBvZ,EAASxT,KAAK6F,WAAY2N,EAASjf,SACnEy4B,EAAUD,GAAsBrrB,EAAM1B,KAAK6F,WAAYnE,EAAMnN,SAE7D04B,EAAiB,GACjBC,EAAoB,GAGxB,IAAKxhC,KAAOshC,EACVN,EAASI,EAAQphC,GACjBihC,EAAMK,EAAQthC,GACTghC,GAQHC,EAAI1O,SAAWyO,EAAO/gC,MACtBghC,EAAIQ,OAAST,EAAOU,IACpBC,GAAWV,EAAK,SAAUjrB,EAAO8R,GAC7BmZ,EAAIvwB,KAAOuwB,EAAIvwB,IAAIkxB,kBACrBJ,EAAkB9tB,KAAKutB,KAVzBU,GAAWV,EAAK,OAAQjrB,EAAO8R,GAC3BmZ,EAAIvwB,KAAOuwB,EAAIvwB,IAAIgG,UACrB6qB,EAAe7tB,KAAKutB,IAa1B,GAAIM,EAAeh+B,OAAQ,CACzB,IAAIs+B,EAAa,WACf,IAAK,IAAIh2B,EAAI,EAAGA,EAAI01B,EAAeh+B,OAAQsI,IACzC81B,GAAWJ,EAAe11B,GAAI,WAAYmK,EAAO8R,IAGjDoZ,EACF1hB,GAAexJ,EAAO,SAAU6rB,GAEhCA,IAYJ,GARIL,EAAkBj+B,QACpBic,GAAexJ,EAAO,aAAa,WACjC,IAAK,IAAInK,EAAI,EAAGA,EAAI21B,EAAkBj+B,OAAQsI,IAC5C81B,GAAWH,EAAkB31B,GAAI,mBAAoBmK,EAAO8R,OAK7DoZ,EACH,IAAKlhC,KAAOohC,EACLE,EAAQthC,IAEX2hC,GAAWP,EAAQphC,GAAM,SAAU8nB,EAAUA,EAAUqZ,GAM/D,IAAIW,GAAiB9gC,OAAO0K,OAAO,MAEnC,SAAS21B,GACPnnB,EACAnB,GAEA,IAKIlN,EAAGo1B,EALH/yB,EAAMlN,OAAO0K,OAAO,MACxB,IAAKwO,EAEH,OAAOhM,EAGT,IAAKrC,EAAI,EAAGA,EAAIqO,EAAK3W,OAAQsI,IAC3Bo1B,EAAM/mB,EAAKrO,GACNo1B,EAAIc,YAEPd,EAAIc,UAAYD,IAElB5zB,EAAI8zB,GAAcf,IAAQA,EAC1BA,EAAIvwB,IAAMiK,GAAa5B,EAAGzP,SAAU,aAAc23B,EAAIxgC,MAAM,GAG9D,OAAOyN,EAGT,SAAS8zB,GAAef,GACtB,OAAOA,EAAIgB,SAAahB,EAAQ,KAAI,IAAOjgC,OAAO8N,KAAKmyB,EAAIc,WAAa,IAAIG,KAAK,KAGnF,SAASP,GAAYV,EAAKx4B,EAAMuN,EAAO8R,EAAUqZ,GAC/C,IAAI99B,EAAK49B,EAAIvwB,KAAOuwB,EAAIvwB,IAAIjI,GAC5B,GAAIpF,EACF,IACEA,EAAG2S,EAAMvB,IAAKwsB,EAAKjrB,EAAO8R,EAAUqZ,GACpC,MAAOvyB,IACPoN,GAAYpN,GAAGoH,EAAMnN,QAAU,aAAgBo4B,EAAQ,KAAI,IAAMx4B,EAAO,UAK9E,IAAI05B,GAAc,CAChB/W,GACAjR,IAKF,SAASioB,GAAata,EAAU9R,GAC9B,IAAI3D,EAAO2D,EAAMtB,iBACjB,KAAIzK,EAAMoI,KAA4C,IAAnCA,EAAKO,KAAKhM,QAAQy7B,iBAGjCt4B,EAAQ+d,EAASxT,KAAKwL,SAAU/V,EAAQiM,EAAM1B,KAAKwL,QAAvD,CAGA,IAAI9f,EAAKmc,EAAKkD,EACV5K,EAAMuB,EAAMvB,IACZ6tB,EAAWxa,EAASxT,KAAKwL,OAAS,GAClCA,EAAQ9J,EAAM1B,KAAKwL,OAAS,GAMhC,IAAK9f,KAJDiK,EAAM6V,EAAMlJ,UACdkJ,EAAQ9J,EAAM1B,KAAKwL,MAAQhS,EAAO,GAAIgS,IAG5BA,EACV3D,EAAM2D,EAAM9f,GACZqf,EAAMijB,EAAStiC,GACXqf,IAAQlD,GACVomB,GAAQ9tB,EAAKzU,EAAKmc,GAStB,IAAKnc,KAHA4R,IAAQE,KAAWgO,EAAM7f,QAAUqiC,EAASriC,OAC/CsiC,GAAQ9tB,EAAK,QAASqL,EAAM7f,OAElBqiC,EACNv4B,EAAQ+V,EAAM9f,MACZi5B,GAAQj5B,GACVyU,EAAI+tB,kBAAkBxJ,GAASE,GAAal5B,IAClC24B,GAAiB34B,IAC3ByU,EAAIisB,gBAAgB1gC,KAM5B,SAASuiC,GAASpT,EAAInvB,EAAKC,GACrBkvB,EAAGwL,QAAQxuB,QAAQ,MAAQ,EAC7Bs2B,GAAYtT,EAAInvB,EAAKC,GACZ84B,GAAc/4B,GAGnB84B,GAAiB74B,GACnBkvB,EAAGuR,gBAAgB1gC,IAInBC,EAAgB,oBAARD,GAA4C,UAAfmvB,EAAGwL,QACpC,OACA36B,EACJmvB,EAAG0L,aAAa76B,EAAKC,IAEd04B,GAAiB34B,GAC1BmvB,EAAG0L,aAAa76B,EAAK64B,GAAuB74B,EAAKC,IACxCg5B,GAAQj5B,GACb84B,GAAiB74B,GACnBkvB,EAAGqT,kBAAkBxJ,GAASE,GAAal5B,IAE3CmvB,EAAGuT,eAAe1J,GAASh5B,EAAKC,GAGlCwiC,GAAYtT,EAAInvB,EAAKC,GAIzB,SAASwiC,GAAatT,EAAInvB,EAAKC,GAC7B,GAAI64B,GAAiB74B,GACnBkvB,EAAGuR,gBAAgB1gC,OACd,CAKL,GACE4R,KAASC,IACM,aAAfsd,EAAGwL,SACK,gBAAR36B,GAAmC,KAAVC,IAAiBkvB,EAAGwT,OAC7C,CACA,IAAIC,EAAU,SAAUh0B,GACtBA,EAAEi0B,2BACF1T,EAAG2T,oBAAoB,QAASF,IAElCzT,EAAG7c,iBAAiB,QAASswB,GAE7BzT,EAAGwT,QAAS,EAEdxT,EAAG0L,aAAa76B,EAAKC,IAIzB,IAAI6f,GAAQ,CACVpU,OAAQ02B,GACRruB,OAAQquB,IAKV,SAASW,GAAajb,EAAU9R,GAC9B,IAAImZ,EAAKnZ,EAAMvB,IACXH,EAAO0B,EAAM1B,KACb0uB,EAAUlb,EAASxT,KACvB,KACEvK,EAAQuK,EAAKklB,cACbzvB,EAAQuK,EAAKkW,SACXzgB,EAAQi5B,IACNj5B,EAAQi5B,EAAQxJ,cAChBzvB,EAAQi5B,EAAQxY,SALtB,CAYA,IAAIyY,EAAM9J,GAAiBnjB,GAGvBktB,EAAkB/T,EAAGgU,mBACrBl5B,EAAMi5B,KACRD,EAAMthC,GAAOshC,EAAKvJ,GAAewJ,KAI/BD,IAAQ9T,EAAGiU,aACbjU,EAAG0L,aAAa,QAASoI,GACzB9T,EAAGiU,WAAaH,IAIpB,IAyCII,GAzCAC,GAAQ,CACV53B,OAAQq3B,GACRhvB,OAAQgvB,IAaNQ,GAAc,MACdC,GAAuB,MAQ3B,SAASC,GAAiBxkB,GAExB,GAAIhV,EAAMgV,EAAGskB,KAAe,CAE1B,IAAIjkB,EAAQ1N,GAAO,SAAW,QAC9BqN,EAAGK,GAAS,GAAG3d,OAAOsd,EAAGskB,IAActkB,EAAGK,IAAU,WAC7CL,EAAGskB,IAKRt5B,EAAMgV,EAAGukB,OACXvkB,EAAGykB,OAAS,GAAG/hC,OAAOsd,EAAGukB,IAAuBvkB,EAAGykB,QAAU,WACtDzkB,EAAGukB,KAMd,SAASG,GAAqBrkB,EAAO7C,EAASH,GAC5C,IAAI+Q,EAAUgW,GACd,OAAO,SAAS/V,IACd,IAAIpf,EAAMuO,EAAQ/Y,MAAM,KAAMC,WAClB,OAARuK,GACF01B,GAAStkB,EAAOgO,EAAahR,EAAS+Q,IAQ5C,IAAIwW,GAAkB/mB,MAAsB9K,IAAQ2lB,OAAO3lB,GAAK,KAAO,IAEvE,SAAS8xB,GACPrjC,EACAgc,EACAH,EACAoC,GAQA,GAAImlB,GAAiB,CACnB,IAAIE,EAAoBtT,GACpBla,EAAWkG,EACfA,EAAUlG,EAASytB,SAAW,SAAUp1B,GACtC,GAIEA,EAAE7H,SAAW6H,EAAEq1B,eAEfr1B,EAAEiiB,WAAakT,GAIfn1B,EAAEiiB,WAAa,GAIfjiB,EAAE7H,OAAOm9B,gBAAkBtmB,SAE3B,OAAOrH,EAAS7S,MAAMf,KAAMgB,YAIlC0/B,GAAS/wB,iBACP7R,EACAgc,EACArK,GACI,CAAEkK,QAASA,EAASoC,QAASA,GAC7BpC,GAIR,SAASsnB,GACPnjC,EACAgc,EACAH,EACA+Q,IAECA,GAAWgW,IAAUP,oBACpBriC,EACAgc,EAAQunB,UAAYvnB,EACpBH,GAIJ,SAAS6nB,GAAoBrc,EAAU9R,GACrC,IAAIjM,EAAQ+d,EAASxT,KAAK2K,MAAOlV,EAAQiM,EAAM1B,KAAK2K,IAApD,CAGA,IAAIA,EAAKjJ,EAAM1B,KAAK2K,IAAM,GACtBC,EAAQ4I,EAASxT,KAAK2K,IAAM,GAChCokB,GAAWrtB,EAAMvB,IACjBgvB,GAAgBxkB,GAChBD,GAAgBC,EAAIC,EAAO4kB,GAAOF,GAAUD,GAAqB3tB,EAAMnN,SACvEw6B,QAAWngC,GAGb,IAOIkhC,GAPAC,GAAS,CACX34B,OAAQy4B,GACRpwB,OAAQowB,IAOV,SAASG,GAAgBxc,EAAU9R,GACjC,IAAIjM,EAAQ+d,EAASxT,KAAKqP,YAAa5Z,EAAQiM,EAAM1B,KAAKqP,UAA1D,CAGA,IAAI3jB,EAAKmc,EACL1H,EAAMuB,EAAMvB,IACZ8vB,EAAWzc,EAASxT,KAAKqP,UAAY,GACrCnK,EAAQxD,EAAM1B,KAAKqP,UAAY,GAMnC,IAAK3jB,KAJDiK,EAAMuP,EAAM5C,UACd4C,EAAQxD,EAAM1B,KAAKqP,SAAW7V,EAAO,GAAI0L,IAG/B+qB,EACJvkC,KAAOwZ,IACX/E,EAAIzU,GAAO,IAIf,IAAKA,KAAOwZ,EAAO,CAKjB,GAJA2C,EAAM3C,EAAMxZ,GAIA,gBAARA,GAAiC,cAARA,EAAqB,CAEhD,GADIgW,EAAMzB,WAAYyB,EAAMzB,SAAShR,OAAS,GAC1C4Y,IAAQooB,EAASvkC,GAAQ,SAGC,IAA1ByU,EAAI+vB,WAAWjhC,QACjBkR,EAAI2mB,YAAY3mB,EAAI+vB,WAAW,IAInC,GAAY,UAARxkC,GAAmC,aAAhByU,EAAIkmB,QAAwB,CAGjDlmB,EAAIgwB,OAAStoB,EAEb,IAAIuoB,EAAS36B,EAAQoS,GAAO,GAAKjY,OAAOiY,GACpCwoB,GAAkBlwB,EAAKiwB,KACzBjwB,EAAIxU,MAAQykC,QAET,GAAY,cAAR1kC,GAAuBk6B,GAAMzlB,EAAIkmB,UAAY5wB,EAAQ0K,EAAIyrB,WAAY,CAE9EkE,GAAeA,IAAgBxmB,SAAS9b,cAAc,OACtDsiC,GAAalE,UAAY,QAAU/jB,EAAM,SACzC,IAAI4d,EAAMqK,GAAahE,WACvB,MAAO3rB,EAAI2rB,WACT3rB,EAAI2mB,YAAY3mB,EAAI2rB,YAEtB,MAAOrG,EAAIqG,WACT3rB,EAAI4mB,YAAYtB,EAAIqG,iBAEjB,GAKLjkB,IAAQooB,EAASvkC,GAIjB,IACEyU,EAAIzU,GAAOmc,EACX,MAAOvN,QAQf,SAAS+1B,GAAmBlwB,EAAKmwB,GAC/B,OAASnwB,EAAIowB,YACK,WAAhBpwB,EAAIkmB,SACJmK,GAAqBrwB,EAAKmwB,IAC1BG,GAAqBtwB,EAAKmwB,IAI9B,SAASE,GAAsBrwB,EAAKmwB,GAGlC,IAAII,GAAa,EAGjB,IAAMA,EAAapnB,SAASqnB,gBAAkBxwB,EAAO,MAAO7F,KAC5D,OAAOo2B,GAAcvwB,EAAIxU,QAAU2kC,EAGrC,SAASG,GAAsBtwB,EAAK4D,GAClC,IAAIpY,EAAQwU,EAAIxU,MACZ8hC,EAAYttB,EAAIywB,YACpB,GAAIj7B,EAAM83B,GAAY,CACpB,GAAIA,EAAUoD,OACZ,OAAO95B,EAASpL,KAAWoL,EAASgN,GAEtC,GAAI0pB,EAAUqD,KACZ,OAAOnlC,EAAMmlC,SAAW/sB,EAAO+sB,OAGnC,OAAOnlC,IAAUoY,EAGnB,IAAIsL,GAAW,CACbjY,OAAQ44B,GACRvwB,OAAQuwB,IAKNe,GAAiB94B,GAAO,SAAU+4B,GACpC,IAAIp3B,EAAM,GACNq3B,EAAgB,gBAChBC,EAAoB,QAOxB,OANAF,EAAQ15B,MAAM25B,GAAelvB,SAAQ,SAAUnK,GAC7C,GAAIA,EAAM,CACR,IAAIomB,EAAMpmB,EAAKN,MAAM45B,GACrBlT,EAAI/uB,OAAS,IAAM2K,EAAIokB,EAAI,GAAG8S,QAAU9S,EAAI,GAAG8S,YAG5Cl3B,KAIT,SAASu3B,GAAoBnxB,GAC3B,IAAIiW,EAAQmb,GAAsBpxB,EAAKiW,OAGvC,OAAOjW,EAAKqxB,YACR73B,EAAOwG,EAAKqxB,YAAapb,GACzBA,EAIN,SAASmb,GAAuBE,GAC9B,OAAIjhC,MAAMuG,QAAQ06B,GACT33B,EAAS23B,GAEU,kBAAjBA,EACFP,GAAeO,GAEjBA,EAOT,SAASC,GAAU7vB,EAAO8vB,GACxB,IACIC,EADA73B,EAAM,GAGV,GAAI43B,EAAY,CACd,IAAIzM,EAAYrjB,EAChB,MAAOqjB,EAAUrkB,kBACfqkB,EAAYA,EAAUrkB,kBAAkB0V,OAEtC2O,GAAaA,EAAU/kB,OACtByxB,EAAYN,GAAmBpM,EAAU/kB,QAE1CxG,EAAOI,EAAK63B,IAKbA,EAAYN,GAAmBzvB,EAAM1B,QACxCxG,EAAOI,EAAK63B,GAGd,IAAI3M,EAAapjB,EACjB,MAAQojB,EAAaA,EAAWpwB,OAC1BowB,EAAW9kB,OAASyxB,EAAYN,GAAmBrM,EAAW9kB,QAChExG,EAAOI,EAAK63B,GAGhB,OAAO73B,EAKT,IAyBI83B,GAzBAC,GAAW,MACXC,GAAc,iBACdC,GAAU,SAAUhX,EAAI1uB,EAAMkK,GAEhC,GAAIs7B,GAAShiC,KAAKxD,GAChB0uB,EAAG5E,MAAM6b,YAAY3lC,EAAMkK,QACtB,GAAIu7B,GAAYjiC,KAAK0G,GAC1BwkB,EAAG5E,MAAM6b,YAAYj5B,EAAU1M,GAAOkK,EAAIiC,QAAQs5B,GAAa,IAAK,iBAC/D,CACL,IAAIG,EAAiBC,GAAU7lC,GAC/B,GAAIkE,MAAMuG,QAAQP,GAIhB,IAAK,IAAIkB,EAAI,EAAG4K,EAAM9L,EAAIpH,OAAQsI,EAAI4K,EAAK5K,IACzCsjB,EAAG5E,MAAM8b,GAAkB17B,EAAIkB,QAGjCsjB,EAAG5E,MAAM8b,GAAkB17B,IAK7B47B,GAAc,CAAC,SAAU,MAAO,MAGhCD,GAAY/5B,GAAO,SAAU4O,GAG/B,GAFA6qB,GAAaA,IAAcpoB,SAAS9b,cAAc,OAAOyoB,MACzDpP,EAAOxO,EAASwO,GACH,WAATA,GAAsBA,KAAQ6qB,GAChC,OAAO7qB,EAGT,IADA,IAAIqrB,EAAUrrB,EAAKnO,OAAO,GAAGF,cAAgBqO,EAAKlO,MAAM,GAC/CpB,EAAI,EAAGA,EAAI06B,GAAYhjC,OAAQsI,IAAK,CAC3C,IAAIpL,EAAO8lC,GAAY16B,GAAK26B,EAC5B,GAAI/lC,KAAQulC,GACV,OAAOvlC,MAKb,SAASgmC,GAAa3e,EAAU9R,GAC9B,IAAI1B,EAAO0B,EAAM1B,KACb0uB,EAAUlb,EAASxT,KAEvB,KAAIvK,EAAQuK,EAAKqxB,cAAgB57B,EAAQuK,EAAKiW,QAC5CxgB,EAAQi5B,EAAQ2C,cAAgB57B,EAAQi5B,EAAQzY,QADlD,CAMA,IAAIpO,EAAK1b,EACL0uB,EAAKnZ,EAAMvB,IACXiyB,EAAiB1D,EAAQ2C,YACzBgB,EAAkB3D,EAAQ4D,iBAAmB5D,EAAQzY,OAAS,GAG9Dsc,EAAWH,GAAkBC,EAE7Bpc,EAAQmb,GAAsB1vB,EAAM1B,KAAKiW,QAAU,GAKvDvU,EAAM1B,KAAKsyB,gBAAkB38B,EAAMsgB,EAAM3T,QACrC9I,EAAO,GAAIyc,GACXA,EAEJ,IAAIuc,EAAWjB,GAAS7vB,GAAO,GAE/B,IAAKvV,KAAQomC,EACP98B,EAAQ+8B,EAASrmC,KACnB0lC,GAAQhX,EAAI1uB,EAAM,IAGtB,IAAKA,KAAQqmC,EACX3qB,EAAM2qB,EAASrmC,GACX0b,IAAQ0qB,EAASpmC,IAEnB0lC,GAAQhX,EAAI1uB,EAAa,MAAP0b,EAAc,GAAKA,IAK3C,IAAIoO,GAAQ,CACV7e,OAAQ+6B,GACR1yB,OAAQ0yB,IAKNM,GAAe,MAMnB,SAASC,GAAU7X,EAAI8T,GAErB,GAAKA,IAASA,EAAMA,EAAImC,QAKxB,GAAIjW,EAAG8X,UACDhE,EAAI92B,QAAQ,MAAQ,EACtB82B,EAAIr3B,MAAMm7B,IAAc1wB,SAAQ,SAAU5S,GAAK,OAAO0rB,EAAG8X,UAAU99B,IAAI1F,MAEvE0rB,EAAG8X,UAAU99B,IAAI85B,OAEd,CACL,IAAI9mB,EAAM,KAAOgT,EAAG+X,aAAa,UAAY,IAAM,IAC/C/qB,EAAIhQ,QAAQ,IAAM82B,EAAM,KAAO,GACjC9T,EAAG0L,aAAa,SAAU1e,EAAM8mB,GAAKmC,SAS3C,SAAS+B,GAAahY,EAAI8T,GAExB,GAAKA,IAASA,EAAMA,EAAImC,QAKxB,GAAIjW,EAAG8X,UACDhE,EAAI92B,QAAQ,MAAQ,EACtB82B,EAAIr3B,MAAMm7B,IAAc1wB,SAAQ,SAAU5S,GAAK,OAAO0rB,EAAG8X,UAAUj7B,OAAOvI,MAE1E0rB,EAAG8X,UAAUj7B,OAAOi3B,GAEjB9T,EAAG8X,UAAU1jC,QAChB4rB,EAAGuR,gBAAgB,aAEhB,CACL,IAAIvkB,EAAM,KAAOgT,EAAG+X,aAAa,UAAY,IAAM,IAC/CE,EAAM,IAAMnE,EAAM,IACtB,MAAO9mB,EAAIhQ,QAAQi7B,IAAQ,EACzBjrB,EAAMA,EAAIvP,QAAQw6B,EAAK,KAEzBjrB,EAAMA,EAAIipB,OACNjpB,EACFgT,EAAG0L,aAAa,QAAS1e,GAEzBgT,EAAGuR,gBAAgB,UAOzB,SAAS2G,GAAmBjtB,GAC1B,GAAKA,EAAL,CAIA,GAAsB,kBAAXA,EAAqB,CAC9B,IAAIlM,EAAM,GAKV,OAJmB,IAAfkM,EAAOktB,KACTx5B,EAAOI,EAAKq5B,GAAkBntB,EAAO3Z,MAAQ,MAE/CqN,EAAOI,EAAKkM,GACLlM,EACF,MAAsB,kBAAXkM,EACTmtB,GAAkBntB,QADpB,GAKT,IAAImtB,GAAoBh7B,GAAO,SAAU9L,GACvC,MAAO,CACL+mC,WAAa/mC,EAAO,SACpBgnC,aAAehnC,EAAO,YACtBinC,iBAAmBjnC,EAAO,gBAC1BknC,WAAalnC,EAAO,SACpBmnC,aAAennC,EAAO,YACtBonC,iBAAmBpnC,EAAO,oBAI1BqnC,GAAgB32B,IAAcU,GAC9Bk2B,GAAa,aACbC,GAAY,YAGZC,GAAiB,aACjBC,GAAqB,gBACrBC,GAAgB,YAChBC,GAAoB,eACpBN,UAE6B5kC,IAA3BkO,OAAOi3B,sBACwBnlC,IAAjCkO,OAAOk3B,wBAEPL,GAAiB,mBACjBC,GAAqB,4BAEOhlC,IAA1BkO,OAAOm3B,qBACuBrlC,IAAhCkO,OAAOo3B,uBAEPL,GAAgB,kBAChBC,GAAoB,uBAKxB,IAAIK,GAAMt3B,EACNC,OAAOs3B,sBACLt3B,OAAOs3B,sBAAsBvjC,KAAKiM,QAClCkM,WACyB,SAAUja,GAAM,OAAOA,KAEtD,SAASslC,GAAWtlC,GAClBolC,IAAI,WACFA,GAAIplC,MAIR,SAASulC,GAAoBzZ,EAAI8T,GAC/B,IAAI4F,EAAoB1Z,EAAGgU,qBAAuBhU,EAAGgU,mBAAqB,IACtE0F,EAAkB18B,QAAQ82B,GAAO,IACnC4F,EAAkBn1B,KAAKuvB,GACvB+D,GAAS7X,EAAI8T,IAIjB,SAAS6F,GAAuB3Z,EAAI8T,GAC9B9T,EAAGgU,oBACLn3B,EAAOmjB,EAAGgU,mBAAoBF,GAEhCkE,GAAYhY,EAAI8T,GAGlB,SAAS8F,GACP5Z,EACA6Z,EACAhrB,GAEA,IAAIoN,EAAM6d,GAAkB9Z,EAAI6Z,GAC5B1vB,EAAO8R,EAAI9R,KACXuT,EAAUzB,EAAIyB,QACdqc,EAAY9d,EAAI8d,UACpB,IAAK5vB,EAAQ,OAAO0E,IACpB,IAAIsB,EAAQhG,IAASyuB,GAAaG,GAAqBE,GACnDe,EAAQ,EACRzJ,EAAM,WACRvQ,EAAG2T,oBAAoBxjB,EAAO8pB,GAC9BprB,KAEEorB,EAAQ,SAAUx6B,GAChBA,EAAE7H,SAAWooB,KACTga,GAASD,GACbxJ,KAINpiB,YAAW,WACL6rB,EAAQD,GACVxJ,MAED7S,EAAU,GACbsC,EAAG7c,iBAAiBgN,EAAO8pB,GAG7B,IAAIC,GAAc,yBAElB,SAASJ,GAAmB9Z,EAAI6Z,GAC9B,IASI1vB,EATAgwB,EAASl4B,OAAOm4B,iBAAiBpa,GAEjCqa,GAAoBF,EAAOrB,GAAiB,UAAY,IAAIr8B,MAAM,MAClE69B,GAAuBH,EAAOrB,GAAiB,aAAe,IAAIr8B,MAAM,MACxE89B,EAAoBC,GAAWH,EAAkBC,GACjDG,GAAmBN,EAAOnB,GAAgB,UAAY,IAAIv8B,MAAM,MAChEi+B,GAAsBP,EAAOnB,GAAgB,aAAe,IAAIv8B,MAAM,MACtEk+B,EAAmBH,GAAWC,EAAiBC,GAG/Chd,EAAU,EACVqc,EAAY,EAEZF,IAAiBjB,GACf2B,EAAoB,IACtBpwB,EAAOyuB,GACPlb,EAAU6c,EACVR,EAAYO,EAAoBlmC,QAEzBylC,IAAiBhB,GACtB8B,EAAmB,IACrBxwB,EAAO0uB,GACPnb,EAAUid,EACVZ,EAAYW,EAAmBtmC,SAGjCspB,EAAUhqB,KAAKwD,IAAIqjC,EAAmBI,GACtCxwB,EAAOuT,EAAU,EACb6c,EAAoBI,EAClB/B,GACAC,GACF,KACJkB,EAAY5vB,EACRA,IAASyuB,GACP0B,EAAoBlmC,OACpBsmC,EAAmBtmC,OACrB,GAEN,IAAIwmC,EACFzwB,IAASyuB,IACTsB,GAAYplC,KAAKqlC,EAAOrB,GAAiB,aAC3C,MAAO,CACL3uB,KAAMA,EACNuT,QAASA,EACTqc,UAAWA,EACXa,aAAcA,GAIlB,SAASJ,GAAYK,EAAQC,GAE3B,MAAOD,EAAOzmC,OAAS0mC,EAAU1mC,OAC/BymC,EAASA,EAAOroC,OAAOqoC,GAGzB,OAAOnnC,KAAKwD,IAAI3C,MAAM,KAAMumC,EAAUx+B,KAAI,SAAUob,EAAGhb,GACrD,OAAOq+B,GAAKrjB,GAAKqjB,GAAKF,EAAOn+B,QAQjC,SAASq+B,GAAMC,GACb,OAAkD,IAA3CxS,OAAOwS,EAAEl9B,MAAM,GAAI,GAAGL,QAAQ,IAAK,MAK5C,SAASw9B,GAAOp0B,EAAOq0B,GACrB,IAAIlb,EAAKnZ,EAAMvB,IAGXxK,EAAMklB,EAAGyR,YACXzR,EAAGyR,SAAS0J,WAAY,EACxBnb,EAAGyR,YAGL,IAAItsB,EAAO+yB,GAAkBrxB,EAAM1B,KAAKupB,YACxC,IAAI9zB,EAAQuK,KAKRrK,EAAMklB,EAAGob,WAA6B,IAAhBpb,EAAGqR,SAA7B,CAIA,IAAI8G,EAAMhzB,EAAKgzB,IACXhuB,EAAOhF,EAAKgF,KACZkuB,EAAalzB,EAAKkzB,WAClBC,EAAenzB,EAAKmzB,aACpBC,EAAmBpzB,EAAKozB,iBACxB8C,EAAcl2B,EAAKk2B,YACnBC,EAAgBn2B,EAAKm2B,cACrBC,EAAoBp2B,EAAKo2B,kBACzBC,EAAcr2B,EAAKq2B,YACnBP,EAAQ91B,EAAK81B,MACbQ,EAAat2B,EAAKs2B,WAClBC,EAAiBv2B,EAAKu2B,eACtBC,EAAex2B,EAAKw2B,aACpBC,EAASz2B,EAAKy2B,OACdC,EAAc12B,EAAK02B,YACnBC,EAAkB32B,EAAK22B,gBACvBC,EAAW52B,EAAK42B,SAMhBriC,EAAU+e,GACVujB,EAAiBvjB,GAAe9e,OACpC,MAAOqiC,GAAkBA,EAAeniC,OACtCH,EAAUsiC,EAAetiC,QACzBsiC,EAAiBA,EAAeniC,OAGlC,IAAIoiC,GAAYviC,EAAQof,aAAejS,EAAMb,aAE7C,IAAIi2B,GAAaL,GAAqB,KAAXA,EAA3B,CAIA,IAAIM,EAAaD,GAAYZ,EACzBA,EACAhD,EACA8D,EAAcF,GAAYV,EAC1BA,EACAhD,EACA6D,EAAUH,GAAYX,EACtBA,EACAhD,EAEA+D,EAAkBJ,GACjBN,GACDH,EACAc,EAAYL,GACO,oBAAXL,EAAwBA,EAChCX,EACAsB,EAAiBN,GAChBJ,GACDJ,EACAe,EAAqBP,GACpBH,GACDJ,EAEAe,EAAwBvgC,EAC1BhB,EAAS6gC,GACLA,EAASd,MACTc,GAGF,EAIJ,IAAIW,GAAqB,IAARvE,IAAkBz1B,GAC/Bi6B,EAAmBC,GAAuBN,GAE1CztB,EAAKmR,EAAGob,SAAWt7B,GAAK,WACtB48B,IACF/C,GAAsB3Z,EAAIoc,GAC1BzC,GAAsB3Z,EAAImc,IAExBttB,EAAGssB,WACDuB,GACF/C,GAAsB3Z,EAAIkc,GAE5BM,GAAsBA,EAAmBxc,IAEzCuc,GAAkBA,EAAevc,GAEnCA,EAAGob,SAAW,QAGXv0B,EAAM1B,KAAK03B,MAEdxsB,GAAexJ,EAAO,UAAU,WAC9B,IAAIhN,EAASmmB,EAAGiK,WACZ6S,EAAcjjC,GAAUA,EAAOkjC,UAAYljC,EAAOkjC,SAASl2B,EAAMhW,KACjEisC,GACFA,EAAY53B,MAAQ2B,EAAM3B,KAC1B43B,EAAYx3B,IAAImsB,UAEhBqL,EAAYx3B,IAAImsB,WAElB6K,GAAaA,EAAUtc,EAAInR,MAK/BwtB,GAAmBA,EAAgBrc,GAC/B0c,IACFjD,GAAmBzZ,EAAIkc,GACvBzC,GAAmBzZ,EAAImc,GACvB3C,IAAU,WACRG,GAAsB3Z,EAAIkc,GACrBrtB,EAAGssB,YACN1B,GAAmBzZ,EAAIoc,GAClBO,IACCK,GAAgBP,GAClBtuB,WAAWU,EAAI4tB,GAEf7C,GAAmB5Z,EAAI7V,EAAM0E,SAOnChI,EAAM1B,KAAK03B,OACb3B,GAAiBA,IACjBoB,GAAaA,EAAUtc,EAAInR,IAGxB6tB,GAAeC,GAClB9tB,MAIJ,SAASouB,GAAOp2B,EAAOuoB,GACrB,IAAIpP,EAAKnZ,EAAMvB,IAGXxK,EAAMklB,EAAGob,YACXpb,EAAGob,SAASD,WAAY,EACxBnb,EAAGob,YAGL,IAAIj2B,EAAO+yB,GAAkBrxB,EAAM1B,KAAKupB,YACxC,GAAI9zB,EAAQuK,IAAyB,IAAhB6a,EAAGqR,SACtB,OAAOjC,IAIT,IAAIt0B,EAAMklB,EAAGyR,UAAb,CAIA,IAAI0G,EAAMhzB,EAAKgzB,IACXhuB,EAAOhF,EAAKgF,KACZquB,EAAarzB,EAAKqzB,WAClBC,EAAetzB,EAAKszB,aACpBC,EAAmBvzB,EAAKuzB,iBACxBwE,EAAc/3B,EAAK+3B,YACnBD,EAAQ93B,EAAK83B,MACbE,EAAah4B,EAAKg4B,WAClBC,EAAiBj4B,EAAKi4B,eACtBC,EAAal4B,EAAKk4B,WAClBtB,EAAW52B,EAAK42B,SAEhBW,GAAqB,IAARvE,IAAkBz1B,GAC/Bi6B,EAAmBC,GAAuBK,GAE1CK,EAAwBphC,EAC1BhB,EAAS6gC,GACLA,EAASkB,MACTlB,GAGF,EAIJ,IAAIltB,EAAKmR,EAAGyR,SAAW3xB,GAAK,WACtBkgB,EAAGiK,YAAcjK,EAAGiK,WAAW8S,WACjC/c,EAAGiK,WAAW8S,SAASl2B,EAAMhW,KAAO,MAElC6rC,IACF/C,GAAsB3Z,EAAIyY,GAC1BkB,GAAsB3Z,EAAI0Y,IAExB7pB,EAAGssB,WACDuB,GACF/C,GAAsB3Z,EAAIwY,GAE5B4E,GAAkBA,EAAepd,KAEjCoP,IACA+N,GAAcA,EAAWnd,IAE3BA,EAAGyR,SAAW,QAGZ4L,EACFA,EAAWE,GAEXA,IAGF,SAASA,IAEH1uB,EAAGssB,aAIFt0B,EAAM1B,KAAK03B,MAAQ7c,EAAGiK,cACxBjK,EAAGiK,WAAW8S,WAAa/c,EAAGiK,WAAW8S,SAAW,KAAMl2B,EAAS,KAAKA,GAE3Eq2B,GAAeA,EAAYld,GACvB0c,IACFjD,GAAmBzZ,EAAIwY,GACvBiB,GAAmBzZ,EAAI0Y,GACvBc,IAAU,WACRG,GAAsB3Z,EAAIwY,GACrB3pB,EAAGssB,YACN1B,GAAmBzZ,EAAIyY,GAClBkE,IACCK,GAAgBM,GAClBnvB,WAAWU,EAAIyuB,GAEf1D,GAAmB5Z,EAAI7V,EAAM0E,SAMvCouB,GAASA,EAAMjd,EAAInR,GACd6tB,GAAeC,GAClB9tB,MAsBN,SAASmuB,GAAiBxhC,GACxB,MAAsB,kBAARA,IAAqB3H,MAAM2H,GAS3C,SAASohC,GAAwB1oC,GAC/B,GAAI0G,EAAQ1G,GACV,OAAO,EAET,IAAIspC,EAAatpC,EAAGwb,IACpB,OAAI5U,EAAM0iC,GAEDZ,GACLpnC,MAAMuG,QAAQyhC,GACVA,EAAW,GACXA,IAGEtpC,EAAGmK,SAAWnK,EAAGE,QAAU,EAIvC,SAASqpC,GAAQ//B,EAAGmJ,IACM,IAApBA,EAAM1B,KAAK03B,MACb5B,GAAMp0B,GAIV,IAAI6nB,GAAa1sB,EAAY,CAC3BzF,OAAQkhC,GACR9O,SAAU8O,GACV5gC,OAAQ,SAAoBgK,EAAOuoB,IAET,IAApBvoB,EAAM1B,KAAK03B,KACbI,GAAMp2B,EAAOuoB,GAEbA,MAGF,GAEAsO,GAAkB,CACpB/sB,GACAwjB,GACAe,GACA1gB,GACA4G,GACAsT,IAOEpB,GAAUoQ,GAAgBlrC,OAAOwgC,IAEjC2K,GAAQvQ,GAAoB,CAAEb,QAASA,GAASe,QAASA,KAQzD5qB,IAEF+L,SAAStL,iBAAiB,mBAAmB,WAC3C,IAAI6c,EAAKvR,SAASqnB,cACd9V,GAAMA,EAAG4d,QACXC,GAAQ7d,EAAI,YAKlB,IAAI8d,GAAY,CACdv2B,SAAU,SAAmByY,EAAI+d,EAASl3B,EAAO8R,GAC7B,WAAd9R,EAAM3B,KAEJyT,EAASrT,MAAQqT,EAASrT,IAAI04B,UAChC3tB,GAAexJ,EAAO,aAAa,WACjCi3B,GAAUrL,iBAAiBzS,EAAI+d,EAASl3B,MAG1Co3B,GAAYje,EAAI+d,EAASl3B,EAAMnN,SAEjCsmB,EAAGge,UAAY,GAAG1hC,IAAIpK,KAAK8tB,EAAGvoB,QAASymC,MAChB,aAAdr3B,EAAM3B,KAAsBimB,GAAgBnL,EAAG7V,SACxD6V,EAAG+V,YAAcgI,EAAQnL,UACpBmL,EAAQnL,UAAUlQ,OACrB1C,EAAG7c,iBAAiB,mBAAoBg7B,IACxCne,EAAG7c,iBAAiB,iBAAkBi7B,IAKtCpe,EAAG7c,iBAAiB,SAAUi7B,IAE1B17B,KACFsd,EAAG4d,QAAS,MAMpBnL,iBAAkB,SAA2BzS,EAAI+d,EAASl3B,GACxD,GAAkB,WAAdA,EAAM3B,IAAkB,CAC1B+4B,GAAYje,EAAI+d,EAASl3B,EAAMnN,SAK/B,IAAI2kC,EAAcre,EAAGge,UACjBM,EAAate,EAAGge,UAAY,GAAG1hC,IAAIpK,KAAK8tB,EAAGvoB,QAASymC,IACxD,GAAII,EAAWC,MAAK,SAAUC,EAAG9hC,GAAK,OAAQyC,EAAWq/B,EAAGH,EAAY3hC,OAAS,CAG/E,IAAI+hC,EAAYze,EAAGyL,SACfsS,EAAQjtC,MAAMytC,MAAK,SAAU1jC,GAAK,OAAO6jC,GAAoB7jC,EAAGyjC,MAChEP,EAAQjtC,QAAUitC,EAAQ3a,UAAYsb,GAAoBX,EAAQjtC,MAAOwtC,GACzEG,GACFZ,GAAQ7d,EAAI,cAOtB,SAASie,GAAaje,EAAI+d,EAASn0B,GACjC+0B,GAAoB3e,EAAI+d,EAASn0B,IAE7BnH,IAAQE,KACVwL,YAAW,WACTwwB,GAAoB3e,EAAI+d,EAASn0B,KAChC,GAIP,SAAS+0B,GAAqB3e,EAAI+d,EAASn0B,GACzC,IAAI9Y,EAAQitC,EAAQjtC,MAChB8tC,EAAa5e,EAAGyL,SACpB,IAAImT,GAAeppC,MAAMuG,QAAQjL,GAAjC,CASA,IADA,IAAIu6B,EAAUwT,EACLniC,EAAI,EAAG0B,EAAI4hB,EAAGvoB,QAAQrD,OAAQsI,EAAI0B,EAAG1B,IAE5C,GADAmiC,EAAS7e,EAAGvoB,QAAQiF,GAChBkiC,EACFvT,EAAWxrB,EAAa/O,EAAOotC,GAASW,KAAY,EAChDA,EAAOxT,WAAaA,IACtBwT,EAAOxT,SAAWA,QAGpB,GAAIlsB,EAAW++B,GAASW,GAAS/tC,GAI/B,YAHIkvB,EAAG8e,gBAAkBpiC,IACvBsjB,EAAG8e,cAAgBpiC,IAMtBkiC,IACH5e,EAAG8e,eAAiB,IAIxB,SAASJ,GAAqB5tC,EAAO2G,GACnC,OAAOA,EAAQ+H,OAAM,SAAUg/B,GAAK,OAAQr/B,EAAWq/B,EAAG1tC,MAG5D,SAASotC,GAAUW,GACjB,MAAO,WAAYA,EACfA,EAAOvJ,OACPuJ,EAAO/tC,MAGb,SAASqtC,GAAoB1+B,GAC3BA,EAAE7H,OAAO89B,WAAY,EAGvB,SAAS0I,GAAkB3+B,GAEpBA,EAAE7H,OAAO89B,YACdj2B,EAAE7H,OAAO89B,WAAY,EACrBmI,GAAQp+B,EAAE7H,OAAQ,UAGpB,SAASimC,GAAS7d,EAAI7V,GACpB,IAAI1K,EAAIgP,SAASgT,YAAY,cAC7BhiB,EAAEs/B,UAAU50B,GAAM,GAAM,GACxB6V,EAAGgf,cAAcv/B,GAMnB,SAASw/B,GAAYp4B,GACnB,OAAOA,EAAMhB,mBAAuBgB,EAAM1B,MAAS0B,EAAM1B,KAAKupB,WAE1D7nB,EADAo4B,GAAWp4B,EAAMhB,kBAAkB0V,QAIzC,IAAIshB,GAAO,CACT7mC,KAAM,SAAegqB,EAAI/D,EAAKpV,GAC5B,IAAI/V,EAAQmrB,EAAInrB,MAEhB+V,EAAQo4B,GAAWp4B,GACnB,IAAIq4B,EAAgBr4B,EAAM1B,MAAQ0B,EAAM1B,KAAKupB,WACzCyQ,EAAkBnf,EAAGof,mBACF,SAArBpf,EAAG5E,MAAMikB,QAAqB,GAAKrf,EAAG5E,MAAMikB,QAC1CvuC,GAASouC,GACXr4B,EAAM1B,KAAK03B,MAAO,EAClB5B,GAAMp0B,GAAO,WACXmZ,EAAG5E,MAAMikB,QAAUF,MAGrBnf,EAAG5E,MAAMikB,QAAUvuC,EAAQquC,EAAkB,QAIjDv6B,OAAQ,SAAiBob,EAAI/D,EAAKpV,GAChC,IAAI/V,EAAQmrB,EAAInrB,MACZsyB,EAAWnH,EAAImH,SAGnB,IAAKtyB,KAAWsyB,EAAhB,CACAvc,EAAQo4B,GAAWp4B,GACnB,IAAIq4B,EAAgBr4B,EAAM1B,MAAQ0B,EAAM1B,KAAKupB,WACzCwQ,GACFr4B,EAAM1B,KAAK03B,MAAO,EACd/rC,EACFmqC,GAAMp0B,GAAO,WACXmZ,EAAG5E,MAAMikB,QAAUrf,EAAGof,sBAGxBnC,GAAMp2B,GAAO,WACXmZ,EAAG5E,MAAMikB,QAAU,WAIvBrf,EAAG5E,MAAMikB,QAAUvuC,EAAQkvB,EAAGof,mBAAqB,SAIvDE,OAAQ,SACNtf,EACA+d,EACAl3B,EACA8R,EACAqZ,GAEKA,IACHhS,EAAG5E,MAAMikB,QAAUrf,EAAGof,sBAKxBG,GAAqB,CACvB3lB,MAAOkkB,GACPjB,KAAMA,IAKJ2C,GAAkB,CACpBluC,KAAMyD,OACN6mC,OAAQxvB,QACR+rB,IAAK/rB,QACLqzB,KAAM1qC,OACNoV,KAAMpV,OACNsjC,WAAYtjC,OACZyjC,WAAYzjC,OACZujC,aAAcvjC,OACd0jC,aAAc1jC,OACdwjC,iBAAkBxjC,OAClB2jC,iBAAkB3jC,OAClBsmC,YAAatmC,OACbwmC,kBAAmBxmC,OACnBumC,cAAevmC,OACfgnC,SAAU,CAACvT,OAAQzzB,OAAQlD,SAK7B,SAAS6tC,GAAc74B,GACrB,IAAI84B,EAAc94B,GAASA,EAAMtB,iBACjC,OAAIo6B,GAAeA,EAAYl8B,KAAKhM,QAAQsiB,SACnC2lB,GAAa/hB,GAAuBgiB,EAAYv6B,WAEhDyB,EAIX,SAAS+4B,GAAuBzjB,GAC9B,IAAIhX,EAAO,GACP1N,EAAU0kB,EAAKhiB,SAEnB,IAAK,IAAItJ,KAAO4G,EAAQsU,UACtB5G,EAAKtU,GAAOsrB,EAAKtrB,GAInB,IAAIymB,EAAY7f,EAAQkkB,iBACxB,IAAK,IAAIvR,KAASkN,EAChBnS,EAAK3H,EAAS4M,IAAUkN,EAAUlN,GAEpC,OAAOjF,EAGT,SAAS06B,GAAatlC,EAAGulC,GACvB,GAAI,iBAAiBhrC,KAAKgrC,EAAS56B,KACjC,OAAO3K,EAAE,aAAc,CACrB8P,MAAOy1B,EAASv6B,iBAAiBwG,YAKvC,SAASg0B,GAAqBl5B,GAC5B,MAAQA,EAAQA,EAAMhN,OACpB,GAAIgN,EAAM1B,KAAKupB,WACb,OAAO,EAKb,SAASsR,GAAaz5B,EAAO05B,GAC3B,OAAOA,EAASpvC,MAAQ0V,EAAM1V,KAAOovC,EAAS/6B,MAAQqB,EAAMrB,IAG9D,IAAIg7B,GAAgB,SAAU5rC,GAAK,OAAOA,EAAE4Q,KAAOmB,GAAmB/R,IAElE6rC,GAAmB,SAAUzoB,GAAK,MAAkB,SAAXA,EAAEpmB,MAE3C8uC,GAAa,CACf9uC,KAAM,aACN+Y,MAAOm1B,GACPzlB,UAAU,EAEVhhB,OAAQ,SAAiBwB,GACvB,IAAI2c,EAAS1jB,KAET4R,EAAW5R,KAAKggB,OAAOhH,QAC3B,GAAKpH,IAKLA,EAAWA,EAAS2iB,OAAOmY,IAEtB96B,EAAShR,QAAd,CAKI,EAQJ,IAAIqrC,EAAOjsC,KAAKisC,KAGZ,EASJ,IAAIK,EAAW16B,EAAS,GAIxB,GAAI26B,GAAoBvsC,KAAKmG,QAC3B,OAAOmmC,EAKT,IAAIv5B,EAAQm5B,GAAaI,GAEzB,IAAKv5B,EACH,OAAOu5B,EAGT,GAAItsC,KAAK6sC,SACP,OAAOR,GAAYtlC,EAAGulC,GAMxB,IAAI37B,EAAK,gBAAmB3Q,KAAS,KAAI,IACzC+S,EAAM1V,IAAmB,MAAb0V,EAAM1V,IACd0V,EAAMN,UACJ9B,EAAK,UACLA,EAAKoC,EAAMrB,IACbjK,EAAYsL,EAAM1V,KACmB,IAAlCkE,OAAOwR,EAAM1V,KAAKmM,QAAQmH,GAAYoC,EAAM1V,IAAMsT,EAAKoC,EAAM1V,IAC9D0V,EAAM1V,IAEZ,IAAIsU,GAAQoB,EAAMpB,OAASoB,EAAMpB,KAAO,KAAKupB,WAAakR,GAAsBpsC,MAC5E8sC,EAAc9sC,KAAK+nB,OACnB0kB,EAAWP,GAAaY,GAQ5B,GAJI/5B,EAAMpB,KAAK6F,YAAczE,EAAMpB,KAAK6F,WAAWuzB,KAAK4B,MACtD55B,EAAMpB,KAAK03B,MAAO,GAIlBoD,GACAA,EAAS96B,OACR66B,GAAYz5B,EAAO05B,KACnB55B,GAAmB45B,MAElBA,EAASp6B,oBAAqBo6B,EAASp6B,kBAAkB0V,OAAOtV,WAClE,CAGA,IAAI4tB,EAAUoM,EAAS96B,KAAKupB,WAAa/vB,EAAO,GAAIwG,GAEpD,GAAa,WAATs6B,EAOF,OALAjsC,KAAK6sC,UAAW,EAChBhwB,GAAewjB,EAAS,cAAc,WACpC3c,EAAOmpB,UAAW,EAClBnpB,EAAOkG,kBAEFyiB,GAAYtlC,EAAGulC,GACjB,GAAa,WAATL,EAAmB,CAC5B,GAAIp5B,GAAmBE,GACrB,OAAO+5B,EAET,IAAIC,EACAhD,EAAe,WAAcgD,KACjClwB,GAAelL,EAAM,aAAco4B,GACnCltB,GAAelL,EAAM,iBAAkBo4B,GACvCltB,GAAewjB,EAAS,cAAc,SAAUoJ,GAASsD,EAAetD,MAI5E,OAAO6C,KAMPz1B,GAAQ1L,EAAO,CACjBuG,IAAKnQ,OACLyrC,UAAWzrC,QACVyqC,WAEIn1B,GAAMo1B,KAEb,IAAIgB,GAAkB,CACpBp2B,MAAOA,GAEPq2B,YAAa,WACX,IAAIxpB,EAAS1jB,KAEToR,EAASpR,KAAK6rB,QAClB7rB,KAAK6rB,QAAU,SAAUxY,EAAOsR,GAC9B,IAAIsH,EAAwBd,GAAkBzH,GAE9CA,EAAOwI,UACLxI,EAAOqE,OACPrE,EAAOypB,MACP,GACA,GAEFzpB,EAAOqE,OAASrE,EAAOypB,KACvBlhB,IACA7a,EAAO1S,KAAKglB,EAAQrQ,EAAOsR,KAI/Bpf,OAAQ,SAAiBwB,GAQvB,IAPA,IAAI2K,EAAM1R,KAAK0R,KAAO1R,KAAKmG,OAAOwL,KAAKD,KAAO,OAC1C5I,EAAMzK,OAAO0K,OAAO,MACpBqkC,EAAeptC,KAAKotC,aAAeptC,KAAK4R,SACxCy7B,EAAcrtC,KAAKggB,OAAOhH,SAAW,GACrCpH,EAAW5R,KAAK4R,SAAW,GAC3B07B,EAAiBlB,GAAsBpsC,MAElCkJ,EAAI,EAAGA,EAAImkC,EAAYzsC,OAAQsI,IAAK,CAC3C,IAAIpI,EAAIusC,EAAYnkC,GACpB,GAAIpI,EAAE4Q,IACJ,GAAa,MAAT5Q,EAAEzD,KAAoD,IAArCkE,OAAOT,EAAEzD,KAAKmM,QAAQ,WACzCoI,EAASb,KAAKjQ,GACdgI,EAAIhI,EAAEzD,KAAOyD,GACXA,EAAE6Q,OAAS7Q,EAAE6Q,KAAO,KAAKupB,WAAaoS,QAS9C,GAAIF,EAAc,CAGhB,IAFA,IAAID,EAAO,GACPI,EAAU,GACLviB,EAAM,EAAGA,EAAMoiB,EAAaxsC,OAAQoqB,IAAO,CAClD,IAAIwiB,EAAMJ,EAAapiB,GACvBwiB,EAAI77B,KAAKupB,WAAaoS,EACtBE,EAAI77B,KAAK87B,IAAMD,EAAI17B,IAAI47B,wBACnB5kC,EAAI0kC,EAAInwC,KACV8vC,EAAKp8B,KAAKy8B,GAEVD,EAAQx8B,KAAKy8B,GAGjBxtC,KAAKmtC,KAAOpmC,EAAE2K,EAAK,KAAMy7B,GACzBntC,KAAKutC,QAAUA,EAGjB,OAAOxmC,EAAE2K,EAAK,KAAME,IAGtB+7B,QAAS,WACP,IAAI/7B,EAAW5R,KAAKotC,aAChBJ,EAAYhtC,KAAKgtC,YAAehtC,KAAKlC,MAAQ,KAAO,QACnD8T,EAAShR,QAAWZ,KAAK4tC,QAAQh8B,EAAS,GAAGE,IAAKk7B,KAMvDp7B,EAAS8B,QAAQm6B,IACjBj8B,EAAS8B,QAAQo6B,IACjBl8B,EAAS8B,QAAQq6B,IAKjB/tC,KAAKguC,QAAU/yB,SAASgzB,KAAKC,aAE7Bt8B,EAAS8B,SAAQ,SAAU5S,GACzB,GAAIA,EAAE6Q,KAAKw8B,MAAO,CAChB,IAAI3hB,EAAK1rB,EAAEgR,IACP01B,EAAIhb,EAAG5E,MACXqe,GAAmBzZ,EAAIwgB,GACvBxF,EAAE4G,UAAY5G,EAAE6G,gBAAkB7G,EAAE8G,mBAAqB,GACzD9hB,EAAG7c,iBAAiB41B,GAAoB/Y,EAAG+hB,QAAU,SAASlzB,EAAIpP,GAC5DA,GAAKA,EAAE7H,SAAWooB,GAGjBvgB,IAAK,aAAa3K,KAAK2K,EAAEuiC,gBAC5BhiB,EAAG2T,oBAAoBoF,GAAoBlqB,GAC3CmR,EAAG+hB,QAAU,KACbpI,GAAsB3Z,EAAIwgB,YAOpCl2B,QAAS,CACP82B,QAAS,SAAkBphB,EAAIwgB,GAE7B,IAAK7H,GACH,OAAO,EAGT,GAAInlC,KAAKyuC,SACP,OAAOzuC,KAAKyuC,SAOd,IAAIjqB,EAAQgI,EAAGkiB,YACXliB,EAAGgU,oBACLhU,EAAGgU,mBAAmB9sB,SAAQ,SAAU4sB,GAAOkE,GAAYhgB,EAAO8b,MAEpE+D,GAAS7f,EAAOwoB,GAChBxoB,EAAMoD,MAAMikB,QAAU,OACtB7rC,KAAK+rB,IAAI2M,YAAYlU,GACrB,IAAIjL,EAAO+sB,GAAkB9hB,GAE7B,OADAxkB,KAAK+rB,IAAI0M,YAAYjU,GACbxkB,KAAKyuC,SAAWl1B,EAAK6tB,gBAKnC,SAASyG,GAAgB/sC,GAEnBA,EAAEgR,IAAIy8B,SACRztC,EAAEgR,IAAIy8B,UAGJztC,EAAEgR,IAAI81B,UACR9mC,EAAEgR,IAAI81B,WAIV,SAASkG,GAAgBhtC,GACvBA,EAAE6Q,KAAKg9B,OAAS7tC,EAAEgR,IAAI47B,wBAGxB,SAASK,GAAkBjtC,GACzB,IAAI8tC,EAAS9tC,EAAE6Q,KAAK87B,IAChBkB,EAAS7tC,EAAE6Q,KAAKg9B,OAChBE,EAAKD,EAAOE,KAAOH,EAAOG,KAC1BC,EAAKH,EAAOI,IAAML,EAAOK,IAC7B,GAAIH,GAAME,EAAI,CACZjuC,EAAE6Q,KAAKw8B,OAAQ,EACf,IAAI3G,EAAI1mC,EAAEgR,IAAI8V,MACd4f,EAAE4G,UAAY5G,EAAE6G,gBAAkB,aAAeQ,EAAK,MAAQE,EAAK,MACnEvH,EAAE8G,mBAAqB,MAI3B,IAAIW,GAAqB,CACvBrC,WAAYA,GACZK,gBAAiBA,IAMnB3kB,GAAI5b,OAAOe,YAAcA,GACzB6a,GAAI5b,OAAOU,cAAgBA,GAC3Bkb,GAAI5b,OAAOW,eAAiBA,GAC5Bib,GAAI5b,OAAOa,gBAAkBA,GAC7B+a,GAAI5b,OAAOY,iBAAmBA,GAG9BnC,EAAOmd,GAAIrkB,QAAQuT,WAAYu0B,IAC/B5gC,EAAOmd,GAAIrkB,QAAQwuB,WAAYwc,IAG/B3mB,GAAI5oB,UAAUwsB,UAAY1d,EAAY27B,GAAQ3+B,EAG9C8c,GAAI5oB,UAAUwlB,OAAS,SACrBsH,EACA7H,GAGA,OADA6H,EAAKA,GAAMhe,EAAYopB,GAAMpL,QAAMjsB,EAC5BgsB,GAAevsB,KAAMwsB,EAAI7H,IAK9BnW,GACFmM,YAAW,WACLjO,EAAOI,UACLA,IACFA,GAAS6hB,KAAK,OAAQrG,MAsBzB,GAKU,Y,2CC5vQfprB,EAAOC,QAAU,SAAU+xC,EAAQ5xC,GACjC,MAAO,CACL0Q,aAAuB,EAATkhC,GACdjqC,eAAyB,EAATiqC,GAChBjhC,WAAqB,EAATihC,GACZ5xC,MAAOA,K,uBCLX,IAiBI6xC,EAAOC,EAASC,EAjBhB7xC,EAAS,EAAQ,QACjB0B,EAAQ,EAAQ,QAChBiC,EAAU,EAAQ,QAClBqB,EAAO,EAAQ,QACf8sC,EAAO,EAAQ,QACfnwC,EAAgB,EAAQ,QACxB6P,EAAY,EAAQ,QAEpBugC,EAAW/xC,EAAO+xC,SAClBh/B,EAAM/S,EAAOqd,aACbrK,EAAQhT,EAAOgyC,eACfC,EAAUjyC,EAAOiyC,QACjBC,EAAiBlyC,EAAOkyC,eACxBC,EAAWnyC,EAAOmyC,SAClB70B,EAAU,EACV2S,EAAQ,GACRmiB,EAAqB,qBAGrBthB,EAAM,SAAU3d,GAElB,GAAI8c,EAAM/jB,eAAeiH,GAAK,CAC5B,IAAIjQ,EAAK+sB,EAAM9c,UACR8c,EAAM9c,GACbjQ,MAIAmvC,EAAS,SAAUl/B,GACrB,OAAO,WACL2d,EAAI3d,KAIJm/B,EAAW,SAAUnzB,GACvB2R,EAAI3R,EAAMhL,OAGRo+B,EAAO,SAAUp/B,GAEnBnT,EAAOwyC,YAAYr/B,EAAK,GAAI4+B,EAASU,SAAW,KAAOV,EAASW,OAI7D3/B,GAAQC,IACXD,EAAM,SAAsB7P,GAC1B,IAAImT,EAAO,GACP3K,EAAI,EACR,MAAOlI,UAAUJ,OAASsI,EAAG2K,EAAK9C,KAAK/P,UAAUkI,MAMjD,OALAukB,IAAQ3S,GAAW,YAEH,mBAANpa,EAAmBA,EAAKqK,SAASrK,IAAKK,WAAMR,EAAWsT,IAEjEs7B,EAAMr0B,GACCA,GAETtK,EAAQ,SAAwBG,UACvB8c,EAAM9c,IAGS,WAApBxP,EAAQsuC,GACVN,EAAQ,SAAUx+B,GAChB8+B,EAAQr0B,SAASy0B,EAAOl/B,KAGjBg/B,GAAYA,EAAS3hB,IAC9BmhB,EAAQ,SAAUx+B,GAChBg/B,EAAS3hB,IAAI6hB,EAAOl/B,KAIb++B,IAAmB,mCAAmCpuC,KAAK0N,IACpEogC,EAAU,IAAIM,EACdL,EAAOD,EAAQe,MACff,EAAQgB,MAAMC,UAAYP,EAC1BX,EAAQ3sC,EAAK6sC,EAAKW,YAAaX,EAAM,KAG5B7xC,EAAOmS,kBAA0C,mBAAfqgC,aAA8BxyC,EAAO8yC,eAAkBpxC,EAAM6wC,GAKxGZ,EADSS,KAAsBzwC,EAAc,UACrC,SAAUwR,GAChB2+B,EAAK5W,YAAYv5B,EAAc,WAAWywC,GAAsB,WAC9DN,EAAK7W,YAAYz4B,MACjBsuB,EAAI3d,KAKA,SAAUA,GAChBgK,WAAWk1B,EAAOl/B,GAAK,KAbzBw+B,EAAQY,EACRvyC,EAAOmS,iBAAiB,UAAWmgC,GAAU,KAiBjD5yC,EAAOC,QAAU,CACfoT,IAAKA,EACLC,MAAOA,I,uBCnGT,IAAI5R,EAAwB,EAAQ,QAIpCA,EAAsB,Y,uBCJtB,IASI2R,EAAKlR,EAAKnB,EATVqyC,EAAkB,EAAQ,QAC1B/yC,EAAS,EAAQ,QACjBkK,EAAW,EAAQ,QACnB7D,EAA8B,EAAQ,QACtC2sC,EAAY,EAAQ,QACpBC,EAAY,EAAQ,QACpB1xC,EAAa,EAAQ,QAErB2xC,EAAUlzC,EAAOkzC,QAGjBC,EAAU,SAAUrwC,GACtB,OAAOpC,EAAIoC,GAAMjB,EAAIiB,GAAMiQ,EAAIjQ,EAAI,KAGjCswC,EAAY,SAAUC,GACxB,OAAO,SAAUvwC,GACf,IAAIwwC,EACJ,IAAKppC,EAASpH,KAAQwwC,EAAQzxC,EAAIiB,IAAKqW,OAASk6B,EAC9C,MAAMrwC,UAAU,0BAA4BqwC,EAAO,aACnD,OAAOC,IAIb,GAAIP,EAAiB,CACnB,IAAI1yC,EAAQ,IAAI6yC,EACZK,EAAQlzC,EAAMwB,IACd2xC,EAAQnzC,EAAMK,IACd+yC,EAAQpzC,EAAM0S,IAClBA,EAAM,SAAUjQ,EAAI4wC,GAElB,OADAD,EAAMvyC,KAAKb,EAAOyC,EAAI4wC,GACfA,GAET7xC,EAAM,SAAUiB,GACd,OAAOywC,EAAMryC,KAAKb,EAAOyC,IAAO,IAElCpC,EAAM,SAAUoC,GACd,OAAO0wC,EAAMtyC,KAAKb,EAAOyC,QAEtB,CACL,IAAI6wC,EAAQV,EAAU,SACtB1xC,EAAWoyC,IAAS,EACpB5gC,EAAM,SAAUjQ,EAAI4wC,GAElB,OADArtC,EAA4BvD,EAAI6wC,EAAOD,GAChCA,GAET7xC,EAAM,SAAUiB,GACd,OAAOkwC,EAAUlwC,EAAI6wC,GAAS7wC,EAAG6wC,GAAS,IAE5CjzC,EAAM,SAAUoC,GACd,OAAOkwC,EAAUlwC,EAAI6wC,IAIzBj0C,EAAOC,QAAU,CACfoT,IAAKA,EACLlR,IAAKA,EACLnB,IAAKA,EACLyyC,QAASA,EACTC,UAAWA,I,uBC3Db,IAAIlpC,EAAW,EAAQ,QAEvBxK,EAAOC,QAAU,SAAUmD,GACzB,IAAKoH,EAASpH,IAAc,OAAPA,EACnB,MAAME,UAAU,aAAee,OAAOjB,GAAM,mBAC5C,OAAOA,I,uBCLX,IAAIa,EAAU,EAAQ,QAClBiwC,EAAY,EAAQ,QACpBhwC,EAAkB,EAAQ,QAE1BM,EAAWN,EAAgB,YAE/BlE,EAAOC,QAAU,SAAUmD,GACzB,QAAUC,GAAND,EAAiB,OAAOA,EAAGoB,IAC1BpB,EAAG,eACH8wC,EAAUjwC,EAAQb,M,uBCTzBpD,EAAOC,QAAU,EAAQ,S,uBCAzB,IAAIJ,EAAc,EAAQ,QACtBC,EAAuB,EAAQ,QAC/BqF,EAAW,EAAQ,QACnBgvC,EAAa,EAAQ,QAIzBn0C,EAAOC,QAAUJ,EAAcsB,OAAO2U,iBAAmB,SAA0BzU,EAAG+yC,GACpFjvC,EAAS9D,GACT,IAGIlB,EAHA8O,EAAOklC,EAAWC,GAClB1wC,EAASuL,EAAKvL,OACdwC,EAAQ,EAEZ,MAAOxC,EAASwC,EAAOpG,EAAqBO,EAAEgB,EAAGlB,EAAM8O,EAAK/I,KAAUkuC,EAAWj0C,IACjF,OAAOkB,I,wBCdT,8BACE,OAAO+B,GAAMA,EAAGJ,MAAQA,MAAQI,GAIlCpD,EAAOC,QAELo0C,EAA2B,iBAAdC,YAA0BA,aACvCD,EAAuB,iBAAV9iC,QAAsBA,SACnC8iC,EAAqB,iBAARE,MAAoBA,OACjCF,EAAuB,iBAAV/zC,GAAsBA,IAEnCuN,SAAS,cAATA,K,6CCZF,IAAIrD,EAAW,EAAQ,QAEvBxK,EAAOC,QAAU,SAAUmD,GACzB,IAAKoH,EAASpH,IAAc,OAAPA,EACnB,MAAME,UAAU,aAAee,OAAOjB,GAAM,mBAC5C,OAAOA,I,oCCJX,IAAI+J,EAAS,EAAQ,QAAiCA,OAClDqnC,EAAsB,EAAQ,QAC9BC,EAAiB,EAAQ,QAEzBC,EAAkB,kBAClBC,EAAmBH,EAAoBnhC,IACvCuhC,EAAmBJ,EAAoBd,UAAUgB,GAIrDD,EAAepwC,OAAQ,UAAU,SAAUwwC,GACzCF,EAAiB7xC,KAAM,CACrB2W,KAAMi7B,EACNI,OAAQzwC,OAAOwwC,GACf3uC,MAAO,OAIR,WACD,IAGI6uC,EAHAnB,EAAQgB,EAAiB9xC,MACzBgyC,EAASlB,EAAMkB,OACf5uC,EAAQ0tC,EAAM1tC,MAElB,OAAIA,GAAS4uC,EAAOpxC,OAAe,CAAEtD,WAAOiD,EAAWwB,MAAM,IAC7DkwC,EAAQ5nC,EAAO2nC,EAAQ5uC,GACvB0tC,EAAM1tC,OAAS6uC,EAAMrxC,OACd,CAAEtD,MAAO20C,EAAOlwC,MAAM,Q,qBC3B/B,IAAI4O,EAAK,EACLuhC,EAAUhyC,KAAKiyC,SAEnBj1C,EAAOC,QAAU,SAAUE,GACzB,MAAO,UAAYkE,YAAehB,IAARlD,EAAoB,GAAKA,GAAO,QAAUsT,EAAKuhC,GAAS1wC,SAAS,M,qBCJ7FtE,EAAOC,QAAU,I,kCCCjB,IAAIi1C,EAAI,EAAQ,QACZC,EAA4B,EAAQ,QACpCC,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzB3uC,EAA8B,EAAQ,QACtCtE,EAAW,EAAQ,QACnB6B,EAAkB,EAAQ,QAC1BqxC,EAAU,EAAQ,QAClBrB,EAAY,EAAQ,QACpBsB,EAAgB,EAAQ,QAExBC,EAAoBD,EAAcC,kBAClCC,EAAyBF,EAAcE,uBACvClxC,EAAWN,EAAgB,YAC3ByxC,EAAO,OACPC,EAAS,SACTC,EAAU,UAEVC,EAAa,WAAc,OAAOhzC,MAEtC9C,EAAOC,QAAU,SAAU81C,EAAUC,EAAMC,EAAqBrxC,EAAMsxC,EAASC,EAAQlvC,GACrFkuC,EAA0Bc,EAAqBD,EAAMpxC,GAErD,IAkBIwxC,EAA0Bx8B,EAASy8B,EAlBnCC,EAAqB,SAAUC,GACjC,GAAIA,IAASL,GAAWM,EAAiB,OAAOA,EAChD,IAAKd,GAA0Ba,KAAQE,EAAmB,OAAOA,EAAkBF,GACnF,OAAQA,GACN,KAAKZ,EAAM,OAAO,WAAkB,OAAO,IAAIM,EAAoBnzC,KAAMyzC,IACzE,KAAKX,EAAQ,OAAO,WAAoB,OAAO,IAAIK,EAAoBnzC,KAAMyzC,IAC7E,KAAKV,EAAS,OAAO,WAAqB,OAAO,IAAII,EAAoBnzC,KAAMyzC,IAC/E,OAAO,WAAc,OAAO,IAAIN,EAAoBnzC,QAGpDqB,EAAgB6xC,EAAO,YACvBU,GAAwB,EACxBD,EAAoBV,EAASvzC,UAC7Bm0C,EAAiBF,EAAkBjyC,IAClCiyC,EAAkB,eAClBP,GAAWO,EAAkBP,GAC9BM,GAAmBd,GAA0BiB,GAAkBL,EAAmBJ,GAClFU,EAA4B,SAARZ,GAAkBS,EAAkBI,SAA4BF,EAiCxF,GA7BIC,IACFR,EAA2BhB,EAAewB,EAAkBp1C,KAAK,IAAIu0C,IACjEN,IAAsBt0C,OAAOqB,WAAa4zC,EAAyBxxC,OAChE2wC,GAAWH,EAAegB,KAA8BX,IACvDJ,EACFA,EAAee,EAA0BX,GACa,mBAAtCW,EAAyB5xC,IACzCmC,EAA4ByvC,EAA0B5xC,EAAUsxC,IAIpER,EAAec,EAA0BjyC,GAAe,GAAM,GAC1DoxC,IAASrB,EAAU/vC,GAAiB2xC,KAKxCI,GAAWN,GAAUe,GAAkBA,EAAe/1C,OAASg1C,IACjEc,GAAwB,EACxBF,EAAkB,WAAoB,OAAOG,EAAen1C,KAAKsB,QAI7DyyC,IAAWtuC,GAAWwvC,EAAkBjyC,KAAcgyC,GAC1D7vC,EAA4B8vC,EAAmBjyC,EAAUgyC,GAE3DtC,EAAU8B,GAAQQ,EAGdN,EAMF,GALAt8B,EAAU,CACRqL,OAAQqxB,EAAmBV,GAC3B3mC,KAAMknC,EAASK,EAAkBF,EAAmBX,GACpDkB,QAASP,EAAmBT,IAE1B5uC,EAAQ,IAAKovC,KAAOz8B,GAClB87B,IAA0BgB,GAA2BL,KAAOI,GAC9Dp0C,EAASo0C,EAAmBJ,EAAKz8B,EAAQy8B,SAEtCnB,EAAE,CAAEhuC,OAAQ8uC,EAAMc,OAAO,EAAMnvC,OAAQ+tC,GAA0BgB,GAAyB98B,GAGnG,OAAOA,I,qBCxFT,IAAI/Z,EAAc,EAAQ,QACtBoB,EAAiB,EAAQ,QACzBkE,EAAW,EAAQ,QACnBpE,EAAc,EAAQ,QAEtBg2C,EAAuB51C,OAAOe,eAIlCjC,EAAQI,EAAIR,EAAck3C,EAAuB,SAAwB11C,EAAGC,EAAG01C,GAI7E,GAHA7xC,EAAS9D,GACTC,EAAIP,EAAYO,GAAG,GACnB6D,EAAS6xC,GACL/1C,EAAgB,IAClB,OAAO81C,EAAqB11C,EAAGC,EAAG01C,GAClC,MAAOz1C,IACT,GAAI,QAASy1C,GAAc,QAASA,EAAY,MAAM1zC,UAAU,2BAEhE,MADI,UAAW0zC,IAAY31C,EAAEC,GAAK01C,EAAW52C,OACtCiB,I,uBClBTrB,EAAOC,QAAU,EAAQ,S,qBCAzB,IAAIuK,EAAW,EAAQ,QACnBa,EAAU,EAAQ,QAClBnH,EAAkB,EAAQ,QAE1B2D,EAAU3D,EAAgB,WAI9BlE,EAAOC,QAAU,SAAUg3C,EAAevzC,GACxC,IAAIwzC,EASF,OARE7rC,EAAQ4rC,KACVC,EAAID,EAAcpiB,YAEF,mBAALqiB,GAAoBA,IAAMpyC,QAASuG,EAAQ6rC,EAAE10C,WAC/CgI,EAAS0sC,KAChBA,EAAIA,EAAErvC,GACI,OAANqvC,IAAYA,OAAI7zC,IAH+C6zC,OAAI7zC,GAKlE,SAAWA,IAAN6zC,EAAkBpyC,MAAQoyC,GAAc,IAAXxzC,EAAe,EAAIA,K,uBClBhE,IAAI1B,EAAQ,EAAQ,QAChBiC,EAAU,EAAQ,QAElB8H,EAAQ,GAAGA,MAGf/L,EAAOC,QAAU+B,GAAM,WAGrB,OAAQb,OAAO,KAAKg2C,qBAAqB,MACtC,SAAU/zC,GACb,MAAsB,UAAfa,EAAQb,GAAkB2I,EAAMvK,KAAK4B,EAAI,IAAMjC,OAAOiC,IAC3DjC,Q,uBCZJ,IAAItB,EAAc,EAAQ,QACtBgB,EAA6B,EAAQ,QACrCd,EAA2B,EAAQ,QACnCe,EAAkB,EAAQ,QAC1BC,EAAc,EAAQ,QACtBC,EAAM,EAAQ,QACdC,EAAiB,EAAQ,QAEzBC,EAAiCC,OAAOC,yBAI5CnB,EAAQI,EAAIR,EAAcqB,EAAiC,SAAkCG,EAAGC,GAG9F,GAFAD,EAAIP,EAAgBO,GACpBC,EAAIP,EAAYO,GAAG,GACfL,EAAgB,IAClB,OAAOC,EAA+BG,EAAGC,GACzC,MAAOC,IACT,GAAIP,EAAIK,EAAGC,GAAI,OAAOvB,GAA0Bc,EAA2BR,EAAEmB,KAAKH,EAAGC,GAAID,EAAEC,M,uBClB7F,IAAI4C,EAAkB,EAAQ,QAC1B2H,EAAS,EAAQ,QACjBlF,EAA8B,EAAQ,QAEtCywC,EAAclzC,EAAgB,eAC9BmzC,EAAiBvyC,MAAMtC,eAIQa,GAA/Bg0C,EAAeD,IACjBzwC,EAA4B0wC,EAAgBD,EAAavrC,EAAO,OAIlE7L,EAAOC,QAAU,SAAUE,GACzBk3C,EAAeD,GAAaj3C,IAAO,I,uBCfrC,IAAIG,EAAS,EAAQ,QAErBN,EAAOC,QAAU,SAAUmC,EAAGuB,GAC5B,IAAIoZ,EAAUzc,EAAOyc,QACjBA,GAAWA,EAAQxb,QACA,IAArBuC,UAAUJ,OAAeqZ,EAAQxb,MAAMa,GAAK2a,EAAQxb,MAAMa,EAAGuB,M,qBCLjE,IAAI4C,EAAY,EAAQ,QAEpBC,EAAMxD,KAAKwD,IACXC,EAAMzD,KAAKyD,IAKfzG,EAAOC,QAAU,SAAUiG,EAAOxC,GAChC,IAAIgD,EAAUH,EAAUL,GACxB,OAAOQ,EAAU,EAAIF,EAAIE,EAAUhD,EAAQ,GAAK+C,EAAIC,EAAShD,K,qBCV/D,IAAIyB,EAAW,EAAQ,QACnB5B,EAAY,EAAQ,QACpBW,EAAkB,EAAQ,QAE1B2D,EAAU3D,EAAgB,WAI9BlE,EAAOC,QAAU,SAAUoB,EAAGi2C,GAC5B,IACIC,EADAL,EAAI/xC,EAAS9D,GAAGwzB,YAEpB,YAAaxxB,IAAN6zC,QAAiD7zC,IAA7Bk0C,EAAIpyC,EAAS+xC,GAAGrvC,IAAyByvC,EAAqB/zC,EAAUg0C,K,qBCXrG,IAAIpyC,EAAW,EAAQ,QACnB2Q,EAAmB,EAAQ,QAC3BlU,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBuwC,EAAO,EAAQ,QACfoF,EAAwB,EAAQ,QAChCjE,EAAY,EAAQ,QACpBkE,EAAWlE,EAAU,YAErBmE,EAAY,YACZC,EAAQ,aAGRC,EAAa,WAEf,IAMIC,EANAC,EAASN,EAAsB,UAC/B9zC,EAAS9B,EAAY8B,OACrBq0C,EAAK,IACLC,EAAS,SACTC,EAAK,IACLC,EAAK,OAASF,EAAS,IAE3BF,EAAOptB,MAAMikB,QAAU,OACvByD,EAAK5W,YAAYsc,GACjBA,EAAOpgC,IAAMrT,OAAO6zC,GACpBL,EAAiBC,EAAOK,cAAcp6B,SACtC85B,EAAeO,OACfP,EAAeQ,MAAMN,EAAKC,EAASC,EAAK,oBAAsBF,EAAK,IAAMC,EAASC,GAClFJ,EAAeS,QACfV,EAAaC,EAAeU,EAC5B,MAAO70C,WAAiBk0C,EAAWF,GAAW91C,EAAY8B,IAC1D,OAAOk0C,KAKT53C,EAAOC,QAAUkB,OAAO0K,QAAU,SAAgBxK,EAAG+yC,GACnD,IAAIzuC,EAQJ,OAPU,OAANtE,GACFs2C,EAAMD,GAAavyC,EAAS9D,GAC5BsE,EAAS,IAAIgyC,EACbA,EAAMD,GAAa,KAEnB/xC,EAAO8xC,GAAYp2C,GACdsE,EAASiyC,SACMv0C,IAAf+wC,EAA2BzuC,EAASmQ,EAAiBnQ,EAAQyuC,IAGtEvyC,EAAW41C,IAAY,G,qBChDvB,IAAIz1C,EAAQ,EAAQ,QAEpBhC,EAAOC,UAAYkB,OAAO+D,wBAA0BlD,GAAM,WAGxD,OAAQqC,OAAO3D,c,qBCLjB,IAMI0R,EAAOumB,EANPr4B,EAAS,EAAQ,QACjBwR,EAAY,EAAQ,QAEpBygC,EAAUjyC,EAAOiyC,QACjBiG,EAAWjG,GAAWA,EAAQiG,SAC9BC,EAAKD,GAAYA,EAASC,GAG1BA,GACFrmC,EAAQqmC,EAAG1sC,MAAM,KACjB4sB,EAAUvmB,EAAM,GAAKA,EAAM,IAClBN,IACTM,EAAQN,EAAUM,MAAM,iBACpBA,IAAOumB,EAAUvmB,EAAM,KAG7BpS,EAAOC,QAAU04B,IAAYA,G,uBChB7B,IAAI73B,EAAkB,EAAQ,QAC1BuE,EAAW,EAAQ,QACnBqzC,EAAkB,EAAQ,QAG1BC,EAAe,SAAUC,GAC3B,OAAO,SAAUC,EAAOvpB,EAAIwpB,GAC1B,IAGI14C,EAHAiB,EAAIP,EAAgB+3C,GACpBn1C,EAAS2B,EAAShE,EAAEqC,QACpBwC,EAAQwyC,EAAgBI,EAAWp1C,GAIvC,GAAIk1C,GAAetpB,GAAMA,GAAI,MAAO5rB,EAASwC,EAG3C,GAFA9F,EAAQiB,EAAE6E,KAEN9F,GAASA,EAAO,OAAO,OAEtB,KAAMsD,EAASwC,EAAOA,IAC3B,IAAK0yC,GAAe1yC,KAAS7E,IAAMA,EAAE6E,KAAWopB,EAAI,OAAOspB,GAAe1yC,GAAS,EACnF,OAAQ0yC,IAAgB,IAI9B54C,EAAOC,QAAU,CAGf84C,SAAUJ,GAAa,GAGvBrsC,QAASqsC,GAAa,K,uBC9BxB,IAAIK,EAAyB,EAAQ,QAIrCh5C,EAAOC,QAAU,SAAUiD,GACzB,OAAO/B,OAAO63C,EAAuB91C,M,uBCLvC,IAAIqD,EAAY,EAAQ,QAEpBE,EAAMzD,KAAKyD,IAIfzG,EAAOC,QAAU,SAAUiD,GACzB,OAAOA,EAAW,EAAIuD,EAAIF,EAAUrD,GAAW,kBAAoB,I,mBCPrE,IAAIsJ,EAAiB,GAAGA,eAExBxM,EAAOC,QAAU,SAAUmD,EAAIjD,GAC7B,OAAOqM,EAAehL,KAAK4B,EAAIjD,K,qBCHjC,EAAQ,QACR,IAAI84C,EAAe,EAAQ,QACvB34C,EAAS,EAAQ,QACjBqG,EAA8B,EAAQ,QACtCutC,EAAY,EAAQ,QACpBhwC,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAEpC,IAAK,IAAIg1C,KAAmBD,EAAc,CACxC,IAAIE,EAAa74C,EAAO44C,GACpBE,EAAsBD,GAAcA,EAAW32C,UAC/C42C,IAAwBA,EAAoBj1C,IAC9CwC,EAA4ByyC,EAAqBj1C,EAAe+0C,GAElEhF,EAAUgF,GAAmBhF,EAAUpvC,Q,uBCfzC,IAAIxE,EAAS,EAAQ,QACjBg1C,EAAiB,EAAQ,QAI7BA,EAAeh1C,EAAOgL,KAAM,QAAQ,I,qBCLpC,IAAIiqC,EAAU,EAAQ,QAClB50C,EAAQ,EAAQ,SAEnBX,EAAOC,QAAU,SAAUE,EAAKC,GAC/B,OAAOO,EAAMR,KAASQ,EAAMR,QAAiBkD,IAAVjD,EAAsBA,EAAQ,MAChE,WAAY,IAAIyT,KAAK,CACtB8kB,QAAS,QACToW,KAAMwG,EAAU,OAAS,SACzB8D,UAAW,0C,uBCRb,IAAIr1C,EAAa,EAAQ,QACrBs1C,EAA4B,EAAQ,QACpCC,EAA8B,EAAQ,QACtCp0C,EAAW,EAAQ,QAGvBnF,EAAOC,QAAU+D,EAAW,UAAW,YAAc,SAAiBZ,GACpE,IAAI6L,EAAOqqC,EAA0Bj5C,EAAE8E,EAAS/B,IAC5C8B,EAAwBq0C,EAA4Bl5C,EACxD,OAAO6E,EAAwB+J,EAAKnN,OAAOoD,EAAsB9B,IAAO6L,I,qBCT1E,IAAIjO,EAAM,EAAQ,QACdoN,EAAW,EAAQ,QACnBmlC,EAAY,EAAQ,QACpBiG,EAA2B,EAAQ,QAEnC/B,EAAWlE,EAAU,YACrBkG,EAAkBt4C,OAAOqB,UAI7BxC,EAAOC,QAAUu5C,EAA2Br4C,OAAOi0C,eAAiB,SAAU/zC,GAE5E,OADAA,EAAI+M,EAAS/M,GACTL,EAAIK,EAAGo2C,GAAkBp2C,EAAEo2C,GACH,mBAAjBp2C,EAAEwzB,aAA6BxzB,aAAaA,EAAEwzB,YAChDxzB,EAAEwzB,YAAYryB,UACdnB,aAAaF,OAASs4C,EAAkB,O,qBCfnDz5C,EAAOC,QAAU,SAAU+xC,EAAQ5xC,GACjC,MAAO,CACL0Q,aAAuB,EAATkhC,GACdjqC,eAAyB,EAATiqC,GAChBjhC,WAAqB,EAATihC,GACZ5xC,MAAOA,K,uBCLX,IAMIgS,EAAOumB,EANPr4B,EAAS,EAAQ,QACjBwR,EAAY,EAAQ,QAEpBygC,EAAUjyC,EAAOiyC,QACjBiG,EAAWjG,GAAWA,EAAQiG,SAC9BC,EAAKD,GAAYA,EAASC,GAG1BA,GACFrmC,EAAQqmC,EAAG1sC,MAAM,KACjB4sB,EAAUvmB,EAAM,GAAKA,EAAM,IAClBN,IACTM,EAAQN,EAAUM,MAAM,iBACpBA,IAAOumB,EAAUvmB,EAAM,KAG7BpS,EAAOC,QAAU04B,IAAYA,G,oCCf7B,IAAI94B,EAAc,EAAQ,QACtBmC,EAAQ,EAAQ,QAChBmyC,EAAa,EAAQ,QACrBoF,EAA8B,EAAQ,QACtC14C,EAA6B,EAAQ,QACrCuN,EAAW,EAAQ,QACnBsrC,EAAgB,EAAQ,QAExBC,EAAex4C,OAAOy4C,OAK1B55C,EAAOC,SAAW05C,GAAgB33C,GAAM,WACtC,IAAI63C,EAAI,GACJC,EAAI,GAEJ30B,EAASzkB,SACTq5C,EAAW,uBAGf,OAFAF,EAAE10B,GAAU,EACZ40B,EAAShuC,MAAM,IAAIyK,SAAQ,SAAUwjC,GAAOF,EAAEE,GAAOA,KACf,GAA/BL,EAAa,GAAIE,GAAG10B,IAAgBgvB,EAAWwF,EAAa,GAAIG,IAAIzX,KAAK,KAAO0X,KACpF,SAAgB7yC,EAAQF,GAC3B,IAAIizC,EAAI7rC,EAASlH,GACbgzC,EAAkBp2C,UAAUJ,OAC5BwC,EAAQ,EACRhB,EAAwBq0C,EAA4Bl5C,EACpD82C,EAAuBt2C,EAA2BR,EACtD,MAAO65C,EAAkBh0C,EAAO,CAC9B,IAII/F,EAJAo3C,EAAImC,EAAc51C,UAAUoC,MAC5B+I,EAAO/J,EAAwBivC,EAAWoD,GAAGz1C,OAAOoD,EAAsBqyC,IAAMpD,EAAWoD,GAC3F7zC,EAASuL,EAAKvL,OACd4sB,EAAI,EAER,MAAO5sB,EAAS4sB,EACdnwB,EAAM8O,EAAKqhB,KACNzwB,IAAes3C,EAAqB31C,KAAK+1C,EAAGp3C,KAAM85C,EAAE95C,GAAOo3C,EAAEp3C,IAEpE,OAAO85C,GACPN,G,qBCxCJ,IAAI11C,EAAU,EAAQ,QAItBjE,EAAOC,QAAU6E,MAAMuG,SAAW,SAAiBw2B,GACjD,MAAuB,SAAhB59B,EAAQ49B,K,qBCLjB7hC,EAAOC,QAAU,EAAQ,S,qBCAzB,IAAIa,EAAkB,EAAQ,QAC1BuE,EAAW,EAAQ,QACnBqzC,EAAkB,EAAQ,QAG1BC,EAAe,SAAUC,GAC3B,OAAO,SAAUC,EAAOvpB,EAAIwpB,GAC1B,IAGI14C,EAHAiB,EAAIP,EAAgB+3C,GACpBn1C,EAAS2B,EAAShE,EAAEqC,QACpBwC,EAAQwyC,EAAgBI,EAAWp1C,GAIvC,GAAIk1C,GAAetpB,GAAMA,GAAI,MAAO5rB,EAASwC,EAG3C,GAFA9F,EAAQiB,EAAE6E,KAEN9F,GAASA,EAAO,OAAO,OAEtB,KAAMsD,EAASwC,EAAOA,IAC3B,IAAK0yC,GAAe1yC,KAAS7E,IAAMA,EAAE6E,KAAWopB,EAAI,OAAOspB,GAAe1yC,GAAS,EACnF,OAAQ0yC,IAAgB,IAI9B54C,EAAOC,QAAU,CAGf84C,SAAUJ,GAAa,GAGvBrsC,QAASqsC,GAAa,K,uBC9BxB,IAAI32C,EAAQ,EAAQ,QAChBiC,EAAU,EAAQ,QAElB8H,EAAQ,GAAGA,MAGf/L,EAAOC,QAAU+B,GAAM,WAGrB,OAAQb,OAAO,KAAKg2C,qBAAqB,MACtC,SAAU/zC,GACb,MAAsB,UAAfa,EAAQb,GAAkB2I,EAAMvK,KAAK4B,EAAI,IAAMjC,OAAOiC,IAC3DjC,Q,4CCZJ,IAAIoF,EAAY,EAAQ,QAEpBE,EAAMzD,KAAKyD,IAIfzG,EAAOC,QAAU,SAAUiD,GACzB,OAAOA,EAAW,EAAIuD,EAAIF,EAAUrD,GAAW,kBAAoB,I,uBCPrE,IASImQ,EAAKlR,EAAKnB,EATVqyC,EAAkB,EAAQ,QAC1B/yC,EAAS,EAAQ,QACjBkK,EAAW,EAAQ,QACnB7D,EAA8B,EAAQ,QACtC2sC,EAAY,EAAQ,QACpBC,EAAY,EAAQ,QACpB1xC,EAAa,EAAQ,QAErB2xC,EAAUlzC,EAAOkzC,QAGjBC,EAAU,SAAUrwC,GACtB,OAAOpC,EAAIoC,GAAMjB,EAAIiB,GAAMiQ,EAAIjQ,EAAI,KAGjCswC,EAAY,SAAUC,GACxB,OAAO,SAAUvwC,GACf,IAAIwwC,EACJ,IAAKppC,EAASpH,KAAQwwC,EAAQzxC,EAAIiB,IAAKqW,OAASk6B,EAC9C,MAAMrwC,UAAU,0BAA4BqwC,EAAO,aACnD,OAAOC,IAIb,GAAIP,EAAiB,CACnB,IAAI1yC,EAAQ,IAAI6yC,EACZK,EAAQlzC,EAAMwB,IACd2xC,EAAQnzC,EAAMK,IACd+yC,EAAQpzC,EAAM0S,IAClBA,EAAM,SAAUjQ,EAAI4wC,GAElB,OADAD,EAAMvyC,KAAKb,EAAOyC,EAAI4wC,GACfA,GAET7xC,EAAM,SAAUiB,GACd,OAAOywC,EAAMryC,KAAKb,EAAOyC,IAAO,IAElCpC,EAAM,SAAUoC,GACd,OAAO0wC,EAAMtyC,KAAKb,EAAOyC,QAEtB,CACL,IAAI6wC,EAAQV,EAAU,SACtB1xC,EAAWoyC,IAAS,EACpB5gC,EAAM,SAAUjQ,EAAI4wC,GAElB,OADArtC,EAA4BvD,EAAI6wC,EAAOD,GAChCA,GAET7xC,EAAM,SAAUiB,GACd,OAAOkwC,EAAUlwC,EAAI6wC,GAAS7wC,EAAG6wC,GAAS,IAE5CjzC,EAAM,SAAUoC,GACd,OAAOkwC,EAAUlwC,EAAI6wC,IAIzBj0C,EAAOC,QAAU,CACfoT,IAAKA,EACLlR,IAAKA,EACLnB,IAAKA,EACLyyC,QAASA,EACTC,UAAWA,I,oCC1Db,IAAI3yC,EAAc,EAAQ,QACtBjB,EAAuB,EAAQ,QAC/BC,EAA2B,EAAQ,QAEvCC,EAAOC,QAAU,SAAUC,EAAQC,EAAKC,GACtC,IAAI+5C,EAAcp5C,EAAYZ,GAC1Bg6C,KAAej6C,EAAQJ,EAAqBO,EAAEH,EAAQi6C,EAAap6C,EAAyB,EAAGK,IAC9FF,EAAOi6C,GAAe/5C,I,qBCR7BJ,EAAOC,QAAU,I,uBCAjB,IAAIK,EAAS,EAAQ,QACjBC,EAAS,EAAQ,QACjBoG,EAA8B,EAAQ,QACtC3F,EAAM,EAAQ,QACd4F,EAAY,EAAQ,QACpBwzC,EAAyB,EAAQ,QACjC5F,EAAsB,EAAQ,QAE9BI,EAAmBJ,EAAoBryC,IACvCk4C,EAAuB7F,EAAoBf,QAC3C6G,EAAWj2C,OAAO+1C,GAAwBruC,MAAM,YAEpDxL,EAAO,iBAAiB,SAAU6C,GAChC,OAAOg3C,EAAuB54C,KAAK4B,OAGpCpD,EAAOC,QAAU,SAAUoB,EAAGlB,EAAKC,EAAO2G,GACzC,IAAIwzC,IAASxzC,KAAYA,EAAQwzC,OAC7BC,IAASzzC,KAAYA,EAAQ+J,WAC7BpJ,IAAcX,KAAYA,EAAQW,YAClB,mBAATtH,IACS,iBAAPD,GAAoBa,EAAIZ,EAAO,SAASuG,EAA4BvG,EAAO,OAAQD,GAC9Fk6C,EAAqBj6C,GAAO4G,OAASszC,EAASjY,KAAmB,iBAAPliC,EAAkBA,EAAM,KAEhFkB,IAAMf,GAIEi6C,GAEA7yC,GAAerG,EAAElB,KAC3Bq6C,GAAS,UAFFn5C,EAAElB,GAIPq6C,EAAQn5C,EAAElB,GAAOC,EAChBuG,EAA4BtF,EAAGlB,EAAKC,IATnCo6C,EAAQn5C,EAAElB,GAAOC,EAChBwG,EAAUzG,EAAKC,KAUrByN,SAASrL,UAAW,YAAY,WACjC,MAAsB,mBAARM,MAAsB8xC,EAAiB9xC,MAAMkE,QAAUozC,EAAuB54C,KAAKsB,U,8CCrCnG,IAAI0H,EAAW,EAAQ,QAEvBxK,EAAOC,QAAU,SAAUmD,GACzB,IAAKoH,EAASpH,GACZ,MAAME,UAAUe,OAAOjB,GAAM,qBAC7B,OAAOA,I,mBCLXpD,EAAOC,SAAU,G,kCCCjB,IAAIw6C,EAA6B,GAAGtD,qBAChC/1C,EAA2BD,OAAOC,yBAGlCs5C,EAAct5C,IAA6Bq5C,EAA2Bj5C,KAAK,CAAEm5C,EAAG,GAAK,GAIzF16C,EAAQI,EAAIq6C,EAAc,SAA8BE,GACtD,IAAIvzC,EAAajG,EAAyB0B,KAAM83C,GAChD,QAASvzC,GAAcA,EAAWyJ,YAChC2pC,G,qBCZJ,IAAIjwC,EAAW,EAAQ,QAMvBxK,EAAOC,QAAU,SAAU46C,EAAOC,GAChC,IAAKtwC,EAASqwC,GAAQ,OAAOA,EAC7B,IAAIr3C,EAAIsH,EACR,GAAIgwC,GAAoD,mBAAxBt3C,EAAKq3C,EAAMv2C,YAA4BkG,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EAC9G,GAAmC,mBAAvBtH,EAAKq3C,EAAME,WAA2BvwC,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EACzF,IAAKgwC,GAAoD,mBAAxBt3C,EAAKq3C,EAAMv2C,YAA4BkG,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EAC/G,MAAMxH,UAAU,6C,qBCZlB,IAAI5B,EAAwB,EAAQ,QAIpCA,EAAsB,Y,mBCJtBzB,EAAQI,EAAIc,OAAO+D,uB,mBCAnBlF,EAAOC,QAAU,I,uBCAjB,IAAIyB,EAAwB,EAAQ,QAIpCA,EAAsB,e,qBCJtB1B,EAAOC,QAAU,I,qBCAjB,IAAIK,EAAS,EAAQ,QACjBsG,EAAY,EAAQ,QAEpBo0C,EAAS,qBACTr6C,EAAQL,EAAO06C,IAAWp0C,EAAUo0C,EAAQ,IAEhDh7C,EAAOC,QAAUU,G,uBCNjB,IAAId,EAAc,EAAQ,QACtBmC,EAAQ,EAAQ,QAChBC,EAAgB,EAAQ,QAG5BjC,EAAOC,SAAWJ,IAAgBmC,GAAM,WACtC,OAEQ,GAFDb,OAAOe,eAAeD,EAAc,OAAQ,IAAK,CACtDE,IAAK,WAAc,OAAO,KACzBC,M,mBCPLpC,EAAOC,QAAU,CACf,cACA,iBACA,gBACA,uBACA,iBACA,WACA,Y,qBCNFD,EAAOC,QAAU,CACfg7C,YAAa,EACbC,oBAAqB,EACrBC,aAAc,EACdC,eAAgB,EAChBC,YAAa,EACbC,cAAe,EACfC,aAAc,EACdC,qBAAsB,EACtBC,SAAU,EACVC,kBAAmB,EACnBC,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,EACnBC,UAAW,EACXC,cAAe,EACfC,aAAc,EACdC,SAAU,EACVC,iBAAkB,EAClBC,OAAQ,EACRC,YAAa,EACbC,cAAe,EACfC,cAAe,EACfC,eAAgB,EAChBC,aAAc,EACdC,cAAe,EACfC,iBAAkB,EAClBC,iBAAkB,EAClBC,eAAgB,EAChBC,iBAAkB,EAClBC,cAAe,EACfC,UAAW,I,qBCjCb,IAAIvwC,EAAiB,GAAGA,eAExBxM,EAAOC,QAAU,SAAUmD,EAAIjD,GAC7B,OAAOqM,EAAehL,KAAK4B,EAAIjD,K,uBCHjC,IAAIG,EAAS,EAAQ,QACjBkK,EAAW,EAAQ,QAEnBuT,EAAWzd,EAAOyd,SAElBi/B,EAASxyC,EAASuT,IAAavT,EAASuT,EAAS9b,eAErDjC,EAAOC,QAAU,SAAUmD,GACzB,OAAO45C,EAASj/B,EAAS9b,cAAcmB,GAAM,K,uBCR/C,IAAI41C,EAAyB,EAAQ,QAIrCh5C,EAAOC,QAAU,SAAUiD,GACzB,OAAO/B,OAAO63C,EAAuB91C,M,uBCLvC,IAAIiC,EAAW,EAAQ,QACnB2Q,EAAmB,EAAQ,QAC3BlU,EAAc,EAAQ,QACtBC,EAAa,EAAQ,QACrBuwC,EAAO,EAAQ,QACfoF,EAAwB,EAAQ,QAChCjE,EAAY,EAAQ,QACpBkE,EAAWlE,EAAU,YAErBmE,EAAY,YACZC,EAAQ,aAGRC,EAAa,WAEf,IAMIC,EANAC,EAASN,EAAsB,UAC/B9zC,EAAS9B,EAAY8B,OACrBq0C,EAAK,IACLC,EAAS,SACTC,EAAK,IACLC,EAAK,OAASF,EAAS,IAE3BF,EAAOptB,MAAMikB,QAAU,OACvByD,EAAK5W,YAAYsc,GACjBA,EAAOpgC,IAAMrT,OAAO6zC,GACpBL,EAAiBC,EAAOK,cAAcp6B,SACtC85B,EAAeO,OACfP,EAAeQ,MAAMN,EAAKC,EAASC,EAAK,oBAAsBF,EAAK,IAAMC,EAASC,GAClFJ,EAAeS,QACfV,EAAaC,EAAeU,EAC5B,MAAO70C,WAAiBk0C,EAAWF,GAAW91C,EAAY8B,IAC1D,OAAOk0C,KAKT53C,EAAOC,QAAUkB,OAAO0K,QAAU,SAAgBxK,EAAG+yC,GACnD,IAAIzuC,EAQJ,OAPU,OAANtE,GACFs2C,EAAMD,GAAavyC,EAAS9D,GAC5BsE,EAAS,IAAIgyC,EACbA,EAAMD,GAAa,KAEnB/xC,EAAO8xC,GAAYp2C,GACdsE,EAASiyC,SACMv0C,IAAf+wC,EAA2BzuC,EAASmQ,EAAiBnQ,EAAQyuC,IAGtEvyC,EAAW41C,IAAY,G,oCC/CvB,IAAIvC,EAAI,EAAQ,QACZC,EAA4B,EAAQ,QACpCC,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzBC,EAAiB,EAAQ,QACzB3uC,EAA8B,EAAQ,QACtCtE,EAAW,EAAQ,QACnB6B,EAAkB,EAAQ,QAC1BqxC,EAAU,EAAQ,QAClBrB,EAAY,EAAQ,QACpBsB,EAAgB,EAAQ,QAExBC,EAAoBD,EAAcC,kBAClCC,EAAyBF,EAAcE,uBACvClxC,EAAWN,EAAgB,YAC3ByxC,EAAO,OACPC,EAAS,SACTC,EAAU,UAEVC,EAAa,WAAc,OAAOhzC,MAEtC9C,EAAOC,QAAU,SAAU81C,EAAUC,EAAMC,EAAqBrxC,EAAMsxC,EAASC,EAAQlvC,GACrFkuC,EAA0Bc,EAAqBD,EAAMpxC,GAErD,IAkBIwxC,EAA0Bx8B,EAASy8B,EAlBnCC,EAAqB,SAAUC,GACjC,GAAIA,IAASL,GAAWM,EAAiB,OAAOA,EAChD,IAAKd,GAA0Ba,KAAQE,EAAmB,OAAOA,EAAkBF,GACnF,OAAQA,GACN,KAAKZ,EAAM,OAAO,WAAkB,OAAO,IAAIM,EAAoBnzC,KAAMyzC,IACzE,KAAKX,EAAQ,OAAO,WAAoB,OAAO,IAAIK,EAAoBnzC,KAAMyzC,IAC7E,KAAKV,EAAS,OAAO,WAAqB,OAAO,IAAII,EAAoBnzC,KAAMyzC,IAC/E,OAAO,WAAc,OAAO,IAAIN,EAAoBnzC,QAGpDqB,EAAgB6xC,EAAO,YACvBU,GAAwB,EACxBD,EAAoBV,EAASvzC,UAC7Bm0C,EAAiBF,EAAkBjyC,IAClCiyC,EAAkB,eAClBP,GAAWO,EAAkBP,GAC9BM,GAAmBd,GAA0BiB,GAAkBL,EAAmBJ,GAClFU,EAA4B,SAARZ,GAAkBS,EAAkBI,SAA4BF,EAiCxF,GA7BIC,IACFR,EAA2BhB,EAAewB,EAAkBp1C,KAAK,IAAIu0C,IACjEN,IAAsBt0C,OAAOqB,WAAa4zC,EAAyBxxC,OAChE2wC,GAAWH,EAAegB,KAA8BX,IACvDJ,EACFA,EAAee,EAA0BX,GACa,mBAAtCW,EAAyB5xC,IACzCmC,EAA4ByvC,EAA0B5xC,EAAUsxC,IAIpER,EAAec,EAA0BjyC,GAAe,GAAM,GAC1DoxC,IAASrB,EAAU/vC,GAAiB2xC,KAKxCI,GAAWN,GAAUe,GAAkBA,EAAe/1C,OAASg1C,IACjEc,GAAwB,EACxBF,EAAkB,WAAoB,OAAOG,EAAen1C,KAAKsB,QAI7DyyC,IAAWtuC,GAAWwvC,EAAkBjyC,KAAcgyC,GAC1D7vC,EAA4B8vC,EAAmBjyC,EAAUgyC,GAE3DtC,EAAU8B,GAAQQ,EAGdN,EAMF,GALAt8B,EAAU,CACRqL,OAAQqxB,EAAmBV,GAC3B3mC,KAAMknC,EAASK,EAAkBF,EAAmBX,GACpDkB,QAASP,EAAmBT,IAE1B5uC,EAAQ,IAAKovC,KAAOz8B,GAClB87B,IAA0BgB,GAA2BL,KAAOI,GAC9Dp0C,EAASo0C,EAAmBJ,EAAKz8B,EAAQy8B,SAEtCnB,EAAE,CAAEhuC,OAAQ8uC,EAAMc,OAAO,EAAMnvC,OAAQ+tC,GAA0BgB,GAAyB98B,GAGnG,OAAOA,I,uBCxFT,IAAItZ,EAAS,EAAQ,QACjB85C,EAAyB,EAAQ,QAEjC5G,EAAUlzC,EAAOkzC,QAErBxzC,EAAOC,QAA6B,oBAAZuzC,GAA0B,cAAcpvC,KAAKg2C,EAAuB54C,KAAKgyC,K,qBCLjG,IAAI8B,EAAiB,EAAQ,QAI7BA,EAAetyC,KAAM,QAAQ,I,uBCJ7B,IAAIwH,EAAW,EAAQ,QAEvBxK,EAAOC,QAAU,SAAUmD,GACzB,IAAKoH,EAASpH,GACZ,MAAME,UAAUe,OAAOjB,GAAM,qBAC7B,OAAOA,I,uBCLX,IAAIpB,EAAQ,EAAQ,QAGpBhC,EAAOC,SAAW+B,GAAM,WACtB,OAA+E,GAAxEb,OAAOe,eAAe,GAAI,IAAK,CAAEC,IAAK,WAAc,OAAO,KAAQC,M,qBCJ5EpC,EAAOC,QAAU,SAAUmD,GACzB,MAAqB,kBAAPA,EAAyB,OAAPA,EAA4B,oBAAPA,I,oCCAvD,IAAI8xC,EAAI,EAAQ,QACZ50C,EAAS,EAAQ,QACjBi1C,EAAU,EAAQ,QAClB11C,EAAc,EAAQ,QACtBY,EAAgB,EAAQ,QACxBuB,EAAQ,EAAQ,QAChBhB,EAAM,EAAQ,QACdqK,EAAU,EAAQ,QAClBb,EAAW,EAAQ,QACnBrF,EAAW,EAAQ,QACnBiJ,EAAW,EAAQ,QACnBtN,EAAkB,EAAQ,QAC1BC,EAAc,EAAQ,QACtBhB,EAA2B,EAAQ,QACnCk9C,EAAqB,EAAQ,QAC7B9I,EAAa,EAAQ,QACrBmF,EAA4B,EAAQ,QACpC4D,EAA8B,EAAQ,QACtC3D,EAA8B,EAAQ,QACtC4D,EAAiC,EAAQ,QACzCr9C,EAAuB,EAAQ,QAC/Be,EAA6B,EAAQ,QACrC8F,EAA8B,EAAQ,QACtCtE,EAAW,EAAQ,QACnB9B,EAAS,EAAQ,QACjBgzC,EAAY,EAAQ,QACpB1xC,EAAa,EAAQ,QACrBrB,EAAM,EAAQ,QACd0D,EAAkB,EAAQ,QAC1Bk5C,EAA+B,EAAQ,QACvC17C,EAAwB,EAAQ,QAChC4zC,EAAiB,EAAQ,QACzBd,EAAsB,EAAQ,QAC9B6I,EAAW,EAAQ,QAAgC7mC,QAEnD8mC,EAAS/J,EAAU,UACnBgK,EAAS,SACT7F,EAAY,YACZ8F,EAAet5C,EAAgB,eAC/BywC,EAAmBH,EAAoBnhC,IACvCuhC,EAAmBJ,EAAoBd,UAAU6J,GACjD9D,EAAkBt4C,OAAOu2C,GACzB+F,EAAUn9C,EAAOI,OACjB4K,EAAOhL,EAAOgL,KACdoyC,EAAsBpyC,GAAQA,EAAKC,UACnCrK,EAAiCi8C,EAA+B98C,EAChE02C,EAAuBj3C,EAAqBO,EAC5Cs9C,EAA4BT,EAA4B78C,EACxDo6C,EAA6B55C,EAA2BR,EACxDu9C,EAAar9C,EAAO,WACpBs9C,EAAyBt9C,EAAO,cAChCu9C,EAAyBv9C,EAAO,6BAChCw9C,GAAyBx9C,EAAO,6BAChCy9C,GAAwBz9C,EAAO,OAC/B09C,GAAU39C,EAAO29C,QAEjBC,IAAcD,KAAYA,GAAQvG,KAAeuG,GAAQvG,GAAWyG,UAGpEC,GAAsBv+C,GAAemC,GAAM,WAC7C,OAES,GAFFi7C,EAAmBlG,EAAqB,GAAI,IAAK,CACtD50C,IAAK,WAAc,OAAO40C,EAAqBj0C,KAAM,IAAK,CAAE1C,MAAO,IAAKgC,MACtEA,KACD,SAAUf,EAAGC,EAAG01C,GACnB,IAAIqH,EAA4Bn9C,EAA+Bu4C,EAAiBn4C,GAC5E+8C,UAAkC5E,EAAgBn4C,GACtDy1C,EAAqB11C,EAAGC,EAAG01C,GACvBqH,GAA6Bh9C,IAAMo4C,GACrC1C,EAAqB0C,EAAiBn4C,EAAG+8C,IAEzCtH,EAEAuH,GAAO,SAAU9pC,EAAK+pC,GACxB,IAAIp5B,EAASy4B,EAAWppC,GAAOyoC,EAAmBQ,EAAQ/F,IAO1D,OANA/C,EAAiBxvB,EAAQ,CACvB1L,KAAM8jC,EACN/oC,IAAKA,EACL+pC,YAAaA,IAEV1+C,IAAaslB,EAAOo5B,YAAcA,GAChCp5B,GAGLq5B,GAAW/9C,GAA4C,iBAApBg9C,EAAQz3C,SAAuB,SAAU5C,GAC9E,MAAoB,iBAANA,GACZ,SAAUA,GACZ,OAAOjC,OAAOiC,aAAeq6C,GAG3BgB,GAAkB,SAAwBp9C,EAAGC,EAAG01C,GAC9C31C,IAAMo4C,GAAiBgF,GAAgBZ,EAAwBv8C,EAAG01C,GACtE7xC,EAAS9D,GACT,IAAIlB,EAAMY,EAAYO,GAAG,GAEzB,OADA6D,EAAS6xC,GACLh2C,EAAI48C,EAAYz9C,IACb62C,EAAWlmC,YAIV9P,EAAIK,EAAGi8C,IAAWj8C,EAAEi8C,GAAQn9C,KAAMkB,EAAEi8C,GAAQn9C,IAAO,GACvD62C,EAAaiG,EAAmBjG,EAAY,CAAElmC,WAAY/Q,EAAyB,GAAG,OAJjFiB,EAAIK,EAAGi8C,IAASvG,EAAqB11C,EAAGi8C,EAAQv9C,EAAyB,EAAG,KACjFsB,EAAEi8C,GAAQn9C,IAAO,GAIVi+C,GAAoB/8C,EAAGlB,EAAK62C,IAC9BD,EAAqB11C,EAAGlB,EAAK62C,IAGpC0H,GAAoB,SAA0Br9C,EAAG+yC,GACnDjvC,EAAS9D,GACT,IAAIs9C,EAAa79C,EAAgBszC,GAC7BnlC,EAAOklC,EAAWwK,GAAY78C,OAAO88C,GAAuBD,IAIhE,OAHAtB,EAASpuC,GAAM,SAAU9O,GAClBN,IAAeg/C,GAAsBr9C,KAAKm9C,EAAYx+C,IAAMs+C,GAAgBp9C,EAAGlB,EAAKw+C,EAAWx+C,OAE/FkB,GAGLy9C,GAAU,SAAgBz9C,EAAG+yC,GAC/B,YAAsB/wC,IAAf+wC,EAA2B6I,EAAmB57C,GAAKq9C,GAAkBzB,EAAmB57C,GAAI+yC,IAGjGyK,GAAwB,SAA8BjE,GACxD,IAAIt5C,EAAIP,EAAY65C,GAAG,GACnB9pC,EAAa2pC,EAA2Bj5C,KAAKsB,KAAMxB,GACvD,QAAIwB,OAAS22C,GAAmBz4C,EAAI48C,EAAYt8C,KAAON,EAAI68C,EAAwBv8C,QAC5EwP,IAAe9P,EAAI8B,KAAMxB,KAAON,EAAI48C,EAAYt8C,IAAMN,EAAI8B,KAAMw6C,IAAWx6C,KAAKw6C,GAAQh8C,KAAKwP,IAGlGiuC,GAA4B,SAAkC19C,EAAGC,GACnE,IAAI8B,EAAKtC,EAAgBO,GACrBlB,EAAMY,EAAYO,GAAG,GACzB,GAAI8B,IAAOq2C,IAAmBz4C,EAAI48C,EAAYz9C,IAASa,EAAI68C,EAAwB19C,GAAnF,CACA,IAAIkH,EAAanG,EAA+BkC,EAAIjD,GAIpD,OAHIkH,IAAcrG,EAAI48C,EAAYz9C,IAAUa,EAAIoC,EAAIk6C,IAAWl6C,EAAGk6C,GAAQn9C,KACxEkH,EAAWyJ,YAAa,GAEnBzJ,IAGL23C,GAAuB,SAA6B39C,GACtD,IAAI49C,EAAQtB,EAA0B78C,EAAgBO,IAClDsE,EAAS,GAIb,OAHA03C,EAAS4B,GAAO,SAAU9+C,GACnBa,EAAI48C,EAAYz9C,IAASa,EAAIa,EAAY1B,IAAMwF,EAAOkO,KAAK1T,MAE3DwF,GAGLi5C,GAAyB,SAA+Bv9C,GAC1D,IAAI69C,EAAsB79C,IAAMo4C,EAC5BwF,EAAQtB,EAA0BuB,EAAsBrB,EAAyB/8C,EAAgBO,IACjGsE,EAAS,GAMb,OALA03C,EAAS4B,GAAO,SAAU9+C,IACpBa,EAAI48C,EAAYz9C,IAAU++C,IAAuBl+C,EAAIy4C,EAAiBt5C,IACxEwF,EAAOkO,KAAK+pC,EAAWz9C,OAGpBwF,GAKJlF,IACHg9C,EAAU,WACR,GAAI36C,gBAAgB26C,EAAS,MAAMn6C,UAAU,+BAC7C,IAAIi7C,EAAez6C,UAAUJ,aAA2BL,IAAjBS,UAAU,GAA+BO,OAAOP,UAAU,SAA7BT,EAChEmR,EAAMhU,EAAI+9C,GACVlmC,EAAS,SAAUjY,GACjB0C,OAAS22C,GAAiBphC,EAAO7W,KAAKq8C,EAAwBz9C,GAC9DY,EAAI8B,KAAMw6C,IAAWt8C,EAAI8B,KAAKw6C,GAAS9oC,KAAM1R,KAAKw6C,GAAQ9oC,IAAO,GACrE4pC,GAAoBt7C,KAAM0R,EAAKzU,EAAyB,EAAGK,KAG7D,OADIP,GAAeq+C,IAAYE,GAAoB3E,EAAiBjlC,EAAK,CAAEzM,cAAc,EAAMsL,IAAKgF,IAC7FimC,GAAK9pC,EAAK+pC,IAGnBl8C,EAASo7C,EAAQ/F,GAAY,YAAY,WACvC,OAAO9C,EAAiB9xC,MAAM0R,OAGhC3T,EAA2BR,EAAIw+C,GAC/B/+C,EAAqBO,EAAIo+C,GACzBtB,EAA+B98C,EAAI0+C,GACnCzF,EAA0Bj5C,EAAI68C,EAA4B78C,EAAI2+C,GAC9DzF,EAA4Bl5C,EAAIu+C,GAE5B/+C,IAEFk3C,EAAqB0G,EAAQ/F,GAAY,cAAe,CACtD3vC,cAAc,EACd5F,IAAK,WACH,OAAOyyC,EAAiB9xC,MAAMy7C,eAG7BhJ,GACHlzC,EAASo3C,EAAiB,uBAAwBoF,GAAuB,CAAEtE,QAAQ,KAIvF6C,EAA6B/8C,EAAI,SAAUO,GACzC,OAAO09C,GAAKp6C,EAAgBtD,GAAOA,KAIvCs0C,EAAE,CAAE50C,QAAQ,EAAMg+C,MAAM,EAAM32C,QAASlH,EAAemH,MAAOnH,GAAiB,CAC5EC,OAAQ+8C,IAGVJ,EAASlJ,EAAW6J,KAAwB,SAAUp9C,GACpDc,EAAsBd,MAGxBs0C,EAAE,CAAEhuC,OAAQq2C,EAAQ91C,MAAM,EAAME,QAASlH,GAAiB,CAGxD,IAAO,SAAUN,GACf,IAAI20C,EAASzwC,OAAOlE,GACpB,GAAIa,EAAI88C,EAAwBhJ,GAAS,OAAOgJ,EAAuBhJ,GACvE,IAAI3vB,EAASs4B,EAAQ3I,GAGrB,OAFAgJ,EAAuBhJ,GAAU3vB,EACjC44B,GAAuB54B,GAAU2vB,EAC1B3vB,GAITg6B,OAAQ,SAAgBC,GACtB,IAAKZ,GAASY,GAAM,MAAM97C,UAAU87C,EAAM,oBAC1C,GAAIp+C,EAAI+8C,GAAwBqB,GAAM,OAAOrB,GAAuBqB,IAEtEC,UAAW,WAAcnB,IAAa,GACtCoB,UAAW,WAAcpB,IAAa,KAGxChJ,EAAE,CAAEhuC,OAAQ,SAAUO,MAAM,EAAME,QAASlH,EAAemH,MAAO/H,GAAe,CAG9EgM,OAAQizC,GAGR58C,eAAgBu8C,GAGhB3oC,iBAAkB4oC,GAGlBt9C,yBAA0B29C,KAG5B7J,EAAE,CAAEhuC,OAAQ,SAAUO,MAAM,EAAME,QAASlH,GAAiB,CAG1DsB,oBAAqBi9C,GAGrB95C,sBAAuB05C,KAKzB1J,EAAE,CAAEhuC,OAAQ,SAAUO,MAAM,EAAME,OAAQ3F,GAAM,WAAcu3C,EAA4Bl5C,EAAE,OAAU,CACpG6E,sBAAuB,SAA+B9B,GACpD,OAAOm2C,EAA4Bl5C,EAAE+N,EAAShL,OAMlDkI,GAAQ4pC,EAAE,CAAEhuC,OAAQ,OAAQO,MAAM,EAAME,QAASlH,GAAiBuB,GAAM,WACtE,IAAImjB,EAASs4B,IAEb,MAAwC,UAAjCC,EAAoB,CAACv4B,KAEe,MAAtCu4B,EAAoB,CAAEt7C,EAAG+iB,KAEc,MAAvCu4B,EAAoBv8C,OAAOgkB,QAC5B,CACJ5Z,UAAW,SAAmBnI,GAC5B,IAEIm8C,EAAUC,EAFV7oC,EAAO,CAACvT,GACR8C,EAAQ,EAEZ,MAAOpC,UAAUJ,OAASwC,EAAOyQ,EAAK9C,KAAK/P,UAAUoC,MAErD,GADAs5C,EAAYD,EAAW5oC,EAAK,IACvBnM,EAAS+0C,SAAoBl8C,IAAPD,KAAoBo7C,GAASp7C,GAMxD,OALKiI,EAAQk0C,KAAWA,EAAW,SAAUp/C,EAAKC,GAEhD,GADwB,mBAAbo/C,IAAyBp/C,EAAQo/C,EAAUh+C,KAAKsB,KAAM3C,EAAKC,KACjEo+C,GAASp+C,GAAQ,OAAOA,IAE/BuW,EAAK,GAAK4oC,EACH7B,EAAoB75C,MAAMyH,EAAMqL,MAMtC8mC,EAAQ/F,GAAW8F,IACtB72C,EAA4B82C,EAAQ/F,GAAY8F,EAAcC,EAAQ/F,GAAWqD,SAInFzF,EAAemI,EAASF,GAExB17C,EAAWy7C,IAAU,G,uBC5SrB,IAAI57C,EAAwB,EAAQ,QAIpCA,EAAsB,gB,uBCJtB,IAAIZ,EAAkB,EAAQ,QAC1B68C,EAA4B,EAAQ,QAA8Ct9C,EAElFiE,EAAW,GAAGA,SAEdm7C,EAA+B,iBAAVluC,QAAsBA,QAAUpQ,OAAOY,oBAC5DZ,OAAOY,oBAAoBwP,QAAU,GAErCmuC,EAAiB,SAAUt8C,GAC7B,IACE,OAAOu6C,EAA0Bv6C,GACjC,MAAO7B,GACP,OAAOk+C,EAAYryC,UAKvBpN,EAAOC,QAAQI,EAAI,SAA6B+C,GAC9C,OAAOq8C,GAAoC,mBAArBn7C,EAAS9C,KAAK4B,GAChCs8C,EAAet8C,GACfu6C,EAA0B78C,EAAgBsC,M,uBCpBhD,IAAIu8C,EAAa,EAAQ,QACrBz7C,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAEhC07C,EAAuE,aAAnDD,EAAW,WAAc,OAAO77C,UAArB,IAG/B+7C,EAAS,SAAUz8C,EAAIjD,GACzB,IACE,OAAOiD,EAAGjD,GACV,MAAOoB,MAIXvB,EAAOC,QAAU,SAAUmD,GACzB,IAAI/B,EAAGmT,EAAK7O,EACZ,YAActC,IAAPD,EAAmB,YAAqB,OAAPA,EAAc,OAEM,iBAAhDoR,EAAMqrC,EAAOx+C,EAAIF,OAAOiC,GAAKe,IAA8BqQ,EAEnEorC,EAAoBD,EAAWt+C,GAEH,WAA3BsE,EAASg6C,EAAWt+C,KAAsC,mBAAZA,EAAEy+C,OAAuB,YAAcn6C,I,uBCvB5F,IAAIrF,EAAS,EAAQ,QACjBqG,EAA8B,EAAQ,QAE1C3G,EAAOC,QAAU,SAAUE,EAAKC,GAC9B,IACEuG,EAA4BrG,EAAQH,EAAKC,GACzC,MAAOmB,GACPjB,EAAOH,GAAOC,EACd,OAAOA,I,qBCRX,IAAIsB,EAAwB,EAAQ,QAIpCA,EAAsB,uB,qBCJtB,IAAI+R,EAAK,EACLuhC,EAAUhyC,KAAKiyC,SAEnBj1C,EAAOC,QAAU,SAAUE,GACzB,MAAO,UAAYkE,YAAehB,IAARlD,EAAoB,GAAKA,GAAO,QAAUsT,EAAKuhC,GAAS1wC,SAAS,M,kCCH7F,IAAIxD,EAAkB,EAAQ,QAC1Bi/C,EAAmB,EAAQ,QAC3B7L,EAAY,EAAQ,QACpBM,EAAsB,EAAQ,QAC9BC,EAAiB,EAAQ,QAEzBuL,EAAiB,iBACjBrL,EAAmBH,EAAoBnhC,IACvCuhC,EAAmBJ,EAAoBd,UAAUsM,GAYrDhgD,EAAOC,QAAUw0C,EAAe3vC,MAAO,SAAS,SAAU+vC,EAAUoL,GAClEtL,EAAiB7xC,KAAM,CACrB2W,KAAMumC,EACN94C,OAAQpG,EAAgB+zC,GACxB3uC,MAAO,EACP+5C,KAAMA,OAIP,WACD,IAAIrM,EAAQgB,EAAiB9xC,MACzBoE,EAAS0sC,EAAM1sC,OACf+4C,EAAOrM,EAAMqM,KACb/5C,EAAQ0tC,EAAM1tC,QAClB,OAAKgB,GAAUhB,GAASgB,EAAOxD,QAC7BkwC,EAAM1sC,YAAS7D,EACR,CAAEjD,WAAOiD,EAAWwB,MAAM,IAEvB,QAARo7C,EAAuB,CAAE7/C,MAAO8F,EAAOrB,MAAM,GACrC,UAARo7C,EAAyB,CAAE7/C,MAAO8G,EAAOhB,GAAQrB,MAAM,GACpD,CAAEzE,MAAO,CAAC8F,EAAOgB,EAAOhB,IAASrB,MAAM,KAC7C,UAKHqvC,EAAUgM,UAAYhM,EAAUpvC,MAGhCi7C,EAAiB,QACjBA,EAAiB,UACjBA,EAAiB,Y,qBCpDjB,IAAIlgD,EAAc,EAAQ,QACtBC,EAAuB,EAAQ,QAC/BC,EAA2B,EAAQ,QAEvCC,EAAOC,QAAUJ,EAAc,SAAUK,EAAQC,EAAKC,GACpD,OAAON,EAAqBO,EAAEH,EAAQC,EAAKJ,EAAyB,EAAGK,KACrE,SAAUF,EAAQC,EAAKC,GAEzB,OADAF,EAAOC,GAAOC,EACPF,I,uBCRT,IAAI8B,EAAQ,EAAQ,QAEhBm+C,EAAc,kBAEdr5C,EAAW,SAAUs5C,EAASC,GAChC,IAAIjgD,EAAQqU,EAAKgyB,EAAU2Z,IAC3B,OAAOhgD,GAASkgD,GACZlgD,GAASmgD,IACW,mBAAbF,EAA0Br+C,EAAMq+C,KACrCA,IAGJ5Z,EAAY3/B,EAAS2/B,UAAY,SAAUqO,GAC7C,OAAOzwC,OAAOywC,GAAQ/nC,QAAQozC,EAAa,KAAKl0C,eAG9CwI,EAAO3N,EAAS2N,KAAO,GACvB8rC,EAASz5C,EAASy5C,OAAS,IAC3BD,EAAWx5C,EAASw5C,SAAW,IAEnCtgD,EAAOC,QAAU6G,G,uBCpBjB,IAAIxG,EAAS,EAAQ,QACjB85C,EAAyB,EAAQ,QAEjC5G,EAAUlzC,EAAOkzC,QAErBxzC,EAAOC,QAA6B,oBAAZuzC,GAA0B,cAAcpvC,KAAKg2C,EAAuB54C,KAAKgyC,K,qBCJjG,IAAI9xC,EAAwB,EAAQ,QAEpCA,EAAsB,e,uBCHtB,IAAIA,EAAwB,EAAQ,QAIpCA,EAAsB,W,qBCJtB,IAAI6C,EAAO,EAAQ,QACfjE,EAAS,EAAQ,QAEjBiD,EAAY,SAAUi9C,GACxB,MAA0B,mBAAZA,EAAyBA,OAAWn9C,GAGpDrD,EAAOC,QAAU,SAAUi7B,EAAWzkB,GACpC,OAAO3S,UAAUJ,OAAS,EAAIH,EAAUgB,EAAK22B,KAAe33B,EAAUjD,EAAO46B,IACzE32B,EAAK22B,IAAc32B,EAAK22B,GAAWzkB,IAAWnW,EAAO46B,IAAc56B,EAAO46B,GAAWzkB,K,uBCT3F,IAAI/U,EAAwB,EAAQ,QAIpCA,EAAsB,Y,uBCJtB,IAAIyD,EAAW,EAAQ,QAGvBnF,EAAOC,QAAU,SAAU+F,EAAUxC,EAAIpD,EAAOy1C,GAC9C,IACE,OAAOA,EAAUryC,EAAG2B,EAAS/E,GAAO,GAAIA,EAAM,IAAMoD,EAAGpD,GAEvD,MAAOmB,GACP,IAAIk/C,EAAez6C,EAAS,UAE5B,WADqB3C,IAAjBo9C,GAA4Bt7C,EAASs7C,EAAaj/C,KAAKwE,IACrDzE,K,uBCVV,IAAI1B,EAAc,EAAQ,QACtBoB,EAAiB,EAAQ,QACzBkE,EAAW,EAAQ,QACnBpE,EAAc,EAAQ,QAEtBg2C,EAAuB51C,OAAOe,eAIlCjC,EAAQI,EAAIR,EAAck3C,EAAuB,SAAwB11C,EAAGC,EAAG01C,GAI7E,GAHA7xC,EAAS9D,GACTC,EAAIP,EAAYO,GAAG,GACnB6D,EAAS6xC,GACL/1C,EAAgB,IAClB,OAAO81C,EAAqB11C,EAAGC,EAAG01C,GAClC,MAAOz1C,IACT,GAAI,QAASy1C,GAAc,QAASA,EAAY,MAAM1zC,UAAU,2BAEhE,MADI,UAAW0zC,IAAY31C,EAAEC,GAAK01C,EAAW52C,OACtCiB,I,uBClBT,IAAIkD,EAAO,EAAQ,QACfvD,EAAM,EAAQ,QACdo8C,EAA+B,EAAQ,QACvCl7C,EAAiB,EAAQ,QAAuC7B,EAEpEL,EAAOC,QAAU,SAAU+1C,GACzB,IAAIt1C,EAAS6D,EAAK7D,SAAW6D,EAAK7D,OAAS,IACtCM,EAAIN,EAAQs1C,IAAO9zC,EAAexB,EAAQs1C,EAAM,CACnD51C,MAAOg9C,EAA6B/8C,EAAE21C,O,uBCR1C,IAAIh0C,EAAQ,EAAQ,QAChBkC,EAAkB,EAAQ,QAC1Bw8C,EAAa,EAAQ,QAErB74C,EAAU3D,EAAgB,WAE9BlE,EAAOC,QAAU,SAAU0gD,GAIzB,OAAOD,GAAc,KAAO1+C,GAAM,WAChC,IAAI4+C,EAAQ,GACR/rB,EAAc+rB,EAAM/rB,YAAc,GAItC,OAHAA,EAAYhtB,GAAW,WACrB,MAAO,CAAEg5C,IAAK,IAE2B,IAApCD,EAAMD,GAAajlC,SAASmlC,S,qBCfvC7gD,EAAOC,QAAU,CACf,cACA,iBACA,gBACA,uBACA,iBACA,WACA,Y,uBCRF,IAAIM,EAAS,EAAQ,QAErBP,EAAOC,QAAUM,EAAO,4BAA6BsN,SAASvJ,W,oCCD9D,IAAImxC,EAAoB,EAAQ,QAA+BA,kBAC3D5pC,EAAS,EAAQ,QACjB9L,EAA2B,EAAQ,QACnCu1C,EAAiB,EAAQ,QACzBpB,EAAY,EAAQ,QAEpB4B,EAAa,WAAc,OAAOhzC,MAEtC9C,EAAOC,QAAU,SAAUg2C,EAAqBD,EAAMpxC,GACpD,IAAIT,EAAgB6xC,EAAO,YAI3B,OAHAC,EAAoBzzC,UAAYqJ,EAAO4pC,EAAmB,CAAE7wC,KAAM7E,EAAyB,EAAG6E,KAC9F0wC,EAAeW,EAAqB9xC,GAAe,GAAO,GAC1D+vC,EAAU/vC,GAAiB2xC,EACpBG,I,qBCdT,IAAIt0C,EAAqB,EAAQ,QAC7BC,EAAc,EAAQ,QAI1B5B,EAAOC,QAAUkB,OAAO8N,MAAQ,SAAc5N,GAC5C,OAAOM,EAAmBN,EAAGO,K,qBCN/B,IAAII,EAAQ,EAAQ,QAEhBm+C,EAAc,kBAEdr5C,EAAW,SAAUs5C,EAASC,GAChC,IAAIjgD,EAAQqU,EAAKgyB,EAAU2Z,IAC3B,OAAOhgD,GAASkgD,GACZlgD,GAASmgD,IACW,mBAAbF,EAA0Br+C,EAAMq+C,KACrCA,IAGJ5Z,EAAY3/B,EAAS2/B,UAAY,SAAUqO,GAC7C,OAAOzwC,OAAOywC,GAAQ/nC,QAAQozC,EAAa,KAAKl0C,eAG9CwI,EAAO3N,EAAS2N,KAAO,GACvB8rC,EAASz5C,EAASy5C,OAAS,IAC3BD,EAAWx5C,EAASw5C,SAAW,IAEnCtgD,EAAOC,QAAU6G,G,mBCpBjB7G,EAAQI,EAAIc,OAAO+D,uB,qBCCnB,IAAIw0C,EAAgB,EAAQ,QACxBV,EAAyB,EAAQ,QAErCh5C,EAAOC,QAAU,SAAUmD,GACzB,OAAOs2C,EAAcV,EAAuB51C,M,kCCJ9C,IAAI9C,EAAS,EAAQ,QACjBc,EAA2B,EAAQ,QAAmDf,EACtFyG,EAAW,EAAQ,QACnBvC,EAAO,EAAQ,QACfe,EAAO,EAAQ,QACfqB,EAA8B,EAAQ,QACtC3F,EAAM,EAAQ,QAEd8/C,EAAkB,SAAUC,GAC9B,IAAIC,EAAU,SAAU5+C,EAAGuB,EAAGC,GAC5B,GAAId,gBAAgBi+C,EAAmB,CACrC,OAAQj9C,UAAUJ,QAChB,KAAK,EAAG,OAAO,IAAIq9C,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAkB3+C,GACrC,KAAK,EAAG,OAAO,IAAI2+C,EAAkB3+C,EAAGuB,GACxC,OAAO,IAAIo9C,EAAkB3+C,EAAGuB,EAAGC,GACrC,OAAOm9C,EAAkBl9C,MAAMf,KAAMgB,YAGzC,OADAk9C,EAAQx+C,UAAYu+C,EAAkBv+C,UAC/Bw+C,GAiBThhD,EAAOC,QAAU,SAAU8G,EAASC,GAClC,IAUIC,EAAQg6C,EAAYC,EACpB/gD,EAAKiH,EAAgBD,EAAgBg6C,EAAgBC,EAAgB/5C,EAXrEC,EAASP,EAAQG,OACjBK,EAASR,EAAQzG,OACjBkH,EAAST,EAAQU,KACjB45C,EAAQt6C,EAAQ+vC,MAEhBwK,EAAe/5C,EAASjH,EAASkH,EAASlH,EAAOgH,IAAWhH,EAAOgH,IAAW,IAAI9E,UAElF0E,EAASK,EAAShD,EAAOA,EAAK+C,KAAY/C,EAAK+C,GAAU,IACzDi6C,EAAkBr6C,EAAO1E,UAK7B,IAAKrC,KAAO6G,EACVC,EAASH,EAASS,EAASpH,EAAMmH,GAAUE,EAAS,IAAM,KAAOrH,EAAK4G,EAAQY,QAE9Es5C,GAAch6C,GAAUq6C,GAAgBtgD,EAAIsgD,EAAcnhD,GAE1DgH,EAAiBD,EAAO/G,GAEpB8gD,IAAgBl6C,EAAQW,aAC1BL,EAAajG,EAAyBkgD,EAAcnhD,GACpDghD,EAAiB95C,GAAcA,EAAWjH,OACrC+gD,EAAiBG,EAAanhD,IAGrCiH,EAAkB65C,GAAcE,EAAkBA,EAAiBn6C,EAAO7G,GAEtE8gD,UAAqB95C,WAA0BC,IAGnBg6C,EAA5Br6C,EAAQzB,MAAQ27C,EAA6B37C,EAAK8B,EAAgB9G,GAE7DyG,EAAQu3C,MAAQ2C,EAA6BH,EAAgB15C,GAE7Di6C,GAAkC,mBAAlBj6C,EAA+C9B,EAAKuI,SAASrM,KAAM4F,GAEtEA,GAGlBL,EAAQa,MAASR,GAAkBA,EAAeQ,MAAUT,GAAkBA,EAAeS,OAC/FjB,EAA4By6C,EAAgB,QAAQ,GAGtDl6C,EAAO/G,GAAOihD,EAEVC,IACFH,EAAoB55C,EAAS,YACxBtG,EAAIuD,EAAM28C,IACbv6C,EAA4BpC,EAAM28C,EAAmB,IAGvD38C,EAAK28C,GAAmB/gD,GAAOiH,EAE3BL,EAAQy6C,MAAQD,IAAoBA,EAAgBphD,IACtDwG,EAA4B46C,EAAiBphD,EAAKiH,O,mBC7F1D,IAAIrE,EAAOC,KAAKD,KACZE,EAAQD,KAAKC,MAIjBjD,EAAOC,QAAU,SAAUiD,GACzB,OAAOC,MAAMD,GAAYA,GAAY,GAAKA,EAAW,EAAID,EAAQF,GAAMG,K,kCCLzE,IAAIgyC,EAAI,EAAQ,QACZK,EAAU,EAAQ,QAClBkM,EAAgB,EAAQ,QACxBz9C,EAAa,EAAQ,QACrB09C,EAAqB,EAAQ,QAC7BC,EAAiB,EAAQ,QACzBt/C,EAAW,EAAQ,QAIvB6yC,EAAE,CAAEhuC,OAAQ,UAAW4vC,OAAO,EAAM0K,MAAM,GAAQ,CAChD,QAAW,SAAUI,GACnB,IAAI1K,EAAIwK,EAAmB5+C,KAAMkB,EAAW,YACxC69C,EAAiC,mBAAbD,EACxB,OAAO9+C,KAAKqI,KACV02C,EAAa,SAAUC,GACrB,OAAOH,EAAezK,EAAG0K,KAAaz2C,MAAK,WAAc,OAAO22C,MAC9DF,EACJC,EAAa,SAAU9yC,GACrB,OAAO4yC,EAAezK,EAAG0K,KAAaz2C,MAAK,WAAc,MAAM4D,MAC7D6yC,MAMLrM,GAAmC,mBAAjBkM,GAAgCA,EAAcj/C,UAAU,YAC7EH,EAASo/C,EAAcj/C,UAAW,UAAWwB,EAAW,WAAWxB,UAAU,a,qBC5B/E,IAAId,EAAwB,EAAQ,QAIpCA,EAAsB,gB,qBCJtB,IAAInB,EAAS,EAAQ,QAErBP,EAAOC,QAAUM,EAAO,4BAA6BsN,SAASvJ,W,qBCF9DtE,EAAOC,QAAU,EAAQ,S,kCCCzB,IAaIw1C,EAAmBsM,EAAmCC,EAbtD5M,EAAiB,EAAQ,QACzBzuC,EAA8B,EAAQ,QACtC3F,EAAM,EAAQ,QACdkD,EAAkB,EAAQ,QAC1BqxC,EAAU,EAAQ,QAElB/wC,EAAWN,EAAgB,YAC3BwxC,GAAyB,EAEzBI,EAAa,WAAc,OAAOhzC,MAMlC,GAAGmM,OACL+yC,EAAgB,GAAG/yC,OAEb,SAAU+yC,GAEdD,EAAoC3M,EAAeA,EAAe4M,IAC9DD,IAAsC5gD,OAAOqB,YAAWizC,EAAoBsM,IAHlDrM,GAAyB,QAOlCryC,GAArBoyC,IAAgCA,EAAoB,IAGnDF,GAAYv0C,EAAIy0C,EAAmBjxC,IACtCmC,EAA4B8uC,EAAmBjxC,EAAUsxC,GAG3D91C,EAAOC,QAAU,CACfw1C,kBAAmBA,EACnBC,uBAAwBA,I,qBCnC1B,IAAI71C,EAAc,EAAQ,QACtBqC,EAAiB,EAAQ,QAAuC7B,EAEhE4hD,EAAoBp0C,SAASrL,UAC7B0/C,EAA4BD,EAAkB39C,SAC9C69C,EAAS,wBACTnM,EAAO,QAIPn2C,GAAiBm2C,KAAQiM,GAC3B//C,EAAe+/C,EAAmBjM,EAAM,CACtCjuC,cAAc,EACd5F,IAAK,WACH,IACE,OAAO+/C,EAA0B1gD,KAAKsB,MAAMsP,MAAM+vC,GAAQ,GAC1D,MAAO5gD,GACP,MAAO,Q,qBCjBf,IAAIhB,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QAEdyO,EAAO1O,EAAO,QAElBP,EAAOC,QAAU,SAAUE,GACzB,OAAO8O,EAAK9O,KAAS8O,EAAK9O,GAAOK,EAAIL,M,qBCNvC,IAAIa,EAAM,EAAQ,QACdF,EAAkB,EAAQ,QAC1BwL,EAAU,EAAQ,QAA+BA,QACjDzK,EAAa,EAAQ,QAEzB7B,EAAOC,QAAU,SAAUC,EAAQ++C,GACjC,IAGI9+C,EAHAkB,EAAIP,EAAgBZ,GACpB8L,EAAI,EACJrG,EAAS,GAEb,IAAKxF,KAAOkB,GAAIL,EAAIa,EAAY1B,IAAQa,EAAIK,EAAGlB,IAAQwF,EAAOkO,KAAK1T,GAEnE,MAAO8+C,EAAMv7C,OAASsI,EAAOhL,EAAIK,EAAGlB,EAAM8+C,EAAMjzC,SAC7CM,EAAQ3G,EAAQxF,IAAQwF,EAAOkO,KAAK1T,IAEvC,OAAOwF,I,qBCfT,IAAI3B,EAAa,EAAQ,QAEzBhE,EAAOC,QAAU+D,EAAW,YAAa,cAAgB,I,qBCFzD,IAcIo+C,EAAOC,EAAMzhC,EAAM3M,EAAQquC,EAAQtsC,EAAMusC,EAASp3C,EAdlD7K,EAAS,EAAQ,QACjBc,EAA2B,EAAQ,QAAmDf,EACtF4D,EAAU,EAAQ,QAClBu+C,EAAY,EAAQ,QAAqBnvC,IACzCvB,EAAY,EAAQ,QAEpB4L,EAAmBpd,EAAOod,kBAAoBpd,EAAOmiD,uBACrDlQ,EAAUjyC,EAAOiyC,QACjBj1B,EAAUhd,EAAOgd,QACjBolC,EAA8B,WAApBz+C,EAAQsuC,GAElBoQ,EAA2BvhD,EAAyBd,EAAQ,kBAC5DsiD,EAAiBD,GAA4BA,EAAyBviD,MAKrEwiD,IACHR,EAAQ,WACN,IAAIj5C,EAAQ3F,EACRk/C,IAAYv5C,EAASopC,EAAQsQ,SAAS15C,EAAO25C,OACjD,MAAOT,EAAM,CACX7+C,EAAK6+C,EAAK7+C,GACV6+C,EAAOA,EAAKz9C,KACZ,IACEpB,IACA,MAAOjC,GAGP,MAFI8gD,EAAMpuC,IACL2M,OAAOvd,EACN9B,GAERqf,OAAOvd,EACL8F,GAAQA,EAAOohC,SAIjBmY,EACFzuC,EAAS,WACPs+B,EAAQr0B,SAASkkC,IAGV1kC,IAAqB,mCAAmCtZ,KAAK0N,IACtEwwC,GAAS,EACTtsC,EAAO+H,SAASC,eAAe,IAC/B,IAAIN,EAAiB0kC,GAAOxqC,QAAQ5B,EAAM,CAAEiI,eAAe,IAC3DhK,EAAS,WACP+B,EAAKvB,KAAO6tC,GAAUA,IAGfhlC,GAAWA,EAAQE,SAE5B+kC,EAAUjlC,EAAQE,aAAQna,GAC1B8H,EAAOo3C,EAAQp3C,KACf8I,EAAS,WACP9I,EAAK3J,KAAK+gD,EAASH,KASrBnuC,EAAS,WAEPuuC,EAAUhhD,KAAKlB,EAAQ8hD,KAK7BpiD,EAAOC,QAAU2iD,GAAkB,SAAUp/C,GAC3C,IAAIu/C,EAAO,CAAEv/C,GAAIA,EAAIoB,UAAMvB,GACvBud,IAAMA,EAAKhc,KAAOm+C,GACjBV,IACHA,EAAOU,EACP9uC,KACA2M,EAAOmiC,I,qBC5EX/iD,EAAOC,QAAU,EAAQ,QAEzB,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,QACR,EAAQ,S,qBCNR,IAAIK,EAAS,EAAQ,QACjBC,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QACdC,EAAgB,EAAQ,QAExBC,EAASJ,EAAOI,OAChBC,EAAQJ,EAAO,OAEnBP,EAAOC,QAAU,SAAUW,GACzB,OAAOD,EAAMC,KAAUD,EAAMC,GAAQH,GAAiBC,EAAOE,KACvDH,EAAgBC,EAASF,GAAK,UAAYI,M,kCCTlD,IAaI60C,EAAmBsM,EAAmCC,EAbtD5M,EAAiB,EAAQ,QACzBzuC,EAA8B,EAAQ,QACtC3F,EAAM,EAAQ,QACdkD,EAAkB,EAAQ,QAC1BqxC,EAAU,EAAQ,QAElB/wC,EAAWN,EAAgB,YAC3BwxC,GAAyB,EAEzBI,EAAa,WAAc,OAAOhzC,MAMlC,GAAGmM,OACL+yC,EAAgB,GAAG/yC,OAEb,SAAU+yC,GAEdD,EAAoC3M,EAAeA,EAAe4M,IAC9DD,IAAsC5gD,OAAOqB,YAAWizC,EAAoBsM,IAHlDrM,GAAyB,QAOlCryC,GAArBoyC,IAAgCA,EAAoB,IAGnDF,GAAYv0C,EAAIy0C,EAAmBjxC,IACtCmC,EAA4B8uC,EAAmBjxC,EAAUsxC,GAG3D91C,EAAOC,QAAU,CACfw1C,kBAAmBA,EACnBC,uBAAwBA,I,kCCnC1B,gFAGA,SAASsN,EAASv4C,GAAiU,OAA7Ou4C,EAAtD,oBAAZ,KAAsD,kBAArB,IAA4C,SAAkBv4C,GAAO,cAAcA,GAA4B,SAAkBA,GAAO,OAAOA,GAA0B,oBAAZ,KAA0BA,EAAIoqB,cAAgB,KAAWpqB,IAAQ,IAAQjI,UAAY,gBAAkBiI,GAAiBu4C,EAASv4C,GAEpV,SAASw4C,EAAQx4C,GAW9B,OATEw4C,EADqB,oBAAZ,KAAyD,WAA/BD,EAAS,KAClC,SAAiBv4C,GACzB,OAAOu4C,EAASv4C,IAGR,SAAiBA,GACzB,OAAOA,GAA0B,oBAAZ,KAA0BA,EAAIoqB,cAAgB,KAAWpqB,IAAQ,IAAQjI,UAAY,SAAWwgD,EAASv4C,IAI3Hw4C,EAAQx4C,K,qBChBjB,IAAID,EAAW,EAAQ,QAMvBxK,EAAOC,QAAU,SAAU46C,EAAOC,GAChC,IAAKtwC,EAASqwC,GAAQ,OAAOA,EAC7B,IAAIr3C,EAAIsH,EACR,GAAIgwC,GAAoD,mBAAxBt3C,EAAKq3C,EAAMv2C,YAA4BkG,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EAC9G,GAAmC,mBAAvBtH,EAAKq3C,EAAME,WAA2BvwC,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EACzF,IAAKgwC,GAAoD,mBAAxBt3C,EAAKq3C,EAAMv2C,YAA4BkG,EAASM,EAAMtH,EAAGhC,KAAKq5C,IAAS,OAAO/vC,EAC/G,MAAMxH,UAAU,6C,qBCZlB,IAAItB,EAAQ,EAAQ,QAGpBhC,EAAOC,SAAW+B,GAAM,WACtB,OAA+E,GAAxEb,OAAOe,eAAe,GAAI,IAAK,CAAEC,IAAK,WAAc,OAAO,KAAQC,M,qBCJ5E,IAAIvC,EAAc,EAAQ,QACtBC,EAAuB,EAAQ,QAC/BqF,EAAW,EAAQ,QACnBgvC,EAAa,EAAQ,QAIzBn0C,EAAOC,QAAUJ,EAAcsB,OAAO2U,iBAAmB,SAA0BzU,EAAG+yC,GACpFjvC,EAAS9D,GACT,IAGIlB,EAHA8O,EAAOklC,EAAWC,GAClB1wC,EAASuL,EAAKvL,OACdwC,EAAQ,EAEZ,MAAOxC,EAASwC,EAAOpG,EAAqBO,EAAEgB,EAAGlB,EAAM8O,EAAK/I,KAAUkuC,EAAWj0C,IACjF,OAAOkB,I,mBCdTrB,EAAOC,SAAU,G,mBCAjBD,EAAOC,QAAU,c,qBCAjB,IAAI+D,EAAa,EAAQ,QAEzBhE,EAAOC,QAAU+D,EAAW,YAAa,cAAgB,I,mBCFzD,IAAIM,EAAW,GAAGA,SAElBtE,EAAOC,QAAU,SAAUmD,GACzB,OAAOkB,EAAS9C,KAAK4B,GAAIgK,MAAM,GAAI,K,qBCHrC,IAAI9M,EAAS,EAAQ,QACjBsG,EAAY,EAAQ,QAEpBo0C,EAAS,qBACTr6C,EAAQL,EAAO06C,IAAWp0C,EAAUo0C,EAAQ,IAEhDh7C,EAAOC,QAAUU,G,mBCNjB,IAAIuiD,EAGJA,EAAI,WACH,OAAOpgD,KADJ,GAIJ,IAECogD,EAAIA,GAAK,IAAIr1C,SAAS,cAAb,GACR,MAAOkB,GAEc,kBAAXwC,SAAqB2xC,EAAI3xC,QAOrCvR,EAAOC,QAAUijD,G,qBCnBjB,IAAIliD,EAAM,EAAQ,QACdF,EAAkB,EAAQ,QAC1BwL,EAAU,EAAQ,QAA+BA,QACjDzK,EAAa,EAAQ,QAEzB7B,EAAOC,QAAU,SAAUC,EAAQ++C,GACjC,IAGI9+C,EAHAkB,EAAIP,EAAgBZ,GACpB8L,EAAI,EACJrG,EAAS,GAEb,IAAKxF,KAAOkB,GAAIL,EAAIa,EAAY1B,IAAQa,EAAIK,EAAGlB,IAAQwF,EAAOkO,KAAK1T,GAEnE,MAAO8+C,EAAMv7C,OAASsI,EAAOhL,EAAIK,EAAGlB,EAAM8+C,EAAMjzC,SAC7CM,EAAQ3G,EAAQxF,IAAQwF,EAAOkO,KAAK1T,IAEvC,OAAOwF,I,qBCfT,IAAIY,EAAY,EAAQ,QACpByyC,EAAyB,EAAQ,QAGjCL,EAAe,SAAUwK,GAC3B,OAAO,SAAUtK,EAAOtI,GACtB,IAGI6S,EAAOC,EAHP9L,EAAIlzC,OAAO20C,EAAuBH,IAClCyK,EAAW/8C,EAAUgqC,GACrBgT,EAAOhM,EAAE7zC,OAEb,OAAI4/C,EAAW,GAAKA,GAAYC,EAAaJ,EAAoB,QAAK9/C,GACtE+/C,EAAQ7L,EAAE3mC,WAAW0yC,GACdF,EAAQ,OAAUA,EAAQ,OAAUE,EAAW,IAAMC,IACtDF,EAAS9L,EAAE3mC,WAAW0yC,EAAW,IAAM,OAAUD,EAAS,MAC1DF,EAAoB5L,EAAEpqC,OAAOm2C,GAAYF,EACzCD,EAAoB5L,EAAEnqC,MAAMk2C,EAAUA,EAAW,GAA+BD,EAAS,OAAlCD,EAAQ,OAAU,IAA0B,SAI7GpjD,EAAOC,QAAU,CAGfujD,OAAQ7K,GAAa,GAGrBxrC,OAAQwrC,GAAa,K,qBCzBvB,IAAIr4C,EAAS,EAAQ,QACjBkK,EAAW,EAAQ,QAEnBuT,EAAWzd,EAAOyd,SAElBi/B,EAASxyC,EAASuT,IAAavT,EAASuT,EAAS9b,eAErDjC,EAAOC,QAAU,SAAUmD,GACzB,OAAO45C,EAASj/B,EAAS9b,cAAcmB,GAAM,K,mBCR/CpD,EAAOC,QAAU,SAAUmD,GACzB,GAAiB,mBAANA,EACT,MAAME,UAAUe,OAAOjB,GAAM,sBAC7B,OAAOA,I,qBCHX,IAAI8xC,EAAI,EAAQ,QACZ0E,EAAS,EAAQ,QAIrB1E,EAAE,CAAEhuC,OAAQ,SAAUO,MAAM,EAAME,OAAQxG,OAAOy4C,SAAWA,GAAU,CACpEA,OAAQA,K,kDCNV,6GAEA,6BAAO,GAAI,+BAAF,EAAS,mRAFlB,CAQE92C,GAAM,WACR,OAAO,SAAU0P,MACjB,IAAK,IAAI5R,QAAQ4R,KAAQ1P,KAAKlC,MAAQ4R,KAAK5R,MAC3C,IAAI6iD,WAAa,GAKbC,SACJ,CAmBCC,QAAS,QAQTC,MAAO/xC,UAAUC,UAAUxF,QAAQ,SAAW,EAO9Cu3C,OAAQhyC,UAAUC,UAAUxF,QAAQ,WAAa,EAOjDw3C,UAAWjyC,UAAUC,UAAUM,MAAM,gBAOrC2xC,UAAWlyC,UAAUC,UAAUM,MAAM,UAOrC4xC,UAAWnyC,UAAUC,UAAUxF,QAAQ,SAAW,IAA+B,MAAzByR,SAASkmC,cAAiD,GAAzBlmC,SAASkmC,cAOlGC,MAAO,eAAgBnmC,SAAS9b,cAAc,aAAwC,GAAzB8b,SAASkmC,aAOtEE,WAAY,IAOZC,cAAe,IAObC,MAAOxyC,UAAUC,UAAUxF,QAAQ,aAAe,GACjDuF,UAAUC,UAAUxF,QAAQ,QAAU,GACtCuF,UAAUC,UAAUxF,QAAQ,SAAW,EAOxCg4C,MAAOzyC,UAAUC,UAAUxF,QAAQ,WAAa,GAC/CuF,UAAUC,UAAUxF,QAAQ,SAAW,EAQxCi4C,MAAO1yC,UAAUC,UAAUxF,QAAQ,YAAc,GAChDuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC7CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC7CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC7CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC7CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC7CuF,UAAUC,UAAUxF,QAAQ,aAAe,EAO5Ck4C,MAAO3yC,UAAUC,UAAUxF,QAAQ,iBAAmB,GACrDuF,UAAUC,UAAUxF,QAAQ,WAAa,GACzCuF,UAAUC,UAAUxF,QAAQ,SAAW,EAOxCm4C,SAAS5yC,UAAUC,UAAUM,MAAM,uBAOnCsyC,MAAO7yC,UAAUC,UAAUxF,QAAQ,YAAc,GAClDuF,UAAUC,UAAUxF,QAAQ,SAAW,EAOtCq4C,aAA+B,MAAjBpzC,OAAOqzC,QAAgC,MAAdA,OAAOC,KAAqC,MAAtBD,OAAOC,IAAIC,QAOxEC,MAAOlzC,UAAUC,UAAUxF,QAAQ,aAAe,EASlD04C,MAAQnzC,UAAUC,UAAUxF,QAAQ,aAAe,GACpDuF,UAAUC,UAAUxF,QAAQ,cAAgB,GAC1CuF,UAAUC,UAAUxF,QAAQ,cAAgB,GAC3CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC9CuF,UAAUC,UAAUxF,QAAQ,gBAAkB,GAC9CuF,UAAUC,UAAUxF,QAAQ,gBAAkB,GAC7CuF,UAAUC,UAAUxF,QAAQ,eAAiB,GAC9CuF,UAAUC,UAAUxF,QAAQ,gBAAkB,GAC7CuF,UAAUC,UAAUxF,QAAQ,YAAc,GAC3CuF,UAAUC,UAAUxF,QAAQ,aAAe,EAO5C24C,OAA2C,+BAAnCpzC,UAAUqzC,QAAQj4C,cAO1Bk4C,OAA2C,+BAAnCtzC,UAAUqzC,QAAQj4C,cAQ1Bm4C,OAAQrnC,SAASkd,iBACI,oCADeld,SAASkd,gBAAgB,6BAC5D,kBAA0DppB,UAAUC,UAAUxF,QAAQ,WAAa,EAOpG+4C,OAAQxzC,UAAUyzC,WAAWh5C,QAAQ,OAAS,EAO9Ci5C,OAAQ1zC,UAAUyzC,WAAWh5C,QAAQ,OAAS,EAO9Ck5C,YAAa,WAAWphD,KAAKyN,UAAUC,WAQvC2zC,SAAU,iBAAkB1nC,SAAS2nC,gBAOrCC,WAAmC,MAAvBp0C,OAAOq0C,gBAA0B/zC,UAAUyzC,WAAWh5C,QAAQ,OAAS,GAOnFu5C,SAAU9nC,SAASs0B,SAASyT,KAAKx5C,QAAQ,WAAa,GAClDyR,SAASs0B,SAASyT,KAAKx5C,QAAQ,YAAc,EAOjDy5C,eAAgB,GAiBlBC,mBAAoB,WAEnB,OAAOtC,SAASuB,QAAUvB,SAASyB,QAuBpCc,KAAM,SAASC,EAAKJ,EAAMK,EAAK1yC,GAK9B,GAHA0yC,EAAMA,GAAOpoC,SAGT2lC,SAASG,OAEZsC,EAAI9N,MAAM,cAAgB6N,EAAM,WAAaJ,EAAO,2CAGrD,CACC,IAAIG,EAAOE,EAAIlkD,cAAc,QAE7BgkD,EAAKjrB,aAAa,MAAOkrB,GACzBD,EAAKjrB,aAAa,OAAQ8qB,GAC1BG,EAAKjrB,aAAa,UAAW,SAC7BirB,EAAKjrB,aAAa,OAAQ,YAEtBvnB,GAEHwyC,EAAKjrB,aAAa,KAAMvnB,GAGzB,IAAI4uC,EAAO8D,EAAIC,qBAAqB,QAAQ,GACzC/D,EAAK7mB,YAAYyqB,KActBI,cAAe,SAAS7iD,EAAI8iD,GAE3B,IAAInpC,EAAUumC,SAASqC,eAAeriD,OAEtC,SAASqmB,IAES,KAAX5M,GAEL3Z,IAIF,IAAK,IAAIwI,EAAI,EAAGA,EAAI03C,SAASqC,eAAeriD,OAAQsI,IAEnDu6C,YAAYj9C,IAAIo6C,SAASqC,eAAe/5C,GAAIs6C,EAAKv8B,IAcnD6N,QAAS,SAASlgB,GAEjBqG,SAASs6B,MAAM,gBAAgB3gC,EAAI,kBAmBN,oBAArB,kBAET8uC,iBAAkB,GAiBY,oBAArB,kBAETC,iBAAkB,GAgBgB,oBAAzB,sBAETC,oBAAsB,QAiBU,oBAAvB,oBAETC,mBAAoB,GAoBK,oBAAhB,YAA+BC,WAAWljD,OAAS,GAGT,KAA/CkjD,WAAWC,UAAUD,WAAWljD,OAAS,KAE5CkjD,WAAaA,WAAWC,UAAU,EAAGD,WAAWljD,OAAS,IAG1DggD,SAASoD,SAAWF,YAIpBlD,SAASoD,SAAW,IAoBU,oBAArB,iBAAoCC,gBAAgBrjD,OAAS,GAGT,KAAzDqjD,gBAAgBF,UAAUE,gBAAgBrjD,OAAS,KAEtDqjD,gBAAkBA,gBAAgBF,UAAU,EAAGE,gBAAgBrjD,OAAS,IAGzEggD,SAASsD,cAAgBD,iBAIzBrD,SAASsD,cAAgBtD,SAASoD,SAAW,UAkCpB,oBAAhB,YAA6C,MAAdG,WAExCvD,SAASwD,SAAWD,WAIpBvD,SAASwD,SAAYxD,SAAc,MAAI7xC,UAAUs1C,aAAet1C,UAAUq1C,SAoB1C,oBAAvB,mBAA2D,MAArBE,kBAE/C1D,SAAS2D,gBAAkBD,kBAI3B1D,SAAS2D,gBAAkB,KAIxBV,mBAEHjD,SAASuC,KAAK,aAAcvC,SAASoD,SAAW,mBAoBtB,oBAAjB,aAA+C,MAAfQ,cAEzC5D,SAAS6D,UAAYD,aAIlB5D,SAASuB,SAERvB,SAASyB,OAEZzB,SAASuB,QAAS,GAOW,GAAzBlnC,SAASkmC,cAEZlmC,SAASypC,WAAWl+C,IAAIo6C,SAASS,WAAY,gCAAiC,gBAC9EpmC,SAASypC,WAAWl+C,IAAIo6C,SAASU,cAAe,0CAA2C,kBAI3FrmC,SAASypC,WAAWl+C,IAAIo6C,SAASS,WAAY,iCAC7CpmC,SAASypC,WAAWl+C,IAAIo6C,SAASU,cAAe,4CAI7CV,SAASM,WAAajmC,SAAS0pC,YAAY/jD,QAAU,GAExD,WAEC,IAAIsS,EAAO+H,SAAS9b,cAAc,SAClC+T,EAAKyD,KAAO,WACZzD,EAAK0xC,WAAWjiB,QAAUie,SAASS,WAAa,mCACzCT,SAASU,cAAgB,mCAC1BrmC,SAASqoC,qBAAqB,QAAQ,GAAG5qB,YAAYxlB,GAN5D,GAWA+H,SAAS4pC,mBAAmBliB,QAAUie,SAASS,WAAa,mCACxDT,SAASU,cAAgB,mCAGvBuC,mBAEHjD,SAASuC,KAAK,aAAcvC,SAASoD,SAAW,wBAQlDL,iBAAqE,MAAlBzmD,OAAOC,WAG7DyjD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,wBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,oCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iEACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yDACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yDACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0DACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,oDACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8DACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,oEACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0DACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2DACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uDACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mDACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+CACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,iCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0CACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,uCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,oCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,6BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,2BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,yBACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,gCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,kCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,0BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,8BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,+BACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,sCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,mCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,qCACnCpD,SAAS9rB,QAAQ8rB,SAASoD,SAAS,4BAKpCrD,WAAWC,SAA+B,qBAAbA,SAA2BA,cAAWrgD,EAMnE,IAAIukD,MACJ,CAUCC,YAAa,UAQbC,OAAO,EAQPC,OAAO,EAQPC,MAAM,EAONC,OAAQ,GASRzgC,KAAM,WAEL,GAAoB,MAAhBogC,MAAMr2C,QAAmC,MAAjBwM,SAASgzB,KACrC,CACC,IAAImX,EAAQN,MAAMC,YAAc,cAAgBnE,SAASC,QAGrDwE,EAAQpqC,SAAS9b,cAAc,SACnCkmD,EAAMntB,aAAa,QAAS,QAC5BmtB,EAAMntB,aAAa,SAAU,QAE7B,IAAIotB,EAAQrqC,SAAS9b,cAAc,SAC/BomD,EAAKtqC,SAAS9b,cAAc,MAC5BqmD,EAAKvqC,SAAS9b,cAAc,MAChCqmD,EAAG59B,MAAM69B,cAAgB,MAGzBX,MAAMY,SAAWzqC,SAAS9b,cAAc,YACxC2lD,MAAMY,SAASxtB,aAAa,OAAQ,OACpC4sB,MAAMY,SAASxtB,aAAa,WAAY,QACxC4sB,MAAMY,SAAS99B,MAAM+9B,OAAS,OAC9Bb,MAAMY,SAAS99B,MAAMg+B,OAAS,OAC9Bd,MAAMY,SAASpoD,MAAQwnD,MAAMK,OAGzBvE,SAASW,OAAgC,cAAvBtmC,SAAS4qC,WAE9Bf,MAAMY,SAAS99B,MAAMk+B,MAAQ,MAI7BhB,MAAMY,SAAS99B,MAAMk+B,MAAQ,OAG9BN,EAAG9sB,YAAYosB,MAAMY,UACrBH,EAAG7sB,YAAY8sB,GACfF,EAAM5sB,YAAY6sB,GAGlBA,EAAKtqC,SAAS9b,cAAc,MAC5B2lD,MAAMU,GAAKvqC,SAAS9b,cAAc,MAClC2lD,MAAMU,GAAG59B,MAAM69B,cAAgB,MAC/BX,MAAMU,GAAGttB,aAAa,SAAU,QAEhCqtB,EAAG7sB,YAAYosB,MAAMU,IACrBF,EAAM5sB,YAAY6sB,GAClBF,EAAM3sB,YAAY4sB,GAGlBR,MAAMiB,UAAU,QAAQ,SAAUC,GAEjClB,MAAMvrC,UAGPurC,MAAMiB,UAAU,OAAO,SAAUC,GAEhC,IAAIC,EAAUC,QAAQC,aAAalrC,SAASgzB,MAC5C6W,MAAMsB,MAAMH,MAGbnB,MAAMiB,UAAU,SAAS,SAAUC,GAElClB,MAAME,OAASF,MAAME,MAEjBF,MAAME,MAETF,MAAMsB,MAAM,mBAIZtB,MAAMsB,MAAM,uBAIdtB,MAAMiB,UAAU,QAAQ,SAAUC,GAEjC,IAECE,QAAQG,KAAKvB,MAAMY,SAASpoD,OAE7B,MAAOgc,GAEN4sC,QAAQI,MAAMhtC,OAIhBwrC,MAAMiB,UAAU,QAAQ,SAAUC,GAEjC,IAECE,QAAQK,MAAMzB,MAAMY,SAASpoD,OAE9B,MAAOgc,GAEN4sC,QAAQI,MAAMhtC,OAIhBwrC,MAAMiB,UAAU,SAAS,SAAUC,GAElClB,MAAMY,SAASpoD,MAAQ,MAIxB,IAAIyJ,EAAI,EACJy/C,EAAI,EAqBR,GAnBkC,kBAAvB/3C,OAAiB,YAE3B1H,EAAI0H,OAAOg4C,YACXD,EAAI/3C,OAAOi4C,aAIX3/C,EAAKkU,SAAS2nC,gBAAgB+D,cAAgB1rC,SAASgzB,KAAK0Y,aAC5DH,EAAIvrC,SAASgzB,KAAK2Y,aAGnB9B,MAAMr2C,OAAS,IAAIo4C,SAASzB,EAAOC,EAAOnlD,KAAKwD,IAAI,EAAG8iD,EAAI,KAAMtmD,KAAKwD,IAAI,EAAGqD,EAAI,KAAM,IAAK,KAC3F+9C,MAAMr2C,OAAOq4C,gBAAe,GAC5BhC,MAAMr2C,OAAOs4C,eAAc,GAC3BjC,MAAMr2C,OAAOu4C,cAAa,GAC1BlC,MAAMr2C,OAAOw4C,aAAY,GACzBnC,MAAMr2C,OAAOy4C,gBAAiB,GAGxBtG,SAASW,OAASX,SAASE,SAAWF,SAASgB,QACnDhB,SAASc,OAAgC,cAAvBzmC,SAAS4qC,YACH,IAAzB5qC,SAASkmC,aACV,CACC,IAAIgG,EAAMrC,MAAMr2C,OAAO24C,aAEnBC,EAAgB,SAASC,EAAQtB,GAEpClB,MAAMY,SAAS99B,MAAM+9B,OAASzlD,KAAKwD,IAAI,EAAGyjD,EAAIjZ,aAAe,IAAM,MAGpE4W,MAAMr2C,OAAO84C,YAAYC,QAAQC,WAAYJ,GAC7CvC,MAAMr2C,OAAO84C,YAAYC,QAAQE,SAAUL,GAC3CvC,MAAMr2C,OAAO84C,YAAYC,QAAQG,UAAWN,GAE5CvC,MAAMY,SAAS99B,MAAM+9B,OAAS,UAUjCpsC,KAAM,WAELurC,MAAM8C,QAAQ1B,QAAQ1kD,SAASuN,aAQhCg3C,UAAW,SAAS8B,EAAKC,GAExB,IAAIC,EAAS9sC,SAAS9b,cAAc,UACpC+mD,QAAQ3Q,MAAMwS,EAAQF,GACtBL,QAAQD,YAAYQ,EAAQ,QAASD,GACrChD,MAAMU,GAAG9sB,YAAYqvB,IAQtBC,UAAW,WAEV,OAAoB,MAAhBlD,MAAMr2C,QAEFq2C,MAAMr2C,OAAOu5C,aAYtB3e,KAAM,WAELyb,MAAMmD,YAAW,IAQlBA,WAAY,SAASC,GAEA,MAAhBpD,MAAMr2C,QAETq2C,MAAMpgC,OAGa,MAAhBogC,MAAMr2C,QAETq2C,MAAMr2C,OAAOw5C,WAAWC,IAoB1BzgB,MAAO,SAASuK,GAEf,GAAI8S,MAAME,MAIT,OAFAF,MAAM8C,QAAQ,YAAY5V,IAEnB,IAAIvyC,MAAOK,WAYpB2pC,MAAO,SAASuI,EAAQmW,GAEvB,GAAIrD,MAAME,MACV,CACC,IAAIoD,EAAY,GAAND,EAAW,OAAM,IAAI1oD,MAAOK,UAAYqoD,GAAI,OAAS,GAC/DrD,MAAM8C,QAAQ,WAAW5V,EAAOoW,KAgBlChC,MAAO,WAEFtB,MAAMG,OAETH,MAAM8C,QAAQ7mD,MAAMf,KAAMgB,YAgB5ByP,KAAM,WAEDq0C,MAAMI,MAETJ,MAAM8C,QAAQ7mD,MAAMf,KAAMgB,YAS5Bu0C,MAAO,WAIN,IAFA,IAAIvD,EAAS,GAEJ9oC,EAAI,EAAGA,EAAIlI,UAAUJ,OAAQsI,IAErC8oC,GAAUhxC,UAAUkI,GAEhBA,EAAIlI,UAAUJ,OAAS,IAE1BoxC,GAAU,KAIU,MAAlB8S,MAAMY,UAETZ,MAAMY,SAASpoD,MAAQwnD,MAAMY,SAASpoD,MAAQ00C,EAG1CjjC,UAAUC,UAAUxF,QAAQ,eAAiB,IAEhDs7C,MAAMY,SAAS99B,MAAMygC,WAAa,SAClCvD,MAAMY,SAAS99B,MAAMygC,WAAa,WAGnCvD,MAAMY,SAAS4C,UAAYxD,MAAMY,SAAS6C,cAI1CzD,MAAMK,QAAUnT,GAUlB4V,QAAS,WAIR,IAFA,IAAI5V,EAAS,GAEJ9oC,EAAI,EAAGA,EAAIlI,UAAUJ,OAAQsI,IAErC8oC,GAAUhxC,UAAUkI,GAEhBA,EAAIlI,UAAUJ,OAAS,IAE1BoxC,GAAU,KAIZ8S,MAAMvP,MAAMvD,EAAS,QAKvB2O,WAAWmE,MAAyB,qBAAVA,MAAwBA,WAAQvkD,EAM1D,IAAIioD,iBACJ,CAeCC,WAAY,aAOZ3tC,QAAS,EAQTzb,IAAK,SAASsI,GAEb,GAAW,MAAPA,EACJ,CACC,GAAwC,MAApCA,EAAI6gD,iBAAiBC,YAExB,GAAmB,kBAAR9gD,EACX,CACC,IAAI+gD,EAAOxC,QAAQyC,gBAAgBhhD,EAAIoqB,aACvCpqB,EAAI6gD,iBAAiBC,YAAcC,EAAO,IAAMF,iBAAiB1tC,cAE1C,oBAARnT,IAEfA,EAAI6gD,iBAAiBC,YAAc,YAAcD,iBAAiB1tC,WAIpE,OAAOnT,EAAI6gD,iBAAiBC,YAG7B,OAAO,MAQRj4C,MAAO,SAAS7I,GAEK,kBAAV,GAAqC,oBAARA,UAE/BA,EAAI6gD,iBAAiBC,cAsB/B,SAASG,eAER5oD,KAAKwQ,QAlBNmwC,WAAW6H,iBAA+C,qBAArBA,iBAAmCA,sBAAmBjoD,EA0B3FqoD,aAAalpD,UAAUoJ,IAAM,KAO7B8/C,aAAalpD,UAAU8Q,MAAQ,WAE9BxQ,KAAK8I,IAAM,IAQZ8/C,aAAalpD,UAAUL,IAAM,SAAShC,GAErC,IAAIsT,EAAK63C,iBAAiBnpD,IAAIhC,GAE9B,OAAO2C,KAAK8I,IAAI6H,IASjBi4C,aAAalpD,UAAUmpD,IAAM,SAASxrD,EAAKC,GAE1C,IAAIqT,EAAK63C,iBAAiBnpD,IAAIhC,GAC1ByrD,EAAW9oD,KAAK8I,IAAI6H,GAGxB,OAFA3Q,KAAK8I,IAAI6H,GAAMrT,EAERwrD,GASRF,aAAalpD,UAAU2J,OAAS,SAAShM,GAExC,IAAIsT,EAAK63C,iBAAiBnpD,IAAIhC,GAC1ByrD,EAAW9oD,KAAK8I,IAAI6H,GAGxB,cAFO3Q,KAAK8I,IAAI6H,GAETm4C,GAQRF,aAAalpD,UAAUqpD,QAAU,WAEhC,IAAIlmD,EAAS,GAEb,IAAK,IAAIxF,KAAO2C,KAAK8I,IAEpBjG,EAAOkO,KAAK1T,GAGb,OAAOwF,GAQR+lD,aAAalpD,UAAUspD,UAAY,WAElC,IAAInmD,EAAS,GAEb,IAAK,IAAIxF,KAAO2C,KAAK8I,IAEpBjG,EAAOkO,KAAK/Q,KAAK8I,IAAIzL,IAGtB,OAAOwF,GAcR+lD,aAAalpD,UAAUupD,MAAQ,SAASC,GAEvC,IAAK,IAAI7rD,KAAO2C,KAAK8I,IAEpBogD,EAAQ7rD,EAAK2C,KAAK8I,IAAIzL,KAIxBsjD,WAAWiI,aAAuC,qBAAjBA,aAA+BA,kBAAeroD,EAM/E,IAAIkjD,YACJ,CA0DC0F,UAAW,GAOXC,UAAWxF,oBAQXyF,kBAAkB,EAQlBC,mBAAmB,EAQnBC,mBAAmB,EAYnBC,oBAAqB,SAAShG,GAE7B,OAA0B,MAAtB5C,SAAS6D,WAELyB,QAAQ18C,QAAQo3C,SAAS6D,UAAWjB,IAAQ,GAkBrDiG,iBAAkB,SAASC,EAAUlG,GAEpC,OAAIC,YAAY6F,oBAAsB7F,YAAY+F,oBAAoBhG,GAE9DkG,EAAWjG,YAAY2F,UAIvB,MAwBTO,iBAAkB,SAASD,EAAUlG,GAEpC,GAA0B,MAAtB5C,SAAS6D,YAAsBzkD,KAAKwpD,oBAAoBhG,GAC5D,CACC,IAAIoG,EAAOpG,EAAIh6C,QAAQ,KAEnBogD,EAAO,IAEVpG,EAAMA,EAAIO,UAAU,EAAG6F,IAIzB,OAAInG,YAAY8F,mBAAqB9F,YAAY+F,oBAAoBhG,IAAQA,GAAO5C,SAAS2D,gBAErFmF,EAAW,IAAMlG,EAAMC,YAAY2F,UAInC,MA0BT5iD,IAAK,SAASkjD,EAAUlG,EAAKv8B,GAK5B,GAHAu8B,EAAc,MAAPA,EAAeA,EAA6B,MAArB5C,SAASwD,SACtCxD,SAASwD,SAASj7C,cAAgB0gD,YAAYC,KAE3CtG,GAAOqG,YAAYC,KACvB,CACC,IAAIC,EAAgBtG,YAAYgG,iBAAiBC,EAAUlG,GACvDwG,EAAgBvG,YAAYkG,iBAAiBD,EAAUlG,GAEvD+F,EAAoB,WAEvB,GAAqB,MAAjBS,EAEH,GAAI/iC,EAEHi/B,QAAQ7mD,IAAI2qD,GAAe,SAASC,GAEnCxG,YAAYyG,MAAMD,EAAIE,WACtBljC,OACE,WAEFA,YAKD,IAEI,IAAIgjC,EAAM/D,QAAQkE,KAAKJ,GAEnBC,EAAII,WAEN5G,YAAYyG,MAAMD,EAAIE,WAGzB,MAAOl+C,SAMS,MAAZgb,GAERA,KAIF,GAAqB,MAAjB8iC,EAEH,GAAI9iC,EAEHi/B,QAAQ7mD,IAAI0qD,GAAe,SAASE,GAEnCxG,YAAYyG,MAAMD,EAAIE,WACtBZ,OACE,WAEFA,YAKD,IAEI,IAAIU,EAAM/D,QAAQkE,KAAKL,GAEnBE,EAAII,WAEN5G,YAAYyG,MAAMD,EAAIE,WAGxBZ,IAEF,MAAOt9C,SASVs9C,MAWHW,MAAO,SAASr4C,GAEf,GAAY,MAARA,EAIH,IAFA,IAAIy4C,EAAQz4C,EAAK5I,MAAM,MAEdC,EAAI,EAAGA,EAAIohD,EAAM1pD,OAAQsI,IAEjC,GAA0B,KAAtBohD,EAAMphD,GAAGmB,OAAO,GACpB,CACC,IAAIjH,EAAQknD,EAAMphD,GAAGM,QAAQ,KAE7B,GAAIpG,EAAQ,EACZ,CACC,IAAI/F,EAAMitD,EAAMphD,GAAG66C,UAAU,EAAG3gD,GAC5BmnD,EAAMD,EAAMphD,GAAGtI,OAEiB,IAAhC0pD,EAAMphD,GAAG4E,WAAWy8C,EAAM,IAE7BA,IAGD,IAAIjtD,EAAQgtD,EAAMphD,GAAG66C,UAAU3gD,EAAQ,EAAGmnD,GAEtCvqD,KAAKqpD,kBAER/rD,EAAQA,EAAM2M,QAAQ,wBAAwB,KAC9Cw5C,YAAY0F,UAAU9rD,GAAOmtD,SAASltD,IAItCmmD,YAAY0F,UAAU9rD,GAAOC,KAmCnC+B,IAAK,SAAShC,EAAKuf,EAAQ6tC,GAE1B,IAAIntD,EAAQmmD,YAAY0F,UAAU9rD,GAclC,OAXa,MAATC,IAEHA,EAAQmtD,GAII,MAATntD,GAA2B,MAAVsf,IAEpBtf,EAAQmmD,YAAYiH,oBAAoBptD,EAAOsf,IAGzCtf,GAcRotD,oBAAqB,SAASptD,EAAOsf,GAKpC,IAHA,IAAI/Z,EAAS,GACTO,EAAQ,KAEH8F,EAAI,EAAGA,EAAI5L,EAAMsD,OAAQsI,IAClC,CACC,IAAIpI,EAAIxD,EAAM+M,OAAOnB,GAEZ,KAALpI,EAEHsC,EAAQ,GAES,MAATA,GAAuB,KAALtC,GAE1BsC,EAAQiyB,SAASjyB,GAAO,EAEpBA,GAAS,GAAKA,EAAQwZ,EAAOhc,QAEhCiC,EAAOkO,KAAK6L,EAAOxZ,IAGpBA,EAAQ,MAES,MAATA,EAERA,GAAStC,EAIT+B,EAAOkO,KAAKjQ,GAId,OAAO+B,EAAO08B,KAAK,KAapBgkB,cAAe,SAASt8B,GAEvBw8B,YAAYj9C,IAAIo6C,SAASoD,SAAS,oBAAqB,MAAM,WAE5DP,YAAYj9C,IAAIo6C,SAASoD,SAAS,mBAAoB,KAAM/8B,QAsB/D,SAAS0jC,QAAQ3L,EAAG4L,GAEnB5qD,KAAKg/C,EAAU,MAALA,EAAaA,EAAI,EAC3Bh/C,KAAK4qD,EAAU,MAALA,EAAaA,EAAI,EAuD5B,SAASC,YAAY7L,EAAG4L,EAAG9E,EAAOH,GAEjCgF,QAAQjsD,KAAKsB,KAAMg/C,EAAG4L,GAEtB5qD,KAAK8lD,MAAkB,MAATA,EAAiBA,EAAQ,EACvC9lD,KAAK2lD,OAAoB,MAAVA,EAAkBA,EAAS,EA/E3ChF,WAAW8C,YAAqC,qBAAhBA,YAA8BA,iBAAcljD,EA2B5EoqD,QAAQjrD,UAAUs/C,EAAI,KAOtB2L,QAAQjrD,UAAUkrD,EAAI,KAOtBD,QAAQjrD,UAAUorD,OAAS,SAASnjD,GAEnC,OAAc,MAAPA,GAAeA,EAAIq3C,GAAKh/C,KAAKg/C,GAAKr3C,EAAIijD,GAAK5qD,KAAK4qD,GAQxDD,QAAQjrD,UAAU8kB,MAAQ,WAGzB,OAAO0hC,QAAQ1hC,MAAMxkB,OAGtB2gD,WAAWgK,QAA6B,qBAAZA,QAA0BA,aAAUpqD,EA4BhEsqD,YAAYnrD,UAAY,IAAIirD,QAC5BE,YAAYnrD,UAAUqyB,YAAc84B,YAOpCA,YAAYnrD,UAAUomD,MAAQ,KAO9B+E,YAAYnrD,UAAUimD,OAAS,KAO/BkF,YAAYnrD,UAAUqrD,QAAU,SAAS/L,EAAG4L,EAAGpE,EAAGz/C,GAE9C/G,KAAKg/C,EAAIA,EACTh/C,KAAK4qD,EAAIA,EACT5qD,KAAK8lD,MAAQU,EACbxmD,KAAK2lD,OAAS5+C,GAQlB8jD,YAAYnrD,UAAUsrD,WAAa,WAElC,OAAOhrD,KAAKg/C,EAAIh/C,KAAK8lD,MAAM,GAQ5B+E,YAAYnrD,UAAUurD,WAAa,WAElC,OAAOjrD,KAAK4qD,EAAI5qD,KAAK2lD,OAAO,GAQ7BkF,YAAYnrD,UAAU8G,IAAM,SAAS0kD,GAEpC,GAAY,MAARA,EACJ,CACC,IAAIC,EAAOjrD,KAAKyD,IAAI3D,KAAKg/C,EAAGkM,EAAKlM,GAC7BoM,EAAOlrD,KAAKyD,IAAI3D,KAAK4qD,EAAGM,EAAKN,GAC7BS,EAAOnrD,KAAKwD,IAAI1D,KAAKg/C,EAAIh/C,KAAK8lD,MAAOoF,EAAKlM,EAAIkM,EAAKpF,OACnDwF,EAAOprD,KAAKwD,IAAI1D,KAAK4qD,EAAI5qD,KAAK2lD,OAAQuF,EAAKN,EAAIM,EAAKvF,QAExD3lD,KAAKg/C,EAAImM,EACTnrD,KAAK4qD,EAAIQ,EACTprD,KAAK8lD,MAAQuF,EAAOF,EACpBnrD,KAAK2lD,OAAS2F,EAAOF,IASvBP,YAAYnrD,UAAU6rD,UAAY,SAASL,GAE1C,GAAY,MAARA,EACJ,CACC,IAAIM,EAAKxrD,KAAKg/C,EAAIh/C,KAAK8lD,MACnB2F,EAAKP,EAAKlM,EAAIkM,EAAKpF,MAEnB4F,EAAK1rD,KAAK4qD,EAAI5qD,KAAK2lD,OACnBgG,EAAKT,EAAKN,EAAIM,EAAKvF,OAEvB3lD,KAAKg/C,EAAI9+C,KAAKwD,IAAI1D,KAAKg/C,EAAGkM,EAAKlM,GAC/Bh/C,KAAK4qD,EAAI1qD,KAAKwD,IAAI1D,KAAK4qD,EAAGM,EAAKN,GAC/B5qD,KAAK8lD,MAAQ5lD,KAAKyD,IAAI6nD,EAAIC,GAAMzrD,KAAKg/C,EACrCh/C,KAAK2lD,OAASzlD,KAAKyD,IAAI+nD,EAAIC,GAAM3rD,KAAK4qD,IAWxCC,YAAYnrD,UAAUksD,KAAO,SAASC,GAErC7rD,KAAKg/C,GAAK6M,EACV7rD,KAAK4qD,GAAKiB,EACV7rD,KAAK8lD,OAAS,EAAI+F,EAClB7rD,KAAK2lD,QAAU,EAAIkG,GAQpBhB,YAAYnrD,UAAUosD,SAAW,WAEhC,OAAO,IAAInB,QAAQ3qD,KAAKg/C,EAAGh/C,KAAK4qD,IAQjCC,YAAYnrD,UAAUqsD,SAAW,WAEhC,IAAIC,GAAKhsD,KAAK8lD,MAAQ9lD,KAAK2lD,QAAU,EACrC3lD,KAAKg/C,GAAKgN,EACVhsD,KAAK4qD,GAAKoB,EACV,IAAIr8B,EAAM3vB,KAAK8lD,MACf9lD,KAAK8lD,MAAQ9lD,KAAK2lD,OAClB3lD,KAAK2lD,OAASh2B,GAQfk7B,YAAYnrD,UAAUorD,OAAS,SAASnjD,GAEvC,OAAc,MAAPA,GAAeA,EAAIq3C,GAAKh/C,KAAKg/C,GAAKr3C,EAAIijD,GAAK5qD,KAAK4qD,GACtDjjD,EAAIm+C,OAAS9lD,KAAK8lD,OAASn+C,EAAIg+C,QAAU3lD,KAAK2lD,QAQhDkF,YAAYoB,cAAgB,SAASf,GAEpC,OAAO,IAAIL,YAAYK,EAAKlM,EAAGkM,EAAKN,EAAGM,EAAKpF,MAAOoF,EAAKvF,SAGzDhF,WAAWkK,YAAqC,qBAAhBA,YAA8BA,iBAActqD,EAM5E,IAAI2rD,UACJ,CAkCCC,eAAgB,SAASC,EAAOC,EAAStqD,GAExC,IAAIuqD,EAAU,GACVjpD,EAAO,EAEPkpD,EAAU,WAIb,IAFA,IAAIC,GAAa,EAERtjD,EAAI,EAAGA,EAAImjD,EAAQzrD,OAAQsI,IACpC,CACC,IAAI63B,EAASsrB,EAAQnjD,GAErB,GAAI63B,aAAkB0rB,kBACrB1rB,aAAkB2rB,kBAClB3rB,aAAkB4rB,eAClB5rB,aAAkB6rB,eAClB7rB,aAAkB8rB,cACnB,CACC,IAAI/b,EAAQsb,EAAMU,UAAUC,SAAShsB,EAAOisB,MAAQjsB,EAAOhuB,OAAO,GAElE,GAAa,MAAT+9B,EAIH,GAFA0b,GAAa,EAETzrB,EAAOhP,aAAe06B,kBAAoBL,EAAMhmC,MAAMjX,OAAO4xB,EAAOisB,MAEvE9G,QAAQ+G,WAAWnc,EAAMoc,MAAMh6C,KAAM,IAAM7P,EAAOipD,OAGnD,CACC,IAAIa,EAAQf,EAAMU,UAAUK,MAExBte,GAAM9N,EAAOqsB,SAASpO,EAAIje,EAAO+nB,SAAS9J,GAAKmO,EAC/Cpe,GAAMhO,EAAOqsB,SAASxC,EAAI7pB,EAAO+nB,SAAS8B,GAAKuC,EAE/CE,GAAMtsB,EAAOqsB,SAAStH,MAAQ/kB,EAAO+nB,SAAShD,OAASqH,EACvDG,GAAMvsB,EAAOqsB,SAASzH,OAAS5kB,EAAO+nB,SAASnD,QAAUwH,EAEjD,GAAR9pD,GAEHytC,EAAMkO,GAAKnQ,EACXiC,EAAM8Z,GAAK7b,EACX+B,EAAMgV,OAASuH,EACfvc,EAAM6U,QAAU2H,IAIhBxc,EAAMkO,GAAKnQ,EAAKyd,EAChBxb,EAAM8Z,GAAK7b,EAAKud,EAChBxb,EAAMgV,OAASuH,EAAKf,EACpBxb,EAAM6U,QAAU2H,EAAKhB,GAGtBF,EAAMmB,aAAaC,OAAO1c,GAG1Bob,UAAUuB,eAAerB,EAAOrrB,EAAOisB,KAAM,IAAM3pD,EAAOipD,KAM1DjpD,EAAOipD,GAAWE,GAErBnpD,IACAoL,OAAOkM,WAAW4xC,EAAStiC,IAEX,MAARloB,GAERA,KAIEkoB,EAAQ,GACZsiC,KAcEkB,eAAgB,SAASrB,EAAOY,EAAMU,GAKxC,IAFA,IAAIC,EAAavB,EAAMhmC,MAAMwnC,cAAcZ,GAElC9jD,EAAE,EAAGA,EAAEykD,EAAYzkD,IAC5B,CACC,IAAI6J,EAAQq5C,EAAMhmC,MAAMynC,WAAWb,EAAM9jD,GACrC4kD,EAAa1B,EAAMU,UAAUC,SAASh6C,GAExB,MAAd+6C,IAEH5H,QAAQ+G,WAAWa,EAAWZ,MAAMh6C,KAAMw6C,GAC1CxB,UAAUuB,eAAerB,EAAOr5C,EAAO26C,IAKzC,IAAIK,EAAQ3B,EAAMhmC,MAAM4nC,SAAShB,GAEjC,GAAa,MAATe,EAEH,IAAS7kD,EAAE,EAAGA,EAAE6kD,EAAMntD,OAAQsI,IAC9B,CACC,IAAI+kD,EAAY7B,EAAMU,UAAUC,SAASgB,EAAM7kD,IAE9B,MAAb+kD,GAEH/H,QAAQ+G,WAAWgB,EAAUf,MAAMh6C,KAAMw6C,KAW7CQ,QAAS,SAASh7C,EAAMjR,EAAMoH,EAAQhG,EAAM4mB,EAAOkkC,GAElD9qD,EAAOA,GAAQ,GACf4mB,EAAQA,GAAS,GAEjB,IAAIyjC,EAAUzrD,GAAQ,IAItB,GAFAikD,QAAQ+G,WAAW/5C,EAAMw6C,GAErBS,GAA0B,MAAbA,EACjB,CACC,IAAI5wD,EAAI,WAEJmwD,EAAUxtD,KAAKwD,IAAIgqD,EAAQrqD,EAAM,GACpC6iD,QAAQ+G,WAAW/5C,EAAMw6C,GAErBA,EAAU,EAEbj/C,OAAOkM,WAAWpd,EAAG0sB,IAIrB/W,EAAK0U,MAAMygC,WAAa,SAEpBh/C,GAAU6J,EAAKujB,YAElBvjB,EAAKujB,WAAWgC,YAAYvlB,KAI/BzE,OAAOkM,WAAWpd,EAAG0sB,QAIrB/W,EAAK0U,MAAMygC,WAAa,SAEpBh/C,GAAU6J,EAAKujB,YAElBvjB,EAAKujB,WAAWgC,YAAYvlB,KAOhCytC,WAAWuL,UAAiC,qBAAdA,UAA4BA,eAAY3rD,EAMtE,IAAI2lD,QACJ,CAuBCkI,cAAqC,QAArBxN,SAASwD,SAAsB,QAAU,GASzDiK,cAAqC,QAArBzN,SAASwD,SAAsB,QAAU,GAOzDkK,WAAY1N,SAASsD,cAAgB,aAYrCqK,cAAe,SAASC,GAEF,MAAjBA,EAAQ5mC,QAEX4mC,EAAQ5mC,MAAM6mC,OAAS,IAGxB,IAAI78C,EAAW48C,EAAQ3sB,WAEvB,GAAgB,MAAZjwB,EAIG,IAFA,IAAI+7C,EAAa/7C,EAAShR,OAEjBsI,EAAI,EAAGA,EAAIykD,EAAYzkD,GAAK,EAEjCg9C,QAAQqI,cAAc38C,EAAS1I,KAc3CwlD,gBAAiB,WAEhB,OAAI9N,SAASE,QAAmC,MAAzB7lC,SAASkmC,cAAwBlmC,SAASkmC,aAAe,GAExE,SAASqN,GAEf,OAAmB,MAAXA,EAAmBA,EAAQG,aAAe,MAK5C,SAASH,GAEf,OAAmB,MAAXA,EACP//C,OAAOm4B,iBAAiB4nB,EAAS,IACjC,MAfa,GA0BjBI,eAAgB,SAAStxD,GAsBxB,MApBa,QAATA,EAEHA,EAAQ,IAES,UAATA,EAERA,EAAQ,IAES,SAATA,IAERA,EAAQ,KAGTA,EAAQ4K,WAAW5K,GAEf+C,MAAM/C,KAETA,EAAQ,GAGFA,GAaRuxD,iBAAkB,WAEjB,IAAIC,EAAS,KAmBb,OAjBIlO,SAASa,MAEZqN,EAAS,IAEDlO,SAASc,OAASd,SAASgB,MAEnCkN,EAAS,SAEDlO,SAASsB,MAEjB4M,EAAS,MAEDlO,SAASE,OAAS7lC,SAASkmC,cAAgB,GAAKlmC,SAASkmC,aAAe,KAEhF2N,EAAS,MAGH,SAASlnC,EAAO9pB,EAAMR,GAE5BsqB,EAAM9pB,GAAQR,EAEA,MAAVwxD,GAAkBhxD,EAAK8C,OAAS,IAEnC9C,EAAOgxD,EAAShxD,EAAKimD,UAAU,EAAG,GAAG55C,cAAgBrM,EAAKimD,UAAU,GACpEn8B,EAAM9pB,GAAQR,IA5BC,GA2ClByxD,cAAe,SAAS77C,GAEvB,IAAI0U,EAAQs+B,QAAQwI,gBAAgBx7C,GAEpC,OAAgB,MAAT0U,IAAoC,UAAlBA,EAAMonC,UAA0C,QAAlBpnC,EAAMonC,WAU9DxsD,KAAM,SAASysD,EAAOnH,GAErB,OAAO,WAEN,OAAOA,EAAM/mD,MAAMkuD,EAAOjuD,aAgB5BkuD,KAAM,SAASC,MAEd,IAAItsD,OAAS,KAEb,GAAIssD,KAAK3lD,QAAQ,aAAe,EAE/B,IAEC0lD,KAAK,+BAA+BC,MACpCtsD,OAASusD,wBAETA,wBAA0B,KAE3B,MAAOnjD,GAEN64C,MAAMr0C,KAAKxE,EAAEojD,QAAU,qBAAuBF,WAK/C,IAECtsD,OAASqsD,KAAKC,MAEf,MAAOljD,GAEN64C,MAAMr0C,KAAKxE,EAAEojD,QAAU,qBAAuBF,MAIhD,OAAOtsD,QASRysD,SAAU,SAASp8C,EAAM6iB,EAAMz4B,GAE9B,GAAI4V,EAAK2qB,UAAYgsB,YAAY0F,iBACjC,CACC,IAAI5/B,EAAMzc,EAAKqxB,aAAaxO,GAE5B,GAAW,MAAPpG,GAAeA,GAAOryB,EAEzB,OAAO4V,EAITA,EAAOA,EAAKuqB,WAEZ,MAAe,MAARvqB,EACP,CACC,IAAIrQ,EAASqjD,QAAQoJ,SAASp8C,EAAM6iB,EAAMz4B,GAE1C,GAAc,MAAVuF,EAEH,OAAOA,EAGRqQ,EAAOA,EAAKylB,YAGb,OAAO,MAYRgwB,gBAAiB,SAASprD,GAEzB,IAAIqL,EAAM,KAEV,GAAS,MAALrL,EAEH,GAAc,MAAVA,EAAEO,KAEL8K,EAAMrL,EAAEO,UAMR,GAFA8K,EAAMs9C,QAAQzjB,KAAKllC,EAAEiE,YAEjB,cAAcF,KAAKsH,GACvB,CACCA,EAAMs9C,QAAQsJ,MAAM5mD,EAAIm7C,UAAU,IAClC,IAAI0L,EAAO7mD,EAAIY,QAAQ,KAEnBimD,EAAO,IAEV7mD,EAAMA,EAAIm7C,UAAU,EAAG0L,IAM3B,OAAO7mD,GAcRY,QAAS,SAASs0C,EAAOn2C,GAExB,GAAa,MAATm2C,GAAwB,MAAPn2C,EAEpB,IAAK,IAAIuB,EAAI,EAAGA,EAAI40C,EAAMl9C,OAAQsI,IAEjC,GAAI40C,EAAM50C,IAAMvB,EAEf,OAAOuB,EAKV,OAAQ,GAcTwK,QAAS,SAASoqC,EAAOp9C,GAExB,GAAa,MAATo9C,GAAuB,MAANp9C,EAEpB,IAAK,IAAIwI,EAAI,EAAGA,EAAI40C,EAAMl9C,OAAQsI,IAEjCxI,EAAGo9C,EAAM50C,IAIX,OAAO40C,GAoBRz0C,OAAQ,SAAS1B,EAAKm2C,GAErB,IAAIj7C,EAAS,KAEb,GAAqB,iBAAX,EACV,CACC,IAAIO,EAAQ8iD,QAAQ18C,QAAQs0C,EAAOn2C,GAEnC,MAAOvE,GAAS,EAEf06C,EAAMr0C,OAAOrG,EAAO,GACpBP,EAAS8E,EACTvE,EAAQ8iD,QAAQ18C,QAAQs0C,EAAOn2C,GAIjC,IAAK,IAAItK,KAAOygD,EAEXA,EAAMzgD,IAAQsK,WAEVm2C,EAAMzgD,GACbwF,EAAS8E,GAIX,OAAO9E,GAoBP6sD,OAAQ,SAASpyD,EAAOqyD,EAAUC,EAAeC,GAEhD,QAAa,MAATvyD,GAAkB+C,MAAM/C,EAAMugC,WAA0B,MAAZ8xB,GAC/CryD,EAAMqyD,SAASxmD,eAAiBwmD,EAASxmD,iBAEjB,MAAjBymD,GACNtyD,EAAMinC,aAAaqrB,IAAkBC,IAkBxCC,eAAgB,SAASz0B,EAAUtoB,GAElC,IAAI1M,EAAS0M,EAEb,MAAiB,MAAV1M,EACP,CACC,GAAIA,GAAUg1B,EAEb,OAAO,EAGRh1B,EAASA,EAAOowB,WAGjB,OAAO,GAcTs5B,cAAe,SAAS78C,EAAM2qB,GAE7BA,EAAWA,GAAYgsB,YAAY0F,iBAEnC,IAAI39C,EAAW,GACX+d,EAAMzc,EAAKuqB,WAEf,MAAc,MAAP9N,EAEFA,EAAIkO,UAAYA,GAEnBjsB,EAASb,KAAK4e,GAGfA,EAAMA,EAAIgJ,YAGX,OAAO/mB,GAgBRo+C,WAAY,SAAS3M,EAAKnwC,EAAM+8C,GAE/B,IAAIrP,SAASE,SAAmC,MAAzB7lC,SAASkmC,cAAwBlmC,SAASkmC,aAAe,IAuC/E,OAAOkC,EAAI2M,WAAW98C,EAAM+8C,GArC5B,OAAQ/8C,EAAK2qB,UAEZ,KAAK,EAEJ,IAAItF,EAAU8qB,EAAIlkD,cAAc+T,EAAKy8C,UAErC,GAAIz8C,EAAKg9C,YAAch9C,EAAKg9C,WAAWtvD,OAAS,EAChD,CACC,IAAK,IAAIsI,EAAI,EAAGA,EAAIgK,EAAKg9C,WAAWtvD,OAAQsI,IAE3CqvB,EAAQL,aAAahlB,EAAKg9C,WAAWhnD,GAAGymD,SACvCz8C,EAAKqxB,aAAarxB,EAAKg9C,WAAWhnD,GAAGymD,WAGvC,GAAIM,GAAe/8C,EAAK2uB,YAAc3uB,EAAK2uB,WAAWjhC,OAAS,EAE9D,IAASsI,EAAI,EAAGA,EAAIgK,EAAK2uB,WAAWjhC,OAAQsI,IAE3CqvB,EAAQG,YAAYwtB,QAAQ8J,WAAW3M,EAAKnwC,EAAK2uB,WAAW34B,GAAI+mD,IAKnE,OAAO13B,EAGR,KAAK,EACF,KAAK,EACL,KAAK,EAEH,OAAO8qB,EAAInoC,eAAehI,EAAK5V,SAgBvC6yD,kBAAmB,WAElB,IAAI9M,EAAM,KAWT,OATGpoC,SAASm1C,gBAAkBn1C,SAASm1C,eAAeC,eAEtDhN,EAAMpoC,SAASm1C,eAAeC,eAAe,GAAI,GAAI,MAE7C5hD,OAAO6hD,gBAEfjN,EAAM,IAAIiN,cAAc,qBAGjBjN,GAwBTkN,SAAU,WAET,OAAI9hD,OAAO+hD,UAEH,SAASC,GAEf,IAAIC,EAAS,IAAIF,UAEjB,OAAOE,EAAOC,gBAAgBF,EAAK,aAK7B,SAASA,GAEf,IAAI5tD,EAASqjD,QAAQiK,oBAOrB,OANAttD,EAAO6K,OAAQ,EAEf7K,EAAO+tD,iBAAkB,EACzB/tD,EAAOguD,kBAAmB,EAC1BhuD,EAAOiuD,QAAQL,GAER5tD,GAtBA,GAgCVkuD,eAAgB,WAEf,OAAI91C,SAAS+1C,UAEL,WAEN/1C,SAAS+1C,UAAUC,SAGZxiD,OAAOyiD,aAER,WAEFziD,OAAOyiD,eAAeD,MAEzBxiD,OAAOyiD,eAAeD,QAEdxiD,OAAOyiD,eAAeC,iBAE9B1iD,OAAOyiD,eAAeC,mBAMjB,aAzBO,GA4ChBC,aAAc,SAASl+C,EAAMm+C,EAAKC,GAEjC,IAAIzuD,EAAS,GAEb,GAAY,MAARqQ,EAKH,GAHAm+C,EAAMA,GAAO,KACbC,EAASA,GAAU,GAEfp+C,EAAK2qB,UAAYgsB,YAAY0H,cACjC,CACC,IAAIj0D,EAAS4oD,QAAQzjB,KAAKyjB,QAAQsL,eAAet+C,IAE7C5V,EAAMsD,OAAS,GAElBiC,EAAOkO,KAAKugD,EAASpL,QAAQuL,aAAan0D,GAAS,UAIrD,CACCuF,EAAOkO,KAAKugD,EAAS,IAAMp+C,EAAKy8C,UAIhC,IAAIxyC,EAAQjK,EAAKg9C,WAEjB,GAAa,MAAT/yC,EAEH,IAAK,IAAIjU,EAAI,EAAGA,EAAIiU,EAAMvc,OAAQsI,IAClC,CACC,IAAIlB,EAAMk+C,QAAQuL,aAAat0C,EAAMjU,GAAG5L,OACxCuF,EAAOkO,KAAK,IAAMoM,EAAMjU,GAAGymD,SAAW,KAAO3nD,EAAM,KAOrD,IAAI2nB,EAAMzc,EAAKuqB,WAEf,GAAW,MAAP9N,EACJ,CACC9sB,EAAOkO,KAAK,OAEZ,MAAc,MAAP4e,EAEN9sB,EAAOkO,KAAKm1C,QAAQkL,aAAazhC,EAAK0hC,EAAKC,EAASD,IACpD1hC,EAAMA,EAAIgJ,YAGX91B,EAAOkO,KAAKugD,EAAS,KAAKp+C,EAAKy8C,SAAW,YAI1C9sD,EAAOkO,KAAK,QAKf,OAAOlO,EAAO08B,KAAK,KAcpBmyB,iBAAkB,SAASx+C,EAAMyZ,GAEhC,IAAIgD,EAAM,EAAWzc,EAAKy+C,gBAAkBz+C,EAAKylB,YAEjD,MAAc,MAAPhJ,GAAeA,EAAIkO,UAAYgsB,YAAY0H,cAClD,CACC,IAAIzvD,EAAO,EAAW6tB,EAAIgiC,gBAAkBhiC,EAAIgJ,YAC5C9mB,EAAOq0C,QAAQsL,eAAe7hC,GAED,GAA7Bu2B,QAAQzjB,KAAK5wB,GAAMjR,QAEtB+uB,EAAI8G,WAAWgC,YAAY9I,GAG5BA,EAAM7tB,IAeR2vD,aAAc,SAASjqB,EAAGoqB,GAezB,OAbApqB,EAAIjmC,OAAOimC,GAAK,IAEhBA,EAAIA,EAAEv9B,QAAQ,KAAK,SACnBu9B,EAAIA,EAAEv9B,QAAQ,KAAK,UACnBu9B,EAAIA,EAAEv9B,QAAQ,MAAM,SACpBu9B,EAAIA,EAAEv9B,QAAQ,KAAK,QACnBu9B,EAAIA,EAAEv9B,QAAQ,KAAK,SAEJ,MAAX2nD,GAAmBA,KAEtBpqB,EAAIA,EAAEv9B,QAAQ,MAAO,UAGfu9B,GAYRqqB,MAAO,SAAS3+C,GAEf,OAAe,MAARA,GAA+B,iCAAfA,EAAK4+C,QAiB7BC,OAAQ,SAAS7+C,EAAM8+C,GAEtB,IAAIvB,EAAM,GAEV,GAA4B,MAAxBhiD,OAAOwjD,cACX,CACC,IAAIC,EAAgB,IAAID,cACxBxB,EAAMyB,EAAcC,kBAAkBj/C,QAElB,MAAZA,EAAKu9C,MAEbA,EAAMv9C,EAAKu9C,IAAIxmD,QAAQ,eAAgB,IACtCA,QAAQ,SAAU,KAClBA,QAAQ,QAAS,OAOnB,OAHA+nD,EAAWA,GAAY,QACvBvB,EAAMA,EAAIxmD,QAAQ,MAAO+nD,GAElBvB,GAYR2B,0BAA2B,SAASC,GAGnC,IAAIC,EAAS,CAAC,aAAc,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,MAAO,QAAS,MAC9FpnD,EAAM,GAEV,SAASqnD,EAAUC,GAGlB,GAAmB,GAAfA,EAAK5xD,QAAoC,MAApB4xD,EAAK,GAAG7C,UACX,MAArB6C,EAAK,GAAGj1B,UAKN,IAAK,IAAIr0B,EAAI,EAAGA,EAAIspD,EAAK5xD,OAAQsI,IACjC,CACI,IAAIupD,EAAOD,EAAKtpD,GAGD,MAAjBupD,EAAK9C,UAAsC,MAAlB8C,EAAKl1B,YAChB,GAAfi1B,EAAK5xD,QAAoB,GAALsI,IAA6B,OAAjBupD,EAAK9C,UACP,QAAhC8C,EAAKl1B,UAAUp0B,cAEZ+B,EAAI6F,KAAK,OAIgB,IAAlB0hD,EAAK50B,UAAoC,IAAlB40B,EAAK50B,SAE3B40B,EAAKC,UAAU9xD,OAAS,GAE3BsK,EAAI6F,KAAK0hD,EAAKC,WAGW,IAAlBD,EAAK50B,UAAkB40B,EAAK5wB,WAAWjhC,OAAS,GAE9D2xD,EAAUE,EAAK5wB,YAGN34B,EAAIspD,EAAK5xD,OAAS,GAAKslD,QAAQ18C,QAAQ8oD,EAAQE,EAAKtpD,EAAI,GAAGymD,WAAa,GAE3EzkD,EAAI6F,KAAK,QAQhB,OAFHwhD,EAAUF,GAEAnnD,EAAIq0B,KAAK,KAQpBozB,wBAAyB,SAAS/pD,EAAKwrB,GAGtC,IAAI8d,EAAU,GAEd,MAAOtpC,EAAIhI,OAAS,GAAmC,MAA9BgI,EAAIyB,OAAOzB,EAAIhI,OAAS,GAEhDgI,EAAMA,EAAIm7C,UAAU,EAAGn7C,EAAIhI,OAAS,GACpCsxC,GAAW9d,EAGZ,OAAOxrB,EAAMspC,GAYdsf,eAAgB,SAASt+C,GAGxB,OAAI0tC,SAASE,YAA4BvgD,IAAnB2S,EAAK0/C,UAEnB1/C,EAAK0/C,UAII,MAAR1/C,EAAgBA,OAA2B3S,IAArB2S,EAAK2lB,YAA6B,OAAS,eAAiB,IAc5FD,eAAgB,SAAS1lB,EAAMrB,QAEPtR,IAAnB2S,EAAK0/C,UAER1/C,EAAK0/C,UAAY/gD,EAIjBqB,OAA2B3S,IAArB2S,EAAK2lB,YAA6B,OAAS,eAAiBhnB,GAepEs0C,aAAc,WAEb,OAAIvF,SAASE,MAEL,SAAS5tC,GAEf,OAAY,MAARA,EAEIA,EAAKqqB,UAGN,IAKD,SAASrqB,GAEf,GAAY,MAARA,EACJ,CACC,IAAI2/C,EAAa,IAAIZ,cACrB,OAAOY,EAAWV,kBAAkBj/C,GAGrC,MAAO,IAxBI,GAwCd4/C,aAAc,WAEb,OAAIlS,SAASE,MAEL,SAAS5tC,GAEf,GAAY,MAARA,EACJ,CACC,GAAsB,MAAlBA,EAAK6/C,UAER,OAAO7/C,EAAK6/C,UAIZ,IAAIpjC,EAAM,GACVA,EAAI5e,KAAK,IAAImC,EAAKy8C,UAElB,IAAIxyC,EAAQjK,EAAKg9C,WAEjB,GAAa,MAAT/yC,EAEH,IAAK,IAAIjU,EAAI,EAAGA,EAAIiU,EAAMvc,OAAQsI,IAClC,CACC,IAAI5L,EAAQ6f,EAAMjU,GAAG5L,MAER,MAATA,GAAiBA,EAAMsD,OAAS,IAEnC+uB,EAAI5e,KAAK,KACT4e,EAAI5e,KAAKoM,EAAMjU,GAAGymD,UAClBhgC,EAAI5e,KAAK,MACT4e,EAAI5e,KAAKzT,GACTqyB,EAAI5e,KAAK,MAgBZ,OAX6B,GAAzBmC,EAAKqqB,UAAU38B,OAElB+uB,EAAI5e,KAAK,OAIT4e,EAAI5e,KAAK,KACT4e,EAAI5e,KAAKmC,EAAKqqB,WACd5N,EAAI5e,KAAK,KAAKmC,EAAKy8C,SAAS,MAGtBhgC,EAAI4P,KAAK,IAIlB,MAAO,IAKD,SAASrsB,GAEf,GAAY,MAARA,EACJ,CACC,IAAI2/C,EAAa,IAAIZ,cACrB,OAAOY,EAAWV,kBAAkBj/C,GAGrC,MAAO,IAhEI,GAgFdqiC,MAAO,SAASlvC,EAAQwL,GAEvB,IAAIwxC,EAAMh9C,EAAOk7B,cACbruB,EAAOmwC,EAAInoC,eAAerJ,GAO9B,OALc,MAAVxL,GAEHA,EAAOqyB,YAAYxlB,GAGbA,GAcR00C,QAAS,SAASvhD,EAAQwL,GAEzB,IAAIwxC,EAAMh9C,EAAOk7B,cACbruB,EAAOmwC,EAAInoC,eAAerJ,GAQ9B,OANc,MAAVxL,IAEHA,EAAOqyB,YAAYxlB,GACnB7M,EAAOqyB,YAAYzd,SAAS9b,cAAc,QAGpC+T,GAYR8/C,GAAI,SAAS3sD,EAAQ4sD,GAEpBA,EAAQA,GAAS,EAGjB,IAFA,IAAID,EAAK,KAEA9pD,EAAI,EAAGA,EAAI+pD,EAAO/pD,IAEZ,MAAV7C,IAEH2sD,EAAK3sD,EAAOk7B,cAAcpiC,cAAc,MACxCkH,EAAOqyB,YAAYs6B,IAIrB,OAAOA,GAuBRjL,OAAQ,SAASmL,EAAOpL,EAAOzE,GAE9BA,EAAc,MAAPA,EAAeA,EAAMpoC,SAE5B,IAAI8sC,EAAS1E,EAAIlkD,cAAc,UAQ/B,OAPA+mD,QAAQ3Q,MAAMwS,EAAQmL,GAEtB1L,QAAQD,YAAYQ,EAAQ,SAAS,SAAS/B,GAE7C8B,EAAM9B,MAGA+B,GAcRoL,KAAM,SAAS9sD,EAAQwL,GAEtB,IAAI4I,EAAIQ,SAAS9b,cAAc,KAQ/B,OAPA+mD,QAAQ3Q,MAAM96B,EAAG5I,GAEH,MAAVxL,GAEHA,EAAOqyB,YAAYje,GAGbA,GAUR24C,+BAAgC,SAASlgD,GAExCA,EAAK0U,MAAM2M,QAAU,2DACpBqsB,SAASsD,cAAgB,4CAiB3BmP,WAAY,SAAShtD,EAAQwL,EAAMyhD,EAAQC,EAAQC,GAElD,OAAOtN,QAAQ/C,KAAK98C,EAAQwL,GAAM,WAEjCyhD,EAAOG,QAAQF,KACbC,IAoBJE,WAAY,SAASrtD,EAAQwL,EAAMyhD,EAAQK,EAAW50B,EAAKy0B,GAE1D,OAAOtN,QAAQ/C,KAAK98C,EAAQwL,GAAM,WAEjCyhD,EAAOK,GAAW50B,KAChBy0B,IAgBJrQ,KAAM,SAAS98C,EAAQwL,EAAMi2C,EAAO0L,GAEnC,IAAIl0D,EAAI2b,SAAS9b,cAAc,QAmB/B,OAjBAG,EAAEsoB,MAAMgsC,MAAQ,OAChBt0D,EAAEsoB,MAAMisC,eAAiB,YACzBv0D,EAAEsoB,MAAM6mC,OAAS,UAEN,MAAP+E,IAEHl0D,EAAEsoB,MAAMksC,YAAcN,EAAI,MAG3BhM,QAAQD,YAAYjoD,EAAG,QAASwoD,GAChC5B,QAAQ3Q,MAAMj2C,EAAGuS,GAEH,MAAVxL,GAEHA,EAAOqyB,YAAYp5B,GAGbA,GAQRy0D,gBAAiB,WAEhB,IAAIlzD,EAAIoa,SAASgzB,KACb/pB,EAAIjJ,SAAS2nC,gBAEjB,IAEC,OAAO,IAAIiI,YAAY,EAAG,EAAGhqD,EAAE+lD,aAAe1iC,EAAE0iC,YAAa1mD,KAAKwD,IAAI7C,EAAE8lD,cAAgB,EAAGziC,EAAEyiC,eAE9F,MAAO16C,GAEN,OAAO,IAAI4+C,cAUbmJ,IAAK,SAAS9gD,GAEb,IAAI+gD,EAAK/N,QAAQ6N,kBACbjlB,EAAOzZ,SAASniB,EAAKghD,YACrBpO,EAAQzwB,SAASniB,EAAKihD,aAEtBC,EAASlO,QAAQmO,wBAAwBnhD,EAAKquB,eAC9C+yB,EAAKF,EAAOpV,EACZuV,EAAKH,EAAOxJ,EAIZ4J,GAFIv5C,SAASgzB,KACThzB,SAAS2nC,gBACL,EAAOqR,EAAGnO,OAElBhX,EAAOgX,EAAQ0O,IAElBthD,EAAK0U,MAAMknB,KAAO5uC,KAAKwD,IAAI4wD,EAAIE,EAAQ1O,GAAS,MAGjD,IAAI9W,EAAM3Z,SAASniB,EAAKuhD,WACpB9O,EAAStwB,SAASniB,EAAKg7B,cAEvBwmB,EAASH,EAAKN,EAAGtO,OAEjB3W,EAAM2W,EAAS+O,IAElBxhD,EAAK0U,MAAMonB,IAAM9uC,KAAKwD,IAAI6wD,EAAIG,EAAS/O,GAAU,OA8BnDyE,KAAM,SAASuK,GAEd,IAAI1K,EAAM,IAAI2K,aAAaD,EAAK,KAAM,OAAO,GAG7C,OAFA1K,EAAI4K,OAEG5K,GA2CR5qD,IAAK,SAASs1D,EAAKG,EAAQC,EAASC,EAAQ9qC,EAAS+qC,GAEpD,IAAIhL,EAAM,IAAI2K,aAAaD,EAAK,KAAM,OAStC,OAPc,MAAVK,GAEH/K,EAAIiL,UAAUF,GAGf/K,EAAI4K,KAAKC,EAAQC,EAAS7qC,EAAS+qC,GAE5BhL,GAgBRkL,OAAQ,SAASC,EAAMN,EAAQC,GAe9B,IAbA,IAAIM,EAASD,EAAKx0D,OACdiC,EAAS,GACTyyD,EAAS,EACTh8C,EAAM,WAEK,GAAVg8C,GAA0B,MAAXP,GAElBA,IAGDO,KAGQpsD,EAAI,EAAGA,EAAIksD,EAAKx0D,OAAQsI,KAEhC,SAAUyrD,EAAKvxD,GAEd8iD,QAAQ7mD,IAAIs1D,GAAK,SAAS1K,GAEzB,IAAIsL,EAAStL,EAAIuL,YAEbD,EAAS,KAAOA,EAAS,IAE5Bj8C,KAIAzW,EAAOO,GAAS6mD,EAChBoL,IAEc,GAAVA,GAEHP,EAAOjyD,MAGPyW,IApBJ,CAqBG87C,EAAKlsD,GAAIA,GAGC,GAAVmsD,GAEHP,EAAOjyD,IA8BTktC,KAAM,SAAS4kB,EAAK/3C,EAAQk4C,EAAQC,GAEnC,OAAO,IAAIH,aAAaD,EAAK/3C,GAAQi4C,KAAKC,EAAQC,IAkBnDU,OAAQ,SAASd,EAAK/3C,EAAQymC,EAAKj/C,GAElC,OAAO,IAAIwwD,aAAaD,EAAK/3C,GAAQ84C,SAASrS,EAAKj/C,IAgBpDuxD,SAAU,SAAShB,EAAKtR,EAAKyR,GAExBlU,SAASE,MAEZuC,EAAIuS,mBAAqB,WAEF,GAAlBvS,EAAIwS,YAEPf,KAMFzR,EAAI1zC,iBAAiB,OAAQmlD,GAAQ,GAGtCzR,EAAI+G,KAAKuK,IAgBVjqB,SAAU,SAASoT,EAAOzgD,EAAKotD,GAE9B,IAAIntD,EAAkB,MAATwgD,EAAiBA,EAAMzgD,GAAO,KAO3C,OALa,MAATC,IAEHA,EAAQmtD,GAGFntD,GAiBRw4D,UAAW,SAAShY,EAAOzgD,EAAKotD,GAE/B,IAAIntD,EAAkB,MAATwgD,EAAiBA,EAAMzgD,GAAO,KAO3C,OALa,MAATC,IAEHA,EAAQmtD,GAAgB,GAGlBz1B,OAAO13B,IAiBfy4D,SAAU,SAASjY,EAAOzgD,EAAKotD,GAE9B,IAAIntD,EAAkB,MAATwgD,EAAiBA,EAAMzgD,GAAO,KAW3C,OATa,MAATC,EAEHA,EAAQmtD,EAEAntD,GAASusD,YAAYC,OAE7BxsD,EAAQ,MAGFA,GAoBRknB,MAAO,SAAS7c,EAAKquD,EAAY5gD,GAEhCA,EAAsB,MAAXA,GAAmBA,EAC9B,IAAIoP,EAAQ,KAEZ,GAAW,MAAP7c,GAA0C,mBAApBA,EAAe,YAIrC,IAAK,IAAIuB,KAFZsb,EAAQ,IAAI7c,EAAIoqB,YAECpqB,EAETuB,GAAKs/C,iBAAiBC,aAA6B,MAAduN,GACxC9P,QAAQ18C,QAAQwsD,EAAY9sD,GAAK,KAE5BkM,GAA6B,iBAAXzN,EAAIuB,GAMpBsb,EAAMtb,GAAKvB,EAAIuB,GAJfsb,EAAMtb,GAAKg9C,QAAQ1hC,MAAM7c,EAAIuB,KAUvC,OAAOsb,GAaXyxC,YAAa,SAAS32D,EAAGuB,GAExB,GAAU,MAALvB,GAAkB,MAALuB,GAAoB,MAALvB,GAAkB,MAALuB,GACvC,MAALvB,GAAkB,MAALuB,GAAavB,EAAEsB,QAAUC,EAAED,OAEzC,OAAO,EAEH,GAAS,MAALtB,GAAkB,MAALuB,EAErB,IAAK,IAAIqI,EAAI,EAAGA,EAAI5J,EAAEsB,OAAQsI,IAE7B,GAAI5J,EAAE4J,IAAMrI,EAAEqI,IAAe,MAAR5J,EAAE4J,KAAe5J,EAAE4J,GAAG4hD,OAAOjqD,EAAEqI,IAEnD,OAAO,EAKV,OAAO,GAcRgtD,aAAc,SAAS52D,EAAGuB,GAGzB,IAAIoyD,EAAQ,EAEZ,GAAU,MAAL3zD,GAAkB,MAALuB,GAAoB,MAALvB,GAAkB,MAALuB,GACvC,MAALvB,GAAkB,MAALuB,GAAavB,EAAEsB,QAAUC,EAAED,OAEzC,OAAO,EAEH,GAAS,MAALtB,GAAkB,MAALuB,EACtB,CACC,IAAK,IAAIxD,KAAOwD,EAEfoyD,IAGD,IAAK,IAAI51D,KAAOiC,EAIf,GAFA2zD,MAEM/M,QAAQ7lD,MAAMf,EAAEjC,MAAU6oD,QAAQ7lD,MAAMQ,EAAExD,MAAUiC,EAAEjC,IAAQwD,EAAExD,GAErE,OAAO,EAKV,OAAgB,GAAT41D,GAQRkD,iBAAkB,SAAS7sD,GAK1B,IAHA,IAAI8sD,EAAO,IAAIxN,aACX/lD,EAAS,GAEJqG,EAAI,EAAGA,EAAII,EAAI1I,OAAQsI,IAE1BktD,EAAK/2D,IAAIiK,EAAIJ,MAEjBrG,EAAOkO,KAAKzH,EAAIJ,IAChBktD,EAAKvN,IAAIv/C,EAAIJ,IAAI,IAInB,OAAOrG,GAQRxC,MAAO,SAAS/C,GAEf,MAAwB,iBAAX,GAAuB+C,MAAM/C,IAyB3C6N,OAAQ,SAASu9C,EAAM2N,GAEtB,IAAI94D,EAAI,aACRA,EAAEmC,UAAY22D,EAAU32D,UAExBgpD,EAAKhpD,UAAY,IAAInC,EACrBmrD,EAAKhpD,UAAUqyB,YAAc22B,GAY9BlnD,SAAU,SAASmG,GAEf,IAAI2uD,EAAS,GAEb,IAAK,IAAIptD,KAAKvB,EAEb,IAEC,GAAc,MAAVA,EAAIuB,GAEDotD,GAAUptD,EAAI,mBAEhB,GAAsB,mBAAXvB,EAAIuB,GAEbotD,GAAUptD,EAAI,wBAEb,GAAsB,iBAAXvB,EAAIuB,GACpB,CACC,IAAIw/C,EAAOxC,QAAQyC,gBAAgBhhD,EAAIuB,GAAG6oB,aACvCukC,GAAUptD,EAAI,QAAUw/C,EAAO,WAI/B4N,GAAUptD,EAAI,MAAQvB,EAAIuB,GAAK,KAGvC,MAAO+C,GAENqqD,GAAUptD,EAAI,IAAM+C,EAAEojD,QAIxB,OAAOiH,GAQXC,UAAW,SAASC,GAEnB,OAAOt2D,KAAKu2D,GAAKD,EAAM,KAQxBE,SAAU,SAASC,GAElB,OAAa,IAANA,EAAYz2D,KAAKu2D,IAQzBG,YAAa,SAASC,EAAIC,EAAItL,EAAIC,EAAIsL,EAAOC,EAAcC,EAAWjY,EAAG4L,GAKlE,GAHN5L,GAAK6X,EACLjM,GAAKkM,EAEY,IAAPtL,GAAmB,IAAPC,EAEf,OAAO5oD,EAGR,IAAIq0D,EAAKD,EACLE,EAAOJ,EACXvL,EAAKtrD,KAAKk3D,IAAI5L,GACdC,EAAKvrD,KAAKk3D,IAAI3L,GACd,IAWI4L,EAXA3sD,GAAOs0C,EAAI,EACXsY,GAAO1M,EAAI,EACX2M,EAAOr3D,KAAKs3D,IAAIL,EAAOj3D,KAAKu2D,GAAK,KACjCgB,EAAOv3D,KAAKw3D,IAAIP,EAAOj3D,KAAKu2D,GAAK,KACjCkB,EAAMJ,EAAO7sD,EAAM+sD,EAAOH,EAC1BM,GAAO,EAAIH,EAAO/sD,EAAM6sD,EAAOD,EAC/BO,EAAOF,EAAMA,EACbG,EAAOF,EAAMA,EACbG,EAAMvM,EAAKA,EACXwM,EAAMvM,EAAKA,EACXwM,EAAQJ,EAAOE,EAAMD,EAAOE,EAGhC,GAAIC,EAAQ,EAEXzM,EAAKtrD,KAAKg4D,KAAKD,GAASzM,EACxBC,EAAKvrD,KAAKg4D,KAAKD,GAASxM,EACxB4L,EAAM,MAGP,CACC,IAAIc,EAAO,EAEPnB,IAAiBE,IAEpBiB,GAAQ,GAGTd,EAAMc,EAAOj4D,KAAKg4D,MAAMH,EAAMC,EAAMD,EAAMD,EAAOE,EAAMH,IAASE,EAAMD,EAAOE,EAAMH,IAGpF,IAAIO,EAAMf,EAAM7L,EAAKoM,EAAMnM,EACvB4M,GAAO,EAAIhB,EAAM5L,EAAKkM,EAAMnM,EAC5B8M,EAAKf,EAAOa,EAAMX,EAAOY,EAAMrZ,EAAI,EACnCuZ,EAAKd,EAAOW,EAAMb,EAAOc,EAAMzN,EAAI,EACnC+L,EAAMz2D,KAAKs4D,OAAOZ,EAAMS,GAAO5M,GAAKkM,EAAMS,GAAO5M,GAAMtrD,KAAKs4D,MAAM,EAAG,GACrEC,EAAM9B,GAAO,EAAKA,EAAM,EAAIz2D,KAAKu2D,GAAKE,EAC1CA,EAAMz2D,KAAKs4D,QAAQZ,EAAMS,GAAO5M,IAAMkM,EAAMS,GAAO5M,GAAMtrD,KAAKs4D,OAAOZ,EAAMS,GAAO5M,GAAKkM,EAAMS,GAAO5M,GACpG,IAAIkN,EAAM/B,GAAO,EAAKA,EAAM,EAAIz2D,KAAKu2D,GAAKE,EAEhC,GAANO,GAAWwB,EAAK,EAEnBA,GAAM,EAAIx4D,KAAKu2D,GAED,GAANS,GAAWwB,EAAK,IAExBA,GAAM,EAAIx4D,KAAKu2D,IAoBhB,IAjBA,IAAIkC,EAAW,EAALD,EAASx4D,KAAKu2D,GACpBmC,EAAM14D,KAAKD,KAAK04D,EAAM,GAAK,EAAIA,EAAMA,GACrCE,EAAOH,EAAKE,EACZ5M,EAAI,EAAE,EAAI9rD,KAAKw3D,IAAImB,EAAO,GAAK34D,KAAKw3D,IAAImB,EAAO,GAAK34D,KAAKw3D,IAAImB,EAAO,GACpEC,EAASvB,EAAO/L,EAChBuN,EAASxB,EAAO9L,EAChBuN,EAASvB,EAAOjM,EAChByN,EAASxB,EAAOhM,EAChByN,EAAKh5D,KAAKs3D,IAAIiB,GACdU,EAAKj5D,KAAKw3D,IAAIe,GACdW,GAAMpN,GAAK8M,EAASK,EAAKF,EAASC,GAClCG,GAAMrN,GAAKgN,EAASG,EAAKJ,EAASG,GAClCI,EAAK,EACLC,EAAK,EAEX12D,EAAS,GAEEoF,EAAI,EAAGA,EAAI2wD,IAAO3wD,EAC3B,CACIwwD,GAAMI,EACNK,EAAKh5D,KAAKs3D,IAAIiB,GACdU,EAAKj5D,KAAKw3D,IAAIe,GAEda,EAAKR,EAASI,EAAKD,EAASE,EAAKb,EACjCiB,EAAKP,EAASE,EAAKH,EAASI,EAAKZ,EACjC,IAAI1pB,GAAMmd,GAAK8M,EAASK,EAAKF,EAASC,GAClCnqB,GAAMid,GAAKgN,EAASG,EAAKJ,EAASG,GAGlC91D,EAAY,EAAJ6E,EACZpF,EAAOO,GAAS4xB,OAAOokC,EAAKvC,GAC5Bh0D,EAAOO,EAAQ,GAAK4xB,OAAOqkC,EAAKvC,GAChCj0D,EAAOO,EAAQ,GAAK4xB,OAAOskC,EAAKzqB,EAAKgoB,GACrCh0D,EAAOO,EAAQ,GAAK4xB,OAAOukC,EAAKxqB,EAAK+nB,GACrCj0D,EAAOO,EAAQ,GAAK4xB,OAAOskC,EAAKzC,GAChCh0D,EAAOO,EAAQ,GAAK4xB,OAAOukC,EAAKzC,GAEzCsC,EAAKE,EAAKzqB,EACDwqB,EAAKE,EAAKxqB,EAGd,OAAOlsC,GAed22D,eAAgB,SAAStO,EAAMuO,EAAUC,GAElC,IAAI72D,EAAS,KAEb,GAAY,MAARqoD,GAA4B,MAAZuO,GAAgC,GAAZA,EACxC,CACI,IAAI9C,EAAMzQ,QAAQqQ,UAAUkD,GACxBjC,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAEnB+C,EAAY,MAANA,EAAcA,EAAK,IAAI/O,QAAQO,EAAKlM,EAAIkM,EAAKpF,MAAQ,EAAGoF,EAAKN,EAAKM,EAAKvF,OAAS,GAEtF,IAAIgU,EAAK,IAAIhP,QAAQO,EAAKlM,EAAGkM,EAAKN,GAC9BgP,EAAK,IAAIjP,QAAQO,EAAKlM,EAAIkM,EAAKpF,MAAOoF,EAAKN,GAC3CiP,EAAK,IAAIlP,QAAQiP,EAAG5a,EAAGkM,EAAKN,EAAIM,EAAKvF,QACrCmU,EAAK,IAAInP,QAAQO,EAAKlM,EAAG6a,EAAGjP,GAEhC+O,EAAKzT,QAAQ6T,gBAAgBJ,EAAInC,EAAKE,EAAKgC,GAC3CE,EAAK1T,QAAQ6T,gBAAgBH,EAAIpC,EAAKE,EAAKgC,GAC3CG,EAAK3T,QAAQ6T,gBAAgBF,EAAIrC,EAAKE,EAAKgC,GAC3CI,EAAK5T,QAAQ6T,gBAAgBD,EAAItC,EAAKE,EAAKgC,GAE3C72D,EAAS,IAAIgoD,YAAY8O,EAAG3a,EAAG2a,EAAG/O,EAAG,EAAG,GACxC/nD,EAAO2D,IAAI,IAAIqkD,YAAY+O,EAAG5a,EAAG4a,EAAGhP,EAAG,EAAG,IAC1C/nD,EAAO2D,IAAI,IAAIqkD,YAAYgP,EAAG7a,EAAG6a,EAAGjP,EAAG,EAAG,IAC1C/nD,EAAO2D,IAAI,IAAIqkD,YAAYiP,EAAG9a,EAAG8a,EAAGlP,EAAG,EAAG,IAG9C,OAAO/nD,GAQdk3D,gBAAiB,SAASC,EAAIxC,EAAKE,EAAK52D,GAEvCA,EAAU,MAALA,EAAaA,EAAI,IAAI6pD,QAC1B,IAAI3L,EAAIgb,EAAGhb,EAAIl+C,EAAEk+C,EACb4L,EAAIoP,EAAGpP,EAAI9pD,EAAE8pD,EAEbqP,EAAKjb,EAAIwY,EAAM5M,EAAI8M,EACnBwC,EAAKtP,EAAI4M,EAAMxY,EAAI0Y,EAEvB,OAAO,IAAI/M,QAAQsP,EAAKn5D,EAAEk+C,EAAGkb,EAAKp5D,EAAE8pD,IAgBrCuP,mBAAoB,SAASC,EAAUC,EAAMn2D,EAAQumD,GAEpD,IAAIntD,EAAQ4oD,QAAQxb,SAAS0vB,EAASxyC,MAAOiiC,YAAYyQ,sBACxDpU,QAAQxb,SAAS2vB,EAAKzyC,MAAO,EAAWiiC,YAAY0Q,6BACnD1Q,YAAY2Q,6BAA8B,OAE5C,GAAa,MAATl9D,EAEH,OAAOmtD,EAIP,IAAIgQ,EAAan9D,EAAMkE,WACnBk5D,EAAc7Q,YAAY8Q,oBAC1BC,EAA4B1U,QAAQxb,SAAS0vB,EAASxyC,MAAOiiC,YAAYgR,+BAAgC,GACzGpB,EAAW,EAEkB,GAA7BmB,IAEHnB,EAAWvT,QAAQxb,SAAS0vB,EAASxyC,MAAOiiC,YAAYiR,eAAgB,IAGzE,IAAIC,EAAO,EAqBX,GAnBItB,EAAW,IAEdsB,EAAO,EAEHtB,GAAY,MAEfsB,EAAO,IAGAtB,GAAY,KAEpBsB,EAAO,EAEHtB,IAAa,MAEhBsB,EAAO,IAILN,EAAWjxD,QAAQqgD,YAAYmR,kBAAoB,EAEtD,OAAQD,GAEP,KAAK,EACJL,GAAe7Q,YAAYoR,qBAC3B,MACD,KAAK,EACJP,GAAe7Q,YAAYqR,oBAC3B,MACD,KAAK,EACJR,GAAe7Q,YAAYsR,qBAC3B,MACD,KAAK,EACJT,GAAe7Q,YAAYuR,oBAC3B,MAGH,GAAIX,EAAWjxD,QAAQqgD,YAAYwR,iBAAmB,EAErD,OAAQN,GAEP,KAAK,EACJL,GAAe7Q,YAAYuR,oBAC3B,MACD,KAAK,EACJV,GAAe7Q,YAAYoR,qBAC3B,MACD,KAAK,EACJP,GAAe7Q,YAAYqR,oBAC3B,MACD,KAAK,EACJR,GAAe7Q,YAAYsR,qBAC3B,MAGH,GAAIV,EAAWjxD,QAAQqgD,YAAYyR,kBAAoB,EAEtD,OAAQP,GAEP,KAAK,EACJL,GAAe7Q,YAAYsR,qBAC3B,MACD,KAAK,EACJT,GAAe7Q,YAAYuR,oBAC3B,MACD,KAAK,EACJV,GAAe7Q,YAAYoR,qBAC3B,MACD,KAAK,EACJP,GAAe7Q,YAAYqR,oBAC3B,MAGH,GAAIT,EAAWjxD,QAAQqgD,YAAY0R,iBAAmB,EAErD,OAAQR,GAEP,KAAK,EACJL,GAAe7Q,YAAYqR,oBAC3B,MACD,KAAK,EACJR,GAAe7Q,YAAYsR,qBAC3B,MACD,KAAK,EACJT,GAAe7Q,YAAYuR,oBAC3B,MACD,KAAK,EACJV,GAAe7Q,YAAYoR,qBAC3B,MAIH,OAAOP,GAUTc,uBAAwB,SAASC,GAEhC,IAAI54D,EAAS,EAOb,OALAA,GAAU44D,EAAa5R,YAAYuR,sBAAwB,EAC3Dv4D,IAAW44D,EAAa5R,YAAYoR,uBAAyB,EAC7Dp4D,IAAW44D,EAAa5R,YAAYsR,uBAAyB,EAC7Dt4D,IAAW44D,EAAa5R,YAAYqR,sBAAwB,EAErDr4D,GASR64D,mBAAoB,SAAS5qB,EAAOkO,EAAG4L,GAEtC,IAAIxnD,GAAS,EAEb,GAAI0tC,EAAM6qB,eAAe/6D,OAAS,EAKjC,IAHA,IAAIkd,EAAOgzB,EAAM6qB,eAAe,GAC5Bh4D,EAAM,KAEDuF,EAAI,EAAGA,EAAI4nC,EAAM6qB,eAAe/6D,OAAQsI,IACjD,CACC,IAAIwrB,EAAUoc,EAAM6qB,eAAezyD,GAC/B0yD,EAAO1V,QAAQ2V,YAAY/9C,EAAKkhC,EAAGlhC,EAAK8sC,EAC3Cl2B,EAAQsqB,EAAGtqB,EAAQk2B,EAAG5L,EAAG4L,IAEf,MAAPjnD,GAAei4D,EAAOj4D,KAEzBA,EAAMi4D,EACNx4D,EAAQ8F,EAAI,GAGb4U,EAAO4W,EAIT,OAAOtxB,GASR04D,kBAAmB,SAAU5Q,EAAM6Q,EAAGn0C,EAAOo0C,EAAOC,GAEnD,IAAI/3C,EAAIgiC,QAAQxb,SAAS9iB,EAAOiiC,YAAYqS,gBAAiBrS,YAAY0R,gBASzE,GARAS,EAAkB,MAATA,EAAiBA,EAAQ9V,QAAQxb,SAAS9iB,EAAOiiC,YAAYsS,aAAa,GACnFF,EAAkB,MAATA,EAAiBA,EAAQ/V,QAAQxb,SAAS9iB,EAAOiiC,YAAYuS,aAAa,GAEnFL,EAAE/c,EAAI9+C,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGxD,KAAKyD,IAAIunD,EAAKpF,MAAOiW,EAAE/c,KACpD+c,EAAEnR,EAAI1qD,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGxD,KAAKyD,IAAIunD,EAAKvF,OAAQoW,EAAEnR,KACrDmR,EAAEjW,MAAQ5lD,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGxD,KAAKyD,IAAIunD,EAAKpF,MAAOiW,EAAEjW,SACxDiW,EAAEpW,OAASzlD,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGxD,KAAKyD,IAAIunD,EAAKvF,OAAQoW,EAAEpW,UAErDsW,IAAU/3C,GAAK2lC,YAAYyR,iBAAmBp3C,GAAK2lC,YAAYmR,kBAClEgB,IAAU93C,GAAK2lC,YAAY0R,gBAAkBr3C,GAAK2lC,YAAYwR,gBAChE,CACC,IAAI1rC,EAAMosC,EAAE/c,EACZ+c,EAAE/c,EAAI+c,EAAEjW,MACRiW,EAAEjW,MAAQn2B,EAGX,GAAKqsC,IAAU93C,GAAK2lC,YAAYyR,iBAAmBp3C,GAAK2lC,YAAYmR,kBAClEiB,IAAU/3C,GAAK2lC,YAAY0R,gBAAkBr3C,GAAK2lC,YAAYwR,gBAChE,CACK1rC,EAAMosC,EAAEnR,EACZmR,EAAEnR,EAAImR,EAAEpW,OACRoW,EAAEpW,OAASh2B,EAGZ,IAAI2sC,EAAKzR,YAAYoB,cAAc8P,GAwBnC,OAtBI73C,GAAK2lC,YAAYyR,iBAEpBgB,EAAG1R,EAAImR,EAAE/c,EACTsd,EAAGtd,EAAI+c,EAAEpW,OACT2W,EAAGxW,MAAQiW,EAAEnR,EACb0R,EAAG3W,OAASoW,EAAEjW,OAEN5hC,GAAK2lC,YAAYwR,gBAEzBiB,EAAG1R,EAAImR,EAAEpW,OACT2W,EAAGtd,EAAI+c,EAAEjW,MACTwW,EAAGxW,MAAQiW,EAAE/c,EACbsd,EAAG3W,OAASoW,EAAEnR,GAEN1mC,GAAK2lC,YAAYmR,kBAEzBsB,EAAG1R,EAAImR,EAAEjW,MACTwW,EAAGtd,EAAI+c,EAAEnR,EACT0R,EAAGxW,MAAQiW,EAAEpW,OACb2W,EAAG3W,OAASoW,EAAE/c,GAGR,IAAI6L,YAAYK,EAAKlM,EAAIsd,EAAGtd,EAAGkM,EAAKN,EAAI0R,EAAG1R,EAAGM,EAAKpF,MAAQwW,EAAGxW,MAAQwW,EAAGtd,EAAGkM,EAAKvF,OAAS2W,EAAG3W,OAAS2W,EAAG1R,IASjH2R,kBAAmB,SAAUC,EAAKC,EAAQxqB,GAIzC,IAFA,IAAItuC,EAAM,KAEDuF,EAAI,EAAGA,EAAIszD,EAAI57D,OAAS,EAAGsI,IACpC,CACC,IAAI8wD,EAAK9T,QAAQwW,aAAaF,EAAItzD,GAAG81C,EAAGwd,EAAItzD,GAAG0hD,EAAG4R,EAAItzD,EAAI,GAAG81C,EAAGwd,EAAItzD,EAAI,GAAG0hD,EAC1E6R,EAAOzd,EAAGyd,EAAO7R,EAAG3Y,EAAM+M,EAAG/M,EAAM2Y,GAEpC,GAAU,MAANoP,EACJ,CACC,IAAInrB,EAAKoD,EAAM+M,EAAIgb,EAAGhb,EAClBjQ,EAAKkD,EAAM2Y,EAAIoP,EAAGpP,EAClB+R,EAAK,CAACliD,EAAGu/C,EAAI4C,OAAQ7tB,EAAKA,EAAKF,EAAKA,GAE9B,MAAN8tB,IAAsB,MAAPh5D,GAAeA,EAAIi5D,OAASD,EAAGC,UAEjDj5D,EAAMg5D,IAKT,OAAe,MAAPh5D,EAAeA,EAAI8W,EAAI,MAchCoiD,2BAA4B,SAASC,EAAQnD,EAAIC,GAEhD,IAAI5qB,EAAM8tB,EAAOlS,EACb9b,EAAOguB,EAAO9d,EACd0V,EAAS1lB,EAAM8tB,EAAOnX,OACtB6O,EAAQ1lB,EAAOguB,EAAOhX,MAGtBqF,EAAOwO,EAAG3a,EACVqM,EAAOuO,EAAG5a,EAmBd,GAjBI2a,EAAG3a,EAAI4a,EAAG5a,IAEZmM,EAAOyO,EAAG5a,EACVqM,EAAOsO,EAAG3a,GAIRqM,EAAOmJ,IAETnJ,EAAOmJ,GAGLrJ,EAAOrc,IAETqc,EAAOrc,GAGLqc,EAAOE,EAET,OAAO,EAIT,IAAID,EAAOuO,EAAG/O,EACVU,EAAOsO,EAAGhP,EACV/b,EAAK+qB,EAAG5a,EAAI2a,EAAG3a,EAEnB,GAAI9+C,KAAKk3D,IAAIvoB,GAAM,KACnB,CACE,IAAIvvC,GAAKs6D,EAAGhP,EAAI+O,EAAG/O,GAAK/b,EACpBhuC,EAAI84D,EAAG/O,EAAItrD,EAAIq6D,EAAG3a,EACtBoM,EAAO9rD,EAAI6rD,EAAOtqD,EAClByqD,EAAOhsD,EAAI+rD,EAAOxqD,EAGpB,GAAIuqD,EAAOE,EACX,CACE,IAAI37B,EAAM27B,EACVA,EAAOF,EACPA,EAAOz7B,EAcT,OAVI27B,EAAOoJ,IAETpJ,EAAOoJ,GAGLtJ,EAAOpc,IAEToc,EAAOpc,KAGLoc,EAAOE,IAmBZyR,SAAU,SAASD,EAAQ9d,EAAG4L,GAE7B,OAAQkS,EAAO9d,GAAKA,GAAK8d,EAAO9d,EAAI8d,EAAOhX,OAAS9G,GAClD8d,EAAOlS,GAAKA,GAAKkS,EAAOlS,EAAIkS,EAAOnX,QAAUiF,GAahDoS,WAAY,SAAS19D,EAAGuB,GAEvB,IAAIo8D,EAAK39D,EAAEwmD,MACPoX,EAAK59D,EAAEqmD,OACPwX,EAAKt8D,EAAEilD,MACPsX,EAAKv8D,EAAE8kD,OAEX,GAAIwX,GAAM,GAAKC,GAAM,GAAKH,GAAM,GAAKC,GAAM,EAEvC,OAAO,EAGX,IAAI5E,EAAKh5D,EAAE0/C,EACPuZ,EAAKj5D,EAAEsrD,EACPyS,EAAKx8D,EAAEm+C,EACPse,EAAKz8D,EAAE+pD,EAOX,OALAuS,GAAME,EACND,GAAME,EACNL,GAAM3E,EACN4E,GAAM3E,GAEG4E,EAAKE,GAAMF,EAAK7E,KACvB8E,EAAKE,GAAMF,EAAK7E,KAChB0E,EAAK3E,GAAM2E,EAAKI,KAChBH,EAAK3E,GAAM2E,EAAKI,IAanBC,kBAAmB,SAASzsB,EAAOkO,EAAG4L,EAAG4S,EAAS75D,EAAKD,GAMtD,GAJA85D,EAAsB,MAAXA,EAAmBA,EAAU,EACxC75D,EAAc,MAAPA,EAAeA,EAAM,EAC5BD,EAAc,MAAPA,EAAeA,EAAM,EAExB85D,EAAU,EACd,CACC,IAAI9D,EAAK5oB,EAAMka,aACXyS,EAAK3sB,EAAMma,aACXzE,EAAI1V,EAAMgV,MACV/+C,EAAI+pC,EAAM6U,OAEV16C,EAAQi7C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY6T,iBAAmB5sB,EAAM6sB,KAAKxQ,MAEhFliD,EAAQ,IAEPi7C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY+T,kBAAkB,IAE/DH,EAAK3sB,EAAM8Z,EAAI3/C,EAAQ,EACvBlE,EAAIkE,IAIJyuD,EAAK5oB,EAAMkO,EAAI/zC,EAAQ,EACvBu7C,EAAIv7C,IAINu7C,EAAItmD,KAAKwD,IAAIC,EAAK6iD,EAAIgX,GACtBz2D,EAAI7G,KAAKwD,IAAIC,EAAKoD,EAAIy2D,GAElB95D,EAAM,IAET8iD,EAAItmD,KAAKyD,IAAI6iD,EAAG9iD,GAChBqD,EAAI7G,KAAKyD,IAAIoD,EAAGrD,IAGjB,IAAIwnD,EAAO,IAAIL,YAAY6O,EAAKlT,EAAI,EAAGiX,EAAK12D,EAAI,EAAGy/C,EAAGz/C,GAClD82D,EAAQ3X,QAAQqQ,UAAUrQ,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,iBAAmB,GAE3F,GAAa,GAAT+C,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAEhB7D,GADAN,EAAK,IAAI/O,QAAQ7Z,EAAMka,aAAcla,EAAMma,cACtC/E,QAAQ6T,gBAAgB,IAAIpP,QAAQ3L,EAAG4L,GAAI4M,EAAKE,EAAKgC,IAC9D1a,EAAIgb,EAAGhb,EACP4L,EAAIoP,EAAGpP,EAGR,OAAO1E,QAAQ6W,SAAS7R,EAAMlM,EAAG4L,GAGlC,OAAO,GAgBRkT,UAAW,SAASC,EAAWC,GAE9B,IAAI9J,EAAa,EACbO,EAAY,EAGZwJ,GAAQ,EACR/qD,EAAO6qD,EACPl9D,EAAIoa,SAASgzB,KACb/pB,EAAIjJ,SAAS2nC,gBAEjB,MAAe,MAAR1vC,GAAgBA,GAAQrS,GAAKqS,GAAQgR,IAAM+5C,EAClD,CACC,IAAIr2C,EAAQs+B,QAAQwI,gBAAgBx7C,GAEvB,MAAT0U,IAEHq2C,EAAQA,GAA2B,SAAlBr2C,EAAM44B,UAGxBttC,EAAOA,EAAKujB,WAGb,IAAKunC,IAAiBC,EACtB,CACC,IAAI7J,EAASlO,QAAQmO,wBAAwB0J,EAAUx8B,eACvD2yB,GAAcE,EAAOpV,EACrByV,GAAaL,EAAOxJ,EAGrB,IAAIsT,EAAIH,EAAUrwB,wBAQlB,OANS,MAALwwB,IAEHhK,GAAcgK,EAAEpvB,KAChB2lB,GAAayJ,EAAElvB,KAGT,IAAI2b,QAAQuJ,EAAYO,IAShCJ,wBAAyB,SAAShR,GAEjC,GAAIzC,SAASM,UAEZ,OAAO,IAAIyJ,QAAQtH,EAAIpV,KAAKkwB,WAAY9a,EAAIpV,KAAKqa,WAIjD,IAAI8V,EAAM/a,EAAIgb,aAAehb,EAAIib,aAE7Btf,EAAY,MAAPof,QAAsC79D,IAAvBkO,OAAO8vD,YAA6B9vD,OAAO8vD,aAAetjD,SAAS2nC,iBAAmB3nC,SAASgzB,KAAKxX,YAAcxb,SAASgzB,MAAMkwB,WACrJvT,EAAY,MAAPwT,QAAsC79D,IAAvBkO,OAAO+vD,YAA6B/vD,OAAO+vD,aAAevjD,SAAS2nC,iBAAmB3nC,SAASgzB,KAAKxX,YAAcxb,SAASgzB,MAAMqa,UAEzJ,OAAO,IAAIqC,QAAQ3L,EAAG4L,IAiBxB6T,gBAAiB,SAASvrD,EAAMwrD,EAAkBC,GAEjDD,EAAwC,MAApBA,GAA4BA,EAChDC,EAAsC,MAAnBA,GAA2BA,EAE9C,IAAItb,EAAe,MAARnwC,EAAgBA,EAAKquB,cAAgBtmB,SAC5Cpa,EAAIwiD,EAAIpV,KACR/pB,EAAIm/B,EAAIT,gBACR//C,EAAS,IAAI8nD,QACbsT,GAAQ,EAEZ,MAAe,MAAR/qD,GAAgBA,GAAQrS,GAAKqS,GAAQgR,EAC5C,CACM7jB,MAAM6S,EAAKirD,aAAgB99D,MAAM6S,EAAKo1C,aAE1CzlD,EAAOm8C,GAAK9rC,EAAKirD,WACjBt7D,EAAO+nD,GAAK13C,EAAKo1C,WAGlB,IAAI1gC,EAAQs+B,QAAQwI,gBAAgBx7C,GAEvB,MAAT0U,IAEHq2C,EAAQA,GAA2B,SAAlBr2C,EAAM44B,UAGxBttC,EAAO,EAAqBA,EAAKujB,WAAa,KAG/C,IAAKwnC,GAASU,EACd,CACC,IAAIC,EAAS1Y,QAAQmO,wBAAwBhR,GAE7CxgD,EAAOm8C,GAAK4f,EAAO5f,EACnBn8C,EAAO+nD,GAAKgU,EAAOhU,EAGpB,OAAO/nD,GAoBRg8D,aAAc,SAASd,EAAW/e,EAAG4L,GAEpC,IAAIgU,EAAS1Y,QAAQuY,gBAAgBV,GAAW,GAC5C3J,EAASlO,QAAQ4X,UAAUC,GAK/B,OAHA3J,EAAOpV,GAAK4f,EAAO5f,EACnBoV,EAAOxJ,GAAKgU,EAAOhU,EAEZ,IAAID,QAAQ3L,EAAIoV,EAAOpV,EAAG4L,EAAIwJ,EAAOxJ,IAgB7C4E,MAAO,SAAS5mD,EAAKk2D,GAIpB,OAFAA,EAAQA,GAAS,MAEF,MAAPl2D,EAAeA,EAAIqB,QAAQ,IAAIkE,OAAO,KAAO2wD,EAAQ,KAAM,KAAM,IAAM,MAgBhFC,MAAO,SAASn2D,EAAKk2D,GAIpB,OAFAA,EAAQA,GAAS,MAEF,MAAPl2D,EAAeA,EAAIqB,QAAQ,IAAIkE,OAAO,IAAM2wD,EAAQ,MAAO,KAAM,IAAM,MAiBhFr8B,KAAM,SAAS75B,EAAKk2D,GAEnB,OAAO5Y,QAAQsJ,MAAMtJ,QAAQ6Y,MAAMn2D,EAAKk2D,GAAQA,IAajDE,UAAW,SAAS/2D,GAEnB,OAAQ5H,MAAM6H,WAAWD,KAAOE,SAASF,KAAoB,iBAAP,GAAmBA,EAAEkB,cAAcK,QAAQ,MAAQ,IAY1Gy1D,UAAW,SAASh3D,GAEnB,OAAO1G,OAAO8zB,SAASptB,MAAQ1G,OAAO0G,IAUvCi3D,IAAK,SAASj3D,EAAG8zD,GAEhB,OAAS9zD,EAAI8zD,EAAKA,GAAKA,GAmBxBW,aAAc,SAAU7F,EAAIC,EAAImD,EAAIC,EAAId,EAAIC,EAAIC,EAAIC,GAEnD,IAAI4F,GAAU5F,EAAKF,IAAOY,EAAKpD,IAASyC,EAAKF,IAAOc,EAAKpD,GACrDsI,GAAW9F,EAAKF,IAAOtC,EAAKuC,IAASE,EAAKF,IAAOxC,EAAKuC,GACtDiG,GAAWpF,EAAKpD,IAAOC,EAAKuC,IAASa,EAAKpD,IAAOD,EAAKuC,GAEtDkG,EAAKF,EAASD,EACdI,EAAKF,EAASF,EAElB,GAAGG,GAAM,GAAOA,GAAM,GAAOC,GAAM,GAAOA,GAAM,EAChD,CAEC,IAAIvgB,EAAI6X,EAAKyI,GAAMrF,EAAKpD,GACpBjM,EAAIkM,EAAKwI,GAAMpF,EAAKpD,GAExB,OAAO,IAAInM,QAAQ3L,EAAG4L,GAIvB,OAAO,MAmBRiR,YAAa,SAAS5B,EAAIC,EAAId,EAAIC,EAAImG,EAAIC,GAEzCrG,GAAMa,EACNZ,GAAMa,EAENsF,GAAMvF,EACNwF,GAAMvF,EAEN,IACIwF,EADAC,EAAUH,EAAKpG,EAAKqG,EAAKpG,EAGzBsG,GAAW,EAEXD,EAAY,GAIZF,EAAKpG,EAAKoG,EACVC,EAAKpG,EAAKoG,EACVE,EAAUH,EAAKpG,EAAKqG,EAAKpG,EAI3BqG,EAFMC,GAAW,EAEL,EAIAA,EAAUA,GAAWvG,EAAKA,EAAKC,EAAKA,IAIlD,IAAIuG,EAAQJ,EAAKA,EAAKC,EAAKA,EAAKC,EAOhC,OALIE,EAAQ,IAERA,EAAQ,GAGLA,GAmBLC,WAAY,SAAS5F,EAAIC,EAAId,EAAIC,EAAImG,EAAIC,GAE3C,OAAOv/D,KAAKk3D,KAAKiC,EAAKa,GAAMsF,GAAMpG,EAAKa,GAAMwF,EAAKrG,EAAKc,EAAKb,EAAKY,GAChE/5D,KAAKg4D,MAAMmB,EAAKa,IAAOb,EAAKa,IAAOd,EAAKa,IAAOb,EAAKa,KAkBtD6F,YAAa,SAAS7F,EAAIC,EAAId,EAAIC,EAAImG,EAAIC,GAEzCrG,GAAMa,EACNZ,GAAMa,EACNsF,GAAMvF,EACNwF,GAAMvF,EACN,IAAI6F,EAAMP,EAAKnG,EAAKoG,EAAKrG,EAmBzB,OAjBW,GAAP2G,IAEAA,EAAMP,EAAKpG,EAAKqG,EAAKpG,EAEjB0G,EAAM,IAEZP,GAAMpG,EACNqG,GAAMpG,EACN0G,EAAMP,EAAKpG,EAAKqG,EAAKpG,EAEjB0G,EAAM,IAENA,EAAM,KAKJA,EAAM,GAAQ,EAAMA,EAAM,EAAO,EAAI,GAS9C5T,eAAgB,SAASC,EAAOC,GAG5BH,UAAUC,eAAeprD,MAAMf,KAAMgB,YAStCysD,eAAgB,SAASrB,EAAOY,EAAMU,GAExCxB,UAAUuB,eAAe1sD,MAAMf,KAAMgB,YAStCktD,QAAS,SAASh7C,EAAMjR,EAAMoH,EAAQhG,EAAM4mB,EAAOkkC,GAElDjC,UAAUgC,QAAQntD,MAAMf,KAAMgB,YAa/BisD,WAAY,SAAS/5C,EAAM5V,GAEtB4oD,QAAQ2L,MAAM3+C,GAIbA,EAAK0U,MAAM2M,OAFRj3B,GAAS,IAEQ,GAKA,iBAAoBA,EAAM,EAAK,IAG/CsjD,SAASE,QAA4C,qBAA3B7lC,SAAqB,cAAqBA,SAASkmC,aAAe,GAIhGjuC,EAAK0U,MAAM2M,OAFRj3B,GAAS,IAEQ,GAIA,iBAAmBA,EAAQ,IAKhD4V,EAAK0U,MAAM8lC,QAAWpwD,EAAQ,KAcnC0iE,YAAa,SAASprD,GAEf,IAAIqrD,EAAY,KAetB,OAbIrf,SAASG,QAAiC,cAAvB9lC,SAAS4qC,YAEzBoa,EAAYhlD,SAAS9b,cAAcyhD,SAASS,WAAa,UACzD4e,EAAU/nC,aAAa,MAAOtjB,GAC9BqrD,EAAUr4C,MAAMs4C,YAAc,SAIpCD,EAAYhlD,SAAS9b,cAAc,OACnC8gE,EAAU/nC,aAAa,MAAOtjB,GAC9BqrD,EAAU/nC,aAAa,SAAU,MAG3B+nC,GASRE,UAAW,SAASC,EAAOC,GAE1BA,EAA0B,MAAbA,GAAqBA,EAClC,IAAIC,EAAS,IAAI1X,aAwBjB,OAvBAwX,EAAM/xC,MAAK,SAASkyC,EAAIC,GAEvB,IAAI7G,EAAK2G,EAAOjhE,IAAIkhE,GAEV,MAAN5G,IAEHA,EAAK8G,WAAW13D,OAAOw3D,GAAIt3D,MAAMw3D,WAAWC,gBAC5CJ,EAAOzX,IAAI0X,EAAI5G,IAGhB,IAAIC,EAAK0G,EAAOjhE,IAAImhE,GAEV,MAAN5G,IAEHA,EAAK6G,WAAW13D,OAAOy3D,GAAIv3D,MAAMw3D,WAAWC,gBAC5CJ,EAAOzX,IAAI2X,EAAI5G,IAGhB,IAAIjxC,EAAO83C,WAAWE,QAAQhH,EAAIC,GAElC,OAAgB,GAARjxC,EAAa,EAAOA,EAAO,GAAM03C,EAAa,GAAK,KAGrDD,GAaRQ,aAAc,SAASh5C,GAEtB,GAAa,MAATA,EACJ,CACC,IAAIi5C,EAAQj5C,EAAM3e,MAAM,KACpB63D,EAAYD,EAAM,GAEtB,GAAIC,EAAUt3D,QAAQ,KAAO,EAE5B,OAAOs3D,EAIT,MAAO,IAaRC,cAAe,SAASn5C,GAEvB,IAAI/kB,EAAS,GAEb,GAAa,MAAT+kB,EAIH,IAFA,IAAIi5C,EAAQj5C,EAAM3e,MAAM,KAEfC,EAAI,EAAGA,EAAI23D,EAAMjgE,OAAQsI,IAE7B23D,EAAM33D,GAAGM,QAAQ,KAAO,GAE3B3G,EAAOkO,KAAK8vD,EAAM33D,IAKrB,OAAOrG,GAURm+D,iBAAkB,SAASp5C,EAAOk5C,GAEjC,GAAa,MAATl5C,GAA8B,MAAbk5C,EAKpB,IAHA,IAAIG,EAASr5C,EAAM3e,MAAM,KACrBwkC,EAAM,EAEDvkC,EAAI,EAAGA,EAAI+3D,EAAOrgE,OAAQsI,IACnC,CACC,GAAI+3D,EAAO/3D,IAAM43D,EAEhB,OAAOrzB,EAGRA,GAAOwzB,EAAO/3D,GAAGtI,OAAS,EAI5B,OAAQ,GASTsgE,aAAc,SAASt5C,EAAOk5C,GAgB7B,OAdI5a,QAAQ8a,iBAAiBp5C,EAAOk5C,GAAa,IAEnC,MAATl5C,EAEHA,EAAQ,GAEAA,EAAMhnB,OAAS,GAAuC,KAAlCgnB,EAAMvd,OAAOud,EAAMhnB,OAAS,KAExDgnB,GAAS,KAGVA,GAASk5C,GAGHl5C,GASRu5C,gBAAiB,SAASv5C,EAAOk5C,GAEhC,IAAIj+D,EAAS,GAEb,GAAa,MAAT+kB,EAIH,IAFA,IAAIq5C,EAASr5C,EAAM3e,MAAM,KAEhBC,EAAI,EAAGA,EAAI+3D,EAAOrgE,OAAQsI,IAE9B+3D,EAAO/3D,IAAM43D,GAEhBj+D,EAAOkO,KAAKkwD,EAAO/3D,IAKtB,OAAOrG,EAAO08B,KAAK,MASpB6hC,oBAAqB,SAASx5C,GAE7B,IAAI/kB,EAAS,GAEb,GAAa,MAAT+kB,EAIH,IAFA,IAAIq5C,EAASr5C,EAAM3e,MAAM,KAEhBC,EAAI,EAAGA,EAAI+3D,EAAOrgE,OAAQsI,IAG9B+3D,EAAO/3D,GAAGM,QAAQ,MAAQ,GAE7B3G,EAAOkO,KAAKkwD,EAAO/3D,IAKtB,OAAOrG,EAAO08B,KAAK,MAgBpB8hC,cAAe,SAASj7C,EAAOg6C,EAAO/iE,EAAKC,GAE1C,GAAa,MAAT8iE,GAAiBA,EAAMx/D,OAAS,EACpC,CACCwlB,EAAMk7C,cACN,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAgB,MAAZk3D,EAAMl3D,GACV,CACC,IAAI0e,EAAQs+B,QAAQqb,SAASn7C,EAAM8c,SAASk9B,EAAMl3D,IAAK7L,EAAKC,GAC5D8oB,EAAMm7C,SAASnB,EAAMl3D,GAAI0e,IAI5B,QAECxB,EAAMo7C,eAkBTD,SAAU,SAAS35C,EAAOvqB,EAAKC,GAE9B,IAAImkE,EAAmB,MAATnkE,IAA0C,oBAAjBA,EAAY,QAAoBA,EAAMsD,OAAS,GAEtF,GAAa,MAATgnB,GAAiC,GAAhBA,EAAMhnB,OAEtB6gE,IAEH75C,EAAQvqB,EAAM,IAAMC,EAAQ,UAK7B,GAAIsqB,EAAMm8B,UAAU,EAAG1mD,EAAIuD,OAAS,IAAMvD,EAAM,IAChD,CACC,IAAIyE,EAAO8lB,EAAMpe,QAAQ,KAIxBoe,EAFG65C,EAEKpkE,EAAM,IAAMC,GAAUwE,EAAO,EAAK,IAAM8lB,EAAMm8B,UAAUjiD,IAIvDA,EAAO,GAAKA,GAAQ8lB,EAAMhnB,OAAS,EAAK,GAAKgnB,EAAMm8B,UAAUjiD,EAAO,OAI/E,CACC,IAAIsB,EAAQwkB,EAAMpe,QAAQ,IAAMnM,EAAM,KAEtC,GAAI+F,EAAQ,GAEX,GAAIq+D,EACJ,CACC,IAAIC,EAAyC,KAAlC95C,EAAMvd,OAAOud,EAAMhnB,OAAS,GAAa,GAAK,IACzDgnB,EAAQA,EAAQ85C,EAAMrkE,EAAM,IAAMC,EAAQ,SAI5C,CACKwE,EAAO8lB,EAAMpe,QAAQ,IAAKpG,EAAQ,GAIrCwkB,EAFG65C,EAEK75C,EAAMm8B,UAAU,EAAG3gD,EAAQ,GAAK/F,EAAM,IAAMC,GAAUwE,EAAO,EAAK,IAAM8lB,EAAMm8B,UAAUjiD,IAIxF8lB,EAAMm8B,UAAU,EAAG3gD,IAAWtB,EAAO,EAAK,IAAM8lB,EAAMm8B,UAAUjiD,KAM5E,OAAO8lB,GA6BR+5C,kBAAmB,SAASv7C,EAAOg6C,EAAO/iE,EAAKukE,EAAMtkE,GAEpD,GAAa,MAAT8iE,GAAiBA,EAAMx/D,OAAS,EACpC,CACCwlB,EAAMk7C,cACN,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAgB,MAAZk3D,EAAMl3D,GACV,CACC,IAAI0e,EAAQs+B,QAAQ2b,aACnBz7C,EAAM8c,SAASk9B,EAAMl3D,IACrB7L,EAAKukE,EAAMtkE,GACZ8oB,EAAMm7C,SAASnB,EAAMl3D,GAAI0e,IAI5B,QAECxB,EAAMo7C,eAkBTK,aAAc,SAASj6C,EAAOvqB,EAAKukE,EAAMtkE,GAExC,GAAa,MAATsqB,GAAiC,GAAhBA,EAAMhnB,OAIzBgnB,EAFGtqB,GAAkB,MAATA,EAEJD,EAAI,IAAIukE,EAIRvkE,EAAI,SAId,CACC,IAAI+F,EAAQwkB,EAAMpe,QAAQnM,EAAI,KAE9B,GAAI+F,EAAQ,EACZ,CACC,IAAIs+D,EAAuC,KAAhC95C,EAAMvd,OAAOud,EAAMhnB,OAAO,GAAa,GAAK,IAItDgnB,EAFGtqB,GAAkB,MAATA,EAEJsqB,EAAQ85C,EAAMrkE,EAAM,IAAMukE,EAI1Bh6C,EAAQ85C,EAAMrkE,EAAM,SAI9B,CACC,IAAIykE,EAAOl6C,EAAMpe,QAAQ,IAAKpG,GAC1BusB,EAAM,GAITA,EAFGmyC,EAAO,EAEHl6C,EAAMm8B,UAAU3gD,EAAM/F,EAAIuD,OAAO,GAIlCgnB,EAAMm8B,UAAU3gD,EAAM/F,EAAIuD,OAAO,EAAGkhE,GAK1CnyC,EAFY,MAATryB,EAEG+3B,SAAS1F,GAAOiyC,EAEdtkE,EAEF+3B,SAAS1F,GAAOiyC,EAIhBvsC,SAAS1F,IAAQiyC,EAGxBh6C,EAAQA,EAAMm8B,UAAU,EAAG3gD,GAAS/F,EAAM,IAAMsyB,GAC7CmyC,GAAQ,EAAKl6C,EAAMm8B,UAAU+d,GAAQ,KAI1C,OAAOl6C,GAWRm6C,oBAAqB,SAASC,EAAOC,GAEpC,IAAIpzB,EAAK,EACLE,EAAK,EAsBT,OAnBIizB,GAASnY,YAAYqY,aAExBrzB,GAAM,GAEEmzB,GAASnY,YAAYsY,cAE7BtzB,GAAM,GAIHozB,GAAUpY,YAAYuY,aAEzBrzB,GAAM,GAEEkzB,GAAUpY,YAAYwY,eAE9BtzB,GAAM,GAGA,IAAI4b,QAAQ9b,EAAIE,IA2BxBuzB,iBAAkB,SAASzwD,EAAM0wD,EAAUC,EAAYC,GAEtDF,EAAwB,MAAZA,EAAoBA,EAAW1Y,YAAY6Y,iBACvDF,EAA4B,MAAdA,EAAsBA,EAAa3Y,YAAY8Y,mBAC7D,IAAIC,EAAM3nD,SAAS9b,cAAc,OAGjCyjE,EAAIh7C,MAAM46C,WAAaA,EACvBI,EAAIh7C,MAAM26C,SAAWriE,KAAKm8D,MAAMkG,GAAY,KAC5CK,EAAIh7C,MAAMi7C,WAAa3iE,KAAKm8D,MAAMkG,EAAW1Y,YAAYiZ,aAAe,KAGxEF,EAAIh7C,MAAM44B,SAAW,WACrBoiB,EAAIh7C,MAAMygC,WAAa,SACvBua,EAAIh7C,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eACtDgiB,EAAIh7C,MAAMm7C,KAAO,IAEA,MAAbN,GAEHG,EAAIh7C,MAAMk+B,MAAQ2c,EAAY,KAC9BG,EAAIh7C,MAAMo7C,WAAa,UAIvBJ,EAAIh7C,MAAMo7C,WAAa,SAIxBJ,EAAIrlC,UAAY1rB,EAChBoJ,SAASgzB,KAAKvV,YAAYkqC,GAG1B,IAAIniB,EAAO,IAAIoK,YAAY,EAAG,EAAG+X,EAAIzO,YAAayO,EAAI10B,cAGtD,OAFAjzB,SAASgzB,KAAKxV,YAAYmqC,GAEnBniB,GAMRwiB,WAAY,SAAS7W,EAAOe,EAAOiT,EAAOvJ,EAAIC,GAM7C,GAJAD,EAAY,MAANA,EAAcA,EAAK,EACzBC,EAAY,MAANA,EAAcA,EAAK,EACzB3J,EAAkB,MAATA,EAAiBA,EAAQ,EAErB,MAATiT,EACJ,CACC,IAAIh6C,EAAQgmC,EAAM8W,WAClB9C,EAAQ,CAACh6C,EAAM+8C,WAGhB,IAAIxF,EAAOvR,EAAMU,UACbjqD,EAAS,KAGTugE,EAAgBzF,EAAK0F,kBACzB1F,EAAK2F,kBAAiB,GAKtB,IAAIC,EAAW5F,EAAK4F,SAChBC,EAAc7F,EAAK6F,YAEnBpX,EAAMqX,SAAW5Z,YAAY6Z,aAEhC/F,EAAK4F,SAAWtoD,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAC7DhG,EAAKiG,OAAOlrC,YAAYilC,EAAK4F,UAG7B5F,EAAK6F,YAAcvoD,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAChEhG,EAAKiG,OAAOlrC,YAAYilC,EAAK6F,eAI7B7F,EAAK4F,SAAW5F,EAAK4F,SAAS70B,WAAU,GACxCivB,EAAKiG,OAAOlrC,YAAYilC,EAAK4F,UAG7B5F,EAAK6F,YAAc7F,EAAK6F,YAAY90B,WAAU,GAC9CivB,EAAKiG,OAAOlrC,YAAYilC,EAAK6F,cAI9B,IAAIK,EAAYlG,EAAKmG,eACrBnG,EAAKkG,UAAY,IAAIlZ,QAAQkM,EAAIC,GAGjC,IAAIiN,EAAO,IAAIC,sBAAsB5X,EAAMU,UAAWK,EAAOiT,GAE7D,IAEC,IAAI6D,EAAM,IAAIC,QACdrhE,EAASohE,EAAIE,OAAO/X,EAAMU,WAE3B,QAECiX,EAAKr+C,UACLi4C,EAAKkG,UAAYA,EACjBlG,EAAKiG,OAAOnrC,YAAYklC,EAAK4F,UAC7B5F,EAAKiG,OAAOnrC,YAAYklC,EAAK6F,aAC7B7F,EAAK4F,SAAWA,EAChB5F,EAAK6F,YAAcA,EACnB7F,EAAK2F,iBAAiBF,GAGvB,OAAOvgE,GAmBRuhE,qBAAsB,SAASC,EAAWjY,EAAOkY,EAAYC,GAE5D,GAAIF,EAAY,EAIf,OAAO,EAGRC,EAA4B,MAAdA,EAAsBA,EAAaza,YAAY2a,wBAC7DD,EAAoB,MAAVA,EAAkBA,EAAS,EAErC,IAAIE,EAAqBH,EAAWxe,MAAkB,EAATye,EACzCG,EAAsBJ,EAAW3e,OAAmB,EAAT4e,EAI3CI,EAAcvY,EAAMwY,iBAAiBpgD,QACrCqgD,EAAKzY,EAAMU,UAAUgY,WACzBH,EAAY7e,OAAS+e,EACrBF,EAAYhf,QAAUkf,EACtB,IAAIE,EAAaJ,EAAY7e,MACzBkf,EAAcL,EAAYhf,OAE1BwH,EAAQ,EAGR8X,EAAwBR,EAAqBC,EAE7CQ,EAAmBH,EAAaC,EAIhCG,EAAmBD,EAAmBD,EAMtCG,EAAWllE,KAAKg4D,KAAKmM,GACrBgB,EAAuBnlE,KAAKg4D,KAAKiN,GACjCG,EAAcF,EAAWC,EACzBE,EAAiBH,EAAWC,EAOhC,GAAIC,EAAc,GAAKC,EAAiBlB,EACxC,CACC,IAAImB,EAAcD,EAAiBlB,EACnCkB,EAAiBlB,EACjBiB,GAAeE,EAGhB,GAAID,EAAiB,GAAKD,EAAcjB,EACxC,CACKmB,EAAcF,EAAcjB,EAChCiB,EAAcjB,EACdkB,GAAkBC,EAGnB,IAAIC,EAAoBvlE,KAAKD,KAAKqlE,GAAeplE,KAAKD,KAAKslE,GAEvDG,EAAW,EAIf,MAAOD,EAAoBpB,EAC3B,CAMC,IAAIsB,EAAyBzlE,KAAKC,MAAMmlE,GAAeA,EACnDM,EAA4B1lE,KAAKC,MAAMolE,GAAkBA,EAI/B,GAA1BI,IAEHA,EAAyBzlE,KAAKC,MAAMmlE,EAAY,GAAKA,GAErB,GAA7BM,IAEHA,EAA4B1lE,KAAKC,MAAMolE,EAAe,GAAKA,GAKxDC,EAAc,EAkBlB,GAbCA,EAFGG,EAAyBC,EAEdD,EAIAC,EAGfN,GAA4BE,EAC5BD,GAAkCC,EAClCC,EAAoBvlE,KAAKD,KAAKqlE,GAAeplE,KAAKD,KAAKslE,GAEvDG,IAEIA,EAAW,GAEd,MAMF,IAAIG,EAAcpB,EAAqBa,EAIvC,OAHAnY,EAAQ0Y,EAAcd,EAGP,OAAR5X,GAsBR9jB,KAAM,SAAS+iB,EAAO/I,EAAKwT,EAAIC,EAAItQ,EAAGz/C,GAKrC,GAHA8vD,EAAY,MAANA,EAAcA,EAAK,EACzBC,EAAY,MAANA,EAAcA,EAAK,EAEd,MAAPzT,EACJ,CACC,IAAI+a,EAAM3vD,OAAO6mC,OACjB+N,EAAM+a,EAAInjD,cAIVooC,EAAI/N,OAIwB,GAAzBr6B,SAASkmC,cAEZkC,EAAIuE,QAAQ,oFAGb,IAAIkV,EAAS1Q,EAAMwY,iBACf/1B,EAAK3uC,KAAKD,KAAK42D,EAAKiG,EAAO9d,GAC3BjQ,EAAK7uC,KAAKD,KAAK62D,EAAKgG,EAAOlS,GAgB/B,GAdS,MAALpE,IAEHA,EAAItmD,KAAKD,KAAK68D,EAAOhX,MAAQ+Q,GAAM32D,KAAKD,KAAKC,KAAKD,KAAK68D,EAAO9d,GAAK8d,EAAO9d,IAGlE,MAALj4C,IAEHA,EAAI7G,KAAKD,KAAK68D,EAAOnX,OAASmR,GAAM52D,KAAKD,KAAKC,KAAKD,KAAK68D,EAAOlS,GAAKkS,EAAOlS,IAOxEhK,SAASE,OAAkC,IAAzB7lC,SAASkmC,aAC/B,CAKC,IAJA,IAAI7R,EAAO,eAEP1mB,EAAO3N,SAASqoC,qBAAqB,QAEhCp6C,EAAI,EAAGA,EAAI0f,EAAKhoB,OAAQsI,IAEhComC,GAAQ1mB,EAAK1f,GAAG6pD,UAGjBzjB,GAAQ,UAGR,IAASpmC,EAAI,EAAGA,EAAI+R,SAAS0pC,YAAY/jD,OAAQsI,IAEhD,IAEComC,GAAQr0B,SAAS0pC,YAAYz7C,GAAGy5B,QAEjC,MAAO12B,IAMRqjC,GAAQ,4CAGRA,GAAQ,uDAAyDkX,EAAI,aAAez/C,EAAI,2CAA6C8nC,EAAK,UAAYE,EAAK,QAC3JO,GAAQ8c,EAAM2R,UAAUxgC,UACxB+R,GAAQ,4BAER+T,EAAIuE,QAAQtY,GACZ+T,EAAI7N,YAGL,CACC6N,EAAIuE,QAAQ,gBAIZ,IAFIh/B,EAAO3N,SAASqoC,qBAAqB,QAEhCp6C,EAAI,EAAGA,EAAI0f,EAAKhoB,OAAQsI,IAEhCm6C,EAAIuE,QAAQ1B,QAAQ4M,aAAalqC,EAAK1f,KAGvC,IAAI48D,EAAQ7qD,SAASqoC,qBAAqB,QAE1C,IAASp6C,EAAI,EAAGA,EAAI48D,EAAMllE,OAAQsI,IAEjCm6C,EAAIuE,QAAQ1B,QAAQ4M,aAAagT,EAAM58D,KAGxC,IAAIy9B,EAAS1rB,SAASqoC,qBAAqB,SAE3C,IAASp6C,EAAI,EAAGA,EAAIy9B,EAAO/lC,OAAQsI,IAElCm6C,EAAIuE,QAAQ1B,QAAQ4M,aAAansB,EAAOz9B,KAGzCm6C,EAAIuE,QAAQ,mDACZvE,EAAI7N,QAEJ,IAAIuwB,EAAQ1iB,EAAIlkD,cAAc,OAC9B4mE,EAAMvlB,SAAW,WACjBulB,EAAM/W,SAAW,SACjB+W,EAAMn+C,MAAMk+B,MAAQU,EAAI,KACxBuf,EAAMn+C,MAAM+9B,OAAS5+C,EAAI,KAGzB,IAAI67D,EAAMvf,EAAIlkD,cAAc,OAC5ByjE,EAAIh7C,MAAM44B,SAAW,WACrBoiB,EAAIh7C,MAAMknB,KAAOD,EAAK,KACtB+zB,EAAIh7C,MAAMonB,IAAMD,EAAK,KAErB,IAAI77B,EAAOk5C,EAAM2R,UAAUtgC,WACvBrG,EAAM,KAEV,MAAe,MAARlkB,EACP,CACC,IAAIsR,EAAQtR,EAAKw7B,WAAU,GAEvBx7B,GAAQk5C,EAAMuR,KAAK4F,SAASyC,iBAE/BD,EAAMrtC,YAAYlU,GAClB4S,EAAM5S,GAINo+C,EAAIlqC,YAAYlU,GAGjBtR,EAAOA,EAAKylB,YAGb0qB,EAAIpV,KAAKvV,YAAYqtC,GAEC,MAAlBnD,EAAInlC,YAEP4lB,EAAIpV,KAAKvV,YAAYkqC,GAGX,MAAPxrC,IAEHA,EAAIxP,MAAMq+C,SAAW,GACrB7uC,EAAIxP,MAAMs+C,UAAY,GACtB9uC,EAAIqG,WAAWvF,aAAa,YAAa,aAAe2W,EAAK,IAAME,EAAK,MAM1E,OAFAmX,QAAQqI,cAAclL,EAAIpV,MAEnBoV,GAeR8iB,YAAa,SAAS/Z,GAErB,IAAIgS,EAAM3vD,OAAO6mC,OACJ8W,EAAMwY,iBACnB1e,QAAQ7c,KAAK+iB,EAAOgS,EAAInjD,UAExB,IAAImrD,EAAQ,WAEXhI,EAAIiI,QACJjI,EAAIgI,QACJhI,EAAI5oB,SAKDoL,SAASgB,MAEZwc,EAAIzjD,WAAWyrD,EAAO,KAItBA,KAgBF7f,MAAO,SAASN,EAASqgB,GAErB,GAAIA,EACJ,CACF,IAAI1D,EAAM3nD,SAAS9b,cAAc,OAEjCyjE,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAMk+B,MAAQ,QAClB8c,EAAIh7C,MAAM+9B,OAAS,QAEnB,IAAIn+B,EAAMvM,SAAS9b,cAAc,OAC9BqoB,EAAI+V,UAAY2oB,QAAQuL,aAAaxL,GAAS,GAC7Ch8C,QAAQ,MAAM,QAAQA,QAAQ,KAAM,UAExC24D,EAAIlqC,YAAYlR,GAEhB,IAAIg/B,EAAIvrC,SAASgzB,KAAK2Y,YAClB7/C,EAAI7G,KAAKwD,IAAIuX,SAASgzB,KAAK0Y,cAAgB,EAAG1rC,SAAS2nC,gBAAgB+D,cACvEyX,EAAM,IAAIvX,SAAS,eAAgB+b,EACtCpc,EAAE,EAAE,IAAKz/C,EAAE,EAAE,IAAK,IAAK,KAAK,GAAO,GAEpCq3D,EAAInX,aAAY,GAChBmX,EAAInW,YAAW,QAKf,GAAIrH,SAASW,MACb,CACQ6c,EAAM3vD,OAAO6mC,OACpB8oB,EAAInjD,SAAS2sC,QAAQ,QAAQ1B,QAAQuL,aAAaxL,GAAS,SACxDmY,EAAInjD,SAASu6B,YAGjB,CACQ4oB,EAAM3vD,OAAO6mC,OACb9tB,EAAM42C,EAAInjD,SAAS9b,cAAc,OACrCqoB,EAAI+V,UAAY2oB,QAAQuL,aAAaxL,GAAS,GAC7Ch8C,QAAQ,MAAM,QAAQA,QAAQ,KAAM,UACrCm0D,EAAInjD,SAASgzB,KAAKvV,YAAYlR,KAgBpC8+B,MAAO,SAAS+I,GAEf/I,MAAM+I,IAcPkX,OAAQ,SAASlX,EAAS5E,GAEzB,OAAO8b,OAAOlX,EAA0B,MAAhB5E,EAAwBA,EAAe,KAahE+b,QAAS,SAASnX,GAEjB,OAAOmX,QAAQnX,IAkBhB5wD,MAAO,SAAS4wD,EAASvJ,EAAOtQ,EAAOixB,GAEtC,IAAI7D,EAAM3nD,SAAS9b,cAAc,OACjCyjE,EAAIh7C,MAAM8+C,QAAU,OAEpB,IAAIC,EAAM1rD,SAAS9b,cAAc,OACjCwnE,EAAIzuC,aAAa,MAAOuuC,GAAQvgB,QAAQoI,YACxCqY,EAAIzuC,aAAa,SAAU,UAC3ByuC,EAAI/+C,MAAM69B,cAAgB,SAC1Bmd,EAAIlqC,YAAYiuC,GAEhB/D,EAAIlqC,YAAYzd,SAASC,eAAe,MACxC0nD,EAAIlqC,YAAYzd,SAASC,eAAe,MACxC0nD,EAAIlqC,YAAYzd,SAASC,eAAe,MACxCgrC,QAAQ3Q,MAAMqtB,EAAKvT,GAEnB,IAAI7I,EAAIvrC,SAASgzB,KAAK2Y,YAClB7/C,EAAKkU,SAASgzB,KAAK0Y,cAAgB1rC,SAAS2nC,gBAAgB+D,aAC5Dl2C,EAAO,IAAIo2C,SAASpD,YAAYpkD,IAAI6mD,QAAQkI,gBAC/ClI,QAAQkI,cAAewU,GAAMpc,EAAEV,GAAO,EAAG/+C,EAAE,EAAG++C,EAAO,MACrD,GAAO,GAER,GAAItQ,EACJ,CACC0Q,QAAQ8M,GAAG4P,GAEX,IAAIjzC,EAAM1U,SAAS9b,cAAc,KAC7B4oD,EAAS9sC,SAAS9b,cAAc,UAEhCyhD,SAASE,MAEZiH,EAAOngC,MAAM+a,QAAU,cAIvBolB,EAAO7vB,aAAa,QAAS,eAG9BsvB,QAAQD,YAAYQ,EAAQ,SAAS,SAAS/B,GAE7Cv1C,EAAKiV,aAGNwgC,QAAQ3Q,MAAMwS,EAAQtE,YAAYpkD,IAAI6mD,QAAQmI,gBAC7CnI,QAAQmI,eAET1+B,EAAI+I,YAAYqvB,GAChB6a,EAAIlqC,YAAY/I,GAEhBu2B,QAAQ8M,GAAG4P,GAEXnyD,EAAKw2C,aAAY,GAKlB,OAFAx2C,EAAKw3C,YAAW,GAETx3C,GAuERm2D,cAAe,SAASpY,EAASqY,EAAQ/e,EAAOgf,EAAaj4B,EAAIE,EAAIg4B,EACnEC,EAAcC,EAAsBC,GAErC,IAAIC,EAAa,IAAIC,aAAa5Y,EAAS1G,GAkD3C,OAjDAqf,EAAWE,WAAa,IAAI1c,QAAe,MAAN9b,EAAcA,EAAK,EAChD,MAANE,EAAcA,EAAK8a,YAAYyd,yBACjCH,EAAWJ,WAAaA,EAIxBI,EAAWI,kBAAiB,GAEA,MAAxBN,IAEHE,EAAWF,qBAAuBA,GAId,MAAjBC,IAEHC,EAAWD,cAAgBA,GAI5BC,EAAWK,iBAAmB,SAASxhB,GAEtC,MAA0B,mBAAZ,EAA0B6gB,EAAO7gB,GAAO6gB,GAIpC,MAAfC,IAEHK,EAAWM,kBAAoB,WAE9B,OAAOX,EAAYp4B,WAAU,IAG1Bs4B,IAEHG,EAAWO,qBAAuB,SAAStb,GAE1C,IAAIjF,EAAM2f,EAAYp4B,WAAU,GAE5B8X,EAAInxB,SAAS8xB,EAAIv/B,MAAMk+B,OACvB/+C,EAAIsuB,SAAS8xB,EAAIv/B,MAAM+9B,QAI3B,OAHAwB,EAAIv/B,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,EAAI4F,EAAMuR,KAAKxQ,OAAS,KACrDhG,EAAIv/B,MAAM+9B,OAASzlD,KAAKm8D,MAAMt1D,EAAIqlD,EAAMuR,KAAKxQ,OAAS,KAE/ChG,KAKHggB,IAKTxmB,WAAWuF,QAA6B,qBAAZA,QAA0BA,aAAU3lD,EAM/D,IAAIspD,YACJ,CAWA8d,gBAAiB,GAQjBC,iBAAkB,EAQlBC,iBAAkB,EAOlBC,qBAAsB,QAOtBC,sBAAuB,SAOvBC,uBAAwB,UAOxBtE,YAAa,MAObuE,YAAa,MAObC,kBAAmB,YAOnBC,mBAAoB,aAOpBC,mBAAoB,aAOpBzE,OAAQ,6BAOR0E,SAAU,+BAOVC,SAAU,+BAQVC,YAAa,OAQbC,gBAAiB,OAOjBC,gBAAiB,EAOjBC,gBAAiB,EAOjBC,eAAgB,EAOhBpZ,iBAAkB,EAOlBqZ,mBAAoB,EAOpBrX,cAAe,EAOfsX,eAAgB,EAOhBC,0BAA2B,EAO3BC,gBAAiB,EAOjBC,gCAAiC,EAOjCC,iBAAkB,EAOlBC,kBAAmB,EAOnBC,sBAAuB,GAOvBC,2BAA4B,GAO5BC,kBAAmB,GAQnB/B,wBAAyB,GAOzBgC,oBAAqB,UAOrBC,sBAAuB,UAQvBC,wBAAyB,UAQzBC,8BAA+B,EAQ/BC,sBAAuB,EAOvBC,eAAgB,EAQhBC,kBAAmB,IAOnBC,sBAAuB,OAOvBC,oBAAqB,OAOrBC,oBAAqB,UAOrBC,uBAAwB,UAOxBC,mBAAoB,YAOpBC,2BAA4B,YAO5BC,eAAgB,UAQhBC,gBAAiB,UAUjBC,qBAAsB,UAUtBC,6BAA8B,UAQ9BC,kBAAmB,UAQnBC,YAAa,UAQbC,cAAe,UAQfC,qBAAsB,UAQtBC,uBAAwB,UAQxBC,6BAA8B,EAQ9BC,2BAA4B,EAQ5BC,yBAAyB,EAQzBC,uBAAuB,EAQvBC,YAAa,UAQbC,kBAAmB,EAQnBC,cAAe,UAQfC,oBAAsBvqB,SAAc,MAAI,EAAI,EAO5CwqB,YAAa,EAObC,kBAAmB,EAQnBC,iBAAkB,UAQlBC,mBAAoB,QAQpBC,uBAAwB,SAQxBC,yBAA0B,UAQ1BC,wBAAyB,UAQzBC,yBAA0B,UAQ1BC,2BAA4B,UAO5BjJ,mBAAoB,kBAOpBD,iBAAkB,GASlBmJ,uBAAwB,GAOxB/I,YAAa,IASbgJ,UAAW,SAQXC,sBAAsB,EAYtBC,kBAAmB,EAOnBC,kBAAmB,GAOnBC,mBAAoB,EAQpBC,kBAAmB,GASnBC,eAAgB,GAQhBC,0BAA2B,IAO3BC,aAAc,GAOdC,cAAe,EAOfC,YAAa,GAObC,WAAY,GAQZjI,wBAAyB,IAAI3Z,YAAY,EAAG,EAAG,IAAK,MAQpD6hB,yBAA0B,IAAI7hB,YAAY,EAAG,EAAG,KAAM,KAQtD8hB,4BAA6B,IAAI9hB,YAAY,EAAG,EAAG,IAAK,MAQxD+hB,6BAA8B,IAAI/hB,YAAY,EAAG,EAAG,KAAM,KAO1Df,KAAM,OAWN+iB,gBAAiB,YAUjBC,kBAAmB,aAUnBC,kBAAmB,aAUnBzS,sBAAuB,iBAUvBO,+BAAgC,yBAShCN,6BAA8B,uBAS9BC,6BAA8B,uBAQ9BwS,cAAe,UAQfC,mBAAoB,cAQpBC,qBAAsB,gBAQtBC,mBAAoB,cAYpBC,qBAAsB,gBAgBtBC,eAAgB,WAWhBC,iBAAkB,aAQlBC,aAAc,QAQdC,aAAc,QASdC,cAAe,SAQfC,cAAe,SASfC,qBAAsB,gBAQtBC,cAAe,SAQfC,cAAe,SAQfC,eAAgB,UAQhBC,eAAgB,UAShBC,sBAAuB,iBAavBC,kBAAmB,aAQnBnT,eAAgB,WAUhBoT,gBAAiB,YAWjBC,qBAAsB,gBAStBC,yBAA0B,oBAQ1BC,aAAc,SAWdC,oBAAqB,gBAcrBC,yBAA0B,oBAU1BC,kBAAmB,cASnBC,qBAAsB,iBAUtBC,kBAAmB,cAenBC,YAAa,QAiBbC,qBAAsB,gBAQtBC,kBAAmB,aAgBnBC,qBAAsB,gBAgBtBC,8BAA+B,wBAS/BC,mBAAoB,cAUpBC,kBAAmB,aAUnBC,2BAA4B,qBAS5BC,YAAa,QAYbC,YAAa,QASbC,kBAAmB,aASnBC,mBAAoB,cASpBC,uBAAwB,kBASxBC,mBAAoB,cASpBrT,YAAa,QAQbC,YAAa,QASbqT,cAAe,UASfC,kBAAmB,cAQnBC,4BAA6B,uBAQ7BC,wBAAyB,mBAQzBC,oBAAqB,eAUrBC,sBAAuB,iBASvBC,sBAAuB,iBAUvBC,sBAAuB,iBAQvBC,4BAA6B,uBAS7BC,8BAA+B,yBAS/BC,wBAAyB,mBAQzBC,sBAAuB,iBAQvBC,uBAAwB,kBAUxBC,0BAA2B,qBAQ3BC,aAAc,SASdC,cAAe,UAcfC,eAAgB,WAShBC,iBAAkB,aASlBC,cAAe,UAUfjT,gBAAiB,YASjBkT,oBAAqB,eASrBC,cAAe,UASfC,gBAAiB,YAQjBC,aAAc,SAYdC,mBAAoB,cASpBC,eAAgB,UAYhBC,cAAe,UASfC,aAAc,SAYdC,cAAe,UASfC,uBAAwB,kBAUxBC,+BAAgC,yBAUhCC,+BAAgC,yBAahCC,wBAAyB,mBASzBC,cAAe,UASfC,kBAAmB,aASnBC,mBAAoB,cASpBC,qBAAsB,gBAStBC,oBAAqB,eAarBjU,iBAAkB,aAUlB1B,gBAAiB,YAWjB4V,6BAA8B,uBAW9BC,YAAa,QAQbC,gBAAiB,YASjBC,iBAAkB,aAQlBC,eAAgB,WAShBC,gBAAiB,YASjBC,aAAc,SAUdC,eAAgB,WAShBC,eAAgB,WAShBC,eAAgB,WAShBC,yBAA0B,oBAS1BC,eAAgB,WAShBC,cAAe,UASfC,gBAAiB,YAWjBC,mBAAoB,cAWpBC,oBAAqB,eASrBC,gBAAiB,YASjBC,gBAAiB,YASjBC,gBAAiB,YAQjBC,YAAa,QAQbC,WAAY,YAWZC,iBAAkB,YASlBC,wBAAyB,kBASzBC,wBAAyB,kBASzBC,WAAY,YAUZC,sBAAuB,iBAUvBC,uBAAwB,iBAUxBC,uBAAwB,iBAOxBC,UAAW,EAOXC,YAAa,EAObC,eAAgB,EAQhBC,gBAAiB,YAQjBC,cAAe,UAQfC,qBAAsB,gBAQtBC,cAAe,UAQfC,WAAY,OAQZC,YAAa,QAQbC,YAAa,QAQbC,sBAAuB,iBAQvBC,YAAa,QAQbC,eAAgB,WAQhBC,eAAgB,WAQhBC,gBAAiB,YAQjBC,YAAa,QAQbC,YAAa,QAQbC,eAAgB,WAQhBC,cAAe,UAOfC,cAAe,UAOfC,mBAAoB,cAOpBC,YAAa,QAObC,iBAAkB,YAOlBC,WAAY,OAOZC,gBAAiB,WAOjBC,WAAY,OAOZC,cAAe,UAOfC,mBAAoB,cAOpBC,WAAY,OAOZpT,aAAc,SAOdC,YAAa,QAOboT,UAAW,MAOXnT,aAAc,SAOdC,aAAc,SAOdrH,gBAAiB,QAOjBM,gBAAiB,QAOjBC,eAAgB,OAOhBF,eAAgB,OAQhBma,uBAAwB,GAQxBC,oBAAqB,OAQrBC,mBAAoB,MAQpBC,mBAAoB,MAOpBhb,oBAAqB,EAOrBS,oBAAqB,EAOrBH,qBAAsB,EAOtBE,qBAAsB,EAOtBD,oBAAqB,EAOrB0a,mBAAoB,GAOpBC,eAAgB,WAOhBC,iBAAkB,aAQlBC,gBAAiB,iBAQjBC,0BAA2B,0BAQ3BC,eAAgB,gBAQhBC,qBAAsB,sBAQtBC,sBAAuB,uBAQvBC,qBAAsB,sBAQtBC,kBAAmB,mBAQnBC,kBAAmB,mBAQnBC,oBAAqB,qBAQrBC,kBAAmB,mBAQnBC,kBAAmB,mBAQnBC,mBAAoB,qBAgCrB,SAASC,cAAc74E,GAEtBkC,KAAKlC,KAAOA,EACZkC,KAAK67C,WAAa,GAElB,IAAK,IAAI3yC,EAAI,EAAGA,EAAIlI,UAAUJ,OAAQsI,GAAK,EAElB,MAApBlI,UAAUkI,EAAI,KAEjBlJ,KAAK67C,WAAW76C,UAAUkI,IAAMlI,UAAUkI,EAAI,IAoHjD,SAAS0tE,aAAa5wB,EAAKlV,GAE1B9wC,KAAKgmD,IAAMA,EACXhmD,KAAK8wC,MAAQA,EACb9wC,KAAK62E,YAAc/lC,EAuOpB,SAASgmC,cAAcC,GAEtB/2E,KAAKg3E,eAAeD,GAvYrBp2B,WAAWkJ,YAAqC,qBAAhBA,YAA8BA,iBAActpD,EAgD5Eo2E,cAAcj3E,UAAU5B,KAAO,KAO/B64E,cAAcj3E,UAAUm8C,WAAa,KAOrC86B,cAAcj3E,UAAUu3E,UAAW,EAOnCN,cAAcj3E,UAAUw3E,QAAU,WAEjC,OAAOl3E,KAAKlC,MAQb64E,cAAcj3E,UAAUy3E,cAAgB,WAEvC,OAAOn3E,KAAK67C,YAQb86B,cAAcj3E,UAAU03E,YAAc,SAAS/5E,GAE9C,OAAO2C,KAAK67C,WAAWx+C,IAQxBs5E,cAAcj3E,UAAU23E,WAAa,WAEpC,OAAOr3E,KAAKi3E,UAQbN,cAAcj3E,UAAU43E,QAAU,WAEjCt3E,KAAKi3E,UAAW,GAGjBt2B,WAAWg2B,cAAyC,qBAAlBA,cAAgCA,mBAAgBp2E,EAoDlFq2E,aAAal3E,UAAUu3E,UAAW,EAOlCL,aAAal3E,UAAUsmD,IAAM,KAQ7B4wB,aAAal3E,UAAU63E,OAAS,KAQhCX,aAAal3E,UAAU83E,OAAS,KAOhCZ,aAAal3E,UAAUoxC,MAAQ,KAQ/B8lC,aAAal3E,UAAUm3E,YAAc,KAOrCD,aAAal3E,UAAU+3E,SAAW,WAEjC,OAAOz3E,KAAKgmD,KAQb4wB,aAAal3E,UAAUg4E,UAAY,WAElC,OAAOlwB,QAAQkwB,UAAU13E,KAAKgmD,MAQ/B4wB,aAAal3E,UAAUi4E,SAAW,SAASzqB,GAE1C,OAAa,MAATA,GAEIhH,QAAQ4J,eAAe5C,EAAMh6C,KAAMlT,KAAK03E,cAWjDd,aAAal3E,UAAUk4E,KAAO,WAE7B,OAAOpwB,QAAQqwB,WAAW73E,KAAKy3E,aAQhCb,aAAal3E,UAAUo4E,KAAO,WAE7B,OAAOtwB,QAAQuwB,WAAW/3E,KAAKy3E,aAQhCb,aAAal3E,UAAUs4E,UAAY,WAElC,OAAOh4E,KAAKu3E,QAQbX,aAAal3E,UAAUu4E,UAAY,WAElC,OAAOj4E,KAAKw3E,QAQbZ,aAAal3E,UAAUqtD,SAAW,WAEjC,OAAO/sD,KAAK8wC,OAQb8lC,aAAal3E,UAAUw4E,QAAU,WAEhC,IAAIpnC,EAAQ9wC,KAAK+sD,WAEjB,OAAa,MAATjc,EAEIA,EAAMkc,KAGP,MAQR4pB,aAAal3E,UAAUy4E,eAAiB,WAEvC,OAAO3wB,QAAQ2wB,eAAen4E,KAAKy3E,aAQpCb,aAAal3E,UAAU23E,WAAa,WAEnC,OAAOr3E,KAAKi3E,UAgBbL,aAAal3E,UAAU43E,QAAU,SAASc,GAEzCA,EAAoC,MAAlBA,EAA0BA,EAAiB5wB,QAAQ6wB,aAAar4E,KAAKgmD,KAEnFoyB,GAAkBp4E,KAAKgmD,IAAIoyB,gBAE9Bp4E,KAAKgmD,IAAIoyB,iBAKNx3B,SAASE,QAEZ9gD,KAAKgmD,IAAI0U,aAAc,GAIxB16D,KAAKi3E,UAAW,GAGjBt2B,WAAWi2B,aAAuC,qBAAjBA,aAA+BA,kBAAer2E,EAwC/Eu2E,cAAcp3E,UAAU44E,eAAiB,KAOzCxB,cAAcp3E,UAAU0jE,eAAgB,EAOxC0T,cAAcp3E,UAAUq3E,YAAc,KAOtCD,cAAcp3E,UAAU2jE,gBAAkB,WAEzC,OAAOrjE,KAAKojE,eAQb0T,cAAcp3E,UAAU4jE,iBAAmB,SAAShmE,GAEnD0C,KAAKojE,cAAgB9lE,GAQtBw5E,cAAcp3E,UAAU64E,eAAiB,WAExC,OAAOv4E,KAAK+2E,aAQbD,cAAcp3E,UAAUs3E,eAAiB,SAAS15E,GAEjD0C,KAAK+2E,YAAcz5E,GAWpBw5E,cAAcp3E,UAAU6nD,YAAc,SAASzpD,EAAMgqD,GAEzB,MAAvB9nD,KAAKs4E,iBAERt4E,KAAKs4E,eAAiB,IAGvBt4E,KAAKs4E,eAAevnE,KAAKjT,GACzBkC,KAAKs4E,eAAevnE,KAAK+2C,IAQ1BgvB,cAAcp3E,UAAU84E,eAAiB,SAAS1wB,GAEjD,GAA2B,MAAvB9nD,KAAKs4E,eACT,CACC,IAAIpvE,EAAI,EAER,MAAOA,EAAIlJ,KAAKs4E,eAAe13E,OAE1BZ,KAAKs4E,eAAepvE,EAAE,IAAM4+C,EAE/B9nD,KAAKs4E,eAAe7uE,OAAOP,EAAG,GAI9BA,GAAK,IAyBT4tE,cAAcp3E,UAAU+4E,UAAY,SAASzyB,EAAKsB,GAEjD,GAA2B,MAAvBtnD,KAAKs4E,gBAA0Bt4E,KAAKqjE,kBACxC,CACY,MAAPrd,IAEHA,EAAM,IAAI2wB,eAGG,MAAVrvB,IAEHA,EAAStnD,KAAKu4E,kBAGD,MAAVjxB,IAEHA,EAAStnD,MAKV,IAFA,IAAI6T,EAAO,CAACyzC,EAAQtB,GAEX98C,EAAI,EAAGA,EAAIlJ,KAAKs4E,eAAe13E,OAAQsI,GAAK,EACrD,CACC,IAAIwvE,EAAS14E,KAAKs4E,eAAepvE,GAEnB,MAAVwvE,GAAkBA,GAAU1yB,EAAIkxB,WAEnCl3E,KAAKs4E,eAAepvE,EAAE,GAAGnI,MAAMf,KAAM6T,MAMzC8sC,WAAWm2B,cAAyC,qBAAlBA,cAAgCA,mBAAgBv2E,EAMlF,IAAIinD,QACJ,CAsBCD,YAAa,WAEZ,IAAIoxB,EAAqB,SAASnqB,EAASoqB,EAAW9wB,GAEvB,MAA1B0G,EAAQqqB,iBAEXrqB,EAAQqqB,eAAiB,IAG1B,IAAIC,EAAQ,CAACh7E,KAAM86E,EAAWr7E,EAAGuqD,GACjC0G,EAAQqqB,eAAe9nE,KAAK+nE,IAG7B,OAAIrqE,OAAOkB,iBAEH,SAAS6+C,EAASoqB,EAAW9wB,GAEnC0G,EAAQ7+C,iBAAiBipE,EAAW9wB,GAAO,GAC3C6wB,EAAmBnqB,EAASoqB,EAAW9wB,IAKjC,SAAS0G,EAASoqB,EAAW9wB,GAEnC0G,EAAQuqB,YAAY,KAAOH,EAAW9wB,GACtC6wB,EAAmBnqB,EAASoqB,EAAW9wB,IA1B7B,GAoCb0wB,eAAgB,WAEf,IAAIQ,EAAiB,SAASxqB,EAASoqB,EAAW9wB,GAEjD,GAA8B,MAA1B0G,EAAQqqB,eACZ,CAGC,IAFA,IAAII,EAAgBzqB,EAAQqqB,eAAej4E,OAElCsI,EAAI,EAAGA,EAAI+vE,EAAe/vE,IACnC,CACC,IAAI4vE,EAAQtqB,EAAQqqB,eAAe3vE,GAEnC,GAAI4vE,EAAMv7E,GAAKuqD,EACf,CACC0G,EAAQqqB,eAAepvE,OAAOP,EAAG,GACjC,OAImC,GAAjCslD,EAAQqqB,eAAej4E,SAE1B4tD,EAAQqqB,eAAiB,QAK5B,OAAIpqE,OAAO0xB,oBAEH,SAASquB,EAASoqB,EAAW9wB,GAEnC0G,EAAQruB,oBAAoBy4C,EAAW9wB,GAAO,GAC9CkxB,EAAexqB,EAASoqB,EAAW9wB,IAK7B,SAAS0G,EAASoqB,EAAW9wB,GAEnC0G,EAAQ0qB,YAAY,KAAON,EAAW9wB,GACtCkxB,EAAexqB,EAASoqB,EAAW9wB,IAvCtB,GAiDhBqxB,mBAAoB,SAAS3qB,GAE5B,IAAIxlD,EAAOwlD,EAAQqqB,eAEnB,GAAY,MAAR7vE,EAEH,MAAOA,EAAKpI,OAAS,EACrB,CACC,IAAIk4E,EAAQ9vE,EAAK,GACjBw+C,QAAQgxB,eAAehqB,EAASsqB,EAAMh7E,KAAMg7E,EAAMv7E,KAcrD67E,oBAAqB,SAASlmE,EAAMmmE,EAAeC,EAAcC,GAE3C,MAAjBF,GAEH7xB,QAAQD,YAAYr0C,EAAO0tC,SAAmB,WAAI,cAAgB,YAAay4B,GAG5D,MAAhBC,GAEH9xB,QAAQD,YAAYr0C,EAAO0tC,SAAmB,WAAI,cAAgB,YAAa04B,GAG7D,MAAfC,GAEH/xB,QAAQD,YAAYr0C,EAAO0tC,SAAmB,WAAI,YAAc,UAAW24B,IAGvE34B,SAASiC,YAAcjC,SAAS+B,WAEf,MAAjB02B,GAEH7xB,QAAQD,YAAYr0C,EAAM,aAAcmmE,GAGrB,MAAhBC,GAEH9xB,QAAQD,YAAYr0C,EAAM,YAAaomE,GAGrB,MAAfC,GAEH/xB,QAAQD,YAAYr0C,EAAM,WAAYqmE,KAWzCC,uBAAwB,SAAStmE,EAAMmmE,EAAeC,EAAcC,GAE9C,MAAjBF,GAEH7xB,QAAQgxB,eAAetlE,EAAO0tC,SAAmB,WAAI,cAAgB,YAAay4B,GAG/D,MAAhBC,GAEH9xB,QAAQgxB,eAAetlE,EAAO0tC,SAAmB,WAAI,cAAgB,YAAa04B,GAGhE,MAAfC,GAEH/xB,QAAQgxB,eAAetlE,EAAO0tC,SAAmB,WAAI,YAAc,UAAW24B,IAG1E34B,SAASiC,YAAcjC,SAAS+B,WAEf,MAAjB02B,GAEH7xB,QAAQgxB,eAAetlE,EAAM,aAAcmmE,GAGxB,MAAhBC,GAEH9xB,QAAQgxB,eAAetlE,EAAM,YAAaomE,GAGxB,MAAfC,GAEH/xB,QAAQgxB,eAAetlE,EAAM,WAAYqmE,KAe5CE,oBAAqB,SAASvmE,EAAMk5C,EAAOtb,EAAO4oC,EAAMC,EAAMC,EAAIC,GAEjE,IAAI9sB,EAAW,SAAS/G,GAEvB,MAAyB,mBAAX,EAAyBlV,EAAMkV,GAAOlV,GAGrD0W,QAAQ4xB,oBAAoBlmE,GAAM,SAAU8yC,GAE/B,MAAR0zB,EAEHA,EAAK1zB,GAEIwB,QAAQ6vB,WAAWrxB,IAE5BoG,EAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,EAAK+G,EAAS/G,QAG1E,SAAUA,GAEG,MAAR2zB,EAEHA,EAAK3zB,GAEIwB,QAAQ6vB,WAAWrxB,IAE5BoG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAK+G,EAAS/G,QAG1E,SAAUA,GAEC,MAAN4zB,EAEHA,EAAG5zB,GAEMwB,QAAQ6vB,WAAWrxB,IAE5BoG,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,EAAK+G,EAAS/G,QAIxEwB,QAAQD,YAAYr0C,EAAM,YAAY,SAAU8yC,GAE/C,GAAgB,MAAZ6zB,EAEHA,EAAS7zB,QAEL,IAAKwB,QAAQ6vB,WAAWrxB,GAC7B,CACC,IAAIr2B,EAAMo9B,EAAS/G,GACnBoG,EAAMytB,SAAS7zB,EAAa,MAAPr2B,EAAeA,EAAIq9B,KAAO,WAclDktB,QAAS,SAAS1rB,GAEjB,IAEC,GAAe,MAAXA,EACJ,CACChH,QAAQ2xB,mBAAmB3qB,GAE3B,IAAI58C,EAAW48C,EAAQ3sB,WAEvB,GAAgB,MAAZjwB,EAIG,IAFA,IAAI+7C,EAAa/7C,EAAShR,OAEjBsI,EAAI,EAAGA,EAAIykD,EAAYzkD,GAAK,EAEpCs+C,QAAQ0yB,QAAQtoE,EAAS1I,KAKnC,MAAO+C,MAiCRkuE,sBAAuB,SAASryB,EAAO1jD,GAEtC,GAAa,MAAT0jD,EACJ,CACC,IAAIsyB,EAAe,SAASp0B,GAKhB,MAAPA,IAEHA,EAAMv3C,OAAOkO,OAGd,IAAI09D,EAAQ,EAIXA,EAFGz5B,SAASqB,OAEH+D,EAAIs0B,OAAS,EAIdt0B,EAAIu0B,WAAa,IAIb,GAATF,GAEHvyB,EAAM9B,EAAKq0B,EAAQ,IAKrB,GAAIz5B,SAASW,OAAkC,MAAzBtmC,SAASkmC,aAC/B,CACC,IAAIy3B,EAAah4B,SAASc,OAASd,SAASgB,MAAS,aAAe,iBACpE4F,QAAQD,YAAa3G,SAASgB,OAAmB,MAAVx9C,EAAkBA,EAASqK,OACjEmqE,EAAWwB,QAIZ5yB,QAAQD,YAAYtsC,SAAU,aAAcm/D,KAU/CI,mBAAoB,SAAShsB,GAE5BhH,QAAQD,YAAYiH,EAAS,eAAe,SAASxI,GAOpD,OALIA,EAAIoyB,gBAEPpyB,EAAIoyB,kBAGE,MASTV,UAAW,SAAS1xB,GAEnB,OAA0B,MAAlBA,EAAIy0B,WAAsBz0B,EAAIy0B,WAAaz0B,EAAI5hD,QAQxDizE,WAAY,SAASrxB,GAEpB,OAAyB,MAAlBA,EAAIqxB,YAAsBrxB,EAAIqxB,YAQtCqD,aAAc,SAAS10B,GAEtB,OAA2B,MAAnBA,EAAI20B,YAA2C,SAAnB30B,EAAI20B,aAA0B30B,EAAI20B,cACrE30B,EAAI40B,qBAAgD,MAAtB50B,EAAI60B,eACV,GAAtB70B,EAAI60B,eAAmD,GAA7B70B,EAAIrvC,KAAKnN,QAAQ,UAQ/CsxE,WAAY,SAAS90B,GAEpB,OAA2B,MAAnBA,EAAI20B,YAA2C,OAAnB30B,EAAI20B,aAAwB30B,EAAI20B,cACnE30B,EAAI+0B,mBAA8C,MAAtB/0B,EAAI60B,eACR,GAAtB70B,EAAI60B,eAAiD,GAA3B70B,EAAIrvC,KAAKnN,QAAQ,QAQ/CwxE,kBAAmB,SAASh1B,GAE3B,OAAoB,MAAZA,EAAIrvC,MAA6C,GAA7BqvC,EAAIrvC,KAAKnN,QAAQ,UAAgC,MAAfw8C,EAAIi1B,SAAmBj1B,EAAIi1B,QAAQr6E,OAAS,GAQ3Gy3E,aAAc,SAASryB,GAEtB,OAA2B,MAAnBA,EAAI20B,YAA2C,SAAnB30B,EAAI20B,aAA0B30B,EAAI20B,cACrE30B,EAAIk1B,qBAAgD,MAAtBl1B,EAAI60B,eACX,GAAtB70B,EAAI60B,eAAmD,GAA7B70B,EAAIrvC,KAAKnN,QAAQ,UAW9C2xE,kBAAmB,SAASn1B,GAI3B,MAAI,YAAaA,IAAoB,aAAZA,EAAIrvC,MAAmC,aAAZqvC,EAAIrvC,MAEjC,GAAfqvC,EAAIo1B,QAEH,UAAWp1B,EAEQ,IAAdA,EAAIq1B,MAIW,IAAfr1B,EAAI+B,QAWnBuzB,oBAAqB,SAASt1B,GAE7B,MAAI,UAAWA,EAEa,IAAdA,EAAIq1B,MAIW,IAAfr1B,EAAI+B,QAWnBwzB,mBAAoB,SAASv1B,GAE5B,MAAI,UAAWA,EAEa,IAAdA,EAAIq1B,MAIW,IAAfr1B,EAAI+B,QAWnBowB,eAAgB,SAASnyB,GAExB,OAAOwB,QAAQ+zB,mBAAmBv1B,IAASpF,SAAS6B,QAAU+E,QAAQg0B,cAAcx1B,KAClFwB,QAAQi0B,YAAYz1B,KAASwB,QAAQk0B,WAAW11B,KAASwB,QAAQm0B,UAAU31B,IAQ9Ey1B,YAAa,SAASz1B,GAErB,OAAe,MAAPA,GAAeA,EAAI41B,UAQ5BD,UAAW,SAAS31B,GAEnB,OAAe,MAAPA,GAAeA,EAAI5oC,QAQ5Bo+D,cAAe,SAASx1B,GAEvB,OAAe,MAAPA,GAAeA,EAAI61B,SAQ5BH,WAAY,SAAS11B,GAEpB,OAAe,MAAPA,GAAeA,EAAI81B,SAQ5BC,aAAc,SAAS9vE,GAWtB,MATe,cAAVA,EAAE0K,MAAkC,aAAV1K,EAAE0K,MAAqC,MAAb1K,EAAEgvE,SAAmC,MAAhBhvE,EAAEgvE,QAAQ,GAIrE,YAAVhvE,EAAE0K,MAA0C,MAApB1K,EAAE+vE,gBAAiD,MAAvB/vE,EAAE+vE,eAAe,KAE7E/vE,EAAIA,EAAE+vE,eAAe,IAJrB/vE,EAAIA,EAAEgvE,QAAQ,GAORhvE,GAQR4rE,WAAY,SAAS5rE,GAEpB,OAAOu7C,QAAQu0B,aAAa9vE,GAAGgwE,SAQhClE,WAAY,SAAS9rE,GAEpB,OAAOu7C,QAAQu0B,aAAa9vE,GAAGiwE,SAgBhC5E,QAAS,SAAStxB,EAAKoyB,EAAgB+D,GAEtC/D,EAAoC,MAAlBA,GAA0BA,EAC5C+D,EAAsC,MAAnBA,GAA2BA,EAE1C/D,IAECpyB,EAAIoyB,gBAEH+D,GAEHn2B,EAAIm2B,kBAGLn2B,EAAIoyB,kBAEI+D,IAERn2B,EAAIo2B,cAAe,IAKrBp2B,EAAIqxB,YAAa,EAGZrxB,EAAIoyB,iBAERpyB,EAAI0U,aAAc,IAepB2hB,cAAe,EASfC,iBAAkB,EASlBC,eAAgB,IAWhBC,gBAAiB,IAWjBzC,WAAY,YAOZC,WAAY,YAOZC,SAAU,UAOVwC,SAAU,WAOVC,aAAc,cAOdC,OAAQ,SAORl1B,WAAY,YAOZm1B,WAAY,YAOZC,KAAM,OAONC,SAAU,UAOVC,UAAW,WAOXC,IAAK,MAOLC,QAAS,SAOTC,SAAU,WAOVv1B,UAAW,YAOXD,SAAU,WAOVy1B,KAAM,OAONC,KAAM,OAONC,MAAO,QAOPC,QAAS,UAOTC,QAAS,UAOTC,KAAM,OAONC,OAAQ,SAORC,MAAO,QAOPC,iBAAkB,iBAOlBC,QAAS,UAOTC,aAAc,aAOdC,IAAK,MAOLC,QAAS,UAOTC,QAAS,UAOTC,WAAY,aAOZC,QAAS,UAOTC,OAAQ,SAORC,KAAM,OAONC,KAAM,OAONC,KAAM,OAONC,KAAM,OAONC,KAAM,OAONC,kBAAmB,kBAOnBC,WAAY,YAOZC,iBAAkB,iBAOlBC,KAAM,OAONC,QAAS,UAOTC,SAAU,WAOVC,aAAc,cAOdC,WAAY,YAOZC,WAAY,YAOZC,SAAU,UAOVC,YAAa,aAObC,KAAM,OAONC,KAAM,OAONC,OAAQ,SAORC,OAAQ,SAORC,aAAc,cAOdC,MAAO,QAOPC,MAAO,QAOPC,UAAW,YAOXC,oBAAqB,oBAOrBC,GAAI,KAOJC,KAAM,OAONC,IAAK,MAOLC,OAAQ,SAORC,MAAO,QAOPC,UAAW,WAOXC,YAAa,aAObC,WAAY,YAOZC,YAAa,aAObC,aAAc,cAOdC,cAAe,eAOfC,aAAc,cAOdC,cAAe,eAOfC,YAAa,aAObC,cAAe,eAOfC,aAAc,cAOdC,cAAe,eAOfC,YAAa,aAObC,cAAe,eAOfC,yBAA0B,wBAO1BC,WAAY,YAOZC,aAAc,cAOdC,YAAa,aAObC,cAAe,eAOfC,aAAc,cAOdC,eAAgB,gBAOhBC,WAAY,YAOZC,UAAW,WAOXC,cAAe,eAOfC,gBAAiB,iBAOjBC,gBAAiB,iBAOjBC,YAAa,aAObC,eAAgB,gBAOhBC,iBAAkB,iBAOlBC,OAAQ,SAORC,aAAc,cAOdC,MAAO,QAOPC,MAAO,SA6FR,SAASttB,aAAaD,EAAK/3C,EAAQjJ,EAAQjG,EAAOy0E,EAAUC,GAE3DpiF,KAAK20D,IAAMA,EACX30D,KAAK4c,OAASA,EACd5c,KAAK2T,OAASA,GAAU,OACxB3T,KAAK0N,MAAkB,MAATA,GAAiBA,EAC/B1N,KAAKmiF,SAAWA,EAChBniF,KAAKoiF,SAAWA,EAhGjBzhC,WAAW6G,QAA6B,qBAAZA,QAA0BA,aAAUjnD,EAwGhEq0D,aAAal1D,UAAUi1D,IAAM,KAO7BC,aAAal1D,UAAUkd,OAAS,KAQhCg4C,aAAal1D,UAAUiU,OAAS,KAOhCihD,aAAal1D,UAAUgO,MAAQ,KAS/BknD,aAAal1D,UAAUs1D,QAAS,EAQhCJ,aAAal1D,UAAU2iF,iBAAkB,EAOzCztB,aAAal1D,UAAUyiF,SAAW,KAOlCvtB,aAAal1D,UAAU0iF,SAAW,KAOlCxtB,aAAal1D,UAAU4iF,QAAU,KASjC1tB,aAAal1D,UAAU6iF,sBAAuB,EAO9C3tB,aAAal1D,UAAU8iF,SAAW,WAEjC,OAAOxiF,KAAKg1D,QAQbJ,aAAal1D,UAAUw1D,UAAY,SAAS53D,GAE3C0C,KAAKg1D,OAAS13D,GAQfs3D,aAAal1D,UAAUyqD,QAAU,WAEhC,OAAOnqD,KAAKsiF,QAAQG,cAQrB7tB,aAAal1D,UAAU2qD,QAAU,WAEhC,OAAkC,GAA3BrqD,KAAKsiF,QAAQzsB,YAQrBjB,aAAal1D,UAAUgjF,mBAAqB,WAE3C,IAAIr/B,EAAMrjD,KAAK+xD,SAEf,OAAW,MAAP1O,EAEIA,EAAIT,gBAGL,MASRgS,aAAal1D,UAAUqyD,OAAS,WAE/B,IAAItB,EAAMzwD,KAAKsiF,QAAQK,YAYvB,OALI1nE,SAASkmC,cAAgB,GAAY,MAAPsP,GAAsC,MAAvBA,EAAI7N,mBAEpD6N,EAAMvK,QAAQqK,SAASvwD,KAAKsiF,QAAQG,eAG9BhyB,GAQRmE,aAAal1D,UAAUyqD,QAAU,WAEhC,OAAOnqD,KAAKsiF,QAAQG,cASrB7tB,aAAal1D,UAAU81D,UAAY,WAElC,OAAOx1D,KAAKsiF,QAAQ/sB,QAQrBX,aAAal1D,UAAUqJ,OAAS,WAE/B,OAAI0F,OAAOm0E,eAEH,WAEN,IAAI34B,EAAM,IAAI24B,eAQd,OALI5iF,KAAKwiF,YAAcv4B,EAAI44B,kBAE1B54B,EAAI44B,iBAAiB,sCAGf54B,GAGyB,oBAAnB,cAEP,WAGN,OAAO,IAAIqG,cAAc,2BALtB,EAjB0B,GA0ChCsE,aAAal1D,UAAUm1D,KAAO,SAASC,EAAQC,EAAS7qC,EAAS+qC,GAEhEj1D,KAAKsiF,QAAUtiF,KAAK+I,SAEA,MAAhB/I,KAAKsiF,UAEM,MAAVxtB,IAEH90D,KAAKsiF,QAAQ1sB,mBAAqB1P,QAAQ1jD,KAAKxC,MAAM,WAEhDA,KAAKqqD,YAERyK,EAAO90D,MACPA,KAAKsiF,QAAQQ,oBAAsB,UAKtC9iF,KAAKsiF,QAAQhtC,KAAKt1C,KAAK2T,OAAQ3T,KAAK20D,IAAK30D,KAAK0N,MAC7C1N,KAAKmiF,SAAUniF,KAAKoiF,UACrBpiF,KAAK+iF,kBAAkB/iF,KAAKsiF,QAAStiF,KAAK4c,QAEtCnO,OAAOm0E,gBAAkB5iF,KAAKqiF,kBAEjCriF,KAAKsiF,QAAQD,gBAAkB,SAG3BzhC,SAASM,YAAuC,MAAzBjmC,SAASkmC,cAAwBlmC,SAASkmC,aAAe,IACpF1yC,OAAOm0E,gBAA6B,MAAX14D,GAAgC,MAAb+qC,IAE5Cj1D,KAAKsiF,QAAQp4D,QAAUA,EACvBlqB,KAAKsiF,QAAQrtB,UAAYA,GAG1Bj1D,KAAKsiF,QAAQztB,KAAK70D,KAAK4c,UA4BzBg4C,aAAal1D,UAAUqjF,kBAAoB,SAAST,EAAS1lE,GAE9C,MAAVA,GAEH0lE,EAAQU,iBAAiB,eAAgB,sCAe3CpuB,aAAal1D,UAAUg2D,SAAW,SAASrS,EAAKj/C,GAE/Ci/C,EAAMA,GAAOpoC,SACb,IAAIyB,EAAM,KAEN2mC,GAAOpoC,WAEVyB,EAAMjO,OAAOw0E,eACbx0E,OAAOw0E,eAAiB,MAGzB,IAAIC,EAAO7/B,EAAIlkD,cAAc,QAC7B+jF,EAAKhrD,aAAa,SAAUl4B,KAAK2T,QACjCuvE,EAAKhrD,aAAa,SAAUl4B,KAAK20D,KAEnB,MAAVvwD,GAEH8+E,EAAKhrD,aAAa,SAAU9zB,GAG7B8+E,EAAKt7D,MAAMikB,QAAU,OACrBq3C,EAAKt7D,MAAMygC,WAAa,SAOxB,IALA,IAAI86B,EAAQnjF,KAAK4c,OAAOpT,QAAQ,KAAO,EACtCxJ,KAAK4c,OAAO3T,MAAM,KAClBjJ,KAAK4c,OAAO3T,QAGJC,EAAE,EAAGA,EAAEi6E,EAAKviF,OAAQsI,IAC7B,CACC,IAAIukC,EAAM01C,EAAKj6E,GAAGM,QAAQ,KAE1B,GAAIikC,EAAM,EACV,CACC,IAAI3vC,EAAOqlF,EAAKj6E,GAAG66C,UAAU,EAAGtW,GAC5BnwC,EAAQ6lF,EAAKj6E,GAAG66C,UAAUtW,EAAI,GAE9BztC,KAAKuiF,uBAERjlF,EAAQ8lF,mBAAmB9lF,IAG5B,IAAIooD,EAAWrC,EAAIlkD,cAAc,YACjCumD,EAASxtB,aAAa,OAAQ,OAC9BwtB,EAASxtB,aAAa,OAAQp6B,GAC9BooD,QAAQ3Q,MAAMmQ,EAAUpoD,GACxB4lF,EAAKxqD,YAAYgtB,IAInBrC,EAAIpV,KAAKvV,YAAYwqD,GACrBA,EAAKztB,SAEkB,MAAnBytB,EAAKzsD,YAERysD,EAAKzsD,WAAWgC,YAAYyqD,GAGlB,MAAPxmE,IAEHjO,OAAOw0E,eAAiBvmE,IAI1BikC,WAAWiU,aAAuC,qBAAjBA,aAA+BA,kBAAer0D,EAM/E,IAAI8iF,YACJ,CA4ECC,SAAU,GAOVC,YAAa,EAObnjB,MAAO,KAOPojB,SAAU,SAASpjB,GAElBijB,YAAYjjB,MAAQA,GAQrBqjB,SAAU,WAET,OAAOJ,YAAYjjB,OAQpBsjB,QAAS,WAER,OAAiC,MAA1BL,YAAYI,YAepBE,IAAK,SAASv3B,EAAOgU,GAMpB,OAJAA,EAAQijB,YAAYh9B,KAAK+F,EAAOgU,GAChCijB,YAAYE,YAAc,EAC1BF,YAAYO,YAAYx3B,EAAOgU,GAExBA,GAcRwjB,YAAa,SAASx3B,EAAOgU,GAE5BhU,EAAMw3B,YAAYxjB,IAenB/Z,KAAM,SAAS+F,EAAOgU,GAErBA,EAAQA,GAAShU,EAAMy3B,oBACvB,IAAIhhF,EAASupD,EAAM03B,mBAAmB13B,EAAMhmC,MAAM29D,gBAAgB3jB,IAIlE,OAHAijB,YAAYE,YAAc,EAC1BF,YAAYG,SAASp3B,EAAM43B,WAAWnhF,IAE/BA,GAkBRohF,MAAO,SAAS73B,GAEf,IAAIgU,EAAQ,KAEZ,IAAKijB,YAAYK,UACjB,CACCtjB,EAAQhU,EAAM83B,mBAAmBb,YAAYI,YAC7C,IAAIpJ,EAAQgJ,YAAYE,YAAcF,YAAYC,SAC9Cj9E,EAAS+lD,EAAM+3B,mBACnB/jB,EAAQhU,EAAMg4B,YAAYhkB,EAAOia,EAAOA,EAAOh0E,GAG/Cg9E,YAAYE,cACZn3B,EAAMi4B,kBAAkBjkB,GAGzB,OAAOA,IAkMT,SAASvZ,SAASzB,EAAOa,EAASjH,EAAG4L,EAAG9E,EAAOH,EAAQ2+B,EAAaC,EAASC,EAAa58D,GAE1E,MAAXq+B,IAEHq+B,EAA8B,MAAfA,GAAuBA,EACtCtkF,KAAKimD,QAAUA,EACfjmD,KAAK0kB,KAAKs6B,EAAG4L,EAAG9E,EAAOH,EAAQ/9B,GAE/B5nB,KAAKykF,yBACLzkF,KAAK0kF,yBACL1kF,KAAK2kF,sBACL3kF,KAAK4kF,eAAeN,GACpBtkF,KAAK6kF,SAASz/B,IAEC,MAAXm/B,GAAmBA,IAEtBvkF,KAAK8kF,qBAGa,MAAfN,GAAiD,MAA1BA,EAAY/tD,WAEtC+tD,EAAY/tD,WAAWsuD,aAAa/kF,KAAK4iE,IAAK4hB,GAI9CvpE,SAASgzB,KAAKvV,YAAY14B,KAAK4iE,MAu6BlC,SAASoiB,OAAOC,GAEfjlF,KAAKqlD,MAAQpqC,SAAS9b,cAAc,SACpCa,KAAKqlD,MAAM4/B,UAAYA,EACvBjlF,KAAKiuC,KAAOhzB,SAAS9b,cAAc,SAEnCa,KAAKqlD,MAAM3sB,YAAY14B,KAAKiuC,MAuM7B,SAASi3C,QAAQtwE,EAAKkxC,EAAOH,GAE5B3lD,KAAK4U,IAAMA,EACX5U,KAAK8lD,MAAQA,EACb9lD,KAAK2lD,OAASA,EAiEf,SAASw/B,aAAaviB,EAAK7E,GAE1B,GAAkC,OAA9B6E,EAAIjT,SAASxmD,cACjB,CACkB,MAAb40D,IAEHA,EAAYtvD,QAGbzO,KAAK4iE,IAAMA,EACX,IAAIh7C,EAAQs+B,QAAQwI,gBAAgBkU,GAEvB,MAATh7C,IAEH5nB,KAAKolF,YAA6B,QAAfx9D,EAAMk+B,MACzB9lD,KAAKqlF,aAA+B,QAAhBz9D,EAAM+9B,QAG3B6B,QAAQD,YAAYwW,EAAW,SAC9B7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEtBhmD,KAAKslF,iBAETtlF,KAAKslF,gBAAiB,EACtBtlF,KAAK4lD,SACL5lD,KAAKslF,gBAAiB,OAKzBtlF,KAAK4lD,UAsGP,SAASwhB,aAAa5Y,EAAS+2B,GAE9BvlF,KAAKwuD,QAAUA,EACfxuD,KAAKulF,YAAcA,EAGnB/9B,QAAQ4xB,oBAAoB5qB,EAAStI,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEhEhmD,KAAKwlF,UAAUx/B,OAIhBwB,QAAQD,YAAYiH,EAAS,aAAa,SAASxI,GAElDwB,QAAQ8vB,QAAQtxB,MAGjBhmD,KAAKylF,cAAgB,SAASn+B,EAAQtB,GAErC,IAAI0/B,EAAU1/B,EAAIoxB,YAAY,aAC1BuO,EAAK3/B,EAAIoxB,YAAY,SAErBsO,GAAWl+B,QAAQuyB,YAEtB4L,EAAGrO,WA+rBN,SAASsO,UAAU7nB,GAElB/9D,KAAK+9D,UAAYA,EAyiBlB,SAAS8nB,eAAe3hF,EAAQ4hF,GAE/B9lF,KAAKkE,OAASA,EACdlE,KAAKqsD,QAAU,GACfrsD,KAAK8lF,YAA8B,MAAfA,GAAuBA,EA4O5C,SAASC,cAActlC,GAEtBzgD,KAAKygD,KAAgB,MAARA,EAAgBA,EAAO,IACpCzgD,KAAKwQ,QAxgGNmwC,WAAW0iC,YAAqC,qBAAhBA,YAA8BA,iBAAc9iF,EA8N5EsmD,SAASnnD,UAAY,IAAIo3E,cACzBjwB,SAASnnD,UAAUqyB,YAAc80B,SAOjCA,SAASnnD,UAAUsmF,WAAaplC,SAASsD,cAAgB,aAOzD2C,SAASnnD,UAAUumF,cAAgBrlC,SAASsD,cAAgB,gBAO5D2C,SAASnnD,UAAUwmF,eAAiBtlC,SAASsD,cAAgB,iBAO7D2C,SAASnnD,UAAUymF,cAAgBvlC,SAASsD,cAAgB,gBAO5D2C,SAASnnD,UAAU0mF,YAAcxlC,SAASsD,cAAgB,cAO1D2C,SAASnnD,UAAUwoD,SAAU,EAQ7BrB,SAASnnD,UAAU2mF,YAAc,IAAIx7B,YAAY,EAAG,EAAG,GAAI,IAQ3DhE,SAASnnD,UAAUwnD,gBAAiB,EAQpCL,SAASnnD,UAAU4mF,wBAAoD,GAAzBrrE,SAASkmC,cAA8C,GAAzBlmC,SAASkmC,aAAqB,EAAI,EAO9G0F,SAASnnD,UAAU0lD,MAAQ,KAO3ByB,SAASnnD,UAAUumD,QAAU,KAO7BY,SAASnnD,UAAUglB,KAAO,SAASs6B,EAAG4L,EAAG9E,EAAOH,EAAQ/9B,GAEvDA,EAAkB,MAATA,EAAiBA,EAAQ,WAElC5nB,KAAK4iE,IAAM3nD,SAAS9b,cAAc,OAClCa,KAAK4iE,IAAIqiB,UAAYr9D,EAErB5nB,KAAK4iE,IAAIh7C,MAAMknB,KAAOkQ,EAAI,KAC1Bh/C,KAAK4iE,IAAIh7C,MAAMonB,IAAM4b,EAAI,KACzB5qD,KAAKqlD,MAAQpqC,SAAS9b,cAAc,SACpCa,KAAKqlD,MAAM4/B,UAAYr9D,EAGnBg5B,SAASiC,aAEZ7iD,KAAK4iE,IAAIh7C,MAAM2+D,YAAc,QAIjB,MAATzgC,IAEElF,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAMk+B,MAAQA,EAAQ,MAGhC9lD,KAAKqlD,MAAMz9B,MAAMk+B,MAAQA,EAAQ,MAGpB,MAAVH,IAEE/E,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAM+9B,OAASA,EAAS,MAGlC3lD,KAAKqlD,MAAMz9B,MAAM+9B,OAASA,EAAS,MAIpC,IAAIL,EAAQrqC,SAAS9b,cAAc,SAC/BomD,EAAKtqC,SAAS9b,cAAc,MAEhCa,KAAKolD,MAAQnqC,SAAS9b,cAAc,MACpCa,KAAKolD,MAAM6/B,UAAYr9D,EAAQ,QAE/B5nB,KAAKo7E,QAAUngE,SAAS9b,cAAc,OACtCa,KAAKo7E,QAAQxzD,MAAM44B,SAAW,WAC9BxgD,KAAKo7E,QAAQxzD,MAAMikB,QAAU,eAC7B7rC,KAAKo7E,QAAQxzD,MAAM4sC,MAAQ,MAC3Bx0D,KAAKo7E,QAAQxzD,MAAMonB,IAAM,MACzBhvC,KAAKolD,MAAM1sB,YAAY14B,KAAKo7E,SAE5B71B,EAAG7sB,YAAY14B,KAAKolD,OACpBE,EAAM5sB,YAAY6sB,GAGlBA,EAAKtqC,SAAS9b,cAAc,MAC5Ba,KAAKwlD,GAAKvqC,SAAS9b,cAAc,MACjCa,KAAKwlD,GAAGy/B,UAAYr9D,EAAQ,OAEC,GAAzB3M,SAASkmC,eAEZnhD,KAAKwlD,GAAG59B,MAAM+9B,OAAS,QAGxB3lD,KAAKwmF,eAAiBvrE,SAAS9b,cAAc,OAC7Ca,KAAKwmF,eAAevB,UAAYr9D,EAAQ,OACxC5nB,KAAKwmF,eAAe5+D,MAAMk+B,MAAQ,OAClC9lD,KAAKwmF,eAAe9tD,YAAY14B,KAAKimD,UAIjCrF,SAASM,WAAoD,OAAvClhD,KAAKimD,QAAQ0J,SAASxlD,iBAE/CnK,KAAKwmF,eAAe5+D,MAAM+9B,OAAS,QAIpC3lD,KAAKwlD,GAAG9sB,YAAY14B,KAAKwmF,gBACzBjhC,EAAG7sB,YAAY14B,KAAKwlD,IACpBF,EAAM5sB,YAAY6sB,GAClBvlD,KAAKqlD,MAAM3sB,YAAY4sB,GACvBtlD,KAAK4iE,IAAIlqC,YAAY14B,KAAKqlD,OAG1B,IAAIohC,EAAYvgC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3ChmD,KAAKm7B,cAGNqsB,QAAQ4xB,oBAAoBp5E,KAAKolD,MAAOqhC,GACxCj/B,QAAQ4xB,oBAAoBp5E,KAAKqlD,MAAOohC,GAExCzmF,KAAK0mF,QASN7/B,SAASnnD,UAAUmlF,SAAW,SAASz/B,GAGtC,IAAIryC,EAAQ/S,KAAKolD,MAAM3nB,WAEvB,MAAgB,MAAT1qB,EACP,CACC,IAAIjR,EAAOiR,EAAM4lB,YAEb5lB,EAAM8qB,UAAYgsB,YAAY0H,eAEjCx+C,EAAM0jB,WAAWgC,YAAY1lB,GAG9BA,EAAQjR,EAGTokD,QAAQ3Q,MAAMv1C,KAAKolD,MAAOA,GAAS,IACnCplD,KAAKolD,MAAM1sB,YAAY14B,KAAKo7E,UAQ7Bv0B,SAASnnD,UAAUqnD,cAAgB,SAAS4/B,GAGvC53E,UAAUC,UAAUxF,QAAQ,cAAgB,IAI9CxJ,KAAKwmF,eAAe5+D,MAAMonC,SAFvB23B,EAEkC,OAIA,WAUxC9/B,SAASnnD,UAAUy7B,SAAW,WAE7B,GAAI0rB,SAAS+/B,cAAgB5mF,KAC7B,CACC,IAAI4nB,EAAQs+B,QAAQwI,gBAAgB1uD,KAAKonD,cACrChkD,EAAkB,MAATwkB,EAAiBA,EAAMi/D,OAAS,EAE7C,GAAIhgC,SAAS+/B,aACb,CACC,IAAIz/B,EAAMN,SAAS+/B,aAAax/B,aAErB,MAAPD,GAA4B,MAAbA,EAAIv/B,QAEtBu/B,EAAIv/B,MAAMi/D,OAASzjF,GAIrB,IAAI0jF,EAAiBjgC,SAAS+/B,aAC9B5mF,KAAKonD,aAAax/B,MAAMi/D,OAASxxD,SAASjyB,GAAS,EACnDyjD,SAAS+/B,aAAe5mF,KAExBA,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQi1B,SAAU,iBAAkBqK,MASvEjgC,SAASnnD,UAAU0nD,WAAa,WAE/B,OAAOpnD,KAAK4iE,KAQb/b,SAASnnD,UAAUs0D,IAAM,WAExB9N,QAAQ8N,IAAIh0D,KAAK4iE,MAQlB/b,SAASnnD,UAAUqnF,YAAc,WAEhC,OAAmB,MAAf/mF,KAAK4lD,QAE4B,QAA7B5lD,KAAK4lD,OAAOh+B,MAAMikB,SAoB3Bgb,SAASnnD,UAAUsnD,aAAe,SAASggC,GAE1C,GAAIA,EAEH,GAAmB,MAAfhnF,KAAK4lD,OACT,CACC5lD,KAAK4lD,OAAS3qC,SAAS9b,cAAc,OACrCa,KAAK4lD,OAAOh+B,MAAM44B,SAAW,WAC7BxgD,KAAK4lD,OAAOh+B,MAAM8sC,OAAS,MAC3B10D,KAAK4lD,OAAOh+B,MAAM4sC,MAAQ,MAE1Bx0D,KAAK4lD,OAAO1tB,aAAa,MAAOl4B,KAAKomF,aACrCpmF,KAAK4lD,OAAOh+B,MAAM6mC,OAAS,YAE3B,IAAIw4B,EAAS,KACTC,EAAS,KACTphC,EAAQ,KACRH,EAAS,KAET16C,EAAQi7C,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAMvChmD,KAAKm7B,WACL8rD,EAASz/B,QAAQqwB,WAAW7xB,GAC5BkhC,EAAS1/B,QAAQuwB,WAAW/xB,GAC5BF,EAAQ9lD,KAAK4iE,IAAIzO,YACjBxO,EAAS3lD,KAAK4iE,IAAI10B,aAElBsZ,QAAQ4xB,oBAAoBn+D,SAAU,KAAMksE,EAAa5B,GACzDvlF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQk1B,aAAc,QAAS12B,IAChEwB,QAAQ8vB,QAAQtxB,MAKbmhC,EAAcjhC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE7C,GAAc,MAAVihC,GAA4B,MAAVC,EACtB,CACC,IAAIr4C,EAAK2Y,QAAQqwB,WAAW7xB,GAAOihC,EAC/Bl4C,EAAKyY,QAAQuwB,WAAW/xB,GAAOkhC,EAEnClnF,KAAKonF,QAAQthC,EAAQjX,EAAI8W,EAAS5W,GAElC/uC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm1B,OAAQ,QAAS32B,IAC1DwB,QAAQ8vB,QAAQtxB,OAIdu/B,EAAcr/B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE/B,MAAVihC,GAA4B,MAAVC,IAErBD,EAAS,KACTC,EAAS,KACT1/B,QAAQgyB,uBAAuBv+D,SAAU,KAAMksE,EAAa5B,GAC5DvlF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQC,WAAY,QAASzB,IAC9DwB,QAAQ8vB,QAAQtxB,OAIlBwB,QAAQ4xB,oBAAoBp5E,KAAK4lD,OAAQ36C,EAAOk8E,EAAa5B,GAC7DvlF,KAAK4iE,IAAIlqC,YAAY14B,KAAK4lD,aAI1B5lD,KAAK4lD,OAAOh+B,MAAMikB,QAAU,cAGN,MAAf7rC,KAAK4lD,SAEb5lD,KAAK4lD,OAAOh+B,MAAMikB,QAAU,SAS9Bgb,SAASnnD,UAAU0nF,QAAU,SAASthC,EAAOH,GAE5CG,EAAQ5lD,KAAKwD,IAAI1D,KAAKqmF,YAAYvgC,MAAOA,GACzCH,EAASzlD,KAAKwD,IAAI1D,KAAKqmF,YAAY1gC,OAAQA,GAGtC/E,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAMk+B,MAASA,EAAQ,KAChC9lD,KAAK4iE,IAAIh7C,MAAM+9B,OAASA,EAAS,MAGlC3lD,KAAKqlD,MAAMz9B,MAAMk+B,MAASA,EAAQ,KAClC9lD,KAAKqlD,MAAMz9B,MAAM+9B,OAASA,EAAS,KAE9B/E,SAASM,YAEblhD,KAAKwmF,eAAe5+D,MAAM+9B,OAAU3lD,KAAK4iE,IAAI10B,aAC5CluC,KAAKolD,MAAMlX,aAAeluC,KAAKsmF,wBAA2B,OAS7Dz/B,SAASnnD,UAAUklF,eAAiB,SAASN,GAE5CtkF,KAAKqnF,SAASz/D,MAAMikB,QAAU,EAAgB,GAAK,QAUpDgb,SAASnnD,UAAU4nF,eAAiB,WAEnC,OAAO,IAAIz8B,YAAY,EAAG,EAAG,EAAG7qD,KAAKolD,MAAMlX,eAQ5C2Y,SAASnnD,UAAUglF,uBAAyB,WAE3C1kF,KAAKqnF,SAAWpsE,SAAS9b,cAAc,OAEvCa,KAAKqnF,SAASnvD,aAAa,MAAOl4B,KAAKimF,eACvCjmF,KAAKqnF,SAASnvD,aAAa,QAAS,YACpCl4B,KAAKqnF,SAASz/D,MAAM6mC,OAAS,UAC7BzuD,KAAKqnF,SAASz/D,MAAM2/D,WAAa,MACjCvnF,KAAKqnF,SAASz/D,MAAMikB,QAAU,OAE9B7rC,KAAKo7E,QAAQ1iD,YAAY14B,KAAKqnF,UAE9B,IAAIG,GAAY,EACZC,EAAa,KACb9hC,EAAS,KAETmC,EAAQ5B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAIvC,GAFAhmD,KAAKm7B,WAEAqsD,EA2CJA,GAAY,EAEZxnF,KAAKqnF,SAASnvD,aAAa,MAAOl4B,KAAKimF,eACvCjmF,KAAKqnF,SAASnvD,aAAa,QAAS,YACpCl4B,KAAKwmF,eAAe5+D,MAAMikB,QAAU,GACpC7rC,KAAK0nF,SAAS9/D,MAAMikB,QAAU47C,EAEzB7mC,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAM+9B,OAASA,GAGzB3lD,KAAKqlD,MAAMz9B,MAAM+9B,OAASA,EAEP,MAAf3lD,KAAK4lD,SAER5lD,KAAK4lD,OAAOh+B,MAAMygC,WAAa,IAGhCroD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQG,UAAW,QAAS3B,QA7D9D,CACCwhC,GAAY,EAEZxnF,KAAKqnF,SAASnvD,aAAa,MAAOl4B,KAAKkmF,gBACvClmF,KAAKqnF,SAASnvD,aAAa,QAAS,aACpCl4B,KAAKwmF,eAAe5+D,MAAMikB,QAAU,OACpC47C,EAAaznF,KAAK0nF,SAAS9/D,MAAMikB,QAEjC7rC,KAAK0nF,SAAS9/D,MAAMikB,QAAU,OAC9B8Z,EAAS3lD,KAAKqlD,MAAMz9B,MAAM+9B,OAE1B,IAAIgiC,EAAU3nF,KAAKsnF,iBAEfK,EAAQhiC,OAAS,IAEf/E,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAM+9B,OAASgiC,EAAQhiC,OAAS,MAG1C3lD,KAAKqlD,MAAMz9B,MAAM+9B,OAASgiC,EAAQhiC,OAAS,MAGxCgiC,EAAQ7hC,MAAQ,IAEdlF,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAMk+B,MAAQ6hC,EAAQ7hC,MAAQ,MAGxC9lD,KAAKqlD,MAAMz9B,MAAMk+B,MAAQ6hC,EAAQ7hC,MAAQ,MAGvB,MAAf9lD,KAAK4lD,SAER5lD,KAAK4lD,OAAOh+B,MAAMygC,WAAa,UAGhCroD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ01B,SAAU,QAASl3B,IA0B7DwB,QAAQ8vB,QAAQtxB,MAGjBwB,QAAQ4xB,oBAAoBp5E,KAAKqnF,SAAUv/B,IAQ5CjB,SAASnnD,UAAUonD,eAAiB,SAAS8gC,GAE5C5nF,KAAK0nF,SAAS9/D,MAAMikB,QAAU,EAAgB,GAAK,QAQpDgb,SAASnnD,UAAU+kF,uBAAyB,WAE3CzkF,KAAK0nF,SAAWzsE,SAAS9b,cAAc,OAEvCa,KAAK0nF,SAASxvD,aAAa,MAAOl4B,KAAKmmF,eACvCnmF,KAAK0nF,SAASxvD,aAAa,QAAS,YACpCl4B,KAAK0nF,SAAS9/D,MAAM6mC,OAAS,UAC7BzuD,KAAK0nF,SAAS9/D,MAAM2/D,WAAa,MACjCvnF,KAAK0nF,SAAS9/D,MAAM6mC,OAAS,UAC7BzuD,KAAK0nF,SAAS9/D,MAAMikB,QAAU,OAE9B7rC,KAAKo7E,QAAQ1iD,YAAY14B,KAAK0nF,UAE9B,IAAIG,GAAY,EACZ7oC,EAAI,KACJ4L,EAAI,KACJjF,EAAS,KACTG,EAAQ,KACRgiC,EAAa,KAEbhgC,EAAQ5B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAIvC,GAFAhmD,KAAKm7B,WAE8B,QAA/Bn7B,KAAK0nF,SAAS9/D,MAAMikB,QACxB,CACC,GAAKg8C,EAgDL,CAYC,GAXAA,GAAY,EAEZ7nF,KAAK0nF,SAASxvD,aAAa,MAAOl4B,KAAKmmF,eACvCnmF,KAAK0nF,SAASxvD,aAAa,QAAS,YACpCl4B,KAAKwmF,eAAe5+D,MAAMikB,QAAU,GACpC7rC,KAAKqnF,SAASz/D,MAAMikB,QAAUi8C,EAG9B9nF,KAAK4iE,IAAIh7C,MAAMknB,KAAOkQ,EAAE,KACxBh/C,KAAK4iE,IAAIh7C,MAAMonB,IAAM4b,EAAE,MAElBhK,SAASM,UACd,CACClhD,KAAK4iE,IAAIh7C,MAAM+9B,OAASA,EACxB3lD,KAAK4iE,IAAIh7C,MAAMk+B,MAAQA,EAEnBl+B,EAAQs+B,QAAQwI,gBAAgB1uD,KAAKwmF,gBAEnB,QAAlB5+D,EAAMonC,UAAqC,MAAfhvD,KAAK4lD,SAEpC5lD,KAAKwmF,eAAe5+D,MAAM+9B,OAAU3lD,KAAK4iE,IAAI10B,aAC5CluC,KAAKolD,MAAMlX,aAAeluC,KAAKsmF,wBAA2B,MAI7DtmF,KAAKqlD,MAAMz9B,MAAM+9B,OAASA,EAC1B3lD,KAAKqlD,MAAMz9B,MAAMk+B,MAAQA,EAEN,MAAf9lD,KAAK4lD,SAER5lD,KAAK4lD,OAAOh+B,MAAMygC,WAAa,IAGhCroD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQG,UAAW,QAAS3B,QAjF9D,CACC6hC,GAAY,EAEZ7nF,KAAK0nF,SAASxvD,aAAa,MAAOl4B,KAAKkmF,gBACvClmF,KAAK0nF,SAASxvD,aAAa,QAAS,aACpCl4B,KAAKwmF,eAAe5+D,MAAMikB,QAAU,GACpCi8C,EAAa9nF,KAAKqnF,SAASz/D,MAAMikB,QACjC7rC,KAAKqnF,SAASz/D,MAAMikB,QAAU,OAG9BmT,EAAI3pB,SAASr1B,KAAK4iE,IAAIh7C,MAAMknB,MAC5B8b,EAAIv1B,SAASr1B,KAAK4iE,IAAIh7C,MAAMonB,KAC5B2W,EAAS3lD,KAAKqlD,MAAMz9B,MAAM+9B,OAC1BG,EAAQ9lD,KAAKqlD,MAAMz9B,MAAMk+B,MAEzB9lD,KAAK4iE,IAAIh7C,MAAMknB,KAAO,MACtB9uC,KAAK4iE,IAAIh7C,MAAMonB,IAAM,MACrB,IAAI+4C,EAAY7nF,KAAKwD,IAAIuX,SAASgzB,KAAK0Y,cAAgB,EAAG1rC,SAAS2nC,gBAAgB+D,cAAgB,GAgBnG,GAdK/F,SAASM,YAEblhD,KAAK4iE,IAAIh7C,MAAMk+B,MAAS7qC,SAASgzB,KAAK2Y,YAAc,EAAK,KACzD5mD,KAAK4iE,IAAIh7C,MAAM+9B,OAAUoiC,EAAY,EAAK,MAG3C/nF,KAAKqlD,MAAMz9B,MAAMk+B,MAAS7qC,SAASgzB,KAAK2Y,YAAc,EAAK,KAC3D5mD,KAAKqlD,MAAMz9B,MAAM+9B,OAAUoiC,EAAY,EAAK,KAEzB,MAAf/nF,KAAK4lD,SAER5lD,KAAK4lD,OAAOh+B,MAAMygC,WAAa,WAG3BzH,SAASM,UACd,CACC,IAAIt5B,EAAQs+B,QAAQwI,gBAAgB1uD,KAAKwmF,gBAEnB,QAAlB5+D,EAAMonC,UAAqC,MAAfhvD,KAAK4lD,SAEpC5lD,KAAKwmF,eAAe5+D,MAAM+9B,OAAU3lD,KAAK4iE,IAAI10B,aAC5CluC,KAAKolD,MAAMlX,aAAeluC,KAAKsmF,wBAA2B,MAI7DtmF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQE,SAAU,QAAS1B,IAwC7DwB,QAAQ8vB,QAAQtxB,OAIlBwB,QAAQ4xB,oBAAoBp5E,KAAK0nF,SAAU5/B,GAC3CN,QAAQD,YAAYvnD,KAAKolD,MAAO,WAAY0C,IAQ7CjB,SAASnnD,UAAUolF,mBAAqB,WAEvC9kF,KAAKolD,MAAMx9B,MAAM6mC,OAAS,OAE1BjH,QAAQ4xB,oBAAoBp5E,KAAKolD,MAChCc,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3B,IAAIihC,EAASz/B,QAAQqwB,WAAW7xB,GAC5BkhC,EAAS1/B,QAAQuwB,WAAW/xB,GAC5BhH,EAAIh/C,KAAK43E,OACThtB,EAAI5qD,KAAK83E,OAITqP,EAAcjhC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE7C,IAAInX,EAAK2Y,QAAQqwB,WAAW7xB,GAAOihC,EAC/Bl4C,EAAKyY,QAAQuwB,WAAW/xB,GAAOkhC,EACnClnF,KAAKgoF,YAAYhpC,EAAInQ,EAAI+b,EAAI7b,GAC7B/uC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq1B,KAAM,QAAS72B,IACxDwB,QAAQ8vB,QAAQtxB,MAGbu/B,EAAcr/B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE7CwB,QAAQgyB,uBAAuBv+D,SAAU,KAAMksE,EAAa5B,GAC5DvlF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQs1B,SAAU,QAAS92B,IAC5DwB,QAAQ8vB,QAAQtxB,MAGjBwB,QAAQ4xB,oBAAoBn+D,SAAU,KAAMksE,EAAa5B,GACzDvlF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo1B,WAAY,QAAS52B,IAC9DwB,QAAQ8vB,QAAQtxB,OAIdpF,SAASiC,aAEZ7iD,KAAKolD,MAAMx9B,MAAM2+D,YAAc,SAShC1/B,SAASnnD,UAAUsoF,YAAc,SAAShpC,EAAG4L,GAE7C5qD,KAAK4iE,IAAIh7C,MAAMknB,KAAOkQ,EAAI,KAC1Bh/C,KAAK4iE,IAAIh7C,MAAMonB,IAAM4b,EAAI,MAQ1B/D,SAASnnD,UAAUk4E,KAAO,WAEzB,OAAOviD,SAASr1B,KAAK4iE,IAAIh7C,MAAMknB,OAQhC+X,SAASnnD,UAAUo4E,KAAO,WAEzB,OAAOziD,SAASr1B,KAAK4iE,IAAIh7C,MAAMonB,MAShC6X,SAASnnD,UAAUilF,oBAAsB,WAExC3kF,KAAKioF,SAAWhtE,SAAS9b,cAAc,OAEvCa,KAAKioF,SAAS/vD,aAAa,MAAOl4B,KAAKgmF,YACvChmF,KAAKioF,SAAS/vD,aAAa,QAAS,SACpCl4B,KAAKioF,SAASrgE,MAAM2/D,WAAa,MACjCvnF,KAAKioF,SAASrgE,MAAM6mC,OAAS,UAC7BzuD,KAAKioF,SAASrgE,MAAMikB,QAAU,OAE9B7rC,KAAKo7E,QAAQ1iD,YAAY14B,KAAKioF,UAE9BzgC,QAAQ4xB,oBAAoBp5E,KAAKioF,SAChC/hC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ61B,MAAO,QAASr3B,IAErDhmD,KAAKknD,eAERlnD,KAAK0lB,UAIL1lB,KAAKioD,YAAW,GAGjBT,QAAQ8vB,QAAQtxB,QAanBa,SAASnnD,UAAUwoF,SAAW,SAASC,GAEtCnoF,KAAKmoF,MAAQltE,SAAS9b,cAAc,OACpCa,KAAKmoF,MAAMjwD,aAAa,MAAOiwD,GAC/BnoF,KAAKmoF,MAAMjwD,aAAa,QAAS,QACjCl4B,KAAKmoF,MAAMvgE,MAAMwgE,YAAc,MAC/BpoF,KAAKmoF,MAAMvgE,MAAM2/D,WAAa,MAC9BvnF,KAAKmoF,MAAMvgE,MAAMygE,UAAY,OAE7BroF,KAAKolD,MAAM9sB,aAAat4B,KAAKmoF,MAAOnoF,KAAKolD,MAAM3nB,aAYhDopB,SAASnnD,UAAUunD,YAAc,SAASqhC,GAEzCtoF,KAAKioF,SAASrgE,MAAMikB,QAAU,EAAa,GAAK,QAQjDgb,SAASnnD,UAAUsoD,UAAY,WAE9B,OAAgB,MAAZhoD,KAAK4iE,KAEyB,QAA1B5iE,KAAK4iE,IAAIh7C,MAAMikB,SAexBgb,SAASnnD,UAAUuoD,WAAa,SAASC,GAExB,MAAZloD,KAAK4iE,KAAe5iE,KAAKgoD,aAAeE,IAEvCA,EAEHloD,KAAKqpC,OAILrpC,KAAK0mF,SAUR7/B,SAASnnD,UAAU2pC,KAAO,WAEzBrpC,KAAK4iE,IAAIh7C,MAAMikB,QAAU,GACzB7rC,KAAKm7B,WAEL,IAAIvT,EAAQs+B,QAAQwI,gBAAgB1uD,KAAKwmF,gBAEpC5lC,SAASM,WAAgC,QAAlBt5B,EAAMonC,UAAqC,MAAfhvD,KAAK4lD,QACvB,QAArC5lD,KAAKwmF,eAAe5+D,MAAMikB,UAE1B7rC,KAAKwmF,eAAe5+D,MAAM+9B,OAAU3lD,KAAK4iE,IAAI10B,aAC3CluC,KAAKolD,MAAMlX,aAAeluC,KAAKsmF,wBAA2B,MAG7DtmF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ41B,QAQ1Cv2B,SAASnnD,UAAUgnF,KAAO,WAEzB1mF,KAAK4iE,IAAIh7C,MAAMikB,QAAU,OACzB7rC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ21B,QAS1Ct2B,SAASnnD,UAAUgmB,QAAU,WAE5B1lB,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ81B,UAEzB,MAAZt9E,KAAK4iE,MAERpb,QAAQ0yB,QAAQl6E,KAAK4iE,KACrB5iE,KAAK4iE,IAAInsC,WAAWgC,YAAYz4B,KAAK4iE,KACrC5iE,KAAK4iE,IAAM,MAGZ5iE,KAAKolD,MAAQ,KACbplD,KAAKimD,QAAU,KACfjmD,KAAKwmF,eAAiB,MAGvB7lC,WAAWkG,SAA+B,qBAAbA,SAA2BA,cAAWtmD,EA6BnEykF,OAAOtlF,UAAU2lD,MAAQ,KAQzB2/B,OAAOtlF,UAAUuuC,MAAO,EAOxB+2C,OAAOtlF,UAAU6oF,SAAW,WAE3B,OAAOvoF,KAAKqlD,OASb2/B,OAAOtlF,UAAU8oF,WAAa,SAASC,EAASC,GAE/C,IAAInjC,EAAKtqC,SAAS9b,cAAc,MAC5BqmD,EAAKvqC,SAAS9b,cAAc,MAChComD,EAAG7sB,YAAY8sB,GACfA,EAAKvqC,SAAS9b,cAAc,MAG5B,IAAI4oD,EAAS9sC,SAAS9b,cAAc,UACpC+mD,QAAQ3Q,MAAMwS,EAAQtE,YAAYpkD,IAAI,OAAS,MAC/CmmD,EAAG9sB,YAAYqvB,GAEfP,QAAQD,YAAYQ,EAAQ,SAAS,WAEpC0gC,OAID1gC,EAAS9sC,SAAS9b,cAAc,UAChC+mD,QAAQ3Q,MAAMwS,EAAQtE,YAAYpkD,IAAI,WAAa,UACnDmmD,EAAG9sB,YAAYqvB,GAEfP,QAAQD,YAAYQ,EAAQ,SAAS,WAEpC2gC,OAGDnjC,EAAG7sB,YAAY8sB,GACfxlD,KAAKiuC,KAAKvV,YAAY6sB,IAQvBy/B,OAAOtlF,UAAUipF,QAAU,SAAS7qF,EAAMR,EAAOqZ,GAEhD,IAAIohC,EAAQ98B,SAAS9b,cAAc,SAKnC,OAHA44C,EAAM7f,aAAa,OAAQvhB,GAAQ,QACnCohC,EAAMz6C,MAAQA,EAEP0C,KAAK4oF,SAAS9qF,EAAMi6C,IAQ5BitC,OAAOtlF,UAAUmpF,YAAc,SAAS/qF,EAAMR,GAE7C,IAAIy6C,EAAQ98B,SAAS9b,cAAc,SAWnC,OATA44C,EAAM7f,aAAa,OAAQ,YAC3Bl4B,KAAK4oF,SAAS9qF,EAAMi6C,GAGhBz6C,IAEHy6C,EAAM+wC,SAAU,GAGV/wC,GAQRitC,OAAOtlF,UAAUqpF,YAAc,SAASjrF,EAAMR,EAAO0rF,GAEpD,IAAIjxC,EAAQ98B,SAAS9b,cAAc,YAUnC,OARIyhD,SAASW,OAEZynC,IAGDjxC,EAAM7f,aAAa,OAAQ8wD,GAAQ,GACnCjxC,EAAMz6C,MAAQA,EAEP0C,KAAK4oF,SAAS9qF,EAAMi6C,IAQ5BitC,OAAOtlF,UAAUupF,SAAW,SAASnrF,EAAMorF,EAAezoC,GAEzD,IAAI0oC,EAASluE,SAAS9b,cAAc,UAYpC,OAVY,MAARshD,GAEH0oC,EAAOjxD,aAAa,OAAQuoB,GAGzByoC,GAEHC,EAAOjxD,aAAa,WAAY,QAG1Bl4B,KAAK4oF,SAAS9qF,EAAMqrF,IAQ5BnE,OAAOtlF,UAAU0pF,UAAY,SAASC,EAAOn2B,EAAO51D,EAAOgsF,GAE1D,IAAIj+C,EAASpwB,SAAS9b,cAAc,UAEpC+mD,QAAQ0B,QAAQvc,EAAQ6nB,GACxB7nB,EAAOnT,aAAa,QAAS56B,GAEzBgsF,GAEHj+C,EAAOnT,aAAa,WAAYoxD,GAGjCD,EAAM3wD,YAAY2S,IASnB25C,OAAOtlF,UAAUkpF,SAAW,SAAS9qF,EAAMi6C,GAE1C,IAAIwN,EAAKtqC,SAAS9b,cAAc,MAC5BqmD,EAAKvqC,SAAS9b,cAAc,MAShC,OARA+mD,QAAQ3Q,MAAMiQ,EAAI1nD,GAClBynD,EAAG7sB,YAAY8sB,GAEfA,EAAKvqC,SAAS9b,cAAc,MAC5BqmD,EAAG9sB,YAAYqf,GACfwN,EAAG7sB,YAAY8sB,GACfxlD,KAAKiuC,KAAKvV,YAAY6sB,GAEfxN,GAGR4I,WAAWqkC,OAA2B,qBAAXA,OAAyBA,YAASzkF,EA2B7D2kF,QAAQxlF,UAAUkV,IAAM,KAOxBswE,QAAQxlF,UAAUomD,MAAQ,KAO1Bo/B,QAAQxlF,UAAUimD,OAAS,KAE3BhF,WAAWukC,QAA6B,qBAAZA,QAA0BA,aAAU3kF,EAgFhE4kF,aAAazlF,UAAU0lF,aAAc,EAOrCD,aAAazlF,UAAU2lF,cAAe,EAOtCF,aAAazlF,UAAU4lF,gBAAiB,EAOxCH,aAAazlF,UAAUkmD,OAAS,WAE/B,IAAIY,EAAIxmD,KAAKupF,mBACTxiF,EAAI/G,KAAKwpF,oBAET5+E,EAAIyqB,SAASr1B,KAAK4iE,IAAIh7C,MAAMknB,MAC5BovB,EAAI7oC,SAASr1B,KAAK4iE,IAAIh7C,MAAM4sC,OAC5BxI,EAAI32B,SAASr1B,KAAK4iE,IAAIh7C,MAAMonB,KAC5BnuC,EAAIw0B,SAASr1B,KAAK4iE,IAAIh7C,MAAM8sC,QAE5B10D,KAAKolF,cACP/kF,MAAMuK,KACNvK,MAAM69D,IACPtzD,GAAK,GACLszD,GAAK,GACL1X,EAAI0X,EAAItzD,EAAI,IAEZ5K,KAAK4iE,IAAIh7C,MAAMk+B,MAASU,EAAI0X,EAAItzD,EAAG,MAGhC5K,KAAKqlF,eACPhlF,MAAM2rD,KACN3rD,MAAMQ,IACPmrD,GAAK,GACLnrD,GAAK,GACLkG,EAAIilD,EAAInrD,EAAI,IAEZb,KAAK4iE,IAAIh7C,MAAM+9B,OAAU5+C,EAAIilD,EAAInrD,EAAG,OAUtCskF,aAAazlF,UAAU6pF,iBAAmB,WAEzC,OAAOtuE,SAASgzB,KAAK2Y,aAStBu+B,aAAazlF,UAAU8pF,kBAAoB,WAE1C,OAAOvuE,SAASgzB,KAAK0Y,cAGtBhG,WAAWwkC,aAAuC,qBAAjBA,aAA+BA,kBAAe5kF,EAqD/E6mE,aAAa1nE,UAAU8uD,QAAU,KAQjC4Y,aAAa1nE,UAAU6lF,YAAc,KAOrCne,aAAa1nE,UAAU2nE,WAAa,KAQpCD,aAAa1nE,UAAUonE,YAAc,KAOrCM,aAAa1nE,UAAU+pF,eAAiB,KAOxCriB,aAAa1nE,UAAUgqF,SAAU,EAOjCtiB,aAAa1nE,UAAUiqF,aAAe,KAOtCviB,aAAa1nE,UAAUkqF,kBAAoB,KAO3CxiB,aAAa1nE,UAAUmqF,aAAe,KAOtCziB,aAAa1nE,UAAUoqF,aAAe,KAOtC1iB,aAAa1nE,UAAUqqF,iBAAmB,KAO1C3iB,aAAa1nE,UAAUqnE,YAAa,EAOpCK,aAAa1nE,UAAUsqF,eAAgB,EAOvC5iB,aAAa1nE,UAAUuqF,aAAc,EAOrC7iB,aAAa1nE,UAAUunE,sBAAuB,EAO9CG,aAAa1nE,UAAUwqF,kBAAoB,IAO3C9iB,aAAa1nE,UAAUyqF,mBAAqB,GAQ5C/iB,aAAa1nE,UAAU0qF,kBAAmB,EAO1ChjB,aAAa1nE,UAAUyuD,UAAY,WAElC,OAAOnuD,KAAK0pF,SAQbtiB,aAAa1nE,UAAU2qF,WAAa,SAAS/sF,GAE5C0C,KAAK0pF,QAAUpsF,GAQhB8pE,aAAa1nE,UAAU4qF,gBAAkB,WAExC,OAAOtqF,KAAKgqF,eAQb5iB,aAAa1nE,UAAU6nE,iBAAmB,SAASjqE,GAElD0C,KAAKgqF,cAAgB1sF,GAQtB8pE,aAAa1nE,UAAU6qF,cAAgB,WAEtC,OAAOvqF,KAAKiqF,aAQb7iB,aAAa1nE,UAAU8qF,eAAiB,SAASltF,GAEhD0C,KAAKiqF,YAAc3sF,GASpB8pE,aAAa1nE,UAAU8nE,iBAAmB,SAASxhB,GAElD,OAAO,MASRohB,aAAa1nE,UAAUwnE,cAAgB,SAAS9a,EAAOpN,EAAG4L,EAAG5E,GAE5D,OAAOoG,EAAMq+B,UAAUzrC,EAAG4L,IAS3Bwc,aAAa1nE,UAAU+nE,kBAAoB,SAASzhB,GAEnD,OAAOhmD,KAAKwuD,QAAQ9f,WAAU,IAS/B04B,aAAa1nE,UAAUgoE,qBAAuB,SAAStb,GAEtD,OAAO,MAQRgb,aAAa1nE,UAAUgrF,SAAW,WAEjC,OAAgC,MAAzB1qF,KAAK2qF,kBAQbvjB,aAAa1nE,UAAUkrF,MAAQ,WAEL,MAArB5qF,KAAK2pF,eAER3pF,KAAK6qF,SAAS7qF,KAAK2pF,cACnB3pF,KAAK2pF,aAAe,MAGrB3pF,KAAK8qF,oBACL9qF,KAAK+qF,kBACL/qF,KAAKgrF,YAwBN5jB,aAAa1nE,UAAU8lF,UAAY,SAASx/B,GAEvChmD,KAAK0pF,UAAYliC,QAAQ6vB,WAAWrxB,IAAiC,MAAzBhmD,KAAK2qF,mBAEpD3qF,KAAKirF,UAAUjlC,GACfhmD,KAAK2qF,iBAAmBzkC,QAAQ1jD,KAAKxC,KAAMA,KAAKkrF,WAChDlrF,KAAKmrF,eAAiBjlC,QAAQ1jD,KAAKxC,KAAMA,KAAKorF,SAC9C5jC,QAAQ4xB,oBAAoBn+D,SAAU,KAAMjb,KAAK2qF,iBAAkB3qF,KAAKmrF,gBAEpEvqC,SAAS+B,WAAa6E,QAAQ6wB,aAAaryB,KAE9ChmD,KAAK+2E,YAAcvvB,QAAQkwB,UAAU1xB,GACrCwB,QAAQ4xB,oBAAoBp5E,KAAK+2E,YAAa,KAAM/2E,KAAK2qF,iBAAkB3qF,KAAKmrF,mBAUnF/jB,aAAa1nE,UAAUurF,UAAY,SAASjlC,GAE3ChmD,KAAK8mE,YAAc9mE,KAAKynE,kBAAkBzhB,GAC1ChmD,KAAK8mE,YAAYl/C,MAAM44B,SAAW,WAClCxgD,KAAK8mE,YAAYl/C,MAAMi/D,OAAS7mF,KAAKkqF,kBACrChkC,QAAQ+G,WAAWjtD,KAAK8mE,YAAa9mE,KAAKmqF,oBAEtCnqF,KAAKoqF,kBAAoBxpC,SAASyB,SAErCriD,KAAK8mE,YAAYl/C,MAAMyjE,cAAgB,SASzCjkB,aAAa1nE,UAAUsrF,SAAW,WAKjChrF,KAAK8qF,qBAQN1jB,aAAa1nE,UAAUorF,kBAAoB,WAElB,MAApB9qF,KAAK8mE,cAE2B,MAA/B9mE,KAAK8mE,YAAYrwC,YAEpBz2B,KAAK8mE,YAAYrwC,WAAWgC,YAAYz4B,KAAK8mE,aAG9C9mE,KAAK8mE,YAAc,OASrBM,aAAa1nE,UAAU4rF,mBAAqB,SAAStlC,GAEpD,OAASwB,QAAQkzB,aAAa10B,IAAQwB,QAAQszB,WAAW90B,GACvD/qC,SAASswE,iBAAiB/jC,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IACrEwB,QAAQkwB,UAAU1xB,IAQtBohB,aAAa1nE,UAAU8rF,mBAAqB,SAASp/B,EAAOpG,GAE3D,IAAIhH,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GACvBoO,EAASlO,QAAQ4X,UAAU1R,EAAM2R,WACjCa,EAAS1Y,QAAQuY,kBACjBtX,EAAMnnD,KAAKsrF,mBAAmBtlC,GAElC,GAAIhmD,KAAKoqF,iBAER,MAAc,MAAPjjC,GAAeA,GAAOiF,EAAM2R,UAElC5W,EAAMA,EAAI1wB,WAKZ,OAAc,MAAP0wB,GAAenI,GAAKoV,EAAOpV,EAAI4f,EAAO5f,GAAK4L,GAAKwJ,EAAOxJ,EAAIgU,EAAOhU,GACxE5L,GAAKoV,EAAOpV,EAAI4f,EAAO5f,EAAIoN,EAAM2R,UAAU5J,aAC3CvJ,GAAKwJ,EAAOxJ,EAAIgU,EAAOhU,EAAIwB,EAAM2R,UAAU7vB,cAU7Ck5B,aAAa1nE,UAAUwrF,UAAY,SAASllC,GAE3C,IAAIoG,EAAQpsD,KAAKwnE,iBAAiBxhB,GA4BlC,GAzBa,MAAToG,GAAkBpsD,KAAKwrF,mBAAmBp/B,EAAOpG,KAEpDoG,EAAQ,MAGLA,GAASpsD,KAAK2pF,eAEQ,MAArB3pF,KAAK2pF,cAER3pF,KAAK6qF,SAAS7qF,KAAK2pF,aAAc3jC,GAGlChmD,KAAK2pF,aAAev9B,EAEK,MAArBpsD,KAAK2pF,cAER3pF,KAAKyrF,UAAUzrF,KAAK2pF,aAAc3jC,IAIX,MAArBhmD,KAAK2pF,cAER3pF,KAAK0rF,SAAS1rF,KAAK2pF,aAAc3jC,GAGV,MAApBhmD,KAAK8mE,aAA+C,MAAvB9mE,KAAKypF,gBAAkE,WAAxCzpF,KAAKypF,eAAe7hE,MAAMygC,WAuB7D,MAApBroD,KAAK8mE,cAEb9mE,KAAK8mE,YAAYl/C,MAAMygC,WAAa,cAxBrC,CACC,IAAIrJ,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GAEQ,MAA/BhmD,KAAK8mE,YAAYrwC,YAEpBxb,SAASgzB,KAAKvV,YAAY14B,KAAK8mE,aAGhC9mE,KAAK8mE,YAAYl/C,MAAMygC,WAAa,UAEb,MAAnBroD,KAAKqnE,aAERroB,GAAKh/C,KAAKqnE,WAAWroB,EACrB4L,GAAK5qD,KAAKqnE,WAAWzc,GAGtB,IAAIwJ,EAASlO,QAAQmO,wBAAwBp5C,UAE7Cjb,KAAK8mE,YAAYl/C,MAAMknB,KAAQkQ,EAAIoV,EAAOpV,EAAK,KAC/Ch/C,KAAK8mE,YAAYl/C,MAAMonB,IAAO4b,EAAIwJ,EAAOxJ,EAAK,KAO/CpD,QAAQ8vB,QAAQtxB,IASjBohB,aAAa1nE,UAAU0rF,QAAU,SAASplC,GAEzC,GAAyB,MAArBhmD,KAAK2pF,aACT,CACC,GAAyB,MAArB3pF,KAAK6pF,eAAgD,MAAvB7pF,KAAKypF,gBACE,UAAxCzpF,KAAKypF,eAAe7hE,MAAMygC,YAC3B,CACC,IAAI8E,EAAQntD,KAAK2pF,aAAahsB,KAAKxQ,MAC/B5H,EAAKvlD,KAAK2pF,aAAahsB,KAAKkG,UAC5B7kB,EAAIh/C,KAAK6pF,aAAa7qC,EAAImO,EAAQ5H,EAAGvG,EACrC4L,EAAI5qD,KAAK6pF,aAAaj/B,EAAIuC,EAAQ5H,EAAGqF,EAEzC5qD,KAAK2rF,KAAK3rF,KAAK2pF,aAAc3jC,EAAKhmD,KAAK4pF,kBAAmB5qC,EAAG4L,GAG9D5qD,KAAK6qF,SAAS7qF,KAAK2pF,cACnB3pF,KAAK2pF,aAAe,KAGrB3pF,KAAKgrF,WACLhrF,KAAK+qF,kBAELvjC,QAAQ8vB,QAAQtxB,IAQjBohB,aAAa1nE,UAAUqrF,gBAAkB,WAEhB,MAApB/qF,KAAK+2E,cAERvvB,QAAQgyB,uBAAuBx5E,KAAK+2E,YAAa,KAAM/2E,KAAK2qF,iBAAkB3qF,KAAKmrF,gBACnFnrF,KAAK+2E,YAAc,MAGpBvvB,QAAQgyB,uBAAuBv+D,SAAU,KAAMjb,KAAK2qF,iBAAkB3qF,KAAKmrF,gBAC3EnrF,KAAK2qF,iBAAmB,KACxB3qF,KAAKmrF,eAAiB,MAQvB/jB,aAAa1nE,UAAU+rF,UAAY,SAASr/B,EAAOpG,GAElDoG,EAAMw/B,aAAc,EACpBx/B,EAAMy/B,eAAiBrkC,QAAQ6wB,aAAaryB,GAC5ChmD,KAAKypF,eAAiBzpF,KAAK0nE,qBAAqBtb,GAErB,MAAvBpsD,KAAKypF,gBAA0BzpF,KAAKoqF,kBAAoBxpC,SAASyB,SAEpEriD,KAAKypF,eAAe7hE,MAAMyjE,cAAgB,QAIvCrrF,KAAKsqF,mBAA4C,MAAvBtqF,KAAKypF,iBAElCzpF,KAAK8pF,aAAe,IAAIgC,QAAQ1/B,EAAOA,EAAM2/B,aAAaC,mBAGvDhsF,KAAKinE,uBAERjnE,KAAK+pF,iBAAmB,IAAIkC,gBAAgB7/B,EAAOvC,YAAY0gB,oBAIhEne,EAAM7E,YAAYC,QAAQm2B,iBAAkB39E,KAAKylF,gBAQlDre,aAAa1nE,UAAUmrF,SAAW,SAASz+B,EAAOpG,GAEjDhmD,KAAK4pF,kBAAoB,KACzB5pF,KAAK6pF,aAAe,KACpBz9B,EAAMw/B,aAAc,EAGpBx/B,EAAMosB,eAAex4E,KAAKylF,eAEC,MAAvBzlF,KAAKypF,iBAE8B,MAAlCzpF,KAAKypF,eAAehzD,YAEvBz2B,KAAKypF,eAAehzD,WAAWgC,YAAYz4B,KAAKypF,gBAGjDzpF,KAAKypF,eAAiB,MAGE,MAArBzpF,KAAK8pF,eAER9pF,KAAK8pF,aAAapkE,UAClB1lB,KAAK8pF,aAAe,MAGQ,MAAzB9pF,KAAK+pF,mBAER/pF,KAAK+pF,iBAAiBrkE,UACtB1lB,KAAK+pF,iBAAmB,OAU1B3iB,aAAa1nE,UAAUgsF,SAAW,SAASt/B,EAAOpG,GAEjD,IAAIoO,EAASlO,QAAQ4X,UAAU1R,EAAM2R,WACjCa,EAAS1Y,QAAQuY,gBAAgBrS,EAAM2R,WACvC/e,EAAIwI,QAAQqwB,WAAW7xB,GAAOoO,EAAOpV,EAAI4f,EAAO5f,EAAIoN,EAAM8/B,MAC1DthC,EAAIpD,QAAQuwB,WAAW/xB,GAAOoO,EAAOxJ,EAAIgU,EAAOhU,EAAIwB,EAAM+/B,MAQ9D,GANI//B,EAAMggC,aAAkC,MAAnBpsF,KAAK+mE,YAAsB/mE,KAAK+mE,aAExD3a,EAAMigC,qBAAqBrtC,EAAG4L,EAAGwB,EAAMkgC,YAIX,MAAzBtsF,KAAK+pF,kBAA4B39B,EAAMmgC,gBAC3C,CACCvsF,KAAK4pF,kBAAoB5pF,KAAKknE,cAAc9a,EAAOpN,EAAG4L,EAAG5E,GACzD,IAAIlV,EAAQsb,EAAMU,UAAUC,SAAS/sD,KAAK4pF,mBAC1C5pF,KAAK+pF,iBAAiByC,UAAU17C,GAIjC,GAA2B,MAAvB9wC,KAAKypF,eACT,CACuC,MAAlCzpF,KAAKypF,eAAehzD,aAEvB21B,EAAM2R,UAAUrlC,YAAY14B,KAAKypF,gBAEjCzpF,KAAKypF,eAAe7hE,MAAMi/D,OAAS,IACnC7mF,KAAKypF,eAAe7hE,MAAM44B,SAAW,YAGtC,IAAIypC,EAAcjqF,KAAKuqF,iBAAmBn+B,EAAMqgC,mBAAmBzmC,GAC/D0mC,GAAY,EAGhB,GAAyB,MAArB1sF,KAAK8pF,cAAwB9pF,KAAK8pF,aAAa6C,kBAAkB3mC,GACrE,CAEC,IAAIQ,EAAInxB,SAASr1B,KAAKypF,eAAe7hE,MAAMk+B,OACvC/+C,EAAIsuB,SAASr1B,KAAKypF,eAAe7hE,MAAM+9B,QACvCmX,EAAS,IAAIjS,YAAY,EAAG,EAAGrE,EAAGz/C,GAClCszE,EAAQ,IAAI1vB,QAAQ3L,EAAG4L,GAC3ByvB,EAAQr6E,KAAK8pF,aAAanQ,KAAK7c,EAAQud,EAAO4P,GAAa,GAC3DyC,GAAY,EACZ1tC,EAAIq7B,EAAMr7B,EACV4L,EAAIyvB,EAAMzvB,OAEN,GAAIq/B,EACT,CACC,IAAI98B,EAAQf,EAAMuR,KAAKxQ,MACnB5H,EAAK6G,EAAMuR,KAAKkG,UAChB+oB,EAAMxgC,EAAMygC,SAAW,EAC3B7tC,GAAKoN,EAAM0gC,KAAK9tC,EAAImO,EAAQ5H,EAAGvG,EAAI4tC,GAAOrnC,EAAGvG,GAAKmO,EAClDvC,GAAKwB,EAAM0gC,KAAKliC,EAAIuC,EAAQ5H,EAAGqF,EAAIgiC,GAAOrnC,EAAGqF,GAAKuC,EAG1B,MAArBntD,KAAK8pF,cAAwB4C,GAEhC1sF,KAAK8pF,aAAapD,OAGO,MAAtB1mF,KAAK+sF,gBAER/tC,GAAKh/C,KAAK+sF,cAAc/tC,EACxB4L,GAAK5qD,KAAK+sF,cAAcniC,GAGzB5qD,KAAKypF,eAAe7hE,MAAMknB,KAAO5uC,KAAKm8D,MAAMrd,GAAK,KACjDh/C,KAAKypF,eAAe7hE,MAAMonB,IAAM9uC,KAAKm8D,MAAMzR,GAAK,KAChD5qD,KAAKypF,eAAe7hE,MAAMygC,WAAa,UAGxCroD,KAAK6pF,aAAe,IAAIl/B,QAAQ3L,EAAG4L,IASpCwc,aAAa1nE,UAAUisF,KAAO,SAASv/B,EAAOpG,EAAKgnC,EAAYhuC,EAAG4L,GAEjE5qD,KAAKulF,YAAYxkF,MAAMf,KAAMgB,WAMW,UAApCorD,EAAM2R,UAAUn2C,MAAMygC,YAEzB+D,EAAM2R,UAAUsI,SAIlB1lB,WAAWymB,aAAuC,qBAAjBA,aAA+BA,kBAAe7mE,EAiC/EqlF,UAAUlmF,UAAY,IAAIo3E,cAC1B8O,UAAUlmF,UAAUqyB,YAAc6zD,UAOlCA,UAAUlmF,UAAUq+D,UAAY,KAOhC6nB,UAAUlmF,UAAUgqF,SAAU,EAU9B9D,UAAUlmF,UAAUutF,SAAU,EAa9BrH,UAAUlmF,UAAUwtF,mBAAoB,EAoBxCtH,UAAUlmF,UAAUytF,QAAU,SAAS/nC,EAAOqhB,EAAM3e,EAAOslC,EAAaxlE,EAAOylE,GAE9E,IAAI1mB,EAAM1rD,SAAS9b,cAAuB,MAARsnE,EAAgB,MAAQ,UACtD6mB,EAAmB1lE,IAA4B,MAAjBylE,EAChC,gBAAkB,iBACpB1mB,EAAIse,UAAYqI,EAChB3mB,EAAIzuC,aAAa,MAAOuuC,GAEX,MAATrhB,IAES,MAARqhB,EAEHE,EAAIzuC,aAAa,QAASktB,GAI1Bc,QAAQ3Q,MAAMoxB,EAAKvhB,IAIrBplD,KAAK+9D,UAAUrlC,YAAYiuC,GAGd,MAAT7e,IAEHN,QAAQD,YAAYof,EAAK,QAAS7e,GAE9BlH,SAAS+B,UAEZ6E,QAAQD,YAAYof,EAAK,WAAY7e,IAIvC,IAAIylC,EAAernC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3B,MAAfonC,EAEHzmB,EAAIzuC,aAAa,MAAOuuC,GAIxBE,EAAI/+C,MAAM4lE,gBAAkB,MA8D9B,OAxDAhmC,QAAQ4xB,oBAAoBzS,EAAKzgB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAY5D,GAVmB,MAAfonC,EAEHzmB,EAAIzuC,aAAa,MAAOk1D,GAIxBzmB,EAAI/+C,MAAM4lE,gBAAkB,OAIR,MAAjBH,EACJ,CACkB,MAAbrtF,KAAKytF,OAERztF,KAAKytF,KAAO,IAAIC,YAChB1tF,KAAKytF,KAAK/oE,QAGX,IAAI5G,EAAO9d,KAAK2tF,WAOhB,GALI3tF,KAAKytF,KAAKG,iBAEb5tF,KAAKytF,KAAKI,WAGP/vE,GAAQ6oD,EACZ,CAEC3mE,KAAK2tF,WAAahnB,EAClB3mE,KAAKytF,KAAKJ,cAAgBA,EAE1B,IAAIp7C,EAAQ,IAAI0Y,QACfgc,EAAIzS,WACJyS,EAAIlS,UAAYkS,EAAIz4B,cACrBluC,KAAKytF,KAAKlnC,MAAMtU,EAAM+M,EAAG/M,EAAM2Y,EAAG,KAAM5E,GAGpChmD,KAAKytF,KAAKG,kBAEbjnB,EAAIse,UAAYqI,EAAmB,WAEnCttF,KAAKytF,KAAKI,SAAW,WAEpBH,YAAYhuF,UAAUmuF,SAAS9sF,MAAMf,MACrC2mE,EAAIse,UAAYqI,EAChBttF,KAAK2tF,WAAa,YAKnB,KAAMJ,GAEV/lC,QAAQD,YAAYof,EAAK,WAAY4mB,GAE9B5mB,GAaRif,UAAUlmF,UAAUupF,SAAW,SAASrhE,GAEvC,IAAIg7C,EAAM3nD,SAAS9b,cAAc,OACjCyjE,EAAIh7C,MAAMikB,QAAU,SACpB+2B,EAAIqiB,UAAY,0BAEhB,IAAIkE,EAASluE,SAAS9b,cAAc,UAMpC,OALAgqF,EAAOlE,UAAYr9D,GAAS,iBAC5Bg7C,EAAIlqC,YAAYywD,GAEhBnpF,KAAK+9D,UAAUrlC,YAAYkqC,GAEpBumB,GAeRvD,UAAUlmF,UAAUouF,eAAiB,SAAS1oC,EAAOx9B,GAEpD,IAAIuhE,EAASluE,SAAS9b,cAAc,UAiBpC,OAhBAgqF,EAAOlE,UAAYr9D,GAAS,iBAC5B5nB,KAAKopF,UAAUD,EAAQ/jC,EAAO,MAE9BoC,QAAQD,YAAY4hC,EAAQ,UAAU,SAASnjC,GAE9C,IAAI1oD,EAAQ6rF,EAAOllF,QAAQklF,EAAO79C,eAClC69C,EAAO79C,cAAgB,EAEJ,MAAfhuC,EAAMwqD,OAETxqD,EAAMwqD,MAAM9B,MAIdhmD,KAAK+9D,UAAUrlC,YAAYywD,GAEpBA,GAgBRvD,UAAUlmF,UAAU0pF,UAAY,SAASC,EAAOjkC,EAAO9nD,GAEtD,IAAI+tC,EAASpwB,SAAS9b,cAAc,UAcpC,OAbA+mD,QAAQ0B,QAAQvc,EAAQ+Z,GAEH,mBAAX,EAET/Z,EAAOyc,MAAQxqD,EAIf+tC,EAAOnT,aAAa,QAAS56B,GAG9B+rF,EAAM3wD,YAAY2S,GAEXA,GAURu6C,UAAUlmF,UAAUquF,cAAgB,SAAS3oC,EAAOqhB,EAAM3e,EAAOslC,EAAaxlE,GAE7E,IAAI++C,EAAM1rD,SAAS9b,cAAc,OA4DjC,OA3DAwnE,EAAI2mB,iBAAmB1lE,GAAS,gBAChC++C,EAAIse,UAAYte,EAAI2mB,iBACpB3mB,EAAIzuC,aAAa,MAAOuuC,GACxBE,EAAIqnB,QAAUZ,EAED,MAAThoC,GAEHuhB,EAAIzuC,aAAa,QAASktB,GAG3BoC,QAAQD,YAAYof,EAAK,QAASzgB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE7D,IAAIr2B,EAAM3vB,KAAKiuF,aAAaD,QAEjB,MAAPr+D,GAEH3vB,KAAKiuF,aAAaD,QAAUhuF,KAAKiuF,aAAa1pD,aAAa,OAC3DvkC,KAAKiuF,aAAa/1D,aAAa,MAAOvI,IAItC3vB,KAAKiuF,aAAahJ,UAAYjlF,KAAKiuF,aAAaX,iBAG7CttF,KAAKktF,oBAERltF,KAAKkuF,YAAcvnB,GAGpB3mE,KAAKiuF,aAAetnB,EAEhBh3C,EAAMg3C,EAAIqnB,QAEH,MAAPr+D,GAEHg3C,EAAIqnB,QAAUrnB,EAAIpiC,aAAa,OAC/BoiC,EAAIzuC,aAAa,MAAOvI,IAIxBg3C,EAAIse,UAAYte,EAAI2mB,iBAAiB,WAGtCttF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQi2B,SACzC31B,QAGD9nD,KAAK+9D,UAAUrlC,YAAYiuC,GAEH,MAApB3mE,KAAKkuF,cAERluF,KAAKkuF,YAAcvnB,EAInB3mE,KAAKmuF,WAAWxnB,GAChB7e,KAGM6e,GAaRif,UAAUlmF,UAAU0uF,QAAU,SAAShpC,EAAOqhB,EAAM3e,EAAOslC,EAAaxlE,EAAO43B,GAE9EA,EAAoB,MAAVA,GAAkBA,EAC5B,IAAImnB,EAAM1rD,SAAS9b,cAAuB,MAARsnE,EAAgB,MAAQ,UAoC1D,OAlCAE,EAAI2mB,iBAAmB1lE,GAAS,gBAChC++C,EAAIse,UAAYte,EAAI2mB,iBACpB3mB,EAAIzuC,aAAa,MAAOuuC,GACxBE,EAAIqnB,QAAUZ,EAED,MAAThoC,GAEHuhB,EAAIzuC,aAAa,QAASktB,GAGvBplD,KAAK0pF,SAAWlqC,IAEnBgI,QAAQD,YAAYof,EAAK,QAASzgB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE7DhmD,KAAKmuF,WAAWxnB,EAAK7e,GACrB9nD,KAAKitF,SAAU,MAGhBzlC,QAAQD,YAAYof,EAAK,WAAYzgB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEhEhmD,KAAKmuF,WAAWxnB,EAAK7e,GACrB9nD,KAAKitF,SAAU,MAGQ,MAApBjtF,KAAKkuF,cAERluF,KAAKkuF,YAAcvnB,EACnB3mE,KAAKquF,gBAAkBvmC,EACvB9nD,KAAKmuF,WAAWxnB,EAAK7e,KAIvB9nD,KAAK+9D,UAAUrlC,YAAYiuC,GAEpBA,GAURif,UAAUlmF,UAAUyuF,WAAa,SAASG,EAASxmC,GAElD,GAAI9nD,KAAKiuF,cAAgBK,EACzB,CACC,GAAyB,MAArBtuF,KAAKiuF,aACT,CACC,IAAIt+D,EAAM3vB,KAAKiuF,aAAaD,QAEjB,MAAPr+D,GAEH3vB,KAAKiuF,aAAaD,QAAUhuF,KAAKiuF,aAAa1pD,aAAa,OAC3DvkC,KAAKiuF,aAAa/1D,aAAa,MAAOvI,IAItC3vB,KAAKiuF,aAAahJ,UAAYjlF,KAAKiuF,aAAaX,iBAIlDttF,KAAKiuF,aAAeK,EAChB3+D,EAAM3vB,KAAKiuF,aAAaD,QAEjB,MAAPr+D,GAEH3vB,KAAKiuF,aAAaD,QAAUhuF,KAAKiuF,aAAa1pD,aAAa,OAC3DvkC,KAAKiuF,aAAa/1D,aAAa,MAAOvI,IAItC3vB,KAAKiuF,aAAahJ,UAAYjlF,KAAKiuF,aAAaX,iBAAiB,WAGlEttF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQi2B,OAAQ,WAAY31B,MAU/D89B,UAAUlmF,UAAU6uF,UAAY,SAAS1pF,IAEnCA,GAAW7E,KAAKitF,SAAYjtF,KAAKiuF,cAAgBjuF,KAAKkuF,aAK1DluF,KAAKmuF,WAAWnuF,KAAKkuF,YAAaluF,KAAKquF,kBAazCzI,UAAUlmF,UAAU8uF,aAAe,SAAS/nB,GAE3C,OAAOzmE,KAAKmtF,QAAQ,KAAM1mB,EAAM,OAQjCmf,UAAUlmF,UAAU+uF,SAAW,WAE9BvoC,QAAQ8M,GAAGhzD,KAAK+9D,YAQjB6nB,UAAUlmF,UAAUgvF,QAAU,WAE7B,IAAIC,EAAK1zE,SAAS9b,cAAc,MAEhCwvF,EAAG/mE,MAAMwgE,YAAc,MACvBuG,EAAGz2D,aAAa,OAAQ,KAExBl4B,KAAK+9D,UAAUrlC,YAAYi2D,IAQ5B/I,UAAUlmF,UAAUgmB,QAAU,WAE7B8hC,QAAQ0yB,QAAQl6E,KAAK+9D,WACrB/9D,KAAK+9D,UAAY,KACjB/9D,KAAKkuF,YAAc,KACnBluF,KAAKquF,gBAAkB,KACvBruF,KAAKiuF,aAAe,KAEH,MAAbjuF,KAAKytF,MAERztF,KAAKytF,KAAK/nE,WAIZi7B,WAAWilC,UAAiC,qBAAdA,UAA4BA,eAAYrlF,EA8DtEslF,eAAenmF,UAAUwE,OAAS,KASlC2hF,eAAenmF,UAAU2sD,QAAU,KAQnCw5B,eAAenmF,UAAUomF,YAAc,KAOvCD,eAAenmF,UAAUkvF,QAAS,EAOlC/I,eAAenmF,UAAUmvF,QAAS,EAOlChJ,eAAenmF,UAAUgkF,QAAU,WAElC,OAA8B,GAAvB1jF,KAAKqsD,QAAQzrD,QAQrBilF,eAAenmF,UAAUovF,cAAgB,WAExC,OAAO9uF,KAAK8lF,aASbD,eAAenmF,UAAU8G,IAAM,SAASu6B,GAEvC/gC,KAAKqsD,QAAQt7C,KAAKgwB,IASnB8kD,eAAenmF,UAAUyR,OAAS,aAQlC00E,eAAenmF,UAAUqvF,IAAM,aAO/BlJ,eAAenmF,UAAUsvF,KAAO,WAE/B,IAAKhvF,KAAK4uF,OACV,CACC5uF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQw3B,aAGhD,IAFA,IAAI/rB,EAAQjzD,KAAKqsD,QAAQzrD,OAEhBsI,EAAI+pD,EAAQ,EAAG/pD,GAAK,EAAGA,IAChC,CACC,IAAI63B,EAAS/gC,KAAKqsD,QAAQnjD,GAEJ,MAAlB63B,EAAO0yB,QAEV1yB,EAAO0yB,UAEgB,MAAf1yB,EAAOiuD,MAEfjuD,EAAOiuD,OAIRhvF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQs3B,SAAU,SAAU/9C,IAGrE/gC,KAAK4uF,QAAS,EACd5uF,KAAK6uF,QAAS,EACd7uF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQ03B,WAGjDl/E,KAAKmR,UAQN00E,eAAenmF,UAAUuvF,KAAO,WAE/B,IAAKjvF,KAAK6uF,OACV,CACC7uF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQw3B,aAGhD,IAFA,IAAI/rB,EAAQjzD,KAAKqsD,QAAQzrD,OAEhBsI,EAAI,EAAGA,EAAI+pD,EAAO/pD,IAC3B,CACC,IAAI63B,EAAS/gC,KAAKqsD,QAAQnjD,GAEJ,MAAlB63B,EAAO0yB,QAEV1yB,EAAO0yB,UAEgB,MAAf1yB,EAAOkuD,MAEfluD,EAAOkuD,OAIRjvF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQs3B,SAAU,SAAU/9C,IAGrE/gC,KAAK4uF,QAAS,EACd5uF,KAAK6uF,QAAS,EACd7uF,KAAKkE,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQ03B,WAGjDl/E,KAAKmR,UAGNwvC,WAAWklC,eAA2C,qBAAnBA,eAAiCA,oBAAiBtlF,EAmFrFwlF,cAAcrmF,UAAY,IAAIo3E,cAC9BiP,cAAcrmF,UAAUqyB,YAAcg0D,cAQtCA,cAAcrmF,UAAU+gD,KAAO,KAO/BslC,cAAcrmF,UAAUwvF,QAAU,KAOlCnJ,cAAcrmF,UAAUyvF,eAAiB,EAOzCpJ,cAAcrmF,UAAUgkF,QAAU,WAEjC,OAA8B,GAAvB1jF,KAAKkvF,QAAQtuF,QAQrBmlF,cAAcrmF,UAAU8Q,MAAQ,WAE/BxQ,KAAKkvF,QAAU,GACflvF,KAAKmvF,eAAiB,EACtBnvF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy4B,SAQ1C8F,cAAcrmF,UAAU0vF,QAAU,WAEjC,OAAOpvF,KAAKmvF,eAAiB,GAQ9BpJ,cAAcrmF,UAAUsvF,KAAO,WAE3B,MAAOhvF,KAAKmvF,eAAiB,EAC7B,CACI,IAAIE,EAAOrvF,KAAKkvF,UAAUlvF,KAAKmvF,gBAGrC,GAFME,EAAKL,OAEPK,EAAKP,gBACH,CACC9uF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ43B,KAAM,OAAQiQ,IACpD,SAUZtJ,cAAcrmF,UAAU4vF,QAAU,WAEjC,OAAOtvF,KAAKmvF,eAAiBnvF,KAAKkvF,QAAQtuF,QAQ3CmlF,cAAcrmF,UAAUuvF,KAAO,WAE3B,IAAIhnF,EAAIjI,KAAKkvF,QAAQtuF,OAErB,MAAOZ,KAAKmvF,eAAiBlnF,EAC7B,CACI,IAAIonF,EAAQrvF,KAAKkvF,QAAQlvF,KAAKmvF,kBAG9B,GAFAE,EAAKJ,OAEDI,EAAKP,gBACT,CACC9uF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ63B,KAAM,OAAQgQ,IACpD,SAUZtJ,cAAcrmF,UAAU6vF,qBAAuB,SAASC,GAEvDxvF,KAAKyiC,OAEDziC,KAAKygD,KAAO,GACfzgD,KAAKygD,MAAQzgD,KAAKkvF,QAAQtuF,QAE1BZ,KAAKkvF,QAAQnxE,QAGd/d,KAAKkvF,QAAQn+E,KAAKy+E,GAClBxvF,KAAKmvF,eAAiBnvF,KAAKkvF,QAAQtuF,OACnCZ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu4B,IAAK,OAAQyP,KASvDzJ,cAAcrmF,UAAU+iC,KAAO,WAE9B,GAAIziC,KAAKkvF,QAAQtuF,OAASZ,KAAKmvF,eAK9B,IAHA,IAAIM,EAAQzvF,KAAKkvF,QAAQzlF,OAAOzJ,KAAKmvF,eACpCnvF,KAAKkvF,QAAQtuF,OAASZ,KAAKmvF,gBAEnBjmF,EAAI,EAAGA,EAAIumF,EAAM7uF,OAAQsI,IAEjCumF,EAAMvmF,GAAG6lF,OAKZpuC,WAAWolC,cAAyC,qBAAlBA,cAAgCA,mBAAgBxlF,EAYlF,IAAImvF,eAAiB,aA2JrB,SAASC,iBAAiBvjC,GAEzBpsD,KAAK4vF,OAAS,KACd5vF,KAAKmvB,QAAS,EACdnvB,KAAK6vF,IAAM,EACX7vF,KAAK8vF,IAAM,EACX9vF,KAAK+vF,IAAM,EACX/vF,KAAKgwF,IAAM,EACXhwF,KAAK6uC,GAAK,EACV7uC,KAAK+uC,GAAK,EACV/uC,KAAKiwF,YAAa,EAClBjwF,KAAKm+D,WAAa,EAClBn+D,KAAKsoD,UAAY,EAEjBtoD,KAAKkwF,cACL,CACI1K,UAAW,SAASl+B,EAAQq+B,KAC5BuF,UAAW,SAAS5jC,EAAQq+B,KAC5ByF,QAASllC,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQq+B,GAExC3lF,KAAKmvB,QAERnvB,KAAKuD,WAKX6oD,EAAM+jC,iBAAiBnwF,KAAKkwF,eAE5BlwF,KAAKowF,gBAAkBlqC,QAAQ1jD,KAAKxC,MAAM,WAEjCA,KAAKmvB,QAERnvB,KAAKuD,UAKXikD,QAAQD,YAAYtsC,SAAU,UAAWjb,KAAKowF,iBAE9C,IAAIC,EAAenqC,QAAQ1jD,KAAKxC,MAAM,WAMjC,OAJAA,KAAKiwF,WAAa/pC,QAAQ6I,cAAc3C,EAAM2R,WAC9C/9D,KAAKm+D,WAAa/R,EAAM2R,UAAUI,WAClCn+D,KAAKsoD,UAAY8D,EAAM2R,UAAUzV,UAE1B75C,OAAO6hF,YAAYpqC,QAAQ1jD,KAAKxC,MAAM,WAKhD,GAHAA,KAAK6vF,KAAO7vF,KAAK6uC,GACjB7uC,KAAK8vF,KAAO9vF,KAAK+uC,GAEb/uC,KAAKiwF,WACT,CACC,IAAInhD,GAAQsd,EAAM2R,UAAUI,WAAaj+D,KAAKD,KAAKD,KAAK6uC,IACpDG,GAAOod,EAAM2R,UAAUzV,UAAYpoD,KAAKD,KAAKD,KAAK+uC,IACtDqd,EAAMmkC,SAASzhD,EAAME,GACrBod,EAAM8/B,MAAQlsF,KAAKm+D,WAAa/R,EAAM2R,UAAUI,WAChD/R,EAAM+/B,MAAQnsF,KAAKsoD,UAAY8D,EAAM2R,UAAUzV,UAC/C8D,EAAMqsB,UAAU,IAAI9B,cAAcnvB,QAAQw1B,WAK1C5wB,EAAMmkC,SAASvwF,KAAKwwF,QAASxwF,KAAKywF,YAEhCzwF,KAAKiqB,UAGVjqB,KAAK0qF,SAAW,WAEf,OAAOv7D,QAGRnvB,KAAKwwF,MAAQ,WAEZ,OAAOtwF,KAAKm8D,MAAMr8D,KAAK6vF,MAGxB7vF,KAAKywF,MAAQ,WAEZ,OAAOvwF,KAAKm8D,MAAMr8D,KAAK8vF,MAGxB9vF,KAAKiL,MAAQ,WAEZjL,KAAK+vF,IAAM3jC,EAAMuR,KAAKkG,UAAU7kB,EAChCh/C,KAAKgwF,IAAM5jC,EAAMuR,KAAKkG,UAAUjZ,EAChC5qD,KAAKmvB,QAAS,GAGfnvB,KAAK0wF,MAAQ,SAAS1xC,EAAG4L,EAAGpE,EAAGz/C,GAEzB/G,KAAKmvB,QAETnvB,KAAKiL,QAGHjL,KAAKm+D,WAAa/R,EAAM2R,UAAUI,WAClCn+D,KAAKsoD,UAAY8D,EAAM2R,UAAUzV,UAEpC9B,EAAU,MAALA,EAAaA,EAAI,EACtBz/C,EAAU,MAALA,EAAaA,EAAI,EAEtB,IAAIjG,EAAIsrD,EAAM2R,UACd/9D,KAAK6uC,GAAKmQ,EAAIwH,EAAI1lD,EAAEq9D,WAAar9D,EAAE8lD,YAE/B5mD,KAAK6uC,GAAK,GAAK3uC,KAAKk3D,IAAIp3D,KAAK6uC,IAAM7uC,KAAKukE,OAE3CvkE,KAAK6uC,GAAK7uC,KAAKukE,OAASvkE,KAAK6uC,GAErB7uC,KAAK2wF,eAEb3wF,KAAK6uC,GAAK3uC,KAAKwD,IAAI1D,KAAK6uC,GAAI,GAI5B7uC,KAAK6uC,GAAK,EAGI,GAAX7uC,KAAK6uC,KAER7uC,KAAK6uC,GAAKmQ,EAAIl+C,EAAEq9D,WAEZn+D,KAAK6uC,GAAK,GAAK7uC,KAAK6uC,GAAK7uC,KAAKukE,OAEjCvkE,KAAK6uC,GAAK7uC,KAAK6uC,GAAK7uC,KAAKukE,OAEjBvkE,KAAK2wF,eAEb3wF,KAAK6uC,GAAK3uC,KAAKyD,IAAI,EAAG3D,KAAK6uC,IAI3B7uC,KAAK6uC,GAAK,GAIZ7uC,KAAK+uC,GAAK6b,EAAI7jD,EAAIjG,EAAEwnD,UAAYxnD,EAAE6lD,aAE9B3mD,KAAK+uC,GAAK,GAAK7uC,KAAKk3D,IAAIp3D,KAAK+uC,IAAM/uC,KAAKukE,OAE3CvkE,KAAK+uC,GAAK/uC,KAAKukE,OAASvkE,KAAK+uC,GAErB/uC,KAAK2wF,eAEb3wF,KAAK+uC,GAAK7uC,KAAKwD,IAAI1D,KAAK+uC,GAAI,GAI5B/uC,KAAK+uC,GAAK,EAGI,GAAX/uC,KAAK+uC,KAER/uC,KAAK+uC,GAAK6b,EAAI9pD,EAAEwnD,UAEZtoD,KAAK+uC,GAAK,GAAK/uC,KAAK+uC,GAAK/uC,KAAKukE,OAEjCvkE,KAAK+uC,GAAK/uC,KAAK+uC,GAAK/uC,KAAKukE,OAEjBvkE,KAAK2wF,eAEb3wF,KAAK+uC,GAAK7uC,KAAKyD,IAAI,EAAG3D,KAAK+uC,IAI3B/uC,KAAK+uC,GAAK,GAIG,GAAX/uC,KAAK6uC,IAAsB,GAAX7uC,KAAK+uC,IAExB/uC,KAAK6uC,IAAM7uC,KAAK4wF,OAChB5wF,KAAK+uC,IAAM/uC,KAAK4wF,OAEG,MAAf5wF,KAAK4vF,SAER5vF,KAAK4vF,OAASS,MAGQ,MAAfrwF,KAAK4vF,SAEbnhF,OAAOoiF,cAAc7wF,KAAK4vF,QAC1B5vF,KAAK4vF,OAAS,OAIhB5vF,KAAKuD,KAAO,WAEX,GAAIvD,KAAKmvB,OAaR,GAXAnvB,KAAKmvB,QAAS,EAEK,MAAfnvB,KAAK4vF,SAERnhF,OAAOoiF,cAAc7wF,KAAK4vF,QAC1B5vF,KAAK4vF,OAAS,MAGf5vF,KAAK6vF,IAAM,EACX7vF,KAAK8vF,IAAM,EAEN9vF,KAAKiwF,WAaT7jC,EAAM8/B,MAAQ,EACd9/B,EAAM+/B,MAAQ,EACd//B,EAAMqsB,UAAU,IAAI9B,cAAcnvB,QAAQw1B,UAd3C,CACC,IAAIxd,EAAKpT,EAAM8/B,MACXzsB,EAAKrT,EAAM+/B,MAEF,GAAN3sB,GAAiB,GAANC,IAEdrT,EAAMmkC,SAAS,EAAG,GAClBnkC,EAAMuR,KAAKmzB,aAAa9wF,KAAK+vF,IAAMvwB,EAAKpT,EAAMuR,KAAKxQ,MAAOntD,KAAKgwF,IAAMvwB,EAAKrT,EAAMuR,KAAKxQ,UAY5FntD,KAAK0lB,QAAU,WAEd0mC,EAAM2kC,oBAAoB/wF,KAAKkwF,eAC/B1oC,QAAQgxB,eAAev9D,SAAU,UAAWjb,KAAKowF,kBAgEnD,SAAS1C,YAAYL,GAEpBrtF,KAAKqtF,cAAgBA,EAEA,MAAjBA,GAEHrtF,KAAK0kB,OAimBP,SAASssE,kBAAkB5kC,GAG1BpsD,KAAKixF,cAAgB/qC,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEpDhmD,KAAKmuD,aAERnuD,KAAKkxF,kBAAkBlrC,EAAIoxB,YAAY,QAAQ/qB,YAIjDrsD,KAAKmxF,SAAS/kC,GAkMf,SAASglC,YAAYnnE,GAEpBjqB,KAAKiqB,MAAkB,MAATA,EAAiBA,EAAQ,GAoHxC,SAASonE,WAAWjlC,EAAOklC,EAAOC,EAAMtnE,GAEvCmnE,YAAY1yF,KAAKsB,KAAMiqB,GACvBjqB,KAAKosD,MAAQA,EACbpsD,KAAKsxF,MAAkB,MAATA,EAAiBA,EAAQ,EACvCtxF,KAAKuxF,KAAgB,MAARA,EAAgBA,EAAO,IA+PrC,SAASC,cAAcC,GAEtBzxF,KAAK0xF,OAAS,GACd1xF,KAAKyxF,IAAc,MAAPA,GAAeA,EAwF5B,SAASE,iBA8JT,SAASC,qBAOR5xF,KAAK6xF,UAAY7xF,KAAK8xF,qBAEtB9xF,KAAK4qF,QA4oBN,SAASmH,cAAcC,GAEtBJ,mBAAmBlzF,KAAKsB,MAOxBA,KAAKgyF,KAAOA,EAGZhyF,KAAKiyF,gBAktCN,SAASC,cAAcF,EAAMG,GAE5BP,mBAAmBlzF,KAAKsB,MAOxBA,KAAKgyF,KAAOA,EAOZhyF,KAAKoyF,UAAY,GAOjBpyF,KAAKqyF,KAAO,KAOZryF,KAAKmyF,aAAgC,MAAhBA,GAAwBA,EAE7C,IAAI/6D,EAAM,KAGV,GAAI46D,EAAKzwD,eAAiBtmB,SAC1B,CACC,IAAI/H,EAAO8+E,EAGX,MAAe,MAAR9+E,GAAiC,OAAjBA,EAAKy8C,SAE3Bz8C,EAAOA,EAAKujB,WAGbW,EAAMlkB,EAGP,GAAW,MAAPkkB,EACJ,CAEC,IAAIzH,EAAMyH,EAAIksB,qBAAqB,QAE/B3zB,EAAI/uB,OAAS,IAEhBZ,KAAKqyF,KAAOj7D,EAAIksB,qBAAqB,QAAQ,IAI7B,MAAbtjD,KAAKqyF,OAERryF,KAAKqyF,KAAOryF,KAAKb,cAAc,QAET,MAAlBi4B,EAAIqG,WAEPrG,EAAIkB,aAAat4B,KAAKqyF,KAAMj7D,EAAIqG,YAIhCrG,EAAIsB,YAAY14B,KAAKqyF,OAKnBryF,KAAKmyF,cAERnyF,KAAKqyF,KAAK35D,YAAY14B,KAAKsyF,gBAxxH9B5C,eAAehwF,UAAUgqF,SAAU,EAOnCgG,eAAehwF,UAAU6yF,QAAU,KAOnC7C,eAAehwF,UAAU8yF,WAAa,KAOtC9C,eAAehwF,UAAU+yF,cAAgB,WAExCzyF,KAAKwyF,WAAajjD,SAASU,SAAW,KAAOV,SAASW,KACtDlwC,KAAKuyF,QAAUvyF,KAAKwyF,WAAajjD,SAASmjD,SAC1C,IAAI/iE,EAAM3vB,KAAKuyF,QAAQI,YAAY,KAG/BhjE,EAAM,IAET3vB,KAAKuyF,QAAUvyF,KAAKuyF,QAAQxuC,UAAU,EAAGp0B,EAAM,KASjD+/D,eAAehwF,UAAUyuD,UAAY,WAEpC,OAAOnuD,KAAK0pF,SAQbgG,eAAehwF,UAAU2qF,WAAa,SAAS/sF,GAE9C0C,KAAK0pF,QAAUpsF,GAQhBoyF,eAAehwF,UAAUkzF,WAAa,WAErC,OAAO5yF,KAAKuyF,SAQb7C,eAAehwF,UAAUmzF,WAAa,SAASv1F,GAE9C0C,KAAKuyF,QAAUj1F,GAQhBoyF,eAAehwF,UAAUozF,cAAgB,WAExC,OAAO9yF,KAAKwyF,YAQb9C,eAAehwF,UAAUqzF,cAAgB,SAASz1F,GAEjD0C,KAAKwyF,WAAal1F,GAQnBoyF,eAAehwF,UAAUszF,cAAgB,SAASr+B,GAEjD,MAA8B,MAAvBA,EAAI5Q,UAAU,EAAG,IAAqC,WAAvB4Q,EAAI5Q,UAAU,EAAG,IAC/B,YAAvB4Q,EAAI5Q,UAAU,EAAG,IAA4C,cAAxB4Q,EAAI5Q,UAAU,EAAG,KAC/B,WAAvB4Q,EAAI5Q,UAAU,EAAG,IASnB2rC,eAAehwF,UAAUuzF,QAAU,SAASt+B,GAmB3C,OAjBI30D,KAAKmuD,aAAenuD,KAAKgzF,cAAcr+B,KAEjB,MAArB30D,KAAK4yF,cAER5yF,KAAKyyF,gBAKL99B,EAFoB,KAAjBA,EAAItqD,OAAO,GAERrK,KAAK8yF,gBAAkBn+B,EAIvB30D,KAAK4yF,aAAej+B,GAIrBA,GAGRhU,WAAW+uC,eAA2C,qBAAnBA,eAAiCA,oBAAiBnvF,EAqPrFovF,iBAAiBjwF,UAAUkxF,OAAS,EAAE,EAOtCjB,iBAAiBjwF,UAAUuqB,MAAQ,GAOnC0lE,iBAAiBjwF,UAAUixF,gBAAiB,EAO5ChB,iBAAiBjwF,UAAU6kE,OAAS,EAEpC5jB,WAAWgvC,iBAA+C,qBAArBA,iBAAmCA,sBAAmBpvF,EA6C3FmtF,YAAYhuF,UAAY,IAAIo3E,cAC5B4W,YAAYhuF,UAAUqyB,YAAc27D,YAOpCA,YAAYhuF,UAAUwzF,aAAetyC,SAASsD,cAAgB,eAO9DwpC,YAAYhuF,UAAUmnF,OAAS,MAS/B6G,YAAYhuF,UAAU2tF,cAAgB,KAQtCK,YAAYhuF,UAAUyzF,uBAAwB,EAO9CzF,YAAYhuF,UAAUgqF,SAAU,EAOhCgE,YAAYhuF,UAAU0zF,UAAY,EAOlC1F,YAAYhuF,UAAU2zF,YAAa,EAQnC3F,YAAYhuF,UAAU4zF,iBAAkB,EAOxC5F,YAAYhuF,UAAU6zF,QAAS,EAO/B7F,YAAYhuF,UAAUglB,KAAO,WAG5B1kB,KAAKqlD,MAAQpqC,SAAS9b,cAAc,SACpCa,KAAKqlD,MAAM4/B,UAAY,cAEvBjlF,KAAKslD,MAAQrqC,SAAS9b,cAAc,SACpCa,KAAKqlD,MAAM3sB,YAAY14B,KAAKslD,OAG5BtlD,KAAK4iE,IAAM3nD,SAAS9b,cAAc,OAClCa,KAAK4iE,IAAIqiB,UAAY,cACrBjlF,KAAK4iE,IAAIh7C,MAAMikB,QAAU,SACzB7rC,KAAK4iE,IAAIh7C,MAAMi/D,OAAS7mF,KAAK6mF,OAC7B7mF,KAAK4iE,IAAIlqC,YAAY14B,KAAKqlD,OAG1BmC,QAAQgzB,mBAAmBx6E,KAAK4iE,MASjC8qB,YAAYhuF,UAAUyuD,UAAY,WAEjC,OAAOnuD,KAAK0pF,SASbgE,YAAYhuF,UAAU2qF,WAAa,SAASX,GAE3C1pF,KAAK0pF,QAAUA,GAahBgE,YAAYhuF,UAAUy4E,eAAiB,SAASwN,GAE/C,OAAOA,EAAGxN,kBAAqBn4E,KAAKmzF,uBAAyB3rC,QAAQ2zB,kBAAkBwK,EAAGlO,aAuB3FiW,YAAYhuF,UAAUytF,QAAU,SAAS/nC,EAAO+iC,EAAOrgC,EAAOzhD,EAAQmtF,EAAS9J,EAASv6D,GAEvF9oB,EAASA,GAAUrG,KACnBA,KAAKozF,YAGD/sF,EAAOotF,mBAENptF,EAAOqtF,eAEV1zF,KAAKwuF,aAAanoF,GAAQ,GAG3BA,EAAOotF,kBAAmB,GAG3BptF,EAAOqtF,eAAgB,EACvB,IAAInuC,EAAKtqC,SAAS9b,cAAc,MAChComD,EAAG0/B,UAAY,kBACf,IAAI0O,EAAO14E,SAAS9b,cAAc,MAIlC,GAHAw0F,EAAK1O,UAAY,kBAGJ,MAATkD,EACJ,CACC,IAAIxhB,EAAM1rD,SAAS9b,cAAc,OACjCwnE,EAAI/xD,IAAMuzE,EACVwL,EAAKj7D,YAAYiuC,QAEb,GAAe,MAAX6sB,EACT,CACC,IAAI5wB,EAAM3nD,SAAS9b,cAAc,OACjCyjE,EAAIqiB,UAAYuO,EAChBG,EAAKj7D,YAAYkqC,GAKlB,GAFArd,EAAG7sB,YAAYi7D,GAEX3zF,KAAKuzF,OACT,CACC,IAAIK,EAAO34E,SAAS9b,cAAc,MAClCy0F,EAAK3O,UAAY,mBACH,MAAXyE,GAAoBA,EAA2B,GAAhB,eAElCxjC,QAAQ3Q,MAAMq+C,EAAMxuC,GACpBwuC,EAAK5xB,MAAQ,OACbzc,EAAG7sB,YAAYk7D,GAEf,IAAIC,EAAO54E,SAAS9b,cAAc,MAClC00F,EAAK5O,UAAY,mBACH,MAAXyE,GAAoBA,EAA2B,GAAhB,eAClCmK,EAAKjsE,MAAMksE,aAAe,MAC1BD,EAAKjsE,MAAMmsE,UAAY,QAEvBxuC,EAAG7sB,YAAYm7D,GAEG,MAAdxtF,EAAOu8D,KAEV5iE,KAAKg0F,cAAc3tF,GAMrB,GAFAA,EAAOi/C,MAAM5sB,YAAY6sB,GAEX,GAAVp2B,GAA8B,GAAXu6D,EACvB,CACC,IAAIuK,EAAmB,KAEvBzsC,QAAQ4xB,oBAAoB7zB,EAC3BW,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKk0F,cAAgB3uC,EAEjBl/C,EAAO8tF,WAAa5uC,GAAMl/C,EAAO8tF,WAAa9tF,IAEzB,MAApBA,EAAO8tF,WAAwD,MAAnC9tF,EAAO8tF,UAAUvxB,IAAInsC,YAEpDz2B,KAAKo0F,YAAY/tF,GAGJ,MAAVk/C,EAAGqd,MAEN5iE,KAAKq0F,YAAYhuF,EAAQk/C,GACzBl/C,EAAO8tF,UAAY5uC,IAKK,MAAtBtqC,SAAS+1C,YAAsBpQ,SAASM,WAAsC,GAAzBjmC,SAASkmC,eAEjE8yC,EAAmBh5E,SAAS+1C,UAAUsjC,eAGvC9sC,QAAQ8vB,QAAQtxB,MAEjBE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvB3/C,EAAO8tF,WAAa5uC,GAAMl/C,EAAO8tF,WAAa9tF,IAEzB,MAApBA,EAAO8tF,WAAwD,MAAnC9tF,EAAO8tF,UAAUvxB,IAAInsC,YAEpDz2B,KAAKo0F,YAAY/tF,GAGdrG,KAAKqzF,YAAwB,MAAV9tC,EAAGqd,MAEzB5iE,KAAKq0F,YAAYhuF,EAAQk/C,GACzBl/C,EAAO8tF,UAAY5uC,IAKrBA,EAAG0/B,UAAY,0BAEhB/+B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAI3B,GAAIhmD,KAAKk0F,eAAiB3uC,EAC1B,CAOC,GANIl/C,EAAO8tF,WAAa5uC,GAEvBvlD,KAAK6tF,WAIkB,MAApBoG,EACJ,CAEC,IAECA,EAAiB9K,SAElB,MAAOl9E,IAKPgoF,EAAmB,KAGP,MAATnsC,GAEHA,EAAM9B,GAIRhmD,KAAKk0F,cAAgB,KACrB1sC,QAAQ8vB,QAAQtxB,OAKlBwB,QAAQD,YAAYhC,EAAI,WACvBW,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BT,EAAG0/B,UAAY,sBAKlB,OAAO1/B,GAMRmoC,YAAYhuF,UAAU60F,aAAe,SAAShrF,EAAMo9D,GAEnD,IAAInhB,EAAKj8C,EAAKk0B,WAAW9E,YACzB6sB,EAAG59B,MAAM4sE,gBAAkB,QAAW7tB,EAAM,KAC5CnhB,EAAG59B,MAAM6sE,iBAAmB,YAC5BjvC,EAAG59B,MAAM8sE,mBAAqB,WAc/BhH,YAAYhuF,UAAUs0F,cAAgB,SAAS3tF,GAE9CA,EAAOg/C,MAAQpqC,SAAS9b,cAAc,SACtCkH,EAAOg/C,MAAM4/B,UAAY,cAEzB5+E,EAAOi/C,MAAQrqC,SAAS9b,cAAc,SACtCkH,EAAOg/C,MAAM3sB,YAAYryB,EAAOi/C,OAEhCj/C,EAAOu8D,IAAM3nD,SAAS9b,cAAc,OACpCkH,EAAOu8D,IAAIqiB,UAAY,cAEvB5+E,EAAOu8D,IAAIh7C,MAAM44B,SAAW,WAC5Bn6C,EAAOu8D,IAAIh7C,MAAMikB,QAAU,SAC3BxlC,EAAOu8D,IAAIh7C,MAAMi/D,OAAS7mF,KAAK6mF,OAE/BxgF,EAAOu8D,IAAIlqC,YAAYryB,EAAOg/C,OAE9B,IAAIshB,EAAM1rD,SAAS9b,cAAc,OACjCwnE,EAAIzuC,aAAa,MAAOl4B,KAAKkzF,cAG7B1tC,GAAKn/C,EAAOo3B,WAAW9E,YAAYA,YACnC6sB,GAAG9sB,YAAYiuC,IAQhB+mB,YAAYhuF,UAAU20F,YAAc,SAAShuF,EAAQsuF,GAEpD,GAAe,MAAXA,EAAI/xB,IACR,CACC+xB,EAAI/xB,IAAIh7C,MAAMknB,KAAQzoC,EAAOu8D,IAAI1O,WAChCygC,EAAIzgC,WAAWygC,EAAIxgC,YAAc,EAAK,KACvCwgC,EAAI/xB,IAAIh7C,MAAMonB,IAAO3oC,EAAOu8D,IAAInO,UAAUkgC,EAAIlgC,UAAa,KAC3Dx5C,SAASgzB,KAAKvV,YAAYi8D,EAAI/xB,KAG9B,IAAI9zB,EAAOzZ,SAASs/D,EAAI/xB,IAAI1O,YACxBpO,EAAQzwB,SAASs/D,EAAI/xB,IAAIzO,aACzBC,EAASlO,QAAQmO,wBAAwBp5C,UAEzCpa,EAAIoa,SAASgzB,KACb/pB,EAAIjJ,SAAS2nC,gBAEb4R,EAAQJ,EAAOpV,GAAKn+C,EAAE+lD,aAAe1iC,EAAE0iC,aAEvC9X,EAAOgX,EAAQ0O,IAElBmgC,EAAI/xB,IAAIh7C,MAAMknB,KAAO5uC,KAAKwD,IAAI,EAAI2C,EAAOu8D,IAAI1O,WAAapO,GAAUlF,SAAc,MAAI,GAAK,IAAO,MAGnGsF,QAAQ8N,IAAI2gC,EAAI/xB,OAelB8qB,YAAYhuF,UAAU8uF,aAAe,SAASnoF,EAAQshB,GAIrD,GAFAthB,EAASA,GAAUrG,KAEfA,KAAKszF,kBAAoB3rE,EAE5BthB,EAAOotF,kBAAmB,OAEtB,GAAoB,MAAhBptF,EAAOi/C,MAChB,CACCj/C,EAAOotF,kBAAmB,EAC1B,IAAIluC,EAAKtqC,SAAS9b,cAAc,MAE5Bw0F,EAAO14E,SAAS9b,cAAc,MAClCw0F,EAAK1O,UAAY,kBACjB0O,EAAK/rE,MAAM8+C,QAAU,YAErBnhB,EAAG7sB,YAAYi7D,GAEf,IAAIC,EAAO34E,SAAS9b,cAAc,MAClCy0F,EAAKhsE,MAAM8+C,QAAU,YACrBktB,EAAK17D,aAAa,UAAW,KAE7B,IAAIy2D,EAAK1zE,SAAS9b,cAAc,MAChCwvF,EAAGz2D,aAAa,OAAQ,KACxB07D,EAAKl7D,YAAYi2D,GAEjBppC,EAAG7sB,YAAYk7D,GAEfvtF,EAAOi/C,MAAM5sB,YAAY6sB,KAkB3BmoC,YAAYhuF,UAAU6mD,MAAQ,SAASvH,EAAG4L,EAAGoC,EAAMhH,GAElD,GAAgB,MAAZhmD,KAAK4iE,KAA6B,MAAd5iE,KAAKslD,OAAuC,MAAtBtlD,KAAKqtF,cACnD,CACCrtF,KAAK4iE,IAAIh7C,MAAMknB,KAAOkQ,EAAI,KAC1Bh/C,KAAK4iE,IAAIh7C,MAAMonB,IAAM4b,EAAI,KAGzB,MAAgC,MAAzB5qD,KAAKslD,MAAM7nB,WAEjB+pB,QAAQ0yB,QAAQl6E,KAAKslD,MAAM7nB,YAC3Bz9B,KAAKslD,MAAM7sB,YAAYz4B,KAAKslD,MAAM7nB,YAGnCz9B,KAAKozF,UAAY,EACjBpzF,KAAKqtF,cAAcrtF,KAAMgtD,EAAMhH,GAE3BhmD,KAAKozF,UAAY,IAEpBpzF,KAAK40F,WACL50F,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ41B,UAU5CsQ,YAAYhuF,UAAUkuF,cAAgB,WAErC,OAAmB,MAAZ5tF,KAAK4iE,KAAe5iE,KAAK4iE,IAAInsC,YAAcxb,SAASgzB,MAQ5Dy/C,YAAYhuF,UAAUk1F,SAAW,WAG5B35E,SAASkmC,cAAgB,IAE5BnhD,KAAK4iE,IAAIh7C,MAAM2M,OAAS,QAIzBtZ,SAASgzB,KAAKvV,YAAY14B,KAAK4iE,KAC/B1c,QAAQ8N,IAAIh0D,KAAK4iE,MAQlB8qB,YAAYhuF,UAAUmuF,SAAW,WAEhB,MAAZ7tF,KAAK4iE,MAEmB,MAAvB5iE,KAAK4iE,IAAInsC,YAEZz2B,KAAK4iE,IAAInsC,WAAWgC,YAAYz4B,KAAK4iE,KAGtC5iE,KAAKo0F,YAAYp0F,MACjBA,KAAK0zF,eAAgB,EACrB1zF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ21B,SAa3CuQ,YAAYhuF,UAAU00F,YAAc,SAAS/tF,GAEpB,MAApBA,EAAO8tF,YAEVn0F,KAAKo0F,YAAY/tF,EAAO8tF,WAEe,MAAnC9tF,EAAO8tF,UAAUvxB,IAAInsC,YAExBpwB,EAAO8tF,UAAUvxB,IAAInsC,WAAWgC,YAAYpyB,EAAO8tF,UAAUvxB,KAG9Dv8D,EAAO8tF,UAAY,OASrBzG,YAAYhuF,UAAUgmB,QAAU,WAEf,MAAZ1lB,KAAK4iE,MAERpb,QAAQ0yB,QAAQl6E,KAAK4iE,KAEM,MAAvB5iE,KAAK4iE,IAAInsC,YAEZz2B,KAAK4iE,IAAInsC,WAAWgC,YAAYz4B,KAAK4iE,KAGtC5iE,KAAK4iE,IAAM,OAIbjiB,WAAW+sC,YAAqC,qBAAhBA,YAA8BA,iBAAcntF,EAgD5EywF,kBAAkBtxF,UAAY,IAAIo3E,cAClCka,kBAAkBtxF,UAAUqyB,YAAci/D,kBAO1CA,kBAAkBtxF,UAAU0sD,MAAQ,KASpC4kC,kBAAkBtxF,UAAUm1F,cAAgB,GAW5C7D,kBAAkBtxF,UAAUo1F,iBAAmB,EAS/C9D,kBAAkBtxF,UAAUq1F,kBAAoB,EAOhD/D,kBAAkBtxF,UAAUs1F,eAAiB,EAO7ChE,kBAAkBtxF,UAAUu1F,aAAe,EAO3CjE,kBAAkBtxF,UAAUgqF,SAAU,EAOtCsH,kBAAkBtxF,UAAUuxF,cAAgB,KAQ5CD,kBAAkBtxF,UAAUyuD,UAAY,WAEvC,OAAOnuD,KAAK0pF,SAabsH,kBAAkBtxF,UAAU2qF,WAAa,SAAS/sF,GAEjD0C,KAAK0pF,QAAUpsF,GAQhB0zF,kBAAkBtxF,UAAUyxF,SAAW,SAAS/kC,GAE7B,MAAdpsD,KAAKosD,OAERpsD,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKixF,eAG3CjxF,KAAKosD,MAAQA,EAEK,MAAdpsD,KAAKosD,OAERpsD,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKixF,gBASzDD,kBAAkBtxF,UAAUw1F,KAAO,aAUnClE,kBAAkBtxF,UAAUwxF,kBAAoB,SAAS7kC,GAExD,IAAIr+B,GAAM,IAAIvuB,MAAOK,UACjBsoD,GAAMp6B,EAAMhuB,KAAKi1F,cAAgB,IAEjC7sC,EAAKpoD,KAAK60F,eACZ70F,KAAKg1F,gBAAkBh1F,KAAK+0F,mBAC5B3sC,EAAKpoD,KAAK80F,kBAEX90F,KAAKk1F,OACLl1F,KAAK4qF,SAKL5qF,KAAKg1F,kBASPhE,kBAAkBtxF,UAAUkrF,MAAQ,WAEnC5qF,KAAKi1F,cAAe,IAAIx1F,MAAOK,UAC/BE,KAAKg1F,eAAiB,GAQvBhE,kBAAkBtxF,UAAUgmB,QAAU,WAErC1lB,KAAKmxF,SAAS,OAGfxwC,WAAWqwC,kBAAiD,qBAAtBA,kBAAoCA,uBAAoBzwF,EA4B9F6wF,YAAY1xF,UAAY,IAAIo3E,cAC5Bsa,YAAY1xF,UAAUqyB,YAAcq/D,YAOpCA,YAAY1xF,UAAUuqB,MAAQ,KAO9BmnE,YAAY1xF,UAAUkwF,OAAS,KAO/BwB,YAAY1xF,UAAUy1F,UAAY,WAEjC,OAAsB,MAAfn1F,KAAK4vF,QAQbwB,YAAY1xF,UAAU01F,eAAiB,WAEnB,MAAfp1F,KAAK4vF,SAER5vF,KAAK4vF,OAASnhF,OAAO6hF,YAAYpqC,QAAQ1jD,KAAKxC,KAAMA,KAAKq1F,iBAAkBr1F,KAAKiqB,SAWlFmnE,YAAY1xF,UAAU21F,gBAAkB,WAEvCr1F,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq3B,WAQ1CuS,YAAY1xF,UAAU41F,cAAgB,WAElB,MAAft1F,KAAK4vF,SAERnhF,OAAOoiF,cAAc7wF,KAAK4vF,QAC1B5vF,KAAK4vF,OAAS,KACd5vF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo3B,SAI3Cj+B,WAAWywC,YAAqC,qBAAhBA,YAA8BA,iBAAc7wF,EAsD5E8wF,WAAW3xF,UAAY,IAAI0xF,YAC3BC,WAAW3xF,UAAUqyB,YAAcs/D,WAOnCA,WAAW3xF,UAAU0sD,MAAQ,KAO7BilC,WAAW3xF,UAAU4xF,MAAQ,KAO7BD,WAAW3xF,UAAU2D,KAAO,EAQ5BguF,WAAW3xF,UAAU6xF,KAAO,KAS5BF,WAAW3xF,UAAU0gE,MAAQ,KAO7BixB,WAAW3xF,UAAU21F,gBAAkB,WAEtCjE,YAAY1xF,UAAU21F,gBAAgBt0F,MAAMf,KAAMgB,WAClD,IAAI24E,EAAO,IAAI4b,mBAAmBv1F,KAAKosD,OAEvC,GAAkB,MAAdpsD,KAAKogE,MAGR,IAAK,IAAIl3D,EAAI,EAAGA,EAAIlJ,KAAKogE,MAAMx/D,OAAQsI,IAEtClJ,KAAKw1F,YAAYx1F,KAAKogE,MAAMl3D,GAAIywE,GAAM,QAOvC35E,KAAKw1F,YAAYx1F,KAAKosD,MAAM8W,WAAWC,UAAWwW,GAAM,GAGzD35E,KAAKqpC,KAAKswC,IAENA,EAAK+J,WAAa1jF,KAAKqD,QAAUrD,KAAKsxF,QAEzCtxF,KAAKs1F,iBASPjE,WAAW3xF,UAAU2pC,KAAO,SAASswC,GAEpCA,EAAKtwC,QAQNgoD,WAAW3xF,UAAU81F,YAAc,SAASxoC,EAAM2sB,EAAM8b,GAEvD,IAAI3kD,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAASC,GACtCqtB,EAAQ,KAEZ,GAAa,MAATvpC,IAIHupC,EAAQr6E,KAAK01F,SAAS5kD,GAElB9wC,KAAKosD,MAAM8W,WAAWyyB,SAAS3oC,KAAqB,GAAXqtB,EAAMr7B,GAAqB,GAAXq7B,EAAMzvB,IACnE,CACC,IAAIiZ,EAAY7jE,KAAKosD,MAAMuR,KAAKmG,eAC5B3W,EAAQntD,KAAKosD,MAAMuR,KAAKmH,WAE5BuV,EAAMr7B,GAAK6kB,EAAU7kB,EAAImO,EACzBktB,EAAMzvB,GAAKiZ,EAAUjZ,EAAIuC,EAEzBwsB,EAAKic,UAAU9kD,GAAQupC,EAAMr7B,EAAIh/C,KAAKuxF,MAAOlX,EAAMzvB,EAAI5qD,KAAKuxF,MAI9D,GAAIkE,IAAYz1F,KAAK61F,cAAc/kD,EAAOupC,GAIzC,IAFA,IAAI1sB,EAAa3tD,KAAKosD,MAAM8W,WAAWtV,cAAcZ,GAE5C9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKw1F,YAAYx1F,KAAKosD,MAAM8W,WAAWrV,WAAWb,EAAM9jD,GAAIywE,EAAM8b,IAWrEpE,WAAW3xF,UAAUm2F,cAAgB,SAAS/kD,EAAOupC,GAEpD,OAAgB,MAATA,IAA6B,GAAXA,EAAMr7B,GAAqB,GAAXq7B,EAAMzvB,IAShDymC,WAAW3xF,UAAUg2F,SAAW,SAAS5kD,GAExC,IAAI8tB,EAAS5+D,KAAK81F,iBAAiBhlD,EAAMkc,MACrC6W,EAAY7jE,KAAKosD,MAAMU,UAAUgX,eACjC3W,EAAQntD,KAAKosD,MAAMU,UAAUgY,WAC7B9lB,EAAIlO,EAAMkO,EAAImO,EAAQ0W,EAAU7kB,EAChC4L,EAAI9Z,EAAM8Z,EAAIuC,EAAQ0W,EAAUjZ,EAEpC,OAAO,IAAID,SAASiU,EAAO5f,EAAIA,GAAKmO,GAAQyR,EAAOhU,EAAIA,GAAKuC,IAU7DkkC,WAAW3xF,UAAUo2F,iBAAmB,SAAS9oC,GAEhD,IAAInqD,EAAS,KAEb,GAAY,MAARmqD,EACJ,CACC,IAAI3mD,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/oC,GACzCgpC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBjpC,GAIrC,GAHAnqD,EAAS7C,KAAK81F,iBAAiBzvF,GAGpB,MAAP2vF,EAEH,GAAIA,EAAIE,SACR,CACC,IAAIC,EAAOn2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAR8vF,IAEHtzF,EAAOm8C,GAAKg3C,EAAIh3C,EAAIm3C,EAAKrwC,MACzBjjD,EAAO+nD,GAAKorC,EAAIprC,EAAIurC,EAAKxwC,aAK1B9iD,EAAOm8C,GAAKg3C,EAAIh3C,EAChBn8C,EAAO+nD,GAAKorC,EAAIprC,EAKnB,GAAc,MAAV/nD,EACJ,CACC,IAAImpD,EAAIhsD,KAAKosD,MAAMuR,KAAKmG,eACxBjhE,EAAS,IAAI8nD,SAASqB,EAAEhN,GAAIgN,EAAEpB,GAG/B,OAAO/nD,GAGR89C,WAAW0wC,WAAmC,qBAAfA,WAA6BA,gBAAa9wF,EA8DzEixF,cAAc9xF,UAAUgyF,OAAS,KAOjCF,cAAc9xF,UAAUgyF,OAAS,KAQjCF,cAAc9xF,UAAU02F,SAAW,SAAS/4F,EAAKC,EAAOqiB,GAEvD3f,KAAK0xF,OAAOr0F,GAAO,CAACC,MAAOA,EAAOqiB,SAAUA,IAU7C6xE,cAAc9xF,UAAU22F,SAAW,SAASh5F,GAE3C,IAAIwF,EAAS,KAEb,GAAW,MAAPxF,EACJ,CACC,IAAIspE,EAAM3mE,KAAK0xF,OAAOr0F,GAEX,MAAPspE,IAEH9jE,EAAU7C,KAAQ,IAAI2mE,EAAIhnD,SAAWgnD,EAAIrpE,OAI3C,OAAOuF,GAGR89C,WAAW6wC,cAAyC,qBAAlBA,cAAgCA,mBAAgBjxF,EA2ClFoxF,cAAcjyF,UAAU42F,iBAAkB,EAO1C3E,cAAcjyF,UAAU62F,UAAY,SAASzlD,EAAO8yB,GAEtC,MAAT9yB,IAEH9wC,KAAKw2F,qBAAqB1lD,EAAO8yB,EAAQ1d,QAAQ1jD,KAAKxC,MAAM,WAE3DA,KAAKy2F,cAAc11F,MAAMf,KAAMgB,eAI5BhB,KAAKs2F,iBAERt2F,KAAKw2F,qBAAqB1lD,EAAO8yB,EAAQ1d,QAAQ1jD,KAAKxC,MAAM,WAE3DA,KAAK02F,aAAa31F,MAAMf,KAAMgB,iBAWlC2wF,cAAcjyF,UAAU82F,qBAAuB,SAAS1lD,EAAO8yB,EAAQ1a,GAEtE,GAAa,MAATpY,EACJ,CACCoY,EAAQpY,EAAO8yB,GAKf,IAHA,IAAIxX,EAAQtb,EAAM6sB,KAAKvR,MACnBuB,EAAavB,EAAMhmC,MAAMwnC,cAAc9c,EAAMkc,MAExC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI4kD,EAAa1B,EAAMuR,KAAK5Q,SAASX,EAAMhmC,MAAMynC,WAAW/c,EAAMkc,KAAM9jD,IACxElJ,KAAKw2F,qBAAqB1oC,EAAY8V,EAAQ1a,MAUjDyoC,cAAcjyF,UAAUi3F,oBAAsB,SAAS7lD,EAAO8yB,GAE7D,OAAO,MAQR+tB,cAAcjyF,UAAU+2F,cAAgB,SAAS3lD,EAAO8yB,GAGvD,IAAIzgB,EAAOnjD,KAAK22F,oBAAoB7lD,EAAO8yB,GAE/B,MAARzgB,GAEHygB,EAAOgzB,QAAQzzC,GAIhBnjD,KAAK62F,UAAU/lD,EAAO8yB,GACtB5jE,KAAK82F,SAAShmD,EAAO8yB,GAET,MAARzgB,GAEHygB,EAAOgzB,QAAQ,OASjBjF,cAAcjyF,UAAUm3F,UAAY,SAAS/lD,EAAO8yB,GAE/C9yB,EAAMoc,iBAAiB6pC,SAAWjmD,EAAMoc,MAAM8pC,gBAEjDpzB,EAAOsxB,OACPpkD,EAAMoc,MAAM+pC,MAAMrzB,GAClBA,EAAOszB,YASTvF,cAAcjyF,UAAUo3F,SAAW,SAAShmD,EAAO8yB,GAEhC,MAAd9yB,EAAMj/B,MAAgBi/B,EAAMj/B,KAAKmlF,gBAEpCpzB,EAAOsxB,OACPpkD,EAAMj/B,KAAKolF,MAAMrzB,GACjBA,EAAOszB,YAUTvF,cAAcjyF,UAAUg3F,aAAe,SAAS5lD,EAAO8yB,GAEhC,MAAlB9yB,EAAMqmD,UAETrmD,EAAMqmD,SAASluC,OAAM,SAASt4C,EAAIu8C,GAE7BA,aAAiB6pC,SAEpB7pC,EAAM+pC,MAAMrzB,OAOhBjjB,WAAWgxC,cAAyC,qBAAlBA,cAAgCA,mBAAgBpxF,EAiClFqxF,mBAAmBlyF,UAAUoxC,MAAQ,KAOrC8gD,mBAAmBlyF,UAAU03F,OAAS,KAOtCxF,mBAAmBlyF,UAAU+B,KAAO,KAOpCmwF,mBAAmBlyF,UAAU23F,YAAa,EAO1CzF,mBAAmBlyF,UAAU43F,MAAQ,EAOrC1F,mBAAmBlyF,UAAU63F,MAAQ,EAOrC3F,mBAAmBlyF,UAAU83F,OAAS,IAOtC5F,mBAAmBlyF,UAAU+3F,OAAS,IAOtC7F,mBAAmBlyF,UAAUg4F,OAAS,IAOtC9F,mBAAmBlyF,UAAUi4F,QAAU,IAOvC/F,mBAAmBlyF,UAAUk4F,QAAU,IAOvChG,mBAAmBlyF,UAAU2rF,eAAgB,EAO7CuG,mBAAmBlyF,UAAUoyF,mBAAqB,WAEjD,OAAO,IAAIpC,gBAQZkC,mBAAmBlyF,UAAUkrF,MAAQ,WAEpC5qF,KAAK8wC,MAAQ9wC,KAAK63F,cAClB73F,KAAKo3F,OAAS,IAQfxF,mBAAmBlyF,UAAUm4F,YAAc,WAE1C,MAAO,CACNhpD,GAAI,EACJE,GAAI,EACJoe,MAAO,EACP0Q,MAAO,EACPi6B,UAAW,EACXC,YAAa,EACbC,UAAW,KACXC,kBAAmB,EACnBC,cAAe,KACfC,cAAe,EACfC,kBAAmB,KACnBC,YAAa,KACbC,YAAa,EACbC,QAAQ,EACRC,YAAa,MACbC,SAAS,EACTC,QAAS,OACTC,SAAU,QACVC,WAAY,GACZC,UAAW,UACXC,oBAAqB,KACrBC,gBAAiB,KACjBx2B,SAAU1Y,YAAY6Y,iBACtBF,WAAY3Y,YAAY8Y,mBACxBq2B,UAAW,EACXC,QAAQ,EACRC,YAAarvC,YAAY0e,YACzB4wB,YAAatvC,YAAY8e,eACzBywB,SAAUvvC,YAAY4e,gBACtB4wB,SAAUxvC,YAAY6e,gBACtBjP,SAAU,EACV6/B,WAAY,EACZC,WAAY,IASd3H,mBAAmBlyF,UAAU85F,OAAS,SAASl8F,GAE9C,OAAO4C,KAAKm8D,MAAMn0D,WAAW5K,KAQ9Bs0F,mBAAmBlyF,UAAU+5F,MAAQ,WAEpC,GAAiB,MAAbz5F,KAAKyB,OAERzB,KAAKyB,KAAKsP,KAAK/P,UAAU,IAErBA,UAAUJ,OAAS,GAItB,IAFA,IAAI4mC,EAAIxnC,KAAK8wC,MAEJ5nC,EAAI,EAAGA,EAAIlI,UAAUJ,OAAQsI,GAAK,EAE1ClJ,KAAKs3F,MAAQt2F,UAAUkI,EAAI,GAC3BlJ,KAAKu3F,MAAQv2F,UAAUkI,GAEvBlJ,KAAKyB,KAAKsP,KAAK/Q,KAAKw5F,QAAQx5F,KAAKs3F,MAAQ9vD,EAAEqH,IAAMrH,EAAE2lB,QACnDntD,KAAKyB,KAAKsP,KAAK/Q,KAAKw5F,QAAQx5F,KAAKu3F,MAAQ/vD,EAAEuH,IAAMvH,EAAE2lB,SAWvDykC,mBAAmBlyF,UAAUg6F,YAAc,SAAS16C,EAAG4L,EAAG+uC,EAAOjgC,EAAI+D,GAEpE,IAAI9G,EAAMgjC,GAASz5F,KAAKu2D,GAAK,KAE7B,OAAOvQ,QAAQ6T,gBAAgB,IAAIpP,QAAQ3L,EAAG4L,GAAI1qD,KAAKs3D,IAAIb,GAC1Dz2D,KAAKw3D,IAAIf,GAAM,IAAIhM,QAAQ+O,EAAI+D,KAQjCm0B,mBAAmBlyF,UAAUw1F,KAAO,WAEnCl1F,KAAKo3F,OAAOrmF,KAAK/Q,KAAK8wC,OACtB9wC,KAAK8wC,MAAQoV,QAAQ1hC,MAAMxkB,KAAK8wC,QAQjC8gD,mBAAmBlyF,UAAUw3F,QAAU,WAElCl3F,KAAKo3F,OAAOx2F,OAAS,IAExBZ,KAAK8wC,MAAQ9wC,KAAKo3F,OAAO5lF,QAS3BogF,mBAAmBlyF,UAAUk3F,QAAU,SAASzzC,KAUhDyuC,mBAAmBlyF,UAAUytD,MAAQ,SAAS7vD,GAE7C0C,KAAK8wC,MAAMqc,OAAS7vD,EACpB0C,KAAK8wC,MAAMwnD,aAAeh7F,GAQ3Bs0F,mBAAmBlyF,UAAUmkE,UAAY,SAASh1B,EAAIE,GAErD/uC,KAAK8wC,MAAMjC,IAAMA,EACjB7uC,KAAK8wC,MAAM/B,IAAMA,GAQlB6iD,mBAAmBlyF,UAAUk6F,OAAS,SAASD,EAAO39B,EAAOC,EAAOvC,EAAI+D,KAUxEm0B,mBAAmBlyF,UAAUm6F,SAAW,SAASv8F,GAEhD0C,KAAK8wC,MAAM+sB,MAAQvgE,GAQpBs0F,mBAAmBlyF,UAAUo6F,aAAe,SAASx8F,GAEpD0C,KAAK8wC,MAAMgnD,UAAYx6F,GAQxBs0F,mBAAmBlyF,UAAUq6F,eAAiB,SAASz8F,GAEtD0C,KAAK8wC,MAAMinD,YAAcz6F,GAQ1Bs0F,mBAAmBlyF,UAAUs6F,aAAe,SAAS18F,GAEhDA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAMknD,UAAY16F,EACvB0C,KAAK8wC,MAAMonD,cAAgB,MAQ5BtG,mBAAmBlyF,UAAUu6F,YAAc,SAASC,EAAQC,EAAQn7C,EAAG4L,EAAGpE,EAAGz/C,EAAGqzF,EAAWC,EAAQC,GAElG,IAAI9yD,EAAIxnC,KAAK8wC,MACbtJ,EAAEwwD,UAAYkC,EACd1yD,EAAEywD,kBAA+B,MAAVoC,EAAkBA,EAAS,EAClD7yD,EAAE0wD,cAAgBiC,EAClB3yD,EAAE2wD,cAA2B,MAAVmC,EAAkBA,EAAS,EAC9C9yD,EAAE4wD,kBAAoBgC,GAQvBxI,mBAAmBlyF,UAAU66F,eAAiB,SAASj9F,GAElDA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAMunD,YAAc/6F,GAQ1Bs0F,mBAAmBlyF,UAAU86F,eAAiB,SAASl9F,GAEtD0C,KAAK8wC,MAAMwnD,YAAch7F,GAQ1Bs0F,mBAAmBlyF,UAAU+6F,UAAY,SAASn9F,EAAOm7F,GAExDz4F,KAAK8wC,MAAMynD,OAASj7F,EACpB0C,KAAK8wC,MAAM2nD,QAAUA,GAQtB7G,mBAAmBlyF,UAAUg7F,eAAiB,SAASp9F,GAEtD0C,KAAK8wC,MAAM0nD,YAAcl7F,GAQ1Bs0F,mBAAmBlyF,UAAUi7F,WAAa,SAASr9F,GAElD0C,KAAK8wC,MAAM4nD,QAAUp7F,GAQtBs0F,mBAAmBlyF,UAAUk7F,YAAc,SAASt9F,GAEnD0C,KAAK8wC,MAAM6nD,SAAWr7F,GAQvBs0F,mBAAmBlyF,UAAUm7F,cAAgB,SAASv9F,GAErD0C,KAAK8wC,MAAM8nD,WAAat7F,GAQzBs0F,mBAAmBlyF,UAAUo7F,aAAe,SAASx9F,GAEhDA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAM+nD,UAAYv7F,GAQxBs0F,mBAAmBlyF,UAAUq7F,uBAAyB,SAASz9F,GAE1DA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAMgoD,oBAAsBx7F,GAQlCs0F,mBAAmBlyF,UAAUs7F,mBAAqB,SAAS19F,GAEtDA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAMioD,gBAAkBz7F,GAQ9Bs0F,mBAAmBlyF,UAAUu7F,YAAc,SAAS39F,GAEnD0C,KAAK8wC,MAAMyxB,SAAWr6D,WAAW5K,IAQlCs0F,mBAAmBlyF,UAAUw7F,cAAgB,SAAS59F,GAErD0C,KAAK8wC,MAAM0xB,WAAallE,GAQzBs0F,mBAAmBlyF,UAAUy7F,aAAe,SAAS79F,GAEvC,MAATA,IAEHA,EAAQ,GAGT0C,KAAK8wC,MAAMkoD,UAAY17F,GAQxBs0F,mBAAmBlyF,UAAU07F,UAAY,SAAS1R,GAEjD1pF,KAAK8wC,MAAMmoD,OAASvP,GAQrBkI,mBAAmBlyF,UAAU27F,eAAiB,SAAS/9F,GAElDA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGT0C,KAAK8wC,MAAMooD,YAAc57F,GAQ1Bs0F,mBAAmBlyF,UAAU47F,eAAiB,SAASh+F,GAEtD0C,KAAK8wC,MAAMqoD,YAAc77F,GAQ1Bs0F,mBAAmBlyF,UAAU67F,gBAAkB,SAAS1sD,EAAIE,GAE3D/uC,KAAK8wC,MAAMsoD,SAAWvqD,EACtB7uC,KAAK8wC,MAAMuoD,SAAWtqD,GAQvB6iD,mBAAmBlyF,UAAU87F,MAAQ,WAEpCx7F,KAAKs3F,MAAQ,EACbt3F,KAAKu3F,MAAQ,EACbv3F,KAAKyB,KAAO,IAQbmwF,mBAAmBlyF,UAAU+7F,OAAS,SAASz8C,EAAG4L,GAEjD5qD,KAAKy5F,MAAMz5F,KAAKw3F,OAAQx4C,EAAG4L,IAQ5BgnC,mBAAmBlyF,UAAUg8F,OAAS,SAAS18C,EAAG4L,GAEjD5qD,KAAKy5F,MAAMz5F,KAAKy3F,OAAQz4C,EAAG4L,IAQ5BgnC,mBAAmBlyF,UAAUi8F,OAAS,SAAS1hC,EAAIC,EAAId,EAAIC,GAE1Dr5D,KAAKy5F,MAAMz5F,KAAK03F,OAAQz9B,EAAIC,EAAId,EAAIC,IAQrCu4B,mBAAmBlyF,UAAUk8F,QAAU,SAAS3hC,EAAIC,EAAId,EAAIC,EAAIC,EAAIC,GAEnEv5D,KAAKy5F,MAAMz5F,KAAK23F,QAAS19B,EAAIC,EAAId,EAAIC,EAAIC,EAAIC,IAS9Cq4B,mBAAmBlyF,UAAUm8F,MAAQ,SAASx+B,EAAIC,EAAIvG,EAAOC,EAAcC,EAAWjY,EAAG4L,GAExF,IAAIkxC,EAAS51C,QAAQ0Q,YAAY52D,KAAKs3F,MAAOt3F,KAAKu3F,MAAOl6B,EAAIC,EAAIvG,EAAOC,EAAcC,EAAWjY,EAAG4L,GAEpG,GAAc,MAAVkxC,EAEH,IAAK,IAAI5yF,EAAI,EAAGA,EAAI4yF,EAAOl7F,OAAQsI,GAAK,EAEvClJ,KAAK47F,QAAQE,EAAO5yF,GAAI4yF,EAAO5yF,EAAI,GAAI4yF,EAAO5yF,EAAI,GACjD4yF,EAAO5yF,EAAI,GAAI4yF,EAAO5yF,EAAI,GAAI4yF,EAAO5yF,EAAI,KAU7C0oF,mBAAmBlyF,UAAU81C,MAAQ,SAASykB,EAAIC,EAAId,EAAIC,EAAIC,EAAIC,GAEjEv5D,KAAKy5F,MAAMz5F,KAAK43F,UAQjBhG,mBAAmBlyF,UAAUq9B,IAAM,aAEnC4jB,WAAWixC,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBrxF,EAkDjG2lD,QAAQ/6C,OAAO4mF,cAAeH,oBAO9BG,cAAcryF,UAAUq8F,aAAc,EAQtChK,cAAcryF,UAAUs8F,YAAa,EAOrCjK,cAAcryF,UAAUuyF,cAAgB,WAEvC,IAAIx/B,EAGJA,EAAOzyD,KAAKb,cAAc,cAC1BszD,EAAKv6B,aAAa,SAAU2xB,YAAY8Y,oBACxC3iE,KAAKgyF,KAAKt5D,YAAY+5B,GAEtBA,EAAOzyD,KAAKb,cAAc,YAC1BszD,EAAKv6B,aAAa,OAAQ2xB,YAAY6Y,kBACtC1iE,KAAKgyF,KAAKt5D,YAAY+5B,GAGtBA,EAAOzyD,KAAKb,cAAc,eAC1BszD,EAAKv6B,aAAa,QAAS2xB,YAAY0e,aACvCvoE,KAAKgyF,KAAKt5D,YAAY+5B,GAEtBA,EAAOzyD,KAAKb,cAAc,eAC1BszD,EAAKv6B,aAAa,QAAS2xB,YAAY8e,gBACvC3oE,KAAKgyF,KAAKt5D,YAAY+5B,GAEtBA,EAAOzyD,KAAKb,cAAc,gBAC1BszD,EAAKv6B,aAAa,KAAM2xB,YAAY4e,iBACpChW,EAAKv6B,aAAa,KAAM2xB,YAAY6e,iBACpC1oE,KAAKgyF,KAAKt5D,YAAY+5B,IAQvBs/B,cAAcryF,UAAU85F,OAAS,SAASl8F,GAEzC,OAAO4K,WAAWA,WAAW5K,GAAO2+F,QAAQ,KAQ7ClK,cAAcryF,UAAUP,cAAgB,SAASrB,GAEhD,OAAOkC,KAAKgyF,KAAKzwD,cAAcpiC,cAAcrB,IAQ9Ci0F,cAAcryF,UAAUw1F,KAAO,WAE1Bl1F,KAAKg8F,YAERpK,mBAAmBlyF,UAAUw1F,KAAKn0F,MAAMf,KAAMgB,WAG/ChB,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,UAQ1C4yF,cAAcryF,UAAUw3F,QAAU,WAE7Bl3F,KAAKg8F,YAERpK,mBAAmBlyF,UAAUw3F,QAAQn2F,MAAMf,KAAMgB,WAGlDhB,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,aAY1C4yF,cAAcryF,UAAUytD,MAAQ,SAAS7vD,GAEjC,IAAIm1D,EAAOzyD,KAAKb,cAAc,SAC9BszD,EAAKv6B,aAAa,QAAS56B,GAC3B0C,KAAKgyF,KAAKt5D,YAAY+5B,IAa9Bs/B,cAAcryF,UAAUmkE,UAAY,SAASh1B,EAAIE,GAEhD,IAAI0jB,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAO3qD,IACpC4jB,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOzqD,IACpC/uC,KAAKgyF,KAAKt5D,YAAY+5B,IAiBvBs/B,cAAcryF,UAAUk6F,OAAS,SAASD,EAAO39B,EAAOC,EAAOvC,EAAI+D,GAElE,IAAIhL,EAAOzyD,KAAKb,cAAc,WAEjB,GAATw6F,GAAc39B,GAASC,KAE1BxJ,EAAKv6B,aAAa,QAASl4B,KAAKw5F,OAAOG,IACvClnC,EAAKv6B,aAAa,QAAS,EAAU,IAAM,KAC3Cu6B,EAAKv6B,aAAa,QAAS,EAAU,IAAM,KAC3Cu6B,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAO9/B,IACpCjH,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAO/7B,IACpCz9D,KAAKgyF,KAAKt5D,YAAY+5B,KAcxBs/B,cAAcryF,UAAUm6F,SAAW,SAASv8F,GAE3C,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM+sB,OAASvgE,EAEvB,OAGDs0F,mBAAmBlyF,UAAUm6F,SAAS94F,MAAMf,KAAMgB,WAGnD,IAAIyxD,EAAOzyD,KAAKb,cAAc,SAC9BszD,EAAKv6B,aAAa,QAASl4B,KAAKw5F,OAAOl8F,IACvC0C,KAAKgyF,KAAKt5D,YAAY+5B,IAavBs/B,cAAcryF,UAAUo6F,aAAe,SAASx8F,GAE/C,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMgnD,WAAax6F,EAE3B,OAGDs0F,mBAAmBlyF,UAAUo6F,aAAa/4F,MAAMf,KAAMgB,WAGvD,IAAIyxD,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,QAASl4B,KAAKw5F,OAAOl8F,IACvC0C,KAAKgyF,KAAKt5D,YAAY+5B,IAavBs/B,cAAcryF,UAAUq6F,eAAiB,SAASz8F,GAEjD,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMinD,aAAez6F,EAE7B,OAGDs0F,mBAAmBlyF,UAAUq6F,eAAeh5F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,QAASl4B,KAAKw5F,OAAOl8F,IACvC0C,KAAKgyF,KAAKt5D,YAAY+5B,IAYvBs/B,cAAcryF,UAAUs6F,aAAe,SAAS18F,GAO/C,GALIA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMknD,WAAa16F,EAE3B,OAGDs0F,mBAAmBlyF,UAAUs6F,aAAaj5F,MAAMf,KAAMgB,WAGvD,IAAIyxD,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,IAuBvBs/B,cAAcryF,UAAUu6F,YAAc,SAASC,EAAQC,EAAQn7C,EAAG4L,EAAGpE,EAAGz/C,EAAGqzF,EAAWC,EAAQC,GAE7F,GAAc,MAAVJ,GAA4B,MAAVC,EACtB,CACCvI,mBAAmBlyF,UAAUu6F,YAAYl5F,MAAMf,KAAMgB,WAErD,IAAIyxD,EAAOzyD,KAAKb,cAAc,YAC9BszD,EAAKv6B,aAAa,KAAMgiE,GACxBznC,EAAKv6B,aAAa,KAAMiiE,GACxB1nC,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IAGlB,MAAbqzF,GAEH3nC,EAAKv6B,aAAa,YAAakiE,GAGlB,MAAVC,GAEH5nC,EAAKv6B,aAAa,SAAUmiE,GAGf,MAAVC,GAEH7nC,EAAKv6B,aAAa,SAAUoiE,GAG7Bt6F,KAAKgyF,KAAKt5D,YAAY+5B,KAaxBs/B,cAAcryF,UAAU66F,eAAiB,SAASj9F,GAOjD,GALIA,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMunD,aAAe/6F,EAE7B,OAGDs0F,mBAAmBlyF,UAAU66F,eAAex5F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,IAYvBs/B,cAAcryF,UAAU86F,eAAiB,SAASl9F,GAEjD,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMwnD,aAAeh7F,EAE7B,OAGDs0F,mBAAmBlyF,UAAU86F,eAAez5F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,QAASl4B,KAAKw5F,OAAOl8F,IACvC0C,KAAKgyF,KAAKt5D,YAAY+5B,IAcvBs/B,cAAcryF,UAAU+6F,UAAY,SAASn9F,EAAOm7F,GAEnD,GAAIz4F,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMynD,QAAUj7F,EAExB,OAGDs0F,mBAAmBlyF,UAAU+6F,UAAU15F,MAAMf,KAAMgB,WAGpD,IAAIyxD,EAAOzyD,KAAKb,cAAc,UAC9BszD,EAAKv6B,aAAa,SAAU,EAAU,IAAM,KAE7B,MAAXugE,GAEHhmC,EAAKv6B,aAAa,UAAW,EAAY,IAAM,KAGhDl4B,KAAKgyF,KAAKt5D,YAAY+5B,IAevBs/B,cAAcryF,UAAUg7F,eAAiB,SAASp9F,GAEjD,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM0nD,aAAel7F,EAE7B,OAGDs0F,mBAAmBlyF,UAAUg7F,eAAe35F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,UAAW56B,GAC7B0C,KAAKgyF,KAAKt5D,YAAY+5B,IAavBs/B,cAAcryF,UAAUi7F,WAAa,SAASr9F,GAE7C,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM4nD,SAAWp7F,EAEzB,OAGDs0F,mBAAmBlyF,UAAUi7F,WAAW55F,MAAMf,KAAMgB,WAGrD,IAAIyxD,EAAOzyD,KAAKb,cAAc,WAC9BszD,EAAKv6B,aAAa,MAAO56B,GACzB0C,KAAKgyF,KAAKt5D,YAAY+5B,IAavBs/B,cAAcryF,UAAUk7F,YAAc,SAASt9F,GAE9C,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM6nD,UAAYr7F,EAE1B,OAGDs0F,mBAAmBlyF,UAAUk7F,YAAY75F,MAAMf,KAAMgB,WAGtD,IAAIyxD,EAAOzyD,KAAKb,cAAc,YAC9BszD,EAAKv6B,aAAa,OAAQ56B,GAC1B0C,KAAKgyF,KAAKt5D,YAAY+5B,IAYvBs/B,cAAcryF,UAAUm7F,cAAgB,SAASv9F,GAEhD,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM8nD,YAAct7F,EAE5B,OAGDs0F,mBAAmBlyF,UAAUm7F,cAAc95F,MAAMf,KAAMgB,WAGxD,IAAIyxD,EAAOzyD,KAAKb,cAAc,cAC9BszD,EAAKv6B,aAAa,QAAS56B,GAC3B0C,KAAKgyF,KAAKt5D,YAAY+5B,IAYvBs/B,cAAcryF,UAAUo7F,aAAe,SAASx9F,GAE/C,GAAI0C,KAAK+7F,YACT,CAMC,GALIz+F,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM+nD,WAAav7F,EAE3B,OAGDs0F,mBAAmBlyF,UAAUo7F,aAAa/5F,MAAMf,KAAMgB,WAGvD,IAAIyxD,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,KAaxBs/B,cAAcryF,UAAUq7F,uBAAyB,SAASz9F,GAEzD,GAAI0C,KAAK+7F,YACT,CAMC,GALIz+F,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMgoD,qBAAuBx7F,EAErC,OAGDs0F,mBAAmBlyF,UAAUq7F,uBAAuBh6F,MAAMf,KAAMgB,WAGjE,IAAIyxD,EAAOzyD,KAAKb,cAAc,uBAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,KAaxBs/B,cAAcryF,UAAUs7F,mBAAqB,SAAS19F,GAErD,GAAI0C,KAAK+7F,YACT,CAMC,GALIz+F,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMioD,iBAAmBz7F,EAEjC,OAGDs0F,mBAAmBlyF,UAAUs7F,mBAAmBj6F,MAAMf,KAAMgB,WAG7D,IAAIyxD,EAAOzyD,KAAKb,cAAc,mBAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,KAaxBs/B,cAAcryF,UAAUu7F,YAAc,SAAS39F,GAE9C,GAAI0C,KAAK+7F,YACT,CACC,GAAI/7F,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMyxB,UAAYjlE,EAE1B,OAGDs0F,mBAAmBlyF,UAAUu7F,YAAYl6F,MAAMf,KAAMgB,WAGtD,IAAIyxD,EAAOzyD,KAAKb,cAAc,YAC9BszD,EAAKv6B,aAAa,OAAQ56B,GAC1B0C,KAAKgyF,KAAKt5D,YAAY+5B,KAcxBs/B,cAAcryF,UAAUw7F,cAAgB,SAAS59F,GAEhD,GAAI0C,KAAK+7F,YACT,CACC,GAAI/7F,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAM0xB,YAAcllE,EAE5B,OAGDs0F,mBAAmBlyF,UAAUw7F,cAAcn6F,MAAMf,KAAMgB,WAGxD,IAAIyxD,EAAOzyD,KAAKb,cAAc,cAC9BszD,EAAKv6B,aAAa,SAAU56B,GAC5B0C,KAAKgyF,KAAKt5D,YAAY+5B,KAcxBs/B,cAAcryF,UAAUy7F,aAAe,SAAS79F,GAE/C,GAAI0C,KAAK+7F,YACT,CAMC,GALa,MAATz+F,IAEHA,EAAQ,GAGL0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMkoD,WAAa17F,EAE3B,OAGDs0F,mBAAmBlyF,UAAUy7F,aAAap6F,MAAMf,KAAMgB,WAGvD,IAAIyxD,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,QAAS56B,GAC3B0C,KAAKgyF,KAAKt5D,YAAY+5B,KAaxBs/B,cAAcryF,UAAU07F,UAAY,SAAS99F,GAE5C,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMmoD,QAAU37F,EAExB,OAGDs0F,mBAAmBlyF,UAAU07F,UAAUr6F,MAAMf,KAAMgB,WAGpD,IAAIyxD,EAAOzyD,KAAKb,cAAc,UAC9BszD,EAAKv6B,aAAa,UAAW,EAAU,IAAM,KAC7Cl4B,KAAKgyF,KAAKt5D,YAAY+5B,IAYvBs/B,cAAcryF,UAAU27F,eAAiB,SAAS/9F,GAEjD,GAAI0C,KAAKg8F,WACT,CAMC,GALI1+F,GAASusD,YAAYC,OAExBxsD,EAAQ,MAGL0C,KAAK8wC,MAAMooD,aAAe57F,EAE7B,OAGDs0F,mBAAmBlyF,UAAU27F,eAAet6F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,QAAmB,MAAT56B,EAAiBA,EAAQusD,YAAYC,MACjE9pD,KAAKgyF,KAAKt5D,YAAY+5B,IAavBs/B,cAAcryF,UAAU47F,eAAiB,SAASh+F,GAEjD,GAAI0C,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMqoD,aAAe77F,EAE7B,OAGDs0F,mBAAmBlyF,UAAU47F,eAAev6F,MAAMf,KAAMgB,WAGzD,IAAIyxD,EAAOzyD,KAAKb,cAAc,eAC9BszD,EAAKv6B,aAAa,QAAS56B,GAC3B0C,KAAKgyF,KAAKt5D,YAAY+5B,IAcvBs/B,cAAcryF,UAAU67F,gBAAkB,SAAS1sD,EAAIE,GAEtD,GAAI/uC,KAAKg8F,WACT,CACC,GAAIh8F,KAAK8wC,MAAMsoD,UAAYvqD,GAAM7uC,KAAK8wC,MAAMuoD,UAAYtqD,EAEvD,OAGD6iD,mBAAmBlyF,UAAU67F,gBAAgBx6F,MAAMf,KAAMgB,WAG1D,IAAIyxD,EAAOzyD,KAAKb,cAAc,gBAC9BszD,EAAKv6B,aAAa,KAAM2W,GACxB4jB,EAAKv6B,aAAa,KAAM6W,GACxB/uC,KAAKgyF,KAAKt5D,YAAY+5B,IAgBvBs/B,cAAcryF,UAAUwrD,KAAO,SAASlM,EAAG4L,EAAGpE,EAAGz/C,GAEhD,IAAI0rD,EAAOzyD,KAAKb,cAAc,QAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IACnC/G,KAAKgyF,KAAKt5D,YAAY+5B,IAiBvBs/B,cAAcryF,UAAUw8F,UAAY,SAASl9C,EAAG4L,EAAGpE,EAAGz/C,EAAG8nC,EAAIE,GAE5D,IAAI0jB,EAAOzyD,KAAKb,cAAc,aAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IACnC0rD,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAO3qD,IACpC4jB,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOzqD,IACpC/uC,KAAKgyF,KAAKt5D,YAAY+5B,IAevBs/B,cAAcryF,UAAUy8F,QAAU,SAASn9C,EAAG4L,EAAGpE,EAAGz/C,GAEnD,IAAI0rD,EAAOzyD,KAAKb,cAAc,WAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IACnC/G,KAAKgyF,KAAKt5D,YAAY+5B,IAmBvBs/B,cAAcryF,UAAUyoF,MAAQ,SAASnpC,EAAG4L,EAAGpE,EAAGz/C,EAAG6N,EAAKwnF,EAAQpgC,EAAOC,GAExErnD,EAAM5U,KAAK6xF,UAAUoB,QAAQr+E,GAG7B,IAAI69C,EAAOzyD,KAAKb,cAAc,SAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IACnC0rD,EAAKv6B,aAAa,MAAOtjB,GACzB69C,EAAKv6B,aAAa,SAAU,EAAW,IAAM,KAC7Cu6B,EAAKv6B,aAAa,QAAS,EAAU,IAAM,KAC3Cu6B,EAAKv6B,aAAa,QAAS,EAAU,IAAM,KAC3Cl4B,KAAKgyF,KAAKt5D,YAAY+5B,IAQvBs/B,cAAcryF,UAAU87F,MAAQ,WAE/Bx7F,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,UACzCa,KAAKs3F,MAAQ,EACbt3F,KAAKu3F,MAAQ,GAadxF,cAAcryF,UAAU+7F,OAAS,SAASz8C,EAAG4L,GAE5C,IAAI6H,EAAOzyD,KAAKb,cAAc,QAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC5qD,KAAKgyF,KAAKt5D,YAAY+5B,GACtBzyD,KAAKs3F,MAAQt4C,EACbh/C,KAAKu3F,MAAQ3sC,GAadmnC,cAAcryF,UAAUg8F,OAAS,SAAS18C,EAAG4L,GAE5C,IAAI6H,EAAOzyD,KAAKb,cAAc,QAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC5qD,KAAKgyF,KAAKt5D,YAAY+5B,GACtBzyD,KAAKs3F,MAAQt4C,EACbh/C,KAAKu3F,MAAQ3sC,GAedmnC,cAAcryF,UAAUi8F,OAAS,SAAS1hC,EAAIC,EAAId,EAAIC,GAErD,IAAI5G,EAAOzyD,KAAKb,cAAc,QAC9BszD,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOv/B,IACpCxH,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOt/B,IACpCzH,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOpgC,IACpC3G,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOngC,IACpCr5D,KAAKgyF,KAAKt5D,YAAY+5B,GACtBzyD,KAAKs3F,MAAQl+B,EACbp5D,KAAKu3F,MAAQl+B,GAiBd04B,cAAcryF,UAAUk8F,QAAU,SAAS3hC,EAAIC,EAAId,EAAIC,EAAIC,EAAIC,GAE9D,IAAI9G,EAAOzyD,KAAKb,cAAc,SAC9BszD,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOv/B,IACpCxH,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOt/B,IACpCzH,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOpgC,IACpC3G,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOngC,IACpC5G,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOlgC,IACpC7G,EAAKv6B,aAAa,KAAMl4B,KAAKw5F,OAAOjgC,IACpCv5D,KAAKgyF,KAAKt5D,YAAY+5B,GACtBzyD,KAAKs3F,MAAQh+B,EACbt5D,KAAKu3F,MAAQh+B,GAQdw4B,cAAcryF,UAAU81C,MAAQ,WAE/Bx1C,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,WA4B1C4yF,cAAcryF,UAAUmS,KAAO,SAASmtC,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,EAAUn7B,GAE/G,GAAIt+B,KAAK+7F,aAAsB,MAAPnzF,EACxB,CACKs9C,QAAQwJ,OAAO9mD,KAElBA,EAAMs9C,QAAQ4M,aAAalqD,IAG5B,IAAI6pD,EAAOzyD,KAAKb,cAAc,QAC9BszD,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,IACnCyT,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,IACnC6H,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOhzC,IACnCiM,EAAKv6B,aAAa,IAAKl4B,KAAKw5F,OAAOzyF,IACnC0rD,EAAKv6B,aAAa,MAAOtvB,GAEZ,MAATo5D,GAEHvP,EAAKv6B,aAAa,QAAS8pC,GAGd,MAAVC,GAEHxP,EAAKv6B,aAAa,SAAU+pC,GAG7BxP,EAAKv6B,aAAa,OAAQ,EAAS,IAAM,KAE3B,MAAVshE,IAEHA,EAAS,IAGV/mC,EAAKv6B,aAAa,SAAUshE,GAEZ,MAAZxqC,GAEHyD,EAAKv6B,aAAa,WAAY82B,GAGnB,MAARqtC,GAEH5pC,EAAKv6B,aAAa,OAAQ,EAAS,IAAM,KAG1B,MAAZuhC,GAEHhH,EAAKv6B,aAAa,WAAYuhC,GAGpB,MAAPn7B,GAEHm0B,EAAKv6B,aAAa,MAAOoG,GAG1Bt+B,KAAKgyF,KAAKt5D,YAAY+5B,KASxBs/B,cAAcryF,UAAU48F,OAAS,WAEhCt8F,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,YAQ1C4yF,cAAcryF,UAAU68F,KAAO,WAE9Bv8F,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,UAQ1C4yF,cAAcryF,UAAU88F,cAAgB,WAEvCx8F,KAAKgyF,KAAKt5D,YAAY14B,KAAKb,cAAc,gBAG1CwhD,WAAWoxC,cAAyC,qBAAlBA,cAAgCA,mBAAgBxxF,EA8IlF2lD,QAAQ/6C,OAAO+mF,cAAeN,oBAK9B,WAIC,GAFAM,cAAcxyF,UAAU+8F,cAAgB77C,SAASE,OAA8B,oBAAd0P,WAAqD,oBAAlByB,cAEhGigC,cAAcxyF,UAAU+8F,aAI3B,IAEC,IAAIp5C,GAAM,IAAImN,WAAYG,gBAAgB,YAAa,aACvDuhC,cAAcxyF,UAAU+8F,aAAsB,MAAPp5C,EAExC,MAAOp3C,GAENimF,cAAcxyF,UAAU+8F,cAAe,GAf1C,GAyBAvK,cAAcxyF,UAAUwT,KAAO,KAQ/Bg/E,cAAcxyF,UAAUg9F,oBAAqB,EAO7CxK,cAAcxyF,UAAUq8F,aAAc,EAOtC7J,cAAcxyF,UAAUi9F,WAAY,EASpCzK,cAAcxyF,UAAUk9F,UAAY,WAOpC1K,cAAcxyF,UAAUm9F,SAAW,EAOnC3K,cAAcxyF,UAAUo9F,WAAa,EAOrC5K,cAAcxyF,UAAUq9F,YAAc,EAOtC7K,cAAcxyF,UAAUs9F,gBAAkB,EAO1C9K,cAAcxyF,UAAUu9F,eAAiB,EAOzC/K,cAAcxyF,UAAUw9F,SAAW,EASnChL,cAAcxyF,UAAUy9F,yBAA0B,EAOlDjL,cAAcxyF,UAAU09F,qBAAuB,EAO/ClL,cAAcxyF,UAAU29F,mBAAqB,MAQ7CnL,cAAcxyF,UAAU49F,mBAAqB,GAQ7CpL,cAAcxyF,UAAU69F,iBAAkB,EAO1CrL,cAAcxyF,UAAU85F,OAAS,SAASl8F,GAEzC,OAAO4K,WAAWA,WAAW5K,GAAO2+F,QAAQ,KAW7C/J,cAAcxyF,UAAUkzF,WAAa,WAEpC,IAAI5vC,EAAOv0C,OAAO8gC,SAASyT,KACvB1lC,EAAO0lC,EAAK2vC,YAAY,KAO5B,OALIr1E,EAAO,IAEV0lC,EAAOA,EAAKe,UAAU,EAAGzmC,IAGnB0lC,GAQRkvC,cAAcxyF,UAAUkrF,MAAQ,WAE/BgH,mBAAmBlyF,UAAUkrF,MAAM7pF,MAAMf,KAAMgB,WAC/ChB,KAAKoyF,UAAY,IAQlBF,cAAcxyF,UAAU4yF,YAAc,SAAStzC,GAE9C,IAAIp3B,EAAQ5nB,KAAKb,cAAc,SAM/B,OALAyoB,EAAMsQ,aAAa,OAAQ,YAC3BguB,QAAQ3Q,MAAM3tB,EAAO,mBAAqBiiC,YAAY8Y,mBACpD,cAAgB9Y,YAAY6Y,iBAC5B,oCAEK96C,GAQRsqE,cAAcxyF,UAAUP,cAAgB,SAAS64B,EAASI,GAEzD,GAA+C,MAA3Cp4B,KAAKgyF,KAAKzwD,cAAcpJ,gBAE3B,OAAOn4B,KAAKgyF,KAAKzwD,cAAcpJ,gBAAgBC,GAAayxB,YAAY8Z,OAAQ3rC,GAIhF,IAAImvB,EAAMnnD,KAAKgyF,KAAKzwD,cAAcpiC,cAAc64B,GAOhD,OALiB,MAAbI,GAEH+uB,EAAIjvB,aAAa,QAASE,GAGpB+uB,GAST+qC,cAAcxyF,UAAU89F,uBAAyB,SAASC,EAAIz+C,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,GAE3H,GAAsB,MAAlBz5D,KAAK48F,UACT,CACC,IAAIp1D,EAAIxnC,KAAK8wC,MACT2gD,EAAMzxF,KAAKb,cAAc,QAyB7B,OAxBAsyF,EAAIv5D,aAAa,IAAKh4B,KAAKm8D,MAAM7V,EAAI,IACrCirC,EAAIv5D,aAAa,IAAKh4B,KAAKm8D,OAAOt1D,EAAIygC,EAAE+6B,UAAY,IACpDkvB,EAAIv5D,aAAa,OAAQsP,EAAEqxD,WAAa,SACxCpH,EAAIv5D,aAAa,cAAe,UAChCu5D,EAAIv5D,aAAa,YAAasP,EAAE+6B,SAAW,MAC3CkvB,EAAIv5D,aAAa,cAAesP,EAAEg7B,aAE7Bh7B,EAAEwxD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,WAExD+d,EAAIv5D,aAAa,cAAe,SAG5BsP,EAAEwxD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,aAE1D8d,EAAIv5D,aAAa,aAAc,WAG3BsP,EAAEwxD,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,gBAE7D6d,EAAIv5D,aAAa,kBAAmB,aAGrCguB,QAAQ3Q,MAAMk8C,EAAKzxF,KAAK48F,WAEjBnL,EAIP,OAAO,MASTS,cAAcxyF,UAAUg+F,iBAAmB,SAASzyF,EAAO8xB,EAAKs9D,EAAQC,EAAQF,GAGxD,KAAnBnvF,EAAMZ,OAAO,KAEhBY,EAAQA,EAAM84C,UAAU,IAGJ,KAAjBhnB,EAAI1yB,OAAO,KAEd0yB,EAAMA,EAAIgnB,UAAU,IAKrB94C,EAAQA,EAAM9B,cAAgB,IAAMkxF,EACpCt9D,EAAMA,EAAI5zB,cAAgB,IAAMmxF,EAGhC,IAAIh8D,EAAM,KAEV,GAAiB,MAAb87D,GAAqBA,GAAavwC,YAAYyR,gBAEjDh9B,EAAM,SAEF,GAAI87D,GAAavwC,YAAY0R,eAEjCj9B,EAAM,QAGP,CACC,IAAI3O,EAAM1kB,EACVA,EAAQ8xB,EACRA,EAAMpN,EAEFyqE,GAAavwC,YAAYmR,gBAE5B18B,EAAM,IAEE87D,GAAavwC,YAAYwR,iBAEjC/8B,EAAM,KAIR,MAAO,eAAiBrzB,EAAQ,IAAM8xB,EAAM,IAAMuB,GAQnD4zD,cAAcxyF,UAAUi+F,eAAiB,SAAS1yF,EAAO8xB,EAAKs9D,EAAQC,EAAQF,GAE7E,IAAIzpF,EAAK3Q,KAAK09F,iBAAiBzyF,EAAO8xB,EAAKs9D,EAAQC,EAAQF,GACvDwD,EAAW59F,KAAKoyF,UAAUzhF,GAE9B,GAAgB,MAAZitF,EACJ,CACC,IAAIxmE,EAAMp3B,KAAKgyF,KAAKhsB,gBAEhBlrD,EAAU,EACV+iF,EAAQltF,EAAK,IAAMmK,EAEvB,GAAW,MAAPsc,EACJ,CACCwmE,EAAWxmE,EAAImK,cAAcu8D,eAAeD,GAE5C,MAAmB,MAAZD,GAAoBA,EAAS53B,iBAAmB5uC,EAEtDymE,EAAQltF,EAAK,IAAMmK,IACnB8iF,EAAWxmE,EAAImK,cAAcu8D,eAAeD,QAM7CA,EAAQ,QAAU79F,KAAKk9F,SAGR,MAAZU,IAEHA,EAAW59F,KAAK+9F,kBAAkB9yF,EAAO8xB,EAAKs9D,EAAQC,EAAQF,GAC9DwD,EAAS1lE,aAAa,KAAM2lE,GAEX,MAAb79F,KAAKqyF,KAERryF,KAAKqyF,KAAK35D,YAAYklE,GAItBxmE,EAAIsB,YAAYklE,IAIlB59F,KAAKoyF,UAAUzhF,GAAMitF,EAGtB,OAAOA,EAASr5D,aAAa,OAQ9B2tD,cAAcxyF,UAAUq+F,kBAAoB,SAAS9yF,EAAO8xB,EAAKs9D,EAAQC,EAAQF,GAEhF,IAAIwD,EAAW59F,KAAKb,cAAc,kBAClCy+F,EAAS1lE,aAAa,KAAM,MAC5B0lE,EAAS1lE,aAAa,KAAM,MAC5B0lE,EAAS1lE,aAAa,KAAM,MAC5B0lE,EAAS1lE,aAAa,KAAM,MAEX,MAAbkiE,GAAqBA,GAAavwC,YAAYyR,gBAEjDsiC,EAAS1lE,aAAa,KAAM,QAEpBkiE,GAAavwC,YAAY0R,eAEjCqiC,EAAS1lE,aAAa,KAAM,QAEpBkiE,GAAavwC,YAAYmR,gBAEjC4iC,EAAS1lE,aAAa,KAAM,QAEpBkiE,GAAavwC,YAAYwR,gBAEjCuiC,EAAS1lE,aAAa,KAAM,QAG7B,IAAI8lE,EAAM3D,EAAS,EAAK,iBAAmBA,EAAS,GAEhD92F,EAAOvD,KAAKb,cAAc,QAY9B,OAXAoE,EAAK20B,aAAa,SAAU,MAC5B30B,EAAK20B,aAAa,QAAS,cAAgBjtB,EAAQ+yF,GACnDJ,EAASllE,YAAYn1B,GAErBy6F,EAAM1D,EAAS,EAAK,iBAAmBA,EAAS,GAEhD/2F,EAAOvD,KAAKb,cAAc,QAC1BoE,EAAK20B,aAAa,SAAU,QAC5B30B,EAAK20B,aAAa,QAAS,cAAgB6E,EAAMihE,GACjDJ,EAASllE,YAAYn1B,GAEdq6F,GAQR1L,cAAcxyF,UAAUu+F,QAAU,SAASC,EAAQC,GAElD,IAAIjrF,EAAOlT,KAAKkT,KACZs0B,EAAIxnC,KAAK8wC,MAEb,GAAY,MAAR59B,EACJ,CACC,GAAqB,QAAjBA,EAAKy8C,SACT,CAEC,KAAiB,MAAb3vD,KAAKyB,MAAgBzB,KAAKyB,KAAKb,OAAS,GAM3C,OAJAsS,EAAKglB,aAAa,IAAKl4B,KAAKyB,KAAK89B,KAAK,MAQpC2+D,GAAyB,MAAf12D,EAAEwwD,UAEfh4F,KAAKo+F,aAEIp+F,KAAKmyF,eAGO,WAAjBj/E,EAAKy8C,UAAyB/O,SAASqB,MAE1C/uC,EAAKglB,aAAa,OAAQ,eAI1BhlB,EAAKglB,aAAa,OAAQ,QAI3BgmE,GAAS,GAGNC,GAA4B,MAAjB32D,EAAE6wD,YAEhBr4F,KAAKq+F,eAEIr+F,KAAKmyF,cAEdj/E,EAAKglB,aAAa,SAAU,QAGV,MAAfsP,EAAE4G,WAAqB5G,EAAE4G,UAAUxtC,OAAS,GAE/CsS,EAAKglB,aAAa,YAAasP,EAAE4G,WAG9B5G,EAAEyxD,QAELj5F,KAAKgyF,KAAKt5D,YAAY14B,KAAKs+F,aAAaprF,IAIrClT,KAAKg9F,gBAAkB,IAAMkB,GAEhCl+F,KAAKgyF,KAAKt5D,YAAY14B,KAAKu+F,gBAAgBrrF,IAIxClT,KAAKqrF,cAERn4E,EAAKglB,aAAa,iBAAkBl4B,KAAKq9F,oBAGhCr9F,KAAKqrF,eAAsC,MAArBrrF,KAAKw+F,cAEpCtrF,EAAKglB,aAAa,iBAAkB,SAIf,QAAjBhlB,EAAKy8C,UAAuC,QAAjBz8C,EAAKy8C,UAAuC,WAAjBz8C,EAAKy8C,UACjC,QAA7Bz8C,EAAKqxB,aAAa,SAAkD,eAA7BrxB,EAAKqxB,aAAa,SAC3B,QAA/BrxB,EAAKqxB,aAAa,WAA8D,QAAvCrxB,EAAKqxB,aAAa,oBAG3DvkC,KAAKgyF,KAAKt5D,YAAYxlB,GAGvBlT,KAAKkT,KAAO,OASdg/E,cAAcxyF,UAAU0+F,WAAa,WAEpC,IAAI52D,EAAIxnC,KAAK8wC,MAOb,IALItJ,EAAEq2B,MAAQ,GAAKr2B,EAAEswD,UAAY,IAEhC93F,KAAKkT,KAAKglB,aAAa,eAAgBsP,EAAEq2B,MAAQr2B,EAAEswD,WAGjC,MAAftwD,EAAEwwD,UAEL,GAAuB,MAAnBxwD,EAAE0wD,cACN,CACC,IAAIvnF,EAAK3Q,KAAK29F,eAAep8F,OAAOimC,EAAEwwD,WAAYz2F,OAAOimC,EAAE0wD,eAC1D1wD,EAAEywD,kBAAmBzwD,EAAE2wD,cAAe3wD,EAAE4wD,mBAEzC,GAAKx3C,SAASiB,cAAiBjB,SAASE,OAAUF,SAASI,SACzDJ,SAASK,SAAWjhD,KAAKgyF,KAAKzwD,eAAiBtmB,SAQhDjb,KAAKkT,KAAKglB,aAAa,OAAQ,QAAUvnB,EAAK,SAP/C,CAEC,IAAIiY,EAAO5oB,KAAK4yF,aAAa3oF,QAAQ,YAAa,QAClDjK,KAAKkT,KAAKglB,aAAa,OAAQ,OAAStP,EAAO,IAAMjY,EAAK,WAS3D3Q,KAAKkT,KAAKglB,aAAa,OAAQ32B,OAAOimC,EAAEwwD,WAAW7uF,gBAUtD+oF,cAAcxyF,UAAU++F,sBAAwB,WAE/C,OAAOv+F,KAAKwD,IAAI1D,KAAKi9F,eAAgB/8F,KAAKwD,IAAI,IAAM1D,KAAKw5F,OAAOx5F,KAAK8wC,MAAMwnD,YAAct4F,KAAK8wC,MAAMqc,UAQrG+kC,cAAcxyF,UAAU2+F,aAAe,WAEtC,IAAI72D,EAAIxnC,KAAK8wC,MAEb9wC,KAAKkT,KAAKglB,aAAa,SAAU32B,OAAOimC,EAAE6wD,aAAalvF,gBAEnDq+B,EAAEq2B,MAAQ,GAAKr2B,EAAEuwD,YAAc,IAElC/3F,KAAKkT,KAAKglB,aAAa,iBAAkBsP,EAAEq2B,MAAQr2B,EAAEuwD,aAGtD,IAAI2G,EAAK1+F,KAAKy+F,wBAEJ,GAANC,GAEH1+F,KAAKkT,KAAKglB,aAAa,eAAgBwmE,GAGd,QAAtB1+F,KAAKkT,KAAKy8C,UAEb3vD,KAAK2+F,yBAGFn3D,EAAE+wD,QAELv4F,KAAKkT,KAAKglB,aAAa,mBAAoBl4B,KAAK4+F,mBAC7Cp3D,EAAS,QAAI,EAAIA,EAAE8wD,aAAe9wD,EAAE2lB,SASzC+kC,cAAcxyF,UAAUi/F,uBAAyB,WAEhD,IAAIn3D,EAAIxnC,KAAK8wC,MAQb,GALkB,MAAdtJ,EAAEmxD,UAAkC,SAAdnxD,EAAEmxD,UAE3B34F,KAAKkT,KAAKglB,aAAa,kBAAmBsP,EAAEmxD,UAG5B,MAAbnxD,EAAEkxD,QACN,CAEC,IAAIp7F,EAAQkqC,EAAEkxD,QAED,QAATp7F,IAEHA,EAAQ,QAII,QAATA,GAEH0C,KAAKkT,KAAKglB,aAAa,iBAAkB56B,GAKvB,MAAhBkqC,EAAEoxD,YAAwB54F,KAAKmyF,cAAgC,IAAhB3qD,EAAEoxD,YAEpD54F,KAAKkT,KAAKglB,aAAa,oBAAqBsP,EAAEoxD,aAShD1G,cAAcxyF,UAAUk/F,kBAAoB,SAASzxC,GAEpD,IAAI0xC,EAAM,GAEV,GAAuC,kBAA5B7+F,KAAK8wC,MAAiB,YACjC,CACC,IAAI8Y,EAAO5pD,KAAK8wC,MAAM0nD,YAAYvvF,MAAM,KAExC,GAAI2gD,EAAKhpD,OAAS,EAEjB,IAAK,IAAIsI,EAAI,EAAGA,EAAI0gD,EAAKhpD,OAAQsI,IAEhC21F,EAAI31F,GAAK8rB,OAAO40B,EAAK1gD,IAAMikD,EAK9B,OAAO0xC,EAAIt/D,KAAK,MAQjB2yD,cAAcxyF,UAAU6+F,gBAAkB,SAASrrF,GAElD,IAAI4rF,EAAM5rF,EAAKw7B,WAAU,GACrBgwD,EAAKx2F,WAAW42F,EAAIv6D,aAAa,iBAAmB,GAAKvkC,KAAKg9F,gBAalE,OAZA8B,EAAI5mE,aAAa,iBAAkB,UACnC4mE,EAAI5mE,aAAa,aAAc,UAC/B4mE,EAAI/gE,gBAAgB,oBACpB+gE,EAAI5mE,aAAa,eAAgBwmE,GACjCI,EAAI5mE,aAAa,OAAQ,QAMzB4mE,EAAI5mE,aAAa,SAAW0oB,SAAc,MAAI,OAAS,SAEhDk+C,GAQR5M,cAAcxyF,UAAU4+F,aAAe,SAASprF,GAE/C,IAAI+lF,EAAS/lF,EAAKw7B,WAAU,GACxBlH,EAAIxnC,KAAK8wC,MAiBb,MAdmC,QAA/BmoD,EAAO10D,aAAa,SAAuBqc,SAASqB,OAAwC,eAA/Bg3C,EAAO10D,aAAa,SAEpF00D,EAAO/gE,aAAa,OAAQsP,EAAE0xD,aAGM,QAAjCD,EAAO10D,aAAa,WAEvB00D,EAAO/gE,aAAa,SAAUsP,EAAE0xD,aAGjCD,EAAO/gE,aAAa,YAAa,aAAel4B,KAAKw5F,OAAOhyD,EAAE4xD,SAAW5xD,EAAE2lB,OAC1E,IAAMntD,KAAKw5F,OAAOhyD,EAAE6xD,SAAW7xD,EAAE2lB,OAAS,KAAO3lB,EAAE4G,WAAa,KACjE6qD,EAAO/gE,aAAa,UAAWsP,EAAE2xD,aAE1BF,GAQR/G,cAAcxyF,UAAUk3F,QAAU,SAASzzC,GAE1C,GAAY,MAARA,EAEHnjD,KAAKgyF,KAAOhyF,KAAKw+F,iBAGlB,CACCx+F,KAAKw+F,aAAex+F,KAAKgyF,KAEzB,IAAI9+E,EAAOlT,KAAKb,cAAc,KAIH,MAAvB+T,EAAK6sB,gBAA2B//B,KAAKgyF,KAAKzwD,eAAiBtmB,UAAqC,MAAzBA,SAASkmC,aAEnFjuC,EAAKglB,aAAa,aAAcirB,GAIhCjwC,EAAK6sB,eAAe8pB,YAAYye,SAAU,aAAcnlB,GAGzDnjD,KAAKgyF,KAAKt5D,YAAYxlB,GACtBlT,KAAKgyF,KAAO9+E,IASdg/E,cAAcxyF,UAAUk6F,OAAS,SAASD,EAAO39B,EAAOC,EAAOvC,EAAI+D,GAElE,GAAa,GAATk8B,GAAc39B,GAASC,EAC3B,CACC,IAAIz0B,EAAIxnC,KAAK8wC,MAWb,GAVA4oB,GAAMlyB,EAAEqH,GACR4uB,GAAMj2B,EAAEuH,GAER2qB,GAAMlyB,EAAE2lB,MACRsQ,GAAMj2B,EAAE2lB,MAER3lB,EAAE4G,UAAY5G,EAAE4G,WAAa,GAIzB4tB,GAASC,EAEZ09B,GAAS,SAEL,GAAI39B,GAASC,EAClB,CACC,IAAI3D,EAAK,EAAUoB,EAAK,EACpBrM,EAAK,GAAW,EAAI,EAEpBkL,EAAK,EAAUkF,EAAK,EACpBnQ,EAAK,GAAW,EAAI,EAExB9lB,EAAE4G,WAAa,aAAepuC,KAAKw5F,OAAOlhC,GAAM,IAAMt4D,KAAKw5F,OAAOjhC,GAAM,UAC5Dv4D,KAAKw5F,OAAOnsC,GAAM,IAAMrtD,KAAKw5F,OAAOlsC,GAAM,cACtCttD,KAAKw5F,QAAQlhC,GAAM,IAAMt4D,KAAKw5F,QAAQjhC,GAAM,KAGzDyD,GAASC,EAAQA,KAEpB09B,IAAU,GAGE,GAATA,IAEHnyD,EAAE4G,WAAa,UAAYpuC,KAAKw5F,OAAOG,GAAS,IAAM35F,KAAKw5F,OAAO9/B,GAAM,IAAM15D,KAAKw5F,OAAO/7B,GAAM,KAGjGj2B,EAAEiyB,SAAWjyB,EAAEiyB,SAAWkgC,EAC1BnyD,EAAE8xD,WAAa5/B,EACflyB,EAAE+xD,WAAa97B,IASjBy0B,cAAcxyF,UAAU87F,MAAQ,WAE/B5J,mBAAmBlyF,UAAU87F,MAAMz6F,MAAMf,KAAMgB,WAC/ChB,KAAKkT,KAAOlT,KAAKb,cAAc,SAQhC+yF,cAAcxyF,UAAUwrD,KAAO,SAASlM,EAAG4L,EAAGpE,EAAGz/C,GAEhD,IAAIygC,EAAIxnC,KAAK8wC,MACT7oC,EAAIjI,KAAKb,cAAc,QAC3B8I,EAAEiwB,aAAa,IAAKl4B,KAAKw5F,QAAQx6C,EAAIxX,EAAEqH,IAAMrH,EAAE2lB,QAC/CllD,EAAEiwB,aAAa,IAAKl4B,KAAKw5F,QAAQ5uC,EAAIpjB,EAAEuH,IAAMvH,EAAE2lB,QAC/CllD,EAAEiwB,aAAa,QAASl4B,KAAKw5F,OAAOhzC,EAAIhf,EAAE2lB,QAC1CllD,EAAEiwB,aAAa,SAAUl4B,KAAKw5F,OAAOzyF,EAAIygC,EAAE2lB,QAE3CntD,KAAKkT,KAAOjL,GAQbiqF,cAAcxyF,UAAUw8F,UAAY,SAASl9C,EAAG4L,EAAGpE,EAAGz/C,EAAG8nC,EAAIE,GAE5D/uC,KAAKkrD,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GAEf8nC,EAAK,GAER7uC,KAAKkT,KAAKglB,aAAa,KAAMl4B,KAAKw5F,OAAO3qD,EAAK7uC,KAAK8wC,MAAMqc,QAGtDpe,EAAK,GAER/uC,KAAKkT,KAAKglB,aAAa,KAAMl4B,KAAKw5F,OAAOzqD,EAAK/uC,KAAK8wC,MAAMqc,SAS3D+kC,cAAcxyF,UAAUy8F,QAAU,SAASn9C,EAAG4L,EAAGpE,EAAGz/C,GAEnD,IAAIygC,EAAIxnC,KAAK8wC,MACT7oC,EAAIjI,KAAKb,cAAc,WAE3B8I,EAAEiwB,aAAa,KAAMl4B,KAAKw5F,QAAQx6C,EAAIwH,EAAI,EAAIhf,EAAEqH,IAAMrH,EAAE2lB,QACxDllD,EAAEiwB,aAAa,KAAMl4B,KAAKw5F,QAAQ5uC,EAAI7jD,EAAI,EAAIygC,EAAEuH,IAAMvH,EAAE2lB,QACxDllD,EAAEiwB,aAAa,KAAMsuB,EAAI,EAAIhf,EAAE2lB,OAC/BllD,EAAEiwB,aAAa,KAAMnxB,EAAI,EAAIygC,EAAE2lB,OAC/BntD,KAAKkT,KAAOjL,GAQbiqF,cAAcxyF,UAAUyoF,MAAQ,SAASnpC,EAAG4L,EAAGpE,EAAGz/C,EAAG6N,EAAKwnF,EAAQpgC,EAAOC,GAExErnD,EAAM5U,KAAK6xF,UAAUoB,QAAQr+E,GAG7BwnF,EAAoB,MAAVA,GAAkBA,EAC5BpgC,EAAkB,MAATA,GAAiBA,EAC1BC,EAAkB,MAATA,GAAiBA,EAE1B,IAAIz0B,EAAIxnC,KAAK8wC,MACbkO,GAAKxX,EAAEqH,GACP+b,GAAKpjB,EAAEuH,GAEP,IAAI77B,EAAOlT,KAAKb,cAAc,SAC9B+T,EAAKglB,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,EAAIxX,EAAE2lB,OAASntD,KAAK+8F,aACvD7pF,EAAKglB,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,EAAIpjB,EAAE2lB,OAASntD,KAAK+8F,aACvD7pF,EAAKglB,aAAa,QAASl4B,KAAKw5F,OAAOhzC,EAAIhf,EAAE2lB,QAC7Cj6C,EAAKglB,aAAa,SAAUl4B,KAAKw5F,OAAOzyF,EAAIygC,EAAE2lB,QAGnB,MAAvBj6C,EAAK6sB,eAER7sB,EAAKglB,aAAa,aAActjB,GAIhC1B,EAAK6sB,eAAe8pB,YAAYye,SAAU,aAAc1zD,GAGpDwnF,GAEJlpF,EAAKglB,aAAa,sBAAuB,SAGtCsP,EAAEq2B,MAAQ,GAAKr2B,EAAEswD,UAAY,IAEhC5kF,EAAKglB,aAAa,UAAWsP,EAAEq2B,MAAQr2B,EAAEswD,WAG1C,IAAIvyC,EAAKvlD,KAAK8wC,MAAM1C,WAAa,GAEjC,GAAI4tB,GAASC,EACb,CACC,IAAI5O,EAAK,EACLC,EAAK,EACLze,EAAK,EACLE,EAAK,EAELitB,IAEH3O,GAAM,EACNxe,GAAM2X,EAAI,EAAIxH,GAGXid,IAEH3O,GAAM,EACNve,GAAMhoC,EAAI,EAAI6jD,GAIfrF,GAAM,SAAW8H,EAAK,IAAMC,EAAK,cAAiBze,EAAKrH,EAAE2lB,MAAS,IAAOpe,EAAKvH,EAAE2lB,MAAS,IAGtF5H,EAAG3kD,OAAS,GAEfsS,EAAKglB,aAAa,YAAaqtB,GAG3BvlD,KAAKqrF,eAETn4E,EAAKglB,aAAa,iBAAkB,QAGrCl4B,KAAKgyF,KAAKt5D,YAAYxlB,GAKlBlT,KAAKm9F,0BAERjqF,EAAKglB,aAAa,QAAS,uBAE3BhlB,EAAOlT,KAAKb,cAAc,QAC1B+T,EAAKglB,aAAa,aAAc,UAChChlB,EAAKglB,aAAa,iBAAkB,QACpChlB,EAAKglB,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,EAAIxX,EAAE2lB,QACzCj6C,EAAKglB,aAAa,IAAKl4B,KAAKw5F,OAAO5uC,EAAIpjB,EAAE2lB,QACzCj6C,EAAKglB,aAAa,QAASl4B,KAAKw5F,OAAOhzC,EAAIhf,EAAE2lB,QAC7Cj6C,EAAKglB,aAAa,SAAUl4B,KAAKw5F,OAAOzyF,EAAIygC,EAAE2lB,QAC9CntD,KAAKgyF,KAAKt5D,YAAYxlB,KASxBg/E,cAAcxyF,UAAUq/F,YAAc,SAAS/2F,GAE9C,GAAIhI,KAAKy8F,aACT,CACC,IAAIp5C,GAAM,IAAImN,WAAYG,gBAAgB3oD,EAAK,aAEpC,MAAPq7C,IAEHr7C,GAAM,IAAIiqD,eAAgBE,kBAAkB9O,EAAIpV,MAGrB,SAAvBjmC,EAAI+7C,UAAU,EAAG,KAEpB/7C,EAAMA,EAAI+7C,UAAU/7C,EAAIwB,QAAQ,IAAK,GAAK,IAGM,WAA7CxB,EAAI+7C,UAAU/7C,EAAIpH,OAAS,EAAGoH,EAAIpH,UAErCoH,EAAMA,EAAI+7C,UAAU,EAAG/7C,EAAIpH,OAAS,SAIlC,IAA+B,MAA3Bqa,SAASm1C,gBAAoE,MAA1Cn1C,SAASm1C,eAAeC,eACpE,CACC,IAAI2uC,EAAK/jF,SAASm1C,eAAeC,eAAe,+BAAgC,OAAQ,MACpF4uC,EAAKD,EAAG7/F,cAAc,QAC1B6/F,EAAGp8C,gBAAgBlqB,YAAYumE,GAE/B,IAAIr8B,EAAM3nD,SAAS9b,cAAc,OACjCyjE,EAAIrlC,UAAYv1B,EAChB,IAAI+K,EAAQ6vD,EAAInlC,WAEhB,MAAgB,MAAT1qB,EACP,CACC,IAAIjR,EAAOiR,EAAM4lB,YACjBsmE,EAAGvmE,YAAYsmE,EAAGE,UAAUnsF,IAC5BA,EAAQjR,EAGT,OAAOm9F,EAAG1hE,UAIV,IAAI4hE,EAAKlkF,SAAS9b,cAAc,YAKhCggG,EAAG5hE,UAAYv1B,EAAIiC,QAAQ,SAAU,aACpCA,QAAQ,SAAU,YAAYA,QAAQ,SAAU,YAChDA,QAAQ,QAAS,YAAYA,QAAQ,QAAS,YAC9CA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QACrCjC,EAAMm3F,EAAG7hG,MAAM2M,QAAQ,KAAM,SAASA,QAAQ,YAAa,QAC1DA,QAAQ,YAAa,QAAQA,QAAQ,aAAc,SACnDA,QAAQ,QAAS,UAAUA,QAAQ,QAAS,UAC5CA,QAAQ,iBAAkB,SAG5B,OAAOjC,GAQRkqF,cAAcxyF,UAAU0/F,UAAY,SAASx2F,EAAKo5D,EAAOC,EAAQr6C,EAAOonC,EAAUgU,GAEjF,IAAIx7B,EAAIxnC,KAAK8wC,MAGTuuD,EAAMx1C,YAAgC,qBAAKriB,EAAE+6B,SAAW1Y,YAAYiZ,YAAe,KACrFjZ,YAAYiZ,YAAc9iE,KAAKo9F,qBAEjCx1E,EAAQ,kCAAoC4f,EAAE+6B,SAAW,kBAAoB/6B,EAAEg7B,WAC9E,UAAYh7B,EAAEqxD,UAAY,gBAAkBwG,EAAK,IAAMz3E,GAEnD4f,EAAEwxD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,YAExD9rD,GAAS,sBAGL4f,EAAEwxD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,cAE1D/rD,GAAS,uBAGL4f,EAAEwxD,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,iBAE7DhsD,GAAS,8BAGNo6C,GAASnY,YAAYqY,aAExBt6C,GAAS,qBAEDo6C,GAASnY,YAAYsY,YAE7Bv6C,GAAS,oBAITA,GAAS,mBAGV,IAAI+c,EAAM,GAEmB,MAAzB6C,EAAEsxD,sBAELn0D,GAAO,oBAAsBuhB,QAAQuL,aAAajqB,EAAEsxD,qBAAuB,KAGnD,MAArBtxD,EAAEuxD,kBAELp0D,GAAO,oBAAsBuhB,QAAQuL,aAAajqB,EAAEuxD,iBAAmB,KAGxE,IAAI/wF,EAAMY,EA0BV,GAxBKs9C,QAAQwJ,OAAO1nD,KAEnBA,EAAMhI,KAAK++F,YAAY/2F,GAEP,QAAZgnD,GAAkC,SAAZA,GAIP,MAAdgU,IAEHr+B,GAAO,eAAiBq+B,EAAa,KAItCh7D,EAAM,oHAAsH28B,EAAM,KAAO38B,EAAM,UAI/I4f,GAAS+c,IAMNic,SAASE,OAAS7lC,SAASkd,gBAChC,CACC,IAAIyqC,EAAM3nD,SAASkd,gBAAgB,+BAAgC,OAoBnE,OAnBAyqC,EAAI1qC,aAAa,QAAStQ,GAEtBs+B,QAAQwJ,OAAO1nD,GAGdhI,KAAKgyF,KAAKzwD,eAAiBtmB,SAE9B2nD,EAAIlqC,YAAY1wB,EAAI0mC,WAAU,IAI9Bk0B,EAAIlqC,YAAY1wB,GAKjB46D,EAAIrlC,UAAYv1B,EAGV46D,EAWP,OANI1c,QAAQwJ,OAAO1nD,IAAQhI,KAAKgyF,KAAKzwD,eAAiBtmB,WAErDjT,EAAMA,EAAI+qD,WAIJ7M,QAAQqK,SAAS,oDAAsD3oC,EAC7E,KAAO5f,EAAM,UAAU46C,iBAO1BsvC,cAAcxyF,UAAU4/F,2BAA6B,SAASpsF,UAEtDA,EAAKuqB,WAAW8hE,2BAChBrsF,EAAKuqB,WAAW+hE,gCAChBtsF,EAAKuqB,WAAWgiE,2BAMxBvN,cAAcxyF,UAAUggG,WAAa,SAAS1gD,EAAG4L,EAAGpE,EAAGz/C,EAAGi7D,EAAOC,EAAQzmB,EAAMwT,EAAUqtC,EAAM5iC,EAAUvmD,GAExG,GAAY,MAARA,GAAmC,MAAnBA,EAAKuqB,YAAoD,MAA9BvqB,EAAKuqB,WAAWA,YACrB,MAAzCvqB,EAAKuqB,WAAWA,WAAWA,WAC5B,CAGC,IAAIkiE,EAAQzsF,EAAKuqB,WACbggE,EAAKkC,EAAMliE,WACXmlC,EAAM66B,EAAGhgE,WAEbg8B,EAAwB,MAAZA,EAAoBA,EAAW,EAE3C,IAAIjyB,EAAIxnC,KAAK8wC,MACbkO,GAAKxX,EAAEqH,GACP+b,GAAKpjB,EAAEuH,GAEHstD,GAEHz5B,EAAIh7C,MAAMg4E,UAAY1/F,KAAKm8D,MAAMt1D,GAAK,KACtC67D,EAAIh7C,MAAMi4E,SAAW3/F,KAAKm8D,MAAM7V,GAAK,MAEjB,QAAZwI,GAER4T,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,EAAI,GAAK,KACtCoc,EAAIh7C,MAAM+9B,OAASzlD,KAAKm8D,MAAMt1D,EAAI,GAAK,MAEnB,SAAZioD,IAER4T,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,EAAI,GAAK,KAElCz/C,EAAI,IAEP67D,EAAIh7C,MAAMg4E,UAAY1/F,KAAKm8D,MAAMt1D,GAAK,OAIpCy0C,GAAQgL,EAAI,IAEfoc,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,EAAI,GAAK,MAKvC,IAAIs5C,EAAK,EACLC,EAAK,EAGLC,EAAO,EAGPC,EAAUr9B,EAEY,MAAtBq9B,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEpDswC,EAAUA,EAAQxiE,YAGnB,IAAI9N,EAAoC,MAA7BgwE,EAAMJ,oBAA+BI,EAAMJ,oBAAsBU,EAAQ9rC,YACpF2rC,EAAKnwE,EAAMqwE,EAGPxkD,GAAoB,QAAZwT,IAEPqtC,IAEHyD,EAAK5/F,KAAKyD,IAAIm8F,EAAIt5C,IAGnBoc,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMyjC,EAAK,GAAK,MAGxCA,EAAwC,MAAlCH,EAAMH,yBAAoCG,EAAMH,yBAA2BS,EAAQ9rC,YACzF4rC,EAAyC,MAAnCJ,EAAMF,0BAAqCE,EAAMF,0BAA4BQ,EAAQ/xD,aAEvFluC,KAAKu9F,kBAERoC,EAAMJ,oBAAsB5vE,EAC5BgwE,EAAMH,yBAA2BM,EACjCH,EAAMF,0BAA4BM,GAGnCD,GAAME,EACND,GAAM,EAEF1D,IAEH0D,EAAK7/F,KAAKyD,IAAIo8F,EAAIh5F,GAClB+4F,EAAK5/F,KAAKyD,IAAIm8F,EAAIt5C,IAGH,SAAZwI,EAEHjoD,EAAIg5F,EAEgB,QAAZ/wC,IAERxI,EAAIs5C,EACJ/4F,EAAIg5F,GAGL,IAAIlxD,EAAK,EACLE,EAAK,EAELizB,GAASnY,YAAYqY,aAExBrzB,GAAM2X,EAAI,EAEFwb,GAASnY,YAAYsY,cAE7BtzB,GAAM2X,GAGPxH,GAAKnQ,EAGDozB,GAAUpY,YAAYuY,aAEzBrzB,GAAMhoC,EAAI,EAEFk7D,GAAUpY,YAAYwY,eAE9BtzB,GAAMhoC,GAKS,QAAZioD,GAAsBpO,SAASqB,OAASrB,SAAS2B,SAEpDxT,GAAM,GAGP6b,GAAK7b,EAEL,IAAIwW,EAAiB,GAAX/d,EAAE2lB,MAAc,SAAW3lB,EAAE2lB,MAAQ,IAAM,GAErD,GAAkB,GAAd3lB,EAAEiyB,UAAiBz5D,KAAKq3F,WAC5B,CACC9xC,GAAM,UAAa/d,EAAU,SAAI,IAAOgf,EAAI,EAAK,IAAOz/C,EAAI,EAAK,IACjE,IAAIizD,EAAKh6D,KAAK05F,aAAa16C,EAAIwH,EAAI,GAAKhf,EAAE2lB,OAAQvC,EAAI7jD,EAAI,GAAKygC,EAAE2lB,MAChE3lB,EAAEiyB,SAAUjyB,EAAE8xD,WAAY9xD,EAAE+xD,YAC7Bv6C,EAAIgb,EAAGhb,EAAIwH,EAAIhf,EAAE2lB,MAAQ,EACzBvC,EAAIoP,EAAGpP,EAAI7jD,EAAIygC,EAAE2lB,MAAQ,OAIzBnO,GAAKxX,EAAE2lB,MACPvC,GAAKpjB,EAAE2lB,MAGQ,GAAZsM,IAEHlU,GAAM,UAAY,EAAa,KAAQ1W,EAAM,KAAQE,EAAM,KAG5D4wD,EAAMznE,aAAa,YAAa,aAAeh4B,KAAKm8D,MAAMrd,GAAK,IAAM9+C,KAAKm8D,MAAMzR,GAAK,IAAMrF,GAC3Fk4C,EAAGvlE,aAAa,QAASh4B,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAG8iD,KAChDi3C,EAAGvlE,aAAa,SAAUh4B,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGqD,OAYnDmrF,cAAcxyF,UAAUmS,KAAO,SAASmtC,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,EAAUn7B,GAE/G,GAAIt+B,KAAK+7F,aAAsB,MAAPnzF,EACxB,CACC6wD,EAAwB,MAAZA,EAAoBA,EAAW,EAE3C,IAAIjyB,EAAIxnC,KAAK8wC,MAIb,GAHAkO,GAAKxX,EAAEqH,GACP+b,GAAKpjB,EAAEuH,GAEH/uC,KAAK28F,WAAuB,QAAVnD,EACtB,CACC,IAAI5xE,EAAQ,sBAERy0E,EAEHz0E,GAAS,8BAAgC1nB,KAAKm8D,MAAMt1D,GAAK,gBAAkB7G,KAAKm8D,MAAM7V,GAAK,MAEvE,QAAZwI,EAERpnC,GAAS,SAAW1nB,KAAKm8D,MAAM7V,EAAI,GAAK,aAAetmD,KAAKm8D,MAAMt1D,EAAI,GAAK,sBAEvD,SAAZioD,IAERpnC,GAAS,SAAW1nB,KAAKm8D,MAAM7V,EAAI,GAAK,MAEpCz/C,EAAI,IAEP6gB,GAAS,cAAgB1nB,KAAKm8D,MAAMt1D,GAAK,wBAM1C6gB,GAFG4zB,GAAQgL,EAAI,EAEN,SAAWtmD,KAAKm8D,MAAM7V,EAAI,GAAK,mCACvCqD,YAAYiiB,UAAY,IAIhB,sBAKV,IAAI6zB,EAAQ3/F,KAAKb,cAAc,KAE3BqoC,EAAEq2B,MAAQ,GAEb8hC,EAAMznE,aAAa,UAAWsP,EAAEq2B,OAGjC,IAAI4/B,EAAKz9F,KAAKb,cAAc,iBAC5Bs+F,EAAGvlE,aAAa,QAAS,qBACzBulE,EAAGvlE,aAAa,iBAAmBl4B,KAAkB,cAAIA,KAAKq9F,mBAAqB,QAEnF,IAAIz6B,EAAM5iE,KAAKo/F,UAAUx2F,EAAKo5D,EAAOC,EAAQr6C,EAAOonC,EAAWxT,GAAQgL,EAAI,EAAK,SAAW,MAG3F,GAAW,MAAPoc,EAEH,OAEe,MAAPtkC,GAERskC,EAAI1qC,aAAa,MAAOoG,GAGzBqhE,EAAMjnE,YAAY+kE,GAClBz9F,KAAKgyF,KAAKt5D,YAAYinE,GAItB,IAAIG,EAAK,EACLC,EAAK,EAGLC,EAAO,EACPE,EAAO,EAGX,IAAIt/C,SAASE,OAAmC,GAAzB7lC,SAASkmC,cAAsBP,SAASyB,OAgF/D,CAEKriD,KAAKgyF,KAAKzwD,eAAiBtmB,UAE9B2nD,EAAIh7C,MAAMygC,WAAa,SACvBptC,SAASgzB,KAAKvV,YAAYkqC,IAI1B66B,EAAG/kE,YAAYkqC,GAGhB,IAAIq9B,EAAUr9B,EAEY,MAAtBq9B,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEpDswC,EAAUA,EAAQxiE,WAEd+d,GAA8B,cAAtBonB,EAAIh7C,MAAMu4E,WAErBF,EAAQr4E,MAAMk+B,MAAQ,SAIpBn2B,EAAMswE,EAAQ9rC,YAiBlB,GAdW,GAAPxkC,GAAYizC,EAAInsC,YAAcgnE,IAEjC76B,EAAIh7C,MAAMygC,WAAa,SACvBptC,SAASgzB,KAAKvV,YAAYkqC,GAE1BjzC,EAAMswE,EAAQ9rC,aAGXn0D,KAAKu9F,kBAERoC,EAAMJ,oBAAsB5vE,IAIxB0sE,GAAQ7gD,GAAQgL,EAAI,GAAKxmD,KAAKgyF,KAAKzwD,eAAiBtmB,UAC5C,QAAZ+zC,GAAkC,SAAZA,EACvB,CACKoxC,EAAKx9B,EAAIh7C,MAAMo7C,WACnBJ,EAAIh7C,MAAMo7C,WAAa,SAEnBrzC,EAAMswE,EAAQ9rC,cAEjByO,EAAIh7C,MAAMo7C,WAAao9B,GAIzBN,EAAKnwE,EAAMqwE,EAAO,EAGdxkD,GAAoB,QAAZwT,GAAkC,SAAZA,IAE7BqtC,IAEHyD,EAAK5/F,KAAKyD,IAAIm8F,EAAIt5C,IAGnBoc,EAAIh7C,MAAMk+B,MAAQg6C,EAAK,MAGxBA,EAAKG,EAAQ9rC,YACb4rC,EAAKE,EAAQ/xD,aAETluC,KAAKu9F,kBAERoC,EAAMH,yBAA2BM,EACjCH,EAAMF,0BAA4BM,GAGnCA,GAAMG,EAEFt9B,EAAInsC,YAAcgnE,IAErBA,EAAG/kE,YAAYkqC,GACfA,EAAIh7C,MAAMygC,WAAa,QA/JzB,CAEC,IAAI7jC,EAAQvJ,SAAS9b,cAAc,OAEnCqlB,EAAMoD,MAAM+a,QAAUigC,EAAIr+B,aAAa,SACvC/f,EAAMoD,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eACxDp8B,EAAMoD,MAAM44B,SAAW,WACvBh8B,EAAMoD,MAAMygC,WAAa,SAGzB,IAAIg4C,EAAOplF,SAAS9b,cAAc,OAelC,GAdAkhG,EAAKz4E,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eACvDy/C,EAAKz4E,MAAMu4E,SAAWt2C,YAAYiiB,UAClCu0B,EAAK9iE,UAAa2oB,QAAQwJ,OAAO9mD,GAAQA,EAAImqD,UAAYnqD,EACzD4b,EAAMkU,YAAY2nE,GAElBplF,SAASgzB,KAAKvV,YAAYlU,GAGG,GAAzBvJ,SAASkmC,cAA8C,GAAzBlmC,SAASkmC,cAA0C,MAArB3Z,EAAEuxD,kBAEjEiH,GAAQ,EACRE,GAAQ,GAGL1kD,GAAQgL,EAAI,EAChB,CACC,IAAI72B,EAAM0wE,EAAKlsC,YASf,GANAmsC,MAAQ,GAMHjE,GAAQ7gD,GAAQgL,EAAI,GAAKxmD,KAAKgyF,KAAKzwD,eAAiBtmB,UAAwB,QAAZ+zC,EACrE,CACC,IAAIoxC,EAAK57E,EAAMoD,MAAMo7C,WACrBq9B,EAAKz4E,MAAMo7C,WAAa,SAEpBrzC,EAAM0wE,EAAKlsC,cAEd3vC,EAAMoD,MAAMo7C,WAAao9B,GAIvB/D,IAEH1sE,EAAMzvB,KAAKyD,IAAIgsB,EAAK62B,IAGrBhiC,EAAMoD,MAAMk+B,MAAQn2B,EAAM,KAG1BmwE,EAAKO,EAAKlsC,YAAc6rC,EAAOM,MAC/BP,EAAKM,EAAKnyD,aAAegyD,EAKzB17E,EAAMoD,MAAMikB,QAAU,eACtBrnB,EAAMoD,MAAM44B,SAAW,GACvBh8B,EAAMoD,MAAMygC,WAAa,GACzB7jC,EAAMoD,MAAMk+B,MAAQg6C,EAAK,KAEzBl9B,EAAI1qC,aAAa,QAAS1T,EAAMoD,MAAM+a,cAKtCm9D,EAAKO,EAAKlsC,YAAc6rC,EACxBD,EAAKM,EAAKnyD,aAAegyD,EAG1B17E,EAAMiS,WAAWgC,YAAYjU,GAC7Bi5E,EAAG/kE,YAAYkqC,GAuFZy5B,IAEH0D,EAAK7/F,KAAKyD,IAAIo8F,EAAIh5F,GAClB+4F,EAAK5/F,KAAKyD,IAAIm8F,EAAIt5C,IAGH,SAAZwI,EAEHjoD,EAAIg5F,EAEgB,QAAZ/wC,IAERxI,EAAIs5C,EACJ/4F,EAAIg5F,GAGDv4D,EAAEq2B,MAAQ,GAEb8hC,EAAMznE,aAAa,UAAWsP,EAAEq2B,OAGjC,IAAIhvB,EAAK,EACLE,EAAK,EAELizB,GAASnY,YAAYqY,aAExBrzB,GAAM2X,EAAI,EAEFwb,GAASnY,YAAYsY,cAE7BtzB,GAAM2X,GAGPxH,GAAKnQ,EAGDozB,GAAUpY,YAAYuY,aAEzBrzB,GAAMhoC,EAAI,EAEFk7D,GAAUpY,YAAYwY,eAE9BtzB,GAAMhoC,GAMS,QAAZioD,GAAsBpO,SAASqB,OAASrB,SAAS2B,SAEpDxT,GAAM,GAGP6b,GAAK7b,EAEL,IAAIwW,EAAiB,GAAX/d,EAAE2lB,MAAc,SAAW3lB,EAAE2lB,MAAQ,IAAM,GAErD,GAAkB,GAAd3lB,EAAEiyB,UAAiBz5D,KAAKq3F,WAC5B,CACC9xC,GAAM,UAAa/d,EAAU,SAAI,IAAOgf,EAAI,EAAK,IAAOz/C,EAAI,EAAK,IACjE,IAAIizD,EAAKh6D,KAAK05F,aAAa16C,EAAIwH,EAAI,GAAKhf,EAAE2lB,OAAQvC,EAAI7jD,EAAI,GAAKygC,EAAE2lB,MAChE3lB,EAAEiyB,SAAUjyB,EAAE8xD,WAAY9xD,EAAE+xD,YAC7Bv6C,EAAIgb,EAAGhb,EAAIwH,EAAIhf,EAAE2lB,MAAQ,EACzBvC,EAAIoP,EAAGpP,EAAI7jD,EAAIygC,EAAE2lB,MAAQ,OAIzBnO,GAAKxX,EAAE2lB,MACPvC,GAAKpjB,EAAE2lB,MAcR,GAXgB,GAAZsM,IAEHlU,GAAM,UAAY,EAAa,KAAQ1W,EAAM,KAAQE,EAAM,KAG5D4wD,EAAMznE,aAAa,YAAa,cAAgBh4B,KAAKm8D,MAAMrd,GAAKh/C,KAAK68F,UAAY,KAC/E38F,KAAKm8D,MAAMzR,GAAK5qD,KAAK68F,UAAY,IAAMt3C,GACzCk4C,EAAGvlE,aAAa,QAASh4B,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAG8iD,KAChDi3C,EAAGvlE,aAAa,SAAUh4B,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAGqD,KAG7C/G,KAAKgyF,KAAKzwD,eAAiBtmB,SAC/B,CACC,IAAIw2E,EAAMzxF,KAAKw9F,uBAAuBC,EAAIz+C,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,GAExG,GAAW,MAAPg4B,EACJ,CACCgM,EAAGvlE,aAAa,mBAAoB,oDACpC,IAAIwmE,EAAK1+F,KAAKb,cAAc,UAC5Bu/F,EAAGhmE,YAAY+kE,GACfiB,EAAGhmE,YAAY+4D,GACfkO,EAAMjnE,YAAYgmE,UAMpB1+F,KAAKugG,UAAUvhD,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMwT,EAAUqtC,EAAM5iC,EAAUn7B,KAUlF4zD,cAAcxyF,UAAU8gG,WAAa,SAASxhD,EAAG4L,EAAGpE,EAAGz/C,GAEtDi4C,EAAI9+C,KAAKm8D,MAAMrd,GACf4L,EAAI1qD,KAAKm8D,MAAMzR,GACfpE,EAAItmD,KAAKm8D,MAAM7V,GACfz/C,EAAI7G,KAAKm8D,MAAMt1D,GAEf,IAAI4J,EAAK,WAAaquC,EAAI,IAAM4L,EAAI,IAAMpE,EAAI,IAAMz/C,EAEhD+T,EAAU,EACV6U,EAAMhf,EAAK,IAAMmK,EAGrB,MAAuC,MAAhCG,SAAS6iF,eAAenuE,GAE9BA,EAAMhf,EAAK,OAASmK,EAGrBuhF,KAAOr8F,KAAKb,cAAc,YAC1Bk9F,KAAKnkE,aAAa,KAAMvI,GAExB,IAAIu7B,EAAOlrD,KAAKb,cAAc,QAQ9B,OAPA+rD,EAAKhzB,aAAa,IAAK8mB,GACvBkM,EAAKhzB,aAAa,IAAK0yB,GACvBM,EAAKhzB,aAAa,QAASsuB,GAC3B0E,EAAKhzB,aAAa,SAAUnxB,GAE5Bs1F,KAAK3jE,YAAYwyB,GAEVmxC,MASRnK,cAAcxyF,UAAU6gG,UAAY,SAASvhD,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMwT,EAAUqtC,EAAM5iC,EAAUn7B,GAE5Gm7B,EAAwB,MAAZA,EAAoBA,EAAW,EAC3C,IAAIjyB,EAAIxnC,KAAK8wC,MACT2P,EAAOjZ,EAAE+6B,SACTrvD,EAAOlT,KAAKb,cAAc,KAC1BomD,EAAK/d,EAAE4G,WAAa,GAcxB,GAbApuC,KAAKygG,WAAWvtF,GAGA,GAAZumD,IAEHlU,GAAM,UAAYkU,EAAY,IAAMz5D,KAAKw5F,OAAOx6C,EAAIxX,EAAE2lB,OAAS,IAAMntD,KAAKw5F,OAAO5uC,EAAIpjB,EAAE2lB,OAAS,KAGtF,MAAP7uB,GAEHprB,EAAKglB,aAAa,YAAaoG,GAG5B+9D,GAAQ71C,EAAI,GAAKz/C,EAAI,EACzB,CACC,IAAI2yD,EAAK1a,EACLye,EAAK7S,EAELoX,GAASnY,YAAYqY,aAExBxI,GAAMlT,EAAI,EAEFwb,GAASnY,YAAYsY,cAE7BzI,GAAMlT,GAGS,QAAZwI,IAECiT,GAAUpY,YAAYuY,aAEzB3E,GAAM12D,EAAI,EAEFk7D,GAAUpY,YAAYwY,eAE9B5E,GAAM12D,IAKR,IAAIjG,EAAId,KAAKwgG,WAAW9mC,EAAKlyB,EAAE2lB,MAAQ,EAAGsQ,EAAKj2B,EAAE2lB,MAAQ,EAAG3G,EAAIhf,EAAE2lB,MAAQ,EAAGpmD,EAAIygC,EAAE2lB,MAAQ,GAY3F,GAViB,MAAbntD,KAAKqyF,KAERryF,KAAKqyF,KAAK35D,YAAY53B,GAKtBd,KAAKgyF,KAAKt5D,YAAY53B,GAGlB8/C,SAASiB,cAAiBjB,SAASE,OAAUF,SAASI,SACzDJ,SAASK,SAAWjhD,KAAKgyF,KAAKzwD,eAAiBtmB,SAQhD/H,EAAKglB,aAAa,YAAa,QAAUp3B,EAAEyjC,aAAa,MAAQ,SAPjE,CAEC,IAAI3b,EAAO5oB,KAAK4yF,aAAa3oF,QAAQ,YAAa,QAClDiJ,EAAKglB,aAAa,YAAa,OAAStP,EAAO,IAAM9nB,EAAEyjC,aAAa,MAAQ,MAS9E,IAAIm8D,EAAU1+B,GAASnY,YAAYsY,YAAe,MAC7CH,GAASnY,YAAYqY,aAAgB,SACtC,QAGU,SAAVw+B,GAEHxtF,EAAKglB,aAAa,cAAewoE,GAG7B1gG,KAAKmyF,cAAgB1xC,GAAQoJ,YAAY6Y,kBAE7CxvD,EAAKglB,aAAa,YAAcuoB,EAAOjZ,EAAE2lB,MAAS,MAG/C5H,EAAG3kD,OAAS,GAEfsS,EAAKglB,aAAa,YAAaqtB,GAG5B/d,EAAEq2B,MAAQ,GAEb3qD,EAAKglB,aAAa,UAAWsP,EAAEq2B,OAGhC,IAAIvT,EAAQ1hD,EAAIK,MAAM,MAClBo2F,EAAKn/F,KAAKm8D,MAAM5b,EAAOoJ,YAAYiZ,aACnC69B,EAAalgD,GAAQ6J,EAAM1pD,OAAS,GAAKy+F,EAEzC5hC,EAAK7S,EAAInK,EAAO,EAEpB,GAAIwhB,GAAUpY,YAAYuY,aAEzB,GAAgB,QAAZpT,EAEHyO,GAAM12D,EAAI,MAGX,CACC,IAAIgoC,GAAO/uC,KAAK08F,oBAAsBL,GAAQt1F,EAAI,EAAK7G,KAAKyD,IAAIg9F,EAAY55F,GAAK45F,GAAc,EAC/FljC,GAAM1uB,EAAK,OAGR,GAAIkzB,GAAUpY,YAAYwY,aAE9B,GAAgB,QAAZrT,EAEHyO,GAAM12D,MAGP,CACKgoC,EAAM/uC,KAAK08F,oBAAsBL,GAAQt1F,EAAI,EAAK7G,KAAKyD,IAAIg9F,EAAY55F,GAAK45F,EAChFljC,GAAM1uB,EAAK,EAIb,IAAK,IAAI7lC,EAAI,EAAGA,EAAIohD,EAAM1pD,OAAQsI,IAClC,CAEC,GAAIohD,EAAMphD,GAAGtI,OAAS,GAAKslD,QAAQzjB,KAAK6nB,EAAMphD,IAAItI,OAAS,EAC3D,CACC,IAAIiR,EAAO7R,KAAKb,cAAc,QAE9B0S,EAAKqmB,aAAa,IAAKl4B,KAAKw5F,OAAOx6C,EAAIxX,EAAE2lB,OAASntD,KAAK88F,YACvDjrF,EAAKqmB,aAAa,IAAKl4B,KAAKw5F,OAAO/7B,EAAKj2B,EAAE2lB,OAASntD,KAAK88F,YAExD52C,QAAQ3Q,MAAM1jC,EAAMy4C,EAAMphD,IAC1BgK,EAAKwlB,YAAY7mB,GAGlB4rD,GAAM4hC,EAGPr/F,KAAKgyF,KAAKt5D,YAAYxlB,GACtBlT,KAAK4gG,kBAAkB1tF,EAAMtK,EAAKo2C,EAAG4L,EAAGpE,EAAgB,QAAZwI,EAAsBjoD,EAAI45F,EAAY3+B,EAAOC,EAAQjT,IASlGkjC,cAAcxyF,UAAU+gG,WAAa,SAASvtF,GAE7C,IAAIs0B,EAAIxnC,KAAK8wC,MAEb59B,EAAKglB,aAAa,OAAQsP,EAAEqxD,WAEvB74F,KAAKmyF,cAAgB3qD,EAAEg7B,YAAc3Y,YAAY8Y,oBAErDzvD,EAAKglB,aAAa,cAAesP,EAAEg7B,aAG/Bh7B,EAAEwxD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,WAExDxgE,EAAKglB,aAAa,cAAe,SAG7BsP,EAAEwxD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,aAE1DzgE,EAAKglB,aAAa,aAAc,WAG5BsP,EAAEwxD,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,gBAE7D1gE,EAAKglB,aAAa,kBAAmB,cASvCg6D,cAAcxyF,UAAUkhG,kBAAoB,SAAS1tF,EAAMtK,EAAKo2C,EAAG4L,EAAGpE,EAAGz/C,EAAGi7D,EAAOC,EAAQjT,GAE1F,IAAIxnB,EAAIxnC,KAAK8wC,MAEb,GAA6B,MAAzBtJ,EAAEsxD,qBAAoD,MAArBtxD,EAAEuxD,gBACvC,CACC,IAAI8H,EAAO,KAEX,GAAgB,QAAZ7xC,GAAkC,SAAZA,EAErBgT,GAASnY,YAAYqY,aAExBljB,GAAKwH,EAAI,EAEDwb,GAASnY,YAAYsY,cAE7BnjB,GAAKwH,GAGFyb,GAAUpY,YAAYuY,aAEzBxX,GAAK7jD,EAAI,EAEDk7D,GAAUpY,YAAYwY,eAE9BzX,GAAK7jD,GAGN85F,EAAO,IAAIh2C,aAAa7L,EAAI,GAAKxX,EAAE2lB,MAAOvC,EAAIpjB,EAAE2lB,OAAQ3G,EAAI,GAAKhf,EAAE2lB,OAAQpmD,EAAI,GAAKygC,EAAE2lB,YAElF,GAAoB,MAAhBj6C,EAAK4tF,SAAmB9gG,KAAKgyF,KAAKzwD,eAAiBtmB,SAG3D,IAEC4lF,EAAO3tF,EAAK4tF,UACZ,IAAIC,EAAKngD,SAASE,OAASF,SAASyB,OACpCw+C,EAAO,IAAIh2C,YAAYg2C,EAAK7hD,EAAG6hD,EAAKj2C,GAAK,EAAO,EAAI,GAAIi2C,EAAK/6C,MAAO+6C,EAAKl7C,QAAU,EAAO,EAAI,IAE/F,MAAO15C,QAMR,CAEC,IAAI22D,EAAM3nD,SAAS9b,cAAc,OAGjCyjE,EAAIh7C,MAAMi7C,WAAchZ,YAAgC,qBAAKriB,EAAE+6B,SAAW1Y,YAAYiZ,YAAe,KAAOjZ,YAAYiZ,YACxHF,EAAIh7C,MAAM26C,SAAW/6B,EAAE+6B,SAAW,KAClCK,EAAIh7C,MAAM46C,WAAah7B,EAAEg7B,WACzBI,EAAIh7C,MAAMo7C,WAAa,SACvBJ,EAAIh7C,MAAM44B,SAAW,WACrBoiB,EAAIh7C,MAAMygC,WAAa,SACvBua,EAAIh7C,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eACtDgiB,EAAIh7C,MAAMm7C,KAAO,KAEZv7B,EAAEwxD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,YAExD9Q,EAAIh7C,MAAMo5E,WAAa,SAGnBx5D,EAAEwxD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,cAE1D/Q,EAAIh7C,MAAMoxE,UAAY,UAGvBpwF,EAAMs9C,QAAQuL,aAAa7oD,GAAK,GAChCg6D,EAAIrlC,UAAY30B,EAAIqB,QAAQ,MAAO,SAEnCgR,SAASgzB,KAAKvV,YAAYkqC,GACtBpc,EAAIoc,EAAIzO,YACRptD,EAAI67D,EAAI10B,aACZ00B,EAAInsC,WAAWgC,YAAYmqC,GAEvBZ,GAASnY,YAAYqY,aAExBljB,GAAKwH,EAAI,EAEDwb,GAASnY,YAAYsY,cAE7BnjB,GAAKwH,GAGFyb,GAAUpY,YAAYuY,aAEzBxX,GAAK7jD,EAAI,EAEDk7D,GAAUpY,YAAYwY,eAE9BzX,GAAK7jD,GAGN85F,EAAO,IAAIh2C,aAAa7L,EAAI,GAAKxX,EAAE2lB,OAAQvC,EAAI,GAAKpjB,EAAE2lB,MAAO3G,EAAIhf,EAAE2lB,OAAQpmD,EAAI,GAAKygC,EAAE2lB,OAGvF,GAAY,MAAR0zC,EACJ,CACC,IAAI54F,EAAIjI,KAAKb,cAAc,QAC3B8I,EAAEiwB,aAAa,OAAQsP,EAAEsxD,qBAAuB,QAChD7wF,EAAEiwB,aAAa,SAAUsP,EAAEuxD,iBAAmB,QAC9C9wF,EAAEiwB,aAAa,IAAKh4B,KAAKC,MAAM0gG,EAAK7hD,EAAI,IACxC/2C,EAAEiwB,aAAa,IAAKh4B,KAAKC,MAAM0gG,EAAKj2C,EAAI,IACxC3iD,EAAEiwB,aAAa,QAASh4B,KAAKD,KAAK4gG,EAAK/6C,MAAQ,IAC/C79C,EAAEiwB,aAAa,SAAUh4B,KAAKD,KAAK4gG,EAAKl7C,SAExC,IAAI+4C,EAA2B,MAArBl3D,EAAEuxD,gBAA2B74F,KAAKwD,IAAI,EAAG1D,KAAKw5F,OAAOhyD,EAAE2lB,QAAU,EAC3EllD,EAAEiwB,aAAa,eAAgBwmE,GAG3B1+F,KAAKgyF,KAAKzwD,eAAiBtmB,UAAkC,GAAtBirC,QAAQgZ,IAAIw/B,EAAI,IAE1Dz2F,EAAEiwB,aAAa,YAAa,uBAG7BhlB,EAAKolB,aAAarwB,EAAGiL,EAAKuqB,eAU7By0D,cAAcxyF,UAAU48F,OAAS,WAEhCt8F,KAAKi+F,SAAQ,GAAO,IAQrB/L,cAAcxyF,UAAU68F,KAAO,WAE9Bv8F,KAAKi+F,SAAQ,GAAM,IAQpB/L,cAAcxyF,UAAU88F,cAAgB,WAEvCx8F,KAAKi+F,SAAQ,GAAM,IAGpBt9C,WAAWuxC,cAAyC,qBAAlBA,cAAgCA,mBAAgB3xF,EAqClF,IAAI0gG,cAAgB,SAASjP,GAE5BJ,mBAAmBlzF,KAAKsB,MAOxBA,KAAKgyF,KAAOA,GAkjCb,SAASlG,QAAQ1/B,EAAOgrC,GAEvBp3F,KAAKosD,MAAQA,EACbpsD,KAAKkhG,UAAU9J,GAwehB,SAASL,QAAQoK,GAEhBnhG,KAAKmhG,QAAUA,EACfnhG,KAAKohG,aAswDN,SAASC,UAAUC,GAElBthG,KAAKshG,KAAOA,EACZthG,KAAKuhG,mBACLvhG,KAAKwhG,mBApyGNt7C,QAAQ/6C,OAAO81F,cAAerP,oBAO9BqP,cAAcvhG,UAAUwT,KAAO,KAO/B+tF,cAAcvhG,UAAUq8F,aAAc,EAOtCkF,cAAcvhG,UAAU83F,OAAS,IAOjCyJ,cAAcvhG,UAAU+3F,OAAS,IAOjCwJ,cAAcvhG,UAAUi4F,QAAU,IAOlCsJ,cAAcvhG,UAAUk4F,QAAU,IAQlCqJ,cAAcvhG,UAAU+hG,sBAAwB,GAOhDR,cAAcvhG,UAAUgiG,SAAW,EAOnCT,cAAcvhG,UAAUP,cAAgB,SAASrB,GAEhD,OAAOmd,SAAS9b,cAAcrB,IAS/BmjG,cAAcvhG,UAAUiiG,iBAAmB,SAAS7jG,GAEnD,OAAOkC,KAAKb,cAAcyhD,SAASS,WAAa,IAAMvjD,IAQvDmjG,cAAcvhG,UAAUu+F,QAAU,SAASC,EAAQC,GAElD,IAAIjrF,EAAOlT,KAAKkT,KACZs0B,EAAIxnC,KAAK8wC,MAEb,GAAY,MAAR59B,EACJ,CACC,GAAqB,SAAjBA,EAAKy8C,SACT,CAEC,KAAiB,MAAb3vD,KAAKyB,MAAgBzB,KAAKyB,KAAKb,OAAS,GAS3C,OAPAsS,EAAKzR,KAAOzB,KAAKyB,KAAK89B,KAAK,KAAO,KAClCrsB,EAAK0U,MAAMk+B,MAAQ9lD,KAAKgyF,KAAKpqE,MAAMk+B,MACnC5yC,EAAK0U,MAAM+9B,OAAS3lD,KAAKgyF,KAAKpqE,MAAM+9B,OACpCzyC,EAAK0uF,UAAYvsE,SAASniB,EAAK0U,MAAMk+B,OAAS,IAAMzwB,SAASniB,EAAK0U,MAAM+9B,QAQ1EzyC,EAAK2uF,aAAe7hG,KAAKw5F,OAAOt5F,KAAKwD,IAAI,EAAG8jC,EAAE8wD,YAAc9wD,EAAE2lB,MAAQntD,KAAK0hG,WAAa,KAEpFl6D,EAAEyxD,QAELj5F,KAAKgyF,KAAKt5D,YAAY14B,KAAKs+F,aAAaprF,EACvCgrF,GAAyB,MAAf12D,EAAEwwD,UACZmG,GAA4B,MAAjB32D,EAAE6wD,cAGX8F,GAA4B,MAAjB32D,EAAE6wD,aAEhBnlF,EAAKirF,QAAU,OACfjrF,EAAK4uF,YAAct6D,EAAE6wD,aAIrBnlF,EAAKirF,QAAU,QAGhBjrF,EAAKwlB,YAAY14B,KAAK+hG,gBAElB7D,GAAyB,MAAf12D,EAAEwwD,UAEf9kF,EAAKwlB,YAAY14B,KAAKgiG,eAEdhiG,KAAKqrF,eAAmC,SAAjBn4E,EAAKy8C,UACpC3vD,KAAKyB,KAAKzB,KAAKyB,KAAKb,OAAS,IAAMZ,KAAK43F,QAMxC1kF,EAAKgrF,OAAS,QAJdhrF,EAAKwlB,YAAY14B,KAAKiiG,yBAQvBjiG,KAAKgyF,KAAKt5D,YAAYxlB,KASxB+tF,cAAcvhG,UAAUuiG,sBAAwB,WAE/C,IAAI1F,EAAOv8F,KAAK2hG,iBAAiB,QAIjC,OAHApF,EAAK3nF,IAAMgsC,SAASsD,cAAgB,mBACpCq4C,EAAK5lF,KAAO,OAEL4lF,GAQR0E,cAAcvhG,UAAUsiG,WAAa,WAEpC,IAAIx6D,EAAIxnC,KAAK8wC,MAITyrD,EAAOv8F,KAAK2hG,iBAAiB,QAGjC,GAFApF,EAAK3oC,MAAQpsB,EAAEwwD,UAEQ,MAAnBxwD,EAAE0wD,cACN,CACCqE,EAAK5lF,KAAO,WACZ4lF,EAAK5oF,OAAS,OACd4oF,EAAKpC,OAAS3yD,EAAE0wD,cAChB,IAAInhC,EAAQ,IAAMvvB,EAAEiyB,SAEhBjyB,EAAE4wD,mBAAqBvuC,YAAYwR,eAEtCtE,GAAS,IAA+B,KAAxB/2D,KAAKgyF,KAAKpqE,MAAMs6E,KAAe,IAAM,GAE7C16D,EAAE4wD,mBAAqBvuC,YAAY0R,eAE3CxE,GAAS,IAA+B,KAAxB/2D,KAAKgyF,KAAKpqE,MAAMs6E,KAAe,IAAM,GAE7C16D,EAAE4wD,mBAAqBvuC,YAAYmR,gBAE3CjE,GAAS,KAAgC,KAAxB/2D,KAAKgyF,KAAKpqE,MAAMs6E,MAAgB,IAAM,GAItDnrC,GAAmC,KAAxB/2D,KAAKgyF,KAAKpqE,MAAMs6E,MAAgB,IAAM,EAGvB,KAAxBliG,KAAKgyF,KAAKpqE,MAAMs6E,MAAuC,KAAxBliG,KAAKgyF,KAAKpqE,MAAMs6E,OAElDnrC,IAAU,GAIXwlC,EAAKxlC,MAAQ7Q,QAAQgZ,IAAInI,EAAO,KAChCwlC,EAAK7uC,QAAWlmB,EAAEq2B,MAAQr2B,EAAEywD,kBAAoB,IAAO,IACvDsE,EAAKrkE,aAAa0oB,SAASU,cAAgB,YAAc9Z,EAAEq2B,MAAQr2B,EAAE2wD,cAAgB,IAAO,UAEpF3wD,EAAEq2B,MAAQ,GAAKr2B,EAAEswD,UAAY,KAErCyE,EAAK7uC,QAAWlmB,EAAEq2B,MAAQr2B,EAAEswD,UAAY,IAAO,KAGhD,OAAOyE,GAOR0E,cAAcvhG,UAAUqiG,aAAe,WAEtC,IAAIv6D,EAAIxnC,KAAK8wC,MACTwrD,EAASt8F,KAAK2hG,iBAAiB,UAenC,OAdArF,EAAO6F,OAAS36D,EAAEkxD,SAAW,OAC7B4D,EAAO8F,UAAY56D,EAAEmxD,UAAY,QACjC2D,EAAO+F,WAAa76D,EAAEoxD,YAAc,MAEhCpxD,EAAEq2B,MAAQ,GAAKr2B,EAAEuwD,YAAc,KAElCuE,EAAO5uC,QAAWlmB,EAAEq2B,MAAQr2B,EAAEuwD,YAAc,IAAO,KAGhDvwD,EAAE+wD,SAEL+D,EAAOgG,UAAYtiG,KAAKuiG,mBAGlBjG,GASR2E,cAAcvhG,UAAU6iG,gBAAkB,WAEzC,IAAI1/F,EAAS,OAEb,GAAuC,kBAA5B7C,KAAK8wC,MAAiB,YACjC,CACC,IAAI0xD,EAAMxiG,KAAK8wC,MAAM0nD,YAAYvvF,MAAM,KAEnCu5F,EAAI5hG,OAAS,GAAe,GAAV4hG,EAAI,KAEzB3/F,EAAS,OAIX,OAAOA,GAQRo+F,cAAcvhG,UAAU4+F,aAAe,SAASprF,EAAMgrF,EAAQC,GAE7D,IAAI32D,EAAIxnC,KAAK8wC,MACT6lB,GAAOnvB,EAAEiyB,UAAYv5D,KAAKu2D,GAAK,KAC/Be,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAEf9nB,EAAKrH,EAAE4xD,SAAW5xD,EAAE2lB,MACpBpe,EAAKvH,EAAE6xD,SAAW7xD,EAAE2lB,MAEI,KAAxBntD,KAAKgyF,KAAKpqE,MAAMs6E,KAEnBrzD,IAAO,EAEyB,KAAxB7uC,KAAKgyF,KAAKpqE,MAAMs6E,OAExBnzD,IAAO,GAGR,IAAIkqD,EAAS/lF,EAAKw7B,WAAU,GAqC5B,OApCAuqD,EAAOrxE,MAAM2/D,WAAarnF,KAAKm8D,MAAMxtB,EAAK2oB,EAAMzoB,EAAK2oB,GAAO,KAC5DuhC,EAAOrxE,MAAMygE,UAAYnoF,KAAKm8D,MAAMxtB,EAAK6oB,EAAM3oB,EAAKyoB,GAAO,KAG9B,GAAzBv8C,SAASkmC,eAEZ83C,EAAO4I,aAAe3uF,EAAK2uF,aAEN,SAAjB3uF,EAAKy8C,WAERspC,EAAOx3F,KAAOzB,KAAKyB,KAAK89B,KAAK,KAAO,KACpC05D,EAAOrxE,MAAMk+B,MAAQ9lD,KAAKgyF,KAAKpqE,MAAMk+B,MACrCmzC,EAAOrxE,MAAM+9B,OAAS3lD,KAAKgyF,KAAKpqE,MAAM+9B,OACtCszC,EAAO2I,UAAYvsE,SAASniB,EAAK0U,MAAMk+B,OAAS,IAAMzwB,SAASniB,EAAK0U,MAAM+9B,UAIxEw4C,GAEHlF,EAAO6I,YAAct6D,EAAE0xD,YACvBD,EAAOvgE,YAAY14B,KAAKyiG,uBAIxBxJ,EAAOkF,QAAU,QAGdD,EAEHjF,EAAOvgE,YAAY14B,KAAK0iG,oBAIxBzJ,EAAOiF,OAAS,QAGVjF,GAQRgI,cAAcvhG,UAAUgjG,iBAAmB,WAE1C,IAAInG,EAAOv8F,KAAK2hG,iBAAiB,QAIjC,OAHApF,EAAK3oC,MAAQ5zD,KAAK8wC,MAAMooD,YACxBqD,EAAK7uC,QAAW1tD,KAAK8wC,MAAM+sB,MAAQ79D,KAAK8wC,MAAMqoD,YAAc,IAAO,IAE5DoD,GAQR0E,cAAcvhG,UAAU+iG,mBAAqB,WAE5C,IAAInG,EAASt8F,KAAK+hG,eAGlB,OAFAzF,EAAO5uC,QAAW1tD,KAAK8wC,MAAM+sB,MAAQ79D,KAAK8wC,MAAMqoD,YAAc,IAAO,IAE9DmD,GAQR2E,cAAcvhG,UAAUk6F,OAAS,SAASD,EAAO39B,EAAOC,EAAOvC,EAAI+D,GAE9DzB,GAASC,EAEZ09B,GAAS,IAED39B,EAERh8D,KAAKgyF,KAAKpqE,MAAMs6E,KAAO,IAEfjmC,IAERj8D,KAAKgyF,KAAKpqE,MAAMs6E,KAAO,MAGpBlmC,GAASC,EAAQA,KAEpB09B,IAAU,GAGX35F,KAAKgyF,KAAKpqE,MAAM6xC,SAAWkgC,EAC3B35F,KAAK8wC,MAAM2oB,SAAWz5D,KAAK8wC,MAAM2oB,SAAWkgC,EAC5C35F,KAAK8wC,MAAMwoD,WAAa5/B,EACxB15D,KAAK8wC,MAAMyoD,WAAa97B,GAQzBwjC,cAAcvhG,UAAU87F,MAAQ,WAE/B5J,mBAAmBlyF,UAAU87F,MAAMz6F,MAAMf,KAAMgB,WAC/ChB,KAAKkT,KAAOlT,KAAK2hG,iBAAiB,SAClC3hG,KAAKkT,KAAK0U,MAAM44B,SAAW,YAQ5BygD,cAAcvhG,UAAUi8F,OAAS,SAAS1hC,EAAIC,EAAId,EAAIC,GAErD,IAAI7xB,EAAIxnC,KAAK8wC,MAET6xD,GAAQ3iG,KAAKs3F,MAAQ9vD,EAAEqH,IAAMrH,EAAE2lB,MAC/By1C,GAAQ5iG,KAAKu3F,MAAQ/vD,EAAEuH,IAAMvH,EAAE2lB,MAC/B01C,GAAQ5oC,EAAKzyB,EAAEqH,IAAMrH,EAAE2lB,MACvB21C,GAAQ5oC,EAAK1yB,EAAEuH,IAAMvH,EAAE2lB,MACvB41C,GAAQ3pC,EAAK5xB,EAAEqH,IAAMrH,EAAE2lB,MACvB61C,GAAQ3pC,EAAK7xB,EAAEuH,IAAMvH,EAAE2lB,MAEvB81C,EAAON,EAAO,EAAE,GAAKE,EAAOF,GAC5BO,EAAON,EAAO,EAAE,GAAKE,EAAOF,GAE5BO,EAAOJ,EAAO,EAAE,GAAKF,EAAOE,GAC5BK,EAAOJ,EAAO,EAAE,GAAKF,EAAOE,GAEhChjG,KAAKyB,KAAKsP,KAAK,KAAO/Q,KAAKw5F,OAAOyJ,GAAQ,IAAMjjG,KAAKw5F,OAAO0J,GAC1D,IAAMljG,KAAKw5F,OAAO2J,GAAQ,IAAMnjG,KAAKw5F,OAAO4J,GAC5C,IAAMpjG,KAAKw5F,OAAOuJ,GAAQ,IAAM/iG,KAAKw5F,OAAOwJ,IAC9ChjG,KAAKs3F,MAASyL,EAAOv7D,EAAE2lB,MAAS3lB,EAAEqH,GAClC7uC,KAAKu3F,MAASyL,EAAOx7D,EAAE2lB,MAAS3lB,EAAEuH,IASnCkyD,cAAcvhG,UAAU2jG,WAAa,SAAS1zC,EAAU3Q,EAAG4L,EAAGpE,EAAGz/C,GAEhE,IAAIygC,EAAIxnC,KAAK8wC,MACT7oC,EAAIjI,KAAK2hG,iBAAiBhyC,GAO9B,OANA1nD,EAAE2f,MAAM44B,SAAW,WACnBv4C,EAAE2f,MAAMknB,KAAO9uC,KAAKw5F,QAAQx6C,EAAIxX,EAAEqH,IAAMrH,EAAE2lB,OAAS,KACnDllD,EAAE2f,MAAMonB,IAAMhvC,KAAKw5F,QAAQ5uC,EAAIpjB,EAAEuH,IAAMvH,EAAE2lB,OAAS,KAClDllD,EAAE2f,MAAMk+B,MAAQ9lD,KAAKw5F,OAAOhzC,EAAIhf,EAAE2lB,OAAS,KAC3CllD,EAAE2f,MAAM+9B,OAAS3lD,KAAKw5F,OAAOzyF,EAAIygC,EAAE2lB,OAAS,KAErCllD,GAQRg5F,cAAcvhG,UAAUwrD,KAAO,SAASlM,EAAG4L,EAAGpE,EAAGz/C,GAEhD/G,KAAKkT,KAAOlT,KAAKqjG,WAAW,OAAQrkD,EAAG4L,EAAGpE,EAAGz/C,IAQ9Ck6F,cAAcvhG,UAAUw8F,UAAY,SAASl9C,EAAG4L,EAAGpE,EAAGz/C,EAAG8nC,EAAIE,GAE5D/uC,KAAKkT,KAAOlT,KAAKqjG,WAAW,YAAarkD,EAAG4L,EAAGpE,EAAGz/C,GAElD/G,KAAKkT,KAAKglB,aAAa,UAAWh4B,KAAKwD,IAAS,IAALmrC,EAAW2X,EAAQ,IAALzX,EAAWhoC,GAAK,MAQ1Ek6F,cAAcvhG,UAAUy8F,QAAU,SAASn9C,EAAG4L,EAAGpE,EAAGz/C,GAEnD/G,KAAKkT,KAAOlT,KAAKqjG,WAAW,OAAQrkD,EAAG4L,EAAGpE,EAAGz/C,IAQ9Ck6F,cAAcvhG,UAAUyoF,MAAQ,SAASnpC,EAAG4L,EAAGpE,EAAGz/C,EAAG6N,EAAKwnF,EAAQpgC,EAAOC,GAExE,IAAI/oD,EAAO,KAEX,GAAKkpF,EAML,CAEClpF,EAAOlT,KAAKqjG,WAAW,OAAQrkD,EAAG4L,EAAGpE,EAAGz/C,GACxCmM,EAAKirF,QAAU,QAGf,IAAI5B,EAAOv8F,KAAK2hG,iBAAiB,QACjCpF,EAAKH,OAAS,EAAW,SAAW,SACpCG,EAAK3C,OAAS,OACd2C,EAAK5lF,KAAO,QACZ4lF,EAAK3nF,IAAMA,EAEX1B,EAAKwlB,YAAY6jE,QAhBjBrpF,EAAOlT,KAAKqjG,WAAW,QAASrkD,EAAG4L,EAAGpE,EAAGz/C,GACzCmM,EAAK0B,IAAMA,EAkBRonD,GAASC,EAEZ/oD,EAAK0U,MAAM6xC,SAAW,MAEduC,EAER9oD,EAAK0U,MAAMs6E,KAAO,IAEVjmC,IAER/oD,EAAK0U,MAAMs6E,KAAO,MAGfliG,KAAK8wC,MAAM+sB,MAAQ,GAAK79D,KAAK8wC,MAAMgnD,UAAY,KAIlD5kF,EAAK0U,MAAM2M,QAAU,iBAAoBv0B,KAAK8wC,MAAM+sB,MAAQ79D,KAAK8wC,MAAMgnD,UAAY,IAAO,KAG3F93F,KAAKgyF,KAAKt5D,YAAYxlB,IAQvB+tF,cAAcvhG,UAAU0/F,UAAY,SAASx2F,EAAKo5D,EAAOC,EAAQjT,GAEhE,IAAI4T,EAAM5iE,KAAKb,cAAc,OACzB2xC,EAAQ9wC,KAAK8wC,MAEbnM,EAAM,GAYV,GAViC,MAA7BmM,EAAMgoD,sBAETn0D,GAAO,oBAAsBuhB,QAAQuL,aAAa3gB,EAAMgoD,qBAAuB,KAGnD,MAAzBhoD,EAAMioD,kBAETp0D,GAAO,oBAAsBuhB,QAAQuL,aAAa3gB,EAAMioD,iBAAmB,KAGxE7yC,QAAQwJ,OAAO9mD,GAElBg6D,EAAIlqC,YAAY9vB,QAIhB,GAAgB,QAAZomD,GAAkC,SAAZA,EAC1B,CACC,IAAIqxC,EAAOrgG,KAAKb,cAAc,OAC9BkhG,EAAKz4E,MAAM+a,QAAUgC,EACrB07D,EAAKz4E,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eACvDy/C,EAAKz4E,MAAMm7C,KAAO,IAClBs9B,EAAKz4E,MAAMisC,eAAiB,UAC5BwsC,EAAK9iE,UAAY30B,EACjBg6D,EAAIlqC,YAAY2nE,QAIhBz9B,EAAIh7C,MAAM+a,QAAUgC,EACpBi+B,EAAIrlC,UAAY30B,EAIlB,IAAIgf,EAAQg7C,EAAIh7C,MAwBhB,OAtBAA,EAAM26C,SAAYzxB,EAAMyxB,SAAWviE,KAAK0hG,SAAY,KACpD95E,EAAM46C,WAAa1xB,EAAM0xB,WACzB56C,EAAMgsC,MAAQ9iB,EAAM+nD,UACpBjxE,EAAM69B,cAAgB,MACtB79B,EAAMmsE,UAAY/xB,GAAS,OAC3Bp6C,EAAMi7C,WAAchZ,YAAgC,qBAAK/Y,EAAMyxB,SAAW1Y,YAAYiZ,YAAc9iE,KAAK0hG,SAAY,KAAO73C,YAAYiZ,aAEnIhyB,EAAMkoD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,YAE5D9rD,EAAMo5E,WAAa,SAGflwD,EAAMkoD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,cAE9D/rD,EAAMoxE,UAAY,WAGdloD,EAAMkoD,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,iBAEjEhsD,EAAMisC,eAAiB,aAGjB+O,GAURq+B,cAAcvhG,UAAUmS,KAAO,SAASmtC,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,EAAUn7B,GAE/G,GAAIt+B,KAAK+7F,aAAsB,MAAPnzF,EACxB,CACC,IAAI4+B,EAAIxnC,KAAK8wC,MAEb,GAAc,QAAV0oD,EACJ,CACC,GAAkB,MAAdhyD,EAAEiyB,SACN,CACC,IAAIO,EAAKh6D,KAAK05F,YAAY16C,EAAG4L,EAAGpjB,EAAEiyB,SAAUjyB,EAAE8xD,WAAY9xD,EAAE+xD,YAE5Dv6C,EAAIgb,EAAGhb,EACP4L,EAAIoP,EAAGpP,EAGqB,GAAzB3vC,SAASkmC,cAAsBP,SAASQ,OAa3CpC,GAAKxX,EAAE2lB,MACPvC,GAAKpjB,EAAE2lB,QAZPnO,GAAKxX,EAAEqH,GACP+b,GAAKpjB,EAAEuH,GAGS,QAAZigB,GAAsBiT,GAAUpY,YAAY0rB,YAE/C3qB,GAAK,IAgBP,IAAIwM,EAAgC,GAAzBn8C,SAASkmC,cAAsBP,SAASQ,MAA0CphD,KAAKb,cAAc,OAApDa,KAAK2hG,iBAAiB,SAClFvqC,EAAIxvC,MAAM44B,SAAW,WACrB4W,EAAIxvC,MAAMikB,QAAU,SACpBurB,EAAIxvC,MAAMknB,KAAO9uC,KAAKw5F,OAAOx6C,GAAK,KAClCoY,EAAIxvC,MAAMonB,IAAMhvC,KAAKw5F,OAAO5uC,GAAK,KACjCwM,EAAIxvC,MAAMm7C,KAAOv7B,EAAE2lB,MAEnB,IAAIm2C,EAAMtjG,KAAKb,cAAc,OAC7BmkG,EAAI17E,MAAM44B,SAAW,WACrB8iD,EAAI17E,MAAMikB,QAAU,SAEpB,IAAI03D,EAASr9C,QAAQ6b,oBAAoBC,EAAOC,GAC5CpzB,EAAK00D,EAAOvkD,EACZjQ,EAAKw0D,EAAO34C,EAEZgY,EAAM5iE,KAAKo/F,UAAUx2F,EAAKo5D,EAAOC,EAAQjT,GACzCw0C,EAAQxjG,KAAKb,cAAc,OAO/B,GALW,MAAPm/B,GAEHskC,EAAI1qC,aAAa,MAAOoG,GAGrBkd,GAAQgL,EAAI,GAWf,GATK61C,IAEJz5B,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,GAAK,MAGnCoc,EAAIh7C,MAAMu4E,SAAWt2C,YAAYiiB,UACjClJ,EAAIh7C,MAAMo7C,WAAa,SAGG,cAAtBJ,EAAIh7C,MAAMu4E,SACd,CACC,IAAIxwE,EAAMizC,EAEY,MAAlBjzC,EAAI8N,YAAiD,OAA3B9N,EAAI8N,WAAWkyB,WAE5ChgC,EAAI8N,WAAW7V,MAAMk+B,MAAQ,cAM/B8c,EAAIh7C,MAAMo7C,WAAa,SAGxB,IAAIygC,EAAMj8D,EAAEiyB,UAAYA,GAAY,GA+BpC,GA7BIz5D,KAAKq3F,YAAqB,GAAPoM,GAEtBD,EAAM57E,MAAMikB,QAAU,SACtB23D,EAAM57E,MAAMm7C,KAAO,IACnBygC,EAAM9qE,YAAYkqC,GAGW,GAAzB3nD,SAASkmC,cAAsBP,SAASQ,OAA+B,OAAtBphD,KAAKgyF,KAAKriC,SAO9DyH,EAAI1+B,YAAY8qE,IALhBF,EAAI5qE,YAAY8qE,GAChBpsC,EAAI1+B,YAAY4qE,KAOgB,GAAzBroF,SAASkmC,cAAsBP,SAASQ,OAOhDwhB,EAAIh7C,MAAMikB,QAAU,SACpBurB,EAAI1+B,YAAYkqC,KANhB0gC,EAAI5qE,YAAYkqC,GAChBxL,EAAI1+B,YAAY4qE,IASS,OAAtBtjG,KAAKgyF,KAAKriC,SACd,CAEC,IAAIzE,EAAOlrD,KAAK2hG,iBAAiB,QACjCz2C,EAAKizC,QAAU,QACfjzC,EAAKgzC,OAAS,QAEdhzC,EAAKxyB,YAAY0+B,GACjBp3D,KAAKgyF,KAAKt5D,YAAYwyB,QAItBlrD,KAAKgyF,KAAKt5D,YAAY0+B,GA8BvB,GA3BIilC,GAEHz5B,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,GAAK,KAE7B5F,SAASM,YAEb0hB,EAAIh7C,MAAMg4E,UAAY1/F,KAAKm8D,MAAMt1D,GAAK,OAGnB,QAAZioD,GAIR4T,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAMk+B,MAAS5lD,KAAKwD,IAAI,EAAG8iD,GAAK,EAAK,KACzCoc,EAAIh7C,MAAM+9B,OAAUzlD,KAAKwD,IAAI,EAAGqD,GAAK,EAAK,MAEtB,SAAZioD,IAIR4T,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAMk+B,MAAS5lD,KAAKwD,IAAI,EAAG8iD,GAAK,EAAK,KACzCoc,EAAIh7C,MAAMg4E,UAAa1/F,KAAKwD,IAAI,EAAGqD,GAAK,EAAK,MAG1C/G,KAAKq3F,YAAqB,GAAPoM,EACvB,CACC,IAAI9sC,EAAM8sC,GAAOvjG,KAAKu2D,GAAK,KAGvBitC,EAAWx7F,WAAWA,WAAWhI,KAAKs3D,IAAIb,IAAMslC,QAAQ,IACxD0H,EAAWz7F,WAAWA,WAAWhI,KAAKw3D,KAAKf,IAAMslC,QAAQ,IAE7DtlC,GAAO,EAAIz2D,KAAKu2D,GACZE,EAAM,IAAGA,GAAO,EAAIz2D,KAAKu2D,IAC7BE,GAAOz2D,KAAKu2D,GACRE,EAAMz2D,KAAKu2D,GAAK,IAAGE,EAAMz2D,KAAKu2D,GAAKE,GAEvC,IAAIa,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAGU,GAAzB17C,SAASkmC,cAAsBP,SAASQ,QAE3CwhB,EAAIh7C,MAAMikB,QAAU,eACpB23D,EAAM57E,MAAMikB,QAAU,eACtBy3D,EAAI17E,MAAMikB,QAAU,gBAGrB+2B,EAAIh7C,MAAMygC,WAAa,SACvBua,EAAIh7C,MAAM44B,SAAW,WACrBvlC,SAASgzB,KAAKvV,YAAYkqC,GAE1B,IAAIq9B,EAAUr9B,EAEY,MAAtBq9B,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEpDswC,EAAUA,EAAQxiE,YAGf9N,EAAMswE,EAAQ9rC,YAAc,EAAhC,IACI4rC,EAAKE,EAAQ/xD,aAEbmuD,GAEH71C,EAAItmD,KAAKyD,IAAI6iD,EAAG72B,GAChBowE,EAAK7/F,KAAKyD,IAAIo8F,EAAIh5F,IAIlBy/C,EAAI72B,EAID6rB,IAEHonB,EAAIh7C,MAAMk+B,MAAQU,EAAI,MAInB5F,SAASM,YAAcm7C,GAAoB,SAAZrtC,IAAwB+wC,EAAKh5F,IAE/Dg5F,EAAKh5F,EAGL67D,EAAIh7C,MAAM+9B,OAASo6C,EAAK,MAGzBh5F,EAAIg5F,EAEJ,IAAI6D,GAAW78F,EAAIA,EAAIywD,EAAMhR,GAAKkR,GAAO,EAAIisC,EAAWn9C,GAAK3X,EAAK,IAAO60D,EAAW38F,GAAKgoC,EAAK,IAC1F80D,GAAYr9C,EAAIA,EAAIgR,EAAMzwD,GAAK2wD,GAAO,EAAIgsC,EAAWl9C,GAAK3X,EAAK,IAAO80D,EAAW58F,GAAKgoC,EAAK,IAE/F,GAAoB,SAAhBqoB,EAAIzH,UAA6C,OAAtB3vD,KAAKgyF,KAAKriC,SACzC,CAEC,IAAIliB,EAAMztC,KAAKb,cAAc,OAC7BsuC,EAAI7lB,MAAMikB,QAAU,eACpB4B,EAAI7lB,MAAM44B,SAAW,WACrB/S,EAAI7lB,MAAMknB,KAAO9uC,KAAKw5F,OAAOx6C,GAAK6kD,EAAWr9C,EAAI,GAAKhf,EAAE2lB,OAAS,KACjE1f,EAAI7lB,MAAMonB,IAAMhvC,KAAKw5F,OAAO5uC,GAAKg5C,EAAU78F,EAAI,GAAKygC,EAAE2lB,OAAS,KAE/DiK,EAAI3gC,WAAWiC,YAAY+U,GAC3BA,EAAI/U,YAAY0+B,OAGjB,CACC,IAAIyN,EAA+B,GAAzB5pD,SAASkmC,cAAsBP,SAASQ,MAAa5Z,EAAE2lB,MAAN,EAE3DiK,EAAIxvC,MAAMknB,KAAO9uC,KAAKw5F,OAAOx6C,GAAK6kD,EAAWr9C,EAAI,GAAKqe,GAAM,KAC5DzN,EAAIxvC,MAAMonB,IAAMhvC,KAAKw5F,OAAO5uC,GAAKg5C,EAAU78F,EAAI,GAAK89D,GAAM,KAI3D2+B,EAAM57E,MAAM2M,OAAS,gDAAgDmvE,EAAS,SAC7EC,EAAS,UAAWA,EAAU,SAASD,EAAS,gCACjDF,EAAM57E,MAAM4lE,gBAAkBxtF,KAAKyhG,sBAE/BzhG,KAAK8wC,MAAM+sB,MAAQ,IAEtB2lC,EAAM57E,MAAM2M,QAAU,iBAAuC,IAAnBv0B,KAAK8wC,MAAM+sB,MAAe,KAIrE2lC,EAAM9qE,YAAYkqC,GAClBA,EAAIh7C,MAAM44B,SAAW,GACrBoiB,EAAIh7C,MAAMygC,WAAa,QAEnB,GAA6B,GAAzBptC,SAASkmC,cAAqBP,SAASQ,MAChD,CACCwhB,EAAIh7C,MAAM69B,cAAgB,MAEtBzlD,KAAK8wC,MAAM+sB,MAAQ,IAEtBzG,EAAIxvC,MAAM2M,OAAS,iBAAuC,IAAnBv0B,KAAK8wC,MAAM+sB,MAAe,KAIlE,IAAIimC,EAAYlhC,EAAInsC,WACpBmsC,EAAIh7C,MAAMygC,WAAa,SACvBptC,SAASgzB,KAAKvV,YAAYkqC,GAE1Bpc,EAAIoc,EAAIzO,YACJ4rC,EAAKn9B,EAAI10B,aAGT0S,SAASM,WAAam7C,GAAQ0D,EAAKh5F,IAEtCg5F,EAAKh5F,EAGL67D,EAAIh7C,MAAM+9B,OAASo6C,EAAK,MAGzBh5F,EAAIg5F,EAEJn9B,EAAIh7C,MAAMygC,WAAa,GACvBy7C,EAAUprE,YAAYkqC,GAEtBxL,EAAIxvC,MAAMknB,KAAO9uC,KAAKw5F,OAAOx6C,EAAIwH,EAAI3X,EAAK7uC,KAAK8wC,MAAMqc,OAAS,KAC9DiK,EAAIxvC,MAAMonB,IAAMhvC,KAAKw5F,OAAO5uC,EAAI7jD,EAAIgoC,EAAK/uC,KAAK8wC,MAAMqc,OAAS,UAIzDntD,KAAK8wC,MAAM+sB,MAAQ,IAEtB+E,EAAIh7C,MAAM2M,OAAS,iBAAuC,IAAnBv0B,KAAK8wC,MAAM+sB,MAAe,KAIlEylC,EAAI17E,MAAMknB,KAAa,IAALD,EAAY,IAC9By0D,EAAI17E,MAAMonB,IAAY,IAALD,EAAY,SAK9B/uC,KAAKugG,UAAUvhD,EAAG4L,EAAGpE,EAAGz/C,EAAGm/C,QAAQuL,aAAa7oD,GAAK,GAAQo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,EAAUn7B,KAUvH2iE,cAAcvhG,UAAU6gG,UAAY,SAASvhD,EAAG4L,EAAGpE,EAAGz/C,EAAG6B,EAAKo5D,EAAOC,EAAQzmB,EAAMg+C,EAAQxqC,EAAUqtC,EAAM5iC,EAAUn7B,GAGpH,IAAIkJ,EAAIxnC,KAAK8wC,MACbkO,GAAKA,EAAIxX,EAAEqH,IAAMrH,EAAE2lB,MACnBvC,GAAKA,EAAIpjB,EAAEuH,IAAMvH,EAAE2lB,MAEnB,IAAIj6C,EAAOlT,KAAK2hG,iBAAiB,SACjCzuF,EAAK0U,MAAMk+B,MAAQ,MACnB5yC,EAAK0U,MAAM+9B,OAAS,MACpBzyC,EAAKirF,QAAU,QAEf,IAAI5B,EAAOv8F,KAAK2hG,iBAAiB,QACjCpF,EAAK3oC,MAAQpsB,EAAEqxD,UACf0D,EAAK7uC,QAAqB,IAAVlmB,EAAEq2B,MAAe,IACjC3qD,EAAKwlB,YAAY6jE,GAEjB,IAAI96F,EAAOzB,KAAK2hG,iBAAiB,QACjClgG,EAAKsiG,WAAa,OAClBtiG,EAAK4F,EAAI,KAAOrH,KAAKw5F,OAAO,GAAK,IAAMx5F,KAAKw5F,OAAO,GAAK,MAAQx5F,KAAKw5F,OAAO,GAAK,IAAMx5F,KAAKw5F,OAAO,GAEnGtmF,EAAKwlB,YAAYj3B,GAGjB,IAAIuiG,EAAKhkG,KAAK2hG,iBAAiB,YAC/BqC,EAAGp8E,MAAM+a,QAAU,gBAAkBq/B,EACrCgiC,EAAGp8E,MAAMo6C,MAAQA,EACjBgiC,EAAGp8E,MAAM46C,WAAah7B,EAAEg7B,WACxBwhC,EAAGhyD,OAASppC,EACZo7F,EAAG1nF,GAAK,OAGR,IAAImkC,EAAOjZ,EAAE+6B,SAAW/6B,EAAE2lB,MAAQntD,KAAK0hG,SACvCsC,EAAGp8E,MAAM26C,SAAW9hB,EAAO,MAGtBjZ,EAAEwxD,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,YAExDswB,EAAGp8E,MAAMo5E,WAAa,SAIlBx5D,EAAEwxD,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,cAE1DqwB,EAAGp8E,MAAMoxE,UAAY,WAIjBxxD,EAAEwxD,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,iBAE7DowB,EAAGp8E,MAAMisC,eAAiB,aAG3B,IAAIvJ,EAAQ1hD,EAAIK,MAAM,MAClB03F,EAAalgD,GAAQ6J,EAAM1pD,OAAS,GAAK6/C,EAAOoJ,YAAYiZ,YAC5Dj0B,EAAK,EACLE,EAAK,EAWT,GATIkzB,GAAUpY,YAAYwY,aAEzBtzB,GAAO4xD,EAAa,EAEZ1+B,GAAUpY,YAAYuY,eAE9BrzB,EAAK4xD,EAAa,GAGH,MAAZlnC,EACJ,CACCvmD,EAAK0U,MAAM6xC,SAAWA,EACtB,IAAI9C,EAAM8C,GAAYv5D,KAAKu2D,GAAK,KAChC5nB,EAAK3uC,KAAKw3D,IAAIf,GAAO5nB,EACrBA,EAAK7uC,KAAKs3D,IAAIb,GAAO5nB,EAStB77B,EAAKwlB,YAAYsrE,GACjB9wF,EAAK0U,MAAMknB,KAAO9uC,KAAKw5F,OAAOx6C,EAAInQ,GAAM,KACxC37B,EAAK0U,MAAMonB,IAAMhvC,KAAKw5F,OAAO5uC,EAAI7b,GAAM,KAEvC/uC,KAAKgyF,KAAKt5D,YAAYxlB,IAQvB+tF,cAAcvhG,UAAU48F,OAAS,WAEhCt8F,KAAKi+F,SAAQ,GAAO,IAQrBgD,cAAcvhG,UAAU68F,KAAO,WAE9Bv8F,KAAKi+F,SAAQ,GAAM,IAQpBgD,cAAcvhG,UAAU88F,cAAgB,WAEvCx8F,KAAKi+F,SAAQ,GAAM,IAGpBt9C,WAAWsgD,cAAyC,qBAAlBA,cAAgCA,mBAAgB1gG,EA0BlFurF,QAAQpsF,UAAU0sD,MAAQ,KAO1B0/B,QAAQpsF,UAAU03F,OAAS,KAO3BtL,QAAQpsF,UAAUukG,YAAa,EAO/BnY,QAAQpsF,UAAUwkG,UAAW,EAO7BpY,QAAQpsF,UAAUykG,OAAS,KAO3BrY,QAAQpsF,UAAU0kG,OAAS,KAO3BtY,QAAQpsF,UAAU2kG,SAAU,EAO5BvY,QAAQpsF,UAAUwhG,UAAY,SAAS9J,GAEtCp3F,KAAKo3F,OAASA,GASftL,QAAQpsF,UAAUitF,kBAAoB,SAAS3mC,GAE9C,OAAO,GAQR8lC,QAAQpsF,UAAU4kG,kBAAoB,WAErC,OAAOtkG,KAAKosD,MAAMygC,SAAW,GAc9Bf,QAAQpsF,UAAU6kG,iBAAmB,SAASN,GAE7C,IAAIO,EAAQ,IAAIC,WAAW,GAAI56C,YAAYmhB,YAAanhB,YAAYohB,mBAGpE,OAFAu5B,EAAME,UAAW,EAEVF,GAQR1Y,QAAQpsF,UAAUilG,eAAiB,SAAS7zD,GAE3C,OAAO,GAQRg7C,QAAQpsF,UAAUi6E,KAAO,SAAS7c,EAAQud,EAAO4P,EAAazlE,GAE7D,GAAmB,MAAfxkB,KAAKo3F,SAAmBp3F,KAAKikG,YAAcjkG,KAAKkkG,WAAuB,MAAVpnC,GAA2B,MAATud,EACnF,CACC,IAAIuqB,EAAM5kG,KAAKosD,MAAMU,UAAU+W,UAC3B1W,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7Bte,EAAKwrC,EAAMr7B,EACXjQ,EAAKsrC,EAAMzvB,EAEXi6C,GAAY,EACZC,EAAS,KACTC,EAAS,KACTC,GAAY,EACZC,EAAS,KACTC,EAAS,KAETC,EAAKnlG,KAAKskG,oBACVc,EAAMD,EACNE,EAAMF,EAENtkG,EAAIi8D,EAAOt4C,QACf3jB,EAAEm+C,GAAKq7B,EAAMr7B,EACbn+C,EAAE+pD,GAAKyvB,EAAMzvB,EAEb,IAAI9b,EAAOjuC,EAAEm+C,EACTwV,EAAQ3zD,EAAEm+C,EAAIn+C,EAAEilD,MAChB2W,EAAS57D,EAAEmqD,aACXhc,EAAMnuC,EAAE+pD,EACR8J,EAAS7zD,EAAE+pD,EAAI/pD,EAAE8kD,OACjB2/C,EAASzkG,EAAEoqD,aAGf,SAASs6C,EAAMvmD,EAAGlO,GAEjBkO,GAAKh/C,KAAKosD,MAAM8/B,MAChB,IAAIsZ,GAAW,EAEXtlG,KAAKk3D,IAAIpY,EAAIyd,GAAU2oC,GAE1Bv2D,EAAKmQ,EAAI8d,EAAO9R,aAChBo6C,EAAMllG,KAAKk3D,IAAIpY,EAAIyd,GACnB+oC,GAAW,GAEHtlG,KAAKk3D,IAAIpY,EAAIlQ,GAAQs2D,GAE7Bv2D,EAAKmQ,EAAI8d,EAAO9d,EAChBomD,EAAMllG,KAAKk3D,IAAIpY,EAAIlQ,GACnB02D,GAAW,GAEHtlG,KAAKk3D,IAAIpY,EAAIwV,GAAS4wC,IAE9Bv2D,EAAKmQ,EAAI8d,EAAO9d,EAAI8d,EAAOhX,MAC3Bs/C,EAAMllG,KAAKk3D,IAAIpY,EAAIwV,GACnBgxC,GAAW,GAGRA,IAEHV,EAASh0D,EACTi0D,EAAS7kG,KAAKm8D,MAAMrd,EAAIh/C,KAAKosD,MAAM8/B,OAEhB,MAAflsF,KAAKmkG,SAERnkG,KAAKmkG,OAASnkG,KAAKukG,kBAAiB,GAKpCvkG,KAAKmkG,OAAO1gC,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACxD7Z,YAAYoe,YAAcpe,YAAY6Z,YACvC1jE,KAAKmkG,OAAO9Y,eAAgB,EAC5BrrF,KAAKmkG,OAAOz/E,KAAK1kB,KAAKosD,MAAMU,UAAU24C,oBAIxCZ,EAAYA,GAAaW,EAI1B,SAASE,EAAM96C,EAAG9Z,GAEjB8Z,GAAK5qD,KAAKosD,MAAM+/B,MAChB,IAAIqZ,GAAW,EAEXtlG,KAAKk3D,IAAIxM,EAAI06C,GAAUD,GAE1Bt2D,EAAK6b,EAAIkS,EAAO7R,aAChBo6C,EAAMnlG,KAAKk3D,IAAIxM,EAAK06C,GACpBE,GAAW,GAEHtlG,KAAKk3D,IAAIxM,EAAI5b,GAAOq2D,GAE5Bt2D,EAAK6b,EAAIkS,EAAOlS,EAChBy6C,EAAMnlG,KAAKk3D,IAAIxM,EAAI5b,GACnBw2D,GAAW,GAEHtlG,KAAKk3D,IAAIxM,EAAI8J,GAAU2wC,IAE/Bt2D,EAAK6b,EAAIkS,EAAOlS,EAAIkS,EAAOnX,OAC3B0/C,EAAMnlG,KAAKk3D,IAAIxM,EAAI8J,GACnB8wC,GAAW,GAGRA,IAEHP,EAASn0D,EACTo0D,EAAShlG,KAAKm8D,MAAMzR,EAAI5qD,KAAKosD,MAAM+/B,OAEhB,MAAfnsF,KAAKokG,SAERpkG,KAAKokG,OAASpkG,KAAKukG,kBAAiB,GAKpCvkG,KAAKokG,OAAO3gC,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACxD7Z,YAAYoe,YAAcpe,YAAY6Z,YACvC1jE,KAAKokG,OAAO/Y,eAAgB,EAC5BrrF,KAAKokG,OAAO1/E,KAAK1kB,KAAKosD,MAAMU,UAAU24C,oBAIxCT,EAAYA,GAAaQ,EAG1B,IAAK,IAAIt8F,EAAI,EAAGA,EAAIlJ,KAAKo3F,OAAOx2F,OAAQsI,IACxC,CACC,IAAI4nC,EAAS9wC,KAAKo3F,OAAOluF,GAEZ,MAAT4nC,GAAkB9wC,KAAK2kG,eAAe7zD,KAGrC9wC,KAAKikG,aAERsB,EAAM7mG,KAAKsB,KAAM8wC,EAAMka,aAAcla,GACrCy0D,EAAM7mG,KAAKsB,KAAM8wC,EAAMkO,EAAGlO,GAC1By0D,EAAM7mG,KAAKsB,KAAM8wC,EAAMkO,EAAIlO,EAAMgV,MAAOhV,IAIrC9wC,KAAKkkG,WAERwB,EAAMhnG,KAAKsB,KAAM8wC,EAAMma,aAAcna,GACrC40D,EAAMhnG,KAAKsB,KAAM8wC,EAAM8Z,EAAG9Z,GAC1B40D,EAAMhnG,KAAKsB,KAAM8wC,EAAM8Z,EAAI9Z,EAAM6U,OAAQ7U,KAM5C,GAAIm5C,EACJ,CACC,IAAK4a,EACL,CACC,IAAIvsC,EAAKwE,EAAO9d,GAAKh/C,KAAKosD,MAAM0gC,KAAKhwB,EAAO9d,EAC3CmO,EAAQy3C,EAAI5lD,GAAK4lD,EAAI5lD,GAAKmO,EAC3Bte,EAAK7uC,KAAKosD,MAAM0gC,KAAKj+C,EAAKse,GAASA,EAAQmL,EAG5C,IAAK0sC,EACL,CACC,IAAIzsC,EAAKuE,EAAOlS,GAAK5qD,KAAKosD,MAAM0gC,KAAKhwB,EAAOlS,EAC3CuC,EAAQy3C,EAAIh6C,GAAKg6C,EAAIh6C,GAAKuC,EAC3Bpe,EAAK/uC,KAAKosD,MAAM0gC,KAAK/9C,EAAKoe,GAASA,EAAQoL,GAK7C,IAAIz3D,EAAId,KAAKosD,MAAM2R,UAEd8mC,GAA4B,MAAf7kG,KAAKmkG,OAIC,MAAfnkG,KAAKmkG,SAEC,MAAVW,GAA4B,MAAVhoC,IAErB1R,KAAOlrD,KAAKyD,IAAIm5D,EAAOlS,EAAI7b,EAAK/uC,KAAKosD,MAAM+/B,MAAO2Y,EAAOl6C,GACzDU,KAAOprD,KAAKwD,IAAIo5D,EAAOlS,EAAIkS,EAAOnX,OAAS5W,EAAK/uC,KAAKosD,MAAM+/B,MAAO2Y,EAAOl6C,EAAIk6C,EAAOn/C,SAGzE,MAARyF,MAAwB,MAARE,KAEnBtrD,KAAKmkG,OAAOwB,OAAS,CAAC,IAAIh7C,QAAQo6C,EAAQ35C,MAAO,IAAIT,QAAQo6C,EAAQz5C,OAIrEtrD,KAAKmkG,OAAOwB,OAAS,CAAC,IAAIh7C,QAAQo6C,GAAS/kG,KAAKosD,MAAM+/B,OAAQ,IAAIxhC,QAAQo6C,EAAQjkG,EAAEynD,aAAe,EAAIvoD,KAAKosD,MAAM+/B,QAGnHnsF,KAAKmkG,OAAO7H,OAASt8F,KAAK4lG,cAAcd,GAAQ,GAChD9kG,KAAKmkG,OAAOjxF,KAAK0U,MAAMygC,WAAa,UACpCroD,KAAKmkG,OAAO32C,UArBZxtD,KAAKmkG,OAAOjxF,KAAK0U,MAAMygC,WAAa,SAwBhC28C,GAA4B,MAAfhlG,KAAKokG,OAIC,MAAfpkG,KAAKokG,SAEC,MAAVa,GAA4B,MAAVnoC,IAErB3R,KAAOjrD,KAAKyD,IAAIm5D,EAAO9d,EAAInQ,EAAK7uC,KAAKosD,MAAM8/B,MAAO+Y,EAAOjmD,GACzDqM,KAAOnrD,KAAKwD,IAAIo5D,EAAO9d,EAAI8d,EAAOhX,MAAQjX,EAAK7uC,KAAKosD,MAAM8/B,MAAO+Y,EAAOjmD,EAAIimD,EAAOn/C,QAGxE,MAARqF,MAAwB,MAARE,KAEnBrrD,KAAKokG,OAAOuB,OAAS,CAAC,IAAIh7C,QAAQQ,KAAM+5C,GAAS,IAAIv6C,QAAQU,KAAM65C,IAInEllG,KAAKokG,OAAOuB,OAAS,CAAC,IAAIh7C,SAAS3qD,KAAKosD,MAAM8/B,MAAOgZ,GAAS,IAAIv6C,QAAQ7pD,EAAE+kG,YAAc,EAAI7lG,KAAKosD,MAAM8/B,MAAOgZ,IAGjHllG,KAAKokG,OAAO9H,OAASt8F,KAAK4lG,cAAcX,GAAQ,GAChDjlG,KAAKokG,OAAOlxF,KAAK0U,MAAMygC,WAAa,UACpCroD,KAAKokG,OAAO52C,UArBZxtD,KAAKokG,OAAOlxF,KAAK0U,MAAMygC,WAAa,SAwBrCgyB,EAAQr6E,KAAK01F,SAAS54B,EAAQgoC,EAAQj2D,EAAIo2D,EAAQl2D,GAGnD,OAAOsrC,GAQRyR,QAAQpsF,UAAUg2F,SAAW,SAAS54B,EAAQgoC,EAAQj2D,EAAIo2D,EAAQl2D,GAajE,OAVI/uC,KAAKqkG,SAAsB,MAAVS,GAAiC,MAAfA,EAAO93C,QAE7Cne,EAAK3uC,KAAKC,MAAM28D,EAAO9d,EAAInQ,GAAMiuB,EAAO9d,IAGrCh/C,KAAKqkG,SAAsB,MAAVY,GAAiC,MAAfA,EAAOj4C,QAE7Cje,EAAK7uC,KAAKC,MAAM28D,EAAOlS,EAAI7b,GAAM+tB,EAAOlS,GAGlC,IAAID,QAAQ9b,EAAIE,IAQxB+8C,QAAQpsF,UAAUkmG,cAAgB,SAAS90D,EAAOmzD,GAEjD,OAAOp6C,YAAYmhB,aAQpB8gB,QAAQpsF,UAAUgnF,KAAO,WAExB1mF,KAAKioD,YAAW,IAQjB6jC,QAAQpsF,UAAUuoD,WAAa,SAASC,GAEpB,MAAfloD,KAAKmkG,SAERnkG,KAAKmkG,OAAOjxF,KAAK0U,MAAMygC,WAAa,EAAY,UAAY,UAG1C,MAAfroD,KAAKokG,SAERpkG,KAAKokG,OAAOlxF,KAAK0U,MAAMygC,WAAa,EAAY,UAAY,WAS9DyjC,QAAQpsF,UAAUgmB,QAAU,WAER,MAAf1lB,KAAKmkG,SAERnkG,KAAKmkG,OAAOz+E,UACZ1lB,KAAKmkG,OAAS,MAGI,MAAfnkG,KAAKokG,SAERpkG,KAAKokG,OAAO1+E,UACZ1lB,KAAKokG,OAAS,OAIhBzjD,WAAWmrC,QAA6B,qBAAZA,QAA0BA,aAAUvrF,EA4EhEw2F,QAAQr3F,UAAU+jE,QAAU,KAO5BszB,QAAQr3F,UAAUytD,MAAQ,EAO1B4pC,QAAQr3F,UAAUomG,WAAY,EAO9B/O,QAAQr3F,UAAUqmG,kBAAoB,EAOtChP,QAAQr3F,UAAUo9D,OAAS,KAO3Bi6B,QAAQr3F,UAAUimG,OAAS,KAO3B5O,QAAQr3F,UAAUwT,KAAO,KAOzB6jF,QAAQr3F,UAAUoxC,MAAQ,KAO1BimD,QAAQr3F,UAAUkoB,MAAQ,KAQ1BmvE,QAAQr3F,UAAUsmG,YAAc,KAOhCjP,QAAQr3F,UAAUyhG,QAAU,KAQ5BpK,QAAQr3F,UAAUumG,mBAAqB,EAOvClP,QAAQr3F,UAAU2rF,eAAgB,EAOlC0L,QAAQr3F,UAAUwmG,iBAAmB,MAQrCnP,QAAQr3F,UAAUymG,oBAAqB,EAQvCpP,QAAQr3F,UAAU0mG,sBAAuB,EAOzCrP,QAAQr3F,UAAUgiG,SAAW,EAU7B3K,QAAQr3F,UAAU2mG,SAAU,EAO5BtP,QAAQr3F,UAAUwoD,SAAU,EAQ5B6uC,QAAQr3F,UAAU4mG,mBAAoB,EAYtCvP,QAAQr3F,UAAUglB,KAAO,SAASq5C,GAEhB,MAAb/9D,KAAKkT,OAERlT,KAAKkT,KAAOlT,KAAK+I,OAAOg1D,GAEP,MAAbA,GAEHA,EAAUrlC,YAAY14B,KAAKkT,QAU9B6jF,QAAQr3F,UAAU0hG,WAAa,SAASrjC,GAEvC/9D,KAAKumG,YAAc,EACnBvmG,KAAKy5D,SAAW,EAChBz5D,KAAK0tD,QAAU,IACf1tD,KAAKwmG,YAAc,IACnBxmG,KAAKymG,cAAgB,IACrBzmG,KAAKg8D,OAAQ,EACbh8D,KAAKi8D,OAAQ,GAUd86B,QAAQr3F,UAAUgnG,WAAa,WAE9B,OAAO,GASR3P,QAAQr3F,UAAUinG,cAAgB,WAEjC,OAAO,GAQR5P,QAAQr3F,UAAUknG,mBAAqB,WAEtC,IAAIlI,EAAK1+F,KAAKmhG,SAAuC,WAA5BnhG,KAAKmhG,QAAQoF,YAA2BvxE,OAAOh1B,KAAKmhG,QAAQoF,aAAevmG,KAAKumG,YAEzG,OAAoE,GAA5DrgD,QAAQgZ,IAAIh/D,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMqiC,EAAK1+F,KAAKmtD,QAAS,GAAW,GAAM,GAehF4pC,QAAQr3F,UAAUqJ,OAAS,SAASg1D,GAEnC,IAAI7qD,EAAO,KAgBX,OAZCA,EAFgB,MAAb6qD,GAAkD,MAA7BA,EAAUiI,gBAE3BhmE,KAAK6mG,UAAU9oC,GAEW,GAAzB9iD,SAASkmC,eAAsBP,SAASuB,QAC/CniD,KAAKyjE,SAAW5Z,YAAYoe,aAAejoE,KAAK2mG,gBAE1C3mG,KAAK8mG,WAAW/oC,GAIhB/9D,KAAK+mG,UAAUhpC,GAGhB7qD,GAQR6jF,QAAQr3F,UAAUmnG,UAAY,WAE7B,OAAO5rF,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,MAQrDozB,QAAQr3F,UAAUqnG,UAAY,WAE7B,IAAI7zF,EAAO+H,SAAS9b,cAAcyhD,SAASS,WAAa,UAGxD,OAFAnuC,EAAK0U,MAAM44B,SAAW,WAEfttC,GAUR6jF,QAAQr3F,UAAUonG,WAAa,WAE9B,IAAI5zF,EAAO+H,SAAS9b,cAAc,OAGlC,OAFA+T,EAAK0U,MAAM44B,SAAW,WAEfttC,GASR6jF,QAAQr3F,UAAUsnG,YAAc,WAE/BhnG,KAAKwtD,UAQNupC,QAAQr3F,UAAU8tD,OAAS,WAE1BxtD,KAAKinG,yBAEDjnG,KAAKkoD,SAAWloD,KAAKg3F,eAExBh3F,KAAKkT,KAAK0U,MAAMygC,WAAa,UAC7BroD,KAAKwQ,QAEqB,OAAtBxQ,KAAKkT,KAAKy8C,WAAsB3vD,KAAK2mG,iBAAoB/lD,SAASuB,OAMrEniD,KAAKknG,cAJLlnG,KAAKmnG,kBAONnnG,KAAKonG,sBAILpnG,KAAKkT,KAAK0U,MAAMygC,WAAa,SAC7BroD,KAAKgmG,YAAc,OASrBjP,QAAQr3F,UAAU8Q,MAAQ,WAEzB,GAAiC,MAA7BxQ,KAAKkT,KAAK8yD,gBAEb,MAA8B,MAAvBhmE,KAAKkT,KAAKm0F,UAEhBrnG,KAAKkT,KAAKulB,YAAYz4B,KAAKkT,KAAKm0F,gBAKjCrnG,KAAKkT,KAAK0U,MAAM+a,QAAU,sBAAwC,MAAf3iC,KAAKyuD,OACtD,UAAYzuD,KAAKyuD,OAAS,IAAO,IACnCzuD,KAAKkT,KAAKqqB,UAAY,IASxBw5D,QAAQr3F,UAAUunG,uBAAyB,WAE1C,IAAIzqC,EAAMx8D,KAAK2lG,OAEf,GAAW,MAAPnpC,GAAeA,EAAI57D,OAAS,GAAe,MAAV47D,EAAI,GACzC,CACCx8D,KAAK88D,OAAS,IAAIjS,YAAY71B,OAAOwnC,EAAI,GAAGxd,GAAIhqB,OAAOwnC,EAAI,GAAG5R,GAAI,EAAG,GAErE,IAAK,IAAI1hD,EAAI,EAAGA,EAAIlJ,KAAK2lG,OAAO/kG,OAAQsI,IAEzB,MAAVszD,EAAItzD,IAEPlJ,KAAK88D,OAAOt2D,IAAI,IAAIqkD,YAAY71B,OAAOwnC,EAAItzD,GAAG81C,GAAIhqB,OAAOwnC,EAAItzD,GAAG0hD,GAAI,EAAG,MAa3EmsC,QAAQr3F,UAAU4nG,eAAiB,SAASp8C,GAE3C,IAAIhnC,EAAIgiC,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqS,gBAAiBrS,YAAY0R,gBAC1EuB,EAAS5R,EAGb,GAAIhnC,GAAK2lC,YAAYyR,iBAAmBp3C,GAAK2lC,YAAYmR,iBAC1C,MAAdh7D,KAAK8wC,OAAoC,MAAnB9wC,KAAK8wC,MAAMj/B,MACjC7R,KAAK8wC,MAAMj/B,KAAK01F,wBACjB,CACCzqC,EAASA,EAAOt4C,QAChB,IAAImL,EAAMmtC,EAAOhX,MACjBgX,EAAOhX,MAAQgX,EAAOnX,OACtBmX,EAAOnX,OAASh2B,EAGjB,IAAIosC,EAAI/7D,KAAKwnG,gBAAgB1qC,GAE7B,GAAS,MAALf,EACJ,CACC,IAAIC,EAAwE,KAAhE9V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYsS,aAAa,GAC9DF,EAAwE,KAAhE/V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYuS,aAAa,GAGlE,GAAkB,MAAdp8D,KAAK8wC,OAAoC,MAAnB9wC,KAAK8wC,MAAMj/B,MACpC7R,KAAK8wC,MAAMj/B,KAAK01F,wBACjB,CACK53E,EAAMosC,EAAE/c,EACZ+c,EAAE/c,EAAI+c,EAAEpW,OACRoW,EAAEpW,OAASoW,EAAEjW,MACbiW,EAAEjW,MAAQiW,EAAEnR,EACZmR,EAAEnR,EAAIj7B,EAENA,EAAMqsC,EACNA,EAAQC,EACRA,EAAQtsC,EAGT,OAAOu2B,QAAQ4V,kBAAkB5Q,EAAM6Q,EAAG/7D,KAAK4nB,MAAOo0C,EAAOC,GAG9D,OAAO/Q,GAUR6rC,QAAQr3F,UAAU8nG,gBAAiB,SAASt8C,GAE3C,OAAO,MAQR6rC,QAAQr3F,UAAUs3F,YAAc,WAE/B,OAAS32F,MAAML,KAAKmtD,QAAUhlD,SAASnI,KAAKmtD,QAAUntD,KAAKmtD,MAAQ,GAClD,MAAfntD,KAAK88D,SAAmBz8D,MAAML,KAAK88D,OAAO9d,KAAO3+C,MAAML,KAAK88D,OAAOlS,KAClEvqD,MAAML,KAAK88D,OAAOhX,SAAWzlD,MAAML,KAAK88D,OAAOnX,SAChD3lD,KAAK88D,OAAOhX,MAAQ,GAAK9lD,KAAK88D,OAAOnX,OAAS,GAQjDoxC,QAAQr3F,UAAU+nG,eAAiB,WAElC,IAAIv0F,EAAO+H,SAAS9b,cAAcyhD,SAASS,WAAa,UAKxD,OAJAnuC,EAAK0U,MAAM44B,SAAW,WACtBttC,EAAK0U,MAAMk+B,MAAQ9lD,KAAKkT,KAAK0U,MAAMk+B,MACnC5yC,EAAK0U,MAAM+9B,OAAS3lD,KAAKkT,KAAK0U,MAAM+9B,OAE7BzyC,GAQR6jF,QAAQr3F,UAAUwnG,YAAc,WAE/B,IAAItjC,EAAS5jE,KAAK0nG,eAEJ,MAAV9jC,IAGHA,EAAOynB,cAAgBrrF,KAAKqrF,cAE5BrrF,KAAKi3F,MAAMrzB,GAEP5jE,KAAKkT,MAAQ0wD,EAAOouB,MAGvBhyF,KAAKkT,KAAKy0F,mBAAmB,YAAa/jC,EAAOouB,KAAKj/B,WAG7B,OAAtB/yD,KAAKkT,KAAKy8C,UAA8C,GAAzB10C,SAASkmC,eAK3CnhD,KAAKkT,KAAK0U,MAAM2M,OAAS,GAGzB2xB,QAAQkN,+BAA+BpzD,KAAKkT,OAG7ClT,KAAK4nG,cAAchkC,KASrBmzB,QAAQr3F,UAAUgoG,aAAe,WAEhC,IAAI9jC,EAAS,KA+Bb,OA5BiC,MAA7B5jE,KAAKkT,KAAK8yD,gBAEbpC,EAAS5jE,KAAK6nG,kBAENjnD,SAASuB,SAEjBniD,KAAK8nG,qBACLlkC,EAAS5jE,KAAK+nG,mBAGD,MAAVnkC,GAAkB5jE,KAAKqmG,UAE1BziC,EAAO42B,eAAex6F,KAAKumG,aAC3B3iC,EAAO22B,eAAev6F,KAAKs8F,QAEN,MAAjBt8F,KAAK0kG,UAER9gC,EAAO62B,UAAUz6F,KAAK0kG,UAGvB9gC,EAAO42B,eAAiB,aACxB52B,EAAO22B,eAAiB,aACxB32B,EAAOo2B,aAAe,aACtBp2B,EAAOq2B,YAAc,aACrBr2B,EAAO62B,UAAY,aACnB72B,EAAO/xD,KAAO,cAGR+xD,GAQRmzB,QAAQr3F,UAAUmoG,gBAAkB,WAEnC,IAAIjkC,EAAS,IAAIsuB,cAAclyF,KAAKkT,MAAM,GAC1C0wD,EAAOo5B,gBAAmBh9F,KAAkB,cAAIA,KAAKimG,mBAAqB,EAC1EriC,EAAOy5B,mBAAqBr9F,KAAKkmG,iBACjCtiC,EAAOu5B,wBAA0Bv8C,SAASqB,MAC1C,IAAI2qC,EAAM5sF,KAAK4mG,qBAsBf,OApBW,GAAPha,EAEH5sF,KAAKkT,KAAKglB,aAAa,YAAa,aAAe00D,EAAM,IAAMA,EAAM,KAIrE5sF,KAAKkT,KAAK6qB,gBAAgB,aAG3B6lC,EAAOq5B,eAAiBj9F,KAAK+lG,kBAExB/lG,KAAK8lG,YAGTliC,EAAO41B,OAAS,SAASl8F,GAExB,OAAO4C,KAAKm8D,MAAMn0D,WAAW5K,MAIxBsmE,GAQRmzB,QAAQr3F,UAAUqoG,gBAAkB,WAGnC,IAAI70F,EAAiC,GAAzB+H,SAASkmC,cAAqBnhD,KAAK0mG,aAAgB1mG,KAAKynG,iBAAmBznG,KAAKkT,KACxF0wD,EAAS,IAAIq9B,cAAc/tF,GAAM,GAErC,GAAmB,IAAfA,EAAK4+C,OACT,CACC,IAAItL,EAAItmD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,QACvC/+C,EAAI7G,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOnX,SAC3CzyC,EAAK0uF,UAAap7C,EAAIxmD,KAAK0hG,SAAY,IAAO36F,EAAI/G,KAAK0hG,SACvD99B,EAAOzW,MAAMntD,KAAK0hG,UAClB99B,EAAO89B,SAAW1hG,KAAK0hG,SAIxB,IAAIl6D,EAAIxnC,KAAKmtD,MAGb,OAFAyW,EAAOC,WAAW3jE,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAIxX,IAAKtnC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAIpjB,IAEtEo8B,GAQRmzB,QAAQr3F,UAAUooG,mBAAqB,WAEtC9nG,KAAKkT,KAAK0U,MAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,GAAK,KACnDh/C,KAAKkT,KAAK0U,MAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,GAAK,KAClD,IAAIpE,EAAItmD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,QACvC/+C,EAAI7G,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOnX,SAC3C3lD,KAAKkT,KAAK0U,MAAMk+B,MAAQU,EAAI,KAC5BxmD,KAAKkT,KAAK0U,MAAM+9B,OAAS5+C,EAAI,KAC7B/G,KAAKkT,KAAK0U,MAAMonC,SAAW,WAQ5B+nC,QAAQr3F,UAAUynG,gBAAkB,WAGnCnnG,KAAKgoG,iBAAiBhoG,KAAKkT,MAC3BlT,KAAKioG,kBAAkBjoG,KAAKkT,MAC5BlT,KAAKkoG,iBAAiBloG,KAAKkT,OAQ5B6jF,QAAQr3F,UAAUuoG,kBAAoB,SAAS/0F,GAE9C,IAAI3V,EAAI,GAgBR,GAdIyC,KAAK0tD,QAAU,MAElBnwD,GAAK,iBAAoByC,KAAY,QAAI,KAGtCA,KAAKmoG,WAGR5qG,GAAK,uDACQ2C,KAAKm8D,MAAMxS,YAAY4e,gBAAkBzoE,KAAKmtD,OAAS,YACvDjtD,KAAKm8D,MAAMxS,YAAY6e,gBAAkB1oE,KAAKmtD,OAAS,aACtDtD,YAAY2e,gBAAkB,MAG5B,MAAbxoE,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,MAAQ9pD,KAAK49F,UAAY59F,KAAK49F,UAAY/zC,YAAYC,KACxG,CACC,IAAI7+C,EAAQjL,KAAKu8F,KACbx/D,EAAM/8B,KAAK49F,SACXjnF,EAAO,IAEP2pD,EAAS,CAAC8nC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,GACtCjqE,EAAyB,MAAlBt+B,KAAKo6F,UAAqB95B,EAAOtgE,KAAKo6F,WAAa,EAO9D,GAL8B,MAA1Bp6F,KAAKo4F,oBAER95D,EAAM4nB,QAAQgZ,IAAI5gC,EAAMgiC,EAAOtgE,KAAKo4F,mBAAqB,EAAG,IAGlD,GAAP95D,EACJ,CACC3nB,EAAO,IACP,IAAIgZ,EAAM1kB,EACVA,EAAQ8xB,EACRA,EAAMpN,OAEF,GAAW,GAAP2O,EACT,CACK3O,EAAM1kB,EACVA,EAAQ8xB,EACRA,EAAMpN,OAES,GAAP2O,IAER3nB,EAAO,KAGRpZ,GAAK,6DACiB0N,EAAQ,mBAAuB8xB,EACpD,oBAAwBpmB,EAAO,KAGjCzD,EAAK0U,MAAM2M,OAASh3B,GAQrBw5F,QAAQr3F,UAAUwoG,iBAAmB,SAASh1F,GAE7C,IAAI0gD,EAAQ5zD,KAAKs8F,OAEJ,MAAT1oC,GAAiBA,GAAS/J,YAAYC,MAEzC52C,EAAK0U,MAAM4gF,YAAc50C,EAErB5zD,KAAK0kG,SAERxxF,EAAK0U,MAAMs4C,YAAc,SAEjBlgE,KAAKumG,YAAc,IAE3BrzF,EAAK0U,MAAMs4C,YAAc,SAG1BhtD,EAAK0U,MAAM6gF,YAAcvoG,KAAKwD,IAAI,EAAGxD,KAAKD,KAAKD,KAAKumG,YAAcvmG,KAAKmtD,QAAU,MAIjFj6C,EAAK0U,MAAM6gF,YAAc,MAG1B70C,EAAS5zD,KAAY,QAAI,KAAOA,KAAKu8F,KAExB,MAAT3oC,GAAiBA,GAAS/J,YAAYC,MAEzC52C,EAAK0U,MAAM4lE,gBAAkB55B,EAC7B1gD,EAAK0U,MAAM4sE,gBAAkB,QAErBx0F,KAAKqrF,cAEZn4E,EAAK0U,MAAM4lE,gBAAkB,cAEG,GAAzBvyE,SAASkmC,aAEjB+E,QAAQkN,+BAA+BlgD,GAIvClT,KAAK0oG,8BAA8Bx1F,IASrC6jF,QAAQr3F,UAAUsoG,iBAAmB,SAAS90F,GAE7C,IAAIwrF,EAAMzjF,SAASkmC,cAAgB,EAAK,EAAIjhD,KAAKD,KAAKD,KAAKumG,YAAcvmG,KAAKmtD,OAC9Ej6C,EAAK0U,MAAM6gF,YAAcvoG,KAAKwD,IAAI,EAAGg7F,GAAM,KAC3CxrF,EAAK0U,MAAMonC,SAAW,SAEtB97C,EAAK0U,MAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAI0/C,EAAK,GAAK,KACvDxrF,EAAK0U,MAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAI8zC,EAAK,GAAK,KAE3B,cAAvBzjF,SAAS4qC,aAEZ64C,GAAMA,GAGPxrF,EAAK0U,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAG1D,KAAK88D,OAAOhX,MAAQ44C,IAAO,KACrExrF,EAAK0U,MAAM+9B,OAASzlD,KAAKm8D,MAAMn8D,KAAKwD,IAAI,EAAG1D,KAAK88D,OAAOnX,OAAS+4C,IAAO,MASxE3H,QAAQr3F,UAAUkoG,cAAgB,SAAShkC,GAG1C,GAAIA,aAAkBsuB,cACtB,CAEC,IAAK,IAAI70F,KAAOumE,EAAOwuB,UACvB,CACC,IAAIwL,EAAWh6B,EAAOwuB,UAAU/0F,GAEhB,MAAZugG,IAEHA,EAAS+K,YAAc/K,EAAS+K,YAAc,GAAK,GAIrD3oG,KAAK4oG,oBAAoB5oG,KAAK6oG,cAC9B7oG,KAAK6oG,aAAejlC,EAAOwuB,YAS7B2E,QAAQr3F,UAAUu3F,MAAQ,SAASn2F,GAElC,IAAIgoG,GAAc,EAElB,GAAS,MAALhoG,GAAad,KAAKqmG,QACtB,CACC,IAAI/J,EAASx7F,EAAEw7F,OAEfx7F,EAAEw7F,OAAS,WAEVwM,GAAc,EACdxM,EAAOv7F,MAAMf,KAAMgB,YAGpB,IAAIw7F,EAAgB17F,EAAE07F,cAEtB17F,EAAE07F,cAAgB,WAEjBsM,GAAc,EACdtM,EAAcz7F,MAAMf,KAAMgB,YAK5B,IAAIwmC,EAAIxnC,KAAKmtD,MACTnO,EAAIh/C,KAAK88D,OAAO9d,EAAIxX,EACpBojB,EAAI5qD,KAAK88D,OAAOlS,EAAIpjB,EACpBgf,EAAIxmD,KAAK88D,OAAOhX,MAAQte,EACxBzgC,EAAI/G,KAAK88D,OAAOnX,OAASne,EAE7B,GAAIxnC,KAAKunG,wBACT,CACC,IAAIv7C,GAAKxF,EAAIz/C,GAAK,EAClBi4C,GAAKgN,EACLpB,GAAKoB,EACL,IAAIr8B,EAAM62B,EACVA,EAAIz/C,EACJA,EAAI4oB,EAGL3vB,KAAK+oG,gBAAgBjoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GACjC/G,KAAKgpG,gBAAgBloG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAGjC,IAAIkiG,EAAK,KAET,GAAqB,MAAhBjpG,KAAKmhG,SAAkC,MAAfnhG,KAAK2lG,QAAkB3lG,KAAKmmG,oBACvC,MAAhBnmG,KAAKmhG,SAAmBnhG,KAAKomG,qBAC/B,CACC,IAAI8C,EAAKlpG,KAAKmpG,oBAEd,GAAInpG,KAAKyjE,SAAW5Z,YAAY6Z,YAE/BulC,EAAKjpG,KAAKopG,8BAA8BF,EAAGlqD,EAAGkqD,EAAGt+C,EAAGs+C,EAAGpjD,MAAOojD,EAAGvjD,QACjE3lD,KAAKkT,KAAKwlB,YAAYuwE,OAGvB,CACC,IAAI/9C,EAAOpqD,EAAEuiG,WAAW,OAAQ6F,EAAGlqD,EAAIxX,EAAG0hE,EAAGt+C,EAAIpjB,EAAG0hE,EAAGpjD,MAAQte,EAAG0hE,EAAGvjD,OAASne,GAC9E0jB,EAAKxyB,YAAY53B,EAAEmhG,yBACnB/2C,EAAKizC,QAAU,QACfr9F,EAAEkxF,KAAKt5D,YAAYwyB,IAIrB,GAAoB,MAAhBlrD,KAAKmhG,QAERnhG,KAAKmhG,QAAQtK,UAAU/1F,EAAGd,KAAMg/C,EAAG4L,EAAGpE,EAAGz/C,QAOzC,GAFAjG,EAAE05F,eAAex6F,KAAKumG,aAEH,MAAfvmG,KAAK2lG,OACT,CAIC,IAFA,IAAInpC,EAAM,GAEDtzD,EAAI,EAAGA,EAAIlJ,KAAK2lG,OAAO/kG,OAAQsI,IAEjB,MAAlBlJ,KAAK2lG,OAAOz8F,IAEfszD,EAAIzrD,KAAK,IAAI45C,QAAQ3qD,KAAK2lG,OAAOz8F,GAAG81C,EAAIxX,EAAGxnC,KAAK2lG,OAAOz8F,GAAG0hD,EAAIpjB,IAIhExnC,KAAKqpG,eAAevoG,EAAG07D,QAKvBx8D,KAAKspG,iBAAiBxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAI1B,MAANkiG,GAAyB,MAAXnoG,EAAEgwC,OAAsC,MAArBhwC,EAAEgwC,MAAM1C,WAE5C66D,EAAG/wE,aAAa,YAAap3B,EAAEgwC,MAAM1C,WAI7B,MAALttC,GAAad,KAAKqmG,UAAYyC,IAEjChoG,EAAEoqD,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GAChBjG,EAAEw7F,WASJvF,QAAQr3F,UAAUspG,gBAAkB,SAASloG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAExD,IAAI6iD,EAAO,KA6BX,GA3BkB,MAAd5pD,KAAK4nB,QAERgiC,EAAO5pD,KAAK4nB,MAAM,gBAGnB9mB,EAAE+4F,SAAS75F,KAAK0tD,QAAU,KAC1B5sD,EAAEg5F,aAAa95F,KAAKwmG,YAAc,KAClC1lG,EAAEi5F,eAAe/5F,KAAKymG,cAAgB,KAGjB,MAAjBzmG,KAAKmoG,UAERrnG,EAAEs6F,UAAUp7F,KAAKmoG,UAIG,MAAjBnoG,KAAK0kG,UAER5jG,EAAE25F,UAAUz6F,KAAK0kG,SAAyB,MAAd1kG,KAAK4nB,OACmC,GAAnEs+B,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYonB,gBAAgB,IAG/C,MAARrnB,GAEH9oD,EAAE45F,eAAe9wC,GAGD,MAAb5pD,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,MAAQ9pD,KAAK49F,UAAY59F,KAAK49F,UAAY/zC,YAAYC,KACxG,CACC,IAAIjpD,EAAIb,KAAKupG,kBAAkBzoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAC3CjG,EAAEm5F,YAAYj6F,KAAKu8F,KAAMv8F,KAAK49F,SAAU/8F,EAAEm+C,EAAGn+C,EAAE+pD,EAAG/pD,EAAEilD,MAAOjlD,EAAE8kD,OAAQ3lD,KAAKo4F,wBAI1Et3F,EAAEk5F,aAAah6F,KAAKu8F,MAGrBz7F,EAAEy5F,eAAev6F,KAAKs8F,SAQvBvF,QAAQr3F,UAAU6pG,kBAAoB,SAASzoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE1D,OAAO,IAAI8jD,YAAY7L,EAAG4L,EAAGpE,EAAGz/C,IAQjCgwF,QAAQr3F,UAAUqpG,gBAAkB,SAASjoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAKxDjG,EAAEqsD,MAAMntD,KAAKmtD,OACbrsD,EAAE84F,OAAO55F,KAAKwpG,mBAAoBxpG,KAAKg8D,MAAOh8D,KAAKi8D,MAAOjd,EAAIwH,EAAI,EAAGoE,EAAI7jD,EAAI,IAQ9EgwF,QAAQr3F,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEzD/G,KAAKypG,gBAAgB3oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE5B/G,KAAKqmG,SAAyB,MAAdrmG,KAAK4nB,OAC+B,GADds+B,QAAQxb,SAClD1qC,KAAK4nB,MAAOiiC,YAAY2oB,yBAA0B,KAElD1xE,EAAEs6F,WAAU,GACZp7F,KAAK0pG,gBAAgB5oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,KASnCgwF,QAAQr3F,UAAU+pG,gBAAkB,SAAS3oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,KAOzDgwF,QAAQr3F,UAAUgqG,gBAAkB,SAAS5oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,KAOzDgwF,QAAQr3F,UAAU2pG,eAAiB,SAASvoG,EAAG07D,KAO/Cu6B,QAAQr3F,UAAUiqG,WAAa,SAASnjD,EAAGz/C,GAE1C,IAAIm3D,EAAI,EAER,GAA2E,KAAvEhY,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYwnB,uBAAwB,GAEpEnT,EAAIh+D,KAAKyD,IAAI6iD,EAAI,EAAGtmD,KAAKyD,IAAIoD,EAAI,EAAGm/C,QAAQxb,SAAS1qC,KAAK4nB,MACzDiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,QAGzD,CACC,IAAI/uE,EAAI2oD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cACR,IAAxCvnB,YAAYwiB,2BAAmC,IAChDnO,EAAIh+D,KAAKyD,IAAI6iD,EAAIjpD,EAAGwJ,EAAIxJ,GAGzB,OAAO2gE,GAQR64B,QAAQr3F,UAAUkqG,iBAAmB,SAAS9oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAG8iG,GAE5D,IAAInL,EAAKx+F,KAAKD,KAAKD,KAAKumG,YAAc,GAClC9lD,EAAO,GAEX3/C,EAAEm5F,YAAY,UAAW,UAAWj7C,EAAG4L,EAAGpE,EAAO,GAAJz/C,EAAS,QAAS,GAAK,IACpEjG,EAAE06F,QACFqO,GAAO,EAAInL,EAEP1+F,KAAK8pG,WAERhpG,EAAE26F,OAAOz8C,EAAI0/C,EAAKmL,EAAKj/C,EAAI8zC,GAC3B59F,EAAE66F,OAAO38C,EAAI0/C,EAAI9zC,EAAI8zC,EAAI1/C,EAAI0/C,EAAI9zC,EAAI8zC,EAAKmL,GAC1C/oG,EAAE46F,OAAO18C,EAAI0/C,EAAI9zC,EAAI7jD,EAAI05C,GACzB3/C,EAAE66F,OAAO38C,EAAQ,GAAJwH,EAASoE,EAAQ,GAAJ7jD,EAASi4C,EAAIwH,EAAIk4C,EAAI9zC,EAAI7jD,EAAI05C,GACvD3/C,EAAE46F,OAAO18C,EAAIwH,EAAIk4C,EAAI9zC,EAAI8zC,EAAKmL,GAC9B/oG,EAAE66F,OAAO38C,EAAIwH,EAAIk4C,EAAI9zC,EAAI8zC,EAAI1/C,EAAIwH,EAAIk4C,EAAKmL,EAAKj/C,EAAI8zC,KAInD59F,EAAE26F,OAAOz8C,EAAI0/C,EAAI9zC,EAAI8zC,GACrB59F,EAAE46F,OAAO18C,EAAI0/C,EAAI9zC,EAAI7jD,EAAI05C,GACzB3/C,EAAE66F,OAAO38C,EAAQ,GAAJwH,EAASoE,EAAQ,GAAJ7jD,EAASi4C,EAAIwH,EAAIk4C,EAAI9zC,EAAI7jD,EAAI05C,GACvD3/C,EAAE46F,OAAO18C,EAAIwH,EAAIk4C,EAAI9zC,EAAI8zC,IAG1B59F,EAAE00C,QACF10C,EAAEy7F,QAQHxF,QAAQr3F,UAAUqqG,UAAY,SAASjpG,EAAG07D,EAAK6nC,EAAS2F,EAASx0D,EAAOzgB,EAASk1E,GAEhF,GAAW,MAAPztC,GAAeA,EAAI57D,OAAS,EAChC,CACCqpG,EAA8B,MAAfA,GAAuBA,EACtC,IAAIC,EAAK1tC,EAAIA,EAAI57D,OAAS,GAG1B,GAAI40C,GAAS6uD,EACb,CACC7nC,EAAMA,EAAIlyD,QACV,IAAI6/F,EAAK3tC,EAAI,GACT4tC,EAAK,IAAIz/C,QAAQu/C,EAAGlrD,GAAKmrD,EAAGnrD,EAAIkrD,EAAGlrD,GAAK,EAAGkrD,EAAGt/C,GAAKu/C,EAAGv/C,EAAIs/C,EAAGt/C,GAAK,GACtE4R,EAAI/yD,OAAO,EAAG,EAAG2gG,GAGlB,IAAIpwC,EAAKwC,EAAI,GACTtzD,EAAI,EAGJ+gG,EAEHnpG,EAAE26F,OAAOzhC,EAAGhb,EAAGgb,EAAGpP,GAIlB9pD,EAAE46F,OAAO1hC,EAAGhb,EAAGgb,EAAGpP,GAGnB,MAAO1hD,GAAK,EAAUszD,EAAI57D,OAAS47D,EAAI57D,OAAS,GAChD,CACC,IAAI+uB,EAAM6sC,EAAItW,QAAQgZ,IAAIh2D,EAAGszD,EAAI57D,SAC7BiuC,EAAKmrB,EAAGhb,EAAIrvB,EAAIqvB,EAChBjQ,EAAKirB,EAAGpP,EAAIj7B,EAAIi7B,EAEpB,GAAIy5C,IAAkB,GAANx1D,GAAiB,GAANE,KAAwB,MAAXha,GAAmBmxB,QAAQ18C,QAAQurB,EAAS7rB,EAAI,GAAK,GAC7F,CAIC,IAAI0yD,EAAO17D,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAChCs7D,EAAMx7D,EAAK3uC,KAAKyD,IAAIqmG,EAASpuC,EAAO,GAAKA,EACzC0uC,EAAMv7D,EAAK7uC,KAAKyD,IAAIqmG,EAASpuC,EAAO,GAAKA,EAEzC3B,EAAKtqC,EAAIqvB,EAAIqrD,EACbnwC,EAAKvqC,EAAIi7B,EAAI0/C,EACjBxpG,EAAE46F,OAAOzhC,EAAIC,GAKb,IAAIp4D,EAAO06D,EAAItW,QAAQgZ,IAAIh2D,EAAI,EAAGszD,EAAI57D,SAGtC,MAAOsI,EAAIszD,EAAI57D,OAAS,GAAmC,GAA9BV,KAAKm8D,MAAMv6D,EAAKk9C,EAAIrvB,EAAIqvB,IAAyC,GAA9B9+C,KAAKm8D,MAAMv6D,EAAK8oD,EAAIj7B,EAAIi7B,GAEvF9oD,EAAO06D,EAAItW,QAAQgZ,IAAIh2D,EAAI,EAAGszD,EAAI57D,SAClCsI,IAGD2lC,EAAK/sC,EAAKk9C,EAAIrvB,EAAIqvB,EAClBjQ,EAAKjtC,EAAK8oD,EAAIj7B,EAAIi7B,EAElBgR,EAAO17D,KAAKwD,IAAI,EAAGxD,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,IAC5C,IAAIw7D,EAAM17D,EAAK3uC,KAAKyD,IAAIqmG,EAASpuC,EAAO,GAAKA,EACzC4uC,EAAMz7D,EAAK7uC,KAAKyD,IAAIqmG,EAASpuC,EAAO,GAAKA,EAEzCxC,EAAKzpC,EAAIqvB,EAAIurD,EACblxC,EAAK1pC,EAAIi7B,EAAI4/C,EAEjB1pG,EAAE66F,OAAOhsE,EAAIqvB,EAAGrvB,EAAIi7B,EAAGwO,EAAIC,GAC3B1pC,EAAM,IAAIg7B,QAAQyO,EAAIC,QAItBv4D,EAAE46F,OAAO/rE,EAAIqvB,EAAGrvB,EAAIi7B,GAGrBoP,EAAKrqC,EACLzmB,IAGGssC,EAEH10C,EAAE00C,QAIF10C,EAAE46F,OAAOwO,EAAGlrD,EAAGkrD,EAAGt/C,KAUrBmsC,QAAQr3F,UAAU+qG,YAAc,WAE/BzqG,KAAKohG,aAELphG,KAAK0qG,QAAU,SAER1qG,KAAKu8F,YACLv8F,KAAK49F,gBACL59F,KAAKo4F,yBACLp4F,KAAKs8F,cACLt8F,KAAK2qG,iBACL3qG,KAAK4qG,eACL5qG,KAAK6qG,kBACL7qG,KAAK8qG,gBACL9qG,KAAKo6F,iBACLp6F,KAAKmoG,gBACLnoG,KAAK0kG,gBACL1kG,KAAK8pG,iBACL9pG,KAAK+qG,OAsCbhU,QAAQr3F,UAAUqB,MAAQ,SAAS+vC,GAKlC,GAHA9wC,KAAK8wC,MAAQA,EACb9wC,KAAK4nB,MAAQkpB,EAAMlpB,MAED,MAAd5nB,KAAK4nB,MACT,CA0BC,GAzBA5nB,KAAKu8F,KAAOr2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqkB,gBAAiBluE,KAAKu8F,MAC3Ev8F,KAAK49F,SAAW13C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYykB,oBAAqBtuE,KAAK49F,UACnF59F,KAAKo4F,kBAAoBlyC,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY0kB,yBAA0BvuE,KAAKo4F,mBACjGp4F,KAAK0tD,QAAUxH,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYmjB,cAAehtE,KAAK0tD,SAC5E1tD,KAAKwmG,YAActgD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYojB,mBAAoBjtE,KAAKwmG,aACrFxmG,KAAKymG,cAAgBvgD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqjB,qBAAsBltE,KAAKymG,eACzFzmG,KAAKs8F,OAASp2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY2kB,kBAAmBxuE,KAAKs8F,QAC/Et8F,KAAKumG,YAAcrgD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY6kB,kBAAmB1uE,KAAKumG,aACrFvmG,KAAK0qG,QAAUxkD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4nB,cAAezxE,KAAK0qG,SAC5E1qG,KAAK2qG,UAAYzkD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY6T,gBAAiB19D,KAAK2qG,WACjF3qG,KAAK4qG,QAAU1kD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY8mB,cAAe3wE,KAAK4qG,SAC7E5qG,KAAK6qG,WAAa3kD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY6mB,iBAAkB1wE,KAAK6qG,YAClF7qG,KAAK8qG,SAAW5kD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4mB,eAAgBzwE,KAAK8qG,UAC9E9qG,KAAKy5D,SAAWvT,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYiR,eAAgB96D,KAAKy5D,UAC9Ez5D,KAAKo6F,UAAYl0C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqS,gBAAiBl8D,KAAKo6F,WAChFp6F,KAAKg8D,MAAoE,GAA5D9V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYsS,YAAa,GACnEn8D,KAAKi8D,MAAoE,GAA5D/V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYuS,YAAa,GAG/C,MAAhBp8D,KAAKmhG,UAERnhG,KAAKg8D,MAA2D,GAAnD9V,QAAQxb,SAAS1qC,KAAK4nB,MAAO,eAAgB,IAAW5nB,KAAKg8D,MAC1Eh8D,KAAKi8D,MAA2D,GAAnD/V,QAAQxb,SAAS1qC,KAAK4nB,MAAO,eAAgB,IAAW5nB,KAAKi8D,OAGvEj8D,KAAKo6F,WAAavwC,YAAYmR,iBAAmBh7D,KAAKo6F,WAAavwC,YAAYyR,gBACnF,CACC,IAAI3rC,EAAM3vB,KAAKg8D,MACfh8D,KAAKg8D,MAAQh8D,KAAKi8D,MAClBj8D,KAAKi8D,MAAQtsC,EAGd3vB,KAAKmoG,SAAoF,GAAzEjiD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY0mB,aAAcvwE,KAAKmoG,UAC5EnoG,KAAK0kG,SAAoF,GAAzEx+C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYknB,aAAc/wE,KAAK0kG,UAC5E1kG,KAAK8pG,UAAuF,GAA3E5jD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqnB,cAAelxE,KAAK8pG,WAC9E9pG,KAAK+qG,MAA6E,GAArE7kD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYslB,YAAanvE,KAAK+qG,OAEpE/qG,KAAKu8F,MAAQ1yC,YAAYC,OAE5B9pD,KAAKu8F,KAAO,MAGTv8F,KAAK49F,UAAY/zC,YAAYC,OAEhC9pD,KAAK49F,SAAW,MAGb59F,KAAKs8F,QAAUzyC,YAAYC,OAE9B9pD,KAAKs8F,OAAS,QAcjBvF,QAAQr3F,UAAUsrG,UAAY,SAASv8C,GAExB,MAAVA,IAEHA,EAAS,IAGVzuD,KAAKyuD,OAASA,EAEG,MAAbzuD,KAAKkT,OAERlT,KAAKkT,KAAK0U,MAAM6mC,OAASA,IAS3BsoC,QAAQr3F,UAAUurG,UAAY,WAE7B,OAAOjrG,KAAKyuD,QAQbsoC,QAAQr3F,UAAUwrG,YAAc,WAE/B,OAAO,GASRnU,QAAQr3F,UAAU0nG,kBAAoB,WAIrC,GAAIpnG,KAAKsmG,mBAAkC,MAAbtmG,KAAKkT,MAA6C,MAA7BlT,KAAKkT,KAAK8yD,gBAE5D,IAEC,IAAInlE,EAAIb,KAAKkT,KAAK4tF,UAElB,GAAIjgG,EAAEilD,MAAQ,GAAKjlD,EAAE8kD,OAAS,EAO7B,OALA3lD,KAAKgmG,YAAc,IAAIn7C,YAAYhqD,EAAEm+C,EAAGn+C,EAAE+pD,EAAG/pD,EAAEilD,MAAOjlD,EAAE8kD,aAGxD3lD,KAAKgmG,YAAYp6C,KAAK5rD,KAAKumG,YAAcvmG,KAAKmtD,MAAQ,GAKxD,MAAMlhD,IAMP,GAAmB,MAAfjM,KAAK88D,OACT,CACC,IAAI+jC,EAAO7gG,KAAKmpG,oBAEhB,GAAY,MAARtI,EACJ,CACC7gG,KAAKmrG,mBAAmBtK,GACxB,IAAI4C,EAAMzjG,KAAKwpG,mBAEJ,GAAP/F,IAEH5C,EAAO36C,QAAQsT,eAAeqnC,EAAM4C,IAItCzjG,KAAKgmG,YAAcnF,IAUrB9J,QAAQr3F,UAAUypG,kBAAoB,WAErC,IAAID,EAAKlpG,KAAK88D,OAAOt4C,QAQrB,OANqB,MAAhBxkB,KAAKmhG,UAAoBnhG,KAAKo6F,WAAavwC,YAAYmR,iBAC3Dh7D,KAAKo6F,WAAavwC,YAAYyR,kBAAqBt7D,KAAKunG,0BAExD2B,EAAGn9C,WAGGm9C,GAQRnS,QAAQr3F,UAAUyrG,mBAAqB,SAAStK,GAE3C7gG,KAAKmoG,WAERtH,EAAK/6C,OAAS5lD,KAAKD,KAAK4pD,YAAY4e,gBAAkBzoE,KAAKmtD,OAC3D0zC,EAAKl7C,QAAUzlD,KAAKD,KAAK4pD,YAAY6e,gBAAkB1oE,KAAKmtD,QAI7D0zC,EAAKj1C,KAAK5rD,KAAKumG,YAAcvmG,KAAKmtD,MAAQ,IAQ3C4pC,QAAQr3F,UAAU6nG,sBAAwB,WAGzC,OAAuB,MAAhBvnG,KAAKmhG,UAAoBnhG,KAAKo6F,WAAavwC,YAAYmR,iBAC5Dh7D,KAAKo6F,WAAavwC,YAAYyR,kBAQjCy7B,QAAQr3F,UAAU0rG,YAAc,WAE/B,OAAyB,MAAjBprG,KAAKy5D,SAAoBz5D,KAAKy5D,SAAW,GAQlDs9B,QAAQr3F,UAAU2rG,gBAAkB,WAEnC,IAAI5H,EAAMzjG,KAAKorG,cAOf,OALqE,GAAjEllD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+T,iBAAkB,KAE9D6lC,GAAO6H,OAAO5rG,UAAU6rG,sBAGlB9H,GAQR1M,QAAQr3F,UAAU8pG,iBAAmB,WAEpC,IAAI/F,EAAMzjG,KAAKorG,cAkBf,OAhBsB,MAAlBprG,KAAKo6F,YAEJp6F,KAAKo6F,WAAavwC,YAAYmR,gBAEjCyoC,GAAO,IAECzjG,KAAKo6F,WAAavwC,YAAYwR,eAEtCooC,GAAO,IAECzjG,KAAKo6F,WAAavwC,YAAYyR,kBAEtCmoC,GAAO,KAIFA,GAQR1M,QAAQr3F,UAAU0pG,8BAAgC,SAASpqD,EAAG4L,EAAGpE,EAAGz/C,GAEnE,IAAImkD,EAAOjwC,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,QASxD,OARAzY,EAAKhzB,aAAa,IAAK8mB,GACvBkM,EAAKhzB,aAAa,IAAK0yB,GACvBM,EAAKhzB,aAAa,QAASsuB,GAC3B0E,EAAKhzB,aAAa,SAAUnxB,GAC5BmkD,EAAKhzB,aAAa,OAAQ,QAC1BgzB,EAAKhzB,aAAa,SAAU,QAC5BgzB,EAAKhzB,aAAa,iBAAkB,OAE7BgzB,GAUR6rC,QAAQr3F,UAAUgpG,8BAAgC,SAASx1F,GAE1DA,EAAK0U,MAAM4sE,gBAAkB,QAAW5zC,SAASsD,cAAgB,sBAQlE6yC,QAAQr3F,UAAUkpG,oBAAsB,SAAS4C,GAEhD,GAAa,MAATA,EAEH,IAAK,IAAInuG,KAAOmuG,EAChB,CACC,IAAI5N,EAAW4N,EAAMnuG,GAEL,MAAZugG,IAEHA,EAAS+K,YAAc/K,EAAS+K,YAAc,GAAK,EAExB,GAAvB/K,EAAS+K,YAA0C,MAAvB/K,EAASnnE,YAExCmnE,EAASnnE,WAAWgC,YAAYmlE,MAarC7G,QAAQr3F,UAAUgmB,QAAU,WAEV,MAAb1lB,KAAKkT,OAERs0C,QAAQ0yB,QAAQl6E,KAAKkT,MAEO,MAAxBlT,KAAKkT,KAAKujB,YAEbz2B,KAAKkT,KAAKujB,WAAWgC,YAAYz4B,KAAKkT,MAGvClT,KAAKkT,KAAO,MAIblT,KAAK4oG,oBAAoB5oG,KAAK6oG,cAC9B7oG,KAAK6oG,aAAe,MAGrBloD,WAAWo2C,QAA6B,qBAAZA,QAA0BA,aAAUx2F,EAuNhE2lD,QAAQ/6C,OAAOk2F,UAAWtK,SAQ1BsK,UAAUoK,kBAAmB,EAS7BpK,UAAUqK,WAAY,EAOtBrK,UAAU3hG,UAAU4hG,KAAO,KAO3BD,UAAU3hG,UAAUisG,YAAc,KAOlCtK,UAAU3hG,UAAU08F,OAAS,KAO7BiF,UAAU3hG,UAAUksG,GAAK,KAOzBvK,UAAU3hG,UAAUmsG,GAAK,KAOzBxK,UAAU3hG,UAAUosG,OAAS,KAO7BzK,UAAU3hG,UAAUqsG,OAAS,KAO7B1K,UAAU3hG,UAAU6mG,YAAc,KAOlClF,UAAU3hG,UAAU6hG,iBAAmB,WAGtCvhG,KAAK+rG,OAAS/rG,KAAKshG,KAAKh+C,qBAAqB,cAAc,GAC3DtjD,KAAK8rG,OAAS9rG,KAAKshG,KAAKh+C,qBAAqB,cAAc,GAC3DtjD,KAAK4rG,GAAK52E,OAAOh1B,KAAKshG,KAAK/8D,aAAa,MAAQ,KAChDvkC,KAAK6rG,GAAK72E,OAAOh1B,KAAKshG,KAAK/8D,aAAa,MAAQ,KAKhD,IAAI63D,EAASp8F,KAAKshG,KAAK/8D,aAAa,UACpCvkC,KAAKo8F,OAAoB,MAAVA,EAAkBA,EAAS,WAM1C,IAAIsC,EAAK1+F,KAAKshG,KAAK/8D,aAAa,eAChCvkC,KAAKumG,YAAqB,MAAN7H,EAAcA,EAAK,KASxC2C,UAAU3hG,UAAU8hG,iBAAmB,WAEtC,IAAIwK,EAAQhsG,KAAKshG,KAAKh+C,qBAAqB,eAAe,GAE1D,GAAa,MAAT0oD,EACJ,CACC,IAAIr8E,EAAMu2B,QAAQ6J,cAAci8C,GAEhC,GAAW,MAAPr8E,GAAeA,EAAI/uB,OAAS,EAChC,CACCZ,KAAK2rG,YAAc,GAEnB,IAAK,IAAIziG,EAAI,EAAGA,EAAIymB,EAAI/uB,OAAQsI,IAE/BlJ,KAAK2rG,YAAY56F,KAAK/Q,KAAKisG,gBAAgBt8E,EAAIzmB,QAWnDm4F,UAAU3hG,UAAUusG,gBAAkB,SAAS/4F,GAE9C,IAAI8rC,EAAIhqB,OAAO9hB,EAAKqxB,aAAa,MAC7BqmB,EAAI51B,OAAO9hB,EAAKqxB,aAAa,MAC7B2nE,EAA8C,KAAlCh5F,EAAKqxB,aAAa,aAC9BzmC,EAAOoV,EAAKqxB,aAAa,QAE7B,OAAO,IAAI4nE,uBAAuB,IAAIxhD,QAAQ3L,EAAG4L,GAAIshD,EAAWpuG,IAUjEujG,UAAU3hG,UAAU0sG,sBAAwB,SAASl5F,EAAMm5F,EAAWn/C,GAErE,IAAIrqD,EAAS7C,KAAKssG,kBAAkBp5F,EAAMm5F,EAAWn/C,GACjDq/C,EAAMr5F,EAAKqxB,aAAa,aAO5B,OALK88D,UAAUoK,kBAA2B,MAAPc,GAAuB,KAAPA,KAElD1pG,EAAS4gD,YAAYpkD,IAAIwD,IAGnBA,GAWRw+F,UAAU3hG,UAAU4sG,kBAAoB,SAASp5F,EAAMm5F,EAAWn/C,GAEjE,IAAIrqD,EAASqQ,EAAKqxB,aAAa8nE,GAE/B,GAAc,MAAVxpG,EACJ,CACC,IAAIgP,EAAOq0C,QAAQsL,eAAet+C,GAElC,GAAY,MAARrB,GAAgBwvF,UAAUqK,UAC9B,CACC,IAAI5jD,EAAQ5B,QAAQgJ,KAAKr9C,GAEJ,mBAAX,IAEThP,EAASilD,EAAMoF,KAKlB,OAAOrqD,GAQRw+F,UAAU3hG,UAAUm3F,UAAY,SAASjzB,EAAQ1W,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,GAQhE,IAAIqzF,EAAYl0C,QAAQxb,SAASwiB,EAAMtlC,MAAOiiC,YAAYqS,gBAAiB,MACvEkgC,EAASp8F,KAAKwsG,cAAct/C,EAAMtlC,MAAOo3B,EAAG4L,EAAGpE,EAAGz/C,EAAGqzF,GACrDqS,EAAWvsG,KAAKyD,IAAIy4F,EAAOt2C,MAAOs2C,EAAOz2C,QACzC+4C,EAA0B,WAApB1+F,KAAKumG,YACbvxE,OAAOkxB,QAAQ4P,UAAU5I,EAAMtlC,MAAOiiC,YAAY6kB,kBAAmB,IACrE15C,OAAOh1B,KAAKumG,aAAekG,EAC7B7oC,EAAO42B,eAAekE,GAGH,MAAfxxC,EAAMtlC,OAAyF,KAAxEs+B,QAAQxb,SAASwiB,EAAMtlC,MAAOiiC,YAAYskB,qBAAsB,OAE1FvK,EAAO22B,eAAe1wC,YAAYC,MAClC8Z,EAAO1Y,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GACrB68D,EAAO04B,SACP14B,EAAO22B,eAAertC,EAAMovC,SAG7Bt8F,KAAK0sG,aAAa9oC,EAAQ1W,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,EAAG/G,KAAK8rG,OAAQ1P,GAAQ,GAAO,GACzEp8F,KAAK0sG,aAAa9oC,EAAQ1W,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,EAAG/G,KAAK+rG,OAAQ3P,GAAQ,GAChElvC,EAAMm5C,SAA0B,MAAfn5C,EAAMtlC,OACiC,GADhBs+B,QAAQxb,SACjDwiB,EAAMtlC,MAAOiiC,YAAY2oB,yBAA0B,KAQrD6uB,UAAU3hG,UAAUgtG,aAAe,SAAS9oC,EAAQ1W,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,EAAGmM,EAAMkpF,EAAQuQ,EAAe1V,GAEnG,GAAY,MAAR/jF,GAAgBszC,EAAI,GAAKz/C,EAAI,EACjC,CACC,IAAI4oB,EAAMzc,EAAKuqB,WAEf,MAAc,MAAP9N,EAEFA,EAAIkO,UAAYgsB,YAAY0F,kBAE/BvvD,KAAK4sG,SAAShpC,EAAQ1W,EAAOv9B,EAAKysE,EAAQuQ,EAAe1V,GAG1DtnE,EAAMA,EAAIgJ,cAkBb0oE,UAAU3hG,UAAU8sG,cAAgB,SAASt/C,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,EAAGqzF,GAE/D,IAAIvjC,EAAK7X,EACL8X,EAAKlM,EACLyC,EAAK7G,EAAIxmD,KAAK4rG,GACdt+C,EAAKvmD,EAAI/G,KAAK6rG,GAEdgB,EAAWzS,GAAavwC,YAAYmR,iBAAmBo/B,GAAavwC,YAAYyR,gBAEpF,GAAIuxC,EACJ,CACCv/C,EAAK9G,EAAIxmD,KAAK6rG,GACdx+C,EAAKtmD,EAAI/G,KAAK4rG,GAEd,IAAIvxB,GAAS7zB,EAAIz/C,GAAK,EAEtB8vD,GAAMwjB,EACNvjB,GAAMujB,EAqBP,MAlBmB,SAAfr6E,KAAKo8F,SAER9uC,EAAKptD,KAAKyD,IAAI0pD,EAAIC,GAClBD,EAAKC,EAGDu/C,GAEHh2C,IAAO9vD,EAAI/G,KAAK4rG,GAAKv+C,GAAM,EAC3ByJ,IAAOtQ,EAAIxmD,KAAK6rG,GAAKv+C,GAAM,IAI3BuJ,IAAOrQ,EAAIxmD,KAAK4rG,GAAKv+C,GAAM,EAC3ByJ,IAAO/vD,EAAI/G,KAAK6rG,GAAKv+C,GAAM,IAItB,IAAIzC,YAAYgM,EAAIC,EAAIzJ,EAAIC,IAQpC+zC,UAAU3hG,UAAUktG,SAAW,SAAShpC,EAAQ1W,EAAOh6C,EAAMkpF,EAAQuQ,EAAe1V,GAEnF,IAAIn5F,EAAOoV,EAAKy8C,SACZkH,EAAKulC,EAAOp9C,EACZ8X,EAAKslC,EAAOxxC,EACZyC,EAAK+uC,EAAOt2C,MACZwH,EAAK8uC,EAAOz2C,OACZ8mD,EAAWvsG,KAAKyD,IAAI0pD,EAAIC,GAE5B,GAAY,QAARxvD,EAEH8lE,EAAOsxB,YAEH,GAAY,WAARp3F,EAER8lE,EAAOszB,eAEH,GAAID,EACT,CACC,GAAY,QAARn5F,EACJ,CACC8lE,EAAO43B,QAEP,IAAIsR,GAAiB,EAErB,GAAoC,KAAhC55F,EAAKqxB,aAAa,WACtB,CACCuoE,GAAiB,EAEjB,IAAI9C,EAAUh1E,OAAO9hB,EAAKqxB,aAAa,YACnCwoE,EAAa,EACbC,EAAO,GAGPt2E,EAAYxjB,EAAKuqB,WAErB,MAAoB,MAAb/G,EACP,CACC,GAAIA,EAAUmH,UAAYgsB,YAAY0F,iBACtC,CACC,IAAI09C,EAAYv2E,EAAUi5B,SAE1B,GAAiB,QAAbs9C,GAAoC,QAAbA,EAY3B,CAECH,GAAiB,EACjB,MAbiB,QAAbG,GAAsC,GAAfD,EAAKpsG,QAE/BosG,EAAKj8F,KAAK,IAGXi8F,EAAKA,EAAKpsG,OAAS,GAAGmQ,KAAK,IAAI45C,QAAQkM,EAAK7hC,OAAO0B,EAAU6N,aAAa,MAAQ8oB,EACjFyJ,EAAK9hC,OAAO0B,EAAU6N,aAAa,MAAQ+oB,IAC5Cy/C,IAUFr2E,EAAYA,EAAUiC,YAGvB,IAAKm0E,GAAkBC,EAAa,EAEnC,IAAK,IAAI7jG,EAAI,EAAGA,EAAI8jG,EAAKpsG,OAAQsI,IACjC,CACC,IAAIssC,GAAQ,EAAO03D,EAAKF,EAAK9jG,GAAG,GAAIghG,EAAK8C,EAAK9jG,GAAG8jG,EAAK9jG,GAAGtI,OAAS,GAE9DssG,EAAGluD,GAAKkrD,EAAGlrD,GAAKkuD,EAAGtiD,GAAKs/C,EAAGt/C,IAE9BoiD,EAAK9jG,GAAGsI,MACRgkC,GAAQ,GAGTx1C,KAAK+pG,UAAUnmC,EAAQopC,EAAK9jG,IAAI,EAAM8gG,EAASx0D,QAKhDs3D,GAAiB,EAInB,GAAIA,EACJ,CAEKp2E,EAAYxjB,EAAKuqB,WAErB,MAAoB,MAAb/G,EAEFA,EAAUmH,UAAYgsB,YAAY0F,kBAErCvvD,KAAK4sG,SAAShpC,EAAQ1W,EAAOx2B,EAAW0lE,EAAQuQ,EAAe1V,GAGhEvgE,EAAYA,EAAUiC,kBAIpB,GAAY,SAAR76B,EAER8lE,EAAOpuB,aAEH,GAAY,QAAR13C,EAER8lE,EAAO63B,OAAO5kC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAAIyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,QAE1F,GAAY,QAARxvD,EAER8lE,EAAO83B,OAAO7kC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAAIyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,QAE1F,GAAY,QAARxvD,EAER8lE,EAAO+3B,OAAO9kC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EACnDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,EACvCuJ,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EACvCyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,QAErC,GAAY,SAARxvD,EAER8lE,EAAOg4B,QAAQ/kC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EACpDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,EACvCuJ,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EACvCyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,EACvCuJ,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EACvCyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,QAErC,GAAY,OAARxvD,EAER8lE,EAAOi4B,MAAM7mE,OAAO9hB,EAAKqxB,aAAa,OAAS8oB,EAC7Cr4B,OAAO9hB,EAAKqxB,aAAa,OAAS+oB,EAClCt4B,OAAO9hB,EAAKqxB,aAAa,oBACzBvP,OAAO9hB,EAAKqxB,aAAa,mBACzBvP,OAAO9hB,EAAKqxB,aAAa,eACzBsyB,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACtCyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,QAEpC,GAAY,QAARxvD,EAER8lE,EAAO1Y,KAAK2L,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAChDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACtCt4B,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACjCr4B,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,QAE/B,GAAY,aAARxvD,EACT,CACC,IAAIqvG,EAAUn4E,OAAO9hB,EAAKqxB,aAAa,YAExB,GAAX4oE,IAEHA,EAAkD,IAAxCtjD,YAAYwiB,2BAGvB,IAAI7lB,EAAIxxB,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACrCtmD,EAAIiuB,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACrC8/C,EAASp4E,OAAOm4E,GAAW,IAC3BjvC,EAAIh+D,KAAKyD,IAAI6iD,EAAI4mD,EAAQrmG,EAAIqmG,GAEjCxpC,EAAOs4B,UAAUrlC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACrDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACtC9G,EAAGz/C,EAAGm3D,EAAGA,QAEP,GAAY,WAARpgE,EAER8lE,EAAOu4B,QAAQtlC,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACpDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACtCt4B,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACjCr4B,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,QAE9B,GAAY,SAARxvD,GAER,IAAKovD,EAAMm5C,QACX,CACC,IAAIzxF,EAAM5U,KAAKssG,kBAAkBp5F,EAAM,MAAOg6C,GAE9C0W,EAAOukB,MAAMtxB,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAClDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACtCt4B,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACjCr4B,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACjC14C,GAAK,EAAqC,KAA9B1B,EAAKqxB,aAAa,SACA,KAA9BrxB,EAAKqxB,aAAa,gBAGhB,GAAY,QAARzmC,GAER,IAAKovD,EAAMm5C,QACX,CACC,IAAIz9F,EAAM5I,KAAKosG,sBAAsBl5F,EAAM,MAAOg6C,GAC9CuM,EAA4C,KAAjCvmD,EAAKqxB,aAAa,aAAsB,GAAK,EAE5D,GAAwC,KAApCrxB,EAAKqxB,aAAa,eACtB,CACC,IAAIm0B,EAAKxL,EAAMuM,SAGXuC,EAAqE,GAA7D9V,QAAQxb,SAASwiB,EAAMtlC,MAAOiiC,YAAYsS,YAAa,GAC/DF,EAAqE,GAA7D/V,QAAQxb,SAASwiB,EAAMtlC,MAAOiiC,YAAYuS,YAAa,GAE/DJ,GAASC,EAEZxC,GAAYf,EAEJsD,GAASC,EAEjBxC,GAAYf,EAIZe,GAAYf,EAIde,GAAYvmD,EAAKqxB,aAAa,YAE9Bq/B,EAAO/xD,KAAKglD,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAChDyJ,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EACtC,EAAG,EAAG1kD,EAAKsK,EAAKqxB,aAAa,UAAY,OACzCrxB,EAAKqxB,aAAa,WAAa,OAAO,EAAO,GAC7C,MAAM,EAAOk1B,SAGZ,GAAY,iBAAR37D,EACT,CACC,IAAIqjG,EAAUkM,kBAAkBC,WAAWp6F,EAAKqxB,aAAa,SAE7D,GAAe,MAAX48D,EACJ,CACC,IAAIniD,EAAI6X,EAAK7hC,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EAC1CzC,EAAIkM,EAAK9hC,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EAC1C9G,EAAIxxB,OAAO9hB,EAAKqxB,aAAa,MAAQ8oB,EACrCtmD,EAAIiuB,OAAO9hB,EAAKqxB,aAAa,MAAQ+oB,EAEzC6zC,EAAQtK,UAAUjzB,EAAQ1W,EAAOlO,EAAG4L,EAAGpE,EAAGz/C,SAGvC,GAAY,cAARjJ,EAER8lE,EAAO44B,qBAEH,GAAY,QAAR1+F,EAER8lE,EAAO24B,YAEH,GAAY,UAARz+F,EAER8lE,EAAO04B,cAEH,GAAY,eAARx+F,EACT,CACC,IAAI0pC,EAAmC,KAA9Bt0B,EAAKqxB,aAAa,SAAmB,EAAIkoE,EAClD7oC,EAAO42B,eAAexlE,OAAO9hB,EAAKqxB,aAAa,UAAYiD,QAEvD,GAAY,UAAR1pC,EAER8lE,EAAO62B,UAAyC,KAA/BvnF,EAAKqxB,aAAa,gBAE/B,GAAY,eAARzmC,EACT,CACC,IAAIR,EAAQ4V,EAAKqxB,aAAa,WAE9B,GAAa,MAATjnC,EACJ,CACC,IAAIqyB,EAAMryB,EAAM2L,MAAM,KAClB41F,EAAM,GAEV,IAAS31F,EAAI,EAAGA,EAAIymB,EAAI/uB,OAAQsI,IAE3BymB,EAAIzmB,GAAGtI,OAAS,GAEnBi+F,EAAI9tF,KAAKikB,OAAOrF,EAAIzmB,IAAMujG,GAI5BnvG,EAAQuhG,EAAIt/D,KAAK,KACjBqkC,EAAO82B,eAAep9F,QAGP,eAARQ,EAER8lE,EAAO22B,eAAernF,EAAKqxB,aAAa,UAExB,WAARzmC,EAER8lE,EAAO+2B,WAAWznF,EAAKqxB,aAAa,QAEpB,YAARzmC,EAER8lE,EAAOg3B,YAAY1nF,EAAKqxB,aAAa,SAErB,cAARzmC,EAER8lE,EAAOi3B,cAAc7lE,OAAO9hB,EAAKqxB,aAAa,WAE9B,aAARzmC,EAER8lE,EAAOo2B,aAAa9mF,EAAKqxB,aAAa,UAEtB,SAARzmC,EAER8lE,EAAOi2B,SAAS3mF,EAAKqxB,aAAa,UAElB,aAARzmC,EAER8lE,EAAOi2B,SAAS3mF,EAAKqxB,aAAa,UAElB,eAARzmC,EAER8lE,EAAOi2B,SAAS3mF,EAAKqxB,aAAa,UAElB,aAARzmC,EAER8lE,EAAOk3B,aAAa5nF,EAAKqxB,aAAa,UAEtB,aAARzmC,EAER8lE,EAAOu3B,aAAajoF,EAAKqxB,aAAa,UAEtB,cAARzmC,EAER8lE,EAAOs3B,cAAchoF,EAAKqxB,aAAa,WAEvB,YAARzmC,GAER8lE,EAAOq3B,YAAYjmE,OAAO9hB,EAAKqxB,aAAa,SAAWkoE,IAGpDE,GAA0B,cAAR7uG,GAAgC,QAARA,GAA0B,UAARA,IAE/D6uG,GAAgB,EAChB/oC,EAAOw3B,WAAU,MAKpBz6C,WAAW0gD,UAAiC,qBAAdA,UAA4BA,eAAY9gG,EAwBtE,IAAI8sG,kBACJ,CAOCE,SAAU,GAOVC,WAAY,SAAS1vG,EAAMqjG,GAE1BkM,kBAAkBE,SAASzvG,GAAQqjG,GAQpCmM,WAAY,SAASxvG,GAEpB,OAAOuvG,kBAAkBE,SAASzvG,KAKpC6iD,WAAW0sD,kBAAiD,qBAAtBA,kBAAoCA,uBAAoB9sG,EAM9F,IAAIktG,SACJ,CAWCC,QAAS,GAQTC,UAAW,SAASh3F,EAAMmxC,GAEzB2lD,SAASC,QAAQ/2F,GAAQmxC,GAQ1B8lD,aAAc,SAAShqC,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAE/E,IAAIp2C,EAAQ2lD,SAASC,QAAQ/2F,GAE7B,OAAiB,MAATmxC,EAAiBA,EAAM8b,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAAU,OAyNpG,SAAS6P,QAAQjxC,EAAQy/B,EAAMD,EAAQiK,GAEtCxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EAgE1D,SAASyH,QAAQlxC,EAAQy/B,EAAMD,EAAQiK,GAEtCwH,QAAQrvG,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EAmD1D,SAAS0H,iBAAiBnxC,EAAQy/B,EAAMD,EAAQiK,GAE/CxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EA4H1D,SAAS2H,UAAUpxC,EAAQy/B,EAAMD,EAAQiK,GAExCxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EAkE1D,SAAS4H,gBAAgBrxC,EAAQy/B,EAAMD,EAAQiK,GAE9CxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EA0F1D,SAAS6H,UAAUtxC,EAAQy/B,EAAMD,EAAQiK,GAExCxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EA6D1D,SAAS9B,WAAWkB,EAAQrJ,EAAQiK,GAEnCxP,QAAQr4F,KAAKsB,MACbA,KAAK2lG,OAASA,EACd3lG,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EA0I1D,SAAS8H,QAAQ1I,EAAQpJ,EAAMD,EAAQiK,EAAa+H,EAAY5D,EAASE,GAExE7T,QAAQr4F,KAAKsB,MACbA,KAAK2lG,OAASA,EACd3lG,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EACzDvmG,KAAKsuG,WAA4B,MAAdA,EAAsBA,EAAazkD,YAAY2iB,YAClExsE,KAAK0qG,QAAsB,MAAXA,EAAmBA,EAAU7gD,YAAY0iB,cACzDvsE,KAAK4qG,QAAsB,MAAXA,EAAmBA,EAAU/gD,YAAY4iB,WA6G1D,SAAS8hC,iBAAiB5I,EAAQpJ,EAAMD,EAAQiK,EAAa+H,EAAY5D,EAASE,GAEjF7T,QAAQr4F,KAAKsB,MACbA,KAAK2lG,OAASA,EACd3lG,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EACzDvmG,KAAKsuG,WAA4B,MAAdA,EAAsBA,EAAazkD,YAAY2iB,YAClExsE,KAAKwuG,aAA2B,MAAX9D,EAAmBA,EAAU7gD,YAAY0iB,cAC9DvsE,KAAK2qG,UAAY9gD,YAAY4iB,WAAa,EAC1CzsE,KAAK4qG,QAAU/gD,YAAY4iB,WAAa,EAufzC,SAAS6+B,OAAOhuG,EAAOw/D,EAAQkF,EAAOC,EAAQrO,EAC7C66C,EAAQhuD,EAAMu4C,EAAW0R,EAASgE,EAAYC,EAC9CC,EAAeC,EAAa5K,EAAY6K,EAAYvqC,EACpD/oB,EAAMuzD,EAAS//C,EAAUggD,EAAcC,GAEvClY,QAAQr4F,KAAKsB,MACbA,KAAK1C,MAAQA,EACb0C,KAAK88D,OAASA,EACd98D,KAAK4zD,MAAkB,MAATA,EAAiBA,EAAQ,QACvC5zD,KAAKgiE,MAAkB,MAATA,EAAiBA,EAAQnY,YAAYqY,aACnDliE,KAAKiiE,OAAoB,MAAVA,EAAkBA,EAASpY,YAAYuY,aACtDpiE,KAAKyuG,OAAoB,MAAVA,EAAkBA,EAAS5kD,YAAY8Y,mBACtD3iE,KAAKygD,KAAgB,MAARA,EAAgBA,EAAOoJ,YAAY6Y,iBAChD1iE,KAAKg5F,UAA0B,MAAbA,EAAqBA,EAAYnvC,YAAYmiB,kBAC/DhsE,KAAK0qG,QAAUr1E,SAASq1E,GAAW,GACnC1qG,KAAK0uG,WAAa1uG,KAAK0qG,QAAUr1E,SAASq5E,GAAc,GACxD1uG,KAAK2uG,aAAe3uG,KAAK0qG,QAAUr1E,SAASs5E,GAAgB,GAC5D3uG,KAAK4uG,cAAgB5uG,KAAK0qG,QAAUr1E,SAASu5E,GAAiB,GAC9D5uG,KAAK6uG,YAAc7uG,KAAK0qG,QAAUr1E,SAASw5E,GAAe,GAC1D7uG,KAAKikG,WAA4B,MAAdA,GAAsBA,EACzCjkG,KAAK8uG,WAAaA,EAClB9uG,KAAKukE,OAASA,EACdvkE,KAAKw7C,KAAgB,MAARA,GAAgBA,EAC7Bx7C,KAAK+uG,QAAsB,MAAXA,GAAmBA,EACnC/uG,KAAKgvD,SAAwB,MAAZA,EAAoBA,EAAW,UAChDhvD,KAAKgvG,aAAgC,MAAhBA,EAAwBA,EAAe,EAC5DhvG,KAAKivG,cAAgBA,EACrBjvG,KAAKy5D,SAAW,EAChBz5D,KAAKkvG,eAyqCN,SAASC,aAERpB,QAAQrvG,KAAKsB,MA4Cd,SAASovG,YAERrB,QAAQrvG,KAAKsB,MA8Cd,SAASqvG,OAAOvyC,EAAQw/B,EAAQiK,GAE/BxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EAkD1D,SAAS+I,aAAaxyC,EAAQqrB,EAAOoU,EAAMD,EAAQiK,GAElDxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKmoF,MAAQA,EACbnoF,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EACzDvmG,KAAKi5F,QAAS,EA6Of,SAASsW,QAAQzyC,EAAQy/B,EAAMD,EAAQiK,GAEtC0H,iBAAiBvvG,KAAKsB,KAAM88D,EAAQy/B,EAAMD,EAAQiK,GAsRnD,SAASiJ,WAAW1yC,EAAQy/B,EAAMD,EAAQiK,GAEzCxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EAmH1D,SAASkJ,YAAY9J,EAAQrJ,EAAQiK,GAEpC9B,WAAW/lG,KAAKsB,KAAM2lG,EAAQrJ,EAAQiK,GAyJvC,SAASmJ,WAAW5yC,EAAQy/B,EAAMD,EAAQiK,GAEzCxP,QAAQr4F,KAAKsB,MACbA,KAAK88D,OAASA,EACd98D,KAAKu8F,KAAOA,EACZv8F,KAAKs8F,OAASA,EACdt8F,KAAKumG,YAA8B,MAAfA,EAAuBA,EAAc,EA8c1D,SAASoJ,cAAcvjD,GAEtBpsD,KAAKosD,MAAQA,EA6dd,SAASwjD,mBAAmB5iD,EAAM6iD,GAEjC7vG,KAAKgtD,KAAOA,EACZhtD,KAAK6vG,cAAgBA,EAkGtB,SAASC,cAAc1jD,EAAO63C,EAAYyG,EAAS7zC,EAAIC,EAAIyN,GAE1DorC,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAKikG,WAA4B,MAAdA,GAAsBA,EACzCjkG,KAAK0qG,QAAsB,MAAXA,EAAmBA,EAAU,EAC7C1qG,KAAK62D,GAAY,MAANA,EAAcA,EAAK,EAC9B72D,KAAK82D,GAAY,MAANA,EAAcA,EAAK,EAC9B92D,KAAKukE,OAAoB,MAAVA,EAAkBA,EAAS,EAmlB3C,SAASwrC,kBAAkB3jD,EAAO63C,EAAYyG,EAASnmC,GAEtDorC,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAKikG,WAA4B,MAAdA,GAAsBA,EACzCjkG,KAAK0qG,QAAUA,GAAW,EAC1B1qG,KAAKukE,OAASA,GAAU,EA2OzB,SAASyrC,oBAAoB5jD,EAAO63C,EAAYgM,GAE/CN,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAKikG,WAA4B,MAAdA,GAAsBA,EACzCjkG,KAAKiwG,OAAoB,MAAVA,GAAkBA,EAylClC,SAASC,mBAAmB9jD,GAE3B4jD,oBAAoBtxG,KAAKsB,KAAMosD,GAAQ,GA+TxC,SAAS+jD,oBAAoB/jD,GAE5BujD,cAAcjxG,KAAKsB,KAAMosD,GAqlB1B,SAASgkD,eAAehkD,EAAOikD,GAE9BV,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAKqwG,OAAoB,MAAVA,EAAkBA,EAAS,IA+N3C,SAASC,qBAAqBlkD,GAE7BujD,cAAcjxG,KAAKsB,KAAMosD,GAmN1B,SAASmkD,kBAAkBnkD,EAAOokD,EAASC,GAE1Cd,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAKwwG,QAAUA,EACfxwG,KAAKywG,OAASA,EA+Ff,SAASC,kBAAkBtkD,EAAOikD,GAEjCV,cAAcjxG,KAAKsB,KAAMosD,GAwJ1B,SAASukD,+BAER3wG,KAAKg/C,EAAI,GACTh/C,KAAK4qD,EAAI,GACT5qD,KAAK+jE,KAAO,GA2Mb,SAAS6sC,qBAAqB5jD,GAE7B2jD,6BAA6B5vG,MAAMf,KAAMgB,WACzChB,KAAKgtD,KAAOA,EACZhtD,KAAK2Q,GAAK63C,iBAAiBnpD,IAAI2tD,GAC/BhtD,KAAK6wG,iBAAmB,GACxB7wG,KAAK8wG,iBAAmB,GAyNzB,SAASC,qBAAqBhjD,GAE7B4iD,6BAA6B5vG,MAAMf,KAAMgB,WACzChB,KAAK+tD,MAAQA,EACb/tD,KAAKgxG,IAAM,GAEX,IAAK,IAAI9nG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAEjClJ,KAAKgxG,IAAIjgG,KAAKy3C,iBAAiBnpD,IAAI0uD,EAAM7kD,KAiM3C,SAAS+nG,sBAAsBC,EAAQC,EAAUC,EAAO/qG,EAAQgrG,GAEnDH,EAAOI,WACnBtxG,KAAKqxG,gBAAkBA,EACvBrxG,KAAKoxG,MAAQA,EACbpxG,KAAKqG,OAASA,EAIdrG,KAAKuxG,aAAe,IAAI3oD,aACxB5oD,KAAKwxG,WAAa,IAAI5oD,aACtB5oD,KAAKyxG,QAAU,EACf,IAAIC,EAAmB,GAEP,MAAZP,IAEHA,EAAWnxG,KAAKosD,MAAMulD,iBAAiBtrG,IAGxCrG,KAAKyxG,QAAUzxG,KAAK4xG,oBAIpB5xG,KAAK6xG,oBAAoBX,EAAQC,EAAUO,GAI3C,IAAK,IAAIxoG,EAAI,EAAGA,EAAIioG,EAASvwG,OAAQsI,IACrC,CAGC,IAFA,IAAI6kD,EAAQ2jD,EAAiBxoG,GAAG4nG,iBAEvBtjF,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAClC,CACC,IAAIskF,EAAe/jD,EAAMvgC,GACrBukF,EAAYD,EAAa/jD,MAI7B,GAAiB,MAAbgkD,GAAqBA,EAAUnxG,OAAS,EAC5C,CACC,IAAIoxG,EAAWD,EAAU,GACrBE,EAAaf,EAAOgB,mBACtBF,GAAU,GACRG,EAAqBnyG,KAAKuxG,aAAalyG,IAAI4yG,GAE3CP,EAAiBxoG,IAAMipG,IAO1BF,EAAaf,EAAOgB,mBAClBF,GAAU,GACZG,EAAqBnyG,KAAKuxG,aAAalyG,IAAI4yG,IAGlB,MAAtBE,GACCT,EAAiBxoG,IAAMipG,IAE3BL,EAAa1tG,OAAS+tG,EAE4B,GAA9CA,EAAmBtB,iBAAiBjwG,SAEvCuxG,EAAmBtB,iBAAmB,IAGnC3qD,QAAQ18C,QAAQ2oG,EAAmBtB,iBAAkBiB,GAAgB,GAExEK,EAAmBtB,iBAAiB9/F,KAAK+gG,KAQ7CJ,EAAiBxoG,GAAG66D,KAAK,GAAK,GA+lBhC,SAASquC,gBAAgBlB,EAAQC,EAAUC,EAAO/qG,EAAQgrG,GAE7CH,EAAOI,WACnBtxG,KAAKqxG,gBAAkBA,EACvBrxG,KAAKoxG,MAAQA,EACbpxG,KAAKqG,OAASA,EAIdrG,KAAKuxG,aAAe,IAAI3oD,aACxB5oD,KAAKwxG,WAAa,IAAI5oD,aACtB5oD,KAAKyxG,QAAU,EACf,IAAIC,EAAmB,GAEP,MAAZP,IAEHA,EAAWnxG,KAAKosD,MAAMulD,iBAAiBtrG,IAGxCrG,KAAKyxG,QAAUzxG,KAAK4xG,oBAIpB5xG,KAAK6xG,oBAAoBX,EAAQC,EAAUO,GAI3C,IAAK,IAAIxoG,EAAI,EAAGA,EAAIioG,EAASvwG,OAAQsI,IACrC,CAGC,IAFA,IAAI6kD,EAAQ2jD,EAAiBxoG,GAAG4nG,iBAEvBtjF,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAClC,CACC,IAAIskF,EAAe/jD,EAAMvgC,GACrBukF,EAAYD,EAAa/jD,MAI7B,GAAiB,MAAbgkD,GAAqBA,EAAUnxG,OAAS,EAC5C,CACC,IAAIoxG,EAAWD,EAAU,GACrBE,EAAaf,EAAOgB,mBACtBF,GAAU,GACRG,EAAqBnyG,KAAKuxG,aAAalyG,IAAI4yG,GAE3CP,EAAiBxoG,IAAMipG,IAO1BF,EAAaf,EAAOgB,mBAClBF,GAAU,GACZG,EAAqBnyG,KAAKuxG,aAAalyG,IAAI4yG,IAGlB,MAAtBE,GACCT,EAAiBxoG,IAAMipG,IAE3BL,EAAa1tG,OAAS+tG,EAE4B,GAA9CA,EAAmBtB,iBAAiBjwG,SAEvCuxG,EAAmBtB,iBAAmB,IAGnC3qD,QAAQ18C,QAAQ2oG,EAAmBtB,iBAAkBiB,GAAgB,GAExEK,EAAmBtB,iBAAiB9/F,KAAK+gG,KAQ7CJ,EAAiBxoG,GAAG66D,KAAK,GAAK,GA0sBhC,SAASsuC,6BAmCT,SAASC,gCAAgCpB,GAExClxG,KAAKkxG,OAASA,EA6lBf,SAASqB,oBA+DT,SAASC,sBAAsBtB,GAE9BlxG,KAAKkxG,OAASA,EAqHf,SAASuB,uBAAuBvB,EAAQwB,EAAkBC,EACzDC,EAAaC,EAAUC,GAEvB9yG,KAAKkxG,OAASA,EACdlxG,KAAK0yG,iBAAmBA,EACxB1yG,KAAK2yG,qBAAuBA,EAC5B3yG,KAAK4yG,YAAcA,EACnB5yG,KAAK6yG,SAAWA,EAChB7yG,KAAK8yG,oBAAsBA,EAksD5B,SAASC,mBAAmB7B,GAE3BlxG,KAAKkxG,OAASA,EAwGf,SAAS8B,qBAAqB5mD,EAAOwmD,EAAaK,GAEjDtD,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAK4yG,YAA8B,MAAfA,EAAuBA,EAAc/oD,YAAYmR,gBACrEh7D,KAAKizG,cAAkC,MAAjBA,GAAyBA,GAnvZhD,WAEC,SAASC,EAAYC,GAIpB,OAFAA,EAA8B,MAAfA,EAAuBA,EAAc,EAE7C,SAASvvC,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAKxE,IAAIkV,EAAavF,EAAQnP,EAAK,MAC1B2U,EAAavF,EAAQpP,EAAK,MAE9BmP,GAAiBptD,EAAOi+C,EACxBoP,GAAiBrtD,EAAOi+C,EAExB,IAAI1kC,EAAKkwC,EAAG1lF,QACZw1C,EAAGhb,GAAKo0D,EACRp5C,EAAGpP,GAAKyoD,EAER,IAAI91G,EAAKoZ,GAAQkzC,YAAYgrB,eAAiBl+D,GAAQkzC,YAAYirB,mBAAsB,EAAI,IAI5F,OAHAo1B,EAAGlrD,IAAM6uD,EAAQtwG,EAAI61G,EACrBlJ,EAAGt/C,IAAMkjD,EAAQvwG,EAAI81G,EAEd,WAENzvC,EAAO43B,QACP53B,EAAO63B,OAAOzhC,EAAGhb,EAAGgb,EAAGpP,GACvBgZ,EAAO83B,OAAO1hC,EAAGhb,EAAI6uD,EAAQC,EAAQqF,EAAan5C,EAAGpP,EAAIkjD,EAAQD,EAAQsF,GAErEx8F,GAAQkzC,YAAYgrB,eAAiBl+D,GAAQkzC,YAAYirB,oBAE5DlR,EAAO83B,OAAO1hC,EAAGhb,EAAY,EAAR6uD,EAAY,EAAG7zC,EAAGpP,EAAY,EAARkjD,EAAY,GAGxDlqC,EAAO83B,OAAO1hC,EAAGhb,EAAI8uD,EAAQqF,EAActF,EAAO7zC,EAAGpP,EAAIkjD,EAAQD,EAAQsF,GACzEvvC,EAAOpuB,QAEH0oD,EAEHt6B,EAAO44B,gBAIP54B,EAAO04B,WAWX,SAASgX,EAAgBH,GAIxB,OAFAA,EAA8B,MAAfA,EAAuBA,EAAc,EAE7C,SAASvvC,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAKxE,IAAIkV,EAAavF,EAAQnP,EAAK,MAC1B2U,EAAavF,EAAQpP,EAAK,MAE9BmP,GAAiBptD,EAAOi+C,EACxBoP,GAAiBrtD,EAAOi+C,EAExB,IAAI1kC,EAAKkwC,EAAG1lF,QAOZ,OANAw1C,EAAGhb,GAAKo0D,EACRp5C,EAAGpP,GAAKyoD,EAERnJ,EAAGlrD,GAAmB,GAAbo0D,EACTlJ,EAAGt/C,GAAmB,GAAbyoD,EAEF,WAENzvC,EAAO43B,QACP53B,EAAO63B,OAAOzhC,EAAGhb,EAAI6uD,EAAQC,EAAQqF,EAAan5C,EAAGpP,EAAIkjD,EAAQD,EAAQsF,GACzEvvC,EAAO83B,OAAO1hC,EAAGhb,EAAGgb,EAAGpP,GACvBgZ,EAAO83B,OAAO1hC,EAAGhb,EAAI8uD,EAAQqF,EAActF,EAAO7zC,EAAGpP,EAAIkjD,EAAQD,EAAQsF,GACzEvvC,EAAO04B,WA+BV,SAASiX,EAAQ3vC,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAOzE,IAAIsV,EAAY78F,GAAQkzC,YAAYurB,cAAkB,MAAS,MAC3Dg+B,EAAavF,EAAQnP,EAAK8U,EAC1BH,EAAavF,EAAQpP,EAAK8U,EAE9B3F,GAAiBptD,EAAOi+C,EACxBoP,GAAiBrtD,EAAOi+C,EAExB,IAAI1kC,EAAKkwC,EAAG1lF,QACZw1C,EAAGhb,GAAKo0D,EACRp5C,EAAGpP,GAAKyoD,EAERnJ,EAAGlrD,IAAM6uD,EAAQuF,EACjBlJ,EAAGt/C,IAAMkjD,EAAQuF,EAGjB,IAAII,EAAO98F,GAAQkzC,YAAYurB,cAAkB,EAAI,IAErD,OAAO,WAENxR,EAAO43B,QACP53B,EAAO63B,OAAOzhC,EAAGhb,EAAGgb,EAAGpP,GACvBgZ,EAAO83B,OAAO1hC,EAAGhb,EAAI6uD,EAAQ,EAAIC,EAAQ2F,EAAIz5C,EAAGpP,EAAIijD,EAAQ4F,EAAK3F,EAAQ,GACzElqC,EAAO83B,OAAO1hC,EAAGhb,EAAI6uD,EAAO7zC,EAAGpP,EAAIkjD,GACnClqC,EAAO83B,OAAO1hC,EAAGhb,EAAI6uD,EAAQ,EAAIC,EAAQ2F,EAAIz5C,EAAGpP,EAAIkjD,EAAQ,EAAID,EAAQ4F,GACxE7vC,EAAOpuB,QAEH0oD,EAEHt6B,EAAO44B,gBAIP54B,EAAO04B,UAvGVmR,SAASE,UAAU,UAAWuF,EAAY,IAC1CzF,SAASE,UAAU,cAAeuF,EAAY,IAC9CzF,SAASE,UAAU,QAASuF,EAAY,IACxCzF,SAASE,UAAU,YAAauF,EAAY,IAmC5CzF,SAASE,UAAU,OAAQ2F,EAAgB,IAC3C7F,SAASE,UAAU,WAAY2F,EAAgB,IAE/C7F,SAASE,UAAU,QAAQ,SAAS/pC,EAAQ1W,EAAOv2C,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQw6F,EAAIR,GAE5F,IAAI5+F,EAAImhD,EAAO,EAEXuZ,EAAKkwC,EAAG1lF,QAIZ,OAHA0lF,EAAGlrD,GAAK6uD,EAAQvuG,EAChB4qG,EAAGt/C,GAAKkjD,EAAQxuG,EAET,WAENskE,EAAOu4B,QAAQniC,EAAGhb,EAAI1/C,EAAG06D,EAAGpP,EAAItrD,EAAGmhD,EAAMA,GAErCy9C,EAEHt6B,EAAO44B,gBAIP54B,EAAO04B,aAiDVmR,SAASE,UAAU,UAAW4F,GAC9B9F,SAASE,UAAU,cAAe4F,IAhKnC,GAmKA5yD,WAAW8sD,SAA+B,qBAAbA,SAA2BA,cAAWltG,EA0DnE2lD,QAAQ/6C,OAAO4iG,QAAShX,SAOxBgX,QAAQruG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEzDjG,EAAE+iE,UAAU7kB,EAAG4L,GACf9pD,EAAE06F,QACFx7F,KAAK0zG,WAAW5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAC5BjG,EAAE07F,iBAQHuR,QAAQruG,UAAUg0G,WAAa,SAAS5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEnD,IAAI++C,EAAQU,EAAE,EACd1lD,EAAE26F,OAAO,EAAG10F,GACZjG,EAAE86F,QAAQ,EAAG,EAAI70F,EAAI,EAAG,EAAG,EAAIA,EAAI,EAAGy/C,EAAI,EAAG,EAAIz/C,EAAI,GACrDjG,EAAE86F,QAAQp1C,EAAI,EAAIV,EAAO,EAAI/+C,EAAI,EAAGy/C,EAAI,EAAIV,EAAO,EAAGU,EAAI,EAAG,GAC7D1lD,EAAE86F,QAAQp1C,EAAI,EAAIV,EAAO,EAAGU,EAAI,EAAIV,EAAO,EAAI/+C,EAAI,EAAGy/C,EAAI,EAAG,EAAIz/C,EAAI,GACrEjG,EAAE86F,QAAQp1C,EAAG,EAAIz/C,EAAI,EAAGy/C,EAAG,EAAIz/C,EAAI,EAAGy/C,EAAGz/C,GACzCjG,EAAE00C,SAGHmL,WAAWotD,QAA6B,qBAAZA,QAA0BA,aAAUxtG,EAuChE2lD,QAAQ/6C,OAAO6iG,QAASD,SAOxBC,QAAQtuG,UAAUg0G,WAAa,SAAS5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEnDjG,EAAE26F,OAAO,IAAOj1C,EAAG,IAAOz/C,GAC1BjG,EAAE86F,QAAQ,IAAOp1C,EAAG,IAAOz/C,EAAG,EAAG,GAAMA,EAAG,IAAOy/C,EAAG,IAAOz/C,GAC3DjG,EAAE86F,QAAQ,EAAG,IAAO70F,EAAG,IAAOy/C,EAAG,GAAMz/C,EAAG,IAAOy/C,EAAG,GAAMz/C,GAC1DjG,EAAE86F,QAAQ,GAAMp1C,EAAGz/C,EAAG,GAAMy/C,EAAGz/C,EAAG,GAAMy/C,EAAG,GAAMz/C,GACjDjG,EAAE86F,QAAQp1C,EAAG,GAAMz/C,EAAGy/C,EAAG,GAAMz/C,EAAG,KAAQy/C,EAAG,GAAMz/C,GACnDjG,EAAE86F,QAAQp1C,EAAG,GAAMz/C,EAAG,GAAMy/C,EAAG,GAAMz/C,EAAG,KAAQy/C,EAAG,GAAMz/C,GACzDjG,EAAE86F,QAAQ,GAAMp1C,EAAG,IAAOz/C,EAAG,GAAMy/C,EAAG,IAAOz/C,EAAG,IAAOy/C,EAAG,IAAOz/C,GACjEjG,EAAE00C,SAGHmL,WAAWqtD,QAA6B,qBAAZA,QAA0BA,aAAUztG,EAsChE2lD,QAAQ/6C,OAAO8iG,iBAAkBlX,SAOjCkX,iBAAiBvuG,UAAUinG,cAAgB,WAE1C,IAAIjlE,GAAS,EAOb,OALkB,MAAd1hC,KAAK4nB,QAER8Z,EAAgF,KAAvEwkB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYskB,qBAAsB,OAGjEnuE,KAAK8pG,YAAc9pG,KAAK+qG,OAA0B,GAAjB/qG,KAAKy5D,WAAkB/3B,GACjD,MAAb1hC,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,OAQjDmkD,iBAAiBvuG,UAAU+pG,gBAAkB,SAAS3oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEjE,IAAI26B,GAAS,EAOb,GALkB,MAAd1hC,KAAK4nB,QAER8Z,EAAgF,KAAvEwkB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYskB,qBAAsB,MAGrEzsC,GAAwB,MAAb1hC,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,MAC5C,MAAf9pD,KAAKs8F,QAAkBt8F,KAAKs8F,QAAUzyC,YAAYC,KACpD,CAMC,GALKpoB,GAAwB,MAAb1hC,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,OAE7DhpD,EAAEuqF,eAAgB,GAGfrrF,KAAK8pG,UACT,CACC,IAAI5rC,EAAI,EAER,GAA2E,KAAvEhY,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYwnB,uBAAwB,GAEpEnT,EAAIh+D,KAAKyD,IAAI6iD,EAAI,EAAGtmD,KAAKyD,IAAIoD,EAAI,EAAGm/C,QAAQxb,SAAS1qC,KAAK4nB,MACzDiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,QAGzD,CACC,IAAI/uE,EAAI2oD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cACR,IAAxCvnB,YAAYwiB,2BAAmC,IAChDnO,EAAIh+D,KAAKyD,IAAI6iD,EAAIjpD,EAAGwJ,EAAIxJ,GAGzBuD,EAAEo7F,UAAUl9C,EAAG4L,EAAGpE,EAAGz/C,EAAGm3D,EAAGA,QAI3Bp9D,EAAEoqD,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GAGjBjG,EAAE07F,kBASJyR,iBAAiBvuG,UAAUwrG,YAAc,SAASpqG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE7D,OAAO,GAQRknG,iBAAiBvuG,UAAUgqG,gBAAkB,SAAS5oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE7D/G,KAAK+qG,QAAU/qG,KAAKqmG,SAAwB,MAAbrmG,KAAKu8F,MAAgBv8F,KAAKu8F,MAAQ1yC,YAAYC,MAEhF9pD,KAAK4pG,iBAAiB9oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAG/G,KAAK2pG,WAAWnjD,EAAIxmD,KAAKumG,YAAax/F,EAAI/G,KAAKumG,eAItF5lD,WAAWstD,iBAA+C,qBAArBA,iBAAmCA,sBAAmB1tG,EAsC3F2lD,QAAQ/6C,OAAO+iG,UAAWnX,SAO1BmX,UAAUxuG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE3DjG,EAAEq7F,QAAQn9C,EAAG4L,EAAGpE,EAAGz/C,GACnBjG,EAAE07F,iBAGH77C,WAAWutD,UAAiC,qBAAdA,UAA4BA,eAAY3tG,EA2DtE2lD,QAAQ/6C,OAAOgjG,gBAAiBpX,SAOhCoX,gBAAgBzuG,UAAUgiG,SAAW,GAOrCyM,gBAAgBzuG,UAAU+pG,gBAAkB,SAAS3oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEhEjG,EAAEq7F,QAAQn9C,EAAG4L,EAAGpE,EAAGz/C,GACnBjG,EAAE07F,iBAQH2R,gBAAgBzuG,UAAUgqG,gBAAkB,SAAS5oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEhE,IAAK/G,KAAKqmG,QACV,CACC,IAAI9C,EAASr9C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYwkB,aAAcnuE,KAAKyD,IAAI,EAAI3D,KAAKumG,YAAarmG,KAAKyD,IAAI6iD,EAAI,EAAGz/C,EAAI,KACvHi4C,GAAKukD,EACL34C,GAAK24C,EACL/8C,GAAK,EAAI+8C,EACTx8F,GAAK,EAAIw8F,EAGL/8C,EAAI,GAAKz/C,EAAI,GAEhBjG,EAAEq7F,QAAQn9C,EAAG4L,EAAGpE,EAAGz/C,GAGpBjG,EAAEw7F,WASJ6R,gBAAgBzuG,UAAU4nG,eAAiB,SAASp8C,GAEnD,IAAIq4C,EAAUr9C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYwkB,aAAcnuE,KAAKyD,IAAI,EAAI3D,KAAKumG,YACrFrmG,KAAKyD,IAAIunD,EAAKpF,MAAQ,EAAI9lD,KAAKmtD,MAAOjC,EAAKvF,OAAS,EAAI3lD,KAAKmtD,SAAYntD,KAAKmtD,MAEhF,OAAO,IAAItC,YAAYK,EAAKlM,EAAIukD,EAAQr4C,EAAKN,EAAI24C,EAAQr4C,EAAKpF,MAAQ,EAAIy9C,EAAQr4C,EAAKvF,OAAS,EAAI49C,IAGrG5iD,WAAWwtD,gBAA6C,qBAApBA,gBAAkCA,qBAAkB5tG,EAsCxF2lD,QAAQ/6C,OAAOijG,UAAWrX,SAO1BqX,UAAU1uG,UAAUwrG,YAAc,WAEjC,OAAO,GAQRkD,UAAU1uG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE3D,IAAI4sG,EAAKntD,EAAI,EACTotD,EAAK7sG,EAAI,EAETijG,EAAU9jD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,EAClGxrE,EAAE06F,QACFx7F,KAAK+pG,UAAUjpG,EAAG,CAAC,IAAI6pD,QAAQ3L,EAAI20D,EAAI/oD,GAAI,IAAID,QAAQ3L,EAAIwH,EAAGoE,EAAIgpD,GAAK,IAAIjpD,QAAQ3L,EAAI20D,EAAI/oD,EAAI7jD,GAC1F,IAAI4jD,QAAQ3L,EAAG4L,EAAIgpD,IAAM5zG,KAAK8pG,UAAWE,GAAS,GACvDlpG,EAAE07F,iBAGH77C,WAAWytD,UAAiC,qBAAdA,UAA4BA,eAAY7tG,EAqCtE2lD,QAAQ/6C,OAAOs5F,WAAY1N,SAO3B0N,WAAW/kG,UAAU0rG,YAAc,WAElC,OAAO,GAQR3G,WAAW/kG,UAAU8pG,iBAAmB,WAEvC,OAAO,GAQR/E,WAAW/kG,UAAU6nG,sBAAwB,WAE5C,OAAO,GAQR9C,WAAW/kG,UAAU2pG,eAAiB,SAASvoG,EAAG07D,GAEjD,IAAIq3C,EAAO/yG,EAAEu8F,mBACbv8F,EAAEu8F,mBAAqB,SAEL,MAAdr9F,KAAK4nB,OAAyD,GAAxC5nB,KAAK4nB,MAAMiiC,YAAYsnB,cAEhDnxE,KAAK8zG,UAAUhzG,EAAG07D,EAAKx8D,KAAK8pG,WAI5B9pG,KAAK+zG,gBAAgBjzG,EAAG07D,GAGzB17D,EAAEu8F,mBAAqBwW,GAQxBpP,WAAW/kG,UAAUo0G,UAAY,SAAShzG,EAAG07D,EAAK6nC,GAEjD,IAAI2F,EAAU9jD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,EAClGxrE,EAAE06F,QACFx7F,KAAK+pG,UAAUjpG,EAAG07D,EAAK6nC,EAAS2F,GAAS,GACzClpG,EAAEw7F,UAQHmI,WAAW/kG,UAAUq0G,gBAAkB,SAASjzG,EAAG07D,GAElD17D,EAAE06F,QAEF,IAAIxhC,EAAKwC,EAAI,GACTv0D,EAAIu0D,EAAI57D,OAEZE,EAAE26F,OAAOzhC,EAAGhb,EAAGgb,EAAGpP,GAElB,IAAK,IAAI1hD,EAAI,EAAGA,EAAIjB,EAAI,EAAGiB,IAC3B,CACC,IAAIihG,EAAK3tC,EAAItzD,GACTywD,EAAK6C,EAAItzD,EAAI,GACb8qG,GAAM7J,EAAGnrD,EAAI2a,EAAG3a,GAAK,EACrBi1D,GAAM9J,EAAGv/C,EAAI+O,EAAG/O,GAAK,EAEzB9pD,EAAE66F,OAAOwO,EAAGnrD,EAAGmrD,EAAGv/C,EAAGopD,EAAIC,GAGtB9J,EAAK3tC,EAAIv0D,EAAI,GACb0xD,EAAK6C,EAAIv0D,EAAI,GAEjBnH,EAAE66F,OAAOwO,EAAGnrD,EAAGmrD,EAAGv/C,EAAG+O,EAAG3a,EAAG2a,EAAG/O,GAC9B9pD,EAAEw7F,UAGH37C,WAAW8jD,WAAmC,qBAAfA,WAA6BA,gBAAalkG,EAiDzE2lD,QAAQ/6C,OAAOkjG,QAAStX,SAOxBsX,QAAQ3uG,UAAUyrG,mBAAqB,SAAStK,GAE/C9J,QAAQr3F,UAAUyrG,mBAAmBpqG,MAAMf,KAAMgB,WAEjD,IAAIwlD,EAAItmD,KAAKwD,IAAI1D,KAAKsuG,WAAYtuG,KAAK4qG,SACvC/J,EAAKj1C,MAAMpF,EAAI,EAAIxmD,KAAKumG,aAAevmG,KAAKmtD,QAQ7CkhD,QAAQ3uG,UAAU2pG,eAAiB,SAASvoG,EAAG07D,GAG9C,IAAIkuC,EAAW7gD,YAAY0iB,cACvBzmB,EAAQ+D,YAAY2iB,YACpB0nC,EAAQrqD,YAAY4iB,WAGpB09B,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAS,GACtBiuC,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EACfgR,EAAO17D,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAChCnuC,EAASg7D,EAAO,EAAI8uC,EAAUwJ,EAG9BC,EAAKtlE,EAAK+sB,EACVw4C,EAAKrlE,EAAK6sB,EACVy4C,EAAQzzG,EAASuzG,EACjBG,EAAQ1zG,EAASwzG,EACjBG,EAASzuD,EAAQsuD,EAAG,EACpBI,GAAU1uD,EAAQquD,EAAG,EAGrBM,EAAMtK,EAAGnrD,EAAIu1D,EAAS,EAAI7J,EAAUyJ,EACpCO,EAAMvK,EAAGv/C,EAAI4pD,EAAS,EAAI9J,EAAU0J,EACpCO,EAAMF,EAAMF,EACZK,EAAMF,EAAMF,EACZK,EAAMF,EAAMN,EACZS,EAAMF,EAAMN,EACZS,EAAMF,EAAMN,EACZS,EAAMF,EAAMN,EAEZS,EAAMF,EAAM,EAAIR,EAChBW,EAAMF,EAAM,EAAIR,EAEpB1zG,EAAE06F,QACF16F,EAAE26F,OAAOgZ,EAAKC,GACd5zG,EAAE46F,OAAOiZ,EAAKC,GACd9zG,EAAE46F,OAAOmZ,EAAKC,GACdh0G,EAAE46F,OAAOqZ,EAAKC,GACdl0G,EAAE46F,OAAOwO,EAAGlrD,EAAI0rD,EAAUyJ,EAAIjK,EAAGt/C,EAAI8/C,EAAU0J,GAC/CtzG,EAAE46F,OAAOuZ,EAAKC,GACdp0G,EAAE46F,OAAOuZ,EAAMV,EAAQW,EAAMV,GAC7B1zG,EAAE00C,QAEF10C,EAAE07F,iBAGH77C,WAAW0tD,QAA6B,qBAAZA,QAA0BA,aAAU9tG,EAkDhE2lD,QAAQ/6C,OAAOojG,iBAAkBxX,SAQjCwX,iBAAiB7uG,UAAU4mG,mBAAoB,EAO/CiI,iBAAiB7uG,UAAU+qG,YAAc,WAExC1T,QAAQr3F,UAAU+qG,YAAY1pG,MAAMf,KAAMgB,WAE1ChB,KAAKwuG,aAAe3kD,YAAY0iB,eAMjCgiC,iBAAiB7uG,UAAUqB,MAAQ,SAAS+vC,GAE3CimD,QAAQr3F,UAAUqB,MAAMA,MAAMf,KAAMgB,WAElB,MAAdhB,KAAK4nB,QAER5nB,KAAK2qG,UAAqG,EAAzFzkD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY6T,gBAAiB7T,YAAY4iB,WAAa,GACrGzsE,KAAK4qG,QAAiG,EAAvF1kD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY8mB,cAAe9mB,YAAY4iB,WAAa,KASnG8hC,iBAAiB7uG,UAAUyrG,mBAAqB,SAAStK,GAExD9J,QAAQr3F,UAAUyrG,mBAAmBpqG,MAAMf,KAAMgB,WAEjD,IAAIwlD,EAAIxmD,KAAKm1G,eAETn1G,KAAKo1G,kBAER5uD,EAAItmD,KAAKwD,IAAI8iD,EAAGxmD,KAAKq1G,uBAGlBr1G,KAAKs1G,gBAER9uD,EAAItmD,KAAKwD,IAAI8iD,EAAGxmD,KAAKu1G,qBAGtB1U,EAAKj1C,MAAMpF,EAAI,EAAIxmD,KAAKumG,aAAevmG,KAAKmtD,QAQ7CohD,iBAAiB7uG,UAAU2pG,eAAiB,SAASvoG,EAAG07D,GAGvD,IAAI87B,EAAct4F,KAAKumG,YAEnBvmG,KAAKqmG,UAER/N,EAAcp4F,KAAKwD,IAAI,EAAGwiD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY6kB,kBAAmB1uE,KAAKumG,eAG7F,IAAIiP,EAAax1G,KAAKq1G,qBAAuB/c,EACzCmd,EAAWz1G,KAAKu1G,mBAAqBjd,EACrCod,EAAY11G,KAAKqmG,QAAUrmG,KAAKm1G,eAAiB7c,EAAct4F,KAAKm1G,eACpEQ,EAAY31G,KAAK41G,cACjBC,EAAc71G,KAAKo1G,gBACnBU,EAAY91G,KAAKs1G,cACjB5K,EAAU,EAAc,EAAI1qG,KAAKwuG,aAAelW,EAAc,EAC9DqS,EAAY3qG,KAAK2qG,UAAYrS,EAC7BsS,EAAU5qG,KAAK4qG,QAAUtS,EACzBwR,EAAY9pG,KAAK+1G,iBAGjB7L,EAAK1tC,EAAIA,EAAI57D,OAAS,GAGtBo1G,EAAK,EAET,MAAOA,EAAKx5C,EAAI57D,OAAS,GAAK47D,EAAIw5C,GAAIh3D,GAAKwd,EAAI,GAAGxd,GAAKwd,EAAIw5C,GAAIprD,GAAK4R,EAAI,GAAG5R,EAE1EorD,IAGD,IAAInnE,EAAK2tB,EAAIw5C,GAAIh3D,EAAIwd,EAAI,GAAGxd,EACxBjQ,EAAKytB,EAAIw5C,GAAIprD,EAAI4R,EAAI,GAAG5R,EACxBgR,EAAO17D,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAEpC,GAAY,GAAR6sB,EAAJ,CAMA,IACI2uC,EAEAC,EAHA2J,EAAKtlE,EAAK+sB,EACLyuC,EAAM8J,EACXC,EAAKrlE,EAAK6sB,EACL0uC,EAAM8J,EACX6B,EAAQP,EAAYtB,EACpB8B,GAASR,EAAYvB,EAGrBj4F,EAAM,GAEN4tF,EAEHhpG,EAAE85F,YAAY,SAENp+B,EAAI57D,OAAS,GAGrBE,EAAE+5F,cAAc,MAGjB/5F,EAAE06F,QAEF,IAAI2a,EAAUhC,EACViC,EAAUhC,EAEd,GAAIyB,IAAgBF,EAEnB31G,KAAKq2G,YAAYv1G,EAAG07D,EAAI,GAAGxd,EAAGwd,EAAI,GAAG5R,EAAGupD,EAAIC,EAAIzJ,EAAW6K,EAAYE,EAAWhL,GAAS,OAG5F,CACC,IAAI4L,EAAY95C,EAAI,GAAGxd,EAAIi3D,EAAQ,EAAIvL,EAAUyJ,EAC7CoC,EAAY/5C,EAAI,GAAG5R,EAAIsrD,EAAQ,EAAIxL,EAAU0J,EAC7CoC,EAASh6C,EAAI,GAAGxd,EAAIi3D,EAAQ,EAAIvL,EAAUyJ,EAC1CsC,EAASj6C,EAAI,GAAG5R,EAAIsrD,EAAQ,EAAIxL,EAAU0J,EAE1CuB,GAEH70G,EAAE26F,OAAO6a,EAAWC,GAEpBr6F,EAAInL,MAAK,WAERjQ,EAAE46F,OAAO8a,EAAQC,QAKlB31G,EAAE26F,OAAO+a,EAAQC,GACjB31G,EAAE46F,OAAO4a,EAAWC,IAQtB,IAJA,IAAIG,EAAM,EACNC,EAAM,EACNC,EAAQ,EAEH1tG,EAAI,EAAGA,EAAIszD,EAAI57D,OAAS,EAAGsI,IACpC,CAEC,IAAIukC,EAAMyY,QAAQ4Z,YAAYtD,EAAItzD,GAAG81C,EAAGwd,EAAItzD,GAAG0hD,EAAG4R,EAAItzD,EAAE,GAAG81C,EAAGwd,EAAItzD,EAAE,GAAG0hD,EAAG4R,EAAItzD,EAAE,GAAG81C,EAAGwd,EAAItzD,EAAE,GAAG0hD,GAO/F,GALA8rD,EAAMl6C,EAAItzD,EAAE,GAAG81C,EAAIwd,EAAItzD,EAAE,GAAG81C,EAC5B23D,EAAMn6C,EAAItzD,EAAE,GAAG0hD,EAAI4R,EAAItzD,EAAE,GAAG0hD,EAE5BgsD,EAAQ12G,KAAKg4D,KAAKw+C,EAAMA,EAAMC,EAAMA,GAEvB,GAATC,EACJ,CACCvM,EAAMqM,EAAME,EACZtM,EAAMqM,EAAMC,EAEZ,IAAIC,EAAO1C,EAAK9J,EAAM+J,EAAK9J,EAC3B36E,IAAMzvB,KAAKwD,IAAIxD,KAAKg4D,MAAM2+C,EAAO,GAAK,GAAI,KAG1CtM,EAAO4J,EAAK9J,EACZG,EAAO4J,EAAK9J,EAEZ,IAAIwM,EAAQ52G,KAAKg4D,KAAKqyC,EAAMA,EAAMC,EAAMA,GAExC,GAAa,GAATsM,EACJ,CACCvM,GAAYuM,EACZtM,GAAYsM,EAGZ,IAAIC,EAAoB72G,KAAKwD,IAAIisB,IAAKzvB,KAAKyD,IAAI3D,KAAKumG,YAAc,IAAM,IAAM,MAC1EyQ,EAAsB,GAAPvpE,GAAYq8D,EAAa5pG,KAAKwD,IAAI,GAAKqzG,GAAqB72G,KAAKwD,IAAIisB,IAAK,KAEzFsnF,EAAOz6C,EAAItzD,EAAE,GAAG81C,EAAIwrD,EAAMkL,EAAY,EAAIsB,EAC1CE,EAAO16C,EAAItzD,EAAE,GAAG0hD,EAAI2/C,EAAMmL,EAAY,EAAIsB,EAC1CG,EAAM36C,EAAItzD,EAAE,GAAG81C,EAAIwrD,EAAMkL,EAAY,EAAIsB,EACzCI,EAAM56C,EAAItzD,EAAE,GAAG0hD,EAAI2/C,EAAMmL,EAAY,EAAIsB,EAE7C,GAAW,GAAPvpE,GAAaq8D,EAcZ,IAAY,GAARr8D,EACT,CACC,IAAI4pE,EAAMF,EAAM/C,EAAKsB,EACjB4B,EAAMF,EAAMjD,EAAKuB,EACjB6B,EAAMJ,EAAM7M,EAAMoL,EAClB8B,EAAMJ,EAAM/M,EAAMqL,EACtB50G,EAAE46F,OAAO2b,EAAKC,GACdx2G,EAAE66F,OAAOsb,EAAMC,EAAMK,EAAKC,GAE1B,SAAUx4D,EAAG4L,GAEZ1uC,EAAInL,MAAK,WAERjQ,EAAE46F,OAAO18C,EAAG4L,MAJd,CAMGusD,EAAKC,QAIRt2G,EAAE46F,OAAOub,EAAMC,GAEf,SAAUl4D,EAAG4L,GAEZ,IAAIysD,EAAMJ,EAAO7C,EAAKsB,EAClB4B,EAAMJ,EAAO/C,EAAKuB,EAClB6B,EAAMN,EAAO3M,EAAMoL,EACnB8B,EAAMN,EAAO7M,EAAMqL,EAEvBx5F,EAAInL,MAAK,WAERjQ,EAAE66F,OAAO38C,EAAG4L,EAAGysD,EAAKC,MAErBp7F,EAAInL,MAAK,WAERjQ,EAAE46F,OAAO6b,EAAKC,MAbhB,CAeGL,EAAKC,QA9CRt2G,EAAE46F,OAAOub,EAAMC,GAEf,SAAUl4D,EAAG4L,GAEZ1uC,EAAInL,MAAK,WAERjQ,EAAE46F,OAAO18C,EAAG4L,MAJd,CAMGusD,EAAKC,GAyCTjD,EAAK9J,EACL+J,EAAK9J,IAQR,GAHA2L,EAAQP,EAAYpL,EACpB4L,GAAUR,EAAYrL,EAElByL,IAAcH,EAEjB31G,KAAKq2G,YAAYv1G,EAAGopG,EAAGlrD,EAAGkrD,EAAGt/C,GAAIupD,GAAKC,EAAIxJ,EAAS6K,EAAUC,EAAWhL,GAAS,OAGlF,CACC5pG,EAAE46F,OAAOwO,EAAGlrD,EAAI0rD,EAAUL,EAAM4L,EAAQ,EAAG/L,EAAGt/C,EAAI8/C,EAAUJ,EAAM4L,EAAQ,GAE1E,IAAIuB,EAAWvN,EAAGlrD,EAAI0rD,EAAUL,EAAM4L,EAAQ,EAC1CyB,EAAWxN,EAAGt/C,EAAI8/C,EAAUJ,EAAM4L,EAAQ,EAEzCP,GAMJ70G,EAAE26F,OAAOgc,EAAUC,GAEnBx7F,EAAIzS,OAAO,EAAG,GAAG,WAEhB3I,EAAE26F,OAAOgc,EAAUC,OARpB52G,EAAE46F,OAAO+b,EAAUC,GAarB,IAASxuG,EAAIgT,EAAItb,OAAS,EAAGsI,GAAK,EAAGA,IAEpCgT,EAAIhT,KAGDysG,GAEH70G,EAAEi8B,MACFj8B,EAAEw7F,WAIFx7F,EAAE00C,QACF10C,EAAE07F,iBAIH17F,EAAEs6F,WAAU,GAGZt6F,EAAE+5F,cAAc,GAEZiP,GAEHhpG,EAAE85F,YAAY,QAGXp+B,EAAI57D,OAAS,IAIhBE,EAAE+5F,cAAc,GACZgb,IAAgBF,IAEnB70G,EAAE06F,QACFx7F,KAAKq2G,YAAYv1G,EAAG07D,EAAI,GAAGxd,EAAGwd,EAAI,GAAG5R,EAAGurD,EAASC,EAASzL,EAAW6K,EAAYE,EAAWhL,GAAS,GACrG5pG,EAAEw7F,SACFx7F,EAAEi8B,OAGC+4E,IAAcH,IAEjB70G,EAAE06F,QACFx7F,KAAKq2G,YAAYv1G,EAAGopG,EAAGlrD,EAAGkrD,EAAGt/C,GAAIupD,GAAKC,EAAIxJ,EAAS6K,EAAUC,EAAWhL,GAAS,GACjF5pG,EAAEw7F,SACFx7F,EAAEi8B,UAULwxE,iBAAiB7uG,UAAU22G,YAAc,SAASv1G,EAAG62G,EAAKC,EAAKzD,EAAIC,EAAI3zD,EAAM6tD,EAAYoH,EAAWhL,EAAST,GAE5G,IAAI4N,EAAkBnC,EAAYpH,EAC9B2H,EAAQP,EAAYtB,EAAK,EACzB8B,GAASR,EAAYvB,EAAK,EAE1B2D,GAAUpN,EAAUjqD,GAAQ0zD,EAC5B4D,GAAUrN,EAAUjqD,GAAQ2zD,EAE5BnK,EAEHnpG,EAAE26F,OAAOkc,EAAM1B,EAAQ6B,EAAQF,EAAM1B,EAAQ6B,GAI7Cj3G,EAAE46F,OAAOic,EAAM1B,EAAQ6B,EAAQF,EAAM1B,EAAQ6B,GAG9Cj3G,EAAE46F,OAAOic,EAAM1B,EAAQ4B,EAAkBC,EAAQF,EAAM1B,EAAQ2B,EAAkBE,GACjFj3G,EAAE46F,OAAOic,EAAMjN,EAAUyJ,EAAIyD,EAAMlN,EAAU0J,GAC7CtzG,EAAE46F,OAAOic,EAAM1B,EAAQ4B,EAAkBC,EAAQF,EAAM1B,EAAQ2B,EAAkBE,GACjFj3G,EAAE46F,OAAOic,EAAM1B,EAAQ6B,EAAQF,EAAM1B,EAAQ6B,IAQ9CxJ,iBAAiB7uG,UAAUq2G,eAAiB,WAE3C,OAAO/1G,KAAK8pG,WAQbyE,iBAAiB7uG,UAAU21G,mBAAqB,WAE/C,OAAOxrD,YAAY2iB,aAQpB+hC,iBAAiB7uG,UAAU61G,iBAAmB,WAE7C,OAAO1rD,YAAY2iB,aAQpB+hC,iBAAiB7uG,UAAUy1G,aAAe,WAEzC,OAAOtrD,YAAY2iB,YAAc,GAQlC+hC,iBAAiB7uG,UAAUk2G,YAAc,WAExC,OAAO,GAQRrH,iBAAiB7uG,UAAU01G,cAAgB,WAE1C,OAAQlvD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY6mB,iBAAkB7mB,YAAYC,OAASD,YAAYC,MAQrGykD,iBAAiB7uG,UAAU41G,YAAc,WAExC,OAAQpvD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4mB,eAAgB5mB,YAAYC,OAASD,YAAYC,MAEnGnJ,WAAW4tD,iBAA+C,qBAArBA,iBAAmCA,sBAAmBhuG,EA8F3F2lD,QAAQ/6C,OAAOmgG,OAAQvU,SAQvBuU,OAAO5rG,UAAUs4G,eAAiB,EAQlC1M,OAAO5rG,UAAUu4G,kBAAoB,EAOrC3M,OAAO5rG,UAAUw4G,gBAAkB,EAOnC5M,OAAO5rG,UAAUy4G,iBAAmB,EAQpC7M,OAAO5rG,UAAU04G,kBAAmB,EAOpC9M,OAAO5rG,UAAU6rG,sBAAwB,GAUzCD,OAAO5rG,UAAU24G,yBAA0B,EAS3C/M,OAAO5rG,UAAU44G,kBAAmB,EASpChN,OAAO5rG,UAAU64G,iBAA6C,GAAzBt9F,SAASkmC,cAAsBP,SAASQ,MAAa,EAAJ,EAOtFkqD,OAAO5rG,UAAU84G,UAAY,KAO7BlN,OAAO5rG,UAAU+4G,cAAe,EAQhCnN,OAAO5rG,UAAUgnG,WAAa,WAE7B,OAAO,GASR4E,OAAO5rG,UAAUinG,cAAgB,WAEhC,OAAgC,GAAzB1rF,SAASkmC,cAAqBP,SAASQ,OAQ/CkqD,OAAO5rG,UAAUknG,mBAAqB,WAErC,OAAO,GAQR0E,OAAO5rG,UAAUs3F,YAAc,WAE9B,OAAS32F,MAAML,KAAKmtD,QAAUhlD,SAASnI,KAAKmtD,QAAUntD,KAAKmtD,MAAQ,GAClD,MAAfntD,KAAK88D,SAAmBz8D,MAAML,KAAK88D,OAAO9d,KAAO3+C,MAAML,KAAK88D,OAAOlS,KAClEvqD,MAAML,KAAK88D,OAAOhX,SAAWzlD,MAAML,KAAK88D,OAAOnX,SAQnD2lD,OAAO5rG,UAAUu3F,MAAQ,SAASn2F,EAAGsQ,GAGpC,IAAIo2B,EAAIxnC,KAAKmtD,MACTnO,EAAIh/C,KAAK88D,OAAO9d,EAAIxX,EACpBojB,EAAI5qD,KAAK88D,OAAOlS,EAAIpjB,EACpBgf,EAAIxmD,KAAK88D,OAAOhX,MAAQte,EACxBzgC,EAAI/G,KAAK88D,OAAOnX,OAASne,EAE7BxnC,KAAK+oG,gBAAgBjoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GACjC/G,KAAKgpG,gBAAgBloG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEjC,IAAI2xG,EAA+B,MAAd14G,KAAK8wC,MAAiB9wC,KAAK8wC,MAAM4nE,cAAgB,KAEtE,GAAItnG,EAEyB,MAAxBpR,KAAKkT,KAAKuqB,YAAwC,MAAjBi7E,GACpC14G,KAAK24G,mBAAqBD,GAE1B53G,EAAEw+F,2BAA2Bt/F,KAAKkT,MAGnCpS,EAAE4+F,WAAW1gD,EAAG4L,EAAGpE,EAAGz/C,EAAG/G,KAAKgiE,MAAOhiE,KAAKiiE,OAAQjiE,KAAKw7C,KAAMx7C,KAAKgvD,SAChEhvD,KAAK+uG,QAAS/uG,KAAKqrG,kBAAmBrrG,KAAKkT,UAG9C,CAEC,IAAI0lG,EAAW1yD,QAAQwJ,OAAO1vD,KAAK1C,QAAU0C,KAAKyjE,SAAW5Z,YAAYue,mBAGrEywC,EAAOD,GAAY93G,aAAamgG,cAAiB,OAAS,GAC1Dj5F,EAAMhI,KAAK1C,MAEVs7G,GAAmB,QAAPC,IAEhB7wG,EAAOk+C,QAAQuL,aAAazpD,GAAK,IAGvB,QAAP6wG,GAAkB3yD,QAAQwJ,OAAO1vD,KAAK1C,SAEzC0K,EAAMk+C,QAAQyM,wBAAwB3qD,EAAK,oBAI5CA,GAAQk+C,QAAQwJ,OAAO1vD,KAAK1C,QAAU0C,KAAKo4G,kBAA2B,QAAPS,EAC9D7wG,EAAIiC,QAAQ,MAAO,SAAWjC,EAE/B,IAAIs2B,EAAMt+B,KAAKivG,cAEX3wE,GAAOurB,YAAY4rB,qBAAwBmjC,IAE9Ct6E,EAAMt+B,KAAK84G,oBAGRx6E,GAAOurB,YAAY6rB,oBAAsBp3C,GAAOurB,YAAY8rB,qBAE/Dr3C,EAAM,MAGPx9B,EAAE+Q,KAAKmtC,EAAG4L,EAAGpE,EAAGz/C,EAAGiB,EAAKhI,KAAKgiE,MAAOhiE,KAAKiiE,OAAQjiE,KAAKw7C,KAAMq9D,EAAK74G,KAAKgvD,SACrEhvD,KAAK+uG,QAAS/uG,KAAKqrG,kBAAmB/sE,GAIxCt+B,KAAK24G,kBAAoBD,GAQ1BpN,OAAO5rG,UAAU8tD,OAAS,WAEzB,GAAIxtD,KAAKkoD,SAAWloD,KAAKg3F,eAAiBh3F,KAAKy4G,cAAgBz4G,KAAKw4G,WAAax4G,KAAK1C,QACpF4oD,QAAQwJ,OAAO1vD,KAAK1C,QAAU0C,KAAKyjE,SAAW5Z,YAAYue,oBAE3D,GAA0B,OAAtBpoE,KAAKkT,KAAKy8C,WAAsB3vD,KAAK2mG,iBAAoB/lD,SAASuB,OAgBtE,CACC,IAAIyhB,EAAS5jE,KAAK0nG,eAEJ,MAAV9jC,GAAuC,MAArBA,EAAO87B,YACS,MAArC97B,EAAO07B,4BAEPt/F,KAAKi3F,MAAMrzB,GAAQ,GACnB5jE,KAAK4nG,cAAchkC,GACnB5jE,KAAKonG,qBAKLrQ,QAAQr3F,UAAU8tD,OAAOzsD,MAAMf,KAAMgB,gBA3BtChB,KAAK+4G,WAAW/4G,KAAKkT,KAAqB,MAAdlT,KAAK8wC,OAA4C,MAA3B9wC,KAAK8wC,MAAM6sB,KAAKq7C,SAE9Dp4D,SAASE,QAAmC,MAAzB7lC,SAASkmC,cAAwBlmC,SAASkmC,cAAgB,GAEhFnhD,KAAKi5G,mBAILj5G,KAAKk5G,sBAGNl5G,KAAKonG,yBAsBNrQ,QAAQr3F,UAAU8tD,OAAOzsD,MAAMf,KAAMgB,WAEjCklD,QAAQwJ,OAAO1vD,KAAK1C,QAAU0C,KAAKyjE,SAAW5Z,YAAYue,mBAE7DpoE,KAAKw4G,UAAYx4G,KAAK1C,MAItB0C,KAAKw4G,UAAY,MAUpBlN,OAAO5rG,UAAU+qG,YAAc,WAE9B1T,QAAQr3F,UAAU+qG,YAAY1pG,MAAMf,KAAMgB,WAE1ChB,KAAK4zD,MAAQ,QACb5zD,KAAKgiE,MAAQnY,YAAYqY,aACzBliE,KAAKiiE,OAASpY,YAAYuY,aAC1BpiE,KAAKyuG,OAAS5kD,YAAY8Y,mBAC1B3iE,KAAKygD,KAAOoJ,YAAY6Y,iBACxB1iE,KAAKg5F,UAAYnvC,YAAYmiB,kBAC7BhsE,KAAK0qG,QAAU,EACf1qG,KAAK0uG,WAAa,EAClB1uG,KAAK2uG,aAAe,EACpB3uG,KAAK4uG,cAAgB,EACrB5uG,KAAK6uG,YAAc,EACnB7uG,KAAKikG,YAAa,SACXjkG,KAAK8uG,kBACL9uG,KAAKukE,OACZvkE,KAAKivG,cAAgBplD,YAAYgiB,8BAC1B7rE,KAAKujG,QAYb+H,OAAO5rG,UAAUqB,MAAQ,SAAS+vC,GAEjC,IAAIp0B,EAAM1c,KAAK0qG,QACf3T,QAAQr3F,UAAUqB,MAAMA,MAAMf,KAAMgB,WAElB,MAAdhB,KAAK4nB,QAER5nB,KAAKg5F,UAAY9yC,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYsoB,gBAAiBnyE,KAAKg5F,WAChFh5F,KAAKyuG,OAASvoD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYooB,iBAAkBjyE,KAAKyuG,QAC9EzuG,KAAKygD,KAAOyF,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqoB,eAAgBlyE,KAAKygD,MAC1EzgD,KAAK4zD,MAAQ1N,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYmoB,gBAAiBhyE,KAAK4zD,OAC5E5zD,KAAKgiE,MAAQ9b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY8kB,YAAa3uE,KAAKgiE,OACxEhiE,KAAKiiE,OAAS/b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+kB,qBAAsB5uE,KAAKiiE,QAClFjiE,KAAK0qG,QAAUr1E,SAAS6wB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4nB,cAAezxE,KAAK0qG,UACrF1qG,KAAK0uG,WAAar5E,SAAS6wB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY6nB,kBAAmB1xE,KAAK0uG,WAAahyF,IAAQ1c,KAAK0qG,QACtH1qG,KAAK2uG,aAAet5E,SAAS6wB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYgoB,oBAAqB7xE,KAAK2uG,aAAejyF,IAAQ1c,KAAK0qG,QAC5H1qG,KAAK4uG,cAAgBv5E,SAAS6wB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+nB,qBAAsB5xE,KAAK4uG,cAAgBlyF,IAAQ1c,KAAK0qG,QAC/H1qG,KAAK6uG,YAAcx5E,SAAS6wB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY8nB,mBAAoB3xE,KAAK6uG,YAAcnyF,IAAQ1c,KAAK0qG,QACzH1qG,KAAKikG,WAAa/9C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+T,iBAAkB59D,KAAKikG,YAClFjkG,KAAK8uG,WAAa5oD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY8lB,4BAA6B3vE,KAAK8uG,YAC7F9uG,KAAKukE,OAASre,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+lB,wBAAyB5vE,KAAKukE,QACrFvkE,KAAKivG,cAAgB/oD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYujB,qBAAsBvjB,YAAYgiB,wBAChG7rE,KAAK0tD,QAAUxH,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYsjB,mBAAoB,KAC5EntE,KAAKkvG,gBAGNlvG,KAAKi8D,MAAQ,KACbj8D,KAAKg8D,MAAQ,MAWdsvC,OAAO5rG,UAAUo5G,iBAAmB,WAGnC,IAAInpF,EAAM,4EAA4EhxB,KAAKqB,KAAK1C,OAGhG,OAAe,MAAPqyB,GAAeA,EAAI/uB,OAAS,GAAK+uB,EAAI,GAAK,IACjDk6B,YAAY8rB,mBAAqB9rB,YAAY6rB,oBAQ/C41B,OAAO5rG,UAAU0nG,kBAAoB,WAEpC,IAAIl0F,EAAOlT,KAAKkT,KAChBlT,KAAKgmG,YAAchmG,KAAK88D,OAAOt4C,QAC/B,IAAIi/E,EAAMzjG,KAAKqrG,kBAEXtkG,EAAmB,MAAd/G,KAAK4nB,MAAiBs+B,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cAAgB,KACtH76D,EAAmB,MAAdrH,KAAK4nB,MAAiBs+B,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAAgB,KAEnI,IAAKpiE,KAAKs4G,kBAA4B,MAARplG,GAAiC,QAAjBlT,KAAKgvD,YAAwBhvD,KAAK+uG,UAC9E/uG,KAAKq4G,yBAA2BtxG,GAAK8iD,YAAYqY,cAAgB76D,GAAKwiD,YAAYuY,cACpF,CACC,IAAI09B,EAAK,KACLC,EAAK,KAET,GAA4B,MAAxB7sF,EAAK8yD,gBAER,GAAuB,MAAnB9yD,EAAKuqB,YAAoD,MAA9BvqB,EAAKuqB,WAAWA,YACP,iBAAvCvqB,EAAKuqB,WAAWA,WAAWkyB,SAE3Bz8C,EAAOA,EAAKuqB,WAAWA,WACvBqiE,EAAKzqE,SAASniB,EAAKqxB,aAAa,UAAYvkC,KAAKmtD,MACjD4yC,EAAK1qE,SAASniB,EAAKqxB,aAAa,WAAavkC,KAAKmtD,WAIlD,IAEC,IAAItsD,EAAIqS,EAAK4tF,UAgBb,YAb0B,iBAAf9gG,KAAU,OAA6C,GAA5BkmD,QAAQzjB,KAAKziC,KAAK1C,OAEvD0C,KAAKgmG,YAAc,KAEA,GAAXnlG,EAAEilD,OAA0B,GAAZjlD,EAAE8kD,OAE1B3lD,KAAKgmG,YAAc,KAInBhmG,KAAKgmG,YAAc,IAAIn7C,YAAYhqD,EAAEm+C,EAAGn+C,EAAE+pD,EAAG/pD,EAAEilD,MAAOjlD,EAAE8kD,SAK1D,MAAO15C,QAOT,CACC,IAAIu5C,EAAoB,MAAdxlD,KAAK8wC,MAAiB9wC,KAAK8wC,MAAM6sB,KAAKq7C,QAAU,KAG1D,GAAwB,MAApBh5G,KAAKm0D,aAA4C,MAArBn0D,KAAKkuC,aAEpC4xD,EAAK9/F,KAAKm0D,YAAcn0D,KAAKmtD,MAC7B4yC,EAAK//F,KAAKkuC,aAAeluC,KAAKmtD,UAG/B,CAGW,MAAN3H,IAEHxlD,KAAKygG,WAAWj7C,GAChBxlD,KAAK+4G,WAAWvzD,GAAI,GACpBxlD,KAAKm5G,gBAAgB3zD,GAErBtyC,EAAOsyC,GAGR,IAAIy6C,EAAU/sF,EAEd,GAA6B,GAAzB+H,SAASkmC,cAAsBP,SAASQ,MAuCb,MAAtB6+C,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEzDswC,EAAUA,EAAQxiE,gBAxCnB,CACC,IAAI+oB,EAAItmD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,MAAQ9lD,KAAKmtD,OAE5C,GAAIntD,KAAKw7C,MAAQgL,EAAI,GAKpB,GAHAtzC,EAAK0U,MAAMu4E,SAAWt2C,YAAYiiB,UAClC54D,EAAK0U,MAAMo7C,WAAa,SAEG,cAAvB9vD,EAAK0U,MAAMu4E,SACf,CAEC,IAAIiZ,EAAOnZ,EAAQ38C,qBAAqB,OAEpC81D,EAAKx4G,OAAS,IAEjBq/F,EAAUmZ,EAAKA,EAAKx4G,OAAS,IAG9Bk/F,EAAKG,EAAQ9rC,YAAc,EAC3BilD,EAAOp5G,KAAKkT,KAAKowC,qBAAqB,OAElCtjD,KAAK+uG,UAERjP,EAAK5/F,KAAKyD,IAAI6iD,EAAGs5C,IAIdsZ,EAAKx4G,OAAS,IAEjBw4G,EAAKA,EAAKx4G,OAAS,GAAGgnB,MAAMk+B,MAAQg6C,EAAK,YAM3C5sF,EAAK0U,MAAMo7C,WAAa,SAQ1BhjE,KAAKm0D,YAAc8rC,EAAQ9rC,YAAcn0D,KAAKu4G,iBAC9Cv4G,KAAKkuC,aAAe+xD,EAAQ/xD,aAE5B4xD,EAAK9/F,KAAKm0D,YAAcn0D,KAAKmtD,MAC7B4yC,EAAK//F,KAAKkuC,aAAeluC,KAAKmtD,OAItB,MAAN2yC,GAAoB,MAANC,IAEjB//F,KAAKgmG,YAAc,IAAIn7C,YAAY7qD,KAAK88D,OAAO9d,EAC9Ch/C,KAAK88D,OAAOlS,EAAGk1C,EAAIC,IAItB,GAAwB,MAApB//F,KAAKgmG,YAER,GAAW,GAAPvC,EACJ,CAEC,IAAI5C,EAAO36C,QAAQsT,eAAe,IAAI3O,YACrC7qD,KAAKujG,OAAOvkD,EAAIh/C,KAAKgmG,YAAYlgD,MACjC9lD,KAAKujG,OAAO34C,EAAI5qD,KAAKgmG,YAAYrgD,OACjC3lD,KAAKgmG,YAAYlgD,MAAO9lD,KAAKgmG,YAAYrgD,QACzC89C,EAAK,IAAI94C,QAAQ,EAAG,IAErB3qD,KAAKq5G,qBAAuBxuD,YAAYoB,cAAcjsD,KAAKgmG,aAC3DhmG,KAAKq5G,qBAAqBr6D,GAAKh/C,KAAKujG,OAAOvkD,EAAIh/C,KAAKq5G,qBAAqBvzD,MACzE9lD,KAAKq5G,qBAAqBzuD,GAAK5qD,KAAKujG,OAAO34C,EAAI5qD,KAAKq5G,qBAAqB1zD,OAEzE3lD,KAAKgmG,YAAYhnD,GAAK6hD,EAAK7hD,EAC3Bh/C,KAAKgmG,YAAYp7C,GAAKi2C,EAAKj2C,EAC3B5qD,KAAKgmG,YAAYlgD,MAAQ+6C,EAAK/6C,MAC9B9lD,KAAKgmG,YAAYrgD,OAASk7C,EAAKl7C,YAI/B3lD,KAAKgmG,YAAYhnD,GAAKh/C,KAAKujG,OAAOvkD,EAAIh/C,KAAKgmG,YAAYlgD,MACvD9lD,KAAKgmG,YAAYp7C,GAAK5qD,KAAKujG,OAAO34C,EAAI5qD,KAAKgmG,YAAYrgD,OACvD3lD,KAAKq5G,qBAAuB,MAU/B/N,OAAO5rG,UAAU8pG,iBAAmB,WAEnC,OAAO,GAQR8B,OAAO5rG,UAAU2rG,gBAAkB,WAElC,OAAsB,MAAdrrG,KAAK8wC,OAAqC,MAApB9wC,KAAK8wC,MAAMoc,MAAiBltD,KAAK8wC,MAAMoc,MAAMm+C,kBAAoB,GAShGC,OAAO5rG,UAAU6nG,sBAAwB,WAExC,OAAQvnG,KAAKikG,YAA4B,MAAdjkG,KAAK8wC,OAAiB9wC,KAAK8wC,MAAM6sB,KAAKvR,MAAMhmC,MAAMuvE,SAAS31F,KAAK8wC,MAAMkc,OAQlGs+C,OAAO5rG,UAAUspG,gBAAkB,SAASloG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEvDgwF,QAAQr3F,UAAUspG,gBAAgBjoG,MAAMf,KAAMgB,WAE9CF,EAAEg6F,aAAa96F,KAAK4zD,OACpB9yD,EAAEi6F,uBAAuB/6F,KAAK8uG,YAC9BhuG,EAAEk6F,mBAAmBh7F,KAAKukE,QAC1BzjE,EAAEo6F,cAAcl7F,KAAKyuG,QACrB3tG,EAAEm6F,YAAYj7F,KAAKygD,MACnB3/C,EAAEq6F,aAAan7F,KAAKg5F,YAQrBsS,OAAO5rG,UAAUooG,mBAAqB,WAErC9nG,KAAKkT,KAAK0U,MAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,GAAK,KACnDh/C,KAAKkT,KAAK0U,MAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,GAAK,KAClD5qD,KAAKkT,KAAK0U,MAAMk+B,MAAQ,MACxB9lD,KAAKkT,KAAK0U,MAAM+9B,OAAS,MACzB3lD,KAAKkT,KAAK0U,MAAMonC,SAAW,WAQ5Bs8C,OAAO5rG,UAAUynG,gBAAkB,WAElC,IAAIv/E,EAAQ5nB,KAAKkT,KAAK0U,MAGtBA,EAAMo7C,WAAa,SACnBp7C,EAAMonC,SAAW,GACjBpnC,EAAMk+B,MAAQ,GACdl+B,EAAM+9B,OAAS,GAEf3lD,KAAKs5G,cACLt5G,KAAKygG,WAAWzgG,KAAKkT,MACrBlT,KAAK+4G,WAAW/4G,KAAKkT,KAAqB,MAAdlT,KAAK8wC,OAA4C,MAA3B9wC,KAAK8wC,MAAM6sB,KAAKq7C,SAElEh5G,KAAKm0D,YAAc,KACnBn0D,KAAKkuC,aAAe,KAEhB0S,SAASE,QAAmC,MAAzB7lC,SAASkmC,cAAwBlmC,SAASkmC,cAAgB,GAEhFnhD,KAAKi5G,mBAILj5G,KAAKk5G,uBASP5N,OAAO5rG,UAAUw5G,oBAAsB,WAEtC,IAAIvf,EAAQ35F,KAAKqrG,kBACbzjF,EAAQ5nB,KAAKkT,KAAK0U,MAClBinB,EAAK7uC,KAAKujG,OAAOvkD,EACjBjQ,EAAK/uC,KAAKujG,OAAO34C,EAER,GAAT+uC,GAEHzzC,QAAQ2I,iBAAiBjnC,EAAO,kBAA0B,KAALinB,EAAY,KAAmB,KAALE,EAAY,KAC3FmX,QAAQ2I,iBAAiBjnC,EAAO,YAAa,aAAqB,IAALinB,EAAY,KAAkB,IAALE,EAAY,WACtF/uC,KAAKmtD,MAAQ,YAAcwsC,EAAQ,UAI/CzzC,QAAQ2I,iBAAiBjnC,EAAO,kBAAmB,SACnDs+B,QAAQ2I,iBAAiBjnC,EAAO,YAAa,SAAW5nB,KAAKmtD,MAAQ,cAC/C,IAALte,EAAY,KAAkB,IAALE,EAAY,OAGvDnnB,EAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAI9+C,KAAKD,KAAK4uC,GAAwB,QAAjB7uC,KAAKgvD,UAC5C,SAAjBhvD,KAAKgvD,SAAuB,EAAI,KAAO,KACxCpnC,EAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAI7b,GAAwB,QAAjB/uC,KAAKgvD,SAAsB,EAAI,IAAM,KAE/EhvD,KAAK0tD,QAAU,IAElB9lC,EAAM8lC,QAAU1tD,KAAK0tD,QAAU,IAI/B9lC,EAAM8lC,QAAU,IASlB49C,OAAO5rG,UAAUy5G,gBAAkB,SAAShyD,GAE3C,GAAIjB,QAAQwJ,OAAO1vD,KAAK1C,OAEvB6pD,EAAI5pB,UAAYv9B,KAAK1C,MAAMy1D,cAG5B,CACC,IAAI/qD,EAAMhI,KAAK1C,MAEX0C,KAAKyjE,SAAW5Z,YAAYue,qBAG/BpgE,EAAMk+C,QAAQuL,aAAazpD,GAAK,IAIjCA,EAAMk+C,QAAQyM,wBAAwB3qD,EAAK,qBAC3CA,EAAOhI,KAAqB,iBAAIgI,EAAIiC,QAAQ,MAAO,SAAWjC,EAC9DA,EAAM,sDAAwDA,EAAM,SAEpEm/C,EAAI5pB,UAAYv1B,IASlBsjG,OAAO5rG,UAAUu5G,iBAAmB,WAEnC,IAAIrxF,EAAQ5nB,KAAKkT,KAAK0U,MAClBinB,EAAK7uC,KAAKujG,OAAOvkD,EACjBjQ,EAAK/uC,KAAKujG,OAAO34C,EACjBpjB,EAAIxnC,KAAKmtD,MAGbjH,QAAQ+G,WAAWjtD,KAAKkT,KAAMlT,KAAK0tD,SAGnC,IAAIoyC,EAAK,EACLC,EAAK,EACLv6C,EAAoB,MAAdxlD,KAAK8wC,MAAiB9wC,KAAK8wC,MAAM6sB,KAAKq7C,QAAU,KACtD/Y,EAAUjgG,KAAKkT,KAGnB,GAAU,MAANsyC,EACJ,CACCA,EAAG59B,MAAMonC,SAAW,GACpBxJ,EAAG59B,MAAM+9B,OAAS,GAClBH,EAAG59B,MAAMk+B,MAAQ,GAEjB9lD,KAAKygG,WAAWj7C,GAChBxlD,KAAK+4G,WAAWvzD,GAAI,GACpBxlD,KAAKm5G,gBAAgB3zD,GAErB,IAAIgB,EAAItmD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,MAAQ9lD,KAAKmtD,OAExCntD,KAAKw7C,MAAQgL,EAAI,GAEpBhB,EAAG59B,MAAMo7C,WAAa,SACtBxd,EAAG59B,MAAMu4E,SAAWt2C,YAAYiiB,UAChCg0B,EAAKt5C,EAEDxmD,KAAK+uG,UAERjP,EAAK5/F,KAAKyD,IAAIm8F,EAAI9/F,KAAK88D,OAAOhX,QAG/BN,EAAG59B,MAAMk+B,MAAQg6C,EAAK,MAItBt6C,EAAG59B,MAAMo7C,WAAa,SAGvBi9B,EAAUz6C,EAEgB,MAAtBy6C,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEpDswC,EAAUA,EAAQxiE,WAEdz9B,KAAKw7C,MAA6B,cAArBgK,EAAG59B,MAAMu4E,WAEzBF,EAAQr4E,MAAMk+B,MAAQ,UAKnB9lD,KAAK+uG,SAAW/uG,KAAKw7C,MAAQgL,EAAI,IAErCs5C,EAAKG,EAAQ9rC,YAAcn0D,KAAKu4G,iBAChC/yD,EAAG59B,MAAMk+B,MAAQg6C,EAAK,MAGvBC,EAAKE,EAAQ/xD,aAAe,EAExB0S,SAASM,WAA4B,MAAflhD,KAAKukE,QAAkBvkE,KAAKukE,QAAU1a,YAAYC,OAE3Ei2C,GAAM,QAGuB,MAAtBE,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEzDswC,EAAUA,EAAQxiE,WAClBsiE,EAAKE,EAAQ/xD,cAGd4xD,EAAKG,EAAQ9rC,YAAcn0D,KAAKu4G,iBAE5Bv4G,KAAK+uG,UAERhP,EAAK7/F,KAAKyD,IAAIo8F,EAAI//F,KAAK88D,OAAOnX,SAG3Ba,EAAIxmD,KAAK88D,OAAOhX,MAAQte,EAA5B,IACIzgC,EAAI/G,KAAK88D,OAAOnX,OAASne,EAGR,QAAjBxnC,KAAKgvD,UAER+wC,EAAKh5F,EACL+4F,EAAKt5C,GAEoB,SAAjBxmD,KAAKgvD,WAEb+wC,EAAKE,EAAQ13C,aACbu3C,EAAKt5C,GAINxmD,KAAKm0D,YAAc2rC,EACnB9/F,KAAKkuC,aAAe6xD,EAGhBn/C,SAASM,YAAclhD,KAAK+uG,SAA6B,SAAjB/uG,KAAKgvD,UAAuBjoD,EAAI,IAE3EA,EAAI7G,KAAKyD,IAAIoD,EAAGg5F,GAChBn4E,EAAM+9B,OAASzlD,KAAKm8D,MAAMt1D,GAAK,MAI/BA,EAAIg5F,EAGgB,QAAjB//F,KAAKgvD,UAAuC,SAAjBhvD,KAAKgvD,WAE/BhvD,KAAK+uG,UAERjP,EAAK5/F,KAAKyD,IAAI6iD,EAAGs5C,IAGlBt5C,EAAIs5C,GAGCl/C,SAASM,WAAalhD,KAAK+uG,SAAY/uG,KAAKw7C,QAEhD5zB,EAAMk+B,MAAQ5lD,KAAKm8D,MAAM7V,GAAK,OAIhCz/C,GAAKygC,EACLgf,GAAKhf,EAGL,IAAImvB,EAAM32D,KAAKqrG,mBAAqBnrG,KAAKu2D,GAAK,KAG1CitC,EAAWx7F,WAAWA,WAAWhI,KAAKs3D,IAAIb,IAAMslC,QAAQ,IACxD0H,EAAWz7F,WAAWA,WAAWhI,KAAKw3D,KAAKf,IAAMslC,QAAQ,IAE7DtlC,GAAO,EAAIz2D,KAAKu2D,GAEZE,EAAM,IAETA,GAAO,EAAIz2D,KAAKu2D,IAGjBE,GAAOz2D,KAAKu2D,GAERE,EAAMz2D,KAAKu2D,GAAK,IAEnBE,EAAMz2D,KAAKu2D,GAAKE,GAGjB,IAAIa,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,KAAKf,GAEhB2B,EAAK9R,IAAM3X,EAAK,IAChB0pB,EAAKxxD,IAAMgoC,EAAK,IAEhB60D,GAAW78F,EAAIA,EAAIywD,EAAMhR,EAAIkR,GAAO,EAAIisC,EAAWrrC,EAAKorC,EAAWnrC,EACnEsrC,GAAYr9C,EAAIA,EAAIgR,EAAMzwD,EAAI2wD,GAAO,EAAIgsC,EAAWprC,EAAKqrC,EAAWprC,EAExE,GAAW,GAAP5B,EACJ,CACC,IAAIp5D,EAAI,gDAAkDmmG,EAAW,SACpEC,EAAW,UAAaA,EAAY,SAAWD,EAAW,gCAEvC,MAAhB97E,EAAM2M,QAAkB3M,EAAM2M,OAAO3zB,OAAS,EAEjDgnB,EAAM2M,QAAU,IAAMh3B,EAItBqqB,EAAM2M,OAASh3B,EAKbwxC,EAAK,EAEY,QAAjB/uC,KAAKgvD,UAAsBpO,SAASM,YAEnClhD,KAAKiiE,QAAUpY,YAAY0rB,UAE9BxmC,GAAM,EAEE/uC,KAAKiiE,QAAUpY,YAAYwY,aAEnCtzB,GAAM,EAINA,GAAM,GAIRnnB,EAAMm7C,KAAOv7B,EACb5f,EAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAI6kD,EAAWr9C,EAAI,GAAK,KAC5D5+B,EAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAIg5C,EAAU78F,EAAI,EAAIgoC,GAAM,MAQhEu8D,OAAO5rG,UAAU45G,YAAc,WAE9B,GAAIpzD,QAAQwJ,OAAO1vD,KAAK1C,OAEvB0C,KAAKkT,KAAKqqB,UAAY,GACtBv9B,KAAKkT,KAAKwlB,YAAY14B,KAAK1C,WAG5B,CACC,IAAI0K,EAAMhI,KAAK1C,MAEX0C,KAAKyjE,SAAW5Z,YAAYue,qBAE/BpgE,EAAMk+C,QAAQuL,aAAazpD,GAAK,IAIjCA,EAAMk+C,QAAQyM,wBAAwB3qD,EAAK,mBAC3CA,EAAOhI,KAAqB,iBAAIgI,EAAIiC,QAAQ,MAAO,SAAWjC,EAC9D,IAAIihG,EAAyB,MAAnBjpG,KAAK8uG,YAAsB9uG,KAAK8uG,YAAcjlD,YAAYC,KAAQ9pD,KAAK8uG,WAAa,KAC1FyK,EAAqB,MAAfv5G,KAAKukE,QAAkBvkE,KAAKukE,QAAU1a,YAAYC,KAAQ9pD,KAAKukE,OAAS,KAElF,GAAqB,QAAjBvkE,KAAKgvD,UAAuC,SAAjBhvD,KAAKgvD,SAEzB,MAANi6C,IAEHjpG,KAAKkT,KAAK0U,MAAM4lE,gBAAkByb,GAGzB,MAANsQ,IAEHv5G,KAAKkT,KAAK0U,MAAM28C,OAAS,aAAeg1C,OAI1C,CACC,IAAI50E,EAAM,GAEA,MAANskE,IAEHtkE,GAAO,oBAAsBuhB,QAAQuL,aAAaw3C,GAAM,KAG/C,MAANsQ,IAEH50E,GAAO,oBAAsBuhB,QAAQuL,aAAa8nD,GAAM,KAMzD,IAAIla,EAAMx1C,YAAgC,qBAAK7pD,KAAKygD,KAAOoJ,YAAYiZ,YAAe,KACrFjZ,YAAYiZ,YACb96D,EAAM,sBAAwB28B,EAAM,iHACmB06D,EAAK,KAAOr3F,EAAM,SAG1EhI,KAAKkT,KAAKqqB,UAAYv1B,EAGtB,IAAIoxG,EAAOp5G,KAAKkT,KAAKowC,qBAAqB,OAE1C,GAAI81D,EAAKx4G,OAAS,EAClB,CACC,IAAI09B,EAAMt+B,KAAKivG,cAEX3wE,GAAOurB,YAAY4rB,qBAAuBz1E,KAAKyjE,SAAW5Z,YAAYue,qBAEzE9pC,EAAMt+B,KAAK84G,oBAGRx6E,GAAOurB,YAAY6rB,oBAAsBp3C,GAAOurB,YAAY8rB,mBAE/DyjC,EAAKA,EAAKx4G,OAAS,GAAGs3B,aAAa,MAAOoG,GAI1C86E,EAAKA,EAAKx4G,OAAS,GAAGm9B,gBAAgB,UAW1CutE,OAAO5rG,UAAU+gG,WAAa,SAASvtF,GAEtC,IAAI0U,EAAQ1U,EAAK0U,MAEjBA,EAAMi7C,WAAchZ,YAAgC,qBAAK7pD,KAAKygD,KAAOoJ,YAAYiZ,YAAe,KAAOjZ,YAAYiZ,YACnHl7C,EAAM26C,SAAWviE,KAAKygD,KAAO,KAC7B74B,EAAM46C,WAAaxiE,KAAKyuG,OACxB7mF,EAAM69B,cAAgB,MACtB79B,EAAMgsC,MAAQ5zD,KAAK4zD,OAEd5zD,KAAKg5F,UAAYnvC,YAAY6pB,YAAc7pB,YAAY6pB,UAE3D9rD,EAAMo5E,WAAa,OAInBp5E,EAAMo5E,WAAa,IAGfhhG,KAAKg5F,UAAYnvC,YAAY8pB,cAAgB9pB,YAAY8pB,YAE7D/rD,EAAMoxE,UAAY,SAIlBpxE,EAAMoxE,UAAY,IAGdh5F,KAAKg5F,UAAYnvC,YAAY+pB,iBAAmB/pB,YAAY+pB,eAEhEhsD,EAAMisC,eAAiB,YAIvBjsC,EAAMisC,eAAiB,GAGpB7zD,KAAKgiE,OAASnY,YAAYqY,aAE7Bt6C,EAAMmsE,UAAY,SAEV/zF,KAAKgiE,OAASnY,YAAYsY,YAElCv6C,EAAMmsE,UAAY,QAIlBnsE,EAAMmsE,UAAY,QASpBuX,OAAO5rG,UAAUq5G,WAAa,SAAS7lG,EAAMsmG,GAE5C,IAAIhzD,EAAItmD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,MAAQ9lD,KAAKmtD,QACpDpmD,EAAI7G,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOnX,OAAS3lD,KAAKmtD,QACrDvlC,EAAQ1U,EAAK0U,MA+BjB,GA3BI5nB,KAAK+uG,SAERnnF,EAAMonC,SAAW,SAEZpO,SAASM,UAObt5B,EAAMk+B,MAAQU,EAAI,MALlB5+B,EAAMg4E,UAAY74F,EAAI,KACtB6gB,EAAMi4E,SAAWr5C,EAAI,OAOG,QAAjBxmD,KAAKgvD,UAEbpnC,EAAMk+B,MAASU,EAAI,EAAK,KACxB5+B,EAAM+9B,OAAU5+C,EAAI,EAAK,KACzB6gB,EAAMonC,SAAW,UAEQ,SAAjBhvD,KAAKgvD,WAEbpnC,EAAMk+B,MAASU,EAAI,EAAK,KACxB5+B,EAAMg4E,UAAa74F,EAAI,EAAK,KAC5B6gB,EAAMonC,SAAW,UAGdhvD,KAAKw7C,MAAQgL,EAAI,GAMpB,GAJA5+B,EAAMu4E,SAAWt2C,YAAYiiB,UAC7BlkD,EAAMo7C,WAAa,SACnBp7C,EAAMk+B,MAAQU,EAAI,KAEdgzD,GAA+B,QAAjBx5G,KAAKgvD,UAAuC,SAAjBhvD,KAAKgvD,SAClD,CACC,IAAIixC,EAAU/sF,EAEY,MAAtB+sF,EAAQxiE,YAAqD,OAA/BwiE,EAAQxiE,WAAWkyB,WAEpDswC,EAAUA,EAAQxiE,WAES,cAAvBvqB,EAAK0U,MAAMu4E,WAEdF,EAAQr4E,MAAMk+B,MAAQ,SAIxB,IAAIn2B,EAAMswE,EAAQ9rC,YAGlB,GAAW,GAAPxkC,EACJ,CACC,IAAIkkF,EAAO3gG,EAAKujB,WAChBvjB,EAAK0U,MAAMygC,WAAa,SACxBptC,SAASgzB,KAAKvV,YAAYxlB,GAC1Byc,EAAMswE,EAAQ9rC,YACdjhD,EAAK0U,MAAMygC,WAAa,GACxBwrD,EAAKn7E,YAAYxlB,GAGlByc,GAAO,EAEH3vB,KAAK+uG,UAERp/E,EAAMzvB,KAAKyD,IAAIgsB,EAAK62B,IAGrB5+B,EAAMk+B,MAAQn2B,EAAM,WAKrB/H,EAAMo7C,WAAa,UASrBsoC,OAAO5rG,UAAUwvG,aAAe,WAE/BlvG,KAAKujG,OAASr9C,QAAQ6b,oBAAoB/hE,KAAKgiE,MAAOhiE,KAAKiiE,SAQ5DqpC,OAAO5rG,UAAU+5G,WAAa,WAE7B,IAAI5qE,EAAK,EACLE,EAAK,EA4BT,OAxBCF,EAFG7uC,KAAKgiE,OAASnY,YAAYqY,cAEvBliE,KAAK6uG,YAAc7uG,KAAK2uG,cAAgB,EAEtC3uG,KAAKgiE,OAASnY,YAAYsY,aAE5BniE,KAAK2uG,aAAe3uG,KAAKm4G,iBAI1Bn4G,KAAK6uG,YAAc7uG,KAAKk4G,gBAK7BnpE,EAFG/uC,KAAKiiE,QAAUpY,YAAYuY,cAExBpiE,KAAK0uG,WAAa1uG,KAAK4uG,eAAiB,EAEtC5uG,KAAKiiE,QAAUpY,YAAYwY,cAE7BriE,KAAK4uG,cAAgB5uG,KAAKi4G,kBAI3Bj4G,KAAK0uG,WAAa1uG,KAAKg4G,eAGtB,IAAIrtD,QAAQ9b,EAAIE,IAGxB4R,WAAW2qD,OAA2B,qBAAXA,OAAyBA,YAAS/qG,EAuB7D2lD,QAAQ/6C,OAAOgkG,WAAYpB,SAO3BoB,WAAWzvG,UAAUwrG,YAAc,WAElC,OAAO,GAQRiE,WAAWzvG,UAAUg0G,WAAa,SAAS5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEtD,IAAIijG,EAAU9jD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,EAClGtsE,KAAK+pG,UAAUjpG,EAAG,CAAC,IAAI6pD,QAAQ,EAAG,GAAI,IAAIA,QAAQnE,EAAG,GAAMz/C,GAAI,IAAI4jD,QAAQ,EAAG5jD,IAAK/G,KAAK8pG,UAAWE,GAAS,IAG7GrpD,WAAWwuD,WAAmC,qBAAfA,WAA6BA,gBAAa5uG,EAuBzE2lD,QAAQ/6C,OAAOikG,UAAWrB,SAO1BqB,UAAU1vG,UAAUg0G,WAAa,SAAS5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAErD,IAAIijG,EAAU9jD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cAAevnB,YAAYyiB,cAAgB,EAClGtsE,KAAK+pG,UAAUjpG,EAAG,CAAC,IAAI6pD,QAAQ,IAAOnE,EAAG,GAAI,IAAImE,QAAQ,IAAOnE,EAAG,GAAI,IAAImE,QAAQnE,EAAG,GAAMz/C,GAAI,IAAI4jD,QAAQ,IAAOnE,EAAGz/C,GACnG,IAAI4jD,QAAQ,IAAOnE,EAAGz/C,GAAI,IAAI4jD,QAAQ,EAAG,GAAM5jD,IAAK/G,KAAK8pG,UAAWE,GAAS,IAGjGrpD,WAAWyuD,UAAiC,qBAAdA,UAA4BA,eAAY7uG,EAqCtE2lD,QAAQ/6C,OAAOkkG,OAAQtY,SAOvBsY,OAAO3vG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAExD,IAAI2yG,EAAM9uD,EAAI7jD,EAAI,EAElBjG,EAAE06F,QACF16F,EAAE26F,OAAOz8C,EAAG06D,GACZ54G,EAAE46F,OAAO18C,EAAIwH,EAAGkzD,GAChB54G,EAAEw7F,UAGH37C,WAAW0uD,OAA2B,qBAAXA,OAAyBA,YAAS9uG,EAyC7D2lD,QAAQ/6C,OAAOmkG,aAAcrB,kBAO7BqB,aAAa5vG,UAAUi6G,qBAAsB,EAO7CrK,aAAa5vG,UAAUknG,mBAAqB,WAE3C,OAAO,GAoBR0I,aAAa5vG,UAAUqB,MAAQ,SAAS+vC,GAEvCimD,QAAQr3F,UAAUqB,MAAMA,MAAMf,KAAMgB,WAEpChB,KAAKu8F,KAAO,KACZv8F,KAAKs8F,OAAS,KACdt8F,KAAK49F,SAAW,KAEE,MAAd59F,KAAK4nB,QAER5nB,KAAK25G,oBAA0F,GAApEzzD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAYmlB,mBAAoB,GAGzFhvE,KAAKg8D,MAAQh8D,KAAKg8D,OAA0D,GAAjD9V,QAAQxb,SAAS1qC,KAAK4nB,MAAO,aAAc,GACtE5nB,KAAKi8D,MAAQj8D,KAAKi8D,OAA0D,GAAjD/V,QAAQxb,SAAS1qC,KAAK4nB,MAAO,aAAc,KAUxE0nF,aAAa5vG,UAAUinG,cAAgB,WAEtC,OAAQ3mG,KAAK25G,qBAUdrK,aAAa5vG,UAAUonG,WAAa,WAEnC,IAAI5zF,EAAO+H,SAAS9b,cAAc,OAGlC,OAFA+T,EAAK0U,MAAM44B,SAAW,WAEfttC,GAQRo8F,aAAa5vG,UAAUwrG,YAAc,SAASpqG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEzD,OAAO,GAQRuoG,aAAa5vG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE9D,GAAkB,MAAd/G,KAAKmoF,MACT,CACC,IAAIoU,EAAOr2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY0lB,uBAAwB,MACxE+sB,EAASp2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY2lB,mBAAoB,MAE9D,MAAR+sB,IAGHz7F,EAAEk5F,aAAauC,GACfz7F,EAAEy5F,eAAe+B,GACjBx7F,EAAEoqD,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GAChBjG,EAAE07F,iBAIH17F,EAAEqnF,MAAMnpC,EAAG4L,EAAGpE,EAAGz/C,EAAG/G,KAAKmoF,MAAOnoF,KAAK25G,qBAAqB,GAAO,GAE7Drd,EAASp2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY2lB,mBAAoB,MAE5D,MAAV8sB,IAEHx7F,EAAEs6F,WAAU,GACZt6F,EAAEy5F,eAAe+B,GACjBx7F,EAAEoqD,KAAKlM,EAAG4L,EAAGpE,EAAGz/C,GAChBjG,EAAEw7F,eAKH2R,iBAAiBvuG,UAAU+pG,gBAAgB1oG,MAAMf,KAAMgB,YASzDsuG,aAAa5vG,UAAUynG,gBAAkB,WAQxC,GANAnnG,KAAKkT,KAAK0U,MAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,GAAK,KACnDh/C,KAAKkT,KAAK0U,MAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,GAAK,KAClD5qD,KAAKkT,KAAK0U,MAAMk+B,MAAQ5lD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,QAAU,KACrE9lD,KAAKkT,KAAK0U,MAAM+9B,OAASzlD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOnX,SAAW,KACvE3lD,KAAKkT,KAAKqqB,UAAY,GAEJ,MAAdv9B,KAAKmoF,MACT,CACC,IAAIoU,EAAOr2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY0lB,uBAAwB,IACxE+sB,EAASp2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY2lB,mBAAoB,IAC1ExvE,KAAKkT,KAAK0U,MAAM4lE,gBAAkB+O,EAClCv8F,KAAKkT,KAAK0U,MAAM4gF,YAAclM,EAG9B,IAAIsd,EAASh5D,SAASG,SAAqC,MAAzB9lC,SAASkmC,cAAwBlmC,SAASkmC,cAAgB,IAAuB,GAAjBnhD,KAAKy5D,SACnGkN,EAAM1rD,SAAS9b,cAAc,EAAWyhD,SAASS,WAAa,SAAW,OAC7EslB,EAAIzuC,aAAa,SAAU,KAC3ByuC,EAAI/+C,MAAM44B,SAAW,WACrBmmB,EAAI/xD,IAAM5U,KAAKmoF,MAEf,IAAI5zD,EAAUv0B,KAAK0tD,QAAU,IAAO,iBAAmB1tD,KAAK0tD,QAAU,IAAM,GAC5E1tD,KAAKkT,KAAK0U,MAAM2M,OAASA,EAErBv0B,KAAKg8D,OAASh8D,KAAKi8D,MAEtB1nC,GAAU,2DAEFv0B,KAAKg8D,MAEbznC,GAAU,yDAEFv0B,KAAKi8D,QAEb1nC,GAAU,sEAGPoyC,EAAI/+C,MAAM2M,QAAUA,IAEvBoyC,EAAI/+C,MAAM2M,OAASA,GAGA,SAAhBoyC,EAAIhX,SAEPgX,EAAI/+C,MAAM6xC,SAAWz5D,KAAKy5D,SAED,GAAjBz5D,KAAKy5D,SAGbvT,QAAQ2I,iBAAiB8X,EAAI/+C,MAAO,YAAa,UAAY5nB,KAAKy5D,SAAW,QAI7EvT,QAAQ2I,iBAAiB8X,EAAI/+C,MAAO,YAAa,IAIlD++C,EAAI/+C,MAAMk+B,MAAQ9lD,KAAKkT,KAAK0U,MAAMk+B,MAClC6gB,EAAI/+C,MAAM+9B,OAAS3lD,KAAKkT,KAAK0U,MAAM+9B,OAEnC3lD,KAAKkT,KAAK0U,MAAM4sE,gBAAkB,GAClCx0F,KAAKkT,KAAKwlB,YAAYiuC,QAItB3mE,KAAK0oG,8BAA8B1oG,KAAKkT,OAI1CytC,WAAW2uD,aAAuC,qBAAjBA,aAA+BA,kBAAe/uG,EAkC/E2lD,QAAQ/6C,OAAOokG,QAAStB,kBAQxBsB,QAAQ7vG,UAAUm6G,UAAYhwD,YAAYsiB,kBAO1CojC,QAAQ7vG,UAAUgrG,QAAU,EAO5B6E,QAAQ7vG,UAAUo6G,cAAgB,GAOlCvK,QAAQ7vG,UAAUq6G,iBAAmB,EAOrCxK,QAAQ7vG,UAAUglB,KAAO,SAASq5C,GAEjCg5B,QAAQr3F,UAAUglB,KAAK3jB,MAAMf,KAAMgB,WAER,MAAvBhB,KAAKg6G,iBAERh6G,KAAKi6G,UAAY,IAAIj6G,KAAKg6G,eAC1Bh6G,KAAKi6G,UAAUx2C,QAAUzjE,KAAKyjE,QAC9BzjE,KAAKi6G,UAAUv1F,KAAK1kB,KAAKkT,QAU3Bq8F,QAAQ7vG,UAAU8tD,OAAS,WAEJ,MAAlBxtD,KAAKi6G,YAERj6G,KAAKi6G,UAAU1d,KAAOv8F,KAAKk6G,eAC3Bl6G,KAAKi6G,UAAU3d,OAASt8F,KAAKm6G,qBAC7Bn6G,KAAKi6G,UAAUrc,SAAW59F,KAAKo6G,uBAC/Bp6G,KAAKi6G,UAAU7f,UAAYp6F,KAAKq6G,oBAGjCtjB,QAAQr3F,UAAU8tD,OAAOzsD,MAAMf,KAAMgB,YAStCuuG,QAAQ7vG,UAAUinG,cAAgB,WAEjC,OAAOsH,iBAAiBvuG,UAAUinG,cAAc5lG,MAAMf,KAAMgB,YACpC,MAAvBhB,KAAKk6G,gBAAiD,MAAvBl6G,KAAKg6G,gBAQtCzK,QAAQ7vG,UAAUgqG,gBAAkB,SAAS5oG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAExD/G,KAAKs6G,WAAWx5G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAC5B/G,KAAKu6G,eAAez5G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEhCknG,iBAAiBvuG,UAAUgqG,gBAAgB3oG,MAAMf,KAAMgB,YAQxDuuG,QAAQ7vG,UAAU46G,WAAa,SAASx5G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEnD,GAAkB,MAAd/G,KAAKmoF,MACT,CACC,IAAIrrB,EAAS98D,KAAKw6G,eAAex7D,EAAG4L,EAAGpE,EAAGz/C,GAC1CjG,EAAEqnF,MAAMrrB,EAAO9d,EAAG8d,EAAOlS,EAAGkS,EAAOhX,MAAOgX,EAAOnX,OAAQ3lD,KAAKmoF,OAAO,GAAO,GAAO,KASrFonB,QAAQ7vG,UAAU86G,eAAiB,SAASx7D,EAAG4L,EAAGpE,EAAGz/C,GAEpD,IAAIi7D,EAAQ9b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYolB,kBAAmBplB,YAAYyrB,YAChFrT,EAAS/b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqlB,2BAA4BrlB,YAAYuY,cAC1Ftc,EAAQI,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAYwlB,kBAAmBxlB,YAAYsiB,mBACjFxmB,EAASO,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAYylB,mBAAoBzlB,YAAYsiB,mBACnFu+B,EAAUxkD,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY4nB,cAAezxE,KAAK0qG,SAAW,EA4BvF,OA1BI1oC,GAASnY,YAAYqY,aAExBljB,IAAMwH,EAAIV,GAAS,EAEXkc,GAASnY,YAAYsY,YAE7BnjB,GAAKwH,EAAIV,EAAQ4kD,EAIjB1rD,GAAK0rD,EAGFzoC,GAAUpY,YAAY0rB,UAEzB3qB,GAAK8/C,EAEGzoC,GAAUpY,YAAYwY,aAE9BzX,GAAK7jD,EAAI4+C,EAAS+kD,EAIlB9/C,IAAM7jD,EAAI4+C,GAAU,EAGd,IAAIkF,YAAY7L,EAAG4L,EAAG9E,EAAOH,IAQrC4pD,QAAQ7vG,UAAU66G,eAAiB,SAASz5G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEvD,GAAsB,MAAlB/G,KAAKi6G,UAERj6G,KAAKi6G,UAAUn9C,OAAS98D,KAAKy6G,mBAAmBz7D,EAAG4L,EAAGpE,EAAGz/C,GACzD/G,KAAKi6G,UAAUhjB,MAAMn2F,QAEjB,GAA2B,MAAvBd,KAAK06G,eACd,CACC,IAAI59C,EAAS98D,KAAKy6G,mBAAmBz7D,EAAG4L,EAAGpE,EAAGz/C,GAC9CjG,EAAEqnF,MAAMrrB,EAAO9d,EAAG8d,EAAOlS,EAAGkS,EAAOhX,MAAOgX,EAAOnX,OAAQ3lD,KAAK06G,gBAAgB,GAAO,GAAO,KAS9FnL,QAAQ7vG,UAAU+6G,mBAAqB,SAASz7D,EAAG4L,EAAGpE,EAAGz/C,GAExD,IAAIi7D,EAAQ9b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYolB,kBAAmBplB,YAAYyrB,YAChFrT,EAAS/b,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYqlB,2BAA4BrlB,YAAYuY,cAC1Ftc,EAAQI,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAYumB,sBAAuBpwE,KAAK85G,eAC9En0D,EAASO,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAYwmB,uBAAwBrwE,KAAK85G,eAChFpP,EAAU1qG,KAAK0qG,QAAU,EA4B7B,OA1BI1oC,GAASnY,YAAYsY,YAExBnjB,GAAKwH,EAAIV,EAAQ4kD,EAET1oC,GAASnY,YAAYqY,aAE7BljB,IAAMwH,EAAIV,GAAS,EAInB9G,GAAK0rD,EAGFzoC,GAAUpY,YAAYwY,aAEzBzX,GAAK7jD,EAAI4+C,EAAS+kD,EAEVzoC,GAAUpY,YAAY0rB,UAE9B3qB,GAAK8/C,EAIL9/C,IAAM7jD,EAAI4+C,GAAU,EAGd,IAAIkF,YAAY7L,EAAG4L,EAAG9E,EAAOH,IAOrC4pD,QAAQ7vG,UAAUynG,gBAAkB,WAEnC8G,iBAAiBvuG,UAAUynG,gBAAgBpmG,MAAMf,KAAMgB,WAGvD,MAAMhB,KAAKkT,KAAKoqB,gBAEft9B,KAAKkT,KAAKulB,YAAYz4B,KAAKkT,KAAKm0F,WAGjC,GAAkB,MAAdrnG,KAAKmoF,MACT,CACC,IAAIj1E,EAAO+H,SAAS9b,cAAc,OAClC+T,EAAK0U,MAAM44B,SAAW,WACtBttC,EAAKglB,aAAa,SAAU,KAE5B,IAAI4kC,EAAS98D,KAAKw6G,eAAex6G,KAAK88D,OAAO9d,EAAGh/C,KAAK88D,OAAOlS,EAAG5qD,KAAK88D,OAAOhX,MAAO9lD,KAAK88D,OAAOnX,QAC9FmX,EAAO9d,GAAKh/C,KAAK88D,OAAO9d,EACxB8d,EAAOlS,GAAK5qD,KAAK88D,OAAOlS,EAExB13C,EAAK0U,MAAMknB,KAAO5uC,KAAKm8D,MAAMS,EAAO9d,GAAK,KACzC9rC,EAAK0U,MAAMonB,IAAM9uC,KAAKm8D,MAAMS,EAAOlS,GAAK,KACxC13C,EAAK0U,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMS,EAAOhX,OAAS,KAC9C5yC,EAAK0U,MAAM+9B,OAASzlD,KAAKm8D,MAAMS,EAAOnX,QAAU,KAEhDzyC,EAAK0B,IAAM5U,KAAKmoF,MAEhBnoF,KAAKkT,KAAKwlB,YAAYxlB,KAIxBytC,WAAW4uD,QAA6B,qBAAZA,QAA0BA,aAAUhvG,EAwChE2lD,QAAQ/6C,OAAOqkG,WAAYzY,SAQ3ByY,WAAW9vG,UAAUkgG,UAAY,GAOjC4P,WAAW9vG,UAAUumG,mBAAqB,EAO1CuJ,WAAW9vG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE5DjG,EAAE+iE,UAAU7kB,EAAG4L,GACf9pD,EAAE06F,QACFx7F,KAAK0zG,WAAW5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAAG,GAC/BjG,EAAE07F,gBAEGx8F,KAAKqmG,SAAyB,MAAdrmG,KAAK4nB,OAC+B,GADds+B,QAAQxb,SAClD1qC,KAAK4nB,MAAOiiC,YAAY2oB,yBAA0B,KAElD1xE,EAAEs6F,WAAU,GACZt6F,EAAE06F,QACFx7F,KAAK0zG,WAAW5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAAG,GAC/BjG,EAAEw7F,WASJkT,WAAW9vG,UAAUi7G,gBAAkB,SAAS37D,EAAG4L,EAAGpE,EAAGz/C,GAExD,OAAO7G,KAAKyD,IAAI3D,KAAK4/F,UAAW1/F,KAAKm8D,MAAMt1D,EAAI,KAQhDyoG,WAAW9vG,UAAUg0G,WAAa,SAAS5yG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAG6zG,GAEzD,IAAI7rE,EAAK/uC,KAAK26G,gBAAgB37D,EAAG4L,EAAGpE,EAAGz/C,IAElC6zG,GAA6B,MAAb56G,KAAKu8F,OAAmBqe,GAA6B,MAAb56G,KAAKu8F,QAEjEz7F,EAAE26F,OAAO,EAAG1sD,GACZjuC,EAAE86F,QAAQ,EAAG,EAAI7sD,EAAIyX,EAAG,EAAIzX,EAAIyX,EAAGzX,GAG9B6rE,IAEJ95G,EAAEw7F,SACFx7F,EAAE06F,UAICof,IAEJ95G,EAAE26F,OAAO,EAAG1sD,GACZjuC,EAAE86F,QAAQ,GAAI7sD,EAAK,EAAGyX,GAAIzX,EAAK,EAAGyX,EAAGzX,GACrCjuC,EAAE46F,OAAOl1C,EAAGz/C,EAAIgoC,GAChBjuC,EAAE86F,QAAQp1C,EAAGz/C,EAAIgoC,EAAK,EAAG,EAAGhoC,EAAIgoC,EAAK,EAAG,EAAGhoC,EAAIgoC,GAC/CjuC,EAAE00C,UAIJmL,WAAW6uD,WAAmC,qBAAfA,WAA6BA,gBAAajvG,EAoCzE2lD,QAAQ/6C,OAAOskG,YAAahL,YAQ5BgL,YAAY/vG,UAAU0nG,kBAAoB,WAEzCpnG,KAAKsmG,kBAAkC,MAAdtmG,KAAK4nB,OAAyD,GAAxC5nB,KAAK4nB,MAAMiiC,YAAYsnB,cACtE4lB,QAAQr3F,UAAU0nG,kBAAkBrmG,MAAMf,KAAMgB,YAQjDyuG,YAAY/vG,UAAU2pG,eAAiB,SAASvoG,EAAG07D,GAKlD,IAAIq+C,EAAe76G,KAAK4tG,aAAa9sG,EAAG07D,GAAK,GACzCs+C,EAAe96G,KAAK4tG,aAAa9sG,EAAG07D,GAAK,GAE7CioC,WAAW/kG,UAAU2pG,eAAetoG,MAAMf,KAAMgB,WAGhDF,EAAEk5F,aAAah6F,KAAKs8F,QACpBx7F,EAAEs6F,WAAU,GACZt6F,EAAE25F,WAAU,GAEQ,MAAhBogB,GAEHA,IAGmB,MAAhBC,GAEHA,KAUFrL,YAAY/vG,UAAUkuG,aAAe,SAAS9sG,EAAG07D,EAAKt4D,GAErD,IAAIrB,EAAS,KACToF,EAAIu0D,EAAI57D,OACR+V,EAAOuvC,QAAQxb,SAAS1qC,KAAK4nB,MAAO,EAAWiiC,YAAY6mB,iBAAmB7mB,YAAY4mB,gBAC1F05B,EAAK,EAAW3tC,EAAI,GAAKA,EAAIv0D,EAAI,GACjCiiG,EAAK,EAAW1tC,EAAI,GAAKA,EAAIv0D,EAAI,GAErC,GAAY,MAAR0O,GAAsB,MAANwzF,GAAoB,MAAND,EAClC,CACC,IAAIj3C,EAAQ,EAGZ,MAAOA,EAAQhrD,EAAI,GAAgC,GAA3B/H,KAAKm8D,MAAM8tC,EAAGnrD,EAAIkrD,EAAGlrD,IAAsC,GAA3B9+C,KAAKm8D,MAAM8tC,EAAGv/C,EAAIs/C,EAAGt/C,GAE5Eu/C,EAAK,EAAW3tC,EAAI,EAAIvJ,GAASuJ,EAAIv0D,EAAI,EAAIgrD,GAC7CA,IAID,IAAIpkB,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EAEfgR,EAAO17D,KAAKwD,IAAI,EAAGxD,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,IAE5C8+D,EAAQh/D,EAAK+sB,EACbkyC,EAAQ/+D,EAAK6sB,EAEbnb,EAAOyF,QAAQ4P,UAAU91D,KAAK4nB,MAAO,EAAWiiC,YAAY6T,gBAAkB7T,YAAY8mB,cAAe9mB,YAAYqiB,oBAIrHgyB,EAA2F,GAAlFl+F,KAAK4nB,MAAM,EAAWiiC,YAAYinB,gBAAkBjnB,YAAYgnB,eAE7EhuE,EAAS4qG,SAASG,aAAa9sG,EAAGd,KAAM2W,EAAMuzF,EAAI2D,EAAOC,EAAOrtD,EAAMv8C,EAAQlE,KAAKumG,YAAarI,GAGjG,OAAOr7F,GAQR4sG,YAAY/vG,UAAUyrG,mBAAqB,SAAStK,GAEnD9J,QAAQr3F,UAAUyrG,mBAAmBpqG,MAAMf,KAAMgB,WAGjD,IAAIy/C,EAAO,EAEPyF,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY6mB,iBAAkB7mB,YAAYC,OAASD,YAAYC,OAE/FrJ,EAAOyF,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY6T,gBAAiB7T,YAAYqiB,oBAAsB,GAGjGhmB,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4mB,eAAgB5mB,YAAYC,OAASD,YAAYC,OAE7FrJ,EAAOvgD,KAAKwD,IAAI+8C,EAAMyF,QAAQ4P,UAAU91D,KAAK4nB,MAAOiiC,YAAY8mB,cAAe9mB,YAAYqiB,qBAAuB,GAGnH20B,EAAKj1C,KAAKnL,EAAOzgD,KAAKmtD,QAGvBxM,WAAW8uD,YAAqC,qBAAhBA,YAA8BA,iBAAclvG,EA2C5E2lD,QAAQ/6C,OAAOukG,WAAY3Y,SAQ3B2Y,WAAWhwG,UAAUm6G,UAAY,GAOjCnK,WAAWhwG,UAAUwrG,YAAc,SAASpqG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAEvD,OAAO,GAQR2oG,WAAWhwG,UAAUq7G,aAAe,WAEnC,OAAO76G,KAAKwD,IAAI,EAAGwiD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY6T,gBAAiB7T,YAAYoiB,qBAQ1FyjC,WAAWhwG,UAAU4nG,eAAiB,SAASp8C,GAE9C,IAAIjgD,EAAQjL,KAAK+6G,eACbj+C,EAAS,IAAIjS,YAAYK,EAAKlM,EAAGkM,EAAKN,EAAGM,EAAKpF,MAAOoF,EAAKvF,QAC1Ds+C,EAAajkG,KAAKg7G,eAElBh/C,EAAoE,GAA5D9V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYsS,YAAa,GAC9DF,EAAoE,GAA5D/V,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYuS,YAAa,GAG9D6+C,EAAiBj7G,KAAKo6F,WAAavwC,YAAYmR,iBACjDh7D,KAAKo6F,WAAavwC,YAAYyR,gBAC5B4/C,EAAiBjX,IAAegX,EAEhCE,GAAaD,GAAkBl/C,IAAUh8D,KAAKo6F,WAAavwC,YAAYyR,iBACzEt7D,KAAKo6F,WAAavwC,YAAYwR,gBAC5B+/C,EAAYF,GAAkBj/C,IAAUj8D,KAAKo6F,WAAavwC,YAAYyR,iBACxEt7D,KAAKo6F,WAAavwC,YAAYwR,gBAGhC,GAAK4/C,EAYL,CACKtrF,EAAMzvB,KAAKyD,IAAIm5D,EAAOhX,MAAO76C,EAAQjL,KAAKmtD,QAE1CguD,GAAaC,KAEhBt+C,EAAO9d,GAAK8d,EAAOhX,MAAQn2B,GAG5BmtC,EAAOhX,MAAQn2B,MAnBhB,CACC,IAAIA,EAAMzvB,KAAKyD,IAAIm5D,EAAOnX,OAAQ16C,EAAQjL,KAAKmtD,QAE3CguD,GAAaC,KAEhBt+C,EAAOlS,GAAKkS,EAAOnX,OAASh2B,GAG7BmtC,EAAOnX,OAASh2B,EAcjB,OAAOmtC,GAQR4yC,WAAWhwG,UAAU6pG,kBAAoB,SAASzoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE7D,IAAIkE,EAAQjL,KAAK+6G,eAEjB,OAAI/6G,KAAKg7G,gBAER/vG,EAAQ/K,KAAKyD,IAAIsH,EAAOlE,GACjB,IAAI8jD,YAAY7L,EAAG4L,EAAGpE,EAAGv7C,KAIhCA,EAAQ/K,KAAKyD,IAAIsH,EAAOu7C,GACjB,IAAIqE,YAAY7L,EAAG4L,EAAG3/C,EAAOlE,KAStC2oG,WAAWhwG,UAAUiqG,WAAa,SAASnjD,EAAGz/C,EAAGkE,GAEhD,IAAI1N,EAAI2oD,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYunB,cAAuD,IAAxCvnB,YAAYwiB,2BAAmC,IAE/G,OAAOphE,EAAQ1N,EAAI,GAQpBmyG,WAAWhwG,UAAUs7G,aAAe,WAEnC,OAAwE,GAAjE90D,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+T,iBAAkB,IAQnE8xC,WAAWhwG,UAAU4pG,iBAAmB,SAASxoG,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,GAE5D,IAAIkE,EAAQjL,KAAK+6G,eACbxe,EAAOr2C,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAYukB,yBAA0BvkB,YAAYC,MACtFuxD,EAAmF,GAApEn1D,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY+mB,oBAAqB,GAC7E1S,EAAI,EAIPjzD,EAFGjL,KAAKg7G,eAEA96G,KAAKyD,IAAIsH,EAAOlE,GAIhB7G,KAAKyD,IAAIsH,EAAOu7C,GAGzB1lD,EAAE+iE,UAAU7kB,EAAG4L,GAEV5qD,KAAK8pG,WAMT5rC,EAAIl+D,KAAK2pG,WAAWnjD,EAAGz/C,EAAGkE,GAC1BizD,EAAIh+D,KAAKyD,KAAM3D,KAAKg7G,eAAkBj0G,EAAIy/C,GAAKv7C,EAAO/K,KAAKyD,IAAIsH,EAAOizD,IACtEl+D,KAAKs7G,qBAAqBx6G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOizD,EAAGq+B,EAAM8e,IANzDr7G,KAAKu7G,cAAcz6G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOsxF,EAAM8e,GAShD,IAAI35C,EAAMxb,QAAQxb,SAAS1qC,KAAK4nB,MAAOiiC,YAAY4kB,qBAAsB5kB,YAAYC,MAGrF,GAFA9pD,KAAKw7G,eAAe16G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOy2D,GAExB,MAAd1hE,KAAKmoF,MACT,CACC,IAAIrrB,EAAS98D,KAAKw6G,eAAex7D,EAAG4L,EAAGpE,EAAGz/C,GAC1CjG,EAAEqnF,MAAMrrB,EAAO9d,EAAIA,EAAG8d,EAAOlS,EAAIA,EAAGkS,EAAOhX,MAAOgX,EAAOnX,OACvD3lD,KAAKmoF,OAAO,GAAO,GAAO,GAGzBnoF,KAAK+qG,QAERjqG,EAAEs6F,WAAU,GACZp7F,KAAK4pG,iBAAiB9oG,EAAG,EAAG,EAAG0lD,EAAGv7C,EAAOizD,KAS3CwxC,WAAWhwG,UAAU67G,cAAgB,SAASz6G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOsxF,EAAM8e,GAEzEv6G,EAAE06F,QAEEx7F,KAAKg7G,gBAERl6G,EAAE26F,OAAO,EAAGxwF,GACZnK,EAAE46F,OAAO,EAAG,GACZ56F,EAAE46F,OAAOl1C,EAAG,GACZ1lD,EAAE46F,OAAOl1C,EAAGv7C,GACZnK,EAAE07F,gBAEEvxF,EAAQlE,IAEPw1F,GAAQ1yC,YAAYC,KAEvBhpD,EAAEuqF,eAAgB,EAIlBvqF,EAAEk5F,aAAauC,GAGhBz7F,EAAE06F,QACF16F,EAAE26F,OAAO,EAAGxwF,GACZnK,EAAE46F,OAAO,EAAG30F,GACZjG,EAAE46F,OAAOl1C,EAAGz/C,GACZjG,EAAE46F,OAAOl1C,EAAGv7C,GAERsxF,GAAQ1yC,YAAYC,KAEvBhpD,EAAEw7F,SAIFx7F,EAAE07F,mBAMJ17F,EAAE26F,OAAOxwF,EAAO,GAChBnK,EAAE46F,OAAO,EAAG,GACZ56F,EAAE46F,OAAO,EAAG30F,GACZjG,EAAE46F,OAAOzwF,EAAOlE,GAChBjG,EAAE07F,gBAEEvxF,EAAQu7C,IAEP+1C,GAAQ1yC,YAAYC,KAEvBhpD,EAAEuqF,eAAgB,EAIlBvqF,EAAEk5F,aAAauC,GAGhBz7F,EAAE06F,QACF16F,EAAE26F,OAAOxwF,EAAO,GAChBnK,EAAE46F,OAAOl1C,EAAG,GACZ1lD,EAAE46F,OAAOl1C,EAAGz/C,GACZjG,EAAE46F,OAAOzwF,EAAOlE,GAEZw1F,GAAQ1yC,YAAYC,KAEvBhpD,EAAEw7F,SAIFx7F,EAAE07F,kBAKD6e,GAEHr7G,KAAKy7G,aAAa36G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOsxF,GAAQ1yC,YAAYC,OAS9D4lD,WAAWhwG,UAAU47G,qBAAuB,SAASx6G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOizD,EAAGq+B,EAAM8e,GAEnFv6G,EAAE06F,QAEEx7F,KAAKg7G,gBAERl6G,EAAE26F,OAAOj1C,EAAGv7C,GACZnK,EAAE46F,OAAOl1C,EAAG0X,GACZp9D,EAAE66F,OAAOn1C,EAAG,EAAGA,EAAItmD,KAAKyD,IAAI6iD,EAAI,EAAG0X,GAAI,GACvCp9D,EAAE46F,OAAOx7F,KAAKyD,IAAI6iD,EAAI,EAAG0X,GAAI,GAC7Bp9D,EAAE66F,OAAO,EAAG,EAAG,EAAGz9B,GAClBp9D,EAAE46F,OAAO,EAAGzwF,GACZnK,EAAE07F,gBAEEvxF,EAAQlE,IAEPw1F,GAAQ1yC,YAAYC,KAEvBhpD,EAAEuqF,eAAgB,EAIlBvqF,EAAEk5F,aAAauC,GAGhBz7F,EAAE06F,QACF16F,EAAE26F,OAAO,EAAGxwF,GACZnK,EAAE46F,OAAO,EAAG30F,EAAIm3D,GAChBp9D,EAAE66F,OAAO,EAAG50F,EAAG7G,KAAKyD,IAAI6iD,EAAI,EAAG0X,GAAIn3D,GACnCjG,EAAE46F,OAAOl1C,EAAItmD,KAAKyD,IAAI6iD,EAAI,EAAG0X,GAAIn3D,GACjCjG,EAAE66F,OAAOn1C,EAAGz/C,EAAGy/C,EAAGz/C,EAAIm3D,GACtBp9D,EAAE46F,OAAOl1C,EAAGv7C,GAERsxF,GAAQ1yC,YAAYC,KAEvBhpD,EAAEw7F,SAIFx7F,EAAE07F,mBAMJ17F,EAAE26F,OAAOxwF,EAAO,GAChBnK,EAAE46F,OAAOx9B,EAAG,GACZp9D,EAAE66F,OAAO,EAAG,EAAG,EAAGz7F,KAAKyD,IAAIoD,EAAI,EAAGm3D,IAClCp9D,EAAE46F,OAAO,EAAG30F,EAAI7G,KAAKyD,IAAIoD,EAAI,EAAGm3D,IAChCp9D,EAAE66F,OAAO,EAAG50F,EAAGm3D,EAAGn3D,GAClBjG,EAAE46F,OAAOzwF,EAAOlE,GAChBjG,EAAE07F,gBAEEvxF,EAAQu7C,IAEP+1C,GAAQ1yC,YAAYC,KAEvBhpD,EAAEuqF,eAAgB,EAIlBvqF,EAAEk5F,aAAauC,GAGhBz7F,EAAE06F,QACF16F,EAAE26F,OAAOxwF,EAAOlE,GAChBjG,EAAE46F,OAAOl1C,EAAI0X,EAAGn3D,GAChBjG,EAAE66F,OAAOn1C,EAAGz/C,EAAGy/C,EAAGz/C,EAAI7G,KAAKyD,IAAIoD,EAAI,EAAGm3D,IACtCp9D,EAAE46F,OAAOl1C,EAAGtmD,KAAKyD,IAAIoD,EAAI,EAAGm3D,IAC5Bp9D,EAAE66F,OAAOn1C,EAAG,EAAGA,EAAI0X,EAAG,GACtBp9D,EAAE46F,OAAOzwF,EAAO,GAEZsxF,GAAQ1yC,YAAYC,KAEvBhpD,EAAEw7F,SAIFx7F,EAAE07F,kBAKD6e,GAEHr7G,KAAKy7G,aAAa36G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOsxF,GAAQ1yC,YAAYC,OAS9D4lD,WAAWhwG,UAAU+7G,aAAe,SAAS36G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAOguF,GAE7DA,GAEJn4F,EAAEs6F,WAAU,GAGbt6F,EAAE06F,QAEEx7F,KAAKg7G,gBAERl6G,EAAE26F,OAAO,EAAGxwF,GACZnK,EAAE46F,OAAOl1C,EAAGv7C,KAIZnK,EAAE26F,OAAOxwF,EAAO,GAChBnK,EAAE46F,OAAOzwF,EAAOlE,IAGjBjG,EAAEw7F,UAQHoT,WAAWhwG,UAAU87G,eAAiB,SAAS16G,EAAGk+C,EAAG4L,EAAGpE,EAAGz/C,EAAGkE,EAAO2oD,GAEhEA,GAAS/J,YAAYC,OAExBhpD,EAAEy5F,eAAe3mC,GACjB9yD,EAAE25F,WAAU,GACZ35F,EAAE06F,QAEEx7F,KAAKg7G,gBAERl6G,EAAE26F,OAAOj1C,EAAGv7C,GACZnK,EAAE46F,OAAOl1C,EAAGz/C,KAIZjG,EAAE26F,OAAOxwF,EAAO,GAChBnK,EAAE46F,OAAOl1C,EAAG,IAGb1lD,EAAEw7F,SACFx7F,EAAE25F,WAAU,KASdiV,WAAWhwG,UAAU86G,eAAiB,SAASx7D,EAAG4L,EAAGpE,EAAGz/C,GAEvD,OAAI/G,KAAKg7G,eAED,IAAInwD,YAAY7L,EAAIwH,EAAIxmD,KAAK65G,UAAWjvD,EAAG5qD,KAAK65G,UAAW75G,KAAK65G,WAIhE,IAAIhvD,YAAY7L,EAAG4L,EAAG5qD,KAAK65G,UAAW75G,KAAK65G,YAIpDl5D,WAAW+uD,WAAmC,qBAAfA,WAA6BA,gBAAanvG,EAqCzEovG,cAAcjwG,UAAU0sD,MAAQ,KAQhCujD,cAAcjwG,UAAUg8G,gBAAiB,EAOzC/L,cAAcjwG,UAAU2G,OAAS,KAkBjCspG,cAAcjwG,UAAUi8G,SAAW,SAAS3uD,EAAMhO,EAAG4L,KAWrD+kD,cAAcjwG,UAAU+zD,QAAU,SAASptD,KAO3CspG,cAAcjwG,UAAU4xG,SAAW,WAElC,OAAOtxG,KAAKosD,OAoBbujD,cAAcjwG,UAAUk8G,cAAgB,SAASv+G,EAAK2vD,EAAMqN,EAAMn2D,GAEjE,IAAI4sC,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASC,GACjCplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAKosD,MAAMyvD,aAAa7uD,GAEpE,OAAiB,MAATplC,EAAiBA,EAAMvqB,GAAO,MAkCvCsyG,cAAcn0F,SAAW,SAASsgG,EAAQC,EAAUC,EAAM3hD,EAAM4hD,GAE/D,GAAY,MAARD,GAA0B,MAAVF,IAEnBC,EAAwB,MAAZA,GAAoBA,EAChCE,EAAUA,GAAW,IAAIrzD,cAEpBqzD,EAAQ58G,IAAIy8G,IACjB,CACCG,EAAQpzD,IAAIizD,GAAQ,GACpB,IAAIj5G,EAASm5G,EAAKF,EAAQzhD,GAE1B,GAAc,MAAVx3D,GAAkBA,EACtB,CACC,IAAIq5G,EAAYl8G,KAAKosD,MAAMhmC,MAAM+1F,aAAaL,GAE9C,GAAII,EAAY,EAEf,IAAK,IAAIhzG,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAI+C,EAAIjM,KAAKosD,MAAMhmC,MAAMg2F,UAAUN,EAAQ5yG,GACvCyuE,EAAW33E,KAAKosD,MAAMhmC,MAAMi2F,YAAYpwG,GAAG,IAAS6vG,EAExD,IAAKC,GAAYpkC,EACjB,CACC,IAAI71E,EAAO9B,KAAKosD,MAAMuR,KAAKu0C,mBAAmBjmG,GAAI0rE,GAClD33E,KAAKwb,SAAS1Z,EAAMi6G,EAAUC,EAAM/vG,EAAGgwG,QAoB9CtM,cAAcjwG,UAAU48G,WAAa,SAASj2G,EAAQ0M,EAAOwpG,GAE5D,IAAKA,EAEJ,OAAQv8G,KAAKosD,MAAMhmC,MAAM2vE,UAAUhjF,IAAU1M,EAG9C,GAAI0M,GAAS1M,EAEZ,OAAO,EAGR,MAAgB,MAAT0M,GAAiBA,GAAS1M,EAEhC0M,EAAQ/S,KAAKosD,MAAMhmC,MAAM2vE,UAAUhjF,GAGpC,OAAOA,GAAS1M,GAcjBspG,cAAcjwG,UAAU88G,gBAAkB,SAASxvD,GAElD,OAAOhtD,KAAKosD,MAAMqwD,cAAczvD,IAajC2iD,cAAcjwG,UAAUg9G,gBAAkB,SAASZ,GAElD,OAAQ97G,KAAKosD,MAAM8W,WAAWyyB,SAASmmB,KACrC97G,KAAKosD,MAAMuwD,cAAcb,IAa5BnM,cAAcjwG,UAAUk9G,cAAgB,SAASviD,GAEhD,IAAIj0C,EAAQpmB,KAAKosD,MAAM8W,WAEvB,OAAQ98C,EAAMjX,OAAOkrD,KACnBr6D,KAAKosD,MAAMuwD,cAActiD,IACO,MAAjCj0C,EAAMi2F,YAAYhiD,GAAM,IACU,MAAlCj0C,EAAMi2F,YAAYhiD,GAAM,IAQ1Bs1C,cAAcjwG,UAAUm9G,oBAAsB,SAASxiD,EAAM/8D,GAE5D0C,KAAKosD,MAAMiV,cAAcxX,YAAY6lB,kBACnC,EAAU,IAAM,IAAK,CAACrV,KAQzBs1C,cAAcjwG,UAAUo9G,kBAAoB,SAASziD,EAAM/8D,GAE1D0C,KAAKosD,MAAMiV,cAAcxX,YAAYyjB,iBACnC,EAAU,IAAM,IAAK,CAACjT,KASzBs1C,cAAcjwG,UAAUq9G,gBAAkB,SAAS12G,GAElD,IAAIxD,EAAS,IAAI8nD,QAEjB,GAAc,MAAVtkD,GAAkBA,GAAUrG,KAAKqG,OACrC,CACC,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WAEvB,GAAI98C,EAAMk2F,WAAWt8G,KAAKqG,OAAQA,GAClC,CACC,IAAI22G,EAAY52F,EAAM62F,YAAY52G,GAElC,MAAOA,GAAUrG,KAAKqG,OAErBxD,EAAOm8C,EAAIn8C,EAAOm8C,EAAIg+D,EAAUh+D,EAChCn8C,EAAO+nD,EAAI/nD,EAAO+nD,EAAIoyD,EAAUpyD,EAEhCvkD,EAAS+f,EAAM2vE,UAAU1vF,GACzB22G,EAAY52F,EAAM62F,YAAY52G,IAKjC,OAAOxD,GASR8sG,cAAcjwG,UAAUw9G,cAAgB,SAAS7iD,EAAMsrC,GAEtD,GAAY,MAARtrC,EACJ,CACC,IAAIj0C,EAAQpmB,KAAKosD,MAAMhmC,MACnBgnC,EAAWhnC,EAAM62F,YAAY5iD,GAYjC,GAVgB,MAAZjN,GAEHA,EAAW,IAAI+vD,WACf/vD,EAASgwD,aAAY,IAIrBhwD,EAAWA,EAAS5oC,QAGF,MAAfxkB,KAAKqG,QAA4B,MAAVs/F,EAM1B,IAJA,IAAIt/F,EAAS+f,EAAM2vE,UAAU17B,GAEzBgjD,EAAer9G,KAAK+8G,gBAAgB12G,GAE/B6C,EAAI,EAAGA,EAAIy8F,EAAO/kG,OAAQsI,IAElCy8F,EAAOz8F,GAAG81C,EAAI2mD,EAAOz8F,GAAG81C,EAAIq+D,EAAar+D,EACzC2mD,EAAOz8F,GAAG0hD,EAAI+6C,EAAOz8F,GAAG0hD,EAAIyyD,EAAazyD,EAI3CwC,EAASu4C,OAASA,EAClBv/E,EAAMk3F,YAAYjjD,EAAMjN,KAmB1BuiD,cAAcjwG,UAAU69G,kBAAoB,SAASvwD,EAAMhO,EAAG4L,GAE7D,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WACnB9V,EAAWhnC,EAAM62F,YAAYjwD,GAC7BnqD,EAAS,KAEb,GAAgB,MAAZuqD,EACJ,CAKC,GAJAvqD,EAAS,IAAIgoD,YAAY7L,EAAG4L,EAAGwC,EAAStH,MAAOsH,EAASzH,QAIpD3lD,KAAK07G,eACT,CACC,IAAI5qE,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAASC,GAE1C,GAAa,MAATlc,GAA+B,MAAdA,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,YACtD,CACC,IAAI74C,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7Bm2C,EAAMxyD,EAAMj/B,KAAKm0F,YAEjBl1D,EAAMj/B,KAAKm0F,YAAYhnD,EAAIlO,EAAMkO,IAEpCA,IAAMlO,EAAMkO,EAAIskD,EAAItkD,GAAKmO,EACzBtqD,EAAOijD,MAAQw9C,EAAIx9C,OAGhBhV,EAAMj/B,KAAKm0F,YAAYp7C,EAAI9Z,EAAM8Z,IAEpCA,IAAM9Z,EAAM8Z,EAAI04C,EAAI14C,GAAKuC,EACzBtqD,EAAO8iD,OAAS29C,EAAI39C,SAKvB,GAAmB,MAAf3lD,KAAKqG,OACT,CACC,IAAIA,EAAS+f,EAAM2vE,UAAU/oC,GAE7B,GAAc,MAAV3mD,GAAkBA,GAAUrG,KAAKqG,OACrC,CACC,IAAIg3G,EAAer9G,KAAK+8G,gBAAgB12G,GAExC24C,GAAQq+D,EAAar+D,EACrB4L,GAAQyyD,EAAazyD,GAInBwC,EAASpO,GAAKA,GAAKoO,EAASxC,GAAKA,IAEpCwC,EAAWA,EAAS5oC,QACpB4oC,EAASpO,EAAIA,EACboO,EAASxC,EAAIA,EAEbxkC,EAAMk3F,YAAYtwD,EAAMI,IAI1B,OAAOvqD,GASR8sG,cAAcjwG,UAAU89G,gBAAkB,SAASxwD,GAElD,IAAIgpC,EAAMh2F,KAAKosD,MAAM8W,WAAW+5C,YAAYjwD,GAK5C,GAAIhtD,KAAK07G,eACT,CACC,IAAI5qE,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAASC,GAE1C,GAAa,MAATlc,GAA+B,MAAdA,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,YACtD,CACC,IAAI74C,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7Bx9B,EAAMmhB,EAAMj/B,KAAKm0F,YAEjByX,EAAMv9G,KAAKwD,IAAIotC,EAAMkO,EAAIrvB,EAAIqvB,EAAG,GAAKmO,EACrCuwD,EAAMx9G,KAAKwD,IAAIotC,EAAM8Z,EAAIj7B,EAAIi7B,EAAG,GAAKuC,EACrCupD,EAAMx2G,KAAKwD,IAAKisB,EAAIqvB,EAAIrvB,EAAIm2B,OAAUhV,EAAMkO,EAAIlO,EAAMgV,OAAQ,GAAKqH,EACjEwpD,EAAMz2G,KAAKwD,IAAKisB,EAAIi7B,EAAIj7B,EAAIg2B,QAAW7U,EAAM8Z,EAAI9Z,EAAM6U,QAAS,GAAKwH,EAE3E6oC,EAAM,IAAInrC,YAAYmrC,EAAIh3C,EAAIy+D,EAAKznB,EAAIprC,EAAI8yD,EAAK1nB,EAAIlwC,MAAQ23D,EAAM/G,EAAK1gB,EAAIrwC,OAAS+3D,EAAM/G,IAI5F,GAAmB,MAAf32G,KAAKqG,OACT,CACC,IAAIA,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/oC,GAG7C,GAFAgpC,EAAMA,EAAIxxE,QAEI,MAAVne,GAAkBA,GAAUrG,KAAKqG,OACrC,CACC,IAAIg3G,EAAer9G,KAAK+8G,gBAAgB12G,GACxC2vF,EAAIh3C,EAAIg3C,EAAIh3C,EAAIq+D,EAAar+D,EAC7Bg3C,EAAIprC,EAAIorC,EAAIprC,EAAIyyD,EAAazyD,GAI/B,OAAO,IAAIC,YAAYmrC,EAAIh3C,EAAGg3C,EAAIprC,EAAGorC,EAAIlwC,MAAOkwC,EAAIrwC,SAQrDgqD,cAAcjwG,UAAUi+G,cAAgB,SAASv9C,EAAOmE,EAAQq5C,EAAWC,EAAaC,EAAcC,GAErG,OAAO/9G,KAAKosD,MAAM4xD,kBAAkB59C,EAAOmE,GAAQ,EAAMq5C,EAAWC,EAAaC,EAAcC,IAyBhGnO,mBAAmBlwG,UAAUmwG,cAAgB,EAO7CD,mBAAmBlwG,UAAUu+G,OAAQ,EAOrCrO,mBAAmBlwG,UAAUu8G,SAAU,EAOvCrM,mBAAmBlwG,UAAUw+G,UAAY,KAOzCtO,mBAAmBlwG,UAAUstD,KAAO,KAOpC4iD,mBAAmBlwG,UAAUihE,QAAU,SAASrhE,EAAGuB,GAElD,OAAS,MAALvB,GAAkB,MAALuB,EAEZA,EAAEgvG,cAAgBvwG,EAAEuwG,eAEf,EAEAhvG,EAAEgvG,cAAgBvwG,EAAEuwG,cAErB,EAIHhvG,EAAEo9G,OAEG,EAID,EAMF,GAITt9D,WAAWgvD,cAAyC,qBAAlBA,cAAgCA,mBAAgBpvG,EAsClFuvG,cAAcpwG,UAAY,IAAIiwG,cAC9BG,cAAcpwG,UAAUqyB,YAAc+9E,cAOtCA,cAAcpwG,UAAUukG,WAAa,KAOrC6L,cAAcpwG,UAAUgrG,QAAU,KAOlCoF,cAAcpwG,UAAUm3D,GAAK,KAO7Bi5C,cAAcpwG,UAAUo3D,GAAK,KAO7Bg5C,cAAcpwG,UAAU6kE,OAAS,EAOjCurC,cAAcpwG,UAAU2oF,UAAY,EAOpCynB,cAAcpwG,UAAU6nF,WAAa,EAOrCuoB,cAAcpwG,UAAU0oF,YAAc,EAOtC0nB,cAAcpwG,UAAUy+G,aAAe,EAQvCrO,cAAcpwG,UAAU0+G,mBAAoB,EAQ5CtO,cAAcpwG,UAAU68F,MAAO,EAQ/BuT,cAAcpwG,UAAU2+G,cAAe,EAQvCvO,cAAcpwG,UAAU4+G,iBAAkB,EAQ1CxO,cAAcpwG,UAAU6+G,YAAa,EAOrCzO,cAAcpwG,UAAU87C,KAAO,KAO/Bs0D,cAAcpwG,UAAU8+G,gBAAiB,EAOzC1O,cAAcpwG,UAAU++G,WAAY,EAOpC3O,cAAcpwG,UAAUmtF,SAAW,EAOnCijB,cAAcpwG,UAAUs7G,aAAe,WAEtC,OAAOh7G,KAAKikG,YAQb6L,cAAcpwG,UAAUi8G,SAAW,SAAS3uD,EAAMhO,EAAG4L,GAEpD,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WACnB78D,EAAS+f,EAAM2vE,UAAU/oC,GACzBi3C,EAAajkG,KAAKg7G,eAEtB,GAAY,MAARhuD,GAA0B,MAAV3mD,EACpB,CACC,IAAI6C,EAAI,EACJ4U,EAAO,EACP6vC,EAAavnC,EAAMwnC,cAAcvnD,GACjC/I,EAAQ,EAAe0hD,EAAI4L,EAC3B8zD,EAAS1+G,KAAKosD,MAAMU,UAAUC,SAAS1mD,GAS3C,IAPc,MAAVq4G,IAEHphH,GAAS,EAAeohH,EAAO1/D,EAAI0/D,EAAO9zD,GAG3CttD,GAAS0C,KAAKosD,MAAMuR,KAAKxQ,MAEpBjkD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAC5B,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,GAErC,GAAI6J,GAASi6C,EACb,CACC,IAAI8P,EAAS12C,EAAM62F,YAAYlqG,GAE/B,GAAc,MAAV+pD,EACJ,CACC,IAAIntC,EAAM,EACTmtC,EAAO9d,EAAI8d,EAAOhX,MAAQ,EAC1BgX,EAAOlS,EAAIkS,EAAOnX,OAAS,EAE5B,GAAI7nC,GAAQxgB,GAASqyB,EAAMryB,EAE1B,MAGDwgB,EAAO6R,IAMV,IAAI46B,EAAMlkD,EAAOs4G,SAAS3xD,GAC1BzC,EAAMrqD,KAAKwD,IAAI,EAAGwF,GAAMA,EAAIqhD,EAAO,EAAI,IAEvCnkC,EAAM5f,IAAIH,EAAQ2mD,EAAMzC,KAU1BulD,cAAcpwG,UAAUk/G,cAAgB,SAASv4G,GAEhD,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WACnBizB,EAAO/vE,EAAM62F,YAAY52G,GAK7B,GAA4B,MAAxBrG,KAAKosD,MAAM2R,YAA+B,MAARo4B,GACrC/vE,EAAMy4F,QAAQx4G,IAAYA,GAAUrG,KAAKosD,MAAMU,UAAUgyD,aAC1D,CACC,IAAIh5D,EAAQ9lD,KAAKosD,MAAM2R,UAAU5J,YAAc,EAC3CxO,EAAS3lD,KAAKosD,MAAM2R,UAAU7vB,aAAe,EACjDioD,EAAO,IAAItrC,YAAY,EAAG,EAAG/E,EAAOH,GAGrC,OAAOwwC,GAQR2Z,cAAcpwG,UAAUq/G,eAAiB,SAAS14G,GAMjD,IAJA,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WACnBvV,EAAavnC,EAAMwnC,cAAcvnD,GACjC+5D,EAAQ,GAEHl3D,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,IAEhClJ,KAAK08G,gBAAgB3pG,IAAU/S,KAAKw8G,gBAAgBzpG,IAExDqtD,EAAMrvD,KAAKgC,GAeb,OAXI/S,KAAKy+G,WAERr+C,EAAM/xC,KAAK63B,QAAQ1jD,KAAKxC,MAAM,SAASg/G,EAAIC,GAE1C,IAAIC,EAAOl/G,KAAKosD,MAAM6pC,gBAAgB+oB,GAClCG,EAAOn/G,KAAKosD,MAAM6pC,gBAAgBgpB,GAEtC,OAAQC,EAAKt0D,GAAKu0D,EAAKv0D,EAAK,EAAMs0D,EAAKt0D,EAAIu0D,EAAKv0D,EAAI,EAAK,GAAK,MAIzDwV,GAQR0vC,cAAcpwG,UAAUotF,KAAO,SAASxvF,GAEvC,GAAqB,MAAjB0C,KAAK6sF,UAAoB7sF,KAAK6sF,SAAW,IAE5CvvF,EAAQ4C,KAAKwD,IAAIpG,EAAO0C,KAAK6sF,UAEzBvvF,EAAQ0C,KAAK6sF,SAAW,GAC5B,CACC,IAAI3tB,EAAM5hE,EAAQ0C,KAAK6sF,SACvBvvF,GAAS4hE,EAAMl/D,KAAK6sF,SAAW,EAAK7sF,KAAK6sF,SAAW3tB,GAAQA,EAI9D,OAAO5hE,GAWRwyG,cAAcpwG,UAAU+zD,QAAU,SAASptD,GAE1C,GAAc,MAAVA,EACJ,CACC,IAAI8vF,EAAOn2F,KAAK4+G,cAAcv4G,GAC1B49F,EAAajkG,KAAKg7G,eAClB50F,EAAQpmB,KAAKosD,MAAM8W,WACnBk8C,EAAY,KAEJ,MAARjpB,IAEHipB,EAAY,EAAejpB,EAAKxwC,OAAS3lD,KAAKqoF,UAAYroF,KAAKm+G,aAC9DhoB,EAAKrwC,MAAQ9lD,KAAKunF,WAAavnF,KAAKooF,aAGtCg3B,GAAa,EAAIp/G,KAAKukE,OACtB,IAAI1N,EAAK72D,KAAK62D,GAAK72D,KAAKukE,OAASvkE,KAAKunF,WAClCzwB,EAAK92D,KAAK82D,GAAK92D,KAAKukE,OAASvkE,KAAKqoF,UAGtC,GAAIroF,KAAKosD,MAAMizD,WAAWh5G,GAC1B,CAEC,IAAIuhB,EAAQ5nB,KAAKosD,MAAMyvD,aAAax1G,GAChC4E,EAAQi7C,QAAQ4P,UAAUluC,EAAOiiC,YAAY6T,gBAAiB7T,YAAYoiB,mBAC1EqzC,EAAsE,GAA/Dp5D,QAAQxb,SAAS9iB,EAAOiiC,YAAY+T,kBAAkB,GAErD,MAARu4B,IAIFlrF,EAFGq0G,EAEKp/G,KAAKyD,IAAIsH,EAAOkrF,EAAKxwC,QAIrBzlD,KAAKyD,IAAIsH,EAAOkrF,EAAKrwC,QAI3Bm+C,GAAcqb,IAEjBF,GAAan0G,GAGVq0G,EAEHxoD,GAAM7rD,EAIN4rD,GAAM5rD,EAIRmb,EAAMk7C,cACN,IAQC,IANA,IAAI3xC,EAAM,EACN7R,EAAO,KACP06F,EAAY,EACZnR,EAAY,KACZjnC,EAAQpgE,KAAK++G,eAAe14G,GAEvB6C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI6J,EAAQqtD,EAAMl3D,GACd8sF,EAAM5vE,EAAM62F,YAAYlqG,GAE5B,GAAW,MAAPijF,EACJ,CACCA,EAAMA,EAAIxxE,QAEO,MAAbxkB,KAAKw7C,MAAwB,MAAR19B,IAEnBmmF,GAAcnmF,EAAKkhC,EAAIlhC,EAAKgoC,MAChCkwC,EAAIlwC,MAAQ,EAAI9lD,KAAK0qG,QAAU1qG,KAAKw7C,OAClCyoD,GAAcnmF,EAAK8sC,EAAI9sC,EAAK6nC,OAC9BqwC,EAAIrwC,OAAS,EAAI3lD,KAAK0qG,QAAU1qG,KAAKw7C,QAErC19B,EAAO,KAEHmmF,EAEHntC,GAAMnnC,EAAM3vB,KAAK0qG,QAIjB7zC,GAAMlnC,EAAM3vB,KAAK0qG,QAGlB/6E,EAAM,GAIRA,EAAMzvB,KAAKwD,IAAIisB,EAAK,EAAeqmE,EAAIrwC,OAASqwC,EAAIlwC,OACpD,IAAI44C,EAAK,EAET,IAAK1+F,KAAKw+G,eACV,CACC,IAAIe,EAAav/G,KAAKosD,MAAMyvD,aAAa9oG,GACzC2rF,EAAKx4C,QAAQ4P,UAAUypD,EAAY11D,YAAY6kB,kBAAmB,GAGnE,GAAY,MAAR5wD,EACJ,CACC,IAAIimD,EAAOy0C,EAAYx4G,KAAK0qG,QAAUxqG,KAAKC,MAAMu+F,EAAK,GAElDuF,EAEHjO,EAAIh3C,EAAIh/C,KAAK8sF,MAAO9sF,KAAc,UAAIE,KAAKwD,IAAIqgE,EAAMiyB,EAAIh3C,GACxD+kB,GAAQ/jE,KAAKunF,YAAcvnF,KAAKunF,WAIjCyO,EAAIprC,EAAI5qD,KAAK8sF,MAAO9sF,KAAc,UAAIE,KAAKwD,IAAIqgE,EAAMiyB,EAAIprC,GACxDmZ,GAAQ/jE,KAAKqoF,WAAaroF,KAAKqoF,eAGxBroF,KAAKo+G,oBAEVna,EAEHjO,EAAIh3C,EAAKh/C,KAAKy+G,WAAazoB,EAAIh3C,EAAI6X,EAAM32D,KAAKwD,IAAI1D,KAAK8sF,KAAKkJ,EAAIh3C,EAC/Dh/C,KAAKunF,YAAcvnF,KAAKunF,WAAY1wB,GAAMA,EAI3Cm/B,EAAIprC,EAAK5qD,KAAKy+G,WAAazoB,EAAIprC,EAAIkM,EAAM52D,KAAKwD,IAAI1D,KAAK8sF,KAAKkJ,EAAIprC,EAC/D5qD,KAAKqoF,WAAaroF,KAAKqoF,UAAWvxB,GAAMA,GAIvCmtC,EAEHjO,EAAIprC,EAAIkM,EAIRk/B,EAAIh3C,EAAI6X,EAGL72D,KAAKu8F,MAAqB,MAAb6iB,IAEZnb,EAEHjO,EAAIrwC,OAASy5D,EAIbppB,EAAIlwC,MAAQs5D,GAIVnb,EAEHjO,EAAIlwC,MAAQ9lD,KAAK8sF,KAAKkJ,EAAIlwC,OAI1BkwC,EAAIrwC,OAAS3lD,KAAK8sF,KAAKkJ,EAAIrwC,QAG5B3lD,KAAKw/G,iBAAiBzsG,EAAOijF,GAC7BqR,EAAYt0F,EACZ+K,EAAOk4E,EAINwiB,EAFGvU,EAESnmF,EAAKkhC,EAAIlhC,EAAKgoC,MAAQ5lD,KAAKC,MAAMu+F,EAAK,GAItC5gF,EAAK8sC,EAAI9sC,EAAK6nC,OAASzlD,KAAKC,MAAMu+F,EAAK,IAKlD1+F,KAAKq+G,cAAwB,MAARloB,GAAwB,MAARr4E,IAAiB9d,KAAKosD,MAAMqzD,gBAAgBp5G,GAEpFrG,KAAK0/G,qBAAqBr5G,EAAQ8vF,EAAMr4E,GAEhC9d,KAAKu+G,YAAsB,MAARpoB,GAAwB,MAARr4E,GAA6B,MAAbupF,IAEvDpD,EAEHnmF,EAAKgoC,MAAQqwC,EAAKrwC,MAAQhoC,EAAKkhC,EAAIh/C,KAAK0qG,QAAU1qG,KAAKooF,YAAcpoF,KAAKunF,WAI1EzpE,EAAK6nC,OAASwwC,EAAKxwC,OAAS7nC,EAAK8sC,EAAI5qD,KAAK0qG,QAAU1qG,KAAKm+G,aAG1Dn+G,KAAKw/G,iBAAiBnY,EAAWvpF,IAGnC,QAECsI,EAAMo7C,eAaTsuC,cAAcpwG,UAAU8/G,iBAAmB,SAASzsG,EAAOijF,GAE1D,IAAImpB,EAAOn/G,KAAKosD,MAAM6pC,gBAAgBljF,GAE1B,MAARosG,GAAgBnpB,EAAIh3C,GAAKmgE,EAAKngE,GAAKg3C,EAAIprC,GAAKu0D,EAAKv0D,GACpDorC,EAAIlwC,OAASq5D,EAAKr5D,OAASkwC,EAAIrwC,QAAUw5D,EAAKx5D,QAE9C3lD,KAAKosD,MAAM8W,WAAWo6C,YAAYvqG,EAAOijF,IAY3C8Z,cAAcpwG,UAAUggH,qBAAuB,SAASr5G,EAAQ8vF,EAAMr4E,GAErE,IAAImmF,EAAajkG,KAAKg7G,eAClB50F,EAAQpmB,KAAKosD,MAAM8W,WAEnBy8C,EAAQxpB,EAAK3xE,QAEjB,GAAIy/E,EACJ,CACC,IAAIt0E,EAAM7R,EAAKkhC,EAAIlhC,EAAKgoC,MAAQ9lD,KAAKooF,YAAcpoF,KAAKukE,OAEpDvkE,KAAKs+G,gBAERqB,EAAM75D,MAAQ5lD,KAAKwD,IAAIi8G,EAAM75D,MAAOn2B,GAIpCgwF,EAAM75D,MAAQn2B,MAIhB,CACKA,EAAM7R,EAAK8sC,EAAI9sC,EAAK6nC,OAAS3lD,KAAKm+G,aAAen+G,KAAKukE,OAEtDvkE,KAAKs+G,gBAERqB,EAAMh6D,OAASzlD,KAAKwD,IAAIi8G,EAAMh6D,OAAQh2B,GAItCgwF,EAAMh6D,OAASh2B,EAIbwmE,EAAKn3C,GAAK2gE,EAAM3gE,GAAKm3C,EAAKvrC,GAAK+0D,EAAM/0D,GACxCurC,EAAKrwC,OAAS65D,EAAM75D,OAASqwC,EAAKxwC,QAAUg6D,EAAMh6D,QAElDv/B,EAAMk3F,YAAYj3G,EAAQs5G,IAI5Bh/D,WAAWmvD,cAAyC,qBAAlBA,cAAgCA,mBAAgBvvG,EAuClFwvG,kBAAkBrwG,UAAY,IAAIiwG,cAClCI,kBAAkBrwG,UAAUqyB,YAAcg+E,kBAQ1CA,kBAAkBrwG,UAAUukG,WAAa,KAQzC8L,kBAAkBrwG,UAAUgrG,QAAU,KAQtCqF,kBAAkBrwG,UAAU6kE,OAAS,KAOrCwrC,kBAAkBrwG,UAAUkgH,gBAAiB,EAO7C7P,kBAAkBrwG,UAAUs7G,aAAe,WAE1C,OAAOh7G,KAAKikG,YAQb8L,kBAAkBrwG,UAAUi8G,SAAW,SAAS3uD,EAAMhO,EAAG4L,GAExD,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WACnB78D,EAAS+f,EAAM2vE,UAAU/oC,GAE7B,GAAY,MAARA,GACO,MAAV3mD,EACD,CACC,IAAI6C,EAAI,EACJ4U,EAAO,EACP6vC,EAAavnC,EAAMwnC,cAAcvnD,GAIrC,IAAK6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAC5B,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,GACjC4zD,EAAS98D,KAAKw9G,gBAAgBzqG,GAElC,GAAc,MAAV+pD,EACJ,CACC,IAAIntC,EAAMmtC,EAAO9d,EAAI8d,EAAOhX,MAAQ,EAEpC,GAAIhoC,EAAOkhC,GAAKrvB,EAAMqvB,EAErB,MAGDlhC,EAAO6R,GAKT,IAAI46B,EAAMlkD,EAAOs4G,SAAS3xD,GAC1BzC,EAAMrqD,KAAKwD,IAAI,EAAGwF,GAAMA,EAAIqhD,EAAO,EAAI,IAEvCnkC,EAAM5f,IAAIH,EAAQ2mD,EAAMzC,KAU1BwlD,kBAAkBrwG,UAAU+zD,QAAU,SAASptD,GAE9C,IAAI49F,EAAajkG,KAAKg7G,eAClB50F,EAAQpmB,KAAKosD,MAAM8W,WACnBizB,EAAO/vE,EAAM62F,YAAY52G,GAK7B,GAA4B,MAAxBrG,KAAKosD,MAAM2R,YACJ,MAARo4B,GACF/vE,EAAMy4F,QAAQx4G,IACdA,GAAUrG,KAAKosD,MAAMU,UAAUgyD,aAChC,CACC,IAAIh5D,EAAQ9lD,KAAKosD,MAAM2R,UAAU5J,YAAc,EAC3CxO,EAAS3lD,KAAKosD,MAAM2R,UAAU7vB,aAAe,EACjDioD,EAAO,IAAItrC,YAAY,EAAG,EAAG/E,EAAOH,GAGrC,GAAY,MAARwwC,EACJ,CAIC,IAHA,IAAIvkF,EAAW,GACX+7C,EAAavnC,EAAMwnC,cAAcvnD,GAE5B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,IAEhClJ,KAAK08G,gBAAgB3pG,IACzB/S,KAAKw8G,gBAAgBzpG,IAErBnB,EAASb,KAAKgC,GAIhB,IAAI9K,EAAI2J,EAAShR,OAEjB,GAAIqH,EAAI,EACR,CACC,IAAI4uD,EAAK72D,KAAKukE,OACVzN,EAAK92D,KAAKukE,OACVs7C,EAAQ,EAAe1pB,EAAKxwC,OAASwwC,EAAKrwC,MAC9C+5D,GAAS,EAAI7/G,KAAKukE,OAElB,IAAI9jB,EAAQzgD,KAAKosD,MAAMizD,WAAWh5G,GACjCrG,KAAKosD,MAAM0zD,aAAaz5G,GACxB,IAAIwkD,YAELg1D,GAAS,EAAep/D,EAAKkF,OAASlF,EAAKqF,MAC3C+Q,GAAUpW,EAAKqF,MACfgR,GAAUrW,EAAKkF,OAEf,IAAIh2B,EAAM3vB,KAAKukE,QAAUt8D,EAAI,GAAKjI,KAAK0qG,QACnCptG,EAAQ,GACT64F,EAAKrwC,MAAQ+Q,EAAKlnC,GAAO1nB,GACzBkuF,EAAKxwC,OAASmR,EAAKnnC,GAAO1nB,EAI7B,GAAI3K,EAAQ,EACZ,CACC8oB,EAAMk7C,cACN,IAEC,IAASp4D,EAAI,EAAGA,EAAIjB,EAAGiB,IACvB,CACK6J,EAAQnB,EAAS1I,GAArB,IACI8sF,EAAM5vE,EAAM62F,YAAYlqG,GAEjB,MAAPijF,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAIh3C,EAAI6X,EACRm/B,EAAIprC,EAAIkM,EAEJmtC,GAECjkG,KAAK4/G,iBAER5pB,EAAIlwC,MAAQxoD,EACZ04F,EAAIrwC,OAASk6D,GAGdhpD,GAAMv5D,EAAQ0C,KAAK0qG,UAIf1qG,KAAK4/G,iBAER5pB,EAAIrwC,OAASroD,EACb04F,EAAIlwC,MAAQ+5D,GAGb/oD,GAAMx5D,EAAQ0C,KAAK0qG,SAGpBtkF,EAAMk3F,YAAYvqG,EAAOijF,KAI5B,QAEC5vE,EAAMo7C,iBAOX7gB,WAAWovD,kBAAiD,qBAAtBA,kBAAoCA,uBAAoBxvG,EAmC9FyvG,oBAAoBtwG,UAAY,IAAIiwG,cACpCK,oBAAoBtwG,UAAUqyB,YAAci+E,oBAO5CA,oBAAoBtwG,UAAUukG,WAAa,KAO3C+L,oBAAoBtwG,UAAUuwG,OAAS,KAQvCD,oBAAoBtwG,UAAU2+G,cAAe,EAS7CrO,oBAAoBtwG,UAAUqgH,wBAAyB,EAOvD/P,oBAAoBtwG,UAAUsgH,aAAe,GAO7ChQ,oBAAoBtwG,UAAUugH,gBAAkB,EAOhDjQ,oBAAoBtwG,UAAUwgH,kBAAoB,EAOlDlQ,oBAAoBtwG,UAAUygH,mBAAqB,EAOnDnQ,oBAAoBtwG,UAAU0gH,iBAAmB,EAQjDpQ,oBAAoBtwG,UAAU2gH,eAAiB,KAQ/CrQ,oBAAoBtwG,UAAU4gH,UAAW,EAQzCtQ,oBAAoBtwG,UAAUu8G,QAAU,KAOxCjM,oBAAoBtwG,UAAU6gH,cAAgB,GAO9CvQ,oBAAoBtwG,UAAU8gH,aAAe,GAQ7CxQ,oBAAoBtwG,UAAU+gH,YAAa,EAO3CzQ,oBAAoBtwG,UAAUghH,eAAiB,EAO/C1Q,oBAAoBtwG,UAAUihH,gBAAkB,EAOhD3Q,oBAAoBtwG,UAAUkhH,aAAe,EAQ7C5Q,oBAAoBtwG,UAAUmhH,cAAgB,EAO9C7Q,oBAAoBtwG,UAAUohH,aAAc,EAQ5C9Q,oBAAoBtwG,UAAUqhH,WAAY,EAQ1C/Q,oBAAoBtwG,UAAUshH,YAAa,EAQ3ChR,oBAAoBtwG,UAAUuhH,cAAgB,KAO9CjR,oBAAoBtwG,UAAUsyF,KAAO,KAQrCge,oBAAoBtwG,UAAUwT,KAAO,KAYrC88F,oBAAoBtwG,UAAUg9G,gBAAkB,SAASZ,GAExD,OAAOnM,cAAcjwG,UAAUg9G,gBAAgB37G,MAAMf,KAAMgB,YACd,GAA5ChB,KAAKosD,MAAM80D,eAAepF,GAAQl7G,QAQpCovG,oBAAoBtwG,UAAUs7G,aAAe,WAE5C,OAAOh7G,KAAKikG,YAkBb+L,oBAAoBtwG,UAAU+zD,QAAU,SAASptD,EAAQ2rF,GAExDhyF,KAAKqG,OAASA,EACd,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WAEvB,GAAY,MAAR8uB,EAGH,GAAIhyF,KAAKosD,MAAM4B,SAAS3nD,EAAQ+f,EAAM2vE,UAAU1vF,GAC/CrG,KAAKiwG,QAASjwG,KAAKiwG,QAAQ,GAAOrvG,OAAS,EAE3CZ,KAAKgyF,KAAO3rF,MAMb,CACC,IAAI+qG,EAAQpxG,KAAKosD,MAAM+0D,cAAc96G,GAAQ,EAAMrG,KAAKiwG,QAExD,GAAImB,EAAMxwG,OAAS,EAElB,IAAK,IAAIsI,EAAI,EAAGA,EAAIkoG,EAAMxwG,OAAQsI,IAEjC,IAAKlJ,KAAK08G,gBAAgBtL,EAAMloG,KAC/BlJ,KAAKosD,MAAM4B,SAASojD,EAAMloG,GAAI,KAC7BlJ,KAAKiwG,QAASjwG,KAAKiwG,QAAQ,GAAOrvG,OAAS,EAC7C,CACCZ,KAAKgyF,KAAOof,EAAMloG,GAClB,YAQJlJ,KAAKgyF,KAAOA,EAGb,GAAiB,MAAbhyF,KAAKgyF,KACT,CAcC,GAbIhyF,KAAKq+G,aAERr+G,KAAKqgH,eAAiB,IAAIhiH,OAI1B2B,KAAKqgH,eAAiB,KAIvBrgH,KAAKohH,QAAU,KACfphH,KAAKqhH,QAAU,KAEXh7G,GAAUrG,KAAKgyF,MAAkC,MAA1B5rE,EAAMuvE,SAAStvF,IAAmBrG,KAAK+/G,uBAClE,CACC,IAAI/pB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHh2F,KAAKohH,QAAUprB,EAAIh3C,EACnBh/C,KAAKqhH,QAAUrrB,EAAIprC,GAIrBxkC,EAAMk7C,cAEN,IAYC,GAVAthE,KAAKi8G,QAAU,IAAI59G,OACnB2B,KAAKkT,KAAOlT,KAAKshH,IAAIthH,KAAKgyF,KAAM3rF,GAE5BrG,KAAKghH,aAERhhH,KAAKihH,cAAgB,GACrBjhH,KAAKuhH,gBAAgBvhH,KAAKkT,KAAM,GAChClT,KAAKwhH,eAAexhH,KAAKkT,KAAM,IAGf,MAAblT,KAAKkT,KACT,CACClT,KAAKkxG,OAAOlxG,KAAKkT,MACjB,IAAI2jD,EAAK72D,KAAKosD,MAAMygC,SAChB/1B,EAAKD,EAET,IAAK72D,KAAKsgH,SACV,CACC,IAAIlgE,EAAIpgD,KAAKw9G,gBAAgBx9G,KAAKgyF,MAEzB,MAAL5xC,IAEHyW,EAAKzW,EAAEpB,EACP8X,EAAK1W,EAAEwK,GAIT,IAAIkS,EAAS,KAWb,GAPCA,EAFG98D,KAAKg7G,eAECh7G,KAAKyhH,iBAAiBzhH,KAAKkT,KAAM2jD,EAAIC,GAIrC92D,KAAK0hH,eAAe1hH,KAAKkT,KAAM,KAAM2jD,EAAIC,GAGrC,MAAVgG,EACJ,CACC,IAAIjuB,EAAK,EACLE,EAAK,EAEL+tB,EAAO9d,EAAI,IAEdnQ,EAAK3uC,KAAKk3D,IAAIP,EAAKiG,EAAO9d,IAGvB8d,EAAOlS,EAAI,IAEd7b,EAAK7uC,KAAKk3D,IAAIN,EAAKgG,EAAOlS,IAGjB,GAAN/b,GAAiB,GAANE,GAEd/uC,KAAK2hH,SAAS3hH,KAAKkT,KAAM27B,EAAIE,GAG1B/uC,KAAKq+G,cAERr+G,KAAK4hH,gBAGF5hH,KAAK8gH,aAGR9gH,KAAK6hH,oBAAoB7hH,KAAKkT,MAKhC,GAAoB,MAAhBlT,KAAKohH,SAAmC,MAAhBphH,KAAKqhH,QACjC,CACKrrB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAIh3C,EAAIh/C,KAAKohH,QACbprB,EAAIprC,EAAI5qD,KAAKqhH,QACbj7F,EAAMk3F,YAAYj3G,EAAQ2vF,MAK9B,QAEC5vE,EAAMo7C,eAUTwuC,oBAAoBtwG,UAAUiiH,SAAW,SAASzuG,EAAM27B,EAAIE,GAE3D77B,EAAK8rC,GAAKnQ,EACV37B,EAAK03C,GAAK7b,EACV/uC,KAAKe,MAAMmS,GAEX,IAAIH,EAAQG,EAAKH,MAEjB,MAAgB,MAATA,EAEN/S,KAAK2hH,SAAS5uG,EAAO87B,EAAIE,GACzBh8B,EAAQA,EAAMjR,MAUhBkuG,oBAAoBtwG,UAAUoiH,kBAAoB,SAAS59G,EAAQ6pD,GAElE,IAAIuS,EAAS,IAAI1X,aAEjBmF,EAAM1/B,MAAK,SAAS0zF,EAAIC,GAEvB,IAAIC,EAAOF,EAAG1F,YAAY0F,EAAG1F,aAAY,IAAUn4G,GAC/Cy1D,EAAK2G,EAAOjhE,IAAI4iH,GAEV,MAANtoD,IAEHA,EAAK8G,WAAW13D,OAAOk5G,GAAMh5G,MAAMw3D,WAAWC,gBAC9CJ,EAAOzX,IAAIo5D,EAAMtoD,IAGlB,IAAIuoD,EAAOF,EAAG3F,YAAY2F,EAAG3F,aAAY,IAAUn4G,GAC/C01D,EAAK0G,EAAOjhE,IAAI6iH,GAQpB,OANU,MAANtoD,IAEHA,EAAK6G,WAAW13D,OAAOm5G,GAAMj5G,MAAMw3D,WAAWC,gBAC9CJ,EAAOzX,IAAIq5D,EAAMtoD,IAGX6G,WAAWE,QAAQhH,EAAIC,OAUhCo2C,oBAAoBtwG,UAAU6hH,gBAAkB,SAASruG,EAAMivG,IAE9B,MAA5BniH,KAAKihH,cAAckB,IAAiBniH,KAAKihH,cAAckB,GAAQjvG,EAAKyyC,UAEvE3lD,KAAKihH,cAAckB,GAAQjvG,EAAKyyC,QAGjC,IAAI5yC,EAAQG,EAAKH,MAEjB,MAAgB,MAATA,EAEN/S,KAAKuhH,gBAAgBxuG,EAAOovG,EAAO,GACnCpvG,EAAQA,EAAMjR,MAUhBkuG,oBAAoBtwG,UAAU8hH,eAAiB,SAAStuG,EAAMivG,GAE7B,MAA5BniH,KAAKihH,cAAckB,IAAiBniH,KAAKihH,cAAckB,GAAQjvG,EAAKyyC,SAEvEzyC,EAAKyyC,OAAS3lD,KAAKihH,cAAckB,IAGlC,IAAIpvG,EAAQG,EAAKH,MAEjB,MAAgB,MAATA,EAEN/S,KAAKwhH,eAAezuG,EAAOovG,EAAO,GAClCpvG,EAAQA,EAAMjR,MAWhBkuG,oBAAoBtwG,UAAU4hH,IAAM,SAASt0D,EAAM3mD,GAElD,IAAIsK,EAAK8vD,WAAW13D,OAAOikD,GACvB95C,EAAO,KAEX,GAAY,MAAR85C,GAAoC,MAApBhtD,KAAKi8G,QAAQtrG,KAAgB3Q,KAAK08G,gBAAgB1vD,GACtE,CACChtD,KAAKi8G,QAAQtrG,GAAMq8C,EACnB95C,EAAOlT,KAAKoiH,WAAWp1D,GAEvB,IAAI5mC,EAAQpmB,KAAKosD,MAAM8W,WACnB2wC,EAAO,KACPwO,EAAMriH,KAAKosD,MAAM4B,SAAShB,EAAM3mD,EAAQrG,KAAKiwG,QAASjwG,KAAKiwG,QAAQ,GAAO,GAC1EtyC,EAAO39D,KAAKosD,MAAMU,UAElB9sD,KAAK+gH,WAER/gH,KAAK8hH,kBAAkB90D,EAAMq1D,GAG9B,IAAK,IAAIn5G,EAAI,EAAGA,EAAIm5G,EAAIzhH,OAAQsI,IAChC,CACC,IAAImxD,EAAOgoD,EAAIn5G,GAEf,IAAKlJ,KAAK48G,cAAcviD,GACxB,CAEKr6D,KAAKygH,YAERzgH,KAAKk9G,cAAc7iD,EAAM,MAGtBr6D,KAAK8gH,cAER9gH,KAAK68G,oBAAoBxiD,GAAM,GAC/Br6D,KAAKk9G,cAAc7iD,EAAM,OAI1B,IAAIvpB,EAAQ6sB,EAAK5Q,SAASsN,GACtBj2D,EAAmB,MAAT0sC,EAAiBA,EAAMohE,mBAAmBlyG,KAAKiwG,QAAUtyC,EAAKu0C,mBAAmB73C,EAAMr6D,KAAKiwG,QACtGtgF,EAAM3vB,KAAKshH,IAAIl9G,EAAQiC,GAEhB,MAAPspB,GAA4C,MAA7BvJ,EAAM62F,YAAY74G,KAExB,MAARyvG,EAEH3gG,EAAKH,MAAQ4c,EAIbkkF,EAAK/xG,KAAO6tB,EAGbkkF,EAAOlkF,KAMX,OAAOzc,GASR88F,oBAAoBtwG,UAAUwxG,OAAS,SAASh+F,GAE/C,GAAY,MAARA,EACJ,CACC,IAAIH,EAAQG,EAAKH,MAEjB,MAAgB,MAATA,EAEN/S,KAAKkxG,OAAOn+F,GACZA,EAAQA,EAAMjR,KAGG,MAAdoR,EAAKH,MAER/S,KAAKsiH,aAAapvG,EAAMlT,KAAKu/B,KAAKrsB,IAIlClT,KAAKuiH,WAAWrvG,KAQnB88F,oBAAoBtwG,UAAU+hH,iBAAmB,SAASvuG,EAAM2jD,EAAIC,EAAIgG,GAEvE5pD,EAAK8rC,GAAK6X,EAAK3jD,EAAKsvG,QACpBtvG,EAAK03C,GAAKkM,EAAK5jD,EAAKuvG,QACpB3lD,EAAS98D,KAAKe,MAAMmS,EAAM4pD,GAC1B,IAAI/pD,EAAQG,EAAKH,MAEjB,GAAa,MAATA,EACJ,CACC+pD,EAAS98D,KAAKyhH,iBAAiB1uG,EAAOG,EAAK8rC,EAAG9rC,EAAK03C,EAAGkS,GACtD,IAAI4lD,EAAgBxvG,EAAK03C,EAAI73C,EAAM0vG,QAC/Bj7E,EAAIz0B,EAAMjR,KAEd,MAAY,MAAL0lC,EAENs1B,EAAS98D,KAAKyhH,iBAAiBj6E,EAAGt0B,EAAK8rC,EAAIjsC,EAAMyvG,QAASE,EAAe5lD,GACzE4lD,GAAiBl7E,EAAEi7E,QACnBj7E,EAAIA,EAAE1lC,KAIR,OAAOg7D,GAMRkzC,oBAAoBtwG,UAAUgiH,eAAiB,SAASxuG,EAAM7M,EAAQwwD,EAAIC,EAAIgG,GAE7E5pD,EAAK8rC,GAAK6X,EAAK3jD,EAAKuvG,QACpBvvG,EAAK03C,GAAKkM,EAAK5jD,EAAKsvG,QACpB1lD,EAAS98D,KAAKe,MAAMmS,EAAM4pD,GAC1B,IAAI/pD,EAAQG,EAAKH,MAEjB,GAAa,MAATA,EACJ,CACC+pD,EAAS98D,KAAK0hH,eAAe3uG,EAAOG,EAAMA,EAAK8rC,EAAG9rC,EAAK03C,EAAGkS,GAC1D,IAAI4lD,EAAgBxvG,EAAK8rC,EAAIjsC,EAAM0vG,QAC/Bj7E,EAAIz0B,EAAMjR,KAEd,MAAY,MAAL0lC,EAENs1B,EAAS98D,KAAK0hH,eAAel6E,EAAGt0B,EAAMwvG,EAAexvG,EAAK03C,EAAI73C,EAAMyvG,QAAS1lD,GAC7E4lD,GAAiBl7E,EAAEi7E,QACnBj7E,EAAIA,EAAE1lC,KAIR,OAAOg7D,GAMRkzC,oBAAoBtwG,UAAU4iH,aAAe,SAASpvG,EAAMyyC,GAE3D,IAAI3G,EAAIh/C,KAAKwgH,aAAexgH,KAAKugH,cAC7BlnD,GAAM1T,EAASzyC,EAAK4yC,OAAS,EAAI9lD,KAAKwgH,aACtCtmD,EAAKb,EAAKnmD,EAAK4yC,MAAQ,EAAI9lD,KAAKwgH,aAAe76D,EAEnDzyC,EAAKH,MAAMyvG,QAAUxjE,EAAI9rC,EAAKyyC,OAC9BzyC,EAAKH,MAAM0vG,QAAUvoD,EAErBhnD,EAAKyvG,QAAQC,UAAY5iH,KAAK6iH,WAAW3vG,EAAKyyC,OAAQ,EACrD3lD,KAAK6iH,WAAW7jE,EAAGkb,EAAIhnD,EAAKyvG,QAAQC,YACrC1vG,EAAKyvG,QAAQG,UAAY9iH,KAAK6iH,WAAW3vG,EAAKyyC,OAAQ,EACrD3lD,KAAK6iH,WAAW7jE,EAAGqa,EAAInmD,EAAKyvG,QAAQG,aAMtC9S,oBAAoBtwG,UAAU6iH,WAAa,SAASrvG,GAEnD,IAAI0oD,EAAO,EAAI57D,KAAKwgH,aAEpBttG,EAAKyvG,QAAQI,UAAY/iH,KAAK6iH,WAC7B3vG,EAAKyyC,OAASiW,EAAM,GACrB1oD,EAAKyvG,QAAQC,UAAY1vG,EAAKyvG,QAAQI,UACtC7vG,EAAKyvG,QAAQK,UAAYhjH,KAAK6iH,WAC7B,GAAI3vG,EAAK4yC,MAAQ8V,GAClB1oD,EAAKyvG,QAAQG,UAAY9iH,KAAK6iH,WAC7B3vG,EAAKyyC,OAASiW,EAAM,EAAG1oD,EAAKyvG,QAAQK,YAMtChT,oBAAoBtwG,UAAU6/B,KAAO,SAASrsB,GAE7C,IAAI0oD,EAAO,EAAI57D,KAAKwgH,aAEhBztG,EAAQG,EAAKH,MACjBG,EAAKyvG,QAAU5vG,EAAM4vG,QACrB,IAAI57G,EAAIgM,EAAM+yC,MAAQ8V,EAClBqnD,EAAMl8G,EACVgM,EAAQA,EAAMjR,KAEd,MAAgB,MAATiR,EACP,CACC,IAAImR,EAAIlkB,KAAKkjH,MAAMhwG,EAAKyvG,QAAS5vG,EAAM4vG,SACvC5vG,EAAM0vG,QAAUv+F,EAAInd,EACpBgM,EAAMyvG,QAAU,EAChBz7G,EAAIgM,EAAM+yC,MAAQ8V,EAClBqnD,GAAO/+F,EAAInd,EACXgM,EAAQA,EAAMjR,KAGf,OAAOmhH,GAMRjT,oBAAoBtwG,UAAUwjH,MAAQ,SAASvpD,EAAIC,GAElD,IAAI5a,EAAI,EACJ4L,EAAI,EACJu4D,EAAQ,EAERC,EAAQzpD,EAAGmpD,UACXO,EAAQzpD,EAAGgpD,UAEf,MAAgB,MAATS,GAA0B,MAATD,EACxB,CACC,IAAIl/F,EAAIlkB,KAAKo0D,OAAOpV,EAAG4L,EAAGy4D,EAAMx0E,GAAIw0E,EAAMt0E,GACzCq0E,EAAMv0E,GAAIu0E,EAAMr0E,IACjB6b,GAAK1mC,EACLi/F,GAASj/F,EAEL86B,EAAIqkE,EAAMx0E,IAAMu0E,EAAMv0E,IAEzBmQ,GAAKqkE,EAAMx0E,GACX+b,GAAKy4D,EAAMt0E,GACXs0E,EAAQA,EAAMvhH,OAIdk9C,GAAKokE,EAAMv0E,GACX+b,GAAKw4D,EAAMr0E,GACXq0E,EAAQA,EAAMthH,MAIhB,GAAa,MAATuhH,EACJ,CACC,IAAIxiH,EAAIb,KAAKsjH,OAAO3pD,EAAGopD,UAAW,EAAG,EAAGM,EAAOrkE,EAAG4L,GAClD+O,EAAGopD,UAAuB,MAAVliH,EAAEiB,KAAgB83D,EAAGmpD,UAAYliH,EACjD84D,EAAGqpD,UAAYppD,EAAGopD,cAGnB,CACKniH,EAAIb,KAAKsjH,OAAO1pD,EAAGopD,UAAWhkE,EAAG4L,EAAGw4D,EAAO,EAAG,GAEpC,MAAVviH,EAAEiB,OAEL63D,EAAGqpD,UAAYniH,GAMjB,OAFA84D,EAAGmpD,UAAYlpD,EAAGkpD,UAEXK,GAMRnT,oBAAoBtwG,UAAU00D,OAAS,SAASuF,EAAIC,EAAI2pD,EAAIC,EAAI93D,EAAIC,GAEnE,IAAIznC,EAAI,EAER,GAAIwnC,GAAMiO,GAAMA,EAAK4pD,GAAM,EAE1B,OAAO,EAGR,IAAIv3D,EAAIN,EAAK83D,EAAKD,EAAK53D,EAEvB,GAAIK,EAAI,EAEP,GAAI2N,EAAK,EACT,CACC,IAAInyB,EAAImyB,EAAK6pD,EACbt/F,EAAIsjB,EAAI+7E,EAAK3pD,OAET,GAAID,EAAK,EACd,CACKnyB,EAAImyB,EAAKhO,EACbznC,EAAIsjB,EAAIkkB,EAAKkO,OAIb11C,GAAK01C,OAGF,GAAIlO,EAAKiO,EAAK4pD,EACnB,CACK/7E,GAAKkkB,EAAKiO,GAAM6pD,EACpBt/F,EAAIynC,GAAMiO,EAAKpyB,EAAI+7E,QAEf,GAAI73D,EAAKiO,EAAK4pD,EACnB,CACK/7E,GAAK+7E,EAAK5pD,GAAMhO,EACpBznC,EAAIsjB,EAAIkkB,GAAMkO,EAAK4pD,QAInBt/F,EAAIynC,GAAMiO,EAAK4pD,GAGhB,OAAIt/F,EAAI,EAEAA,EAIA,GAOT8rF,oBAAoBtwG,UAAU4jH,OAAS,SAASG,EAAOxpD,EAAIC,EAAIwpD,EAAOtqD,EAAIC,GAEzE,IAAIxqB,EAAKuqB,EAAKsqD,EAAM70E,GAAKorB,EACrBlrB,EAAK,EACLvH,EAAI,EAEQ,GAAZk8E,EAAM70E,GAETE,EAAK20E,EAAM30E,IAIXvH,EAAIqH,EAAK60E,EAAM30E,GACfA,EAAKvH,EAAIk8E,EAAM70E,IAGhB,IAAIqvB,EAAIl+D,KAAK6iH,WAAWh0E,EAAIE,EAAI20E,EAAM5hH,MAGtC,OAFA2hH,EAAM3hH,KAAO9B,KAAK6iH,WAAW,EAAGxpD,EAAKqqD,EAAM30E,GAAKA,EAAKmrB,EAAIgE,GAElDA,GAMR8xC,oBAAoBtwG,UAAU0iH,WAAa,SAASp1D,GAEnD,IAAI95C,EAAO,IAAI7U,OACf6U,EAAK85C,KAAOA,EACZ95C,EAAK8rC,EAAI,EACT9rC,EAAK03C,EAAI,EACT13C,EAAK4yC,MAAQ,EACb5yC,EAAKyyC,OAAS,EAEd,IAAIqwC,EAAMh2F,KAAKw9G,gBAAgBxwD,GAoB/B,OAlBW,MAAPgpC,IAECh2F,KAAKg7G,gBAER9nG,EAAK4yC,MAAQkwC,EAAIrwC,OACjBzyC,EAAKyyC,OAASqwC,EAAIlwC,QAIlB5yC,EAAK4yC,MAAQkwC,EAAIlwC,MACjB5yC,EAAKyyC,OAASqwC,EAAIrwC,SAIpBzyC,EAAKsvG,QAAU,EACftvG,EAAKuvG,QAAU,EACfvvG,EAAKyvG,QAAU,IAAItkH,OAEZ6U,GAMR88F,oBAAoBtwG,UAAUqB,MAAQ,SAASmS,EAAM4pD,GAEpD,IAAI12C,EAAQpmB,KAAKosD,MAAM8W,WACnBlW,EAAO95C,EAAK85C,KACZ5M,EAAIh6B,EAAM62F,YAAYjwD,GAE1B,GAAY,MAARA,GAAqB,MAAL5M,EACpB,CACC,GAAIpgD,KAAKw8G,gBAAgBxvD,KAExB5M,EAAIpgD,KAAKu9G,kBAAkBvwD,EAAM95C,EAAK8rC,EAAG9rC,EAAK03C,GAE1C5qD,KAAKq+G,cACT,CACC,IAAIh4G,EAAS+f,EAAM2vE,UAAU/oC,GACzBr8C,EAAK8vD,WAAW13D,OAAO1C,GAGI,MAA3BrG,KAAKqgH,eAAe1vG,KAEvB3Q,KAAKqgH,eAAe1vG,GAAMtK,GAO5By2D,EAFa,MAAVA,EAEM,IAAIjS,YAAYzK,EAAEpB,EAAGoB,EAAEwK,EAAGxK,EAAE0F,MAAO1F,EAAEuF,QAIrC,IAAIkF,YAAY3qD,KAAKyD,IAAIm5D,EAAO9d,EAAGoB,EAAEpB,GAC7C9+C,KAAKyD,IAAIm5D,EAAOlS,EAAGxK,EAAEwK,GACrB1qD,KAAKwD,IAAIo5D,EAAO9d,EAAI8d,EAAOhX,MAAO1F,EAAEpB,EAAIoB,EAAE0F,OAC1C5lD,KAAKwD,IAAIo5D,EAAOlS,EAAIkS,EAAOnX,OAAQvF,EAAEwK,EAAIxK,EAAEuF,SAI9C,OAAOmX,GAMRkzC,oBAAoBtwG,UAAUmjH,WAAa,SAASh0E,EAAIE,EAAIjtC,GAE3D,IAAI6hH,EAAO,IAAItlH,OAKf,OAJAslH,EAAK90E,GAAKA,EACV80E,EAAK50E,GAAKA,EACV40E,EAAK7hH,KAAOA,EAEL6hH,GAUR3T,oBAAoBtwG,UAAUkiH,cAAgB,WAE7C,IAAIjyF,EAAM,GAEV,IAAK,IAAIhf,KAAM3Q,KAAKqgH,eAEnB1wF,EAAI5e,KAAK/Q,KAAKqgH,eAAe1vG,IAG9B3Q,KAAK29G,cAAcz3D,QAAQia,UAAUxwC,GAAK,GAAO3vB,KAAKggH,aAAchgH,KAAKigH,gBACxEjgH,KAAKkgH,kBAAmBlgH,KAAKmgH,mBAAoBngH,KAAKogH,mBAQxDpQ,oBAAoBtwG,UAAUmiH,oBAAsB,SAAS3uG,GAE5DlT,KAAK4jH,oBAAoB1wG,GACzB,IAAIH,EAAQG,EAAKH,MAEjB,MAAgB,MAATA,EAEN/S,KAAK6hH,oBAAoB9uG,GACzBA,EAAQA,EAAMjR,MAShBkuG,oBAAoBtwG,UAAUkkH,oBAAsB,SAAS1wG,GAE5D,IAAIH,EAAQG,EAAKH,MACb8wG,EAAa3wG,EAAK85C,KAElBW,EAAa,EACbm2D,EAAc,GAElB,MAAgB,MAAT/wG,EACP,CACC46C,IAEA,IAAIo2D,EAAmBhxG,EAAMisC,EAEzBh/C,KAAKikG,aAER8f,EAAmBhxG,EAAM63C,GAG1Bk5D,EAAY/yG,KAAK,IAAI6+F,mBAAmB78F,EAAOgxG,IAC/ChxG,EAAQA,EAAMjR,KAGfgiH,EAAYz1F,KAAKuhF,mBAAmBlwG,UAAUihE,SAE9C,IAAIqjD,EAAiB9wG,EAAK4yC,MAEtBm+D,GAAiBt2D,EAAa,GAAK3tD,KAAK0gH,eAGxCsD,EAAiBC,EAAiB,EAAIjkH,KAAK0gH,iBAE9CsD,GAAkB,EAAIhkH,KAAK0gH,gBAG5B,IAAIwD,EAAcF,EAAiBr2D,EAE/Bw2D,EAAiBD,EAAc,EAE/BF,EAAiBC,EAAiB,EAAIjkH,KAAK0gH,iBAE9CyD,GAAkBnkH,KAAK0gH,gBAGxB,IAAI0D,EAAiBpkH,KAAK4gH,aAAe5gH,KAAK2gH,gBAC1C0D,EAAa,EAEbC,EAAetkH,KAAKw9G,gBAAgBqG,GACxC9wG,EAAQG,EAAKH,MAEb,IAAK,IAAIya,EAAI,EAAGA,EAAIs2F,EAAYljH,OAAQ4sB,IACxC,CAWC,IAVA,IAAI+2F,EAAYT,EAAYt2F,GAAGw/B,KAAKA,KAChCw3D,EAAcxkH,KAAKw9G,gBAAgB+G,GAEnCx2D,EAAQ/tD,KAAKosD,MAAMq4D,gBAAgBZ,EACrCU,GAAW,GAETG,EAAY,GACZ1lE,EAAI,EACJ4L,EAAI,EAEC1hD,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAE7BlJ,KAAKikG,YAIRjlD,EAAIslE,EAAatlE,EAAIslE,EAAax+D,MAClC8E,EAAI05D,EAAa15D,EAAIu5D,EACrBO,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9B5L,EAAIslE,EAAatlE,EAAIslE,EAAax+D,MAC9Bs+D,EACJM,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9BA,EAAI45D,EAAY55D,EAAI45D,EAAY7+D,OAAS,EACzC++D,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9B5qD,KAAKk9G,cAAcnvD,EAAM7kD,GAAIw7G,KAI7B1lE,EAAIslE,EAAatlE,EAAImlE,EACrBv5D,EAAI05D,EAAa15D,EAAI05D,EAAa3+D,OAClC++D,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9BA,EAAI05D,EAAa15D,EAAI05D,EAAa3+D,OAC9By+D,EACJM,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9B5L,EAAIwlE,EAAYxlE,EAAIwlE,EAAY1+D,MAAQ,EACxC4+D,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAC9B5qD,KAAKk9G,cAAcnvD,EAAM7kD,GAAIw7G,IAI3Bl3F,EAAImgC,EAAa,EAEpBy2D,GAAkBpkH,KAAK2gH,gBAEfnzF,EAAImgC,EAAa,IAEzBy2D,GAAkBpkH,KAAK2gH,iBAMxBwD,GAAkBD,EAGlBG,EAAankH,KAAKwD,IAAI2gH,EAAYD,KAGpCzjE,WAAWqvD,oBAAqD,qBAAxBA,oBAAsCA,yBAAsBzvG,EAgCpG2lD,QAAQ/6C,OAAO+kG,mBAAoBF,qBAOnCE,mBAAmBxwG,UAAUilH,YAAc,GAO3CzU,mBAAmBxwG,UAAUklH,MAAQ,EAOrC1U,mBAAmBxwG,UAAUmlH,MAAQ,EAOrC3U,mBAAmBxwG,UAAU6gH,cAAgB,IAO7CrQ,mBAAmBxwG,UAAU8gH,aAAe,GAO5CtQ,mBAAmBxwG,UAAUolH,YAAa,EAQ1C5U,mBAAmBxwG,UAAUqhH,WAAY,EAOzC7Q,mBAAmBxwG,UAAUqlH,QAAU,GAOvC7U,mBAAmBxwG,UAAUslH,QAAU,GAOvC9U,mBAAmBxwG,UAAUulH,WAAa,GAO1C/U,mBAAmBxwG,UAAUwlH,WAAa,GAO1ChV,mBAAmBxwG,UAAUylH,QAAU,GAOvCjV,mBAAmBxwG,UAAUi1F,IAAM,GAYnCub,mBAAmBxwG,UAAUg9G,gBAAkB,SAASZ,GAEvD,OAAOnM,cAAcjwG,UAAUg9G,gBAAgB37G,MAAMf,KAAMgB,YACd,GAA5ChB,KAAKosD,MAAM80D,eAAepF,GAAQl7G,QAiBpCsvG,mBAAmBxwG,UAAU+zD,QAAU,SAASptD,EAAQ2rF,GAEvDhyF,KAAKqG,OAASA,EAEdrG,KAAK07G,gBAAiB,EACtB17G,KAAK8gH,aAAc,EAGnB9Q,oBAAoBtwG,UAAU+zD,QAAQ1yD,MAAMf,KAAMgB,WAElD,IAAI87D,EAAS,KACTsoD,EAAaplH,KAAKw9G,gBAAgBx9G,KAAKgyF,MAK3C,IAAK,IAAI8pB,KAJT97G,KAAKqlH,QAAUD,EAAWpmE,EAAIomE,EAAWt/D,MAAQ,EACjD9lD,KAAKslH,QAAUF,EAAWx6D,EAAIw6D,EAAWz/D,OAAS,EAG/B3lD,KAAKi8G,QACxB,CACC,IAAIsJ,EAAevlH,KAAKw9G,gBAAgBx9G,KAAKi8G,QAAQH,IACrDh/C,EAAoB,MAAVA,EAAkBA,EAASyoD,EAAa/gG,QAClDs4C,EAAOt2D,IAAI++G,GAGZvlH,KAAKwlH,YAAY,CAACxlH,KAAKkT,MAAO,GAM9B,IAJA,IAAIuyG,EAAc,EACdC,EAAe,EAGVx8G,EAAI,EAAGA,EAAIlJ,KAAK20F,IAAI/zF,OAAQsI,IACrC,CACC,IAAIy8G,GAAY3lH,KAAKqlH,QAAUrlH,KAAK+kH,QAAQ77G,GAAKlJ,KAAKwgH,cAAgBxgH,KAAKmlH,QAAQj8G,GAC/E08G,GAAa5lH,KAAKglH,QAAQ97G,GAAKlJ,KAAKqlH,QAAUrlH,KAAKwgH,cAAgBxgH,KAAKmlH,QAAQj8G,GAEpFu8G,EAAcvlH,KAAKwD,IAAK+hH,EAAaE,GACrCD,EAAexlH,KAAKwD,IAAKgiH,EAAcE,GAIxC,IAAS18G,EAAI,EAAGA,EAAIlJ,KAAK20F,IAAI/zF,OAAQsI,IAMpC,IAJA,IAAI28G,EAAa7lH,KAAKqlH,QAAUrlH,KAAKwgH,aAAeiF,EAAczlH,KAAKmlH,QAAQj8G,GAC3E48G,EAAc9lH,KAAKqlH,QAAUrlH,KAAKwgH,aAAekF,EAAe1lH,KAAKmlH,QAAQj8G,GAC7E68G,EAAYD,EAAcD,EAErBr4F,EAAI,EAAGA,EAAIxtB,KAAK20F,IAAIzrF,GAAGtI,OAAQ4sB,IACxC,CACC,IAAImnE,EAAM30F,KAAK20F,IAAIzrF,GACfgK,EAAOyhF,EAAInnE,GAEXw4F,GADAT,EAAevlH,KAAKw9G,gBAAgBtqG,EAAK85C,OAC1Bu4D,EAAavmE,EAAIumE,EAAaz/D,MAAQ,EAAI+/D,GAAc,GACvElsB,EAAS,EAAIz5F,KAAKu2D,GAAKuvD,EAC3B9yG,EAAKymF,MAAQA,EAKf,IAASzwF,EAAIlJ,KAAK20F,IAAI/zF,OAAS,EAAGsI,GAAK,EAAGA,IAIzC,IAFIyrF,EAAM30F,KAAK20F,IAAIzrF,GAEVskB,EAAI,EAAGA,EAAImnE,EAAI/zF,OAAQ4sB,IAChC,CACKta,EAAOyhF,EAAInnE,GAAf,IACIza,EAAQG,EAAKH,MACb+H,EAAU,EACVmrG,EAAa,EAEjB,MAAgB,MAATlzG,EAENkzG,GAAclzG,EAAM4mF,MACpB7+E,IACA/H,EAAQA,EAAMjR,KAGf,GAAIgZ,EAAU,EACd,CACC,IAAIorG,EAAYD,EAAanrG,EAE7B,GAAIorG,EAAYhzG,EAAKymF,OAASnsE,EAAImnE,EAAI/zF,OAAS,EAC/C,CACC,IAAIulH,EAAYxxB,EAAInnE,EAAE,GAAGmsE,MACzBzmF,EAAKymF,MAAQz5F,KAAKyD,IAAKuiH,EAAWC,EAAYjmH,KAAKu2D,GAAG,SAElD,GAAIyvD,EAAYhzG,EAAKymF,OAASnsE,EAAI,EACvC,CACC,IAAI44F,EAAYzxB,EAAInnE,EAAE,GAAGmsE,MACzBzmF,EAAKymF,MAAQz5F,KAAKwD,IAAKwiH,EAAWE,EAAYlmH,KAAKu2D,GAAG,MAO1D,IAASvtD,EAAI,EAAGA,EAAIlJ,KAAK20F,IAAI/zF,OAAQsI,IAEpC,IAASskB,EAAI,EAAGA,EAAIxtB,KAAK20F,IAAIzrF,GAAGtI,OAAQ4sB,IACxC,CACKmnE,EAAM30F,KAAK20F,IAAIzrF,GACfgK,EAAOyhF,EAAInnE,GACX+3F,EAAevlH,KAAKw9G,gBAAgBtqG,EAAK85C,MAC7ChtD,KAAKu9G,kBAAkBrqG,EAAK85C,KACtBhtD,KAAKqlH,QAAUE,EAAaz/D,MAAQ,EAAI9lD,KAAKmlH,QAAQj8G,GAAKhJ,KAAKs3D,IAAItkD,EAAKymF,OACxE35F,KAAKslH,QAAUC,EAAa5/D,OAAS,EAAI3lD,KAAKmlH,QAAQj8G,GAAKhJ,KAAKw3D,IAAIxkD,EAAKymF,UAelFuW,mBAAmBxwG,UAAU8lH,YAAc,SAAS7wB,EAAK0xB,GAExD,GAAW,MAAP1xB,GAA6B,GAAdA,EAAI/zF,OAAvB,CAMAZ,KAAK+kH,QAAQsB,GAAUrmH,KAAKqlH,QAC5BrlH,KAAKglH,QAAQqB,GAAUrmH,KAAKqlH,QAC5BrlH,KAAKilH,WAAWoB,GAAUrmH,KAAKqlH,QAC/BrlH,KAAKklH,WAAWmB,GAAUrmH,KAAKqlH,QAC/BrlH,KAAK20F,IAAI0xB,GAAU,GAInB,IAFA,IAAIC,GAAiB,EAEZp9G,EAAI,EAAGA,EAAIyrF,EAAI/zF,OAAQsI,IAChC,CACC,IAAI6J,EAAkB,MAAV4hF,EAAIzrF,GAAayrF,EAAIzrF,GAAG6J,MAAQ,KAE5C,MAAgB,MAATA,EACP,CACC,IAAIi6C,EAAOj6C,EAAMi6C,KACbu4D,EAAevlH,KAAKw9G,gBAAgBxwD,GAExChtD,KAAK+kH,QAAQsB,GAAUnmH,KAAKyD,IAAI4hH,EAAavmE,EAAGh/C,KAAK+kH,QAAQsB,IAC7DrmH,KAAKglH,QAAQqB,GAAUnmH,KAAKwD,IAAI6hH,EAAavmE,EAAIumE,EAAaz/D,MAAO9lD,KAAKglH,QAAQqB,IAClFrmH,KAAKilH,WAAWoB,GAAUnmH,KAAKyD,IAAI4hH,EAAavmE,EAAIumE,EAAaz/D,MAAQ,EAAG9lD,KAAKilH,WAAWoB,IAC5FrmH,KAAKklH,WAAWmB,GAAUnmH,KAAKwD,IAAI6hH,EAAavmE,EAAIumE,EAAaz/D,MAAQ,EAAG9lD,KAAKklH,WAAWmB,IAC5FrmH,KAAKmlH,QAAQkB,GAAUd,EAAa36D,EAAI5qD,KAAKw9G,gBAAgBx9G,KAAKgyF,MAAMpnC,EAErD,MAAf73C,EAAMA,QAETuzG,GAAiB,GAGlBtmH,KAAK20F,IAAI0xB,GAAQt1G,KAAKgC,GACtBA,EAAQA,EAAMjR,MAIZwkH,GAEHtmH,KAAKwlH,YAAYxlH,KAAK20F,IAAI0xB,GAASA,EAAS,KAI9C1lE,WAAWuvD,mBAAmD,qBAAvBA,mBAAqCA,wBAAqB3vG,EAgCjG4vG,oBAAoBzwG,UAAY,IAAIiwG,cACpCQ,oBAAoBzwG,UAAUqyB,YAAco+E,oBAQ5CA,oBAAoBzwG,UAAU6mH,gBAAiB,EAQ/CpW,oBAAoBzwG,UAAU+gH,YAAa,EAQ3CtQ,oBAAoBzwG,UAAU8mH,kBAAmB,EASjDrW,oBAAoBzwG,UAAU+mH,cAAgB,GAO9CtW,oBAAoBzwG,UAAUgnH,qBAAuB,EAQrDvW,oBAAoBzwG,UAAUinH,iBAAmB,EAQjDxW,oBAAoBzwG,UAAUknH,iBAAmB,IAOjDzW,oBAAoBzwG,UAAUmnH,wBAA0B,EAOxD1W,oBAAoBzwG,UAAUonH,YAAc,IAO5C3W,oBAAoBzwG,UAAUqnH,YAAc,EAO5C5W,oBAAoBzwG,UAAUsnH,cAAgB,EAO9C7W,oBAAoBzwG,UAAUunH,UAAY,EAO1C9W,oBAAoBzwG,UAAUwnH,YAO9B/W,oBAAoBzwG,UAAUynH,MAO9BhX,oBAAoBzwG,UAAU0nH,MAO9BjX,oBAAoBzwG,UAAU2nH,aAO9BlX,oBAAoBzwG,UAAU2wG,OAO9BF,oBAAoBzwG,UAAU4nH,cAO9BnX,oBAAoBzwG,UAAU6nH,WAO9BpX,oBAAoBzwG,UAAU8nH,WAO9BrX,oBAAoBzwG,UAAU+nH,QAQ9BtX,oBAAoBzwG,UAAUgoH,cAAe,EAY7CvX,oBAAoBzwG,UAAUg9G,gBAAkB,SAASZ,GAExD,OAAOnM,cAAcjwG,UAAUg9G,gBAAgB37G,MAAMf,KAAMgB,YACd,GAA5ChB,KAAKosD,MAAM80D,eAAepF,GAAQl7G,QASpCuvG,oBAAoBzwG,UAAU+zD,QAAU,SAASptD,GAEhD,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WACvBljE,KAAKknH,YAAc,GAGnB,IAFA,IAAI9mD,EAAQpgE,KAAKosD,MAAMulD,iBAAiBtrG,GAE/B6C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE5BlJ,KAAK08G,gBAAgBt8C,EAAMl3D,KAE/BlJ,KAAKknH,YAAYn2G,KAAKqvD,EAAMl3D,IAI9B,IAAIy+G,EAAiB3nH,KAAmB,eACtCA,KAAKosD,MAAMw7D,2BAA2B5nH,KAAKknH,aAC1C,KACCj/G,EAAIjI,KAAKknH,YAAYtmH,OAEzBZ,KAAKynH,QAAU,GACfznH,KAAKmnH,MAAQ,GACbnnH,KAAKonH,MAAQ,GACbpnH,KAAKqnH,aAAe,GACpBrnH,KAAKunH,WAAa,GAClBvnH,KAAKwnH,WAAa,GAClBxnH,KAAKqwG,OAAS,GACdrwG,KAAKsnH,cAAgB,GAEjBtnH,KAAKymH,cAAgB,OAExBzmH,KAAKymH,cAAgB,MAGtBzmH,KAAK0mH,qBAAuB1mH,KAAKymH,cAAgBzmH,KAAKymH,cAMtD,IAASv9G,EAAI,EAAGA,EAAIlJ,KAAKknH,YAAYtmH,OAAQsI,IAC7C,CACC,IAAI4yG,EAAS97G,KAAKknH,YAAYh+G,GAC9BlJ,KAAKqnH,aAAan+G,GAAK,GAGvB,IAAIyH,EAAK63C,iBAAiBnpD,IAAIy8G,GAC9B97G,KAAKynH,QAAQ92G,GAAMzH,EACnB,IAAI4zD,EAAS98D,KAAKw9G,gBAAgB1B,GAI9Bh2D,EAAQgX,EAAOhX,MACfH,EAASmX,EAAOnX,OAGhB3G,EAAI8d,EAAO9d,EACX4L,EAAIkS,EAAOlS,EAEf5qD,KAAKqnH,aAAan+G,GAAG,GAAK81C,EAAI8G,EAAQ,EACtC9lD,KAAKqnH,aAAan+G,GAAG,GAAK0hD,EAAIjF,EAAS,EACvC3lD,KAAKqwG,OAAOnnG,GAAKhJ,KAAKyD,IAAImiD,EAAOH,GACjC3lD,KAAKsnH,cAAcp+G,GAAKlJ,KAAKqwG,OAAOnnG,GAAKlJ,KAAKqwG,OAAOnnG,GAKtDkd,EAAMk7C,cACN,IAEC,IAASp4D,EAAI,EAAGA,EAAIjB,EAAGiB,IACvB,CACClJ,KAAKmnH,MAAMj+G,GAAK,EAChBlJ,KAAKonH,MAAMl+G,GAAK,EAChBlJ,KAAKunH,WAAWr+G,GAAKlJ,KAAKw8G,gBAAgBx8G,KAAKknH,YAAYh+G,IAK3D,IAAI6kD,EAAQ/tD,KAAKosD,MAAM80D,eAAelhH,KAAKknH,YAAYh+G,GAAI7C,GACvD+5D,EAAQpgE,KAAKosD,MAAMy7D,aAAa95D,EAAO/tD,KAAKknH,YAAYh+G,IAC5DlJ,KAAKwnH,WAAWt+G,GAAK,GAErB,IAAK,IAAIskB,EAAI,EAAGA,EAAI4yC,EAAMx/D,OAAQ4sB,IAClC,CAEKxtB,KAAKygH,YAERzgH,KAAKosD,MAAM07D,UAAU/5D,EAAMvgC,IAGrBxtB,KAAKwmH,kBAERxmH,KAAK68G,oBAAoB9uD,EAAMvgC,IAAI,GAInC7c,EAAK63C,iBAAiBnpD,IAAI+gE,EAAM5yC,IAApC,IACIpqB,EAAQpD,KAAKynH,QAAQ92G,GAMxB3Q,KAAKwnH,WAAWt+G,GAAGskB,GAFP,MAATpqB,EAEqBA,EASA8F,GAa3B,IATAlJ,KAAK+mH,YAAc/mH,KAAK8mH,YAGE,GAAtB9mH,KAAKgnH,gBAERhnH,KAAKgnH,cAAgB,GAAK9mH,KAAKg4D,KAAKjwD,IAIhCjI,KAAKinH,UAAY,EAAGjnH,KAAKinH,UAAYjnH,KAAKgnH,cAAehnH,KAAKinH,YACnE,CACC,IAAKjnH,KAAK0nH,aAET,OAID1nH,KAAK+nH,gBAGL/nH,KAAKgoH,iBAELhoH,KAAKioH,gBACLjoH,KAAKkoH,oBAGN,IAAIC,EAAO,KACPC,EAAO,KAEX,IAASl/G,EAAI,EAAGA,EAAIlJ,KAAKknH,YAAYtmH,OAAQsI,IAC7C,CACK4yG,EAAS97G,KAAKknH,YAAYh+G,GAE9B,GAAIlJ,KAAKw8G,gBAAgBV,GACzB,CACKh/C,EAAS98D,KAAKw9G,gBAAgB1B,GAElC,GAAc,MAAVh/C,EACJ,CACC98D,KAAKqnH,aAAan+G,GAAG,IAAM4zD,EAAOhX,MAAQ,EAC1C9lD,KAAKqnH,aAAan+G,GAAG,IAAM4zD,EAAOnX,OAAS,EAEvC3G,EAAIh/C,KAAKosD,MAAM0gC,KAAK5sF,KAAKm8D,MAAMr8D,KAAKqnH,aAAan+G,GAAG,KACpD0hD,EAAI5qD,KAAKosD,MAAM0gC,KAAK5sF,KAAKm8D,MAAMr8D,KAAKqnH,aAAan+G,GAAG,KAExDlJ,KAAKu9G,kBAAkBzB,EAAQ98D,EAAG4L,GAIjCu9D,EAFW,MAARA,EAEInpE,EAIA9+C,KAAKyD,IAAIwkH,EAAMnpE,GAKtBopE,EAFW,MAARA,EAEIx9D,EAIA1qD,KAAKyD,IAAIykH,EAAMx9D,KAS1B,IAAI/b,EAAoB,GAAbs5E,GAAQ,GACfp5E,EAAoB,GAAbq5E,GAAQ,GAEE,MAAjBT,IAEH94E,GAAM84E,EAAc3oE,EACpBjQ,GAAM44E,EAAc/8D,GAGrB5qD,KAAKosD,MAAMi8D,UAAUroH,KAAKknH,YAAar4E,EAAIE,GAE5C,QAEC3oB,EAAMo7C,cAWR2uC,oBAAoBzwG,UAAUuoH,cAAgB,WAE7C,IAAK,IAAI7kH,EAAQ,EAAGA,EAAQpD,KAAKknH,YAAYtmH,OAAQwC,IAEpD,GAAIpD,KAAKunH,WAAWnkH,GACpB,CAGC,IAAIklH,EAAcpoH,KAAKg4D,KAAKl4D,KAAKmnH,MAAM/jH,GAASpD,KAAKmnH,MAAM/jH,GAC1DpD,KAAKonH,MAAMhkH,GAASpD,KAAKonH,MAAMhkH,IAE5BklH,EAAc,OAEjBA,EAAc,MAKf,IAAIC,EAAWvoH,KAAKmnH,MAAM/jH,GAASklH,EAChCpoH,KAAKyD,IAAI2kH,EAAatoH,KAAK+mH,aAE1ByB,EAAWxoH,KAAKonH,MAAMhkH,GAASklH,EAChCpoH,KAAKyD,IAAI2kH,EAAatoH,KAAK+mH,aAG9B/mH,KAAKmnH,MAAM/jH,GAAS,EACpBpD,KAAKonH,MAAMhkH,GAAS,EAGpBpD,KAAKqnH,aAAajkH,GAAO,IAAMmlH,EAC/BvoH,KAAKqnH,aAAajkH,GAAO,IAAMolH,IAWlCrY,oBAAoBzwG,UAAUsoH,eAAiB,WAI9C,IAAK,IAAI9+G,EAAI,EAAGA,EAAIlJ,KAAKknH,YAAYtmH,OAAQsI,IAE5C,IAAK,IAAIu/G,EAAI,EAAGA,EAAIzoH,KAAKwnH,WAAWt+G,GAAGtI,OAAQ6nH,IAC/C,CAEC,IAAIj7F,EAAIxtB,KAAKwnH,WAAWt+G,GAAGu/G,GAG3B,GAAIv/G,GAAKskB,GACRxtB,KAAKunH,WAAWr+G,IAChBlJ,KAAKunH,WAAW/5F,GACjB,CACC,IAAIk7F,EAAS1oH,KAAKqnH,aAAan+G,GAAG,GAAKlJ,KAAKqnH,aAAa75F,GAAG,GACxDm7F,EAAS3oH,KAAKqnH,aAAan+G,GAAG,GAAKlJ,KAAKqnH,aAAa75F,GAAG,GAGxDo7F,EAAqBF,EAASA,EAASC,EACvCA,EAAS3oH,KAAKsnH,cAAcp+G,GAAKlJ,KAAKsnH,cAAc95F,GAEpDo7F,EAAqB5oH,KAAK6mH,0BAE7B+B,EAAqB5oH,KAAK6mH,yBAG3B,IAAIyB,EAAcpoH,KAAKg4D,KAAK0wD,GACxBjhG,EAAQ,EAAuB3nB,KAAKymH,cAEpCoC,EAAiBH,EAASJ,EAAe3gG,EACzCmhG,EAAiBH,EAASL,EAAe3gG,EAE7C3nB,KAAKmnH,MAAMj+G,IAAM2/G,EACjB7oH,KAAKonH,MAAMl+G,IAAM4/G,EAEjB9oH,KAAKmnH,MAAM35F,IAAMq7F,EACjB7oH,KAAKonH,MAAM55F,IAAMs7F,KAWrB3Y,oBAAoBzwG,UAAUqoH,cAAgB,WAI7C,IAFA,IAAIgB,EAAc/oH,KAAKknH,YAAYtmH,OAE1BsI,EAAI,EAAGA,EAAI6/G,EAAa7/G,IAEhC,IAAK,IAAIskB,EAAItkB,EAAGskB,EAAIu7F,EAAav7F,IACjC,CAEC,IAAKxtB,KAAK0nH,aAET,OAGD,GAAIl6F,GAAKtkB,GACRlJ,KAAKunH,WAAWr+G,IAChBlJ,KAAKunH,WAAW/5F,GACjB,CACC,IAAIk7F,EAAS1oH,KAAKqnH,aAAan+G,GAAG,GAAKlJ,KAAKqnH,aAAa75F,GAAG,GACxDm7F,EAAS3oH,KAAKqnH,aAAan+G,GAAG,GAAKlJ,KAAKqnH,aAAa75F,GAAG,GAE9C,GAAVk7F,IAEHA,EAAS,IAAOxoH,KAAKiyC,UAGR,GAAVw2E,IAEHA,EAAS,IAAOzoH,KAAKiyC,UAItB,IAAIm2E,EAAcpoH,KAAKg4D,KAAMwwD,EAASA,EACjCC,EAASA,GACVK,EAAwBV,EAActoH,KAAKqwG,OAAOnnG,GAClDlJ,KAAKqwG,OAAO7iF,GAEhB,GAAIw7F,EAAwBhpH,KAAK4mH,iBAGhC,SAGGoC,EAAwBhpH,KAAK2mH,mBAEhCqC,EAAwBhpH,KAAK2mH,kBAG9B,IAAIh/F,EAAQ3nB,KAAK0mH,qBAAuBsC,EAEpCH,EAAiBH,EAASJ,EAAe3gG,EACzCmhG,EAAiBH,EAASL,EAAe3gG,EAE7C3nB,KAAKmnH,MAAMj+G,IAAM2/G,EACjB7oH,KAAKonH,MAAMl+G,IAAM4/G,EAEjB9oH,KAAKmnH,MAAM35F,IAAMq7F,EACjB7oH,KAAKonH,MAAM55F,IAAMs7F,KAYrB3Y,oBAAoBzwG,UAAUwoH,kBAAoB,WAEjDloH,KAAK+mH,YAAc/mH,KAAK8mH,aAAe,EAAM9mH,KAAKinH,UAAYjnH,KAAKgnH,gBAGpErmE,WAAWwvD,oBAAqD,qBAAxBA,oBAAsCA,yBAAsB5vG,EAsCpG6vG,eAAe1wG,UAAY,IAAIiwG,cAC/BS,eAAe1wG,UAAUqyB,YAAcq+E,eAOvCA,eAAe1wG,UAAU2wG,OAAS,KAQlCD,eAAe1wG,UAAUupH,YAAa,EAQtC7Y,eAAe1wG,UAAUm3D,GAAK,EAQ9Bu5C,eAAe1wG,UAAUo3D,GAAK,EAQ9Bs5C,eAAe1wG,UAAU+gH,YAAa,EAQtCrQ,eAAe1wG,UAAU8mH,kBAAmB,EAO5CpW,eAAe1wG,UAAU+zD,QAAU,SAASptD,GAE3C,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WAKvB98C,EAAMk7C,cACN,IAUC,IANA,IAAI59D,EAAM,EACNsrC,EAAM,KACNF,EAAO,KACPqiE,EAAW,GACXxjD,EAAavnC,EAAMwnC,cAAcvnD,GAE5B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI8jD,EAAO5mC,EAAMynC,WAAWxnD,EAAQ6C,GAEpC,GAAKlJ,KAAK08G,gBAAgB1vD,GAyBhBhtD,KAAK48G,cAAc5vD,KAGxBhtD,KAAKygH,YAERzgH,KAAKosD,MAAM07D,UAAU96D,GAGfhtD,KAAKwmH,kBAEPxmH,KAAK68G,oBAAoB7vD,GAAM,QAlCrC,CACCmkD,EAASpgG,KAAKi8C,GACd,IAAI8P,EAAS98D,KAAKw9G,gBAAgBxwD,GAIjChe,EAFU,MAAPA,EAEG8tB,EAAOlS,EAIP1qD,KAAKyD,IAAIqrC,EAAK8tB,EAAOlS,GAK3B9b,EAFW,MAARA,EAEIguB,EAAO9d,EAIP9+C,KAAKyD,IAAImrC,EAAMguB,EAAO9d,GAG9Bt7C,EAAMxD,KAAKwD,IAAIA,EAAKxD,KAAKwD,IAAIo5D,EAAOhX,MAAOgX,EAAOnX,UAiBpD,IAAIuY,EAAIl+D,KAAKkpH,UAAU/X,EAASvwG,OAAQ8C,GAGpC1D,KAAKipH,aAERn6E,EAAO9uC,KAAK62D,GACZ7nB,EAAMhvC,KAAK82D,IAGZ92D,KAAKmpH,OAAOhY,EAAUjzC,EAAGpvB,EAAME,GAEhC,QAEC5oB,EAAMo7C,cAUR4uC,eAAe1wG,UAAUwpH,UAAY,SAASj2D,EAAOvvD,GAEpD,OAAOxD,KAAKwD,IAAIuvD,EAAQvvD,EAAMxD,KAAKu2D,GAAIz2D,KAAKqwG,SAU7CD,eAAe1wG,UAAUypH,OAAS,SAAShY,EAAUjzC,EAAGpvB,EAAME,GAK7D,IAHA,IAAI+5E,EAAc5X,EAASvwG,OACvBwoH,EAAM,EAAIlpH,KAAKu2D,GAAKsyD,EAEf7/G,EAAI,EAAGA,EAAI6/G,EAAa7/G,IAE5BlJ,KAAKw8G,gBAAgBrL,EAASjoG,KAEjClJ,KAAKu9G,kBAAkBpM,EAASjoG,GAC/BhJ,KAAKm8D,MAAMvtB,EAAOovB,EAAIA,EAAIh+D,KAAKw3D,IAAIxuD,EAAIkgH,IACvClpH,KAAKm8D,MAAMrtB,EAAMkvB,EAAIA,EAAIh+D,KAAKs3D,IAAItuD,EAAIkgH,MAK1CzoE,WAAWyvD,eAA2C,qBAAnBA,eAAiCA,oBAAiB7vG,EAyDrF+vG,qBAAqB5wG,UAAY,IAAIiwG,cACrCW,qBAAqB5wG,UAAUqyB,YAAcu+E,qBAO7CA,qBAAqB5wG,UAAUgrG,QAAU,GAOzC4F,qBAAqB5wG,UAAU+zD,QAAU,SAASptD,GAEjD,IAAIi6D,EAAStgE,KAAKqpH,cAAchjH,GAEhCrG,KAAKosD,MAAMhmC,MAAMk7C,cACjB,IAEC,IAAK,IAAIp4D,KAAKo3D,EACd,CACC,IAAIgpD,EAAYhpD,EAAOp3D,GAEnBogH,EAAU1oH,OAAS,GAEtBZ,KAAKkxG,OAAOoY,IAIf,QAECtpH,KAAKosD,MAAMhmC,MAAMo7C,cASnB8uC,qBAAqB5wG,UAAU2pH,cAAgB,SAAShjH,GAMvD,IAJA,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WACnB5C,EAAS,GACT3S,EAAavnC,EAAMwnC,cAAcvnD,GAE5B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,GAErC,IAAKlJ,KAAK48G,cAAc7pG,GACxB,CACC,IAAIpC,EAAK3Q,KAAKupH,UAAUx2G,GAEd,MAANpC,IAEe,MAAd2vD,EAAO3vD,KAEV2vD,EAAO3vD,GAAM,IAGd2vD,EAAO3vD,GAAII,KAAKgC,KAKnB,OAAOutD,GAURgwC,qBAAqB5wG,UAAU6pH,UAAY,SAASlvD,GAEnD,IAAIsD,EAAO39D,KAAKosD,MAAMU,UAGlBl4C,EAAM+oD,EAAKu0C,mBAAmB73C,GAAM,GACpCmvD,EAAM7rD,EAAKu0C,mBAAmB73C,GAAM,GAExC,OAAW,MAAPzlD,GAAsB,MAAP40G,GAElB50G,EAAM4zC,iBAAiBnpD,IAAIuV,GAC3B40G,EAAMhhE,iBAAiBnpD,IAAImqH,GAEnB50G,EAAM40G,EAAOA,EAAM,IAAM50G,EAAMA,EAAM,IAAM40G,GAG7C,MAQRlZ,qBAAqB5wG,UAAUwxG,OAAS,SAASoY,GAEhD,IAAIjvD,EAAOivD,EAAU,GACjB3rD,EAAO39D,KAAKosD,MAAMU,UAClB1mC,EAAQpmB,KAAKosD,MAAM8W,WACnBtuD,EAAMwR,EAAM62F,YAAYt/C,EAAKu0C,mBAAmB73C,GAAM,IACtDmvD,EAAMpjG,EAAM62F,YAAYt/C,EAAKu0C,mBAAmB73C,GAAM,IAG1D,GAAIzlD,GAAO40G,EAKV,IAHA,IAAI3yD,EAAKjiD,EAAIoqC,EAAIpqC,EAAIkxC,MAAQ9lD,KAAK0qG,QAC9B5zC,EAAKliD,EAAIg2C,EAAIh2C,EAAI+wC,OAAS,EAErBz8C,EAAI,EAAGA,EAAIogH,EAAU1oH,OAAQsI,IAErClJ,KAAKypH,MAAMH,EAAUpgH,GAAI2tD,EAAIC,GAC7BD,GAAM72D,KAAK0qG,aAGR,GAAW,MAAP91F,GAAsB,MAAP40G,EACxB,CAEC,IAAIE,EAAM90G,EAAIoqC,EAAIpqC,EAAIkxC,MAAQ,EAC1B6jE,EAAM/0G,EAAIg2C,EAAIh2C,EAAI+wC,OAAS,EAE3BikE,EAAMJ,EAAIxqE,EAAIwqE,EAAI1jE,MAAQ,EAC1B+jE,EAAML,EAAI5+D,EAAI4+D,EAAI7jE,OAAS,EAE3B9W,EAAK+6E,EAAMF,EACX36E,EAAK86E,EAAMF,EAEX71G,EAAM5T,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAEnC,GAAIj7B,EAAM,EACV,CACK+iD,EAAK6yD,EAAM76E,EAAK,EAChBioB,EAAK6yD,EAAM56E,EAAK,EADpB,IAGIolE,EAAKplE,EAAK/uC,KAAK0qG,QAAU52F,EACzBsgG,EAAKvlE,EAAK7uC,KAAK0qG,QAAU52F,EAE7B+iD,GAAMs9C,GAAMmV,EAAU1oH,OAAS,GAAK,EACpCk2D,GAAMs9C,GAAMkV,EAAU1oH,OAAS,GAAK,EAEpC,IAASsI,EAAI,EAAGA,EAAIogH,EAAU1oH,OAAQsI,IAErClJ,KAAKypH,MAAMH,EAAUpgH,GAAI2tD,EAAIC,GAC7BD,GAAMs9C,EACNr9C,GAAMs9C,KAWV9D,qBAAqB5wG,UAAU+pH,MAAQ,SAASpvD,EAAMrb,EAAG4L,GAEpD5qD,KAAKosD,MAAMqwD,cAAcpiD,IAE5Br6D,KAAKk9G,cAAc7iD,EAAM,CAAC,IAAI1P,QAAQ3L,EAAG4L,MAI3CjK,WAAW2vD,qBAAuD,qBAAzBA,qBAAuCA,0BAAuB/vG,EA4CvGgwG,kBAAkB7wG,UAAY,IAAIiwG,cAClCY,kBAAkB7wG,UAAUqyB,YAAcw+E,kBAO1CA,kBAAkB7wG,UAAU8wG,QAAU,KAQtCD,kBAAkB7wG,UAAU+wG,OAAS,KAQrCF,kBAAkB7wG,UAAUi8G,SAAW,SAAS3uD,EAAMhO,EAAG4L,GAErC,MAAf5qD,KAAKywG,OAERzwG,KAAKywG,OAAOkL,SAAS56G,MAAMf,KAAKywG,OAAQzvG,WAIxChB,KAAKwwG,QAAQ,GAAGmL,SAAS56G,MAAMf,KAAKwwG,QAAQ,GAAIxvG,YAUlDuvG,kBAAkB7wG,UAAU+zD,QAAU,SAASptD,GAE9C,IAAI+f,EAAQpmB,KAAKosD,MAAM8W,WAEvB98C,EAAMk7C,cACN,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIlJ,KAAKwwG,QAAQ5vG,OAAQsI,IAExClJ,KAAKwwG,QAAQtnG,GAAGuqD,QAAQ1yD,MAAMf,KAAKwwG,QAAQtnG,GAAIlI,WAGjD,QAEColB,EAAMo7C,cAIR7gB,WAAW4vD,kBAAiD,qBAAtBA,kBAAoCA,uBAAoBhwG,EAqC9FmwG,kBAAkBhxG,UAAY,IAAIiwG,cAClCe,kBAAkBhxG,UAAUqyB,YAAc2+E,kBAO1CA,kBAAkBhxG,UAAU+zD,QAAU,SAASptD,GAU9C,IARA,IAAIs3D,EAAO39D,KAAKosD,MAAMuR,KAClBv3C,EAAQpmB,KAAKosD,MAAM8W,WAGnBnV,EAAQ,GACRojD,EAAW,GACXxjD,EAAavnC,EAAMwnC,cAAcvnD,GAE5B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI8jD,EAAO5mC,EAAMynC,WAAWxnD,EAAQ6C,GAChC4nC,EAAQ6sB,EAAK5Q,SAASC,GAEb,MAATlc,IAEE9wC,KAAK08G,gBAAgB1vD,GAIhBhtD,KAAK48G,cAAc5vD,IAE5Be,EAAMh9C,KAAK+/B,GAJXqgE,EAASpgG,KAAK+/B,IASjB9wC,KAAK8pH,YAAY3Y,EAAUpjD,IAQ5B2iD,kBAAkBhxG,UAAUoqH,YAAc,SAASziH,EAAG4E,GAErD,IAAIma,EAAQpmB,KAAKosD,MAAM8W,WAKvB98C,EAAMk7C,cACN,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAI+C,EAAErL,OAAQsI,IAC9B,CACC,IAAImxD,EAAOpuD,EAAE/C,GAEb,GAAY,MAARmxD,GAA6B,MAAbA,EAAKxoD,MACC,MAAzBwoD,EAAKxoD,KAAKm0F,YAEV,IAAK,IAAIx4E,EAAI,EAAGA,EAAInmB,EAAEzG,OAAQ4sB,IAC9B,CACC,IAAIsuF,EAASz0G,EAAEmmB,GAED,MAAVsuF,GAEH97G,KAAK+pH,MAAM1vD,EAAMyhD,KAMtB,QAEC11F,EAAMo7C,cASRkvC,kBAAkBhxG,UAAUqqH,MAAQ,SAAS1vD,EAAMyhD,GAElD,IAAI11F,EAAQpmB,KAAKosD,MAAM8W,WACnB8mD,EAAU3vD,EAAKxoD,KAAKm0F,YAExB,GAAI9/C,QAAQ8W,WAAWgtD,EAASlO,GAChC,CACC,IAAInF,GAAOqT,EAAQp/D,EAAIo/D,EAAQrkE,OAASm2D,EAAOlxD,EAC3Cq/D,GAAOD,EAAQp/D,EAAIkxD,EAAOlxD,EAAIkxD,EAAOn2D,OAErC5W,EAAM7uC,KAAKk3D,IAAIu/C,GAAOz2G,KAAKk3D,IAAI6yD,GAAQtT,EAAMsT,EAE7CvT,GAAOsT,EAAQhrE,EAAIgrE,EAAQlkE,MAAQg2D,EAAO98D,EAC1CkrE,GAAOF,EAAQhrE,EAAI88D,EAAO98D,EAAI88D,EAAOh2D,MAErCjX,EAAM3uC,KAAKk3D,IAAIs/C,GAAOx2G,KAAKk3D,IAAI8yD,GAAQxT,EAAMwT,EAE7ChqH,KAAKk3D,IAAIvoB,GAAM3uC,KAAKk3D,IAAIroB,GAE3BA,EAAK,EAILF,EAAK,EAGN,IAAIuR,EAAIh6B,EAAM62F,YAAY5iD,EAAKrN,MAEtB,MAAL5M,IAEHA,EAAIA,EAAE57B,QAEU,MAAZ47B,EAAEgU,QAELhU,EAAEgU,OAAOpV,GAAKnQ,EACduR,EAAEgU,OAAOxJ,GAAK7b,GAIdqR,EAAEgU,OAAS,IAAIzJ,QAAQ9b,EAAIE,GAG5B3oB,EAAMk3F,YAAYjjD,EAAKrN,KAAM5M,MAKhCO,WAAW+vD,kBAAiD,qBAAtBA,kBAAoCA,uBAAoBnwG,EA2B9FowG,6BAA6BjxG,UAAU+xG,SAAW,EAOlDd,6BAA6BjxG,UAAUyqH,SAAW,EAOlDxZ,6BAA6BjxG,UAAUs/C,EAAI,KAO3C2xD,6BAA6BjxG,UAAUkrD,EAAI,KAO3C+lD,6BAA6BjxG,UAAUomD,MAAQ,EAO/C6qD,6BAA6BjxG,UAAUimD,OAAS,EAOhDgrD,6BAA6BjxG,UAAU0qH,wBAA0B,KAOjEzZ,6BAA6BjxG,UAAU2qH,4BAA8B,KAYrE1Z,6BAA6BjxG,UAAUqkE,KAAO,KAO9C4sC,6BAA6BjxG,UAAU4qH,2BAA6B,SAASC,GAE5E,OAAO,MAQR5Z,6BAA6BjxG,UAAU8qH,+BAAiC,SAASD,GAEhF,OAAO,MAQR5Z,6BAA6BjxG,UAAUyP,OAAS,WAE/C,OAAO,GAQRwhG,6BAA6BjxG,UAAUi2F,SAAW,WAEjD,OAAO,GAQRgb,6BAA6BjxG,UAAU+qH,0BAA4B,SAASF,GAE3E,OAAO,MAQR5Z,6BAA6BjxG,UAAUgrH,0BAA4B,SAASH,EAAOjtH,GAElF,OAAO,MAQRqzG,6BAA6BjxG,UAAUirH,KAAO,SAASJ,EAAOjtH,GAEzD0C,KAAK21F,WAER31F,KAAKg/C,EAAE,GAAK1hD,EAEJ0C,KAAKmP,WAEbnP,KAAKg/C,EAAEurE,EAAQvqH,KAAKmqH,QAAU,GAAK7sH,IASrCqzG,6BAA6BjxG,UAAUk4E,KAAO,SAAS2yC,GAEtD,OAAIvqH,KAAK21F,WAED31F,KAAKg/C,EAAE,GAENh/C,KAAKmP,SAENnP,KAAKg/C,EAAEurE,EAAQvqH,KAAKmqH,QAAU,GAG/B,GAQRxZ,6BAA6BjxG,UAAUkrH,KAAO,SAASL,EAAOjtH,GAEzD0C,KAAK21F,WAER31F,KAAK4qD,EAAE,GAAKttD,EAEJ0C,KAAKmP,WAEbnP,KAAK4qD,EAAE2/D,EAAOvqH,KAAMmqH,QAAU,GAAK7sH,IAIrCqjD,WAAWgwD,6BAAuE,qBAAjCA,6BAA+CA,kCAA+BpwG,EA+B/HqwG,qBAAqBlxG,UAAY,IAAIixG,6BACrCC,qBAAqBlxG,UAAUqyB,YAAc6+E,qBAO7CA,qBAAqBlxG,UAAUstD,KAAO,KAOtC4jD,qBAAqBlxG,UAAUiR,GAAK,KAOpCigG,qBAAqBlxG,UAAUmxG,iBAAmB,KAOlDD,qBAAqBlxG,UAAUoxG,iBAAmB,KAQlDF,qBAAqBlxG,UAAUmrH,UAAW,EAO1Cja,qBAAqBlxG,UAAUorH,aAAe,SAASP,GAEtD,OAAOvqH,KAAKyxG,SAQbb,qBAAqBlxG,UAAU4qH,2BAA6B,SAASC,GAEpE,GAAoC,MAAhCvqH,KAAKoqH,wBACT,CACCpqH,KAAKoqH,wBAA0B,GAC/BpqH,KAAKoqH,wBAAwB,GAAK,GAElC,IAAK,IAAIlhH,EAAI,EAAGA,EAAIlJ,KAAK6wG,iBAAiBjwG,OAAQsI,IAClD,CACC,IAAImxD,EAAOr6D,KAAK6wG,iBAAiB3nG,IAEZ,GAAjBmxD,EAAKo3C,SAAiBp3C,EAAKo3C,SAAW8Y,EAAQ,EAIjDvqH,KAAKoqH,wBAAwB,GAAGr5G,KAAKspD,EAAKn2D,QAK1ClE,KAAKoqH,wBAAwB,GAAGr5G,KAAKspD,IAKxC,OAAOr6D,KAAKoqH,wBAAwB,IAQrCxZ,qBAAqBlxG,UAAU8qH,+BAAiC,SAASD,GAExE,GAAwC,MAApCvqH,KAAKqqH,4BACT,CACCrqH,KAAKqqH,4BAA8B,GACnCrqH,KAAKqqH,4BAA4B,GAAK,GAEtC,IAAK,IAAInhH,EAAI,EAAGA,EAAIlJ,KAAK8wG,iBAAiBlwG,OAAQsI,IAClD,CACC,IAAImxD,EAAOr6D,KAAK8wG,iBAAiB5nG,IAEZ,GAAjBmxD,EAAK8vD,SAAiB9vD,EAAK8vD,SAAWI,EAAQ,EAGjDvqH,KAAKqqH,4BAA4B,GAAGt5G,KAAKspD,EAAKj2D,QAK9CpE,KAAKqqH,4BAA4B,GAAGt5G,KAAKspD,IAK5C,OAAOr6D,KAAKqqH,4BAA4B,IAQzCzZ,qBAAqBlxG,UAAUi2F,SAAW,WAEzC,OAAO,GAQRib,qBAAqBlxG,UAAU+qH,0BAA4B,SAASF,GAEnE,OAAOvqH,KAAK+jE,KAAK,IAQlB6sC,qBAAqBlxG,UAAUgrH,0BAA4B,SAASH,EAAOjtH,GAE1E0C,KAAK+jE,KAAK,GAAKzmE,GAMhBszG,qBAAqBlxG,UAAU48G,WAAa,SAASyO,GAIpD,GAAiB,MAAbA,GAAsC,MAAjB/qH,KAAK6qH,UAA0C,MAAtBE,EAAUF,UACvD7qH,KAAK6qH,SAASjqH,OAASmqH,EAAUF,SAASjqH,OAC/C,CACC,GAAIZ,KAAK6qH,UAAYE,EAAUF,SAE9B,OAAO,EAGR,GAAqB,MAAjB7qH,KAAK6qH,UAAqC,MAAjB7qH,KAAK6qH,SAEjC,OAAO,EAOR,IAAK,IAAI3hH,EAAI,EAAGA,EAAIlJ,KAAK6qH,SAASjqH,OAAQsI,IAEzC,GAAIlJ,KAAK6qH,SAAS3hH,IAAM6hH,EAAUF,SAAS3hH,GAE1C,OAAO,EAIT,OAAO,EAGR,OAAO,GAQR0nG,qBAAqBlxG,UAAUsrH,YAAc,WAE5C,OAAOhrH,KAAKgtD,MAGbrM,WAAWiwD,qBAAuD,qBAAzBA,qBAAuCA,0BAAuBrwG,EAkCvGwwG,qBAAqBrxG,UAAY,IAAIixG,6BACrCI,qBAAqBrxG,UAAUqyB,YAAcg/E,qBAQ7CA,qBAAqBrxG,UAAUquD,MAAQ,KAOvCgjD,qBAAqBrxG,UAAUsxG,IAAM,KAOrCD,qBAAqBrxG,UAAUwE,OAAS,KAOxC6sG,qBAAqBrxG,UAAU0E,OAAS,KAQxC2sG,qBAAqBrxG,UAAUurH,YAAa,EAO5Cla,qBAAqBrxG,UAAUuwG,OAAS,SAASsa,GAEhD,IAAIxmD,EAAO/jE,KAAKkE,OAChBlE,KAAKkE,OAASlE,KAAKoE,OACnBpE,KAAKoE,OAAS2/D,EACd/jE,KAAKirH,YAAcjrH,KAAKirH,YAQzBla,qBAAqBrxG,UAAU4qH,2BAA6B,SAASC,GAEpE,GAAoC,MAAhCvqH,KAAKoqH,wBACT,CACCpqH,KAAKoqH,wBAA0B,GAE/B,IAAK,IAAIlhH,EAAI,EAAGA,EAAIlJ,KAAK+jE,KAAKnjE,OAAQsI,IAErClJ,KAAKoqH,wBAAwBlhH,GAAK,GAE9BA,GAAKlJ,KAAK+jE,KAAKnjE,OAAS,EAE3BZ,KAAKoqH,wBAAwBlhH,GAAG6H,KAAK/Q,KAAKkE,QAI1ClE,KAAKoqH,wBAAwBlhH,GAAG6H,KAAK/Q,MAKxC,OAAOA,KAAKoqH,wBAAwBG,EAAQvqH,KAAKmqH,QAAU,IAQ5DpZ,qBAAqBrxG,UAAU8qH,+BAAiC,SAASD,GAExE,GAAwC,MAApCvqH,KAAKqqH,4BACT,CACCrqH,KAAKqqH,4BAA8B,GAEnC,IAAK,IAAInhH,EAAI,EAAGA,EAAIlJ,KAAK+jE,KAAKnjE,OAAQsI,IAErClJ,KAAKqqH,4BAA4BnhH,GAAK,GAE7B,GAALA,EAEHlJ,KAAKqqH,4BAA4BnhH,GAAG6H,KAAK/Q,KAAKoE,QAI9CpE,KAAKqqH,4BAA4BnhH,GAAG6H,KAAK/Q,MAK5C,OAAOA,KAAKqqH,4BAA4BE,EAAQvqH,KAAKmqH,QAAU,IAQhEpZ,qBAAqBrxG,UAAUyP,OAAS,WAEvC,OAAO,GAQR4hG,qBAAqBrxG,UAAU+qH,0BAA4B,SAASF,GAEnE,OAAOvqH,KAAK+jE,KAAKwmD,EAAQvqH,KAAKmqH,QAAU,IAQzCpZ,qBAAqBrxG,UAAUgrH,0BAA4B,SAASH,EAAOjtH,GAE1E0C,KAAK+jE,KAAKwmD,EAAQvqH,KAAKmqH,QAAU,GAAK7sH,GAQvCyzG,qBAAqBrxG,UAAUsrH,YAAc,WAE5C,OAAkB,MAAdhrH,KAAK+tD,OAAiB/tD,KAAK+tD,MAAMntD,OAAS,EAEtCZ,KAAK+tD,MAAM,GAGZ,MAGRpN,WAAWowD,qBAAuD,qBAAzBA,qBAAuCA,0BAAuBxwG,EAoHvG0wG,sBAAsBvxG,UAAU+xG,QAAU,KAO1CR,sBAAsBvxG,UAAU6xG,aAAe,KAO/CN,sBAAsBvxG,UAAU8xG,WAAa,KAO7CP,sBAAsBvxG,UAAUwrH,MAAQ,KAQxCja,sBAAsBvxG,UAAU0xG,MAAQ,KAOxCH,sBAAsBvxG,UAAU2G,OAAS,KAOzC4qG,sBAAsBvxG,UAAUyrH,SAAW,EAO3Cla,sBAAsBvxG,UAAUkyG,oBAAsB,IAQtDX,sBAAsBvxG,UAAU2xG,iBAAkB,EAelDJ,sBAAsBvxG,UAAUmyG,oBAAsB,SAASX,EAAQC,EAAUO,GAKhF,IAHA,IAAItlD,EAAQ8kD,EAAOI,WAGVpoG,EAAI,EAAGA,EAAIioG,EAASvwG,OAAQsI,IACrC,CACCwoG,EAAiBxoG,GAAK,IAAI0nG,qBAAqBO,EAASjoG,IACxDlJ,KAAKuxG,aAAa1oD,IAAIsoD,EAASjoG,GAAIwoG,EAAiBxoG,IAIpD,IAAI8iG,EAAQkF,EAAOljD,SAASmjD,EAASjoG,IACrCwoG,EAAiBxoG,GAAG4nG,iBAAmB,GAKvC,IAAK,IAAItjF,EAAI,EAAGA,EAAIw+E,EAAMprG,OAAQ4sB,IAClC,CACC,IAAIw/B,EAAOkkD,EAAOgB,mBAAmBlG,EAAMx+E,IAAI,GAG/C,GAAIw/B,GAAQmkD,EAASjoG,IAAMgoG,EAAO9kD,MAAMhmC,MAAMuvE,SAAS3oC,KACpDkkD,EAAOwL,gBAAgB1vD,GAC1B,CAcC,IAAIo+D,EAAkBla,EAAOuT,gBAAgBtT,EAASjoG,GACpD8jD,GAAM,GACJq+D,EAAgBna,EAAOuT,gBAAgBtT,EAASjoG,GAClD8jD,GAAM,GAER,GAAuB,MAAnBo+D,GACFA,EAAgBxqH,OAAS,GACkB,MAA3CZ,KAAKwxG,WAAWnyG,IAAI+rH,EAAgB,KACb,EAAvBC,EAAczqH,QAAcwqH,EAAgBxqH,OAC9C,CAGC,IAFA,IAAIkxG,EAAe,IAAIf,qBAAqBqa,GAEnC3C,EAAI,EAAGA,EAAI2C,EAAgBxqH,OAAQ6nH,IAC5C,CACC,IAAIpuD,EAAO+wD,EAAgB3C,GAC3BzoH,KAAKwxG,WAAW3oD,IAAIwR,EAAMy3C,GAI1B1lD,EAAM07D,UAAUztD,GAET62C,EAAOsV,mBAEVtV,EAAO2L,oBAAoBxiD,GAAM,GACjC62C,EAAO4L,kBAAkBziD,GAAK,IAInCy3C,EAAa5tG,OAASwtG,EAAiBxoG,GAEnCg9C,QAAQ18C,QAAQkoG,EAAiBxoG,GAAG4nG,iBAAkBgB,GAAgB,GAEzEJ,EAAiBxoG,GAAG4nG,iBAAiB//F,KAAK+gG,KAO9CJ,EAAiBxoG,GAAG66D,KAAK,GAAK,IAWhCktC,sBAAsBvxG,UAAU4rH,YAAc,WAE7C,IAAIC,EAAa,GAEjB,GAAkB,MAAdvrH,KAAKoxG,MAER,IAAK,IAAIloG,EAAI,EAAGA,EAAIlJ,KAAKoxG,MAAMxwG,OAAQsI,IACvC,CACC,IAAIsiH,EAAexrH,KAAKuxG,aAAalyG,IAAIW,KAAKoxG,MAAMloG,IAEhC,MAAhBsiH,GAEHD,EAAWx6G,KAAKy6G,GAKnB,IAAIC,EAAgBzrH,KAAKuxG,aAAavoD,YAEtC,IAAS9/C,EAAE,EAAGA,EAAIuiH,EAAc7qH,OAAQsI,IAGvCuiH,EAAcviH,GAAG66D,KAAK,IAAM,EAG7B,IAAI2nD,EAAiBH,EAAWjhH,QAEhC,MAAOihH,EAAW3qH,OAAS,EAC3B,CACC,IAEI+qH,EAFAH,EAAeD,EAAW,GAI9BK,EAAwBJ,EAAa3a,iBACrC8a,EAAkBH,EAAa1a,iBAI/B,IAAI+a,GAAkB,EAKlBC,EAAe9rH,KAAK4xG,oBAExB,IAAS1oG,EAAI,EAAGA,EAAI0iH,EAAsBhrH,OAAQsI,IAClD,CACC,IAAI4oG,EAAe8Z,EAAsB1iH,GAEzC,GAA4B,SAAxB4oG,EAAa/tC,KAAK,GAQtB,CACC8nD,GAAkB,EAElB,MAPA,IAAId,EAAYjZ,EAAa5tG,OAC7B4nH,EAAe5rH,KAAKyD,IAAImoH,EAAcf,EAAUhnD,KAAK,GAAK,GAY5D,GAAI8nD,EACJ,CAIC,GAHAL,EAAaznD,KAAK,GAAK+nD,EACvB9rH,KAAKyxG,QAAUvxG,KAAKyD,IAAI3D,KAAKyxG,QAASqa,GAEf,MAAnBH,EAEH,IAASziH,EAAI,EAAGA,EAAIyiH,EAAgB/qH,OAAQsI,IAC5C,CACK4oG,EAAe6Z,EAAgBziH,GAGnC4oG,EAAa/tC,KAAK,GAAK,QAInBgnD,EAAYjZ,EAAa1tG,QAGH,GAAtB2mH,EAAUhnD,KAAK,KAElBwnD,EAAWx6G,KAAKg6G,GAMhBA,EAAUhnD,KAAK,IAAM,GAKxBwnD,EAAWxtG,YAGZ,CAGC,IAAIguG,EAAcR,EAAWxtG,QAG7B,GAFAwtG,EAAWx6G,KAAKy6G,GAEZO,GAAeP,GAAqC,GAArBD,EAAW3qH,OAM7C,OAOH,IAASsI,EAAE,EAAGA,EAAIuiH,EAAc7qH,OAAQsI,IAGvCuiH,EAAcviH,GAAG66D,KAAK,IAAM/jE,KAAKyxG,QAIlC,IAAUvoG,EAAI,EAAGA,EAAIwiH,EAAe9qH,OAAQsI,IAE3C,CAAIsiH,EAAeE,EAAexiH,GAIlC,IAJA,IACI8iH,EAAkB,EAClBJ,EAAwBJ,EAAa1a,iBAE/BtjF,EAAI,EAAGA,EAAIo+F,EAAsBhrH,OAAQ4sB,IACnD,CACKskF,EAAe8Z,EAAsBp+F,GACrCu9F,EAAYjZ,EAAa1tG,OAC7BonH,EAAaznD,KAAK,GAAK7jE,KAAKwD,IAAIsoH,EAC9BjB,EAAUhnD,KAAK,GAAK,GACtBioD,EAAkBR,EAAaznD,KAAK,IAMtC/jE,KAAKyxG,QAAUzxG,KAAK4xG,oBAAsB5xG,KAAKyxG,SAShDR,sBAAsBvxG,UAAUusH,SAAW,WAE1C,IAAIC,EAAW,GACflsH,KAAKkrH,MAAQ,GAEb,IAAK,IAAIhiH,EAAI,EAAGA,EAAIlJ,KAAKyxG,QAAU,EAAGvoG,IAErCgjH,EAAShjH,GAAK,GACdlJ,KAAKkrH,MAAMhiH,GAAKgjH,EAAShjH,GAM1B,IAAIijH,EAAa,KAEjB,GAAkB,MAAdnsH,KAAKoxG,MACT,CACC,IAAIgb,EAAgBpsH,KAAKoxG,MACzB+a,EAAa,GAEb,IAASjjH,EAAI,EAAGA,EAAIkjH,EAAcxrH,OAAQsI,IAC1C,CACC,IAAI8jD,EAAOo/D,EAAcljH,GACrBsiH,EAAexrH,KAAKuxG,aAAalyG,IAAI2tD,GACzCm/D,EAAWjjH,GAAKsiH,GAIlBxrH,KAAKipD,OAAM,SAAS5iD,EAAQ6M,EAAMmnD,EAAMkwD,EAAO7uG,GAY9C,GAVY,GAARA,GAAaxI,EAAKu+F,QAAU,GAAKv+F,EAAKi3G,QAAU,IAEnD+B,EAASh5G,EAAK6wD,KAAK,IAAIhzD,KAAKmC,GAC5BA,EAAKu+F,QAAUv+F,EAAK6wD,KAAK,GACzB7wD,EAAKi3G,QAAUj3G,EAAK6wD,KAAK,GAGzB7wD,EAAK6wD,KAAK,GAAKmoD,EAASh5G,EAAKu+F,SAAS7wG,OAAS,GAGlC,MAAVyF,GAA0B,MAARg0D,EACtB,CACC,IAAIgyD,EAA6BhmH,EAAOorG,QAAUv+F,EAAKu+F,QAEvD,GAAI4a,EAA6B,EACjC,CAEChyD,EAAKo3C,QAAUprG,EAAOorG,QACtBp3C,EAAK8vD,QAAUj3G,EAAKu+F,QACpBp3C,EAAK0J,KAAO,GACZ1J,EAAKrb,EAAI,GACTqb,EAAKzP,EAAI,GAET,IAAK,IAAI1hD,EAAImxD,EAAK8vD,QAAU,EAAGjhH,EAAImxD,EAAKo3C,QAASvoG,IAIhDgjH,EAAShjH,GAAG6H,KAAKspD,GACjBA,EAAKqwD,0BAA0BxhH,EAAGgjH,EAAShjH,GACxCtI,OAAS,OAIburH,GAAY,EAAO,OAcvBlb,sBAAsBvxG,UAAUupD,MAAQ,SAASC,EAASojE,EAAUC,EAAgBC,GAGnF,GAAgB,MAAZF,EACJ,CACC,IAAK,IAAIpjH,EAAI,EAAGA,EAAIojH,EAAS1rH,OAAQsI,IACrC,CACC,IAAIsiH,EAAec,EAASpjH,GAER,MAAhBsiH,IAEc,MAAbgB,IAEHA,EAAY,IAAInuH,QAGbkuH,GAGHf,EAAaX,SAAW,GACxBW,EAAaX,SAAS,GAAK7qH,KAAKmrH,SAChCK,EAAaX,SAAS,GAAK3hH,EAC3BlJ,KAAKysH,YAAY,KAAMjB,EAAc,KAAMtiE,EAASsjE,EAClDhB,EAAaX,SAAU3hH,EAAG,IAI5BlJ,KAAKshH,IAAI,KAAMkK,EAAc,KAAMtiE,EAASsjE,EAAW,IAK1DxsH,KAAKmrH,aAoBPla,sBAAsBvxG,UAAU4hH,IAAM,SAASj7G,EAAQ2rF,EAAM06B,EAAgBxjE,EAASxtC,EAAM6uG,GAE3F,GAAY,MAARv4B,EACJ,CACC,IAAI26B,EAAS36B,EAAKrhF,GAElB,GAAoB,MAAhB+K,EAAKixG,GACT,CACCjxG,EAAKixG,GAAU36B,EACf9oC,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,GAM7C,IAFA,IAAIqC,EAAgB56B,EAAK8e,iBAAiBxmG,QAEjCpB,EAAI,EAAGA,EAAG0jH,EAAchsH,OAAQsI,IACzC,CACC,IAAI4oG,EAAe8a,EAAc1jH,GAC7B2jH,EAAa/a,EAAa1tG,OAG9BpE,KAAKshH,IAAItvB,EAAM66B,EAAY/a,EAAc5oD,EAASxtC,EAChD6uG,EAAQ,SAMXrhE,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,KAyBhDtZ,sBAAsBvxG,UAAU+sH,YAAc,SAASpmH,EAAQ2rF,EAAM06B,EAAgBxjE,EAASxtC,EAAMoxG,EAAWC,EAAWxC,GAsBzH,GAAY,MAARv4B,EACJ,CACC,GAAc,MAAV3rF,IAOkB,MAAjB2rF,EAAK64B,UACR74B,EAAK64B,SAAS,IAAMxkH,EAAOwkH,SAAS,IACrC,CACC,IAAImC,EAAiB3mH,EAAOwkH,SAASjqH,OAAS,EAC9CoxF,EAAK64B,SAAWxkH,EAAOwkH,SAASvgH,QAChC0nF,EAAK64B,SAASmC,EAAiB,GAAKD,EAItC,IAAIJ,EAAS36B,EAAKrhF,GAElB,GAAoB,MAAhB+K,EAAKixG,GACT,CACCjxG,EAAKixG,GAAU36B,EACf9oC,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,GAM7C,IAFA,IAAIqC,EAAgB56B,EAAK8e,iBAAiBxmG,QAEjCpB,EAAI,EAAGA,EAAI0jH,EAAchsH,OAAQsI,IAC1C,CACC,IAAI4oG,EAAe8a,EAAc1jH,GAC7B2jH,EAAa/a,EAAa1tG,OAG9BpE,KAAKysH,YAAYz6B,EAAM66B,EAAY/a,EAAc5oD,EAASxtC,EACxDs2E,EAAK64B,SAAU3hH,EAAGqhH,EAAQ,SAM7BrhE,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,KAKhD5pE,WAAWswD,sBAAyD,qBAA1BA,sBAAwCA,2BAAwB1wG,EAoH1G6xG,gBAAgB1yG,UAAU+xG,QAAU,KAOpCW,gBAAgB1yG,UAAU6xG,aAAe,KAOzCa,gBAAgB1yG,UAAU8xG,WAAa,KAOvCY,gBAAgB1yG,UAAUwrH,MAAQ,KAQlC9Y,gBAAgB1yG,UAAU0xG,MAAQ,KAOlCgB,gBAAgB1yG,UAAU2G,OAAS,KAOnC+rG,gBAAgB1yG,UAAUyrH,SAAW,EAOrC/Y,gBAAgB1yG,UAAUkyG,oBAAsB,IAQhDQ,gBAAgB1yG,UAAU2xG,iBAAkB,EAO5Ce,gBAAgB1yG,UAAUutH,cAAgB,KAe1C7a,gBAAgB1yG,UAAUmyG,oBAAsB,SAASX,EAAQC,EAAUO,GAM1E,IAJA,IAAItlD,EAAQ8kD,EAAOI,WACf4b,EAAYhc,EAAOgc,UAGdhkH,EAAI,EAAGA,EAAIioG,EAASvwG,OAAQsI,IACrC,CACCwoG,EAAiBxoG,GAAK,IAAI0nG,qBAAqBO,EAASjoG,IACxDlJ,KAAKuxG,aAAa1oD,IAAIsoD,EAASjoG,GAAIwoG,EAAiBxoG,IACpDwoG,EAAiBxoG,GAAGikH,eAAiB,EAErC,IAAK,IAAIC,EAAK,EAAGA,EAAKF,EAAUtsH,OAAQwsH,IAEvC,GAAIhhE,EAAMhmC,MAAM2vE,UAAUob,EAASjoG,KAAOgkH,EAAUE,GACpD,CACC1b,EAAiBxoG,GAAGikH,cAAgBC,EACpC,MAMF,IAAIphB,EAAQkF,EAAOljD,SAASmjD,EAASjoG,IACrCwoG,EAAiBxoG,GAAG4nG,iBAAmB,GAKvC,IAAK,IAAItjF,EAAI,EAAGA,EAAIw+E,EAAMprG,OAAQ4sB,IAClC,CACC,IAAIw/B,EAAOkkD,EAAOgB,mBAAmBlG,EAAMx+E,IAAI,GAG/C,GAAIw/B,GAAQmkD,EAASjoG,IAAMgoG,EAAO9kD,MAAMhmC,MAAMuvE,SAAS3oC,KACpDkkD,EAAOwL,gBAAgB1vD,GAC1B,CAcC,IAAIo+D,EAAkBla,EAAOuT,gBAAgBtT,EAASjoG,GACpD8jD,GAAM,GACJq+D,EAAgBna,EAAOuT,gBAAgBtT,EAASjoG,GAClD8jD,GAAM,GAER,GAAuB,MAAnBo+D,GACFA,EAAgBxqH,OAAS,GACkB,MAA3CZ,KAAKwxG,WAAWnyG,IAAI+rH,EAAgB,KACb,EAAvBC,EAAczqH,QAAcwqH,EAAgBxqH,OAC9C,CAGC,IAFA,IAAIkxG,EAAe,IAAIf,qBAAqBqa,GAEnC3C,EAAI,EAAGA,EAAI2C,EAAgBxqH,OAAQ6nH,IAC5C,CACC,IAAIpuD,EAAO+wD,EAAgB3C,GAC3BzoH,KAAKwxG,WAAW3oD,IAAIwR,EAAMy3C,GAI1B1lD,EAAM07D,UAAUztD,GAET62C,EAAOsV,mBAEVtV,EAAO2L,oBAAoBxiD,GAAM,GACjC62C,EAAO4L,kBAAkBziD,GAAK,IAInCy3C,EAAa5tG,OAASwtG,EAAiBxoG,GAEnCg9C,QAAQ18C,QAAQkoG,EAAiBxoG,GAAG4nG,iBAAkBgB,GAAgB,GAEzEJ,EAAiBxoG,GAAG4nG,iBAAiB//F,KAAK+gG,KAO9CJ,EAAiBxoG,GAAG66D,KAAK,GAAK,IAWhCquC,gBAAgB1yG,UAAU4rH,YAAc,WAEvCtrH,KAAKitH,cAAgB,GAErB,IAAI1B,EAAa,GACb7vG,EAAO,IAAIrd,OAEf,GAAkB,MAAd2B,KAAKoxG,MAER,IAAK,IAAIloG,EAAI,EAAGA,EAAIlJ,KAAKoxG,MAAMxwG,OAAQsI,IACvC,CACC,IAAIsiH,EAAexrH,KAAKuxG,aAAalyG,IAAIW,KAAKoxG,MAAMloG,IACpDlJ,KAAKqtH,YAAY,KAAM7B,EAAc,KAAM9vG,EAAM,GAE7B,MAAhB8vG,GAEHD,EAAWx6G,KAAKy6G,GAMnB,IAAI8B,EAAY,GACZC,EAAY,GAEhB,IAASrkH,EAAIlJ,KAAKitH,cAAcrsH,OAAS,EAAGsI,GAAK,EAAGA,IAE/CA,GAAKlJ,KAAKitH,cAAcrsH,OAAS,EAEpC0sH,EAAUpkH,GAAK,EAIfokH,EAAUpkH,GAAKqkH,EAAUrkH,EAAE,GAAK,EAGjCqkH,EAAUrkH,GAAKokH,EAAUpkH,GAAKlJ,KAAKitH,cAAc/jH,GAGlDlJ,KAAKyxG,QAAU8b,EAAU,GAEzB,IAAI9B,EAAgBzrH,KAAKuxG,aAAavoD,YAEtC,IAAS9/C,EAAE,EAAGA,EAAIuiH,EAAc7qH,OAAQsI,IAGvCuiH,EAAcviH,GAAG66D,KAAK,IAAM,EAGRwnD,EAAWjhH,QAEhC,MAAOihH,EAAW3qH,OAAS,EAC3B,CACC,IACIgrH,EACAD,EAFAH,EAAeD,EAAW,GAI9BK,EAAwBJ,EAAa3a,iBACrC8a,EAAkBH,EAAa1a,iBAI/B,IAAI+a,GAAkB,EAKlBC,EAAeyB,EAAU,GAE7B,IAASrkH,EAAI,EAAGA,EAAI0iH,EAAsBhrH,OAAQsI,IAClD,CACC,IAAI4oG,EAAe8Z,EAAsB1iH,GAEzC,GAA4B,SAAxB4oG,EAAa/tC,KAAK,GAQtB,CACC8nD,GAAkB,EAElB,MAPA,IAAId,EAAYjZ,EAAa5tG,OAC7B4nH,EAAe5rH,KAAKyD,IAAImoH,EAAcf,EAAUhnD,KAAK,GAAK,GAY5D,GAAI8nD,EACJ,CAQC,GAPIC,EAAeyB,EAAU/B,EAAa2B,iBAEzCrB,EAAeyB,EAAU/B,EAAa2B,gBAGvC3B,EAAaznD,KAAK,GAAK+nD,EAEA,MAAnBH,EAEH,IAASziH,EAAI,EAAGA,EAAIyiH,EAAgB/qH,OAAQsI,IAC5C,CACK4oG,EAAe6Z,EAAgBziH,GAGnC4oG,EAAa/tC,KAAK,GAAK,QAInBgnD,EAAYjZ,EAAa1tG,QAGH,GAAtB2mH,EAAUhnD,KAAK,KAElBwnD,EAAWx6G,KAAKg6G,GAMhBA,EAAUhnD,KAAK,IAAM,GAKxBwnD,EAAWxtG,YAGZ,CAGC,IAAIguG,EAAcR,EAAWxtG,QAG7B,GAFAwtG,EAAWx6G,KAAKy6G,GAEZO,GAAeP,GAAqC,GAArBD,EAAW3qH,OAM7C,SAkDJwxG,gBAAgB1yG,UAAU2tH,YAAc,SAAShnH,EAAQ2rF,EAAM06B,EAAgBhxG,EAAM8xG,GAEpF,GAAY,MAARx7B,EACJ,CACC,IAAI26B,EAASlsD,WAAW13D,OAAOipF,EAAKhlC,MAEpC,GAAoB,MAAhBtxC,EAAKixG,GACT,CACCjxG,EAAKixG,GAAU36B,EACf,IAAIy7B,EAAUz7B,EAAKm7B,eAEgB,MAA/BntH,KAAKitH,cAAcQ,IAAoBztH,KAAKitH,cAAcQ,GAAWD,KAExExtH,KAAKitH,cAAcQ,GAAWD,GAO/B,IAFA,IAAIZ,EAAgB56B,EAAK8e,iBAAiBxmG,QAEjCpB,EAAI,EAAGA,EAAI0jH,EAAchsH,OAAQsI,IAC1C,CACC,IAAI4oG,EAAe8a,EAAc1jH,GAC7B2jH,EAAa/a,EAAa1tG,OAI1B4tF,EAAKm7B,cAAgBN,EAAWM,cAEnCntH,KAAKqtH,YAAYr7B,EAAM66B,EAAY/a,EAAc5rD,QAAQ1hC,MAAM9I,EAAM,MAAO,GAAO,GAE3Es2E,EAAKm7B,eAAiBN,EAAWM,eAEzCntH,KAAKqtH,YAAYr7B,EAAM66B,EAAY/a,EAAc5rD,QAAQ1hC,MAAM9I,EAAM,MAAO,GAAO8xG,EAAa,OAarGpb,gBAAgB1yG,UAAUusH,SAAW,WAEpC,IAAIC,EAAW,GACflsH,KAAKkrH,MAAQ,GAEb,IAAK,IAAIhiH,EAAI,EAAGA,EAAIlJ,KAAKyxG,QAAU,EAAGvoG,IAErCgjH,EAAShjH,GAAK,GACdlJ,KAAKkrH,MAAMhiH,GAAKgjH,EAAShjH,GAM1B,IAAIijH,EAAa,KAEjB,GAAkB,MAAdnsH,KAAKoxG,MACT,CACC,IAAIgb,EAAgBpsH,KAAKoxG,MACzB+a,EAAa,GAEb,IAASjjH,EAAI,EAAGA,EAAIkjH,EAAcxrH,OAAQsI,IAC1C,CACC,IAAI8jD,EAAOo/D,EAAcljH,GACrBsiH,EAAexrH,KAAKuxG,aAAalyG,IAAI2tD,GACzCm/D,EAAWjjH,GAAKsiH,GAIlBxrH,KAAKipD,OAAM,SAAS5iD,EAAQ6M,EAAMmnD,EAAMkwD,EAAO7uG,GAY9C,GAVY,GAARA,GAAaxI,EAAKu+F,QAAU,GAAKv+F,EAAKi3G,QAAU,IAEnD+B,EAASh5G,EAAK6wD,KAAK,IAAIhzD,KAAKmC,GAC5BA,EAAKu+F,QAAUv+F,EAAK6wD,KAAK,GACzB7wD,EAAKi3G,QAAUj3G,EAAK6wD,KAAK,GAGzB7wD,EAAK6wD,KAAK,GAAKmoD,EAASh5G,EAAKu+F,SAAS7wG,OAAS,GAGlC,MAAVyF,GAA0B,MAARg0D,EACtB,CACC,IAAIgyD,EAA6BhmH,EAAOorG,QAAUv+F,EAAKu+F,QAEvD,GAAI4a,EAA6B,EACjC,CAEChyD,EAAKo3C,QAAUprG,EAAOorG,QACtBp3C,EAAK8vD,QAAUj3G,EAAKu+F,QACpBp3C,EAAK0J,KAAO,GACZ1J,EAAKrb,EAAI,GACTqb,EAAKzP,EAAI,GAET,IAAK,IAAI1hD,EAAImxD,EAAK8vD,QAAU,EAAGjhH,EAAImxD,EAAKo3C,QAASvoG,IAIhDgjH,EAAShjH,GAAG6H,KAAKspD,GACjBA,EAAKqwD,0BAA0BxhH,EAAGgjH,EAAShjH,GACxCtI,OAAS,OAIburH,GAAY,EAAO,OAcvB/Z,gBAAgB1yG,UAAUupD,MAAQ,SAASC,EAASojE,EAAUC,EAAgBC,GAG7E,GAAgB,MAAZF,EACJ,CACC,IAAK,IAAIpjH,EAAI,EAAGA,EAAIojH,EAAS1rH,OAAQsI,IACrC,CACC,IAAIsiH,EAAec,EAASpjH,GAER,MAAhBsiH,IAEc,MAAbgB,IAEHA,EAAY,IAAInuH,QAGbkuH,GAGHf,EAAaX,SAAW,GACxBW,EAAaX,SAAS,GAAK7qH,KAAKmrH,SAChCK,EAAaX,SAAS,GAAK3hH,EAC3BlJ,KAAKysH,YAAY,KAAMjB,EAAc,KAAMtiE,EAASsjE,EAClDhB,EAAaX,SAAU3hH,EAAG,IAI5BlJ,KAAKshH,IAAI,KAAMkK,EAAc,KAAMtiE,EAASsjE,EAAW,IAK1DxsH,KAAKmrH,aAoBP/Y,gBAAgB1yG,UAAU4hH,IAAM,SAASj7G,EAAQ2rF,EAAM06B,EAAgBxjE,EAASxtC,EAAM6uG,GAErF,GAAY,MAARv4B,EACJ,CACC,IAAI26B,EAAS36B,EAAKrhF,GAElB,GAAoB,MAAhB+K,EAAKixG,GACT,CACCjxG,EAAKixG,GAAU36B,EACf9oC,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,GAM7C,IAFA,IAAIqC,EAAgB56B,EAAK8e,iBAAiBxmG,QAEjCpB,EAAI,EAAGA,EAAG0jH,EAAchsH,OAAQsI,IACzC,CACC,IAAI4oG,EAAe8a,EAAc1jH,GAC7B2jH,EAAa/a,EAAa1tG,OAG9BpE,KAAKshH,IAAItvB,EAAM66B,EAAY/a,EAAc5oD,EAASxtC,EAChD6uG,EAAQ,SAMXrhE,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,KAyBhDnY,gBAAgB1yG,UAAU+sH,YAAc,SAASpmH,EAAQ2rF,EAAM06B,EAAgBxjE,EAASxtC,EAAMoxG,EAAWC,EAAWxC,GAsBnH,GAAY,MAARv4B,EACJ,CACC,GAAc,MAAV3rF,IAOkB,MAAjB2rF,EAAK64B,UACR74B,EAAK64B,SAAS,IAAMxkH,EAAOwkH,SAAS,IACrC,CACC,IAAImC,EAAiB3mH,EAAOwkH,SAASjqH,OAAS,EAC9CoxF,EAAK64B,SAAWxkH,EAAOwkH,SAASvgH,QAChC0nF,EAAK64B,SAASmC,EAAiB,GAAKD,EAItC,IAAIJ,EAAS36B,EAAKrhF,GAElB,GAAoB,MAAhB+K,EAAKixG,GACT,CACCjxG,EAAKixG,GAAU36B,EACf9oC,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,GAO7C,IAHA,IAAIqC,EAAgB56B,EAAK8e,iBAAiBxmG,QACtCojH,EAAgB17B,EAAK6e,iBAAiBvmG,QAEjCpB,EAAI,EAAGA,EAAI0jH,EAAchsH,OAAQsI,IAC1C,CACC,IAAI4oG,EAAe8a,EAAc1jH,GAC7B2jH,EAAa/a,EAAa1tG,OAI1B4tF,EAAKm7B,eAAiBN,EAAWM,eAEpCntH,KAAKysH,YAAYz6B,EAAM66B,EAAY/a,EAAc5oD,EAASxtC,EACxDs2E,EAAK64B,SAAU3hH,EAAGqhH,EAAQ,GAI9B,IAASrhH,EAAI,EAAGA,EAAIwkH,EAAc9sH,OAAQsI,IAC1C,CACK4oG,EAAe4b,EAAcxkH,GAC7B2jH,EAAa/a,EAAa5tG,OAI1B8tF,EAAKm7B,cAAgBN,EAAWM,eAEnCntH,KAAKysH,YAAYz6B,EAAM66B,EAAY/a,EAAc5oD,EAASxtC,EACxDs2E,EAAK64B,SAAU3hH,EAAGqhH,EAAQ,SAO9BrhE,EAAQ7iD,EAAQ2rF,EAAM06B,EAAgBnC,EAAO,KAKhD5pE,WAAWyxD,gBAA6C,qBAApBA,gBAAkCA,qBAAkB7xG,EA0BxF8xG,0BAA0B3yG,UAAU+zD,QAAU,SAASptD,KAEvDs6C,WAAW0xD,0BAAiE,qBAA9BA,0BAA4CA,+BAA4B9xG,EAgCtH+xG,gCAAgC5yG,UAAY,IAAI2yG,0BAChDC,gCAAgC5yG,UAAUqyB,YAAcugF,gCAOxDA,gCAAgC5yG,UAAUwxG,OAAS,KAQnDoB,gCAAgC5yG,UAAUsnH,cAAgB,GAQ1D1U,gCAAgC5yG,UAAUiuH,gBAAkB,KAO5Drb,gCAAgC5yG,UAAUkuH,qBAAuB,EAOjEtb,gCAAgC5yG,UAAUmuH,6BAA+B,EAOzEvb,gCAAgC5yG,UAAUouH,2BAA6B,EAQvExb,gCAAgC5yG,UAAU+zD,QAAU,SAASptD,GAE5D,IAAI+f,EAAQpmB,KAAKkxG,OAAOhuC,WAGxBljE,KAAK2tH,gBAAkB,GAEvB,IAAK,IAAIzkH,EAAI,EAAGA,EAAIkd,EAAM8kG,MAAMtqH,OAAQsI,IAEvClJ,KAAK2tH,gBAAgBzkH,GAAKkd,EAAM8kG,MAAMhiH,GAAGoB,QAG1C,IAAIujH,EAA+B,EAC/BD,EAAuB5tH,KAAK+tH,mBAAmB3nG,GAEnD,IAASld,EAAI,EAAGA,EAAIlJ,KAAKgnH,eACxB6G,EAA+B7tH,KAAK8tH,2BAA4B5kH,IACjE,CACClJ,KAAKguH,eAAe9kH,EAAGkd,GACvBpmB,KAAKiuH,UAAU/kH,EAAGkd,GAClB,IAAI8nG,EAAqBluH,KAAK+tH,mBAAmB3nG,GAEjD,GAAI8nG,EAAqBN,EACzB,CACCA,EAAuBM,EACvBL,EAA+B,EAG/B,IAAK,IAAIrgG,EAAI,EAAGA,EAAIxtB,KAAK2tH,gBAAgB/sH,OAAQ4sB,IAIhD,IAFA,IAAI20F,EAAO/7F,EAAM8kG,MAAM19F,GAEdi7F,EAAI,EAAGA,EAAItG,EAAKvhH,OAAQ6nH,IACjC,CACC,IAAIz7D,EAAOm1D,EAAKsG,GAChBzoH,KAAK2tH,gBAAgBngG,GAAGw/B,EAAKy9D,0BAA0Bj9F,IAAMw/B,OAKhE,CAGC6gE,IAGA,IAASrgG,EAAI,EAAGA,EAAIxtB,KAAK2tH,gBAAgB/sH,OAAQ4sB,IAIhD,IAFI20F,EAAO/7F,EAAM8kG,MAAM19F,GAEdi7F,EAAI,EAAGA,EAAItG,EAAKvhH,OAAQ6nH,IACjC,CACKz7D,EAAOm1D,EAAKsG,GAChBz7D,EAAK09D,0BAA0Bl9F,EAAGi7F,IAKrC,GAA4B,GAAxBmF,EAGH,MAKF,IAAI1C,EAAQ,GACRgB,EAAW,GAEf,IAAShjH,EAAI,EAAGA,EAAIkd,EAAMqrF,QAAU,EAAGvoG,IAEtCgjH,EAAShjH,GAAK,GACdgiH,EAAMhiH,GAAKgjH,EAAShjH,GAGrB,IAASA,EAAI,EAAGA,EAAIlJ,KAAK2tH,gBAAgB/sH,OAAQsI,IAEhD,IAASskB,EAAI,EAAGA,EAAIxtB,KAAK2tH,gBAAgBzkH,GAAGtI,OAAQ4sB,IAEnD0+F,EAAShjH,GAAG6H,KAAK/Q,KAAK2tH,gBAAgBzkH,GAAGskB,IAI3CpH,EAAM8kG,MAAQA,GAef5Y,gCAAgC5yG,UAAUquH,mBAAqB,SAAS3nG,GAKvE,IAHA,IAAI+nG,EAAW/nG,EAAM8kG,MAAMtqH,OACvBwtH,EAAiB,EAEZllH,EAAI,EAAGA,EAAIilH,EAAUjlH,IAE7BklH,GAAkBpuH,KAAKquH,sBAAsBnlH,EAAGkd,GAGjD,OAAOgoG,GAeR9b,gCAAgC5yG,UAAU2uH,sBAAwB,SAASnlH,EAAGkd,GAS7E,IAPA,IAAIgoG,EAAiB,EACjBjM,EAAO/7F,EAAM8kG,MAAMhiH,GACnBolH,EAAeloG,EAAM8kG,MAAMhiH,EAAI,GAE/BqlH,EAAa,GAGR/gG,EAAI,EAAGA,EAAI20F,EAAKvhH,OAAQ4sB,IACjC,CAMC,IALA,IAAIta,EAAOivG,EAAK30F,GACZghG,EAAet7G,EAAKu3G,0BAA0BvhH,GAC9CulH,EAAiBv7G,EAAKs3G,+BAA+BthH,GACrDwlH,EAAc,GAETjG,EAAI,EAAGA,EAAIgG,EAAe7tH,OAAQ6nH,IAC3C,CACC,IAAIkG,EAAgBF,EAAehG,GAC/BmG,EAAwBD,EAAclE,0BAA0BvhH,EAAI,GACxEwlH,EAAY39G,KAAK69G,GAGlBF,EAAYrgG,MAAK,SAAS2wB,EAAG4L,GAAK,OAAO5L,EAAI4L,KAC7C2jE,EAAWC,GAAgBE,EAG5B,IAAIjH,EAAU,GAEd,IAASj6F,EAAI,EAAGA,EAAI+gG,EAAW3tH,OAAQ4sB,IAEtCi6F,EAAUA,EAAQzoH,OAAOuvH,EAAW/gG,IAGrC,IAAIqhG,EAAa,EAEjB,MAAOA,EAAaP,EAAa1tH,OAEhCiuH,IAAe,EAGhB,IAAIC,EAAW,EAAID,EAAa,EAChCA,GAAc,EAEd,IAAIttG,EAAO,GAEX,IAASiM,EAAI,EAAGA,EAAIshG,IAAYthG,EAE/BjM,EAAKiM,GAAK,EAGX,IAASA,EAAI,EAAGA,EAAIi6F,EAAQ7mH,OAAQ4sB,IACpC,CACC,IAAIpqB,EAAQqkH,EAAQj6F,GACbuhG,EAAY3rH,EAAQyrH,IACtBttG,EAAKwtG,GAEP,MAAOA,EAAY,EAEdA,EAAY,IAEfX,GAAkB7sG,EAAKwtG,EAAY,IAGpCA,EAAaA,EAAY,GAAM,IAC7BxtG,EAAKwtG,GAIZ,OAAOX,GAcR9b,gCAAgC5yG,UAAUuuH,UAAY,SAASe,EAAmB5oG,GAEjF,IAAI6oG,GAAW,EAGXh8D,EAAQ,EACRi8D,EAAW,GACf,MAAOD,GAAYh8D,IAAUi8D,EAC7B,CAIC,IAAIjR,EAAQ+Q,EAAoB,GAAK,GAAK/7D,EAAQ,GAAK,EACvDg8D,GAAW,EAEX,IAAK,IAAI/lH,EAAI,EAAGA,EAAIkd,EAAM8kG,MAAMtqH,OAAQsI,IACxC,CAIC,IAHA,IAAIi5G,EAAO/7F,EAAM8kG,MAAMhiH,GACnBimH,EAAe,GAEV3hG,EAAI,EAAGA,EAAI20F,EAAKvhH,OAAQ4sB,IACjC,CACC,IAAIw/B,EAAOm1D,EAAK30F,GACZ4hG,EAAWpiE,EAAKy9D,0BAA0BvhH,GAG1CkmH,EAAW,IAEdA,EAAW5hG,GAEZ2hG,EAAaC,GAAYpiE,EAG1B,IAAIqiE,EAA2B,KAC3BC,EAA2B,KAC3BC,EAA4B,KAC5BC,EAA4B,KAE5BC,EAAqB,KACrBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KAEtBC,EAAW,KACXC,EAAY,KAEhB,IAAStiG,EAAI,EAAGA,EAAK20F,EAAKvhH,OAAS,EAAI4sB,IACvC,CAOC,GAAS,GAALA,EACJ,CACCqiG,EAAWV,EAAa3hG,GACxB6hG,EAA2BQ,EACxBvF,2BAA2BphH,GAC9BomH,EAA2BO,EACxBrF,+BAA+BthH,GAClCumH,EAAqB,GACrBC,EAAqB,GAErB,IAAK,IAAIjH,EAAI,EAAGA,EAAI4G,EAAyBzuH,OAAQ6nH,IAEpDgH,EAAmBhH,GAAK4G,EAAyB5G,GAAGgC,0BAA0BvhH,EAAI,GAGnF,IAASu/G,EAAI,EAAGA,EAAI6G,EAAyB1uH,OAAQ6nH,IAEpDiH,EAAmBjH,GAAK6G,EAAyB7G,GAAGgC,0BAA0BvhH,EAAI,QAKnFmmH,EAA2BE,EAC3BD,EAA2BE,EAC3BC,EAAqBE,EACrBD,EAAqBE,EACrBC,EAAWC,EAGZA,EAAYX,EAAa3hG,EAAI,GAC7B+hG,EAA4BO,EACzBxF,2BAA2BphH,GAC9BsmH,EAA4BM,EACzBtF,+BAA+BthH,GAElCymH,EAAsB,GACtBC,EAAsB,GAEtB,IAASnH,EAAI,EAAGA,EAAI8G,EAA0B3uH,OAAQ6nH,IAErDkH,EAAoBlH,GAAK8G,EAA0B9G,GAAGgC,0BAA0BvhH,EAAI,GAGrF,IAASu/G,EAAI,EAAGA,EAAI+G,EAA0B5uH,OAAQ6nH,IAErDmH,EAAoBnH,GAAK+G,EAA0B/G,GAAGgC,0BAA0BvhH,EAAI,GAGrF,IAAI6mH,EAAwB,EACxBC,EAAyB,EAE7B,IAASvH,EAAI,EAAGA,EAAIgH,EAAmB7uH,OAAQ6nH,IAE9C,IAAK,IAAIwH,EAAK,EAAGA,EAAKN,EAAoB/uH,OAAQqvH,IAE7CR,EAAmBhH,GAAKkH,EAAoBM,IAE/CF,IAGGN,EAAmBhH,GAAKkH,EAAoBM,IAE/CD,IAKH,IAASvH,EAAI,EAAGA,EAAIiH,EAAmB9uH,OAAQ6nH,IAE9C,IAASwH,EAAK,EAAGA,EAAKL,EAAoBhvH,OAAQqvH,IAE7CP,EAAmBjH,GAAKmH,EAAoBK,IAE/CF,IAGGL,EAAmBjH,GAAKmH,EAAoBK,IAE/CD,IAKH,GAAKA,EAAyBD,GAC5BC,GAA0BD,GAC3B9R,EACD,CACC,IAAIl6C,EAAO8rD,EAASpF,0BAA0BvhH,GAC9C2mH,EAASnF,0BAA0BxhH,EAAG4mH,EACnCrF,0BAA0BvhH,IAC7B4mH,EAAUpF,0BAA0BxhH,EAAG66D,GAMvCwrD,EAA4BF,EAC5BG,EAA4BF,EAC5BK,EAAsBF,EACtBG,EAAsBF,EACtBI,EAAYD,EAEP5R,IAKJgR,GAAW,QAmBjB3c,gCAAgC5yG,UAAUsuH,eAAiB,SAAS/G,EAAW7gG,GAG9E,IAAI8pG,EAAiBjJ,EAAY,GAAK,EACtC,GAAIiJ,EAEH,IAAK,IAAI1iG,EAAIpH,EAAMqrF,QAAU,EAAGjkF,GAAK,EAAGA,IAEvCxtB,KAAKmwH,WAAW3iG,EAAG0iG,QAKpB,IAAS1iG,EAAI,EAAGA,EAAIpH,EAAMqrF,QAASjkF,IAElCxtB,KAAKmwH,WAAW3iG,EAAG0iG,IAgBtB5d,gCAAgC5yG,UAAUywH,WAAa,SAASC,EAAWF,GAM1E,IAJA,IAAIG,EAAkBrwH,KAAK2tH,gBAAgByC,GAAWxvH,OAClD0vH,EAAe,GACfC,EAAoB,GAEfrnH,EAAI,EAAGA,EAAImnH,EAAiBnnH,IACrC,CACC,IAQIsnH,EAaAC,EArBAzjE,EAAOhtD,KAAK2tH,gBAAgByC,GAAWlnH,GACvCwnH,EAAc,IAAIne,iBACtBme,EAAY1jE,KAAOA,EAUlBwjE,EAFGN,EAEuBljE,EACvBs9D,2BAA2B8F,GAIJpjE,EACvBw9D,+BAA+B4F,GAOlCK,EAFGP,EAEaE,EAAY,EAIZA,EAAY,EAGE,MAA3BI,GACmC,GAAlCA,EAAwB5vH,QAE5B8vH,EAAYC,YAAc3wH,KAAK2wH,YAC7BH,EAAyBC,GAC3BH,EAAav/G,KAAK2/G,IAMlBH,EAAkBvjE,EAAKy9D,0BAA0B2F,KAAc,EAIjEE,EAAajiG,KAAKkkF,iBAAiB7yG,UAAUihE,SAI7C,IAASz3D,EAAI,EAAGA,EAAImnH,EAAiBnnH,IAEpC,GAA4B,MAAxBqnH,EAAkBrnH,GACtB,CACK8jD,EAAOsjE,EAAavyG,QAAQivC,KAChCA,EAAK09D,0BAA0B0F,EAAWlnH,KAkB7CopG,gCAAgC5yG,UAAUixH,YAAc,SAASlC,EAAgB2B,GAKhF,IAHA,IAAIE,EAAe,GACfM,EAAa,EAER1nH,EAAI,EAAGA,EAAIulH,EAAe7tH,OAAQsI,IAC3C,CACC,IAAI8jD,EAAOyhE,EAAevlH,GAC1BonH,EAAaM,KAAgB5jE,EAAKy9D,0BAA0B2F,GAO7D,GAFAE,EAAajiG,MAAK,SAAS/uB,EAAEuB,GAAG,OAAOvB,EAAIuB,KAEvC+vH,EAAa,GAAK,EAGrB,OAAON,EAAapwH,KAAKC,MAAMywH,EAAa,IAExC,GAAkB,GAAdA,EAER,OAASN,EAAa,GAAKA,EAAa,IAAM,EAI9C,IAAIO,EAAcD,EAAa,EAC3BE,EAAaR,EAAaO,EAAc,GAAKP,EAAa,GAC1DS,EAAcT,EAAaM,EAAa,GACxCN,EAAaO,GAEjB,OAAQP,EAAaO,EAAc,GAAKE,EAAcT,EAAaO,GAC/DC,IACCA,EAAaC,IAwBpBxe,iBAAiB7yG,UAAUixH,YAAc,EAOzCpe,iBAAiB7yG,UAAUstD,MAAO,EAOlCulD,iBAAiB7yG,UAAUihE,QAAU,SAASrhE,EAAGuB,GAEhD,OAAS,MAALvB,GAAkB,MAALuB,EAEZA,EAAE8vH,YAAcrxH,EAAEqxH,aAEb,EAEA9vH,EAAE8vH,YAAcrxH,EAAEqxH,YAEnB,EAIA,EAKD,GAIThwE,WAAW2xD,gCAA6E,qBAApCA,gCAAkDA,qCAAkC/xG,EAwBxIiyG,sBAAsB9yG,UAAY,IAAI2yG,0BACtCG,sBAAsB9yG,UAAUqyB,YAAcygF,sBAO9CA,sBAAsB9yG,UAAUwxG,OAAS,KASzCsB,sBAAsB9yG,UAAU+zD,QAAU,SAASptD,GAOlD,IALA,IAAI+f,EAAQpmB,KAAKkxG,OAAOhuC,WACpBspD,EAAY,IAAInuH,OAChB2yH,EAAmB5qG,EAAMmrF,aAAavoD,YACtCioE,EAAc,IAAI5yH,OAEb6K,EAAI,EAAGA,EAAI8nH,EAAiBpwH,OAAQsI,IAE5C+nH,EAAYD,EAAiB9nH,GAAGyH,IAAMqgH,EAAiB9nH,GAKxD,IAAIijH,EAAa,KAEjB,GAAmB,MAAf/lG,EAAMgrF,MACV,CACC,IAAI8f,EAAa9qG,EAAMgrF,MACvB+a,EAAa,GAEb,IAASjjH,EAAI,EAAGA,EAAIgoH,EAAWtwH,OAAQsI,IAEtCijH,EAAWjjH,GAAKkd,EAAMmrF,aAAalyG,IAAI6xH,EAAWhoH,IAIpDkd,EAAM6iC,OAAM,SAAS5iD,EAAQ6M,EAAMw5G,EAAgBnC,EAAO7uG,GAKrDxI,EAAKopG,WAAWj2G,KAEnBqmH,EAAezc,SACf/pD,QAAQ78C,OAAOqjH,EAAgBrmH,EAAOyqG,kBACtCzqG,EAAOwqG,iBAAiB9/F,KAAK27G,GAC7BxmE,QAAQ78C,OAAOqjH,EAAgBx5G,EAAK29F,kBACpC39F,EAAK49F,iBAAiB//F,KAAK27G,IAG5BF,EAAUt5G,EAAKvC,IAAMuC,SACd+9G,EAAY/9G,EAAKvC,MACtBw7G,GAAY,EAAM,MAKrB,IAAIgF,EAAgBjrE,QAAQ1hC,MAAMgoG,EAAW,MAAM,GAGnDpmG,EAAM6iC,OAAM,SAAS5iD,EAAQ6M,EAAMw5G,EAAgBnC,EAAO7uG,GAKrDxI,EAAKopG,WAAWj2G,KAEnBqmH,EAAezc,SACf/pD,QAAQ78C,OAAOqjH,EAAgBrmH,EAAOyqG,kBACtC59F,EAAK49F,iBAAiB//F,KAAK27G,GAC3BrmH,EAAOwqG,iBAAiB9/F,KAAK27G,GAC7BxmE,QAAQ78C,OAAOqjH,EAAgBx5G,EAAK29F,mBAGrC2b,EAAUt5G,EAAKvC,IAAMuC,SACd+9G,EAAY/9G,EAAKvC,MACtBsgH,GAAa,EAAME,IAGvBxwE,WAAW6xD,sBAAyD,qBAA1BA,sBAAwCA,2BAAwBjyG,EAsC1GkyG,uBAAuB/yG,UAAY,IAAI2yG,0BACvCI,uBAAuB/yG,UAAUqyB,YAAc0gF,uBAO/CA,uBAAuB/yG,UAAUwxG,OAAS,KAO1CuB,uBAAuB/yG,UAAUgzG,iBAAmB,GAOpDD,uBAAuB/yG,UAAUizG,qBAAuB,IAQxDF,uBAAuB/yG,UAAUozG,oBAAsB,GAOvDL,uBAAuB/yG,UAAUsnH,cAAgB,EAOjDvU,uBAAuB/yG,UAAUghH,eAAiB,EAOlDjO,uBAAuB/yG,UAAUihH,gBAAkB,EAOnDlO,uBAAuB/yG,UAAUkhH,aAAe,GAQhDnO,uBAAuB/yG,UAAUmhH,cAAgB,EAajDpO,uBAAuB/yG,UAAU0xH,eAAiB,KAQlD3e,uBAAuB/yG,UAAUkzG,YAAc/oD,YAAYmR,gBAO3Dy3C,uBAAuB/yG,UAAUmzG,SAAW,KAO5CJ,uBAAuB/yG,UAAU2xH,OAAS,KAO1C5e,uBAAuB/yG,UAAU4xH,cAAgB,KAOjD7e,uBAAuB/yG,UAAU6xH,WAAa,KAO9C9e,uBAAuB/yG,UAAU8xH,SAAW,KAO5C/e,uBAAuB/yG,UAAU+xH,YAAc,KAO/Chf,uBAAuB/yG,UAAUgyH,gBAAkB,KAOnDjf,uBAAuB/yG,UAAUiyH,WAAa,KAO9Clf,uBAAuB/yG,UAAUkyH,MAAQ,KAQzCnf,uBAAuB/yG,UAAUmyH,YAAa,EAO9Cpf,uBAAuB/yG,UAAUoyH,wBAA0B,KAO3Drf,uBAAuB/yG,UAAUqyH,4BAA8B,KAO/Dtf,uBAAuB/yG,UAAUsgH,aAAe,GAKhDvN,uBAAuB/yG,UAAUsyH,YAAc,WAE9C,IAAI5rG,EAAQpmB,KAAKkxG,OAAOhuC,WACxBpe,MAAMzb,OAENyb,MAAM8C,QAAQ,uCAEd,IAAK,IAAIp6B,EAAI,EAAGA,EAAIpH,EAAM8kG,MAAMtqH,OAAQ4sB,IACxC,CACCs3B,MAAMvP,MAAM,QAAS/nB,EAAG,OAGxB,IAFA,IAAI20F,EAAO/7F,EAAM8kG,MAAM19F,GAEdi7F,EAAI,EAAGA,EAAItG,EAAKvhH,OAAQ6nH,IACjC,CACC,IAAIz7D,EAAOm1D,EAAKsG,GAEhB3jE,MAAMvP,MAAMyX,EAAKy9D,0BAA0Bj9F,GAAI,MAEhDs3B,MAAM8C,UAGP9C,MAAM8C,QAAQ,yCAQf6qD,uBAAuB/yG,UAAU+zD,QAAU,SAASptD,GAEnDrG,KAAKoxH,eAAiB/yH,SACtB,IAAI+nB,EAAQpmB,KAAKkxG,OAAOhuC,WACxBljE,KAAKsxH,cAAgB,EAErBtxH,KAAKiyH,cAAcjyH,KAAKkxG,OAAOI,WAAYlrF,GAIvCpmB,KAAK6xH,YAER7xH,KAAKkyH,QAAQ9rG,GAGd,IAAI+rG,EAAa,IAEjB,GAAInyH,KAAK6xH,WAER,IAAK,IAAI3oH,EAAI,EAAGA,EAAIlJ,KAAKgnH,cAAe99G,IACxC,CAaC,GATS,GAALA,IAEHlJ,KAAKoyH,UAAUlpH,EAAGkd,GAClBpmB,KAAKkyH,QAAQ9rG,IAMVpmB,KAAKsxH,cAAgBa,EACzB,CACC,IAAK,IAAI3kG,EAAI,EAAGA,EAAIpH,EAAM8kG,MAAMtqH,OAAQ4sB,IAIvC,IAFA,IAAI20F,EAAO/7F,EAAM8kG,MAAM19F,GAEdi7F,EAAI,EAAGA,EAAItG,EAAKvhH,OAAQ6nH,IACjC,CACC,IAAIz7D,EAAOm1D,EAAKsG,GAChBz7D,EAAK29D,KAAKn9F,EAAGw/B,EAAKy9D,0BAA0Bj9F,IAI9C2kG,EAAanyH,KAAKsxH,mBAKlB,IAAS9jG,EAAI,EAAGA,EAAIpH,EAAM8kG,MAAMtqH,OAAQ4sB,IAIvC,IAFI20F,EAAO/7F,EAAM8kG,MAAM19F,GAEdi7F,EAAI,EAAGA,EAAItG,EAAKvhH,OAAQ6nH,IACjC,CACKz7D,EAAOm1D,EAAKsG,GAChBz7D,EAAK09D,0BAA0Bl9F,EAAGw/B,EAAK4qB,KAAKpqD,IAK/CxtB,KAAKqyH,QAAQryH,KAAKkxG,OAAOI,WAAYlrF,GAErCpmB,KAAKsxH,cAAgB,EAIvBtxH,KAAKsyH,iBAAiBtyH,KAAKkxG,OAAOI,WAAYlrF,IAQ/CqsF,uBAAuB/yG,UAAUwyH,QAAU,SAAS9rG,GASnD,IANA,IAAImsG,EAAW,GAGXzpH,EAAM,IAAI8/C,aACVu5D,EAAO,GAEFj5G,EAAI,EAAGA,GAAKkd,EAAMqrF,QAASvoG,IACpC,CACCi5G,EAAKj5G,GAAKkd,EAAM8kG,MAAMhiH,GAEtB,IAAK,IAAIskB,EAAI,EAAGA,EAAI20F,EAAKj5G,GAAGtI,OAAQ4sB,IACpC,CAGC,IAAIta,EAAOivG,EAAKj5G,GAAGskB,GACfglG,EAAc,IAAI5iB,mBAAmB18F,EAAMhK,GAC/CspH,EAAYtU,UAAY1wF,EACxBglG,EAAYvW,SAAU,EACtBsW,EAASxhH,KAAKyhH,GAEd1pH,EAAI+/C,IAAI31C,EAAMs/G,IAMhB,IAAIC,EAA6B,GAAlBF,EAAS3xH,OACpBqyD,EAAQ,EAGRy/D,EAAY,EAEhB,MAAOH,EAAS3xH,OAAS,GAAKqyD,GAASw/D,EACvC,CACC,IAAIE,EAAcJ,EAASx0G,QACvBivC,EAAO2lE,EAAY3lE,KAEnBojE,EAAYuC,EAAY9iB,cACxBqO,EAAY7oF,SAASs9F,EAAYzU,WAEjCkM,EAA0Bp9D,EAAKs9D,2BAA2B8F,GAC1D/F,EAA8Br9D,EAAKw9D,+BAA+B4F,GAElEwC,EAAwBxI,EAAwBxpH,OAChDiyH,EAA4BxI,EAA4BzpH,OAExDkyH,EAAkB9yH,KAAK+yH,aAAa3I,EACtCgG,EAAY,GACV4C,EAAsBhzH,KAAK+yH,aAAa1I,EAC1C+F,EAAY,GAEV6C,EAAyBL,EACzBC,EACAK,EAAkBlmE,EAAKy9D,0BAA0B2F,GACjD+C,EAAaD,EAEbD,EAAyB,IAE5BE,GAAcL,EAAkBF,EAAwBI,EACpDH,GACAI,GAIL,IAAIG,GAAkB,EAEtB,GAAID,EAAaD,EAAkBR,EAElC,GAAiB,GAAbxU,EAEHlxD,EAAK09D,0BAA0B0F,EAAW+C,GAC1CC,GAAkB,MAGnB,CACC,IAAIvD,EAAW1N,EAAKiO,GAAWlS,EAAY,GACvCmV,EAAYxD,EACbpF,0BAA0B2F,GAC7BiD,EAAYA,EAAYxD,EAAS/pE,MAAQ,EACrC9lD,KAAK0yG,iBAAmB1lD,EAAKlH,MAAQ,EAErCutE,EAAYF,GAEfnmE,EAAK09D,0BAA0B0F,EAAW+C,GAC1CC,GAAkB,GAEVC,EAAYrmE,EAClBy9D,0BAA0B2F,GACzBsC,IAEH1lE,EAAK09D,0BAA0B0F,EAAWiD,GAC1CD,GAAkB,QAIhB,GAAID,EAAaD,EAAkBR,EACxC,CACC,IAAIY,EAAWnR,EAAKiO,GAAWxvH,OAE/B,GAAIs9G,GAAaoV,EAAW,EAE3BtmE,EAAK09D,0BAA0B0F,EAAW+C,GAC1CC,GAAkB,MAGnB,CACC,IAAItD,EAAY3N,EAAKiO,GAAWlS,EAAY,GACxCqV,EAAazD,EACdrF,0BAA0B2F,GAC7BmD,EAAaA,EAAazD,EAAUhqE,MAAQ,EACxC9lD,KAAK0yG,iBAAmB1lD,EAAKlH,MAAQ,EAErCytE,EAAaJ,GAEhBnmE,EAAK09D,0BAA0B0F,EAAW+C,GAC1CC,GAAkB,GAEVG,EAAavmE,EACnBy9D,0BAA0B2F,GACzBsC,IAEH1lE,EAAK09D,0BAA0B0F,EAAWmD,GAC1CH,GAAkB,IAKrB,GAAIA,EACJ,CAEC,IAASlqH,EAAI,EAAGA,EAAIkhH,EAAwBxpH,OAAQsI,IACpD,CACC,IAAIsqH,EAAgBpJ,EAAwBlhH,GACxCuqH,EAAuB3qH,EAAIzJ,IAAIm0H,GAEP,MAAxBC,GAEiC,GAAhCA,EAAqBxX,UAExBwX,EAAqBxX,SAAU,EAC/BsW,EAASxhH,KAAK0iH,IAMjB,IAASvqH,EAAI,EAAGA,EAAImhH,EAA4BzpH,OAAQsI,IACxD,CACKsqH,EAAgBnJ,EAA4BnhH,GAC5CuqH,EAAuB3qH,EAAIzJ,IAAIm0H,GAEP,MAAxBC,GAEiC,GAAhCA,EAAqBxX,UAExBwX,EAAqBxX,SAAU,EAC/BsW,EAASxhH,KAAK0iH,KAMlBd,EAAY1W,SAAU,EACtBhpD,MAcFw/C,uBAAuB/yG,UAAU0yH,UAAY,SAASlpH,EAAGkd,GAGxD,IAAI8pG,EAAiBhnH,EAAI,GAAK,EAE9B,GAAIgnH,EAEH,IAAK,IAAI1iG,EAAIpH,EAAMqrF,QAASjkF,EAAI,EAAGA,IAElCxtB,KAAK0zH,mBAAmBlmG,EAAI,EAAGpH,EAAOoH,QAKvC,IAASA,EAAI,EAAGA,EAAIpH,EAAMqrF,QAAU,EAAGjkF,IAEtCxtB,KAAK0zH,mBAAmBlmG,EAAI,EAAGpH,EAAOoH,IAiBzCilF,uBAAuB/yG,UAAUg0H,mBAAqB,SAAStD,EAAWhqG,EAAOqqG,GAUhF,IARA,IAAItO,EAAO/7F,EAAM8kG,MAAMkF,GAKnBuD,EAAiB,GACjBC,EAAU,IAAIv1H,OAET6K,EAAI,EAAGA,EAAIi5G,EAAKvhH,OAAQsI,IACjC,CACC,IAAI2qH,EAAc1R,EAAKj5G,GACvByqH,EAAezqH,GAAK,IAAI0mG,mBACxB+jB,EAAezqH,GAAG8jD,KAAO6mE,EACzBF,EAAezqH,GAAGg1G,UAAYh1G,EAC9B0qH,EAAQC,EAAYljH,IAAMgjH,EAAezqH,GACzC,IAAIkhH,EAA0B,KAI7BA,EAFGqG,EAAgBL,EAEOyD,EACvBrJ,+BAA+B4F,GAIRyD,EACvBvJ,2BAA2B8F,GAK/BuD,EAAezqH,GAAG2mG,cAAgB7vG,KAAK8zH,wBACrCD,EAAazJ,GAGhBuJ,EAAetlG,KAAKuhF,mBAAmBlwG,UAAUihE,SAKjD,IAASz3D,EAAI,EAAGA,EAAIyqH,EAAe/yH,OAAQsI,IAC3C,CACC,IAAI6qH,EAA0B,EAC1B/mE,EAAO2mE,EAAezqH,GAAG8jD,KAEzB8lE,GADA1I,EAA0B,KACR,GAIrBA,EAFGqG,EAAgBL,EAEOpjE,EAAKw9D,+BAC7B4F,GAAW9lH,QAIa0iD,EAAKs9D,2BAC7B8F,GAAW9lH,QAGiB,MAA3B8/G,IAEH2J,EAA0B3J,EAAwBxpH,OAIjDkyH,EAFGiB,EAA0B,EAEX/zH,KAAK+yH,aAAa3I,EAClCqG,GAOgBzjE,EAAKy9D,0BAA0B2F,IAOnD,IAHA,IAAI4D,EAAa,EACbX,GAAa,IAER7lG,EAAImmG,EAAezqH,GAAGg1G,UAAY,EAAG1wF,GAAK,GACnD,CACC,IAAIqiF,EAAgB+jB,EAAQzR,EAAK30F,GAAG7c,IAEpC,GAAqB,MAAjBk/F,EACJ,CACC,IAAIggB,EAAWhgB,EAAc7iD,KAEzB6iD,EAAcoM,SAKjBoX,EAAYxD,EACTpF,0BAA0B2F,GACzBP,EAAS/pE,MACT,EACA9lD,KAAK0yG,iBACLshB,EAAahnE,EAAKlH,MAAQ,EAC9Bt4B,GAAK,IAILwmG,GAAcnE,EAAS/pE,MAAQ9lD,KAAK0yG,iBACpCllF,MAKH,IAAIymG,EAAc,EACdV,EAAa,IAEjB,IAAS/lG,EAAImmG,EAAezqH,GAAGg1G,UAAY,EAAG1wF,EAAImmG,EAAe/yH,QACjE,CACKivG,EAAgB+jB,EAAQzR,EAAK30F,GAAG7c,IAEpC,GAAqB,MAAjBk/F,EACJ,CACC,IAAIigB,EAAYjgB,EAAc7iD,KAE1B6iD,EAAcoM,SAKjBsX,EAAazD,EACVrF,0BAA0B2F,GACzBN,EAAUhqE,MACV,EACA9lD,KAAK0yG,iBACLuhB,EAAcjnE,EAAKlH,MAAQ,EAC/Bt4B,EAAImmG,EAAe/yH,SAInBqzH,GAAenE,EAAUhqE,MAAQ9lD,KAAK0yG,iBACtCllF,MAKCslG,GAAmBO,GAAaP,GAAmBS,EAEtDvmE,EAAK09D,0BAA0B0F,EAAW0C,GAElCA,EAAkBO,GAI1BrmE,EAAK09D,0BAA0B0F,EAAWiD,GAC1CrzH,KAAKsxH,eAAiB+B,EAAYP,GAE1BA,EAAkBS,IAI1BvmE,EAAK09D,0BAA0B0F,EAAWmD,GAC1CvzH,KAAKsxH,eAAiBwB,EAAkBS,GAGzCI,EAAezqH,GAAG+yG,SAAU,IAe9BxJ,uBAAuB/yG,UAAUo0H,wBAA0B,SAASD,EAAaK,GAIhF,IAFA,IAAIC,EAAc,EAETjrH,EAAI,EAAGA,EAAIgrH,EAAWtzH,OAAQsI,IACvC,CACC,IAAI8jD,EAAOknE,EAAWhrH,GAElB2qH,EAAYl+B,YAAc3oC,EAAK2oC,WAElCw+B,IAEQN,EAAY1kH,UAAY69C,EAAK79C,SAErCglH,GAAe,EAIfA,GAAe,EAIjB,OAAOA,GAcR1hB,uBAAuB/yG,UAAUqzH,aAAe,SAAStE,EAAgB2B,GAExE,GAA6B,GAAzB3B,EAAe7tH,OAElB,OAAO,EAKR,IAFA,IAAI0vH,EAAe,GAEVpnH,EAAI,EAAGA,EAAIulH,EAAe7tH,OAAQsI,IAE1ConH,EAAapnH,GAAKulH,EAAevlH,GAAGuhH,0BAA0B2F,GAK/D,GAFAE,EAAajiG,MAAK,SAAS/uB,EAAEuB,GAAG,OAAOvB,EAAIuB,KAEvC4tH,EAAe7tH,OAAS,GAAK,EAGhC,OAAO0vH,EAAapwH,KAAKC,MAAMsuH,EAAe7tH,OAAS,IAIvD,IAAIiwH,EAAcpC,EAAe7tH,OAAS,EACtCkwH,EAAaR,EAAaO,EAAc,GACxCE,EAAcT,EAAaO,GAE/B,OAASC,EAAaC,GAAe,GAgBvCte,uBAAuB/yG,UAAUuyH,cAAgB,SAASmC,EAAQhuG,GAEjEpmB,KAAKq0H,oBAAoBD,EAAQhuG,GAGjC,IAAK,IAAIld,EAAIlJ,KAAKuxH,WAAYroH,GAAK,EAAGA,IAEjCA,EAAIkd,EAAMqrF,SAEbzxG,KAAKs0H,gBAAgBprH,EAAGkrH,EAAQhuG,GAIlC,IAASld,EAAIlJ,KAAKuxH,WAAW,EAAGroH,GAAKkd,EAAMqrF,QAASvoG,IAE/CA,EAAI,GAEPlJ,KAAKs0H,gBAAgBprH,EAAGkrH,EAAQhuG,IAmBnCqsF,uBAAuB/yG,UAAU40H,gBAAkB,SAASlE,EAAWhkE,EAAOhmC,GAW7E,IATA,IAAI+7F,EAAO/7F,EAAM8kG,MAAMkF,GACnB9kE,EAAO,EACPipE,EAASv0H,KAAK6yG,UAAY7yG,KAAK0xH,gBAAkB1xH,KAAK2xH,WAAWvB,IACjE,EAIAoE,GAAgB,EAEXtrH,EAAI,EAAGA,EAAIi5G,EAAKvhH,OAAQsI,IACjC,CACC,IAAIgK,EAAOivG,EAAKj5G,GAEhB,GAAIgK,EAAKyiF,WACT,CACC,IAAI74B,EAAS98D,KAAKkxG,OAAOsM,gBAAgBtqG,EAAK85C,MAEhC,MAAV8P,EAEC98D,KAAK4yG,aAAe/oD,YAAYmR,iBACnCh7D,KAAK4yG,aAAe/oD,YAAYyR,iBAEhCpoD,EAAK4yC,MAAQgX,EAAOhX,MACpB5yC,EAAKyyC,OAASmX,EAAOnX,SAIrBzyC,EAAK4yC,MAAQgX,EAAOnX,OACpBzyC,EAAKyyC,OAASmX,EAAOhX,OAKtB0uE,GAAgB,EAGjBlpE,EAAOprD,KAAKwD,IAAI4nD,EAAMp4C,EAAKyyC,aAEvB,GAAIzyC,EAAK/D,SACd,CAGC,IAAIslH,EAAW,EAEG,MAAdvhH,EAAK66C,MAER0mE,EAAWvhH,EAAK66C,MAAMntD,OAItBkkD,MAAMr0C,KAAK,sBAGZyC,EAAK4yC,OAAS2uE,EAAW,GAAKz0H,KAAK8yG,oBAIpCyhB,GAAUrhH,EAAK4yC,MAAQ,EACvB5yC,EAAKy3G,KAAKyF,EAAWmE,GACrBrhH,EAAKw3G,0BAA0B0F,EAAWmE,GAC1CA,GAAUrhH,EAAK4yC,MAAQ,EACvByuE,GAAUv0H,KAAK0yG,iBAGK,GAAjB8hB,GAEH1vE,MAAMr0C,KAAK,oCAebgiG,uBAAuB/yG,UAAU20H,oBAAsB,SAASjoE,EAAOhmC,GAGtE,IAAIwkC,GAAK5qD,KAAK2yG,qBAIV+hB,EAAwB,EAC5B10H,KAAK2xH,WAAa,GAClB3xH,KAAK4xH,MAAQ,GAEb,IAAK,IAAIxB,EAAYhqG,EAAMqrF,QAAS2e,GAAa,EAAGA,IACpD,CAUC,IARA,IAAIuE,EAAgB,EAChBxS,EAAO/7F,EAAM8kG,MAAMkF,GACnBmE,EAASv0H,KAAK6yG,SAId2hB,GAAgB,EAEXtrH,EAAI,EAAGA,EAAIi5G,EAAKvhH,OAAQsI,IACjC,CACC,IAAIgK,EAAOivG,EAAKj5G,GAEhB,GAAIgK,EAAKyiF,WACT,CACC,IAAI74B,EAAS98D,KAAKkxG,OAAOsM,gBAAgBtqG,EAAK85C,MAEhC,MAAV8P,EAEC98D,KAAK4yG,aAAe/oD,YAAYmR,iBACnCh7D,KAAK4yG,aAAe/oD,YAAYyR,iBAEhCpoD,EAAK4yC,MAAQgX,EAAOhX,MACpB5yC,EAAKyyC,OAASmX,EAAOnX,SAIrBzyC,EAAK4yC,MAAQgX,EAAOnX,OACpBzyC,EAAKyyC,OAASmX,EAAOhX,OAKtB0uE,GAAgB,EAGjBG,EAAgBz0H,KAAKwD,IAAIixH,EAAezhH,EAAKyyC,aAEzC,GAAIzyC,EAAK/D,SACd,CAGC,IAAIslH,EAAW,EAEG,MAAdvhH,EAAK66C,MAER0mE,EAAWvhH,EAAK66C,MAAMntD,OAItBkkD,MAAMr0C,KAAK,sBAGZyC,EAAK4yC,OAAS2uE,EAAW,GAAKz0H,KAAK8yG,oBAIpCyhB,GAAUrhH,EAAK4yC,MAAQ,EACvB5yC,EAAKy3G,KAAKyF,EAAWmE,GACrBrhH,EAAKw3G,0BAA0B0F,EAAWmE,GAC1CA,GAAUrhH,EAAK4yC,MAAQ,EACvByuE,GAAUv0H,KAAK0yG,iBAEX6hB,EAASv0H,KAAK0xH,kBAEjB1xH,KAAK0xH,gBAAkB6C,EACvBv0H,KAAKuxH,WAAanB,GAGnBpwH,KAAK2xH,WAAWvB,GAAamE,EAGT,GAAjBC,GAEH1vE,MAAMr0C,KAAK,mCAGZzQ,KAAK4xH,MAAMxB,GAAaxlE,EACxB,IAAIgqE,EAAqBD,EAAgB,EACrCD,EAAwB,EAAM10H,KAAK2yG,qBACvC+hB,EAAwBC,EAEpB30H,KAAK4yG,aAAe/oD,YAAYmR,iBACnCh7D,KAAK4yG,aAAe/oD,YAAYwR,eAEhCzQ,GAAKgqE,EAILhqE,GAAKgqE,EAGN,IAAS1rH,EAAI,EAAGA,EAAIi5G,EAAKvhH,OAAQsI,IACjC,CACC,IAAI8jD,EAAOm1D,EAAKj5G,GAChB8jD,EAAK49D,KAAKwF,EAAWxlE,MAgBxB6nD,uBAAuB/yG,UAAU2yH,QAAU,SAASjmE,EAAOhmC,GAU1D,IAFA,IAAI2nC,EAAQ3nC,EAAMorF,WAAWxoD,YAEpBx7B,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAClC,CACC,IAAIw/B,EAAOe,EAAMvgC,GAEjB,KAAIw/B,EAAKykD,QAAUzkD,EAAKm9D,QAAU,EAAI,GAAtC,CAYA,IALA,IAAI0K,EAAa7nE,EACdy9D,0BAA0Bz9D,EAAKm9D,QAAU,GACxC2K,GAAe,EACfC,EAAc,EAET7rH,EAAI8jD,EAAKm9D,QAAU,EAAGjhH,EAAI8jD,EAAKykD,QAASvoG,IACjD,CACC,IAAI81C,EAAIgO,EAAKy9D,0BAA0BvhH,GAEnC2rH,GAAc71E,GAEjB81E,GAAe,EACfD,EAAa71E,GAIb+1E,IAIF,IAAKD,EACL,CACC,IAAIE,EAAa,EACbC,EAAe,EACfC,EAAe,GACfC,EAAiB,GAEjBC,EAAWpoE,EAAKy9D,0BAA0Bz9D,EAAKm9D,QAAU,GAE7D,IAASjhH,EAAI8jD,EAAKm9D,QAAU,EAAGjhH,EAAI8jD,EAAKykD,QAAU,EAAGvoG,IACrD,CAGC,IAAImsH,EAAQroE,EAAK4qB,KAAK1uE,EAAI,GAEtBksH,GAAYC,GAEfH,EAAahsH,EAAI8jD,EAAKm9D,QAAU,GAAKiL,EACrCJ,KAEQh1H,KAAKs1H,gBAAgBlvG,EAAO4mC,EAAM9jD,EAAI,EAAGksH,IAEjDF,EAAahsH,EAAI8jD,EAAKm9D,QAAU,GAAKiL,EACrCJ,MAKAE,EAAahsH,EAAI8jD,EAAKm9D,QAAU,GAAKkL,EACrCD,EAAWC,GAIbD,EAAWpoE,EAAK4qB,KAAK1uE,GAErB,IAASA,EAAI8jD,EAAKykD,QAAU,EAAGvoG,EAAI8jD,EAAKm9D,QAAU,EAAGjhH,IACrD,CAGKmsH,EAAQroE,EAAK4qB,KAAK1uE,EAAI,GAEtBksH,GAAYC,GAEfF,EAAejsH,EAAI8jD,EAAKm9D,QAAU,GAAKiL,EACvCH,KAEQj1H,KAAKs1H,gBAAgBlvG,EAAO4mC,EAAM9jD,EAAI,EAAGksH,IAEjDD,EAAejsH,EAAI8jD,EAAKm9D,QAAU,GAAKiL,EACvCH,MAKAE,EAAejsH,EAAI8jD,EAAKm9D,QAAU,GAAKn9D,EAAK4qB,KAAK1uE,EAAE,GACnDksH,EAAWC,GAIb,GAAIJ,EAAeF,GAAeC,EAAaD,EAE9C,GAAIE,GAAgBD,EAGnB,IAAS9rH,EAAI8jD,EAAKykD,QAAU,EAAGvoG,EAAI8jD,EAAKm9D,QAASjhH,IAEhD8jD,EAAK29D,KAAKzhH,EAAGisH,EAAejsH,EAAI8jD,EAAKm9D,QAAU,SAG5C,GAAI6K,EAAaC,EAGrB,IAAS/rH,EAAI8jD,EAAKm9D,QAAU,EAAGjhH,EAAI8jD,EAAKykD,QAASvoG,IAEhD8jD,EAAK29D,KAAKzhH,EAAGgsH,EAAahsH,EAAI8jD,EAAKm9D,QAAU,QA4BnD1X,uBAAuB/yG,UAAU41H,gBAAkB,SAASlvG,EAAO4mC,EAAMm1D,EAAM3hE,GAK9E,IAHA,IAAI+0E,EAAYnvG,EAAM8kG,MAAM/I,GACxBjE,GAAa,EAERh1G,EAAI,EAAGA,EAAIqsH,EAAU30H,OAAQsI,IAErC,GAAI8jD,GAAQuoE,EAAUrsH,GACtB,CACCg1G,EAAYh1G,EACZ,MAIF,GAAIg1G,EAAY,EAEf,OAAO,EAGR,IAAIkX,EAAWpoE,EAAKy9D,0BAA0BtI,GAE9C,GAAI3hE,EAAW40E,EACf,CAEC,GAAiB,GAAblX,EAGH,OAAO,EAGR,IAAI2R,EAAW0F,EAAUrX,EAAY,GACjCmV,EAAYxD,EAASpF,0BAA0BtI,GAInD,OAHAkR,EAAYA,EAAYxD,EAAS/pE,MAAQ,EACrC9lD,KAAK0yG,iBAAmB1lD,EAAKlH,MAAQ,EAErCutE,GAAa7yE,EASb,GAAIA,EAAW40E,EACpB,CAEC,GAAIlX,GAAaqX,EAAU30H,OAAS,EAGnC,OAAO,EAGR,IAAIkvH,EAAYyF,EAAUrX,EAAY,GAClCqV,EAAazD,EAAUrF,0BAA0BtI,GAIrD,OAHAoR,EAAaA,EAAazD,EAAUhqE,MAAQ,EACxC9lD,KAAK0yG,iBAAmB1lD,EAAKlH,MAAQ,EAErCytE,GAAc/yE,EAUnB,OAAO,GAcRiyD,uBAAuB/yG,UAAU4yH,iBAAmB,SAASlmE,EAAOhmC,GAEnEpmB,KAAKwxH,SAAW,GAChBxxH,KAAKyxH,YAAc,GAEnB,IAAK,IAAIvoH,EAAI,EAAGA,EAAIkd,EAAM8kG,MAAMtqH,OAAQsI,IAEvClJ,KAAKwxH,SAAStoH,GAAK8rB,OAAOwgG,UAC1Bx1H,KAAKyxH,YAAYvoH,IAAM8rB,OAAOwgG,UAG/B,IAAIrkB,EAAW/qF,EAAMmrF,aAAavoD,YAMlC,IAAS9/C,EAAI,EAAGA,EAAIioG,EAASvwG,OAAQsI,IAEpClJ,KAAKu9G,kBAAkBpM,EAASjoG,IAK7BlJ,KAAKkxG,OAAOukB,WAAaC,wBAAwBC,YAChD31H,KAAKkxG,OAAOukB,WAAaC,wBAAwBE,UACjD51H,KAAKkxG,OAAOukB,WAAaC,wBAAwBG,OAErD71H,KAAK6hH,oBAAoBz7F,GAG1B,IAAI2nC,EAAQ3nC,EAAMorF,WAAWxoD,YAE7B,IAAS9/C,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAEjClJ,KAAK81H,gBAAgB/nE,EAAM7kD,KAa7BupG,uBAAuB/yG,UAAUmiH,oBAAsB,SAASz7F,GAI/D,IAAK,IAAI83F,EAAY,EAAGA,EAAY93F,EAAM8kG,MAAMtqH,OAAQs9G,IAIvD,IAFA,IAAIiE,EAAO/7F,EAAM8kG,MAAMhN,GAEd6X,EAAY,EAAGA,EAAY5T,EAAKvhH,OAAQm1H,IACjD,CACC,IAAI/oE,EAAOm1D,EAAK4T,GAEhB,GAAI/oE,EAAK2oC,WAOR,IALA,IAAIqgC,EAAehpE,EAAKw9D,+BAA+BtM,GAEnD+X,EAAc/X,EAAY,EAGrBuK,EAAI,EAAGA,EAAI,EAAGA,IACvB,CACC,GAAIwN,GAAe,GACdA,EAAc7vG,EAAM8kG,MAAMtqH,QACV,MAAhBo1H,GACAA,EAAap1H,OAAS,EAC3B,CAGC,IAFA,IAAIkjH,EAAc,GAETt2F,EAAI,EAAGA,EAAIwoG,EAAap1H,OAAQ4sB,IACzC,CACC,IAAI0oG,EAAS,IAAItmB,mBACfomB,EAAaxoG,GAAIwoG,EAAaxoG,GAAGoqD,KAAKq+C,IACxCnS,EAAY/yG,KAAKmlH,GAGlBpS,EAAYz1F,KAAKuhF,mBAAmBlwG,UAAUihE,SAE9C,IAAI0yD,EAAYrmE,EAAKhO,EAAE,GAAKgO,EAAKlH,MAAQ,EACrCytE,EAAaF,EAAYrmE,EAAKlH,MAI9BqwE,EAAqB,EAErBC,EAAiB,GAErB,IAAS5oG,EAAI,EAAGA,EAAIs2F,EAAYljH,OAAQ4sB,IACxC,CACC,IACI6oG,EADAC,EAAYxS,EAAYt2F,GAAGw/B,KAG/B,GAAIspE,EAAU3gC,WACd,CAIE0gC,EAFQ,GAAL5N,EAEWz7D,EAAK8jD,iBAKL9jD,EAAK6jD,iBAGpB,IAAK,IAAI0lB,EAAY,EAAGA,EAAYF,EAAYz1H,OAAQ21H,IAEnDF,EAAYE,GAAWryH,QAAUoyH,GAChCD,EAAYE,GAAWnyH,QAAUkyH,IAErCH,GAAsBE,EAAYE,GAAWxoE,MAC1CntD,OAGHw1H,EAAerlH,KAAKslH,EAAYE,UAMlCJ,GAAsBG,EAAUvoE,MAAMntD,OAEtCw1H,EAAerlH,KAAKulH,GAItB,IAAIrS,GAAiBkS,EAAqB,GACtCn2H,KAAK0gH,eAGL1zD,EAAKlH,MAAQm+D,EACZ,EAAIjkH,KAAK0gH,iBAEb2S,GAAarzH,KAAK0gH,eAClB6S,GAAcvzH,KAAK0gH,gBAGpB,IAAIsD,EAAiBuP,EAAaF,EAC9BnP,EAAcF,EAAiBmS,EAE/Bf,EAAW/B,EAAYnP,EAAc,EACrCE,EAAiBpkH,KAAK4gH,aAAe5gH,KAAK2gH,gBAC1C0D,EAAa,EAEjB,IAAS72F,EAAI,EAAGA,EAAI4oG,EAAex1H,OAAQ4sB,IAC3C,CACC,IAAIgpG,EAAiBJ,EAAe5oG,GAAGugC,MACpCntD,OACC6sC,EAAMztC,KAAKoxH,eAAegF,EAAe5oG,GAAGwjF,IAAI,IAEzC,MAAPvjE,IAEHA,EAAM,GACNztC,KAAKoxH,eAAegF,EAAe5oG,GAAGwjF,IAAI,IAAMvjE,GAG7CjgB,EAAI2oG,EAAqB,EAE5B/R,GAAkBpkH,KAAK2gH,gBAEfnzF,EAAI2oG,EAAqB,IAEjC/R,GAAkBpkH,KAAK2gH,iBAKxB,IAAK,IAAI5kD,EAAI,EAAGA,EAAIy6D,EAAgBz6D,IAEnCtuB,EAAQ,EAAJsuB,EAAY,EAAJ0sD,GAAS2M,EACrBA,GAAYlR,EACZz2E,EAAQ,EAAJsuB,EAAY,EAAJ0sD,EAAQ,GAAKrE,EAG1BC,EAAankH,KAAKwD,IAAI2gH,EACpBD,IAIJ4R,EAAehpE,EAAKs9D,2BAA2BpM,GAE/C+X,EAAc/X,EAAY,KAY/BzL,uBAAuB/yG,UAAUo2H,gBAAkB,SAAS9oE,GAI3D,IAAIw1D,EAAU,EAGd,GAAoB,QAAhBx1D,EAAK+W,KAAK,GACd,CACC,IAAI0tC,EAAUzkD,EAAKykD,QACf0Y,EAAUn9D,EAAKm9D,QAEf1Y,GAAW0Y,IAEd1Y,EAAUzkD,EAAK9oD,OAAOutG,QACtB0Y,EAAUn9D,EAAK5oD,OAAO+lH,SAWvB,IARA,IAAIsM,EAAoB,EACpBC,EAAS12H,KAAKoxH,eAAepkE,EAAKgkD,IAAI,IAEtC9sG,EAAS8oD,EAAKi+D,WAAaj+D,EAAK5oD,OAAO4oD,KAAOA,EAAK9oD,OAAO8oD,KAC1DZ,EAAQpsD,KAAKkxG,OAAO9kD,MACpBuqE,EAAiB32H,KAAK4yG,aAAe/oD,YAAY0R,gBAChDv7D,KAAK4yG,aAAe/oD,YAAYyR,gBAE5BpyD,EAAI,EAAGA,EAAI8jD,EAAKe,MAAMntD,OAAQsI,IACvC,CACC,IAAI8oG,EAAWhlD,EAAKe,MAAM7kD,GACtB0tH,EAAa52H,KAAKkxG,OAAOgB,mBAAmBF,GAAU,GAGtD0S,EAAY,GAKZmS,EAAW7pE,EAAKi+D,WAYpB,GAVI2L,GAAc1yH,IAMjB2yH,GAAYA,GAIC,MAAVH,EACJ,CACC,IAAII,EAAcD,EAAW,EAAI,EAC7BjsE,EAAIisE,EACLF,EAAiB32H,KAAKyxH,YAAYtH,GAAWnqH,KAAKwxH,SAASrH,GAC1DwM,EAAiB32H,KAAKwxH,SAAS/f,GAAWzxG,KAAKyxH,YAAYhgB,GAC3DslB,EAAQL,EAA2B,EAApBD,EAAwB,EAAIK,GAE3CD,GAAYF,IAEfI,GAASA,GAGVnsE,GAAKmsE,EACL,IAAI/3E,EAAI03E,EAA2B,EAApBD,EAAwBK,GAEnCE,EAAc5qE,EAAMhmC,MAAMi2F,YAAYrK,GAAU,GAEpD,GAAIhyG,KAAKkxG,OAAO+lB,OAAOD,IAAgB5qE,EAAMhmC,MAAM2vE,UAAUihC,IAAgBJ,EAC7E,CACC,IAAI9lF,EAAQsb,EAAMuR,KAAK5Q,SAASiqE,GAI/Bh4E,EAFY,MAATlO,EAECA,EAAMkO,EAIN43E,EAAWxpE,SAASpO,EAAIgO,EAAK9oD,OAAO4hD,MAAQkxE,EAAY5pE,SAASpO,EAInEh/C,KAAK4yG,aAAe/oD,YAAYmR,iBAC/Bh7D,KAAK4yG,aAAe/oD,YAAYyR,iBAEpCopD,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAE1B5qD,KAAKkxG,OAAOukB,WAAaC,wBAAwBG,OAEpDnR,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,EAAImsE,MAKnCrS,EAAU3zG,KAAK,IAAI45C,QAAQC,EAAG5L,IAE1Bh/C,KAAKkxG,OAAOukB,WAAaC,wBAAwBG,OAEpDnR,EAAU3zG,KAAK,IAAI45C,QAAQC,EAAImsE,EAAO/3E,KAQzC,IAAIk4E,EAAYlqE,EAAKhO,EAAEp+C,OAAS,EAC5Bu2H,GAAa,EACbC,GAAa,EACbnB,EAAcjpE,EAAKykD,QAAU,EAE7BolB,IAEHK,EAAY,EACZC,EAAYnqE,EAAKhO,EAAEp+C,OACnBw2H,EAAY,EACZnB,EAAcjpE,EAAKm9D,QAAU,GAI9B,IAAK,IAAI38F,EAAI0pG,EAAYlqE,EAAKykD,SAAWzkD,EAAKm9D,SAAY38F,GAAK2pG,EAAW3pG,GAAK4pG,EAC/E,CAEC,IAAIC,EAAYrqE,EAAKhO,EAAExxB,GAAKg1F,EAIxB8U,GAAet3H,KAAKwxH,SAASyE,GAAej2H,KAAKyxH,YAAYwE,EAAc,IAAM,EACjFsB,GAAkBv3H,KAAKwxH,SAASyE,EAAc,GAAKj2H,KAAKyxH,YAAYwE,IAAgB,EAExF,GAAIY,EACJ,CACC,IAAIlnG,EAAM2nG,EACVA,EAAcC,EACdA,EAAiB5nG,EAGd3vB,KAAK4yG,aAAe/oD,YAAYmR,iBACnCh7D,KAAK4yG,aAAe/oD,YAAYyR,iBAEhCopD,EAAU3zG,KAAK,IAAI45C,QAAQ0sE,EAAWC,IACtC5S,EAAU3zG,KAAK,IAAI45C,QAAQ0sE,EAAWE,MAItC7S,EAAU3zG,KAAK,IAAI45C,QAAQ2sE,EAAaD,IACxC3S,EAAU3zG,KAAK,IAAI45C,QAAQ4sE,EAAgBF,KAG5Cr3H,KAAKqxH,OAASnxH,KAAKwD,IAAI1D,KAAKqxH,OAAQgG,GACpCpB,GAAemB,EAIhB,GAAc,MAAVV,EACJ,CACKI,EAAcD,EAAW,EAAI,EAAjC,IACIjF,EAAQiF,EACTF,EAAiB32H,KAAKwxH,SAAS/f,GAAWzxG,KAAKyxH,YAAYhgB,GAC1DklB,EAAiB32H,KAAKyxH,YAAYtH,GAAWnqH,KAAKwxH,SAASrH,GAC3D4M,EAAQL,EAA2B,EAApBD,EAAwB,EAAIK,GAE3CD,GAAYF,IAEfI,GAASA,GAENnsE,EAAIgnE,EAAQmF,EACZ/3E,EAAI03E,EAA2B,EAApBD,EAAwB,EAAIK,GAD3C,IAGIU,EAAcprE,EAAMhmC,MAAMi2F,YAAYrK,GAAU,GAChDylB,EAAaz3H,KAAKkxG,OAAOgB,mBAAmBF,GAAU,GAE1D,GAAIhyG,KAAKkxG,OAAO+lB,OAAOO,IAAgBprE,EAAMhmC,MAAM2vE,UAAUyhC,IAAgBC,EAC7E,CACK3mF,EAAQsb,EAAMuR,KAAK5Q,SAASyqE,GAI/Bx4E,EAFY,MAATlO,EAECA,EAAMkO,EAINy4E,EAAWrqE,SAASpO,EAAIgO,EAAK5oD,OAAO0hD,MAAQ0xE,EAAYpqE,SAASpO,EAInEh/C,KAAK4yG,aAAe/oD,YAAYmR,iBAClCh7D,KAAK4yG,aAAe/oD,YAAYyR,iBAE7Bt7D,KAAKkxG,OAAOukB,WAAaC,wBAAwBG,OAEpDnR,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,EAAImsE,IAGnCrS,EAAU3zG,KAAK,IAAI45C,QAAQ3L,EAAG4L,MAI1B5qD,KAAKkxG,OAAOukB,WAAaC,wBAAwBG,OAEpDnR,EAAU3zG,KAAK,IAAI45C,QAAQC,EAAImsE,EAAO/3E,IAGvC0lE,EAAU3zG,KAAK,IAAI45C,QAAQC,EAAG5L,KAI5BgO,EAAKi+D,YAERjrH,KAAK03H,oBAAoB1qE,EAAMglD,GAGhChyG,KAAKkxG,OAAOgM,cAAclL,EAAU0S,GAMnClC,EAFc,GAAXA,EAEOxiH,KAAK8yG,oBAEP0P,EAAU,GAEPA,GAIAA,EAAUxiH,KAAK8yG,oBAG3B2jB,IAGDzpE,EAAK+W,KAAK,GAAK,SAcjB0uC,uBAAuB/yG,UAAU69G,kBAAoB,SAASvwD,GAE7D,IAAI2qE,EAAW3qE,EAAKA,KAChBqqE,EAAYrqE,EAAKhO,EAAE,GAAKgO,EAAKlH,MAAQ,EACrC8xE,EAAY5qE,EAAKpC,EAAE,GAAKoC,EAAKrH,OAAS,EAE1C3lD,KAAKwxH,SAASxkE,EAAKm9D,SAAWjqH,KAAKyD,IAAI3D,KAAKwxH,SAASxkE,EAAKm9D,SAAUyN,GACpE53H,KAAKyxH,YAAYzkE,EAAKm9D,SAAWjqH,KAAKwD,IAAI1D,KAAKyxH,YAAYzkE,EAAKm9D,SAC9DyN,EAAY5qE,EAAKrH,QAEf3lD,KAAK4yG,aAAe/oD,YAAYmR,iBACnCh7D,KAAK4yG,aAAe/oD,YAAYyR,gBAEhCt7D,KAAKkxG,OAAOqM,kBAAkBoa,EAAUN,EAAWO,GAInD53H,KAAKkxG,OAAOqM,kBAAkBoa,EAAUC,EAAWP,GAGpDr3H,KAAKqxH,OAASnxH,KAAKwD,IAAI1D,KAAKqxH,OAAQgG,EAAYrqE,EAAKlH,QAatD2sD,uBAAuB/yG,UAAUg4H,oBAAsB,SAAStrE,EAAOhmC,KAKvEu6B,WAAW8xD,uBAA2D,qBAA3BA,uBAAyCA,4BAAyBlyG,EAwB7GwyG,mBAAmBrzG,UAAY,IAAI2yG,0BACnCU,mBAAmBrzG,UAAUqyB,YAAcghF,mBAO3CA,mBAAmBrzG,UAAUwxG,OAAS,KAStC6B,mBAAmBrzG,UAAU+zD,QAAU,SAASptD,GAE/C,IAAI+f,EAAQpmB,KAAKkxG,OAAOhuC,WACpBspD,EAAY,IAAInuH,OAChB4yH,EAAc/qE,QAAQ1hC,MAAM4B,EAAMmrF,aAAc,MAAM,GAItD4a,EAAa,KAEjB,GAAmB,MAAf/lG,EAAMgrF,MACV,CACC,IAAI8f,EAAa9qG,EAAMgrF,MACvB+a,EAAa,GAEb,IAAK,IAAIjjH,EAAI,EAAGA,EAAIgoH,EAAWtwH,OAAQsI,IACvC,CACcu3D,WAAW13D,OAAOmoH,EAAWhoH,IAC1CijH,EAAWjjH,GAAKkd,EAAMmrF,aAAalyG,IAAI6xH,EAAWhoH,KAIpDkd,EAAM6iC,OAAM,SAAS5iD,EAAQ6M,EAAMw5G,EAAgBnC,EAAO7uG,GAMzD,IAAI4gG,EAAuB,MAAVj2G,GAAkBA,EAAO8mH,eAAiBj6G,EAAKi6G,eAAiBj6G,EAAKopG,WAAWj2G,GAI7FwxH,EAAiC,MAAVxxH,GAAoC,MAAlBqmH,GACzCrmH,EAAO8mH,cAAgBj6G,EAAKi6G,eAAiBT,EAAexoH,QAAUgP,EAEtEopG,GAEHoQ,EAAezc,SACf/pD,QAAQ78C,OAAOqjH,EAAgBrmH,EAAOyqG,kBACtC59F,EAAK49F,iBAAiB//F,KAAK27G,GAC3BrmH,EAAOwqG,iBAAiB9/F,KAAK27G,GAC7BxmE,QAAQ78C,OAAOqjH,EAAgBx5G,EAAK29F,mBAE5BgnB,IAERnL,EAAezc,SACf/pD,QAAQ78C,OAAOqjH,EAAgBrmH,EAAOwqG,kBACtC39F,EAAK29F,iBAAiB9/F,KAAK27G,GAC3BrmH,EAAOyqG,iBAAiB//F,KAAK27G,GAC7BxmE,QAAQ78C,OAAOqjH,EAAgBx5G,EAAK49F,mBAGrC,IAAIgnB,EAASr3D,WAAW13D,OAAOmK,EAAK85C,MACpCw/D,EAAUsL,GAAU5kH,SACb+9G,EAAY6G,KACjB3L,GAAY,EAAM,OAGtBxrE,WAAWoyD,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBxyG,EA8BjG,IAAIm1H,wBACJ,CACCC,WAAY,EACZC,SAAU,EACVmC,SAAU,EACVlC,MAAO,GA00BR,SAASmC,iBAAiB5rE,EAAOwmD,EAAaK,GAE7CtD,cAAcjxG,KAAKsB,KAAMosD,GACzBpsD,KAAK4yG,YAA8B,MAAfA,EAAuBA,EAAc/oD,YAAYmR,gBACrEh7D,KAAKizG,cAAkC,MAAjBA,GAAyBA,EAklChD,SAASglB,aAAajmC,GAErBhyF,KAAKk4H,YAAcl4H,KAAKm4H,qBAEZ,MAARnmC,EAEHhyF,KAAKo4H,QAAQpmC,GAIbhyF,KAAKwQ,QAyjEP,SAAS6nH,aAAajyG,EAAO4rE,GAE5BhyF,KAAKomB,MAAQA,EACbpmB,KAAKgyF,KAAOA,EACZhyF,KAAK8oD,SAAWkpC,EAyBjB,SAASplC,cAAcxmC,EAAO/f,EAAQ0M,EAAO3P,GAE5CpD,KAAKomB,MAAQA,EACbpmB,KAAKqG,OAASA,EACdrG,KAAK8oD,SAAWziD,EAChBrG,KAAK+S,MAAQA,EACb/S,KAAKoD,MAAQA,EACbpD,KAAKs4H,cAAgBl1H,EAiGtB,SAASspD,iBAAiBtmC,EAAO4mC,EAAMoN,EAAUl2D,GAEhDlE,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAKo6D,SAAWA,EAChBp6D,KAAK8oD,SAAWsR,EAChBp6D,KAAKkE,OAASA,EA6Bf,SAASyoD,cAAcvmC,EAAO4mC,EAAM1vD,GAEnC0C,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAK1C,MAAQA,EACb0C,KAAK8oD,SAAWxrD,EA6BjB,SAASuvD,cAAczmC,EAAO4mC,EAAMplC,GAEnC5nB,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAK4nB,MAAQA,EACb5nB,KAAK8oD,SAAWlhC,EA6BjB,SAAS6kC,iBAAiBrmC,EAAO4mC,EAAMI,GAEtCptD,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAKotD,SAAWA,EAChBptD,KAAK8oD,SAAWsE,EA6BjB,SAASmrE,iBAAiBnyG,EAAO4mC,EAAMwrE,GAEtCx4H,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAKw4H,UAAYA,EACjBx4H,KAAK8oD,SAAW0vE,EA6BjB,SAASC,gBAAgBryG,EAAO4mC,EAAM9E,GAErCloD,KAAKomB,MAAQA,EACbpmB,KAAKgtD,KAAOA,EACZhtD,KAAKkoD,QAAUA,EACfloD,KAAK8oD,SAAWZ,EAmDjB,SAASwwE,sBAAsB1rE,EAAMq/C,EAAW/uG,GAE/C0C,KAAKgtD,KAAOA,EACZhtD,KAAKqsG,UAAYA,EACjBrsG,KAAK1C,MAAQA,EACb0C,KAAK8oD,SAAWxrD,EAgGjB,SAASq7H,OAAOr7H,EAAO8vD,EAAUxlC,GAEhC5nB,KAAK1C,MAAQA,EACb0C,KAAKs9G,YAAYlwD,GACjBptD,KAAKuhE,SAAS35C,GAEK,MAAf5nB,KAAK44H,QAER54H,KAAK44H,SA0zBP,SAASzb,WAAWn+D,EAAG4L,EAAG9E,EAAOH,GAEhCkF,YAAYnsD,KAAKsB,KAAMg/C,EAAG4L,EAAG9E,EAAOH,GA9uKrCqtD,qBAAqBtzG,UAAY,IAAIiwG,cACrCqD,qBAAqBtzG,UAAUqyB,YAAcihF,qBAO7CA,qBAAqBtzG,UAAU0xG,MAAQ,KAQvC4B,qBAAqBtzG,UAAU2+G,cAAe,EAS9CrL,qBAAqBtzG,UAAUqgH,wBAAyB,EAQxD/M,qBAAqBtzG,UAAUm5H,YAAa,EAQ5C7lB,qBAAqBtzG,UAAUo5H,aAAe,EAO9C9lB,qBAAqBtzG,UAAUgzG,iBAAmB,GAOlDM,qBAAqBtzG,UAAUizG,qBAAuB,IAOtDK,qBAAqBtzG,UAAUq5H,sBAAwB,GAQvD/lB,qBAAqBtzG,UAAUozG,oBAAsB,GAQrDE,qBAAqBtzG,UAAUkzG,YAAc/oD,YAAYmR,gBAQzDg4C,qBAAqBtzG,UAAUmyH,YAAa,EAS5C7e,qBAAqBtzG,UAAU2xG,iBAAkB,EAQjD2B,qBAAqBtzG,UAAU8mH,kBAAmB,EAUlDxT,qBAAqBtzG,UAAU68G,mBAAoB,EAOnDvJ,qBAAqBtzG,UAAU0mB,MAAQ,KAOvC4sF,qBAAqBtzG,UAAUs5H,WAAa,KAO5ChmB,qBAAqBtzG,UAAUu5H,oBAAsB,KAOrDjmB,qBAAqBtzG,UAAUw5H,qBAAuB,KAQtDlmB,qBAAqBtzG,UAAU+1H,UAAYC,wBAAwBE,SAOnE5iB,qBAAqBtzG,UAAUwjE,SAAW,WAEzC,OAAOljE,KAAKomB,OAab4sF,qBAAqBtzG,UAAU+zD,QAAU,SAASptD,EAAQ+qG,GAEzDpxG,KAAKqG,OAASA,EACd,IAAI+f,EAAQpmB,KAAKosD,MAAMhmC,MAiBvB,GAhBApmB,KAAKg5H,WAAa,IAAIpwE,aACtB5oD,KAAKi5H,oBAAsB,IAAIrwE,aAC/B5oD,KAAKk5H,qBAAuB,IAAItwE,aAEnB,MAATwoD,GAAmBA,aAAiBpvG,QAEvCovG,EAAQ,CAACA,IAUG,MAATA,GAA2B,MAAV/qG,EAArB,CAUA,GAHArG,KAAKohH,QAAU,KACfphH,KAAKqhH,QAAU,KAEXh7G,GAAUrG,KAAKgyF,MAAkC,MAA1B5rE,EAAMuvE,SAAStvF,IAAmBrG,KAAK+/G,uBAClE,CACC,IAAI/pB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHh2F,KAAKohH,QAAUprB,EAAIh3C,EACnBh/C,KAAKqhH,QAAUrrB,EAAIprC,GAIrB,GAAa,MAATwmD,EACJ,CAGC,IAFA,IAAI+nB,EAAY,GAEPjwH,EAAI,EAAGA,EAAIkoG,EAAMxwG,OAAQsI,IAClC,CACC,IAAImyB,EAAqB,MAAVh1B,GAAiB+f,EAAMk2F,WAAWj2G,EAAQ+qG,EAAMloG,IAE3DmyB,GAAYjV,EAAMuvE,SAASyb,EAAMloG,KAEpCiwH,EAAUpoH,KAAKqgG,EAAMloG,IAIvBlJ,KAAKoxG,MAAQ+nB,EAGd/yG,EAAMk7C,cACN,IAUC,GARAthE,KAAKsuB,IAAIjoB,GAELrG,KAAKq+G,eAAiBr+G,KAAKosD,MAAMqzD,gBAAgBp5G,IAEpDrG,KAAKosD,MAAM4xD,kBAAkB,CAAC33G,GAASrG,KAAK84H,aAAc94H,KAAK64H,YAI5C,MAAhB74H,KAAKohH,SAAmC,MAAhBphH,KAAKqhH,QACjC,CACKrrB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAIh3C,EAAIh/C,KAAKohH,QACbprB,EAAIprC,EAAI5qD,KAAKqhH,QACbj7F,EAAMk3F,YAAYj3G,EAAQ2vF,KAI7B,QAEC5vE,EAAMo7C,eAkBRwxC,qBAAqBtzG,UAAU05H,UAAY,SAAS/yH,EAAQ8qG,GAE3D,IAAIC,EAAQ,GAEZ,GAAc,MAAV/qG,GAA8B,MAAZ8qG,EACtB,CACC,IAAI/qF,EAAQpmB,KAAKosD,MAAMhmC,MACnBizG,EAAO,KACPC,GAAW,IAEf,IAAK,IAAIpwH,KAAKioG,EACd,CACC,IAAInkD,EAAOmkD,EAASjoG,GAEpB,GAAIkd,EAAMuvE,SAAS3oC,IAAShtD,KAAKosD,MAAMuwD,cAAc3vD,GACrD,CAKC,IAJA,IAAIg/C,EAAQhsG,KAAKguD,SAAShB,GACtBusE,EAAS,EACTC,EAAQ,EAEH/Q,EAAI,EAAGA,EAAIzc,EAAMprG,OAAQ6nH,IAClC,CACC,IAAI7zG,EAAM5U,KAAKkyG,mBAAmBlG,EAAMyc,IAAI,GAExC7zG,GAAOo4C,EAEVusE,IAIAC,IAIW,GAATA,GAAcD,EAAS,GAE1BnoB,EAAMrgG,KAAKi8C,GAGZ,IAAIysE,EAAOF,EAASC,EAEhBC,EAAOH,IAEVA,EAAUG,EACVJ,EAAOrsE,IAKU,GAAhBokD,EAAMxwG,QAAuB,MAARy4H,GAExBjoB,EAAMrgG,KAAKsoH,GAIb,OAAOjoB,GAYR4B,qBAAqBtzG,UAAUsuD,SAAW,SAAShB,GAElD,IAAI0sE,EAAc15H,KAAKg5H,WAAW35H,IAAI2tD,GAEtC,GAAmB,MAAf0sE,EAEH,OAAOA,EAQR,IALA,IAAItzG,EAAQpmB,KAAKosD,MAAMhmC,MACnB2nC,EAAQ,GACR4rE,EAAc35H,KAAKosD,MAAMqzD,gBAAgBzyD,GACzCW,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GAE/BlJ,KAAKi3H,OAAOlkH,GAEfg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAASj7C,GAAO,GAAM,KAEzC4mH,GAAgB35H,KAAKosD,MAAMuwD,cAAc5pG,KAEjDg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAASj7C,GAAO,GAAM,KAInDg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAAShB,GAAM,GAAM,IAChD,IAAInqD,EAAS,GAEb,IAASqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAIhF,EAASlE,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,GAC3C9E,EAASpE,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAE1ChF,GAAUE,GACXF,GAAUE,IACRA,GAAU4oD,IAAwB,MAAfhtD,KAAKqG,QAAkBrG,KAAKs8G,WAAWt8G,KAAKqG,OAAQnC,EAAQlE,KAAKu8G,qBACnFr4G,GAAU8oD,IAAwB,MAAfhtD,KAAKqG,QAAkBrG,KAAKs8G,WAAWt8G,KAAKqG,OAAQjC,EAAQpE,KAAKu8G,uBAE1F15G,EAAOkO,KAAKg9C,EAAM7kD,IAMpB,OAFAlJ,KAAKg5H,WAAWnwE,IAAImE,EAAMnqD,GAEnBA,GAaRmwG,qBAAqBtzG,UAAUwyG,mBAAqB,SAAS73C,EAAMn2D,GAElE,IAAI01H,EAAgB55H,KAAKk5H,qBAErBh1H,IAEH01H,EAAgB55H,KAAKi5H,qBAGtB,IAAIY,EAAOD,EAAcv6H,IAAIg7D,GAE7B,GAAY,MAARw/D,EAEH,OAAOA,EAGR,IAAI/oF,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASsN,GAEjCD,EAAqB,MAATtpB,EAAiBA,EAAMohE,mBAAmBhuG,GAAUlE,KAAKosD,MAAMuR,KAAKu0C,mBAAmB73C,EAAMn2D,GAiB7G,OAfgB,MAAZk2D,IAEHA,EAAqB,MAATtpB,EAAiBA,EAAMohE,mBAAmBhuG,GAAUlE,KAAKosD,MAAMuR,KAAKu0C,mBAAmB73C,EAAMn2D,IAG1F,MAAZk2D,IAECp6D,KAAKi3H,OAAO78D,KAEfA,EAAWp6D,KAAKosD,MAAMhmC,MAAM2vE,UAAU37B,IAGvCw/D,EAAc/wE,IAAIwR,EAAMD,IAGlBA,GAWR44C,qBAAqBtzG,UAAU4uB,IAAM,SAASjoB,GAG7C,IAAIyzH,EAAoB,GACpBC,EAAe,GAEnB,GAAkB,MAAd/5H,KAAKoxG,OAA2B,MAAV/qG,EAC1B,CACC,IAAI2zH,EAAkB37H,SACtB2B,KAAKi6H,kBAAkB5zH,EAAQ2zH,GAE/Bh6H,KAAKoxG,MAAQ,GACb,IAAI8oB,GAAuB,EAG3B,IAAK,IAAI78H,KAAO28H,EAEf,GAA4B,MAAxBA,EAAgB38H,GACpB,CACC68H,GAAuB,EACvB,MAIF,OAAQA,EACR,CAQC,IAPA,IAAIC,EAAiBn6H,KAAKo5H,UAAU/yH,EAAQ2zH,GAOnC9wH,EAAI,EAAGA,EAAIixH,EAAev5H,OAAQsI,IAC3C,CACC,IAAIkxH,EAAY/7H,SAChBy7H,EAAkB/oH,KAAKqpH,GAEvBp6H,KAAKwb,SAAS2+G,EAAejxH,IAAI,EAAM,KAAM6wH,EAAcK,EACzDN,EAAmBE,GAGtB,IAAS9wH,EAAI,EAAGA,EAAIixH,EAAev5H,OAAQsI,IAE1ClJ,KAAKoxG,MAAMrgG,KAAKopH,EAAejxH,IAMhC,IAAK,IAAI7L,KAHT68H,GAAuB,EAGPF,EAEf,GAA4B,MAAxBA,EAAgB38H,GACpB,CACC68H,GAAuB,EACvB,aASH,IAAShxH,EAAI,EAAGA,EAAIlJ,KAAKoxG,MAAMxwG,OAAQsI,IACvC,CACKkxH,EAAY/7H,SAChBy7H,EAAkB/oH,KAAKqpH,GAEvBp6H,KAAKwb,SAASxb,KAAKoxG,MAAMloG,IAAI,EAAM,KAAM6wH,EAAcK,EACrDN,EAAmB,MAQvB,IAAIjnB,EAAW,EAEf,IAAS3pG,EAAI,EAAGA,EAAI4wH,EAAkBl5H,OAAQsI,IAC9C,CACKkxH,EAAYN,EAAkB5wH,GAAlC,IACIymB,EAAM,GAEV,IAAK,IAAItyB,KAAO+8H,EAEfzqG,EAAI5e,KAAKqpH,EAAU/8H,IAGpB2C,KAAKomB,MAAQ,IAAI6qF,sBAAsBjxG,KAAM2vB,EAAK3vB,KAAKoxG,MACtD/qG,EAAQrG,KAAKqxG,iBAEdrxG,KAAKq6H,WAAWh0H,GAChBrG,KAAKs6H,gBAELt6H,KAAKu6H,cAAcl0H,GACnBwsG,EAAW7yG,KAAKw6H,eAAe3nB,EAAUxsG,KAS3C2sG,qBAAqBtzG,UAAUu6H,kBAAoB,SAASjtE,EAAMnqD,GAEjE,IAAIujB,EAAQpmB,KAAKosD,MAAMhmC,MAOvB,GALIA,EAAMuvE,SAAS3oC,IAASA,GAAQhtD,KAAKqG,QAAUrG,KAAKosD,MAAMuwD,cAAc3vD,KAE3EnqD,EAAO2lD,iBAAiBnpD,IAAI2tD,IAASA,GAGlChtD,KAAKu8G,mBAAqBvvD,GAAQhtD,KAAKqG,QACtCrG,KAAKosD,MAAMuwD,cAAc3vD,GAI7B,IAFA,IAAIW,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GAI9BlJ,KAAKi3H,OAAOlkH,IAEhB/S,KAAKi6H,kBAAkBlnH,EAAOlQ,KAgBlCmwG,qBAAqBtzG,UAAUu3H,OAAS,SAASjqE,GAEhD,OAAY,MAARA,GAAiC,MAAjBA,EAAKI,UAEjBJ,EAAKI,SAAS8oC,UAoBvB8c,qBAAqBtzG,UAAU+kH,gBAAkB,SAASvgH,EAAQE,EAAQ23G,GAEzEA,EAAwB,MAAZA,GAAoBA,EAMhC,IALA,IAAIhuD,EAAQ/tD,KAAKguD,SAAS9pD,GACtBrB,EAAS,GAIJqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI0L,EAAM5U,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,GACxCsgH,EAAMxpH,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAEvC0L,GAAO1Q,GAAUslH,GAAOplH,IAAa23G,GAAYnnG,GAAOxQ,GAAUolH,GAAOtlH,IAE7ErB,EAAOkO,KAAKg9C,EAAM7kD,IAIpB,OAAOrG,GAmBRmwG,qBAAqBtzG,UAAU8b,SAAW,SAASsgG,EAAQC,EAAU1hD,EAAMogE,EAAaC,EAC7EZ,EAAmBE,GAE7B,GAAc,MAAVle,GAAiC,MAAf2e,EACtB,CAIC,IAAIE,EAAWnyE,iBAAiBnpD,IAAIy8G,GAEpC,GAA8B,MAAzB2e,EAAYE,IACQ,MAAnBX,GAA8D,MAA7BA,EAAgBW,IAyEtD,GAA6B,MAAzBD,EAAYC,GAKf,IAASzxH,EAAI,EAAGA,EAAI4wH,EAAkBl5H,OAAQsI,IAC9C,CACC,IAAIyf,EAAOmxG,EAAkB5wH,GAE7B,GAAsB,MAAlByf,EAAKgyG,GACT,CACC,IAAK,IAAIt9H,KAAOsrB,EAEf+xG,EAAYr9H,GAAOsrB,EAAKtrB,GAKzB,OADAy8H,EAAkBrwH,OAAOP,EAAG,GACrBwxH,QA1FX,CAC8B,MAAzBA,EAAYC,KAEfD,EAAYC,GAAY7e,GAEI,MAAzB2e,EAAYE,KAEfF,EAAYE,GAAY7e,GAGD,OAApBke,UAEIA,EAAgBW,GAMxB,IAHA,IAAI5sE,EAAQ/tD,KAAKguD,SAAS8tD,GACtB8e,EAAe,GAEV1xH,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAEjC0xH,EAAa1xH,GAAMlJ,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAAS4yG,EAG/D,IAAK,IAAI5yG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAEjC,IAAK6yG,GAAY6e,EAAa1xH,GAC9B,CAUC,IATA,IAAIpH,EAAO9B,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAK0xH,EAAa1xH,IAOvD2xH,EAAW,EAENrtG,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAEjC,GAAIA,GAAKtkB,EAAT,CAMC,IAAI4xH,EAAYF,EAAaptG,GACzButG,EAAY/6H,KAAKkyG,mBAAmBnkD,EAAMvgC,IAAKstG,GAE/CC,GAAaj5H,IAEZg5H,EAEHD,IAIAA,KAMAA,GAAY,IAEfH,EAAc16H,KAAKwb,SAAS1Z,EAAMi6G,EAAUhuD,EAAM7kD,GAAIuxH,EACrDC,EAAaZ,EACbE,MAgCN,OAAOU,GAQR1nB,qBAAqBtzG,UAAU26H,WAAa,SAASh0H,GAEpD,IAAIg0H,EAAa,IAAI7nB,sBAAsBxyG,MAC3Cq6H,EAAW5mE,QAAQptD,IAQpB2sG,qBAAqBtzG,UAAU46H,cAAgB,WAE9Ct6H,KAAKomB,MAAMklG,cACXtrH,KAAKomB,MAAM6lG,YAQZjZ,qBAAqBtzG,UAAU66H,cAAgB,SAASl0H,GAEvD,IAAIk0H,EAAgB,IAAIjoB,gCAAgCtyG,MACxDu6H,EAAc9mE,QAAQptD,IAQvB2sG,qBAAqBtzG,UAAU86H,eAAiB,SAAS3nB,EAAUxsG,GAElE,IAAIm0H,EAAiB,IAAI/nB,uBAAuBzyG,KAAMA,KAAK0yG,iBACzD1yG,KAAK2yG,qBAAsB3yG,KAAK4yG,YAAaC,EAC7C7yG,KAAK8yG,qBAIP,OAHA0nB,EAAe3I,WAAa7xH,KAAK6xH,WACjC2I,EAAe/mE,QAAQptD,GAEhBm0H,EAAenJ,OAASrxH,KAAK+4H,uBAGrCp4E,WAAWqyD,qBAAuD,qBAAzBA,qBAAuCA,0BAAuBzyG,EAiCvGy3H,iBAAiBt4H,UAAY,IAAIiwG,cACjCqoB,iBAAiBt4H,UAAUqyB,YAAcimG,iBAOzCA,iBAAiBt4H,UAAU0xG,MAAQ,KAOnC4mB,iBAAiBt4H,UAAUwtH,UAAY,KAOvC8K,iBAAiBt4H,UAAUs7H,iBAAmB,GAQ9ChD,iBAAiBt4H,UAAU2+G,cAAe,EAS1C2Z,iBAAiBt4H,UAAUqgH,wBAAyB,EAQpDiY,iBAAiBt4H,UAAUm5H,YAAa,EAQxCb,iBAAiBt4H,UAAUo5H,aAAe,GAO1Cd,iBAAiBt4H,UAAUgzG,iBAAmB,GAO9CslB,iBAAiBt4H,UAAUizG,qBAAuB,IAOlDqlB,iBAAiBt4H,UAAUq5H,sBAAwB,GAQnDf,iBAAiBt4H,UAAUozG,oBAAsB,GAQjDklB,iBAAiBt4H,UAAUkzG,YAAc/oD,YAAYmR,gBAQrDg9D,iBAAiBt4H,UAAUmyH,YAAa,EAQxCmG,iBAAiBt4H,UAAU2xG,iBAAkB,EAQ7C2mB,iBAAiBt4H,UAAU8mH,kBAAmB,EAU9CwR,iBAAiBt4H,UAAU68G,mBAAoB,EAO/Cyb,iBAAiBt4H,UAAU0mB,MAAQ,KAOnC4xG,iBAAiBt4H,UAAUs5H,WAAa,KAOxChmB,qBAAqBtzG,UAAUu5H,oBAAsB,KAOrDjmB,qBAAqBtzG,UAAUw5H,qBAAuB,KAQtDlmB,qBAAqBtzG,UAAU+1H,UAAYC,wBAAwBE,SAOnEoC,iBAAiBt4H,UAAUwjE,SAAW,WAErC,OAAOljE,KAAKomB,OAab4xG,iBAAiBt4H,UAAU+zD,QAAU,SAASptD,EAAQ6mH,GAErDltH,KAAKqG,OAASA,EACd,IAAI+f,EAAQpmB,KAAKosD,MAAMhmC,MAYvB,GAXApmB,KAAKg5H,WAAa,IAAIpwE,aACtB5oD,KAAKi5H,oBAAsB,IAAIrwE,aAC/B5oD,KAAKk5H,qBAAuB,IAAItwE,eASf,MAAbskE,GAAqBA,EAAUtsH,OAAS,GAA5C,CAeA,GATc,MAAVyF,IAEHA,EAAS+f,EAAM2vE,UAAUm3B,EAAU,KAIpCltH,KAAKohH,QAAU,KACfphH,KAAKqhH,QAAU,KAEXh7G,GAAUrG,KAAKgyF,MAAkC,MAA1B5rE,EAAMuvE,SAAStvF,IAAmBrG,KAAK+/G,uBAClE,CACC,IAAI/pB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHh2F,KAAKohH,QAAUprB,EAAIh3C,EACnBh/C,KAAKqhH,QAAUrrB,EAAIprC,GAIrB5qD,KAAKktH,UAAYA,EAIjB,IAHA,IAAI+N,EAAgB,GAGX/xH,EAAI,EAAGA,EAAIgkH,EAAUtsH,OAAQsI,IACtC,CACC,IAAI0I,EAAW5R,KAAKosD,MAAM8uE,cAAchO,EAAUhkH,IAElD,GAAgB,MAAZ0I,GAAuC,GAAnBA,EAAShR,OACjC,CACC,IAAIk7G,EAAS97G,KAAKosD,MAAM+uE,aAAajO,EAAUhkH,GAAI,KAAM,KAAM,EAAG,EAAGlJ,KAAKg7H,iBAAkB,GAC5FC,EAAclqH,KAAK+qG,IAIrB11F,EAAMk7C,cACN,IAUC,GARAthE,KAAKsuB,IAAIjoB,GAELrG,KAAKq+G,eAAiBr+G,KAAKosD,MAAMqzD,gBAAgBp5G,IAEpDrG,KAAKosD,MAAM4xD,kBAAkB,CAAC33G,GAASrG,KAAK84H,aAAc94H,KAAK64H,YAI5C,MAAhB74H,KAAKohH,SAAmC,MAAhBphH,KAAKqhH,QACjC,CACKrrB,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAE1B,MAAP2vF,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAIh3C,EAAIh/C,KAAKohH,QACbprB,EAAIprC,EAAI5qD,KAAKqhH,QACbj7F,EAAMk3F,YAAYj3G,EAAQ2vF,IAI5Bh2F,KAAKosD,MAAMw3B,YAAYq3C,GAExB,QAEC70G,EAAMo7C,eAWRw2D,iBAAiBt4H,UAAUs+G,kBAAoB,WAG9C,IAAI59C,EAAQ,GACRh6C,EAAQpmB,KAAKomB,MAEjB,IAAK,IAAI/oB,KAAO+oB,EAAMorF,WAIrB,IAFA,IAAIn3C,EAAOj0C,EAAMorF,WAAWn0G,GAEnB6L,EAAI,EAAGA,EAAImxD,EAAKtM,MAAMntD,OAAQsI,IAEtCk3D,EAAMrvD,KAAKspD,EAAKtM,MAAM7kD,IAIxB,IAAIkyH,EAAep7H,KAAKosD,MAAMw7D,2BAA2BxnD,GAAO,GAC5DokD,EAAc,GAElB,IAASt7G,EAAI,EAAGA,EAAIlJ,KAAKktH,UAAUtsH,OAAQsI,IAC3C,CACC,IAAImyH,EAAOr7H,KAAKktH,UAAUhkH,GACtB8sF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBolC,GAErC,GAAW,MAAPrlC,EACJ,CACC,IAAIpkF,EAAW5R,KAAKosD,MAAM8uE,cAAcG,GAEpC56E,EAAQzgD,KAAKosD,MAAMizD,WAAWgc,GAChCr7H,KAAKosD,MAAM0zD,aAAaub,GAAQ,IAAIxwE,YAElCiS,EAAS98D,KAAKosD,MAAMw7D,2BAA2Bh2G,GACnD4yG,EAAYt7G,GAAK4zD,EACjB,IAAIw+D,EAAYx+D,EAAOlS,EAAIorC,EAAIprC,EAAInK,EAAKkF,OAAS3lD,KAAK84H,aAClDyC,EAAez+D,EAAOlS,EAAIorC,EAAIprC,EAAIkS,EAAOnX,OAE7C,GAAoB,MAAhBy1E,EAEHA,EAAe,IAAIvwE,YAAY,EAAGywE,EAAW,EAAGC,EAAeD,OAGhE,CACCF,EAAaxwE,EAAI1qD,KAAKyD,IAAIy3H,EAAaxwE,EAAG0wE,GAC1C,IAAIhwE,EAAOprD,KAAKwD,IAAI03H,EAAaxwE,EAAIwwE,EAAaz1E,OAAQ41E,GAC1DH,EAAaz1E,OAAS2F,EAAO8vE,EAAaxwE,IAM7C,IAAS1hD,EAAI,EAAGA,EAAIlJ,KAAKktH,UAAUtsH,OAAQsI,IAC3C,CACKmyH,EAAOr7H,KAAKktH,UAAUhkH,GACtB8sF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBolC,GAErC,GAAW,MAAPrlC,EACJ,CACKpkF,EAAW5R,KAAKosD,MAAM8uE,cAAcG,GAEpC56E,EAAQzgD,KAAKosD,MAAMizD,WAAWgc,GAChCr7H,KAAKosD,MAAM0zD,aAAaub,GAAQ,IAAIxwE,YAHtC,IAKI2wE,EAASxlC,EAAIxxE,QAEbi3G,EAAwB,GAALvyH,EAAUlJ,KAAK84H,aAAe94H,KAAK2yG,qBAAqB,EAC3EnsD,EAAI/F,EAAKqF,MAAQ21E,EACjBz8E,EAAIwlE,EAAYt7G,GAAG81C,EAAIwH,EACvBoE,EAAIwwE,EAAaxwE,EAAI5qD,KAAK84H,aAE9B0C,EAAOx8E,GAAKA,EACZw8E,EAAO5wE,EAAIA,EAEX4wE,EAAO11E,MAAQ0+D,EAAYt7G,GAAG48C,MAAQU,EAAIxmD,KAAK2yG,qBAAqB,EACpE6oB,EAAO71E,OAASy1E,EAAaz1E,OAASlF,EAAKkF,OAAS,EAAI3lD,KAAK84H,aAE7D94H,KAAKosD,MAAMhmC,MAAMk3F,YAAY+d,EAAMG,GACnCx7H,KAAKosD,MAAMi8D,UAAUz2G,GAAWotC,EAAGg3C,EAAIprC,EAAIA,MAmB9CotE,iBAAiBt4H,UAAU05H,UAAY,SAAS/yH,EAAQ8qG,GAEvD,IAAIC,EAAQ,GAEZ,GAAc,MAAV/qG,GAA8B,MAAZ8qG,EACtB,CACC,IAAI/qF,EAAQpmB,KAAKosD,MAAMhmC,MACnBizG,EAAO,KACPC,GAAW,IAEf,IAAK,IAAIpwH,KAAKioG,EACd,CACC,IAAInkD,EAAOmkD,EAASjoG,GAEpB,GAAY,MAAR8jD,GAAgB5mC,EAAMuvE,SAAS3oC,IAAShtD,KAAKosD,MAAMuwD,cAAc3vD,IAAS5mC,EAAMk2F,WAAWj2G,EAAQ2mD,GACvG,CAKC,IAJA,IAAIg/C,EAAQhsG,KAAKguD,SAAShB,GACtBusE,EAAS,EACTC,EAAQ,EAEH/Q,EAAI,EAAGA,EAAIzc,EAAMprG,OAAQ6nH,IAClC,CACC,IAAI7zG,EAAM5U,KAAKkyG,mBAAmBlG,EAAMyc,IAAI,GAE5C,GAAI7zG,GAAOo4C,EACX,CAEC,IAAI6yD,EAAQ7/G,KAAKkyG,mBAAmBlG,EAAMyc,IAAI,GAE1CriG,EAAMk2F,WAAWj2G,EAAQw5G,IAE5B0Z,SAGOnzG,EAAMk2F,WAAWj2G,EAAQuO,IAEjC4kH,IAIW,GAATA,GAAcD,EAAS,GAE1BnoB,EAAMrgG,KAAKi8C,GAGZ,IAAIysE,EAAOF,EAASC,EAEhBC,EAAOH,IAEVA,EAAUG,EACVJ,EAAOrsE,IAKU,GAAhBokD,EAAMxwG,QAAuB,MAARy4H,GAExBjoB,EAAMrgG,KAAKsoH,GAIb,OAAOjoB,GAYR4mB,iBAAiBt4H,UAAUsuD,SAAW,SAAShB,GAE9C,IAAI0sE,EAAc15H,KAAKg5H,WAAW35H,IAAI2tD,GAEtC,GAAmB,MAAf0sE,EAEH,OAAOA,EAQR,IALA,IAAItzG,EAAQpmB,KAAKosD,MAAMhmC,MACnB2nC,EAAQ,GACR4rE,EAAc35H,KAAKosD,MAAMqzD,gBAAgBzyD,GACzCW,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GAE/BlJ,KAAKi3H,OAAOlkH,GAEfg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAASj7C,GAAO,GAAM,KAEzC4mH,GAAgB35H,KAAKosD,MAAMuwD,cAAc5pG,KAEjDg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAASj7C,GAAO,GAAM,KAInDg7C,EAAQA,EAAM/uD,OAAOonB,EAAM4nC,SAAShB,GAAM,GAAM,IAChD,IAAInqD,EAAS,GAEb,IAASqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAIhF,EAASlE,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,GAC3C9E,EAASpE,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAE1ChF,GAAUE,GAAaF,GAAUE,IAAaA,GAAU4oD,IAAwB,MAAfhtD,KAAKqG,QAAkBrG,KAAKosD,MAAMsvE,gBAAgBx3H,EAAQlE,KAAKqG,OAAQrG,KAAKu8G,qBAChJr4G,GAAU8oD,IAAwB,MAAfhtD,KAAKqG,QACvBrG,KAAKosD,MAAMsvE,gBAAgBt3H,EAAQpE,KAAKqG,OAAQrG,KAAKu8G,uBAEvD15G,EAAOkO,KAAKg9C,EAAM7kD,IAMpB,OAFAlJ,KAAKg5H,WAAWnwE,IAAImE,EAAMnqD,GAEnBA,GAaRm1H,iBAAiBt4H,UAAUwyG,mBAAqB,SAAS73C,EAAMn2D,GAE9D,IAAI01H,EAAgB55H,KAAKk5H,qBAErBh1H,IAEH01H,EAAgB55H,KAAKi5H,qBAGtB,IAAIY,EAAOD,EAAcv6H,IAAIg7D,GAE7B,GAAY,MAARw/D,EAEH,OAAOA,EAGR,IAAI/oF,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASsN,GAEjCD,EAAqB,MAATtpB,EAAiBA,EAAMohE,mBAAmBhuG,GAAUlE,KAAKosD,MAAMuR,KAAKu0C,mBAAmB73C,EAAMn2D,GAiB7G,OAfgB,MAAZk2D,IAEHA,EAAqB,MAATtpB,EAAiBA,EAAMohE,mBAAmBhuG,GAAUlE,KAAKosD,MAAMuR,KAAKu0C,mBAAmB73C,EAAMn2D,IAG1F,MAAZk2D,IAECp6D,KAAKi3H,OAAO78D,KAEfA,EAAWp6D,KAAKosD,MAAMhmC,MAAM2vE,UAAU37B,IAGvCw/D,EAAc/wE,IAAIwR,EAAMD,IAGlBA,GAWR49D,iBAAiBt4H,UAAU4uB,IAAM,SAASjoB,GAGzC,IAAIyzH,EAAoB,GACpBC,EAAe17H,SAEnB,GAAsB,MAAlB2B,KAAKktH,WAAqBltH,KAAKktH,UAAUtsH,OAAS,GAAe,MAAVyF,EAC3D,CAGC,IAFA,IAAI2zH,EAAkB37H,SAEb6K,EAAI,EAAGA,EAAIlJ,KAAKktH,UAAUtsH,OAAQsI,IAE1ClJ,KAAKi6H,kBAAkBj6H,KAAKktH,UAAUhkH,GAAI8wH,GAG3Ch6H,KAAKoxG,MAAQ,GACb,IAAI8oB,GAAuB,EAG3B,IAAK,IAAI78H,KAAO28H,EAEf,GAA4B,MAAxBA,EAAgB38H,GACpB,CACC68H,GAAuB,EACvB,MAKF,IAAIyB,EAAc,EAElB,OAAQzB,GAAwByB,EAAc37H,KAAKktH,UAAUtsH,OAC7D,CACC,IAAIu5H,EAAiBn6H,KAAKo5H,UAAUp5H,KAAKktH,UAAUyO,GAAc3B,GAEjE,GAA6B,GAAzBG,EAAev5H,OAAnB,CASA,IAASsI,EAAI,EAAGA,EAAIixH,EAAev5H,OAAQsI,IAC3C,CACC,IAAIkxH,EAAY/7H,SAChBy7H,EAAkB/oH,KAAKqpH,GAEvBp6H,KAAKwb,SAAS2+G,EAAejxH,IAAI,EAAM,KAAM6wH,EAAcK,EACzDN,EAAmBE,EAAiB2B,GAGvC,IAASzyH,EAAI,EAAGA,EAAIixH,EAAev5H,OAAQsI,IAE1ClJ,KAAKoxG,MAAMrgG,KAAKopH,EAAejxH,IAMhC,IAAK,IAAI7L,KAHT68H,GAAuB,EAGPF,EAEf,GAA4B,MAAxBA,EAAgB38H,GACpB,CACC68H,GAAuB,EACvB,YA7BDyB,UAsCF,IAASzyH,EAAI,EAAGA,EAAIlJ,KAAKoxG,MAAMxwG,OAAQsI,IACvC,CACKkxH,EAAY/7H,SAChBy7H,EAAkB/oH,KAAKqpH,GAEvBp6H,KAAKwb,SAASxb,KAAKoxG,MAAMloG,IAAI,EAAM,KAAM6wH,EAAcK,EACrDN,EAAmB,MAIvB,IAAInqG,EAAM,GAEV,IAAK,IAAItyB,KAAO08H,EAEfpqG,EAAI5e,KAAKgpH,EAAa18H,IAGvB2C,KAAKomB,MAAQ,IAAIgsF,gBAAgBpyG,KAAM2vB,EAAK3vB,KAAKoxG,MAChD/qG,EAAQrG,KAAKqxG,iBAEdrxG,KAAKq6H,WAAWh0H,GAChBrG,KAAKs6H,gBAELt6H,KAAKu6H,cAAcl0H,GACnBrG,KAAKw6H,eAAe,EAAGn0H,IAQxB2xH,iBAAiBt4H,UAAUu6H,kBAAoB,SAASjtE,EAAMnqD,GAE7D,IAAIujB,EAAQpmB,KAAKosD,MAAMhmC,MAOvB,GALIA,EAAMuvE,SAAS3oC,IAASA,GAAQhtD,KAAKqG,QAAU+f,EAAM2vE,UAAU/oC,IAAShtD,KAAKqG,QAAUrG,KAAKosD,MAAMuwD,cAAc3vD,KAEnHnqD,EAAO2lD,iBAAiBnpD,IAAI2tD,IAASA,GAGlChtD,KAAKu8G,mBAAqBvvD,GAAQhtD,KAAKqG,QACtCrG,KAAKosD,MAAMuwD,cAAc3vD,GAI7B,IAFA,IAAIW,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GAI9BlJ,KAAKi3H,OAAOlkH,IAEhB/S,KAAKi6H,kBAAkBlnH,EAAOlQ,KAgBlCm1H,iBAAiBt4H,UAAUu3H,OAAS,SAASjqE,GAE5C,QAAIA,EAAKI,SAAS8oC,UAoBnB8hC,iBAAiBt4H,UAAU+kH,gBAAkB,SAASvgH,EAAQE,EAAQ23G,GAErEA,EAAwB,MAAZA,GAAoBA,EAMhC,IALA,IAAIhuD,EAAQ/tD,KAAKguD,SAAS9pD,GACtBrB,EAAS,GAIJqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI0L,EAAM5U,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,GACxCsgH,EAAMxpH,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAEvC0L,GAAO1Q,GAAUslH,GAAOplH,IAAa23G,GAAYnnG,GAAOxQ,GAAUolH,GAAOtlH,IAE7ErB,EAAOkO,KAAKg9C,EAAM7kD,IAIpB,OAAOrG,GAoBRm1H,iBAAiBt4H,UAAU8b,SAAW,SAASsgG,EAAQC,EAAU1hD,EAAMogE,EAAaC,EACzEZ,EAAmBE,EAAiB7M,GAE9C,GAAc,MAAVrR,GAAiC,MAAf2e,EACtB,CAIC,IAAIE,EAAWnyE,iBAAiBnpD,IAAIy8G,GAEpC,GAA8B,MAAzB2e,EAAYE,IACQ,MAAnBX,GAA8D,MAA7BA,EAAgBW,IA0DtD,GAA6B,MAAzBD,EAAYC,GAIf,IAASzxH,EAAI,EAAGA,EAAI4wH,EAAkBl5H,OAAQsI,IAC9C,CACC,IAAIyf,EAAOmxG,EAAkB5wH,GAE7B,GAAsB,MAAlByf,EAAKgyG,GACT,CACC,IAAK,IAAIt9H,KAAOsrB,EAEf+xG,EAAYr9H,GAAOsrB,EAAKtrB,GAKzB,OADAy8H,EAAkBrwH,OAAOP,EAAG,GACrBwxH,QA1EX,CAC8B,MAAzBA,EAAYC,KAEfD,EAAYC,GAAY7e,GAEI,MAAzB2e,EAAYE,KAEfF,EAAYE,GAAY7e,GAGD,OAApBke,UAEIA,EAAgBW,GAMxB,IAHA,IAAI5sE,EAAQ/tD,KAAKguD,SAAS8tD,GACtB11F,EAAQpmB,KAAKosD,MAAMhmC,MAEdld,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI0yH,EAAc57H,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,GAChDyuE,EAAWikD,GAAe9f,EAE1BnkC,IAEHikD,EAAc57H,KAAKkyG,mBAAmBnkD,EAAM7kD,IAAI,IAGjD,IAAI2yH,EAAa,EAEjB,IAAKA,EAAa,EAAGA,EAAa77H,KAAKktH,UAAUtsH,OAAQi7H,IAExD,GAAIz1G,EAAMk2F,WAAWt8G,KAAKktH,UAAU2O,GAAaD,GAEhD,MAIEC,GAAc77H,KAAKktH,UAAUtsH,SAQ5Bi7H,EAAa1O,KACbpR,GAAYpkC,IAAakkD,GAAc1O,KAE3CuN,EAAc16H,KAAKwb,SAASogH,EAAa7f,EAAUhuD,EAAM7kD,GAAIuxH,EAC3DC,EAAaZ,EACbE,EAAiB6B,MA8BvB,OAAOnB,GAQR1C,iBAAiBt4H,UAAU26H,WAAa,SAASh0H,GAEhD,IAAIg0H,EAAa,IAAItnB,mBAAmB/yG,MACxCq6H,EAAW5mE,QAAQptD,IAQpB2xH,iBAAiBt4H,UAAU46H,cAAgB,WAE1Ct6H,KAAKomB,MAAMklG,cACXtrH,KAAKomB,MAAM6lG,YAQZ+L,iBAAiBt4H,UAAU66H,cAAgB,SAASl0H,GAEnD,IAAIk0H,EAAgB,IAAIjoB,gCAAgCtyG,MACxDu6H,EAAc9mE,QAAQptD,IAQvB2xH,iBAAiBt4H,UAAU86H,eAAiB,SAAS3nB,EAAUxsG,GAE9D,IAAIm0H,EAAiB,IAAI/nB,uBAAuBzyG,KAAMA,KAAK0yG,iBACzD1yG,KAAK2yG,qBAAsB3yG,KAAK4yG,YAAaC,EAC7C7yG,KAAK8yG,qBAIP,OAHA0nB,EAAe3I,WAAa7xH,KAAK6xH,WACjC2I,EAAe/mE,QAAQptD,GAEhBm0H,EAAenJ,OAASrxH,KAAK+4H,uBAGrCp4E,WAAWq3E,iBAA+C,qBAArBA,iBAAmCA,sBAAmBz3H,EAsN3F03H,aAAav4H,UAAY,IAAIo3E,cAC7BmhD,aAAav4H,UAAUqyB,YAAckmG,aASrCA,aAAav4H,UAAUsyF,KAAO,KAO9BimC,aAAav4H,UAAU0gE,MAAQ,KAQ/B63D,aAAav4H,UAAUo8H,oBAAqB,EAQ5C7D,aAAav4H,UAAUq8H,0BAA2B,EAQlD9D,aAAav4H,UAAUs8H,WAAY,EAOnC/D,aAAav4H,UAAUovD,OAAS,GAOhCmpE,aAAav4H,UAAUwyC,QAAU,GAOjC+lF,aAAav4H,UAAUu8H,OAAS,EAShChE,aAAav4H,UAAUw4H,YAAc,KAUrCD,aAAav4H,UAAUw8H,YAAc,EAOrCjE,aAAav4H,UAAUy8H,cAAe,EAOtClE,aAAav4H,UAAU8Q,MAAQ,WAE9BxQ,KAAKo4H,QAAQp4H,KAAKo8H,eAQnBnE,aAAav4H,UAAU28H,YAAc,WAEpC,OAAOr8H,KAAKg8H,WAQb/D,aAAav4H,UAAU48H,aAAe,SAASh/H,GAE9C0C,KAAKg8H,UAAY1+H,GAQlB26H,aAAav4H,UAAU08H,WAAa,WAEnC,IAAIpvE,EAAO,IAAI2rE,OAGf,OAFA3rE,EAAK3nC,OAAO,IAAIszG,QAET3rE,GAaRirE,aAAav4H,UAAUw4E,QAAU,SAASvnE,GAEzC,OAAsB,MAAd3Q,KAAKogE,MAAiBpgE,KAAKogE,MAAMzvD,GAAM,MAShDsnH,aAAav4H,UAAU68H,YAAc,SAASn8D,EAAO7rC,GAEpD,IAAI1xB,EAAS,KAEb,GAAa,MAATu9D,EACJ,CACCv9D,EAAS,GAET,IAAK,IAAIqG,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BqrB,EAAO6rC,EAAMl3D,KAEhBrG,EAAOkO,KAAKqvD,EAAMl3D,IAKrB,OAAOrG,GAYRo1H,aAAav4H,UAAU88H,eAAiB,SAASn2H,GAEhD,OAAOrG,KAAKi6H,kBAAkB,KAAM5zH,IA2BrC4xH,aAAav4H,UAAUu6H,kBAAoB,SAAS1lG,EAAQluB,GAG3D,IAAIxD,EAAS,GAGbwD,EAASA,GAAUrG,KAAKmjE,WAIV,MAAV5uC,GAAkBA,EAAOluB,KAE5BxD,EAAOkO,KAAK1K,GAMb,IAFA,IAAIsnD,EAAa3tD,KAAK4tD,cAAcvnD,GAE3B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAK6tD,WAAWxnD,EAAQ6C,GACpCrG,EAASA,EAAO7D,OAAOgB,KAAKi6H,kBAAkB1lG,EAAQxhB,IAGvD,OAAOlQ,GAYRo1H,aAAav4H,UAAUyjE,QAAU,SAASnW,GAEzC,IAAIglC,EAAOhlC,GAAQhtD,KAAKgyF,KAExB,GAAY,MAARhlC,EAEH,MAAe,MAARA,EAENglC,EAAOhlC,EACPA,EAAOhtD,KAAK+1F,UAAU/oC,GAIxB,OAAOglC,GAuBRimC,aAAav4H,UAAU04H,QAAU,SAASpmC,GAIzC,OAFAhyF,KAAKyzD,QAAQ,IAAI4kE,aAAar4H,KAAMgyF,IAE7BA,GAaRimC,aAAav4H,UAAU+8H,YAAc,SAASzqC,GAE7C,IAAI0qC,EAAU18H,KAAKgyF,KAQnB,OAPAhyF,KAAKgyF,KAAOA,EAGZhyF,KAAKi8H,OAAS,EACdj8H,KAAKogE,MAAQ,KACbpgE,KAAK28H,UAAU3qC,GAER0qC,GAaRzE,aAAav4H,UAAU6wB,OAAS,SAASy8B,GAExC,OAAe,MAARA,GAAgBhtD,KAAKgyF,MAAQhlC,GAYrCirE,aAAav4H,UAAUm/G,QAAU,SAAS7xD,GAEzC,OAAOhtD,KAAKuwB,OAAOvwB,KAAK+1F,UAAU/oC,KAcnCirE,aAAav4H,UAAU48G,WAAa,SAASj2G,EAAQ0M,GAEpD,MAAgB,MAATA,GAAiBA,GAAS1M,EAEhC0M,EAAQ/S,KAAK+1F,UAAUhjF,GAGxB,OAAOA,GAAS1M,GAYjB4xH,aAAav4H,UAAUq9D,SAAW,SAAS/P,GAE1C,OAAOhtD,KAAKs8G,WAAWt8G,KAAKgyF,KAAMhlC,IAYnCirE,aAAav4H,UAAUq2F,UAAY,SAAS/oC,GAE3C,OAAgB,MAARA,EAAgBA,EAAK+oC,YAAc,MAiB5CkiC,aAAav4H,UAAU8G,IAAM,SAASH,EAAQ0M,EAAO3P,GAEpD,GAAI2P,GAAS1M,GAAoB,MAAVA,GAA2B,MAAT0M,EACzC,CAEc,MAAT3P,IAEHA,EAAQpD,KAAK4tD,cAAcvnD,IAG5B,IAAIu2H,EAAgBv2H,GAAUrG,KAAK+1F,UAAUhjF,GAC7C/S,KAAKyzD,QAAQ,IAAI7G,cAAc5sD,KAAMqG,EAAQ0M,EAAO3P,IAIhDpD,KAAK87H,oBAAsBc,GAE9B58H,KAAK68H,kBAAkB9pH,GAIzB,OAAOA,GAyBRklH,aAAav4H,UAAUi9H,UAAY,SAAS3vE,GAE3C,GAAY,MAARA,EACJ,CAOC,GALoB,MAAhBA,EAAK8vE,SAAmB98H,KAAKg8H,WAEhChvE,EAAK+vE,MAAM/8H,KAAKg9H,SAAShwE,IAGN,MAAhBA,EAAK8vE,QACT,CACC,IAAIG,EAAYj9H,KAAKk4E,QAAQlrB,EAAK8vE,SAElC,GAAIG,GAAajwE,EACjB,CAGC,MAAoB,MAAbiwE,EAENjwE,EAAK+vE,MAAM/8H,KAAKg9H,SAAShwE,IACzBiwE,EAAYj9H,KAAKk4E,QAAQlrB,EAAK8vE,SAIb,MAAd98H,KAAKogE,QAERpgE,KAAKogE,MAAQ,IAAI/hE,QAGlB2B,KAAKogE,MAAMpT,EAAK8vE,SAAW9vE,GAKzB9G,QAAQ8Y,UAAUhS,EAAK8vE,WAE1B98H,KAAKi8H,OAAS/7H,KAAKwD,IAAI1D,KAAKi8H,OAAQjvE,EAAK8vE,UAM1C,IAFA,IAAInvE,EAAa3tD,KAAK4tD,cAAcZ,GAE3B9jD,EAAE,EAAGA,EAAEykD,EAAYzkD,IAE3BlJ,KAAK28H,UAAU38H,KAAK6tD,WAAWb,EAAM9jD,MAiBxC+uH,aAAav4H,UAAUs9H,SAAW,SAAShwE,GAE1C,IAAIr8C,EAAK3Q,KAAKi8H,OAGd,OAFAj8H,KAAKi8H,SAEEj8H,KAAK8uD,OAASn+C,EAAK3Q,KAAKkyC,SAShC+lF,aAAav4H,UAAUm9H,kBAAoB,SAAS7vE,EAAMglC,GAGzDA,EAAOA,GAAQhyF,KAAKmjE,QAAQnW,GAK5B,IAFA,IAAIW,EAAa3tD,KAAK4tD,cAAcZ,GAE3B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAK6tD,WAAWb,EAAM9jD,GAClClJ,KAAK68H,kBAAkB9pH,EAAOi/E,GAI/B,IAAIkqB,EAAYl8G,KAAKm8G,aAAanvD,GAC9Be,EAAQ,GAEZ,IAAS7kD,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAE9B6kD,EAAMh9C,KAAK/Q,KAAKo8G,UAAUpvD,EAAM9jD,IAGjC,IAASA,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAImxD,EAAOtM,EAAM7kD,GAKblJ,KAAKs8G,WAAWtqB,EAAM33B,IAEzBr6D,KAAKk9H,iBAAiB7iE,EAAM23B,KAgB/BimC,aAAav4H,UAAUw9H,iBAAmB,SAAS7iE,EAAM23B,GAExD,IAAI9tF,EAASlE,KAAKq8G,YAAYhiD,GAAM,GAChCj2D,EAASpE,KAAKq8G,YAAYhiD,GAAM,GAChCrN,EAAO,KAGX,MAAiB,MAAV9oD,IAAmBlE,KAAKmP,OAAOjL,IAClB,MAAnBA,EAAOkpD,UAAoBlpD,EAAOkpD,SAAS8oC,SAE3ChyF,EAASlE,KAAK+1F,UAAU7xF,GAIzB,MAAiB,MAAVE,GAAkBpE,KAAK+7H,2BAC5B/7H,KAAKmP,OAAO/K,IAA8B,MAAnBA,EAAOgpD,UAC/BhpD,EAAOgpD,SAAS8oC,SAEhB9xF,EAASpE,KAAK+1F,UAAU3xF,GAGzB,GAAIpE,KAAKs8G,WAAWtqB,EAAM9tF,IAAWlE,KAAKs8G,WAAWtqB,EAAM5tF,KAIzD4oD,EAFG9oD,GAAUE,EAENpE,KAAK+1F,UAAU7xF,GAIflE,KAAKm9H,yBAAyBj5H,EAAQE,GAGlC,MAAR4oD,IAAiBhtD,KAAK+1F,UAAU/oC,IAAShtD,KAAKgyF,MACjDhyF,KAAKs8G,WAAWtvD,EAAMqN,KAAUr6D,KAAK+1F,UAAU17B,IAASrN,GACzD,CACC,IAAIgpC,EAAMh2F,KAAKi9G,YAAY5iD,GAE3B,GAAW,MAAP27B,EACJ,CACC,IAAIonC,EAAUp9H,KAAKq9H,UAAUr9H,KAAK+1F,UAAU17B,IACxCijE,EAAUt9H,KAAKq9H,UAAUrwE,GAEzBne,EAAKyuF,EAAQt+E,EAAIo+E,EAAQp+E,EACzBjQ,EAAKuuF,EAAQ1yE,EAAIwyE,EAAQxyE,EAE7BorC,EAAMA,EAAIxxE,QACVwxE,EAAInyB,WAAWh1B,GAAKE,GACpB/uC,KAAKs9G,YAAYjjD,EAAM27B,GAGxBh2F,KAAKwG,IAAIwmD,EAAMqN,EAAMr6D,KAAK4tD,cAAcZ,MAW3CirE,aAAav4H,UAAU29H,UAAY,SAASrwE,GAE3C,IAAInqD,EAAS,KAEb,GAAY,MAARmqD,GAIH,GAFAnqD,EAAS7C,KAAKq9H,UAAUr9H,KAAK+1F,UAAU/oC,KAElChtD,KAAKmP,OAAO69C,GACjB,CACC,IAAIgpC,EAAMh2F,KAAKi9G,YAAYjwD,GAEhB,MAAPgpC,IAEHnzF,EAAOm8C,GAAKg3C,EAAIh3C,EAChBn8C,EAAO+nD,GAAKorC,EAAIprC,SAMlB/nD,EAAS,IAAI8nD,QAGd,OAAO9nD,GAaRo1H,aAAav4H,UAAUy9H,yBAA2B,SAASI,EAAOC,GAEjE,GAAa,MAATD,GAA0B,MAATC,EACrB,CAEC,IAAI/7H,EAAOg/D,WAAW13D,OAAOy0H,GAE7B,GAAY,MAAR/7H,GAAgBA,EAAKb,OAAS,EAClC,CAGC,IAAIosD,EAAOuwE,EACP7oG,EAAU+rC,WAAW13D,OAAOikD,GAGhC,GAAIvrD,EAAKb,OAAS8zB,EAAQ9zB,OAC1B,CACCosD,EAAOwwE,EACP,IAAI7tG,EAAM+E,EACVA,EAAUjzB,EACVA,EAAOkuB,EAGR,MAAe,MAARq9B,EACP,CACC,IAAI3mD,EAASrG,KAAK+1F,UAAU/oC,GAG5B,GAAyD,GAArDvrD,EAAK+H,QAAQkrB,EAAU+rC,WAAWC,iBAAkC,MAAVr6D,EAE7D,OAAO2mD,EAGRt4B,EAAU+rC,WAAWg9D,cAAc/oG,GACnCs4B,EAAO3mD,IAKV,OAAO,MAcR4xH,aAAav4H,UAAU2J,OAAS,SAAS2jD,GAWxC,OATIA,GAAQhtD,KAAKgyF,KAEhBhyF,KAAKo4H,QAAQ,MAEmB,MAAxBp4H,KAAK+1F,UAAU/oC,IAEvBhtD,KAAKyzD,QAAQ,IAAI7G,cAAc5sD,KAAM,KAAMgtD,IAGrCA,GAYRirE,aAAav4H,UAAUg+H,YAAc,SAAS1wE,GAE7C,GAAY,MAARA,GAA8B,MAAdhtD,KAAKogE,MACzB,CAIC,IAFA,IAAIzS,EAAa3tD,KAAK4tD,cAAcZ,GAE3B9jD,EAAIykD,EAAa,EAAGzkD,GAAK,EAAGA,IAEpClJ,KAAK09H,YAAY19H,KAAK6tD,WAAWb,EAAM9jD,IAItB,MAAdlJ,KAAKogE,OAAiC,MAAhBpT,EAAK8vE,gBAEvB98H,KAAKogE,MAAMpT,EAAK8vE,WAkB1B7E,aAAav4H,UAAUi+H,qBAAuB,SAAS3wE,EAAM3mD,EAAQjD,GAEpE,IAAI0lD,EAAW9oD,KAAK+1F,UAAU/oC,GAE9B,GAAc,MAAV3mD,EAECA,GAAUyiD,GAAYA,EAAS61D,SAAS3xD,IAAS5pD,GAEpDiD,EAAOgf,OAAO2nC,EAAM5pD,QAGjB,GAAgB,MAAZ0lD,EACT,CACC,IAAI80E,EAAW90E,EAAS61D,SAAS3xD,GACjClE,EAASz/C,OAAOu0H,GAIjB,IAAIC,EAAM79H,KAAK+8D,SAAS12D,GACpBmhB,EAAMxnB,KAAK+8D,SAASjU,GAWxB,OATI+0E,IAAQr2G,EAEXxnB,KAAK28H,UAAU3vE,GAEPxlC,IAAQq2G,GAEhB79H,KAAK09H,YAAY1wE,GAGXlE,GAYRmvE,aAAav4H,UAAUkuD,cAAgB,SAASZ,GAE/C,OAAgB,MAARA,EAAgBA,EAAKY,gBAAkB,GAahDqqE,aAAav4H,UAAUmuD,WAAa,SAASb,EAAM5pD,GAElD,OAAgB,MAAR4pD,EAAgBA,EAAKa,WAAWzqD,GAAS,MAalD60H,aAAav4H,UAAUo+H,YAAc,SAAS9wE,GAE7C,OAAgB,MAARA,EAAgBA,EAAKp7C,SAAW,MAYzCqmH,aAAav4H,UAAUiyG,iBAAmB,SAAStrG,GAElD,OAAOrG,KAAKk7H,cAAc70H,GAAQ,GAAM,IAYzC4xH,aAAav4H,UAAUq+H,cAAgB,SAAS13H,GAE/C,OAAOrG,KAAKk7H,cAAc70H,GAAQ,GAAO,IAiB1C4xH,aAAav4H,UAAUw7H,cAAgB,SAAS70H,EAAQ8qG,EAAUpjD,GAEjEojD,EAAwB,MAAZA,GAAoBA,EAChCpjD,EAAkB,MAATA,GAAiBA,EAK1B,IAHA,IAAIJ,EAAa3tD,KAAK4tD,cAAcvnD,GAChCxD,EAAS,GAEJqG,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAK6tD,WAAWxnD,EAAQ6C,KAE9B6kD,IAAUojD,GAAcpjD,GAAS/tD,KAAKmP,OAAO4D,IACjDo+F,GAAYnxG,KAAK21F,SAAS5iF,KAE3BlQ,EAAOkO,KAAKgC,GAId,OAAOlQ,GAcRo1H,aAAav4H,UAAU28G,YAAc,SAAShiD,EAAMsd,GAEnD,OAAgB,MAARtd,EAAgBA,EAAKgiD,YAAY1kC,GAAY,MAkBtDsgD,aAAav4H,UAAUs+H,YAAc,SAAS3jE,EAAMD,EAAUud,GAE7D,IAAIsmD,EAAkB7jE,GAAYp6D,KAAKq8G,YAAYhiD,EAAMsd,GAQzD,OAPA33E,KAAKyzD,QAAQ,IAAI/G,iBAAiB1sD,KAAMq6D,EAAMD,EAAUud,IAEpD33E,KAAK87H,oBAAsBmC,GAE9Bj+H,KAAKk9H,iBAAiB7iE,EAAMr6D,KAAKmjE,WAG3B/I,GAeR69D,aAAav4H,UAAUw+H,aAAe,SAAS7jE,EAAMn2D,EAAQE,GAE5DpE,KAAKshE,cACL,IAECthE,KAAKg+H,YAAY3jE,EAAMn2D,GAAQ,GAC/BlE,KAAKg+H,YAAY3jE,EAAMj2D,GAAQ,GAEhC,QAECpE,KAAKwhE,cAiBPy2D,aAAav4H,UAAUy+H,uBAAyB,SAAS9jE,EAAMD,EAAUud,GAExE,IAAI7uB,EAAW9oD,KAAKq8G,YAAYhiD,EAAMsd,GAWtC,OATgB,MAAZvd,EAEHA,EAASgkE,WAAW/jE,EAAMsd,GAEN,MAAZ7uB,GAERA,EAASu1E,WAAWhkE,EAAMsd,GAGpB7uB,GAYRmvE,aAAav4H,UAAUy8G,aAAe,SAASnvD,GAE9C,OAAgB,MAARA,EAAgBA,EAAKmvD,eAAiB,GAc/C8b,aAAav4H,UAAU08G,UAAY,SAASpvD,EAAM5pD,GAEjD,OAAgB,MAAR4pD,EAAgBA,EAAKovD,UAAUh5G,GAAS,MAgBjD60H,aAAav4H,UAAU4+H,qBAAuB,SAAStxE,EAAMuxE,EAAUC,GAKtE,IAHA,IAAIvrE,EAAQ,EACRipD,EAAYl8G,KAAKm8G,aAAanvD,GAEzB9jD,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAImxD,EAAOr6D,KAAKo8G,UAAUpvD,EAAM9jD,GAE5BmxD,GAAQmkE,GAAex+H,KAAKq8G,YAAYhiD,EAAMkkE,IAAavxE,GAE9DiG,IAIF,OAAOA,GAaRglE,aAAav4H,UAAUwhH,eAAiB,SAASl0D,GAEhD,OAAOhtD,KAAKguD,SAAShB,GAAM,GAAM,GAAM,IAaxCirE,aAAav4H,UAAU++H,iBAAmB,SAASzxE,GAElD,OAAOhtD,KAAKguD,SAAShB,GAAM,GAAM,GAAO,IAazCirE,aAAav4H,UAAUg/H,iBAAmB,SAAS1xE,GAElD,OAAOhtD,KAAKguD,SAAShB,GAAM,GAAO,GAAM,IAqBzCirE,aAAav4H,UAAUsuD,SAAW,SAAShB,EAAM2xE,EAAUJ,EAAUK,GAEpED,EAAwB,MAAZA,GAAoBA,EAChCJ,EAAwB,MAAZA,GAAoBA,EAChCK,EAAgC,MAAhBA,GAAwBA,EAKxC,IAHA,IAAI1iB,EAAYl8G,KAAKm8G,aAAanvD,GAC9BnqD,EAAS,GAEJqG,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAImxD,EAAOr6D,KAAKo8G,UAAUpvD,EAAM9jD,GAC5BhF,EAASlE,KAAKq8G,YAAYhiD,GAAM,GAChCj2D,EAASpE,KAAKq8G,YAAYhiD,GAAM,IAE/BukE,GAAgB16H,GAAUE,GAAaF,GAAUE,IAAau6H,GAAYv6H,GAAU4oD,GACvFuxE,GAAYr6H,GAAU8oD,KAEvBnqD,EAAOkO,KAAKspD,GAId,OAAOx3D,GAmBRo1H,aAAav4H,UAAU+kH,gBAAkB,SAASvgH,EAAQE,EAAQ23G,GAEjEA,EAAwB,MAAZA,GAAoBA,EAEhC,IAAIlF,EAAO72G,KAAKm8G,aAAaj4G,GACzB26H,EAAO7+H,KAAKm8G,aAAa/3G,GAGzBg2D,EAAWl2D,EACXg4G,EAAYrF,EAIZgoB,EAAOhoB,IAEVqF,EAAY2iB,EACZzkE,EAAWh2D,GAOZ,IAJA,IAAIvB,EAAS,GAIJqG,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAImxD,EAAOr6D,KAAKo8G,UAAUhiD,EAAUlxD,GAChC0L,EAAM5U,KAAKq8G,YAAYhiD,GAAM,GAC7BmvD,EAAMxpH,KAAKq8G,YAAYhiD,GAAM,GAC7BykE,EAAiBlqH,GAAO1Q,GAAYslH,GAAOplH,EAC3C26H,EAAiBvV,GAAOtlH,GAAY0Q,GAAOxQ,GAE3C06H,IAAmB/iB,GAAYgjB,IAElCl8H,EAAOkO,KAAKspD,GAId,OAAOx3D,GAmBRo1H,aAAav4H,UAAUmoH,aAAe,SAAS95D,EAAOqM,EAAU4kE,EAASC,GAExED,EAAsB,MAAXA,GAAmBA,EAC9BC,EAAsB,MAAXA,GAAmBA,EAE9B,IAAIC,EAAY,GAEhB,GAAa,MAATnxE,EAEH,IAAK,IAAI7kD,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAIhF,EAASlE,KAAKq8G,YAAYtuD,EAAM7kD,IAAI,GACpC9E,EAASpE,KAAKq8G,YAAYtuD,EAAM7kD,IAAI,GAKpChF,GAAUk2D,GAAsB,MAAVh2D,GAAkBA,GAAUg2D,GAAY6kE,EAEjEC,EAAUnuH,KAAK3M,GAMPA,GAAUg2D,GAAsB,MAAVl2D,GAAkBA,GAAUk2D,GAAY4kE,GAEtEE,EAAUnuH,KAAK7M,GAKlB,OAAOg7H,GAcRjH,aAAav4H,UAAUqkF,gBAAkB,SAAS3jB,GAKjD,IAHA,IAAIhK,EAAO,IAAIxN,aACXj5B,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpB,IAASA,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI8jD,EAAOoT,EAAMl3D,GACbi2H,GAAU,EACV94H,EAASrG,KAAK+1F,UAAU/oC,GAE5B,MAAiB,MAAV3mD,EACP,CACC,GAAI+vD,EAAK/2D,IAAIgH,GACb,CACC84H,GAAU,EACV,MAGD94H,EAASrG,KAAK+1F,UAAU1vF,GAGrB84H,GAEHxvG,EAAI5e,KAAKi8C,GAIX,OAAOr9B,GAYRsoG,aAAav4H,UAAUi2F,SAAW,SAAS3oC,GAE1C,OAAgB,MAARA,GAAgBA,EAAK2oC,YAY9BsiC,aAAav4H,UAAUyP,OAAS,SAAS69C,GAExC,OAAgB,MAARA,GAAgBA,EAAK79C,UAc9B8oH,aAAav4H,UAAU0/H,cAAgB,SAASpyE,GAE/C,OAAgB,MAARA,GAAgBA,EAAKoyE,iBAY9BnH,aAAav4H,UAAUgrC,SAAW,SAASsiB,GAE1C,OAAgB,MAARA,EAAgBA,EAAKtiB,WAAa,MAc3CutF,aAAav4H,UAAU2/H,SAAW,SAASryE,EAAM1vD,GAIhD,OAFA0C,KAAKyzD,QAAQ,IAAI9G,cAAc3sD,KAAMgtD,EAAM1vD,IAEpCA,GAuBR26H,aAAav4H,UAAU4/H,oBAAsB,SAAStyE,EAAM1vD,GAE3D,OAAO0vD,EAAKuyE,aAAajiI,IAY1B26H,aAAav4H,UAAUu9G,YAAc,SAASjwD,GAE7C,OAAgB,MAARA,EAAgBA,EAAKiwD,cAAgB,MAe9Cgb,aAAav4H,UAAU49G,YAAc,SAAStwD,EAAMI,GAOnD,OALIA,GAAYptD,KAAKi9G,YAAYjwD,IAEhChtD,KAAKyzD,QAAQ,IAAIhH,iBAAiBzsD,KAAMgtD,EAAMI,IAGxCA,GASR6qE,aAAav4H,UAAU8/H,uBAAyB,SAASxyE,EAAMI,GAE9D,IAAItE,EAAW9oD,KAAKi9G,YAAYjwD,GAGhC,OAFAA,EAAKswD,YAAYlwD,GAEVtE,GAYRmvE,aAAav4H,UAAUwjC,SAAW,SAAS8pB,GAE1C,OAAgB,MAARA,EAAgBA,EAAK9pB,WAAa,MAe3C+0F,aAAav4H,UAAU6hE,SAAW,SAASvU,EAAMplC,GAOhD,OALIA,GAAS5nB,KAAKkjC,SAAS8pB,IAE1BhtD,KAAKyzD,QAAQ,IAAI5G,cAAc7sD,KAAMgtD,EAAMplC,IAGrCA,GAeRqwG,aAAav4H,UAAU+/H,oBAAsB,SAASzyE,EAAMplC,GAE3D,IAAIkhC,EAAW9oD,KAAKkjC,SAAS8pB,GAG7B,OAFAA,EAAKuU,SAAS35C,GAEPkhC,GAYRmvE,aAAav4H,UAAUi6H,YAAc,SAAS3sE,GAE7C,OAAgB,MAARA,GAAgBA,EAAK2sE,eAc9B1B,aAAav4H,UAAUggI,aAAe,SAAS1yE,EAAMwrE,GAOpD,OALIA,GAAax4H,KAAK25H,YAAY3sE,IAEjChtD,KAAKyzD,QAAQ,IAAI8kE,iBAAiBv4H,KAAMgtD,EAAMwrE,IAGxCA,GAeRP,aAAav4H,UAAUigI,6BAA+B,SAAS3yE,EAAMwrE,GAEpE,IAAI1vE,EAAW9oD,KAAK25H,YAAY3sE,GAGhC,OAFAA,EAAK0yE,aAAalH,GAEX1vE,GAYRmvE,aAAav4H,UAAUsoD,UAAY,SAASgF,GAE3C,OAAgB,MAARA,GAAgBA,EAAKhF,aAc9BiwE,aAAav4H,UAAUuoD,WAAa,SAAS+E,EAAM9E,GAOlD,OALIA,GAAWloD,KAAKgoD,UAAUgF,IAE7BhtD,KAAKyzD,QAAQ,IAAIglE,gBAAgBz4H,KAAMgtD,EAAM9E,IAGvCA,GAeR+vE,aAAav4H,UAAUkgI,2BAA6B,SAAS5yE,EAAM9E,GAElE,IAAIY,EAAW9oD,KAAKgoD,UAAUgF,GAG9B,OAFAA,EAAK/E,WAAWC,GAETY,GAkBRmvE,aAAav4H,UAAU+zD,QAAU,SAAS1yB,GAEzCA,EAAO0yB,UACPzzD,KAAKshE,cACLthE,KAAKk4H,YAAY1xH,IAAIu6B,GACrB/gC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq3B,QAAS,SAAU99C,IAE5D/gC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQs3B,SAAU,SAAU/9C,IAC7D/gC,KAAKwhE,aA0CNy2D,aAAav4H,UAAU4hE,YAAc,WAEpCthE,KAAKk8H,cACLl8H,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu3B,eAEjB,GAApB/+E,KAAKk8H,aAERl8H,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw3B,cAkB3Ci5C,aAAav4H,UAAU8hE,UAAY,WASlC,GAPAxhE,KAAKk8H,cAEmB,GAApBl8H,KAAKk8H,aAERl8H,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ03B,YAGrCl/E,KAAKm8H,aACV,CACCn8H,KAAKm8H,aAAmC,GAApBn8H,KAAKk8H,YACzBl8H,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy3B,WAAY,OAAQj/E,KAAKk4H,cAElE,IAEC,GAAIl4H,KAAKm8H,eAAiBn8H,KAAKk4H,YAAYx0C,UAC3C,CACC1jF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ23B,YAAa,OAAQn/E,KAAKk4H,cACnE,IAAIvoG,EAAM3vB,KAAKk4H,YACfl4H,KAAKk4H,YAAcl4H,KAAKm4H,qBACxBxoG,EAAIxe,SACJnR,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ43B,KAAM,OAAQzvD,KAGzD,QAEC3vB,KAAKm8H,cAAe,KAiBvBlE,aAAav4H,UAAUy4H,mBAAqB,SAASryC,GAEpD,IAAIuJ,EAAO,IAAIxJ,eAAe7lF,KAAsB,MAAf8lF,GAAuBA,GAW5D,OATAuJ,EAAKl+E,OAAS,WAGbk+E,EAAKnrF,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQ83B,OAC/C,OAAQ+P,EAAM,UAAWA,EAAKhjC,UAC/BgjC,EAAKnrF,OAAOu0E,UAAU,IAAI9B,cAAcnvB,QAAQ+3B,OAC/C,OAAQ8P,EAAM,UAAWA,EAAKhjC,WAGzBgjC,GAeR4oC,aAAav4H,UAAUmgI,cAAgB,SAAS59H,EAAMmJ,EAAI00H,GAEzDA,EAAkC,MAAjBA,GAAyBA,EAE1C9/H,KAAKshE,cACL,IAEC,IAAIy+D,EAAU,IAAI1hI,OAMlB,IAAK,IAAIhB,KALT2C,KAAKggI,kBAAkB/9H,EAAMmJ,EAAI00H,EAAeC,GAKhCA,EAChB,CACC,IAAI/yE,EAAO+yE,EAAQ1iI,GACf+8D,EAAWp6D,KAAKq8G,YAAYrvD,GAAM,GAEtB,MAAZoN,IAEHA,EAAW2lE,EAAQt/D,WAAW13D,OAAOqxD,IACrCp6D,KAAKg+H,YAAYhxE,EAAMoN,GAAU,IAGlCA,EAAWp6D,KAAKq8G,YAAYrvD,GAAM,GAElB,MAAZoN,IAEHA,EAAW2lE,EAAQt/D,WAAW13D,OAAOqxD,IACrCp6D,KAAKg+H,YAAYhxE,EAAMoN,GAAU,KAIpC,QAECp6D,KAAKwhE,cAYPy2D,aAAav4H,UAAUsgI,kBAAoB,SAAS/9H,EAAMmJ,EAAI00H,EAAeC,GAE5E//H,KAAKshE,cACL,IAIC,IAFA,IAAI3T,EAAa1rD,EAAK2rD,gBAEb1kD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI8jD,EAAO/qD,EAAK4rD,WAAW3kD,GAE3B,GAA0B,mBAAf8jD,EAAU,MACrB,CACC,IAAIr8C,EAAKq8C,EAAK8vE,QACV14H,EAAgB,MAANuM,GAAgB3Q,KAAKmP,OAAO69C,IAAU8yE,EAC/B,KAAnB9/H,KAAKk4E,QAAQvnE,GAGf,GAAc,MAAVvM,EACJ,CACC,IAAIogB,EAAQwoC,EAAKxoC,QACjBA,EAAMu4G,MAAMpsH,GAIZ6T,EAAMw5G,YAAYhxE,EAAKqvD,aAAY,IAAO,GAC1C73F,EAAMw5G,YAAYhxE,EAAKqvD,aAAY,IAAQ,GAK3Cj4G,EAASgH,EAAGia,OAAOb,GACnBxkB,KAAK28H,UAAUv4H,GAIhB27H,EAAQt/D,WAAW13D,OAAOikD,IAAS5oD,EAGnCpE,KAAKggI,kBAAkBhzE,EAAM5oD,EAAQ07H,EAAeC,KAIvD,QAEC//H,KAAKwhE,cAcPy2D,aAAav4H,UAAUugI,WAAa,SAAS7/D,GAE5C,IAAI8/D,EAAU,GAEd,GAAa,MAAT9/D,EAIH,IAFA,IAAIhK,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI7C,EAASrG,KAAK+1F,UAAU31B,EAAMl3D,IAEpB,MAAV7C,GAAmB+vD,EAAK/2D,IAAIgH,KAE/B+vD,EAAKvN,IAAIxiD,GAAQ,GACjB65H,EAAQnvH,KAAK1K,IAKhB,OAAO65H,GAiBRjI,aAAav4H,UAAUygI,UAAY,SAASnzE,GAE3C,OAAY,MAARA,EAEIhtD,KAAKgkF,WAAW,CAACh3B,IAAO,GAAM,GAG/B,MAkBRirE,aAAav4H,UAAUskF,WAAa,SAAS5jB,EAAOggE,EAAiBL,GAEpEA,EAAsB,MAAXA,EAAmBA,EAAU,IAAI1hI,OAG5C,IAFA,IAAIgiI,EAAS,GAEJn3H,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjB,MAAZk3D,EAAMl3D,GAETm3H,EAAOtvH,KAAK/Q,KAAKsgI,cAAclgE,EAAMl3D,GAAI62H,EAASK,IAIlDC,EAAOtvH,KAAK,MAId,IAAS7H,EAAI,EAAGA,EAAIm3H,EAAOz/H,OAAQsI,IAEjB,MAAbm3H,EAAOn3H,IAEVlJ,KAAKugI,aAAaF,EAAOn3H,GAAIk3D,EAAMl3D,GAAI62H,GAIzC,OAAOM,GAQRpI,aAAav4H,UAAU4gI,cAAgB,SAAStzE,EAAM+yE,EAASK,GAE9D,IAAII,EAAQh4E,iBAAiBnpD,IAAI2tD,GAC7BxoC,EAAQu7G,EAAQS,GAEpB,GAAa,MAATh8G,IAEHA,EAAQxkB,KAAKygI,WAAWzzE,GACxB+yE,EAAQS,GAASh8G,EAEb47G,GAIH,IAFA,IAAIzyE,EAAa3tD,KAAK4tD,cAAcZ,GAE3B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAIw3H,EAAa1gI,KAAKsgI,cACrBtgI,KAAK6tD,WAAWb,EAAM9jD,GAAI62H,GAAS,GACpCv7G,EAAMa,OAAOq7G,GAKhB,OAAOl8G,GASRyzG,aAAav4H,UAAU+gI,WAAa,SAASzzE,GAE5C,OAAOA,EAAKxoC,SASbyzG,aAAav4H,UAAU6gI,aAAe,SAAS/7G,EAAOwoC,EAAM+yE,GAE3D,IAAI77H,EAASlE,KAAKq8G,YAAYrvD,GAAM,GAEpC,GAAc,MAAV9oD,EACJ,CACC,IAAIyrB,EAAMowG,EAAQv3E,iBAAiBnpD,IAAI6E,IAE5B,MAAPyrB,GAEHA,EAAIyuG,WAAW55G,GAAO,GAIxB,IAAIpgB,EAASpE,KAAKq8G,YAAYrvD,GAAM,GAEpC,GAAc,MAAV5oD,EACJ,CACKurB,EAAMowG,EAAQv3E,iBAAiBnpD,IAAI+E,IAE5B,MAAPurB,GAEHA,EAAIyuG,WAAW55G,GAAO,GAMxB,IAFA,IAAImpC,EAAa3tD,KAAK4tD,cAAcppC,GAE3Btb,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKugI,aAAavgI,KAAK6tD,WAAWrpC,EAAOtb,GACxClJ,KAAK6tD,WAAWb,EAAM9jD,GAAI62H,IA+B7B1H,aAAa34H,UAAU+zD,QAAU,WAEhCzzD,KAAKgyF,KAAOhyF,KAAK8oD,SACjB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMq2G,YAAYz8H,KAAK8oD,WA+B7C8D,cAAcltD,UAAU+zD,QAAU,WAEjC,GAAkB,MAAdzzD,KAAK+S,MACT,CACC,IAAI4c,EAAM3vB,KAAKomB,MAAM2vE,UAAU/1F,KAAK+S,OAChC8rH,EAAe,MAAPlvG,EAAeA,EAAIgvF,SAAS3+G,KAAK+S,OAAS,EAEjC,MAAjB/S,KAAK8oD,UAER9oD,KAAK2gI,QAAQ3gI,KAAK+S,OAAO,GAG1B4c,EAAM3vB,KAAKomB,MAAMu3G,qBAChB39H,KAAK+S,MAAO/S,KAAK8oD,SAAU9oD,KAAKs4H,eAEZ,MAAjBt4H,KAAK8oD,UAER9oD,KAAK2gI,QAAQ3gI,KAAK+S,OAAO,GAG1B/S,KAAKqG,OAASrG,KAAK8oD,SACnB9oD,KAAK8oD,SAAWn5B,EAChB3vB,KAAKoD,MAAQpD,KAAKs4H,cAClBt4H,KAAKs4H,cAAgBuG,IAWvBjyE,cAAcltD,UAAUihI,QAAU,SAAS3zE,EAAM4zE,GAEhDA,EAA0B,MAAbA,GAAqBA,EAElC,IAAI18H,EAAS8oD,EAAKqvD,aAAY,GAC1Bj4G,EAAS4oD,EAAKqvD,aAAY,GAEhB,MAAVn4G,IAEC08H,EAEH5gI,KAAKomB,MAAM+3G,uBAAuBnxE,EAAM9oD,GAAQ,GAIhDlE,KAAKomB,MAAM+3G,uBAAuBnxE,EAAM,MAAM,IAIlC,MAAV5oD,IAECw8H,EAEH5gI,KAAKomB,MAAM+3G,uBAAuBnxE,EAAM5oD,GAAQ,GAIhDpE,KAAKomB,MAAM+3G,uBAAuBnxE,EAAM,MAAM,IAIhDA,EAAKgxE,YAAY95H,GAAQ,GACzB8oD,EAAKgxE,YAAY55H,GAAQ,GAIzB,IAFA,IAAIupD,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAE,EAAGA,EAAEykD,EAAYzkD,IAE3BlJ,KAAK2gI,QAAQ3gI,KAAKomB,MAAMynC,WAAWb,EAAM9jD,GAAI03H,IA6B/Cl0E,iBAAiBhtD,UAAU+zD,QAAU,WAEnB,MAAbzzD,KAAKgtD,OAERhtD,KAAKo6D,SAAWp6D,KAAK8oD,SACrB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAM+3G,uBAC1Bn+H,KAAKgtD,KAAMhtD,KAAK8oD,SAAU9oD,KAAKkE,UA4BlCyoD,cAAcjtD,UAAU+zD,QAAU,WAEhB,MAAbzzD,KAAKgtD,OAERhtD,KAAK1C,MAAQ0C,KAAK8oD,SAClB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMk5G,oBAC1Bt/H,KAAKgtD,KAAMhtD,KAAK8oD,YA4BnB+D,cAAcntD,UAAU+zD,QAAU,WAEhB,MAAbzzD,KAAKgtD,OAERhtD,KAAK4nB,MAAQ5nB,KAAK8oD,SAClB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMq5G,oBAC1Bz/H,KAAKgtD,KAAMhtD,KAAK8oD,YA4BnB2D,iBAAiB/sD,UAAU+zD,QAAU,WAEnB,MAAbzzD,KAAKgtD,OAERhtD,KAAKotD,SAAWptD,KAAK8oD,SACrB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMo5G,uBAC1Bx/H,KAAKgtD,KAAMhtD,KAAK8oD,YA4BnByvE,iBAAiB74H,UAAU+zD,QAAU,WAEnB,MAAbzzD,KAAKgtD,OAERhtD,KAAKw4H,UAAYx4H,KAAK8oD,SACtB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMu5G,6BAC1B3/H,KAAKgtD,KAAMhtD,KAAK8oD,YA4BnB2vE,gBAAgB/4H,UAAU+zD,QAAU,WAElB,MAAbzzD,KAAKgtD,OAERhtD,KAAKkoD,QAAUloD,KAAK8oD,SACpB9oD,KAAK8oD,SAAW9oD,KAAKomB,MAAMw5G,2BAC1B5/H,KAAKgtD,KAAMhtD,KAAK8oD,YAkDnB4vE,sBAAsBh5H,UAAU+zD,QAAU,WAEzC,GAAiB,MAAbzzD,KAAKgtD,KACT,CACC,IAAIr9B,EAAM3vB,KAAKgtD,KAAKzoB,aAAavkC,KAAKqsG,WAEjB,MAAjBrsG,KAAK8oD,SAER9oD,KAAKgtD,KAAK1vD,MAAMygC,gBAAgB/9B,KAAKqsG,WAIrCrsG,KAAKgtD,KAAK90B,aAAal4B,KAAKqsG,UAAWrsG,KAAK8oD,UAG7C9oD,KAAK8oD,SAAWn5B,IAIlBgxB,WAAWs3E,aAAuC,qBAAjBA,aAA+BA,kBAAe13H,EAqF/Eo4H,OAAOj5H,UAAUiR,GAAK,KAOtBgoH,OAAOj5H,UAAUpC,MAAQ,KAOzBq7H,OAAOj5H,UAAU0tD,SAAW,KAQ5BurE,OAAOj5H,UAAUkoB,MAAQ,KAOzB+wG,OAAOj5H,UAAUo8G,QAAS,EAO1B6c,OAAOj5H,UAAU26D,MAAO,EAOxBs+D,OAAOj5H,UAAUmhI,aAAc,EAO/BlI,OAAOj5H,UAAUwoD,SAAU,EAO3BywE,OAAOj5H,UAAU84H,WAAY,EAO7BG,OAAOj5H,UAAU2G,OAAS,KAO1BsyH,OAAOj5H,UAAUwE,OAAS,KAO1By0H,OAAOj5H,UAAU0E,OAAS,KAO1Bu0H,OAAOj5H,UAAUkS,SAAW,KAO5B+mH,OAAOj5H,UAAUquD,MAAQ,KAWzB4qE,OAAOj5H,UAAUohI,YAAc,CAAC,KAAM,QAAS,SAAU,SACzB,SAAU,WAAY,SAOtDnI,OAAOj5H,UAAUo9H,MAAQ,WAExB,OAAO98H,KAAK2Q,IAQbgoH,OAAOj5H,UAAUq9H,MAAQ,SAASpsH,GAEjC3Q,KAAK2Q,GAAKA,GASXgoH,OAAOj5H,UAAUgrC,SAAW,WAE3B,OAAO1qC,KAAK1C,OASbq7H,OAAOj5H,UAAU2/H,SAAW,SAAS/hI,GAEpC0C,KAAK1C,MAAQA,GAWdq7H,OAAOj5H,UAAU6/H,aAAe,SAASwB,GAExC,IAAIj4E,EAAW9oD,KAAK0qC,WAGpB,OAFA1qC,KAAKq/H,SAAS0B,GAEPj4E,GAQR6vE,OAAOj5H,UAAUu9G,YAAc,WAE9B,OAAOj9G,KAAKotD,UAQburE,OAAOj5H,UAAU49G,YAAc,SAASlwD,GAEvCptD,KAAKotD,SAAWA,GAQjBurE,OAAOj5H,UAAUwjC,SAAW,WAE3B,OAAOljC,KAAK4nB,OAQb+wG,OAAOj5H,UAAU6hE,SAAW,SAAS35C,GAEpC5nB,KAAK4nB,MAAQA,GAQd+wG,OAAOj5H,UAAUi2F,SAAW,WAE3B,OAAsB,GAAf31F,KAAK87G,QAab6c,OAAOj5H,UAAUshI,UAAY,SAASllB,GAErC97G,KAAK87G,OAASA,GAQf6c,OAAOj5H,UAAUyP,OAAS,WAEzB,OAAoB,GAAbnP,KAAKq6D,MAabs+D,OAAOj5H,UAAUuhI,QAAU,SAAS5mE,GAEnCr6D,KAAKq6D,KAAOA,GAQbs+D,OAAOj5H,UAAU0/H,cAAgB,WAEhC,OAA2B,GAApBp/H,KAAK6gI,aAYblI,OAAOj5H,UAAUwhI,eAAiB,SAASL,GAE1C7gI,KAAK6gI,YAAcA,GAQpBlI,OAAOj5H,UAAUsoD,UAAY,WAE5B,OAAuB,GAAhBhoD,KAAKkoD,SAYbywE,OAAOj5H,UAAUuoD,WAAa,SAASC,GAEtCloD,KAAKkoD,QAAUA,GAQhBywE,OAAOj5H,UAAUi6H,YAAc,WAE9B,OAAyB,GAAlB35H,KAAKw4H,WAYbG,OAAOj5H,UAAUggI,aAAe,SAASlH,GAExCx4H,KAAKw4H,UAAYA,GAQlBG,OAAOj5H,UAAUq2F,UAAY,WAE5B,OAAO/1F,KAAKqG,QAYbsyH,OAAOj5H,UAAUyhI,UAAY,SAAS96H,GAErCrG,KAAKqG,OAASA,GAafsyH,OAAOj5H,UAAU28G,YAAc,SAASn4G,GAEvC,OAAO,EAAWlE,KAAKkE,OAASlE,KAAKoE,QActCu0H,OAAOj5H,UAAUs+H,YAAc,SAAS5jE,EAAUud,GAWjD,OATIA,EAEH33E,KAAKkE,OAASk2D,EAIdp6D,KAAKoE,OAASg2D,EAGRA,GAQRu+D,OAAOj5H,UAAUkuD,cAAgB,WAEhC,OAAyB,MAAjB5tD,KAAK4R,SAAoB,EAAI5R,KAAK4R,SAAShR,QAYpD+3H,OAAOj5H,UAAUi/G,SAAW,SAAS5rG,GAEpC,OAAOmzC,QAAQ18C,QAAQxJ,KAAK4R,SAAUmB,IAYvC4lH,OAAOj5H,UAAUmuD,WAAa,SAASzqD,GAEtC,OAAyB,MAAjBpD,KAAK4R,SAAoB,KAAO5R,KAAK4R,SAASxO,IAiBvDu1H,OAAOj5H,UAAU2lB,OAAS,SAAStS,EAAO3P,GA4BzC,OA1Ba,MAAT2P,IAEU,MAAT3P,IAEHA,EAAQpD,KAAK4tD,gBAET76C,EAAMgjF,aAAe/1F,MAExBoD,KAIF2P,EAAMquH,mBACNruH,EAAMouH,UAAUnhI,MAEK,MAAjBA,KAAK4R,UAER5R,KAAK4R,SAAW,GAChB5R,KAAK4R,SAASb,KAAKgC,IAInB/S,KAAK4R,SAASnI,OAAOrG,EAAO,EAAG2P,IAI1BA,GAeR4lH,OAAOj5H,UAAU2J,OAAS,SAASjG,GAElC,IAAI2P,EAAQ,KAaZ,OAXqB,MAAjB/S,KAAK4R,UAAoBxO,GAAS,IAErC2P,EAAQ/S,KAAK6tD,WAAWzqD,GAEX,MAAT2P,IAEH/S,KAAK4R,SAASnI,OAAOrG,EAAO,GAC5B2P,EAAMouH,UAAU,QAIXpuH,GAQR4lH,OAAOj5H,UAAU0hI,iBAAmB,WAEnC,GAAmB,MAAfphI,KAAKqG,OACT,CACC,IAAIjD,EAAQpD,KAAKqG,OAAOs4G,SAAS3+G,MACjCA,KAAKqG,OAAOgD,OAAOjG,KASrBu1H,OAAOj5H,UAAUy8G,aAAe,WAE/B,OAAsB,MAAdn8G,KAAK+tD,MAAiB,EAAI/tD,KAAK+tD,MAAMntD,QAY9C+3H,OAAOj5H,UAAU2hI,aAAe,SAAShnE,GAExC,OAAOnU,QAAQ18C,QAAQxJ,KAAK+tD,MAAOsM,IAYpCs+D,OAAOj5H,UAAU08G,UAAY,SAASh5G,GAErC,OAAsB,MAAdpD,KAAK+tD,MAAiB,KAAO/tD,KAAK+tD,MAAM3qD,IAcjDu1H,OAAOj5H,UAAU0+H,WAAa,SAAS/jE,EAAMinE,GAoB5C,OAlBY,MAARjnE,IAEHA,EAAKknE,mBAAmBD,GACxBjnE,EAAK2jE,YAAYh+H,KAAMshI,IAEL,MAAdthI,KAAK+tD,OACRsM,EAAKgiD,aAAailB,IAAethI,MACjCkmD,QAAQ18C,QAAQxJ,KAAK+tD,MAAOsM,GAAQ,KAElB,MAAdr6D,KAAK+tD,QAER/tD,KAAK+tD,MAAQ,IAGd/tD,KAAK+tD,MAAMh9C,KAAKspD,KAIXA,GAcRs+D,OAAOj5H,UAAU2+H,WAAa,SAAShkE,EAAMinE,GAE5C,GAAY,MAARjnE,EACJ,CACC,GAAIA,EAAKgiD,aAAailB,IAAethI,MACtB,MAAdA,KAAK+tD,MACN,CACC,IAAI3qD,EAAQpD,KAAKqhI,aAAahnE,GAE1Bj3D,GAAS,GAEZpD,KAAK+tD,MAAMtkD,OAAOrG,EAAO,GAI3Bi3D,EAAK2jE,YAAY,KAAMsD,GAGxB,OAAOjnE,GAaRs+D,OAAOj5H,UAAU6hI,mBAAqB,SAAS5pD,GAE9C,IAAIvd,EAAWp6D,KAAKq8G,YAAY1kC,GAEhB,MAAZvd,GAEHA,EAASikE,WAAWr+H,KAAM23E,IAc5BghD,OAAOj5H,UAAUo+B,aAAe,SAAShgC,GAExC,IAAI0jI,EAAaxhI,KAAK0qC,WAEtB,OAAsB,MAAd82F,GACPA,EAAW3jG,UAAYgsB,YAAY0F,kBAAoBiyE,EAAW1jG,aAClE0jG,EAAW1jG,aAAahgC,GAAyC,MAAjC0jI,EAAWj9F,aAAazmC,IAe1D66H,OAAOj5H,UAAU6kC,aAAe,SAASzmC,EAAM2sD,GAE9C,IAAI+2E,EAAaxhI,KAAK0qC,WAElB1iC,EAAqB,MAAdw5H,GACVA,EAAW3jG,UAAYgsB,YAAY0F,iBACnCiyE,EAAWj9F,aAAazmC,GAAQ,KAEjC,OAAOkK,GAAOyiD,GAafkuE,OAAOj5H,UAAUw4B,aAAe,SAASp6B,EAAMR,GAE9C,IAAIkkI,EAAaxhI,KAAK0qC,WAEJ,MAAd82F,GACHA,EAAW3jG,UAAYgsB,YAAY0F,kBAEnCiyE,EAAWtpG,aAAap6B,EAAMR,IAWhCq7H,OAAOj5H,UAAU8kB,MAAQ,WAExB,IAAIA,EAAQ0hC,QAAQ1hC,MAAMxkB,KAAMA,KAAK8gI,aAGrC,OAFAt8G,EAAM66G,SAASr/H,KAAKyhI,cAEbj9G,GAQRm0G,OAAOj5H,UAAU+hI,WAAa,WAE7B,IAAInkI,EAAQ0C,KAAK0qC,WAcjB,OAZa,MAATptC,IAEwB,mBAAhBA,EAAW,MAErBA,EAAQA,EAAMknB,QAELnkB,MAAM/C,EAAMugC,YAErBvgC,EAAQA,EAAMoxC,WAAU,KAInBpxC,GAGRqjD,WAAWg4E,OAA2B,qBAAXA,OAAyBA,YAASp4H,EAkF7D48G,WAAWz9G,UAAY,IAAImrD,YAC3BsyD,WAAWz9G,UAAUqyB,YAAcorF,WAOnCA,WAAWz9G,UAAUgiI,0BAA2B,EAQhDvkB,WAAWz9G,UAAUiiI,gBAAkB,KASvCxkB,WAAWz9G,UAAUkiI,YAAc,KASnCzkB,WAAWz9G,UAAUmiI,YAAc,KAUnC1kB,WAAWz9G,UAAUimG,OAAS,KAW9BwX,WAAWz9G,UAAU00D,OAAS,KAiB9B+oD,WAAWz9G,UAAUw2F,UAAW,EAahCinB,WAAWz9G,UAAUoiI,KAAO,WAE3B,GAA4B,MAAxB9hI,KAAK2hI,gBACT,CACC,IAAIjlH,EAAM,IAAImuC,YACb7qD,KAAKg/C,EAAGh/C,KAAK4qD,EAAG5qD,KAAK8lD,MAAO9lD,KAAK2lD,QAElC3lD,KAAKg/C,EAAIh/C,KAAK2hI,gBAAgB3iF,EAC9Bh/C,KAAK4qD,EAAI5qD,KAAK2hI,gBAAgB/2E,EAC9B5qD,KAAK8lD,MAAQ9lD,KAAK2hI,gBAAgB77E,MAClC9lD,KAAK2lD,OAAS3lD,KAAK2hI,gBAAgBh8E,OAEnC3lD,KAAK2hI,gBAAkBjlH,IAezBygG,WAAWz9G,UAAUqiI,iBAAmB,SAASpqD,GAEhD,OAAO,EAAa33E,KAAK4hI,YAAc5hI,KAAK6hI,aAe7C1kB,WAAWz9G,UAAUsiI,iBAAmB,SAAS/vF,EAAO0lC,GAWvD,OATIA,EAEH33E,KAAK4hI,YAAc3vF,EAInBjyC,KAAK6hI,YAAc5vF,EAGbA,GAgBRkrE,WAAWz9G,UAAUk6F,OAAS,SAAS7iC,EAAO2C,GAE7C,IAAI/C,EAAMzQ,QAAQqQ,UAAUQ,GACxBS,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAGnB,IAAK32D,KAAKk2F,SACV,CACC,IAAI+rC,EAAK,IAAIt3E,QAAQ3qD,KAAKgrD,aAAchrD,KAAKirD,cACzC+O,EAAK9T,QAAQ6T,gBAAgBkoE,EAAIzqE,EAAKE,EAAKgC,GAE/C15D,KAAKg/C,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,EAAIh/C,KAAK8lD,MAAQ,GACxC9lD,KAAK4qD,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,EAAI5qD,KAAK2lD,OAAS,GAI1C,GAAwB,MAApB3lD,KAAK4hI,YACT,CACK5nE,EAAK9T,QAAQ6T,gBAAgB/5D,KAAK4hI,YAAapqE,EAAKE,EAAKgC,GAC7D15D,KAAK4hI,YAAY5iF,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,GACnCh/C,KAAK4hI,YAAYh3E,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,GAIpC,GAAwB,MAApB5qD,KAAK6hI,YACT,CACK7nE,EAAK9T,QAAQ6T,gBAAgB/5D,KAAK6hI,YAAarqE,EAAKE,EAAKgC,GAC7D15D,KAAK6hI,YAAY7iF,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,GACnCh/C,KAAK6hI,YAAYj3E,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,GAIpC,GAAmB,MAAf5qD,KAAK2lG,OAER,IAAK,IAAIz8F,EAAI,EAAGA,EAAIlJ,KAAK2lG,OAAO/kG,OAAQsI,IAEvC,GAAsB,MAAlBlJ,KAAK2lG,OAAOz8F,GAChB,CACK8wD,EAAK9T,QAAQ6T,gBAAgB/5D,KAAK2lG,OAAOz8F,GAAIsuD,EAAKE,EAAKgC,GAC3D15D,KAAK2lG,OAAOz8F,GAAG81C,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,GACjCh/C,KAAK2lG,OAAOz8F,GAAG0hD,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,KAoBrCuyD,WAAWz9G,UAAUmkE,UAAY,SAASh1B,EAAIE,GA2B7C,GAzBAF,EAAK3mC,WAAW2mC,GAChBE,EAAK7mC,WAAW6mC,GAGX/uC,KAAKk2F,WAETl2F,KAAKg/C,EAAI92C,WAAWlI,KAAKg/C,GAAKnQ,EAC9B7uC,KAAK4qD,EAAI1iD,WAAWlI,KAAK4qD,GAAK7b,GAIP,MAApB/uC,KAAK4hI,cAER5hI,KAAK4hI,YAAY5iF,EAAI92C,WAAWlI,KAAK4hI,YAAY5iF,GAAKnQ,EACtD7uC,KAAK4hI,YAAYh3E,EAAI1iD,WAAWlI,KAAK4hI,YAAYh3E,GAAK7b,GAI/B,MAApB/uC,KAAK6hI,cAER7hI,KAAK6hI,YAAY7iF,EAAI92C,WAAWlI,KAAK6hI,YAAY7iF,GAAKnQ,EACtD7uC,KAAK6hI,YAAYj3E,EAAI1iD,WAAWlI,KAAK6hI,YAAYj3E,GAAK7b,GAInD/uC,KAAK0hI,0BAA2C,MAAf1hI,KAAK2lG,OAEzC,IAAK,IAAIz8F,EAAI,EAAGA,EAAIlJ,KAAK2lG,OAAO/kG,OAAQsI,IAEjB,MAAlBlJ,KAAK2lG,OAAOz8F,KAEflJ,KAAK2lG,OAAOz8F,GAAG81C,EAAI92C,WAAWlI,KAAK2lG,OAAOz8F,GAAG81C,GAAKnQ,EAClD7uC,KAAK2lG,OAAOz8F,GAAG0hD,EAAI1iD,WAAWlI,KAAK2lG,OAAOz8F,GAAG0hD,GAAK7b,IAqBtDouE,WAAWz9G,UAAUytD,MAAQ,SAASE,EAAIC,EAAI40E,GAoB7C,GAlBA70E,EAAKnlD,WAAWmlD,GAChBC,EAAKplD,WAAWolD,GAGQ,MAApBttD,KAAK4hI,cAER5hI,KAAK4hI,YAAY5iF,EAAI92C,WAAWlI,KAAK4hI,YAAY5iF,GAAKqO,EACtDrtD,KAAK4hI,YAAYh3E,EAAI1iD,WAAWlI,KAAK4hI,YAAYh3E,GAAK0C,GAI/B,MAApBttD,KAAK6hI,cAER7hI,KAAK6hI,YAAY7iF,EAAI92C,WAAWlI,KAAK6hI,YAAY7iF,GAAKqO,EACtDrtD,KAAK6hI,YAAYj3E,EAAI1iD,WAAWlI,KAAK6hI,YAAYj3E,GAAK0C,GAIpC,MAAfttD,KAAK2lG,OAER,IAAK,IAAIz8F,EAAI,EAAGA,EAAIlJ,KAAK2lG,OAAO/kG,OAAQsI,IAEjB,MAAlBlJ,KAAK2lG,OAAOz8F,KAEflJ,KAAK2lG,OAAOz8F,GAAG81C,EAAI92C,WAAWlI,KAAK2lG,OAAOz8F,GAAG81C,GAAKqO,EAClDrtD,KAAK2lG,OAAOz8F,GAAG0hD,EAAI1iD,WAAWlI,KAAK2lG,OAAOz8F,GAAG0hD,GAAK0C,GAMhDttD,KAAKk2F,WAETl2F,KAAKg/C,EAAI92C,WAAWlI,KAAKg/C,GAAKqO,EAC9BrtD,KAAK4qD,EAAI1iD,WAAWlI,KAAK4qD,GAAK0C,EAE1B40E,IAEH50E,EAAKD,EAAKntD,KAAKyD,IAAI0pD,EAAIC,IAGxBttD,KAAK8lD,MAAQ59C,WAAWlI,KAAK8lD,OAASuH,EACtCrtD,KAAK2lD,OAASz9C,WAAWlI,KAAK2lD,QAAU2H,IAS1C6vD,WAAWz9G,UAAUorD,OAAS,SAASnjD,GAEtC,OAAOkjD,YAAYnrD,UAAUorD,OAAO/pD,MAAMf,KAAMgB,YAC/ChB,KAAKk2F,UAAYvuF,EAAIuuF,WACC,MAApBl2F,KAAK4hI,aAA0C,MAAnBj6H,EAAIi6H,aAA6C,MAApB5hI,KAAK4hI,aAAuB5hI,KAAK4hI,YAAY92E,OAAOnjD,EAAIi6H,gBAC7F,MAApB5hI,KAAK6hI,aAA0C,MAAnBl6H,EAAIk6H,aAA6C,MAApB7hI,KAAK6hI,aAAuB7hI,KAAK6hI,YAAY/2E,OAAOnjD,EAAIk6H,gBAClG,MAAf7hI,KAAK2lG,QAAgC,MAAdh+F,EAAIg+F,QAAmC,MAAf3lG,KAAK2lG,QAAkBz/C,QAAQ+P,YAAYj2D,KAAK2lG,OAAQh+F,EAAIg+F,WACnF,MAAxB3lG,KAAK2hI,iBAAkD,MAAvBh6H,EAAIg6H,iBAAqD,MAAxB3hI,KAAK2hI,iBAA2B3hI,KAAK2hI,gBAAgB72E,OAAOnjD,EAAIg6H,oBAClH,MAAf3hI,KAAKo0D,QAAgC,MAAdzsD,EAAIysD,QAAmC,MAAfp0D,KAAKo0D,QAAkBp0D,KAAKo0D,OAAOtJ,OAAOnjD,EAAIysD,UAGjGzT,WAAWw8D,WAAmC,qBAAfA,WAA6BA,gBAAa58G,EAMzE,IAAIkgE,WACJ,CAWCC,eAAgB,IAahB33D,OAAQ,SAASikD,GAEhB,IAAInqD,EAAS,GAEb,GAAY,MAARmqD,EACJ,CACC,IAAI3mD,EAAS2mD,EAAK+oC,YAElB,MAAiB,MAAV1vF,EACP,CACC,IAAIjD,EAAQiD,EAAOs4G,SAAS3xD,GAC5BnqD,EAASO,EAAQq9D,WAAWC,eAAiB79D,EAE7CmqD,EAAO3mD,EACPA,EAAS2mD,EAAK+oC,aAKhB,IAAI9tF,EAAIpF,EAAOjC,OAOf,OALIqH,EAAI,IAEPpF,EAASA,EAAOkhD,UAAU,EAAG97C,EAAI,IAG3BpF,GAaR46H,cAAe,SAASh8H,GAEvB,GAAY,MAARA,EACJ,CACC,IAAI2B,EAAQ3B,EAAKkxF,YAAYlyB,WAAWC,gBAExC,GAAIt9D,GAAS,EAEZ,OAAO3B,EAAKsiD,UAAU,EAAG3gD,GAErB,GAAI3B,EAAKb,OAAS,EAEtB,MAAO,GAIT,OAAO,MAcR8Z,QAAS,SAASs3E,EAAMvwF,GAEvB,IAAI4E,EAAS2rF,EAEb,GAAY,MAARvwF,EAIH,IAFA,IAAIw/D,EAASx/D,EAAKwH,MAAMw3D,WAAWC,gBAE1Bx3D,EAAE,EAAGA,EAAE+3D,EAAOrgE,OAAQsI,IAE9B7C,EAASA,EAAOwnD,WAAWx4B,SAAS4rC,EAAO/3D,KAI7C,OAAO7C,GASRs6D,QAAS,SAAShH,EAAIC,GAKrB,IAHA,IAAIj2D,EAAMzD,KAAKyD,IAAIg2D,EAAG/4D,OAAQg5D,EAAGh5D,QAC7B+nB,EAAO,EAEFzf,EAAI,EAAGA,EAAIvF,EAAKuF,IAExB,GAAIywD,EAAGzwD,IAAM0wD,EAAG1wD,GAChB,CACC,GAAoB,GAAhBywD,EAAGzwD,GAAGtI,QACO,GAAhBg5D,EAAG1wD,GAAGtI,OAEN+nB,EAAQgxC,EAAGzwD,IAAM0wD,EAAG1wD,GAAM,EAAMywD,EAAGzwD,GAAK0wD,EAAG1wD,GAAM,GAAK,MAGvD,CACC,IAAIi5H,EAAK9sG,SAASskC,EAAGzwD,IACjBk5H,EAAK/sG,SAASukC,EAAG1wD,IAErByf,EAAQw5G,GAAMC,EAAM,EAAMD,EAAKC,EAAM,GAAK,EAG3C,MAKF,GAAY,GAARz5G,EACJ,CACKw5G,EAAKxoE,EAAG/4D,OACRwhI,EAAKxoE,EAAGh5D,OAERuhI,GAAMC,IAETz5G,EAAQw5G,EAAKC,EAAM,GAAK,GAI1B,OAAOz5G,IAKTg4B,WAAW8f,WAAmC,qBAAfA,WAA6BA,gBAAalgE,EAMzE,IAAI8hI,YACJ,CA8ECC,mBAAoB,SAAUxlE,EAAQg/C,EAAQh6G,EAAMygI,GAEnD,IAAI7oE,EAAKoD,EAAO9R,aACZyS,EAAKX,EAAO7R,aACZpc,EAAK/sC,EAAKk9C,EAAI0a,EACd3qB,EAAKjtC,EAAK8oD,EAAI6S,EACdI,EAAQ39D,KAAKs4D,MAAMzpB,EAAIF,GACvBp0B,EAAI,IAAIkwC,QAAQ,EAAG,GACnB63E,EAAKtiI,KAAKu2D,GACVgsE,EAAMviI,KAAKu2D,GAAG,EACdisE,EAAOD,EAAM5kE,EACb7R,EAAI9rD,KAAKs4D,MAAMsE,EAAOnX,OAAQmX,EAAOhX,OAyDzC,OAvDI+X,GAAS2kE,EAAKx2E,GAAK6R,EAAQ2kE,EAAKx2E,GAGnCvxC,EAAEukC,EAAI8d,EAAO9d,EACbvkC,EAAEmwC,EAAI6S,EAAKX,EAAOhX,MAAQ5lD,KAAKyiI,IAAI9kE,GAAS,GAEpCA,GAAS7R,GAGjBvxC,EAAEmwC,EAAIkS,EAAOlS,EACbnwC,EAAEukC,EAAI0a,EAAKoD,EAAOnX,OAASzlD,KAAKyiI,IAAID,GAAQ,GAEpC7kE,EAAQ7R,GAGhBvxC,EAAEukC,EAAI8d,EAAO9d,EAAI8d,EAAOhX,MACxBrrC,EAAEmwC,EAAI6S,EAAKX,EAAOhX,MAAQ5lD,KAAKyiI,IAAI9kE,GAAS,IAK5CpjD,EAAEmwC,EAAIkS,EAAOlS,EAAIkS,EAAOnX,OACxBlrC,EAAEukC,EAAI0a,EAAKoD,EAAOnX,OAASzlD,KAAKyiI,IAAID,GAAQ,GAGzCH,IAECzgI,EAAKk9C,GAAK8d,EAAO9d,GACpBl9C,EAAKk9C,GAAK8d,EAAO9d,EAAI8d,EAAOhX,MAE5BrrC,EAAEukC,EAAIl9C,EAAKk9C,EAEHl9C,EAAK8oD,GAAKkS,EAAOlS,GACrB9oD,EAAK8oD,GAAKkS,EAAOlS,EAAIkS,EAAOnX,SAEhClrC,EAAEmwC,EAAI9oD,EAAK8oD,GAER9oD,EAAKk9C,EAAI8d,EAAO9d,EAEnBvkC,EAAEukC,EAAI8d,EAAO9d,EAELl9C,EAAKk9C,EAAI8d,EAAO9d,EAAI8d,EAAOhX,QAEnCrrC,EAAEukC,EAAI8d,EAAO9d,EAAI8d,EAAOhX,OAErBhkD,EAAK8oD,EAAIkS,EAAOlS,EAEnBnwC,EAAEmwC,EAAIkS,EAAOlS,EAEL9oD,EAAK8oD,EAAIkS,EAAOlS,EAAIkS,EAAOnX,SAEnClrC,EAAEmwC,EAAIkS,EAAOlS,EAAIkS,EAAOnX,SAInBlrC,GASRmoH,iBAAkB,SAAU9lE,EAAQg/C,EAAQh6G,EAAMygI,GAEjD,IAAIvjF,EAAI8d,EAAO9d,EACX4L,EAAIkS,EAAOlS,EACXtrD,EAAIw9D,EAAOhX,MAAQ,EACnBjlD,EAAIi8D,EAAOnX,OAAS,EACpB+T,EAAK1a,EAAI1/C,EACTm+D,EAAK7S,EAAI/pD,EACT2+D,EAAK19D,EAAKk9C,EACVygB,EAAK39D,EAAK8oD,EAIV/b,EAAKxZ,SAASmqC,EAAK9F,GACnB3qB,EAAK1Z,SAASoqC,EAAKhC,GAEvB,GAAU,GAAN5uB,GAAiB,GAANE,EAEd,OAAO,IAAI4b,QAAQ+O,EAAI+D,EAAK58D,EAAIkuC,EAAK7uC,KAAKk3D,IAAIroB,IAE1C,GAAU,GAANF,GAAiB,GAANE,EAEnB,OAAO,IAAI4b,QAAQ6U,EAAIC,GAGxB,GAAI8iE,EACJ,CACC,GAAI9iE,GAAM7U,GAAK6U,GAAM7U,EAAIkS,EAAOnX,OAChC,CACC,IAAI4S,EAAKkH,EAAKhC,EACVnF,EAAKp4D,KAAKg4D,KAAK54D,EAAEA,GAAG,EAAGi5D,EAAGA,GAAK13D,EAAEA,MAAQ,EAO7C,OALI2+D,GAAMxgB,IAETsZ,GAAMA,GAGA,IAAI3N,QAAQ+O,EAAGpB,EAAImH,GAG3B,GAAID,GAAMxgB,GAAKwgB,GAAMxgB,EAAI8d,EAAOhX,MAChC,CACKwS,EAAKkH,EAAK9F,EACVnB,EAAKr4D,KAAKg4D,KAAKr3D,EAAEA,GAAG,EAAGy3D,EAAGA,GAAKh5D,EAAEA,MAAQ,EAO7C,OALImgE,GAAM7U,IAET2N,GAAMA,GAGA,IAAI5N,QAAQ6U,EAAI/B,EAAGlF,IAK5B,IAAIr0C,EAAI6qB,EAAKF,EACT9nC,EAAI02D,EAAKv5C,EAAIw1C,EACbztD,EAAI3M,EAAIA,EAAI4kB,EAAIA,EAAIrjB,EAAIA,EACxBtD,GAAK,EAAIm8D,EAAKztD,EACdm0C,EAAI9gD,EAAIA,EAAI4kB,EAAIA,EAAIw1C,EAAKA,EAC3B74D,EAAIA,EAAI64D,EAAKA,EACbp6D,EAAIA,EAAIuB,EAAIA,EACVgiI,EAAM3iI,KAAKg4D,KAAK36D,EAAIA,EAAI,EAAI0O,EAAIm0C,GAGhC0iF,IAAUvlI,EAAIslI,IAAQ,EAAI52H,GAC1B82H,IAAUxlI,EAAIslI,IAAQ,EAAI52H,GAC1B+2H,EAAQ9+G,EAAI4+G,EAAQ/7H,EACpBk8H,EAAQ/+G,EAAI6+G,EAAQh8H,EACpB6vG,EAAQ12G,KAAKg4D,KAAKh4D,KAAKgjI,IAAKJ,EAAQtjE,EAAK,GACxCt/D,KAAKgjI,IAAKF,EAAQvjE,EAAK,IACxBq3C,EAAQ52G,KAAKg4D,KAAKh4D,KAAKgjI,IAAKH,EAAQvjE,EAAK,GACxCt/D,KAAKgjI,IAAKD,EAAQxjE,EAAK,IAGxB0jE,EAAO,EACPC,EAAO,EAaX,OAXIxsB,EAAQE,GAEXqsB,EAAOL,EACPM,EAAOJ,IAIPG,EAAOJ,EACPK,EAAOH,GAGD,IAAIt4E,QAAQw4E,EAAMC,IAS1BC,iBAAkB,SAAUvmE,EAAQg/C,EAAQh6G,EAAMygI,GAEjD,IAAIvjF,EAAI8d,EAAO9d,EACX4L,EAAIkS,EAAOlS,EACXpE,EAAIsW,EAAOhX,MACX/+C,EAAI+1D,EAAOnX,OAEX+T,EAAK1a,EAAIwH,EAAI,EACbiX,EAAK7S,EAAI7jD,EAAI,EAEby4D,EAAK19D,EAAKk9C,EACVygB,EAAK39D,EAAK8oD,EAGd,GAAI8O,GAAM8F,EAET,OAEQ,IAAI7U,QAAQ+O,EAFhB+D,EAAKgC,EAEe7U,EAIAA,EAAI7jD,GAGxB,GAAI02D,GAAMgC,EAEd,OAEQ,IAAI9U,QAFR+O,EAAK8F,EAEWxgB,EAIAA,EAAIwH,EAJDiX,GAQxB,IAAInF,EAAKoB,EACLnB,EAAKkF,EAgBT,OAdI8kE,IAEC/iE,GAAMxgB,GAAKwgB,GAAMxgB,EAAIwH,EAExB8R,EAAKkH,EAEGC,GAAM7U,GAAK6U,GAAM7U,EAAI7jD,IAE7BwxD,EAAKkH,IAMHD,EAAK9F,EAEJ+F,EAAKhC,EAEDvX,QAAQwW,aAAa8C,EAAIC,EAAInH,EAAIC,EAAImB,EAAI9O,EAAG5L,EAAGye,GAI/CvX,QAAQwW,aAAa8C,EAAIC,EAAInH,EAAIC,EAAImB,EAAI9O,EAAI7jD,EAAGi4C,EAAGye,GAGnDgC,EAAKhC,EAENvX,QAAQwW,aAAa8C,EAAIC,EAAInH,EAAIC,EAAImB,EAAI9O,EAAG5L,EAAIwH,EAAGiX,GAInDvX,QAAQwW,aAAa8C,EAAIC,EAAInH,EAAIC,EAAImB,EAAI9O,EAAI7jD,EAAGi4C,EAAIwH,EAAGiX,IAUhE6lE,kBAAmB,SAAUxmE,EAAQg/C,EAAQh6G,EAAMygI,GAElD,IAAInoC,EAAuB,MAAV0hB,EAChBA,EAAOl0F,MAAMiiC,YAAYqS,iBAAmB,KACzCgoC,EAAW9J,GAAavwC,YAAYmR,iBACvCo/B,GAAavwC,YAAYyR,gBAEtBtc,EAAI8d,EAAO9d,EACX4L,EAAIkS,EAAOlS,EACXpE,EAAIsW,EAAOhX,MACX/+C,EAAI+1D,EAAOnX,OAEX+T,EAAK1a,EAAIwH,EAAI,EACbiX,EAAK7S,EAAI7jD,EAAI,EAEbkE,EAAQ,IAAI0/C,QAAQ3L,EAAG4L,GACvB24E,EAAS,IAAI54E,QAAQ3L,EAAIwH,EAAGiX,GAC5B1gC,EAAM,IAAI4tB,QAAQ3L,EAAG4L,EAAI7jD,GAEzBqzF,GAAavwC,YAAYmR,iBAE5B/vD,EAAQ8xB,EACRwmG,EAAS,IAAI54E,QAAQ+O,EAAI9O,GACzB7tB,EAAM,IAAI4tB,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAErBqzF,GAAavwC,YAAYyR,iBAEjCioE,EAAS,IAAI54E,QAAQ+O,EAAI9O,EAAI7jD,GAC7Bg2B,EAAM,IAAI4tB,QAAQ3L,EAAIwH,EAAGoE,IAEjBwvC,GAAavwC,YAAYwR,iBAEjCpwD,EAAQ,IAAI0/C,QAAQ3L,EAAIwH,EAAGoE,GAC3B24E,EAAS,IAAI54E,QAAQ3L,EAAGye,GACxB1gC,EAAM,IAAI4tB,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAG9B,IAAI8nC,EAAK/sC,EAAKk9C,EAAI0a,EACd3qB,EAAKjtC,EAAK8oD,EAAI6S,EAEdI,EAAQ,EAAa39D,KAAKs4D,MAAM3pB,EAAIE,GAAM7uC,KAAKs4D,MAAMzpB,EAAIF,GACzDmd,EAAI,EAAa9rD,KAAKs4D,MAAMhS,EAAGz/C,GAAK7G,KAAKs4D,MAAMzxD,EAAGy/C,GAElD59B,GAAO,EAKVA,EAHGwxE,GAAavwC,YAAYmR,iBAC5Bo/B,GAAavwC,YAAYwR,eAElBwC,GAAS7R,GAAK6R,EAAQ7R,EAItB6R,GAAS39D,KAAKu2D,GAAKzK,GAAK6R,EAAQ39D,KAAKu2D,GAAKzK,EAGlD,IAAInpD,EAAS,KAEb,GAAI+lB,EAOD/lB,EALE0/H,IAAgBr+B,GAAYpiG,EAAKk9C,GAAK/zC,EAAM+zC,GAAKl9C,EAAKk9C,GAAKjiB,EAAIiiB,IAChEklD,GAAYpiG,EAAK8oD,GAAK3/C,EAAM2/C,GAAK9oD,EAAK8oD,GAAK7tB,EAAI6tB,GAE7Cs5C,EAEM,IAAIv5C,QAAQ7oD,EAAKk9C,EAAG/zC,EAAM2/C,GAI1B,IAAID,QAAQ1/C,EAAM+zC,EAAGl9C,EAAK8oD,GAKhCwvC,GAAavwC,YAAYmR,gBAEnB,IAAIrQ,QAAQ3L,EAAIwH,EAAI,EAAIz/C,EAAI7G,KAAKyiI,IAAI9kE,GAAS,EACtDjT,EAAI7jD,GAEGqzF,GAAavwC,YAAYyR,gBAExB,IAAI3Q,QAAQ3L,EAAIwH,EAAI,EAAIz/C,EAAI7G,KAAKyiI,IAAI9kE,GAAS,EACtDjT,GAEOwvC,GAAavwC,YAAYwR,eAExB,IAAI1Q,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,EAAI,EACnCy/C,EAAItmD,KAAKyiI,IAAI9kE,GAAS,GAId,IAAIlT,QAAQ3L,EAAG4L,EAAI7jD,EAAI,EAC/By/C,EAAItmD,KAAKyiI,IAAI9kE,GAAS,OAK1B,CACC,GAAI0kE,EACJ,CACC,IAAIvoE,EAAK,IAAIrP,QAAQ+O,EAAI+D,GAErB37D,EAAK8oD,GAAKA,GAAK9oD,EAAK8oD,GAAKA,EAAI7jD,GAEhCizD,EAAGhb,EAAI,EAAa0a,EAClB0gC,GAAavwC,YAAYwR,eACzBrc,EAAIwH,EAAIxH,EACVgb,EAAGpP,EAAI9oD,EAAK8oD,GAEJ9oD,EAAKk9C,GAAKA,GAAKl9C,EAAKk9C,GAAKA,EAAIwH,IAErCwT,EAAGhb,EAAIl9C,EAAKk9C,EACZgb,EAAGpP,EAAMs5C,EACP9J,GAAavwC,YAAYmR,gBACzBpQ,EAAI7jD,EAAI6jD,EAFW6S,GAMtB5uB,EAAK/sC,EAAKk9C,EAAIgb,EAAGhb,EACjBjQ,EAAKjtC,EAAK8oD,EAAIoP,EAAGpP,EAEjB8O,EAAKM,EAAGhb,EACRye,EAAKzD,EAAGpP,EAMR/nD,EAHIqhG,GAAYpiG,EAAKk9C,GAAKA,EAAIwH,EAAI,IAChC09C,GAAYpiG,EAAK8oD,GAAKA,EAAI7jD,EAAI,EAEvBm/C,QAAQwW,aAAa56D,EAAKk9C,EAAGl9C,EAAK8oD,EAAG8O,EAAI+D,EACjDxyD,EAAM+zC,EAAG/zC,EAAM2/C,EAAG24E,EAAOvkF,EAAGukF,EAAO34E,GAI3B1E,QAAQwW,aAAa56D,EAAKk9C,EAAGl9C,EAAK8oD,EAAG8O,EAAI+D,EACjD8lE,EAAOvkF,EAAGukF,EAAO34E,EAAG7tB,EAAIiiB,EAAGjiB,EAAI6tB,GASlC,OALc,MAAV/nD,IAEHA,EAAS,IAAI8nD,QAAQ+O,EAAI+D,IAGnB56D,GASR2gI,iBAAkB,SAAU1mE,EAAQg/C,EAAQh6G,EAAMygI,GAEjD,IAAIvjF,EAAI8d,EAAO9d,EACX4L,EAAIkS,EAAOlS,EACXpE,EAAIsW,EAAOhX,MACX/+C,EAAI+1D,EAAOnX,OAEX+T,EAAKoD,EAAO9R,aACZyS,EAAKX,EAAO7R,aACZuU,EAAK19D,EAAKk9C,EACVygB,EAAK39D,EAAK8oD,EACV/b,EAAK2wB,EAAK9F,EACV3qB,EAAK0wB,EAAKhC,EACVI,GAAS39D,KAAKs4D,MAAMzpB,EAAIF,GACxB2zF,EAAKtiI,KAAKu2D,GACVgsE,EAAMviI,KAAKu2D,GAAK,EAEhB5zD,EAAS,IAAI8nD,QAAQ+O,EAAI+D,GAEzB28B,EAAuB,MAAV0hB,EAAkB51D,QAAQxb,SACzCoxE,EAAOl0F,MAAOiiC,YAAYqS,gBAC1BrS,YAAY0R,gBAAkB1R,YAAY0R,eACxC2oC,EAAW9J,GAAavwC,YAAYmR,iBACnCo/B,GAAavwC,YAAYyR,gBAC1Bh8D,EAAI,IAAIqrD,QACR9pD,EAAI,IAAI8pD,QASZ,IANK6U,EAAKxgB,GAAOygB,EAAK7U,GAAO4U,EAAKxgB,GAAOygB,EAAK7U,EAAI7jD,GAC5Cy4D,EAAKxgB,EAAIwH,GAAOiZ,EAAK7U,GAAO4U,EAAKxgB,EAAIwH,GAAOiZ,EAAK7U,EAAI7jD,KAE1Dw7H,GAAa,GAGVA,EACJ,CACC,GAAIr+B,EACJ,CAEC,GAAI1kC,GAAM9F,EACV,CACC,GAAI+F,GAAM7U,EAET,OAAO,IAAID,QAAQ+O,EAAI9O,GAEnB,GAAI6U,GAAM7U,EAAI7jD,EAElB,OAAO,IAAI4jD,QAAQ+O,EAAI9O,EAAI7jD,QAGxB,GAAIy4D,EAAKxgB,EACd,CACC,GAAIygB,GAAM7U,EAAI7jD,EAAI,EAEjB,OAAO,IAAI4jD,QAAQ3L,EAAG4L,EAAI7jD,EAAI,GAE1B,GAAI04D,GAAM7U,EAAI,EAAI7jD,EAAI,EAE1B,OAAO,IAAI4jD,QAAQ3L,EAAG4L,EAAI,EAAI7jD,EAAI,QAG/B,GAAIy4D,EAAKxgB,EAAIwH,EAClB,CACC,GAAIiZ,GAAM7U,EAAI7jD,EAAI,EAEjB,OAAO,IAAI4jD,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,EAAI,GAE9B,GAAI04D,GAAM7U,EAAI,EAAI7jD,EAAI,EAE1B,OAAO,IAAI4jD,QAAQ3L,EAAIwH,EAAGoE,EAAI,EAAI7jD,EAAI,QAGnC,GAAIy4D,GAAMxgB,EACf,CACC,GAAIygB,EAAKhC,EAER,OAAO,IAAI9S,QAAQ3L,EAAG4L,EAAI7jD,EAAI,GAE1B,GAAI04D,EAAKhC,EAEb,OAAO,IAAI9S,QAAQ3L,EAAG4L,EAAI,EAAI7jD,EAAI,QAG/B,GAAIy4D,GAAMxgB,EAAIwH,EACnB,CACC,GAAIiZ,EAAKhC,EAER,OAAO,IAAI9S,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,EAAI,GAE9B,GAAI04D,EAAKhC,EAEb,OAAO,IAAI9S,QAAQ3L,EAAIwH,EAAGoE,EAAI,EAAI7jD,EAAI,GAGxC,GAAI04D,GAAM7U,EAET,OAAO,IAAID,QAAQ+O,EAAI9O,GAEnB,GAAI6U,GAAM7U,EAAI7jD,EAElB,OAAO,IAAI4jD,QAAQ+O,EAAI9O,EAAI7jD,GAGxBy4D,EAAK9F,EAEH+F,EAAK7U,EAAI7jD,EAAI,GAAO04D,EAAK7U,EAAI,EAAI7jD,EAAI,GAEzCzH,EAAI,IAAIqrD,QAAQ3L,EAAG4L,GACnB/pD,EAAI,IAAI8pD,QAAQ3L,EAAG4L,EAAI7jD,IAEf04D,EAAK7U,EAAI7jD,EAAI,GAErBzH,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,IAAO4G,KAErC04D,EAAK7U,EAAI,EAAI7jD,EAAI,IAEzBzH,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,KAAO4G,KAGtCy4D,EAAK9F,IAER+F,EAAK7U,EAAI7jD,EAAI,GAAO04D,EAAK7U,EAAI,EAAI7jD,EAAI,GAEzCzH,EAAI,IAAIqrD,QAAQ3L,EAAIwH,EAAGoE,GACvB/pD,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAEnB04D,EAAK7U,EAAI7jD,EAAI,GAErBzH,EAAI,IAAIqrD,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,IAAO4G,IACzClG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,KAEb04D,EAAK7U,EAAI,EAAI7jD,EAAI,IAEzBzH,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,KAAO4G,UAM5C,CAEC,GAAI04D,GAAMhC,EACV,CACC,GAAI+B,GAAMxgB,EAET,OAAO,IAAI2L,QAAQ3L,EAAG4L,EAAI7jD,EAAI,GAE1B,GAAIy4D,GAAMxgB,EAAIwH,EAElB,OAAO,IAAImE,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,EAAI,QAG/B,GAAI04D,EAAK7U,EACd,CACC,GAAI4U,GAAMxgB,EAAIwH,EAAI,EAEjB,OAAO,IAAImE,QAAQ3L,EAAIwH,EAAI,EAAGoE,GAE1B,GAAI4U,GAAMxgB,EAAI,EAAIwH,EAAI,EAE1B,OAAO,IAAImE,QAAQ3L,EAAI,EAAIwH,EAAI,EAAGoE,QAG/B,GAAI6U,EAAK7U,EAAI7jD,EAClB,CACC,GAAIy4D,GAAMxgB,EAAIwH,EAAI,EAEjB,OAAO,IAAImE,QAAQ3L,EAAIwH,EAAI,EAAGoE,EAAI7jD,GAE9B,GAAIy4D,GAAMxgB,EAAI,EAAIwH,EAAI,EAE1B,OAAO,IAAImE,QAAQ3L,EAAI,EAAIwH,EAAI,EAAGoE,EAAI7jD,QAGnC,GAAI04D,GAAM7U,EACf,CACC,GAAI4U,EAAK9F,EAER,OAAO,IAAI/O,QAAQ3L,EAAIwH,EAAI,EAAGoE,GAE1B,GAAI4U,EAAK9F,EAEb,OAAO,IAAI/O,QAAQ3L,EAAI,EAAIwH,EAAI,EAAGoE,QAG/B,GAAI6U,GAAM7U,EAAI7jD,EACnB,CACC,GAAIy4D,EAAK9F,EAER,OAAO,IAAI/O,QAAQ3L,EAAIwH,EAAI,EAAGoE,EAAI7jD,GAE9B,GAAI04D,EAAKhC,EAEb,OAAO,IAAI9S,QAAQ3L,EAAI,EAAIwH,EAAI,EAAGoE,EAAI7jD,GAGxC,GAAIy4D,GAAMxgB,EAET,OAAO,IAAI2L,QAAQ3L,EAAGye,GAElB,GAAI+B,GAAMxgB,EAAIwH,EAElB,OAAO,IAAImE,QAAQ3L,EAAIwH,EAAGiX,GAGvBgC,EAAKhC,EAEH+B,EAAKxgB,EAAIwH,EAAI,GAAOgZ,EAAKxgB,EAAI,EAAIwH,EAAI,GAEzClnD,EAAI,IAAIqrD,QAAQ3L,EAAG4L,GACnB/pD,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,IAEf4U,EAAKxgB,EAAIwH,EAAI,GAErBlnD,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,EAAI7jD,GAC9ClG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,KAEby4D,EAAKxgB,EAAI,EAAIwH,EAAI,IAEzBlnD,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,KAAOqmD,GAAIoE,EAAI7jD,IAGvC04D,EAAKhC,IAER+B,EAAKxgB,EAAIwH,EAAI,GAAOgZ,EAAKxgB,EAAI,EAAIwH,EAAI,GAEzClnD,EAAI,IAAIqrD,QAAQ3L,EAAG4L,EAAI7jD,GACvBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAEnBy4D,EAAKxgB,EAAIwH,EAAI,GAErBlnD,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,GAC1C/pD,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,IAAM4G,KAEby4D,EAAKxgB,EAAI,EAAIwH,EAAI,IAEzBlnD,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,IAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,KAAOqmD,GAAIoE,KAK7C,IAAI0N,EAAKoB,EACLnB,EAAKkF,EAEL+B,GAAMxgB,GAAKwgB,GAAMxgB,EAAIwH,GAExB8R,EAAKkH,EAIJjH,EAFGkH,EAAKhC,EAEH7S,EAAI7jD,EAIJ6jD,GAGE6U,GAAM7U,GAAK6U,GAAM7U,EAAI7jD,IAE7BwxD,EAAKkH,EAIJnH,EAFGkH,EAAK9F,EAEH1a,EAAIwH,EAIJxH,GAIPn8C,EAASqjD,QAAQwW,aAAapE,EAAIC,EAAIz2D,EAAKk9C,EAAGl9C,EAAK8oD,EAAGtrD,EAAE0/C,EAAG1/C,EAAEsrD,EAAG/pD,EAAEm+C,EAAGn+C,EAAE+pD,OAGxE,CACC,GAAIs5C,EACJ,CACC,IAAIw+B,EAAOxiI,KAAKs4D,MAAMzxD,EAAI,EAAGy/C,EAAI,GAGjC,GAAIqX,GAAS6kE,EAEZ,OAAO,IAAI/3E,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,IAAO4G,IAE5C,GAAI82D,GAAS4kE,EAEjB,OAAO,IAAI93E,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,GAExC,GAAIiT,GAAU2kE,EAAKE,EAEvB,OAAO,IAAI/3E,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,IAAO4G,IAExC,GAAI82D,IAAU6kE,EAElB,OAAO,IAAI/3E,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,IAAO4G,IAE5C,GAAI82D,IAAW4kE,EAEnB,OAAO,IAAI93E,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EAAI7jD,GAE5C,GAAI82D,IAAW2kE,EAAKE,EAExB,OAAO,IAAI/3E,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,IAAO4G,IAGxC82D,EAAQ6kE,GAAU7kE,GAAS6kE,GAE/BpjI,EAAI,IAAIqrD,QAAQ3L,EAAIwH,EAAGoE,GACvB/pD,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAElB82D,EAAQ6kE,GAAU7kE,EAAQ4kE,GAEnCnjI,EAAI,IAAIqrD,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,IAAO4G,IACzClG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,KAEZ82D,EAAQ4kE,GAAS5kE,EAAS2kE,EAAKE,GAExCpjI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,IAAO4G,KAEnC82D,EAAS2kE,EAAKE,GAAW7kE,GAAS2kE,GACtC3kE,GAAU2kE,EAAKE,GAAW7kE,IAAU2kE,GAE1CljI,EAAI,IAAIqrD,QAAQ3L,EAAG4L,GACnB/pD,EAAI,IAAI8pD,QAAQ3L,EAAG4L,EAAI7jD,IAEd82D,GAAS6kE,GAAU7kE,GAAS4kE,GAErCnjI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,KAAO4G,KAEhC82D,GAAS4kE,GAAS5kE,GAAU2kE,EAAKE,IAE1CpjI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,KAAO4G,SAI/C,CACK27H,EAAOxiI,KAAKs4D,MAAMzxD,EAAI,EAAGy/C,EAAI,GAGjC,GAAIqX,GAAS6kE,EAEZ,OAAO,IAAI/3E,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,GAEzC,GAAIiT,GAAU2kE,EAAKE,EAEvB,OAAO,IAAI/3E,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,GAEzC,GAAKiT,GAAS2kE,GAAQ3kE,IAAU2kE,EAEpC,OAAO,IAAI73E,QAAQ3L,EAAG4L,EAAI1qD,KAAKC,MAAM,GAAM4G,IAEvC,GAAa,GAAT82D,EAER,OAAO,IAAIlT,QAAQ3L,EAAIwH,EAAGoE,EAAI1qD,KAAKC,MAAM,GAAM4G,IAE3C,GAAI82D,IAAU6kE,EAElB,OAAO,IAAI/3E,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,EAAI7jD,GAE7C,GAAI82D,IAAW2kE,EAAKE,EAExB,OAAO,IAAI/3E,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,EAAI7jD,GAG7C82D,EAAQ,GAAOA,EAAQ6kE,GAE3BpjI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,KAAOqmD,GAAIoE,EAAI7jD,IAErC82D,EAAQ6kE,GAAU7kE,EAAS2kE,EAAKE,GAEzCpjI,EAAI,IAAIqrD,QAAQ3L,EAAG4L,GACnB/pD,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,IAEdiT,EAAS2kE,EAAKE,GAAW7kE,EAAQ2kE,GAE1CljI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,EAAI7jD,GAC9ClG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,GAAM4G,KAEZ82D,EAAQ,GAAOA,GAAS6kE,GAEjCpjI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,IAAM4G,IACrBlG,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,KAAOqmD,GAAIoE,IAEjCiT,GAAS6kE,GAAU7kE,GAAU2kE,EAAKE,GAE3CpjI,EAAI,IAAIqrD,QAAQ3L,EAAG4L,EAAI7jD,GACvBlG,EAAI,IAAI8pD,QAAQ3L,EAAIwH,EAAGoE,EAAI7jD,IAElB82D,GAAU2kE,EAAKE,GAAW7kE,GAAS2kE,IAE5CljI,EAAI,IAAIqrD,QAAQ3L,EAAI9+C,KAAKC,MAAM,IAAOqmD,GAAIoE,GAC1C/pD,EAAI,IAAI8pD,QAAQ3L,EAAI9+C,KAAKC,MAAM,GAAMqmD,GAAIoE,EACrC1qD,KAAKC,MAAM,IAAM4G,KAIvBlE,EAASqjD,QAAQwW,aAAahD,EAAI+D,EAAI37D,EAAKk9C,EAAGl9C,EAAK8oD,EAAGtrD,EAAE0/C,EAAG1/C,EAAEsrD,EAAG/pD,EAAEm+C,EAAGn+C,EAAE+pD,GAGxE,OAAc,MAAV/nD,EAEI,IAAI8nD,QAAQ+O,EAAI+D,GAGjB56D,IAoLT,SAAS4gI,eAAer3E,EAAOe,EAAOmX,EAAYC,EAAQ1N,EAAIC,EAAI0xC,EAAapjD,EAAOs+E,GAErF1jI,KAAKosD,MAAQA,EACbpsD,KAAKmtD,MAAkB,MAATA,EAAiBA,EAAQ,EAAIf,EAAMu3E,UACjD3jI,KAAKukE,OAAoB,MAAVA,EAAkBA,EAAS,EAC1CvkE,KAAKskE,WAAazZ,YAAYoB,cAA6B,MAAdqY,EAAsBA,EAAalY,EAAMkY,YACtFtkE,KAAKolD,MAAkB,MAATA,EAAiBA,EAAQ,2BACvCplD,KAAK62D,GAAY,MAANA,EAAcA,EAAK,EAC9B72D,KAAK82D,GAAY,MAANA,EAAcA,EAAK,EAC9B92D,KAAKwoG,YAAcA,EACnBxoG,KAAK0jI,aAAgC,MAAhBA,GAAwBA,EAkkC9C,SAASE,eAER5jI,KAAK2mC,OAAS,IAAItoC,OAElB2B,KAAK6jI,sBAAsB7jI,KAAK8jI,4BAChC9jI,KAAK+jI,oBAAoB/jI,KAAKgkI,0BAgP/B,SAASC,YAAYtmE,EAAM3Q,EAAMplC,GAEhC5nB,KAAK29D,KAAOA,EACZ39D,KAAKgtD,KAAOA,EACZhtD,KAAK4nB,MAAkB,MAATA,EAAiBA,EAAQ,GAEvC5nB,KAAK4+D,OAAS,IAAIjU,QAClB3qD,KAAKkkI,eAAiB,IAAIv5E,QAgc3B,SAASw5E,sBAAsB/3E,GAE9BpsD,KAAKosD,MAAQA,EACbpsD,KAAKogE,MAAQ,GAwVd,SAASgkE,kBAAkBC,EAAgBC,EAAO/2F,GAEjDvtC,KAAKqkI,eAAiBA,EACtBrkI,KAAKskI,MAAkB,MAATA,EAAiBA,EAAMh6H,QAAU,KAC/CtK,KAAKutC,QAAsB,MAAXA,EAAmBA,EAAQjjC,QAAU,KA2JtD,SAASi6H,aAAan4E,GAErBpsD,KAAKosD,MAAQA,EAGbpsD,KAAKwkI,YAAct+E,QAAQ1jD,KAAKxC,MAAM,WAEjCA,KAAKosD,MAAMq4E,aAEdzkI,KAAK4lD,YAIP5lD,KAAKosD,MAAMuR,KAAKpW,YAAYC,QAAQk4B,MAAO1/E,KAAKwkI,aAChDxkI,KAAKosD,MAAMuR,KAAKpW,YAAYC,QAAQo4B,oBAAqB5/E,KAAKwkI,aAG9DxkI,KAAKixF,cAAgB/qC,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAExB,MAApBtnD,KAAK0kI,aAA0E,MAAnD1kI,KAAKosD,MAAMU,UAAUC,SAAS/sD,KAAK0kI,cAElE1kI,KAAK2kI,aAAY,MAInB3kI,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKixF,eAklCxD,SAAS2zC,kBA7hHTjkF,WAAW0hF,YAAqC,qBAAhBA,YAA8BA,iBAAc9hI,EAkM5EkjI,eAAe/jI,UAAU0sD,MAAQ,KAOjCq3E,eAAe/jI,UAAU4kE,WAAa,KAOtCm/D,eAAe/jI,UAAUytD,MAAQ,KAQjCs2E,eAAe/jI,UAAU6kE,OAAS,EAOlCk/D,eAAe/jI,UAAU2oF,UAAY,EAOrCo7C,eAAe/jI,UAAUy+G,aAAe,EAOxCslB,eAAe/jI,UAAUm3D,GAAK,EAO9B4sE,eAAe/jI,UAAUo3D,GAAK,EAS9B2sE,eAAe/jI,UAAUmlI,YAAa,EAOtCpB,eAAe/jI,UAAUolI,eAAgB,EAQzCrB,eAAe/jI,UAAUqlI,eAAgB,EAOzCtB,eAAe/jI,UAAUslI,sBAAuB,EAOhDvB,eAAe/jI,UAAU8tF,gBAAkB,UAO3Ci2C,eAAe/jI,UAAU8oG,YAAc,KAOvCi7B,eAAe/jI,UAAU0lD,MAAQ,KAQjCq+E,eAAe/jI,UAAUgkI,aAAe,KAOxCD,eAAe/jI,UAAU0+D,IAAM,KAO/BqlE,eAAe/jI,UAAUulI,aAAe,KAOxCxB,eAAe/jI,UAAU2kE,UAAY,EASrCo/D,eAAe/jI,UAAUwlI,UAAW,EAOpCzB,eAAe/jI,UAAUylI,UAAY,WAEpC,OAAOnlI,KAAKo+D,KAUbqlE,eAAe/jI,UAAU0lI,WAAa,WAErC,IAAIh9E,EAAK,GAgBT,OAd6B,GAAzBntC,SAASkmC,aAEZiH,EAAK,qDAE4B,GAAzBntC,SAASkmC,aAEjBiH,EAAK,qDAEGntC,SAASkmC,aAAe,IAGhCiH,EAAK,uFAGCA,GAcRq7E,eAAe/jI,UAAU2lI,YAAc,SAASj5E,EAAOe,EAAO0J,EAAIC,EAAIwuE,EAAiBC,GAEtFvlI,KAAKosD,MAAQA,EACbpsD,KAAKmtD,MAAkB,MAATA,EAAiBA,EAAQ,EAAIf,EAAMu3E,UACjD3jI,KAAK62D,GAAKA,EACV72D,KAAK82D,GAAKA,EACV92D,KAAKs1C,KAAK,KAAM,KAAMgwF,EAAiBC,IAexC9B,eAAe/jI,UAAU41C,KAAO,SAAS3Q,EAAKsgG,EAAcK,EAAiBC,GAI5E,IAAIC,EAA4BxlI,KAAKosD,MAAMmB,aAAak4E,kBACpD7iE,EAAM,KAEV,IAIK5iE,KAAK8kI,gBAER9kI,KAAKosD,MAAMmB,aAAak4E,kBAAoB,SAAS30F,EAAO40F,GAE3DA,EAAQhhH,KAAKosB,EAAM6sB,KAAKgoE,iBAItB3lI,KAAK+kI,gBAER/kI,KAAKosD,MAAMmB,aAAaq4E,YAAc,SAAS90F,EAAO+0F,EAASC,EAAcC,GAE5EF,EAAQpiE,QAAU3yB,EAAM6sB,KAAKvR,MAAMqX,QACnCoiE,EAAQnhH,KAAKosB,EAAM6sB,KAAKgoE,iBAI1B3lI,KAAKo+D,IAAuB,MAAhB6mE,EAAwBA,EAAejlI,KAAKo+D,IACxD,IAAI4nE,GAAc,EAEF,MAAZhmI,KAAKo+D,MAER4nE,GAAc,EACdhmI,KAAKo+D,IAAM3vD,OAAO6mC,QAGnB,IAAI+N,EAAMrjD,KAAKo+D,IAAInjD,SAEnB,GAAI+qH,EACJ,CACC,IAAI59E,EAAKpoD,KAAKolI,aAEJ,MAANh9E,GAAcA,EAAGxnD,OAAS,GAE7ByiD,EAAIuE,QAAQQ,GAGTxH,SAASuB,OAEZkB,EAAIuE,QAAQ,qGAIgB,eAAxB3sC,SAAS4qC,YAEZxC,EAAIuE,QAAQ,mBAGbvE,EAAIuE,QAAQ,WAGbvE,EAAIuE,QAAQ,UACZ5nD,KAAKimI,UAAU5iF,EAAK1e,GACpB0e,EAAIuE,QAAQ,WACZvE,EAAIuE,QAAQ,yBAIb,IAAIkV,EAAS98D,KAAKosD,MAAMwY,iBAAiBpgD,QACrC0hH,EAAelmI,KAAKosD,MAAMU,UAAUgY,WACpCD,EAAKqhE,EAAelmI,KAAKmtD,MACzB5H,EAAKvlD,KAAKosD,MAAMU,UAAUgX,eAGzB9jE,KAAK6kI,aAET7kI,KAAK62D,IAAMtR,EAAGvG,EAAIh/C,KAAKmtD,MACvBntD,KAAK82D,IAAMvR,EAAGqF,EAAI5qD,KAAKmtD,MACvB2P,EAAOhX,OAASgX,EAAO9d,EACvB8d,EAAOnX,QAAUmX,EAAOlS,EACxBkS,EAAO9d,EAAI,EACX8d,EAAOlS,EAAI,EACX5qD,KAAKukE,OAAS,GAIf,IAAIy/C,EAAiBhkH,KAAKskE,WAAWxe,MAAuB,EAAd9lD,KAAKukE,OAC/C4hE,EAAkBnmI,KAAKskE,WAAW3e,OAAwB,EAAd3lD,KAAKukE,OAGrDvkE,KAAKskE,WAAW3e,QAAU3lD,KAAKqoF,UAAYroF,KAAKm+G,aAIhDrhD,EAAOhX,OAAS+e,EAChB/H,EAAOnX,QAAUkf,EAEjB,IAAIuhE,EAASlmI,KAAKwD,IAAI,EAAGxD,KAAKD,MAAM68D,EAAOhX,MAAQ9lD,KAAK62D,IAAMmtD,IAC1DqiB,EAASnmI,KAAKwD,IAAI,EAAGxD,KAAKD,MAAM68D,EAAOnX,OAAS3lD,KAAK82D,IAAMqvE,IAC/DnmI,KAAKqkE,UAAY+hE,EAASC,EAE1B,IAAIC,EAAoBpgF,QAAQ1jD,KAAKxC,MAAM,WAE1C,GAAIA,KAAK0jI,eAAiB2C,EAAS,GAAKD,EAAS,GACjD,CACC,IAAI/gF,EAAQrlD,KAAKumI,mBAAmBF,EAAQD,GAI5C,GAHA/iF,EAAIpV,KAAKvV,YAAY2sB,GAGjBzE,SAASE,OAA6B,MAApBuC,EAAIlC,cAA4C,GAApBkC,EAAIlC,cAAyC,GAApBkC,EAAIlC,cAAyC,GAApBkC,EAAIlC,aACxG,CACCkE,EAAMz9B,MAAM44B,SAAW,WAEvB,IAAIpvC,EAAS,WAEZi0C,EAAMz9B,MAAMonB,KAAQqU,EAAIpV,KAAKqa,WAAajF,EAAIT,gBAAgB0F,WAAa,GAAM,MAGlFd,QAAQD,YAAYvnD,KAAKo+D,IAAK,UAAU,SAASpY,GAEhD50C,OAGDo2C,QAAQD,YAAYvnD,KAAKo+D,IAAK,UAAU,SAASpY,GAEhD50C,YAMAo1H,EAAUtgF,QAAQ1jD,KAAKxC,MAAM,SAAS4iE,EAAK6rB,GA2B9C,GAxBwB,MAApBzuF,KAAKwoG,cAER5lC,EAAIh7C,MAAM4gF,YAAcxoG,KAAKwoG,YAC7B5lC,EAAIh7C,MAAMs4C,YAAc,QACxB0C,EAAIh7C,MAAM6gF,YAAc,OAKzB7lC,EAAIh7C,MAAMknF,WAAa9uG,KAAKwtF,iBAExB83C,GAAmB72C,KAEtB7rB,EAAIh7C,MAAM6+G,eAAiB,UAWxBT,IAAgBplF,SAASE,OAAS7lC,SAASkmC,cAAgB,IAAMP,SAASK,SAM7EoC,EAAIuE,QAAQgb,EAAI7P,WAChB6P,EAAInsC,WAAWgC,YAAYmqC,QAEvB,GAAIhiB,SAASE,OAAS7lC,SAASkmC,cAAgB,IAAMP,SAASK,QACnE,CACC,IAAIz8B,EAAQ6+B,EAAIlkD,cAAc,OAC9BqlB,EAAM+Y,UAAYqlC,EAAI7P,UACtBvuC,EAAQA,EAAM8+B,qBAAqB,OAAO,GAC1CD,EAAIpV,KAAKvV,YAAYlU,GACrBo+C,EAAInsC,WAAWgC,YAAYmqC,QAI3BA,EAAInsC,WAAWgC,YAAYmqC,GAC3Bvf,EAAIpV,KAAKvV,YAAYkqC,IAGlB0iE,GAAmB72C,IAEtBzuF,KAAK0mI,aAAarjF,MAIhBsjF,EAAM3mI,KAAK4mI,cAAc5mI,KAAKskE,WAAWxe,MAAO9lD,KAAKskE,WAAW3e,QAEpE,GAAW,MAAPghF,EAEH,IAAK,IAAIz9H,EAAI,EAAGA,EAAIy9H,EAAI/lI,OAAQsI,IAE/Bs9H,EAAQG,EAAIz9H,IAAI,GAIlB,IAAI29H,EAAM7mI,KAAK8mI,cAAc9mI,KAAKskE,WAAWxe,MAAO9lD,KAAKskE,WAAW3e,QAIpE,IAASz8C,EAAI,EAAGA,EAAIm9H,EAAQn9H,IAK3B,IAHA,IAAI6lC,EAAK7lC,EAAIi9H,EAAkBnmI,KAAKmtD,MAAQntD,KAAK82D,GAAK92D,KAAKmtD,OACxD2P,EAAOlS,EAAIrF,EAAGqF,EAAIs7E,GAAgBA,EAE5B14G,EAAI,EAAGA,EAAI44G,EAAQ54G,IAC5B,CACC,GAAgB,MAAZxtB,KAAKo+D,IAER,OAAO,KAGR,IAAIvvB,EAAKrhB,EAAIw2F,EAAiBhkH,KAAKmtD,MAAQntD,KAAK62D,GAAK72D,KAAKmtD,OACvD2P,EAAO9d,EAAIuG,EAAGvG,EAAIknF,GAAgBA,EACjCa,EAAU79H,EAAIk9H,EAAS54G,EAAI,EAC3B6uE,EAAO,IAAIxxC,YAAYhc,EAAIE,EAAIi1E,EAAgBmiB,GACnDvjE,EAAM5iE,KAAKgnI,WAAWhnI,KAAKskE,WAAWxe,MAAO9lD,KAAKskE,WAAW3e,OAAQ,EAAG,EAAGO,QAAQ1jD,KAAKxC,MAAM,SAAS4iE,GAEtG5iE,KAAKinI,kBAAkBp4F,GAAKE,EAAI/uC,KAAKmtD,MAAO45E,EAASnkE,EAAKy5B,GAEtDr8F,KAAKglI,sBAERhlI,KAAKknI,sBAAsBtkE,GAAM/zB,GAAKE,MAEpCg4F,GAGJnkE,EAAI1qC,aAAa,KAAM,UAAU6uG,GAEjCP,EAAQ5jE,EAAY,MAAPikE,GAAe39H,EAAIm9H,EAAS,GAAK74G,EAAI44G,EAAS,GAI7D,GAAW,MAAPS,EAEH,IAAS39H,EAAI,EAAGA,EAAI29H,EAAIjmI,OAAQsI,IAE/Bs9H,EAAQK,EAAI39H,GAAIA,EAAI29H,EAAIjmI,OAAS,GAI/BolI,IAAgBT,IAEnBvlI,KAAKmnI,gBACLb,KAGDtmI,KAAKo+D,IAAIiI,QAEV,MAAOp6D,GAGK,MAAP22D,GAAiC,MAAlBA,EAAInsC,YAEtBmsC,EAAInsC,WAAWgC,YAAYmqC,GAG7B,QAEC5iE,KAAKosD,MAAMmB,aAAak4E,kBAAoBD,EAG7C,OAAOxlI,KAAKo+D,KAQbqlE,eAAe/jI,UAAUgnI,aAAe,SAASrjF,GAEhD,IAAIsrC,EAAKtrC,EAAIlkD,cAAc,MAC3BwvF,EAAG1J,UAAY,cACf5hC,EAAIpV,KAAKvV,YAAYi2D,IAQtB80C,eAAe/jI,UAAUynI,cAAgB,WAExC,IAEC,GAAgB,MAAZnnI,KAAKo+D,KAAoC,MAArBp+D,KAAKo+D,IAAInjD,SACjC,CACC,IAAIooC,EAAMrjD,KAAKo+D,IAAInjD,SAEnBjb,KAAKonI,aAAa/jF,GAClBA,EAAIuE,QAAQ,WACZvE,EAAIuE,QAAQ,WACZvE,EAAI7N,QAGJgS,QAAQ0yB,QAAQ72B,EAAIpV,OAGtB,MAAOhiC,MAYRw3H,eAAe/jI,UAAUumI,UAAY,SAAS5iF,EAAK1e,GAEhC,MAAd3kC,KAAKolD,OAER/B,EAAIuE,QAAQ,UAAY5nD,KAAKolD,MAAQ,YAIlCxE,SAASuB,QAEZkB,EAAIuE,QAAQ,qGAIbhH,SAASuC,KAAK,aAAcvC,SAASoD,SAAW,kBAAmBX,GAGnEA,EAAIuE,QAAQ,2BACZvE,EAAIuE,QAAQ,kBACZvE,EAAIuE,QAAQ,8CACZvE,EAAIuE,QAAQ,6CACZvE,EAAIuE,QAAQ,uCACZvE,EAAIuE,QAAQ,KACZvE,EAAIuE,QAAQ,mBAIZvE,EAAIuE,QAAQ,kLAGZvE,EAAIuE,QAAQ,sEACZvE,EAAIuE,QAAQ,uCACZvE,EAAIuE,QAAQ,KAED,MAAPjjB,GAEH0e,EAAIuE,QAAQjjB,GAGb0e,EAAIuE,QAAQ,aAQb67E,eAAe/jI,UAAU0nI,aAAe,SAAS/jF,KAUjDogF,eAAe/jI,UAAU6mI,mBAAqB,SAASF,EAAQD,GAE9D,IAAI/iF,EAAMrjD,KAAKo+D,IAAInjD,SACfoqC,EAAQhC,EAAIlkD,cAAc,SAC9BkmD,EAAM4/B,UAAY,iBAClB5/B,EAAMntB,aAAa,SAAU,KAI7B,IAFA,IAAIotB,EAAQjC,EAAIlkD,cAAc,SAErB+J,EAAI,EAAGA,EAAIm9H,EAAQn9H,IAC5B,CAGC,IAFA,IAAIyrF,EAAMtxC,EAAIlkD,cAAc,MAEnBquB,EAAI,EAAGA,EAAI44G,EAAQ54G,IAC5B,CACC,IAAIu5G,EAAU79H,EAAIk9H,EAAS54G,EAAI,EAC3Bw/B,EAAO3J,EAAIlkD,cAAc,MACzBG,EAAI+jD,EAAIlkD,cAAc,KAI1B,GAHAG,EAAE44B,aAAa,OAAQ,WAAa6uG,GAGhCnmF,SAASW,QAAUX,SAASc,QAAUd,SAASgB,MACnD,CACC,IAAIxM,EAAK,8CAAiD2xF,EAAU,uDACpEznI,EAAE44B,aAAa,UAAWkd,GAG3B8Q,QAAQ3Q,MAAMj2C,EAAGynI,EAAS1jF,GAC1B2J,EAAKt0B,YAAYp5B,GACjBq1F,EAAIj8D,YAAYs0B,GAGjB1H,EAAM5sB,YAAYi8D,GAKnB,OAFAtvC,EAAM3sB,YAAY4sB,GAEXD,GAoBRo+E,eAAe/jI,UAAUsnI,WAAa,SAASxgF,EAAGz/C,EAAG8nC,EAAIE,EAAIkX,EAASohF,GAErE,IAAIhkF,EAAMrjD,KAAKo+D,IAAInjD,SACf2nD,EAAM3nD,SAAS9b,cAAc,OAC7B4/B,EAAM,KAEV,IAIC,GAAU,GAAN8P,GAAiB,GAANE,EACf,CACC6zB,EAAIh7C,MAAM44B,SAAW,WACrBoiB,EAAIh7C,MAAMk+B,MAAQU,EAAI,KACtBoc,EAAIh7C,MAAM+9B,OAAS5+C,EAAI,KACvB67D,EAAIh7C,MAAM0/G,gBAAkB,QAE5B,IAAIC,EAAWtsH,SAAS9b,cAAc,OACtCooI,EAAS3/G,MAAM44B,SAAW,WAC1B+mF,EAAS3/G,MAAMonB,IAAMhvC,KAAKukE,OAAS,KACnCgjE,EAAS3/G,MAAMknB,KAAO9uC,KAAKukE,OAAS,KACpCgjE,EAAS3/G,MAAMk+B,MAASU,EAAI,EAAIxmD,KAAKukE,OAAU,KAC/CgjE,EAAS3/G,MAAM+9B,OAAU5+C,EAAI,EAAI/G,KAAKukE,OAAU,KAChDgjE,EAAS3/G,MAAMonC,SAAW,SAE1B,IAAIw4E,EAAWvsH,SAAS9b,cAAc,OACtCqoI,EAAS5/G,MAAM44B,SAAW,WAC1BgnF,EAAS5/G,MAAM2/D,WAAa14C,EAAK,KACjC24F,EAAS5/G,MAAMygE,UAAYt5C,EAAK,KAGR,GAApBsU,EAAIlC,eAEPomF,EAAS3/G,MAAM44B,SAAW,WAC1BgnF,EAAS5/G,MAAM44B,SAAW,YAGH,IAApB6C,EAAIlC,eAEPqmF,EAAS5/G,MAAMk+B,MAAQ,OACvB0hF,EAAS5/G,MAAM+9B,OAAS,QAGzB4hF,EAAS7uG,YAAY8uG,GACrB5kE,EAAIlqC,YAAY6uG,GAChBtsH,SAASgzB,KAAKvV,YAAYkqC,GAC1B7jC,EAAMyoG,MAIP,CACC5kE,EAAIh7C,MAAMk+B,MAAQU,EAAI,KACtBoc,EAAIh7C,MAAM+9B,OAAS5+C,EAAI,KACvB67D,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAM0/G,gBAAkB,QAGJ,GAApBjkF,EAAIlC,eAEPyhB,EAAIh7C,MAAM44B,SAAW,YAGlB+mF,EAAWtsH,SAAS9b,cAAc,OACtCooI,EAAS3/G,MAAMk+B,MAASU,EAAI,EAAIxmD,KAAKukE,OAAU,KAC/CgjE,EAAS3/G,MAAM+9B,OAAU5+C,EAAI,EAAI/G,KAAKukE,OAAU,KAChDgjE,EAAS3/G,MAAMonC,SAAW,UAEtBpO,SAASE,OAA8B,MAApBuC,EAAIlC,cAA4C,GAApBkC,EAAIlC,cAAyC,GAApBkC,EAAIlC,cAAyC,GAApBkC,EAAIlC,cAOxGomF,EAAS3/G,MAAMonB,IAAMhvC,KAAKukE,OAAS,KACnCgjE,EAAS3/G,MAAMknB,KAAO9uC,KAAKukE,OAAS,OANpCgjE,EAAS3/G,MAAMygE,UAAYroF,KAAKukE,OAAS,KACzCgjE,EAAS3/G,MAAM2/D,WAAavnF,KAAKukE,OAAS,MAQvCvkE,KAAKosD,MAAMqX,SAAW5Z,YAAYoe,cAErCs/D,EAAS3/G,MAAM44B,SAAW,YAG3BoiB,EAAIlqC,YAAY6uG,GAChBtsH,SAASgzB,KAAKvV,YAAYkqC,GAC1B7jC,EAAMwoG,GAGR,MAAOt7H,GAKN,MAHA22D,EAAInsC,WAAWgC,YAAYmqC,GAC3BA,EAAM,KAEA32D,EAKP,OAFAg6C,EAAQlnB,GAED6jC,GAQR6gE,eAAe/jI,UAAUyjE,QAAU,WAElC,IAAI6uB,EAAOhyF,KAAKosD,MAAMuR,KAAKmhD,YAO3B,OALY,MAAR9sB,IAEHA,EAAOhyF,KAAKosD,MAAM8W,WAAWC,WAGvB6uB,GAiBRyxC,eAAe/jI,UAAUunI,iBAAmB,SAASp4F,EAAIE,EAAIoe,EAAOk6E,EAAYzkE,EAAKy5B,GAEpF,IAAI1+B,EAAO39D,KAAKosD,MAAMU,UAClB26E,EAAoBznI,KAAKosD,MAAM2R,UACnC/9D,KAAKosD,MAAM2R,UAAY6E,EAEvB,IAAIgB,EAASjG,EAAK+pE,YACdC,EAAiBhqE,EAAKiqE,oBACtBrkE,EAAW5F,EAAKgoE,cAChBniE,EAAc7F,EAAK8nC,iBAEvB,GAAIzlG,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,aAKrC,GAHA/F,EAAKkpC,aAGAjmD,SAAS0B,MACd,CACC,IAAIlC,EAAIud,EAAKgoE,cAAclvG,WAChB2pB,EAAE7b,aAAa,aAC1B6b,EAAEloB,aAAa,kBAAmB,OAClCkoB,EAAEloB,aAAa,YAAa,SAAWi1B,EAAQ,IAAMA,EAAQ,cAC7Cte,EAAK,IAAME,EAAK,KAEhCoe,EAAQ,EACRte,EAAK,EACLE,EAAK,QAGE/uC,KAAKosD,MAAMqX,SAAW5Z,YAAYoe,YAE1CtK,EAAKopC,YAILppC,EAAKmpC,aAIN,IAAI1jC,EAAgBzF,EAAK0F,kBACzB1F,EAAK2F,kBAAiB,GAGtB,IAAIukE,EAAe7nI,KAAKosD,MAAM+B,YAC9BnuD,KAAKosD,MAAMi+B,YAAW,GAGtB,IAAIxmB,EAAYlG,EAAKmG,eACrBnG,EAAKkG,UAAY,IAAIlZ,QAAQ9b,EAAIE,GAGjC,IAAIye,EAASxtD,KAAKosD,MAAMmB,aAAaC,OACjC4pC,EAASz5B,EAAKy5B,OACd5vD,EAAIm2B,EAAKxQ,MAGb,GAAIntD,KAAKklI,SACT,CACC,IAAI4C,EAAW,IAAIj9E,aAAawxC,EAAKr9C,EAAI6kB,EAAU7kB,GAAKxX,GAAI60D,EAAKzxC,EAAIiZ,EAAUjZ,GAAKpjB,EAClF60D,EAAKv2C,MAAQte,EAAI2lB,EAAOkvC,EAAK12C,OAASne,EAAI2lB,GAI5CntD,KAAKosD,MAAMmB,aAAaC,OAAS,SAAS1c,EAAOnpB,EAAOogH,GAEvD,GAAa,MAATj3F,EACJ,CAEC,IAAIk3F,EAAO5wC,EAAO/3F,IAAIyxC,EAAMkc,MAE5B,GAAY,MAARg7E,EACJ,CACC,IAAInnC,EAAOljC,EAAKnE,eAAewuE,GAAM,GAGzB,MAARnnC,GAAiB36C,QAAQ8W,WAAW8qE,EAAUjnC,IAOpDrzC,EAAOzsD,MAAMf,KAAMgB,YAIrB,IAAI+iE,EAAO,KAEX,IAIC,IAAI3D,EAAQ,CAACpgE,KAAKmjE,WAClBY,EAAO,IAAIC,sBAAsBrG,EAAMxQ,EAAOiT,EAAO,KAAMla,QAAQ1jD,KAAKxC,MAAM,SAAS8wC,GAEtF,OAAO9wC,KAAK22F,oBAAoB7lD,OAGlC,QAIC,GAAI8P,SAASE,MAEZ6c,EAAK6F,YAAYjmC,UAAY,GAC7BogC,EAAKiG,OAAOh8C,MAAMonC,SAAW,SAC7B2O,EAAKiG,OAAOh8C,MAAM44B,SAAW,WAC7Bmd,EAAKiG,OAAOh8C,MAAMonB,IAAMhvC,KAAKqoF,UAAY,KACzC1qB,EAAKiG,OAAOh8C,MAAMk+B,MAAQu2C,EAAKv2C,MAAQ,KACvC6X,EAAKiG,OAAOh8C,MAAM+9B,OAAS02C,EAAK12C,OAAS,SAG1C,CAEC,IAAIh2B,EAAMizC,EAAInlC,WAEd,MAAc,MAAP9N,EACP,CACC,IAAI7tB,EAAO6tB,EAAIgJ,YACX76B,EAAO6xB,EAAIggC,SAASxmD,cAGZ,OAARrL,GAEH6xB,EAAI/H,MAAMonC,SAAW,SACrBr/B,EAAI/H,MAAM44B,SAAW,WACrB7wB,EAAI/H,MAAMonB,IAAMhvC,KAAKqoF,UAAY,KACjC14D,EAAIuI,aAAa,QAASmkE,EAAKv2C,OAC/Bn2B,EAAIuI,aAAa,SAAUmkE,EAAK12C,QAChCh2B,EAAI/H,MAAMk+B,MAAQ,GAClBn2B,EAAI/H,MAAM+9B,OAAS,IAGS,WAApBh2B,EAAI/H,MAAM6mC,QAA+B,OAAR3wD,GAEzC6xB,EAAI8G,WAAWgC,YAAY9I,GAG5BA,EAAM7tB,GAKR,GAAI9B,KAAKglI,qBACT,CACC,IAAIiD,EAAOrlE,EAAItf,qBAAqB,OAEhC2kF,EAAKrnI,OAAS,IAEjBqnI,EAAK,GAAGrgH,MAAM44B,SAAW,YAK3Bmd,EAAK6F,YAAY/sC,WAAWgC,YAAYklC,EAAK6F,aAG7CxjE,KAAKosD,MAAMi+B,WAAWw9C,GACtB7nI,KAAKosD,MAAM2R,UAAY0pE,EACvBznI,KAAKosD,MAAMmB,aAAaC,OAASA,EACjCmQ,EAAKiG,OAASA,EACdjG,EAAKgqE,eAAiBA,EACtBhqE,EAAK4F,SAAWA,EAChB5F,EAAK6F,YAAcA,EACnB7F,EAAKkG,UAAYA,EACjBE,EAAKr+C,UACLi4C,EAAK2F,iBAAiBF,KASxBqgE,eAAe/jI,UAAUi3F,oBAAsB,SAAS7lD,GAEvD,OAAO9wC,KAAKosD,MAAM87E,eAAep3F,EAAMkc,OAQxCy2E,eAAe/jI,UAAUwnI,sBAAwB,SAAStkE,EAAK/zB,EAAIE,GAElE,IAAIk6D,EAAKjpG,KAAKosD,MAAMooC,gBAEpB,GAAU,MAANyU,EACJ,CACC,IAAItiC,EAAM1rD,SAAS9b,cAAc,OACjCwnE,EAAI/+C,MAAM44B,SAAW,WACrBmmB,EAAI/+C,MAAM2/D,WAAarnF,KAAKm8D,MAAMxtB,EAAK7uC,KAAKmtD,OAAS,KACrDwZ,EAAI/+C,MAAMygE,UAAYnoF,KAAKm8D,MAAMttB,EAAK/uC,KAAKmtD,OAAS,KACpDwZ,EAAIzuC,aAAa,QAASh4B,KAAKm8D,MAAMr8D,KAAKmtD,MAAQ87C,EAAGnjD,QACrD6gB,EAAIzuC,aAAa,SAAUh4B,KAAKm8D,MAAMr8D,KAAKmtD,MAAQ87C,EAAGtjD,SACtDghB,EAAI/xD,IAAMq0F,EAAGr0F,IAEbguD,EAAItqC,aAAaquC,EAAK/D,EAAInlC,cAS5BgmG,eAAe/jI,UAAUknI,cAAgB,WAExC,OAAO,MAQRnD,eAAe/jI,UAAUonI,cAAgB,WAExC,OAAO,MAYRrD,eAAe/jI,UAAU0mE,MAAQ,SAASzhC,GAEzC,IAAIy5B,EAAMp+D,KAAKs1C,KAAK3Q,GAET,MAAPy5B,GAEHA,EAAIgI,SASNq9D,eAAe/jI,UAAU81C,MAAQ,WAEhB,MAAZx1C,KAAKo+D,MAERp+D,KAAKo+D,IAAI5oB,QACTx1C,KAAKo+D,IAAM,OAIbzd,WAAW8iF,eAA2C,qBAAnBA,eAAiCA,oBAAiBljI,EAqErFqjI,aAAalkI,UAAUinC,OAOvBi9F,aAAalkI,UAAUokI,yBAA2B,WAEjD,IAAIl8G,EAAQ,IAAIvpB,OAUhB,OARAupB,EAAMiiC,YAAYopB,aAAeppB,YAAYgqB,gBAC7CjsD,EAAMiiC,YAAYgjB,iBAAmBw1D,YAAYC,mBACjD16G,EAAMiiC,YAAY+kB,sBAAwB/kB,YAAYuY,aACtDx6C,EAAMiiC,YAAY8kB,aAAe9kB,YAAYqY,aAC7Ct6C,EAAMiiC,YAAYqkB,iBAAmB,UACrCtmD,EAAMiiC,YAAY2kB,mBAAqB,UACvC5mD,EAAMiiC,YAAYmoB,iBAAmB,UAE9BpqD,GAQRg8G,aAAalkI,UAAUskI,uBAAyB,WAE/C,IAAIp8G,EAAQ,IAAIvpB,OAShB,OAPAupB,EAAMiiC,YAAYopB,aAAeppB,YAAY2qB,gBAC7C5sD,EAAMiiC,YAAY4mB,gBAAkB5mB,YAAYgrB,cAChDjtD,EAAMiiC,YAAY+kB,sBAAwB/kB,YAAYuY,aACtDx6C,EAAMiiC,YAAY8kB,aAAe9kB,YAAYqY,aAC7Ct6C,EAAMiiC,YAAY2kB,mBAAqB,UACvC5mD,EAAMiiC,YAAYmoB,iBAAmB,UAE9BpqD,GAYRg8G,aAAalkI,UAAUmkI,sBAAwB,SAASj8G,GAEvD5nB,KAAKmoI,aAAa,gBAAiBvgH,IAQpCg8G,aAAalkI,UAAUqkI,oBAAsB,SAASn8G,GAErD5nB,KAAKmoI,aAAa,cAAevgH,IAQlCg8G,aAAalkI,UAAU0oI,sBAAwB,WAE9C,OAAOpoI,KAAK2mC,OAAO,kBAQpBi9F,aAAalkI,UAAU2oI,oBAAsB,WAE5C,OAAOroI,KAAK2mC,OAAO,gBAwCpBi9F,aAAalkI,UAAUyoI,aAAe,SAASrqI,EAAM8pB,GAEpD5nB,KAAK2mC,OAAO7oC,GAAQ8pB,GAerBg8G,aAAalkI,UAAUm8G,aAAe,SAAS/9G,EAAMwqI,GAEpD,IAAI1gH,EAAQ0gH,EAEZ,GAAY,MAARxqI,GAAgBA,EAAK8C,OAAS,EAClC,CACC,IAAIigE,EAAQ/iE,EAAKmL,MAAM,KAKtB2e,EAHY,MAATA,GACe,KAAlB9pB,EAAKuM,OAAO,GAEJ67C,QAAQ1hC,MAAMoD,GAId,IAAIvpB,OAIZ,IAAK,IAAI6K,EAAI,EAAGA,EAAI23D,EAAMjgE,OAAQsI,IAClC,CACC,IAAIymB,EAAMkxC,EAAM33D,GACZukC,EAAM9d,EAAInmB,QAAQ,KAEtB,GAAIikC,GAAO,EACX,CACC,IAAIpwC,EAAMsyB,EAAIo0B,UAAU,EAAGtW,GACvBnwC,EAAQqyB,EAAIo0B,UAAUtW,EAAM,GAE5BnwC,GAASusD,YAAYC,YAEjBliC,EAAMvqB,GAEL6oD,QAAQ8Y,UAAU1hE,GAE1BsqB,EAAMvqB,GAAO6K,WAAW5K,GAIxBsqB,EAAMvqB,GAAOC,MAIf,CAEA,IAAIirI,EAAWvoI,KAAK2mC,OAAOhX,GAE3B,GAAgB,MAAZ44G,EAEH,IAAK,IAAIlrI,KAAOkrI,EAEf3gH,EAAMvqB,GAAOkrI,EAASlrI,KAO3B,OAAOuqB,GAGR+4B,WAAWijF,aAAuC,qBAAjBA,aAA+BA,kBAAerjI,EA4C/E0jI,YAAYvkI,UAAY,IAAImrD,YAC5Bo5E,YAAYvkI,UAAUqyB,YAAckyG,YAOpCA,YAAYvkI,UAAUi+D,KAAO,KAO7BsmE,YAAYvkI,UAAUstD,KAAO,KAQ7Bi3E,YAAYvkI,UAAUkoB,MAAQ,KAO9Bq8G,YAAYvkI,UAAU8oI,cAAe,EAOrCvE,YAAYvkI,UAAU+oI,SAAU,EAQhCxE,YAAYvkI,UAAUk/D,OAAS,KAQ/BqlE,YAAYvkI,UAAUi8D,eAAiB,KASvCsoE,YAAYvkI,UAAUwkI,eAAiB,KAOvCD,YAAYvkI,UAAUgpI,mBAAqB,KAO3CzE,YAAYvkI,UAAUipI,mBAAqB,KAO3C1E,YAAYvkI,UAAUkpI,iBAAmB,EAOzC3E,YAAYvkI,UAAUkB,OAAS,EAQ/BqjI,YAAYvkI,UAAU2O,SAAW,KAOjC41H,YAAYvkI,UAAUwtD,MAAQ,KAQ9B+2E,YAAYvkI,UAAUmS,KAAO,KAO7BoyH,YAAYvkI,UAAUg5G,cAAgB,KAatCurB,YAAYvkI,UAAUmpI,mBAAqB,SAAStkE,EAAQzH,GAK3D,GAHAyH,EAASA,GAAU,EACnBzH,EAAoB,MAAVA,EAAkBA,EAAS,IAAIjS,YAAY7qD,KAAKg/C,EAAGh/C,KAAK4qD,EAAG5qD,KAAK8lD,MAAO9lD,KAAK2lD,QAEpE,MAAd3lD,KAAKktD,OAAuC,MAAtBltD,KAAKktD,MAAMi0C,SAAgD,SAA7BnhG,KAAKktD,MAAMi0C,QAAQ/E,OAC3E,CACC,IAAIA,EAASp8F,KAAKktD,MAAMi0C,QAAQqL,cAAcxsG,KAAK4nB,MAAOk1C,EAAO9d,EAAG8d,EAAOlS,EAAGkS,EAAOhX,MAAOgX,EAAOnX,QAEnGmX,EAAO9d,EAAIo9C,EAAOp9C,EAClB8d,EAAOlS,EAAIwxC,EAAOxxC,EAClBkS,EAAOhX,MAAQ9lD,KAAKktD,MAAMi0C,QAAQyK,GAAKxP,EAAOt2C,MAC9CgX,EAAOnX,OAAS3lD,KAAKktD,MAAMi0C,QAAQ0K,GAAKzP,EAAOz2C,OAQhD,OALc,GAAV4e,GAEHzH,EAAOlR,KAAK2Y,GAGNzH,GAcRmnE,YAAYvkI,UAAUopI,yBAA2B,SAAS72F,EAAO0lC,GAE5DA,GAEwB,MAAvB33E,KAAK27D,iBAER37D,KAAK27D,eAAiB,IAGW,GAA9B37D,KAAK27D,eAAe/6D,OAEvBZ,KAAK27D,eAAe5qD,KAAKkhC,GAIzBjyC,KAAK27D,eAAe,GAAK1pB,GAKC,MAAvBjyC,KAAK27D,gBAER37D,KAAK27D,eAAiB,GACtB37D,KAAK27D,eAAe5qD,KAAK,MACzB/Q,KAAK27D,eAAe5qD,KAAKkhC,IAEa,GAA9BjyC,KAAK27D,eAAe/6D,OAE5BZ,KAAK27D,eAAe5qD,KAAKkhC,GAIzBjyC,KAAK27D,eAAe37D,KAAK27D,eAAe/6D,OAAS,GAAKqxC,GAUzDgyF,YAAYvkI,UAAUsrG,UAAY,SAASv8C,GAExB,MAAdzuD,KAAKktD,OAERltD,KAAKktD,MAAM89C,UAAUv8C,GAGL,MAAbzuD,KAAK6R,MAER7R,KAAK6R,KAAKm5F,UAAUv8C,IActBw1E,YAAYvkI,UAAUwyG,mBAAqB,SAAShuG,GAEnD,IAAIyrB,EAAM3vB,KAAK+oI,wBAAwB7kI,GAEvC,OAAe,MAAPyrB,EAAeA,EAAIq9B,KAAO,MAanCi3E,YAAYvkI,UAAUqpI,wBAA0B,SAAS7kI,GAExD,OAAO,EAAWlE,KAAK0oI,mBAAqB1oI,KAAK2oI,oBAalD1E,YAAYvkI,UAAUspI,wBAA0B,SAASC,EAAe/kI,GAEnEA,EAEHlE,KAAK0oI,mBAAqBO,EAI1BjpI,KAAK2oI,mBAAqBM,GAS5BhF,YAAYvkI,UAAUwpI,cAAgB,WAErC,OAAOlpI,KAAKmpI,YAUblF,YAAYvkI,UAAU0pI,eAAiB,WAEtC,OAAOppI,KAAKqpI,aAQbpF,YAAYvkI,UAAU4pI,mBAAqB,WAE1C,IAAI/jF,EAAKvlD,KAAK29D,KAAKkG,UACfr8B,EAAIxnC,KAAK29D,KAAKxQ,MAClBntD,KAAKmpI,WAAa,IAAIt+E,YAAY7qD,KAAKg/C,EAAIxX,EAAI+d,EAAGvG,EAAGh/C,KAAK4qD,EAAIpjB,EAAI+d,EAAGqF,EAAG5qD,KAAK8lD,MAAQte,EAAGxnC,KAAK2lD,OAASne,GACtGxnC,KAAKqpI,YAAcx+E,YAAYoB,cAAcjsD,KAAKmpI,YAEhC,MAAdnpI,KAAKktD,OAAiBltD,KAAKktD,MAAMq6C,yBAEpCvnG,KAAKqpI,YAAYt9E,YASnBk4E,YAAYvkI,UAAU6pI,SAAW,SAASz4F,GAEzC9wC,KAAK29D,KAAO7sB,EAAM6sB,KAClB39D,KAAKgtD,KAAOlc,EAAMkc,KAClBhtD,KAAK4nB,MAAQkpB,EAAMlpB,MACnB5nB,KAAK27D,eAAiB7qB,EAAM6qB,eAC5B37D,KAAK4+D,OAAS9tB,EAAM8tB,OACpB5+D,KAAKkkI,eAAiBpzF,EAAMozF,eAC5BlkI,KAAKgmG,YAAcl1D,EAAMk1D,YACzBhmG,KAAK4oI,iBAAmB93F,EAAM83F,iBAC9B5oI,KAAKqO,SAAWyiC,EAAMziC,SACtBrO,KAAKY,OAASkwC,EAAMlwC,OACpBZ,KAAKg/C,EAAIlO,EAAMkO,EACfh/C,KAAK4qD,EAAI9Z,EAAM8Z,EACf5qD,KAAK8lD,MAAQhV,EAAMgV,MACnB9lD,KAAK2lD,OAAS7U,EAAM6U,OACpB3lD,KAAK04G,cAAgB5nE,EAAM4nE,eAQ5BurB,YAAYvkI,UAAU8kB,MAAQ,WAE5B,IAAIA,EAAQ,IAAIy/G,YAAYjkI,KAAK29D,KAAM39D,KAAKgtD,KAAMhtD,KAAK4nB,OAGxD,GAA2B,MAAvB5nB,KAAK27D,eACT,CACCn3C,EAAMm3C,eAAiB,GAEvB,IAAK,IAAIzyD,EAAI,EAAGA,EAAIlJ,KAAK27D,eAAe/6D,OAAQsI,IAE/Csb,EAAMm3C,eAAezyD,GAAKlJ,KAAK27D,eAAezyD,GAAGsb,QA4BnD,OAxBmB,MAAfxkB,KAAK4+D,SAERp6C,EAAMo6C,OAAS5+D,KAAK4+D,OAAOp6C,SAGD,MAAvBxkB,KAAKkkI,iBAER1/G,EAAM0/G,eAAiBlkI,KAAKkkI,eAAe1/G,SAGpB,MAApBxkB,KAAKgmG,cAERxhF,EAAMwhF,YAAchmG,KAAKgmG,YAAYxhF,SAGtCA,EAAMokH,iBAAmB5oI,KAAK4oI,iBAC9BpkH,EAAMnW,SAAWrO,KAAKqO,SACtBmW,EAAM5jB,OAASZ,KAAKY,OACpB4jB,EAAMw6B,EAAIh/C,KAAKg/C,EACfx6B,EAAMomC,EAAI5qD,KAAK4qD,EACfpmC,EAAMshC,MAAQ9lD,KAAK8lD,MACnBthC,EAAMmhC,OAAS3lD,KAAK2lD,OACpBnhC,EAAMk0F,cAAgB14G,KAAK04G,cAEpBl0F,GAQRy/G,YAAYvkI,UAAUgmB,QAAU,WAE/B1lB,KAAK29D,KAAKvR,MAAMmB,aAAa7nC,QAAQ1lB,OAGtC2gD,WAAWsjF,YAAqC,qBAAhBA,YAA8BA,iBAAc1jI,EAsD5E4jI,sBAAsBzkI,UAAY,IAAIo3E,cACtCqtD,sBAAsBzkI,UAAUqyB,YAAcoyG,sBAS9CA,sBAAsBzkI,UAAU8pI,aAAqC,QAArB5oF,SAASwD,SAAsB,OAAS,GASxF+/E,sBAAsBzkI,UAAU+pI,0BAAkD,QAArB7oF,SAASwD,SAAsB,oBAAsB,GAOlH+/E,sBAAsBzkI,UAAU0sD,MAAQ,KAQxC+3E,sBAAsBzkI,UAAUgqI,iBAAkB,EAOlDvF,sBAAsBzkI,UAAUiqI,kBAAoB,WAEnD,OAAO3pI,KAAK0pI,iBAabvF,sBAAsBzkI,UAAUkqI,mBAAqB,SAASF,GAE7D1pI,KAAK0pI,gBAAkBA,GAQxBvF,sBAAsBzkI,UAAU4pF,WAAa,SAASt8B,GAErD,OAAY,MAARA,GAEI9G,QAAQ18C,QAAQxJ,KAAKogE,MAAOpT,IAAS,GAW9Cm3E,sBAAsBzkI,UAAUgkF,QAAU,WAEzC,OAA4B,GAArB1jF,KAAKogE,MAAMx/D,QASnBujI,sBAAsBzkI,UAAU8Q,MAAQ,WAEvCxQ,KAAK6pI,gBAAgB,KAAM7pI,KAAKogE,QAYjC+jE,sBAAsBzkI,UAAUoqI,QAAU,SAAS98E,GAEtC,MAARA,GAEHhtD,KAAKwjF,SAAS,CAACx2B,KAajBm3E,sBAAsBzkI,UAAU8jF,SAAW,SAASpjB,GAEnD,GAAa,MAATA,EACJ,CACKpgE,KAAK0pI,kBAERtpE,EAAQ,CAACpgE,KAAK+pI,uBAAuB3pE,KAKtC,IAFA,IAAIzwC,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BlJ,KAAKosD,MAAM49E,iBAAiB5pE,EAAMl3D,KAErCymB,EAAI5e,KAAKqvD,EAAMl3D,IAIjBlJ,KAAK6pI,gBAAgBl6G,EAAK3vB,KAAKogE,SASjC+jE,sBAAsBzkI,UAAUqqI,uBAAyB,SAAS3pE,GAEjE,GAAa,MAATA,EAEH,IAAK,IAAIl3D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIlJ,KAAKosD,MAAM49E,iBAAiB5pE,EAAMl3D,IAErC,OAAOk3D,EAAMl3D,GAKhB,OAAO,MAYRi7H,sBAAsBzkI,UAAUuqI,QAAU,SAASj9E,GAEtC,MAARA,GAEHhtD,KAAKkqI,SAAS,CAACl9E,KAcjBm3E,sBAAsBzkI,UAAUwqI,SAAW,SAAS9pE,GAEnD,GAAa,MAATA,EACJ,CACC,IAAI/2D,EAAS,KAETrJ,KAAK0pI,kBAERrgI,EAASrJ,KAAKogE,MACdA,EAAQ,CAACpgE,KAAK+pI,uBAAuB3pE,KAKtC,IAFA,IAAIzwC,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,KAE5BlJ,KAAKspF,WAAWlpB,EAAMl3D,KAC1BlJ,KAAKosD,MAAM49E,iBAAiB5pE,EAAMl3D,KAElCymB,EAAI5e,KAAKqvD,EAAMl3D,IAIjBlJ,KAAK6pI,gBAAgBl6G,EAAKtmB,KAc5B86H,sBAAsBzkI,UAAUyqI,WAAa,SAASn9E,GAEzC,MAARA,GAEHhtD,KAAK4jF,YAAY,CAAC52B,KAOpBm3E,sBAAsBzkI,UAAUkkF,YAAc,SAASxjB,GAEtD,GAAa,MAATA,EACJ,CAGC,IAFA,IAAIzwC,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BlJ,KAAKspF,WAAWlpB,EAAMl3D,KAEzBymB,EAAI5e,KAAKqvD,EAAMl3D,IAIjBlJ,KAAK6pI,gBAAgB,KAAMl6G,KAc7Bw0G,sBAAsBzkI,UAAUmqI,gBAAkB,SAASvF,EAAO/2F,GAEjE,GAAc,MAAT+2F,GACJA,EAAM1jI,OAAS,GACH,MAAZ0jI,EAAM,IACM,MAAX/2F,GACDA,EAAQ3sC,OAAS,GACH,MAAd2sC,EAAQ,GACT,CACC,IAAIxM,EAAS,IAAIqjG,kBAAkBpkI,KAAMskI,EAAO/2F,GAChDxM,EAAO0yB,UACP,IAAI47B,EAAO,IAAIxJ,eAAe7lF,MAAM,GACpCqvF,EAAK7oF,IAAIu6B,GACT/gC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ43B,KAAM,OAAQiQ,MAczD80C,sBAAsBzkI,UAAUi9H,UAAY,SAAS3vE,GAExC,MAARA,GACFhtD,KAAKspF,WAAWt8B,IAEjBhtD,KAAKogE,MAAMrvD,KAAKi8C,IAclBm3E,sBAAsBzkI,UAAUg+H,YAAc,SAAS1wE,GAEtD,GAAY,MAARA,EACJ,CACC,IAAI5pD,EAAQ8iD,QAAQ18C,QAAQxJ,KAAKogE,MAAOpT,GAEpC5pD,GAAS,GAEZpD,KAAKogE,MAAM32D,OAAOrG,EAAO,KA0B5BghI,kBAAkB1kI,UAAU+zD,QAAU,WAErC,IAAItL,EAAKrD,MAAMrd,MAAM,6BAKrB,GAJAh5B,OAAO8mD,OAAS9R,YAAYpkD,IAC3BW,KAAKqkI,eAAeoF,4BACpBzpI,KAAKqkI,eAAeoF,0BAED,MAAhBzpI,KAAKutC,QAER,IAAK,IAAIrkC,EAAI,EAAGA,EAAIlJ,KAAKutC,QAAQ3sC,OAAQsI,IAExClJ,KAAKqkI,eAAe3G,YAAY19H,KAAKutC,QAAQrkC,IAI/C,GAAkB,MAAdlJ,KAAKskI,MAER,IAASp7H,EAAI,EAAGA,EAAIlJ,KAAKskI,MAAM1jI,OAAQsI,IAEtClJ,KAAKqkI,eAAe1H,UAAU38H,KAAKskI,MAAMp7H,IAI3C,IAAIymB,EAAM3vB,KAAKskI,MACftkI,KAAKskI,MAAQtkI,KAAKutC,QAClBvtC,KAAKutC,QAAU5d,EAEflhB,OAAO8mD,OAAS9R,YAAYpkD,IAAIW,KAAKqkI,eAAemF,eACnDxpI,KAAKqkI,eAAemF,aACrB1kF,MAAMrb,MAAM,4BAA6B0e,GAEzCnoD,KAAKqkI,eAAe5rD,UAAU,IAAI9B,cAAcnvB,QAAQ83B,OACtD,QAASt/E,KAAKskI,MAAO,UAAWtkI,KAAKutC,WAGxCoT,WAAWwjF,sBAAyD,qBAA1BA,sBAAwCA,2BAAwB5jI,EAiJ1GgkI,aAAa7kI,UAAU0sD,MAAQ,KAQ/Bm4E,aAAa7kI,UAAUgmD,SAAW,KAOlC6+E,aAAa7kI,UAAUglI,YAAc,KAOrCH,aAAa7kI,UAAU2qC,QAAU,KAOjCk6F,aAAa7kI,UAAUgzB,UAAW,EAQlC6xG,aAAa7kI,UAAU0qI,UAAW,EAQlC7F,aAAa7kI,UAAU2qI,YAAa,EAWpC9F,aAAa7kI,UAAU4qI,eAAkB1pF,SAAc,MAAI,OAAS,GASpE2jF,aAAa7kI,UAAU6qI,sBAAuB,EAO9ChG,aAAa7kI,UAAUsb,SAAW,GAOlCupH,aAAa7kI,UAAUmnF,OAAS,EAOhC09C,aAAa7kI,UAAU8qI,UAAY,IAAI3/E,YAAY,EAAG,IAQtD05E,aAAa7kI,UAAU+qI,gBAAmB7pF,SAAkB,UAAI,EAAMA,SAASI,QAAe,EAAJ,EAO1FujF,aAAa7kI,UAAUgrI,aAAc,EAOrCnG,aAAa7kI,UAAUirI,aAAe,KAStCpG,aAAa7kI,UAAUsiE,MAAQ,KAQ/BuiE,aAAa7kI,UAAUglB,KAAO,WAE7B1kB,KAAK0lD,SAAWzqC,SAAS9b,cAAc,OACvCa,KAAK0lD,SAASu/B,UAAY,iCAC1BjlF,KAAK0lD,SAASklF,iBAAkB,EAG5BhqF,SAASgB,QAEZ5hD,KAAK0lD,SAAS99B,MAAMs+C,UAAY,OAGjClmE,KAAK0lD,SAAS99B,MAAM44B,SAAaxgD,KAAK6qI,iBAAqB,WAAa,WACxE7qI,KAAK8qI,iBAAiB9qI,KAAK0lD,WAQ5B6+E,aAAa7kI,UAAUqrI,WAAa,SAASj6F,EAAOxzC,GAEnD0C,KAAKosD,MAAM4+E,aAAal6F,EAAMkc,KAAM1vD,EAAO0C,KAAKqqC,UAQjDk6F,aAAa7kI,UAAUurI,SAAW,SAAUjpE,GAEtB,MAAjBhiE,KAAK0lD,WAER1lD,KAAK0lD,SAAS99B,MAAMmsE,UAAY/xB,GAGjChiE,KAAKgiE,MAAQA,EACbhiE,KAAK4lD,UAQN2+E,aAAa7kI,UAAUwrI,gBAAkB,SAASp6F,EAAOzG,GAExD,IAAIxnC,EAASqjD,QAAQuL,aAAazxD,KAAKosD,MAAM++E,gBAAgBr6F,EAAMkc,KAAM3iB,IAAU,GAShF,OANEuW,SAASM,WAAsC,GAAzBjmC,SAASkmC,cAA8C,GAAzBlmC,SAASkmC,cACxC,IAAzBlmC,SAASkmC,eAETt+C,EAASqjD,QAAQyM,wBAAwB9vD,EAAQ,oBAGxCA,EAAOoH,QAAQ,MAAO,SAQjCs6H,aAAa7kI,UAAU0rI,gBAAkB,SAASt6F,GAEjD,OAAOoV,QAAQkM,0BAA0BpyD,KAAK0lD,SAAS7jB,aASxD0iG,aAAa7kI,UAAU2rI,wBAA0B,SAASrlF,GAEzD,OAAOhmD,KAAKuqI,sBAAwB/iF,QAAQi0B,YAAYz1B,IAAQwB,QAAQg0B,cAAcx1B,IAAQwB,QAAQk0B,WAAW11B,IAQlHu+E,aAAa7kI,UAAUorI,iBAAmB,SAAS3jF,GAIlDK,QAAQD,YAAYJ,EAAK,YAAajB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEjEhmD,KAAKosD,MAAMu4E,aAAY,GACvBn9E,QAAQ8vB,QAAQtxB,OAIjBwB,QAAQD,YAAYJ,EAAK,OAAQjB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAExDhmD,KAAK0qI,aAER1qI,KAAKsrI,UAAUtlF,OAKjBwB,QAAQD,YAAYJ,EAAK,UAAWjB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE1DwB,QAAQ6vB,WAAWrxB,KAEnBhmD,KAAKurI,mBAAmBvlF,IAE3BhmD,KAAKosD,MAAMu4E,aAAY,GACvBn9E,QAAQ8vB,QAAQtxB,IAEO,IAAfA,EAAIwlF,UAEZxrI,KAAKosD,MAAMu4E,YAAY3kI,KAAKqrI,wBAAwBrlF,IACpDwB,QAAQ8vB,QAAQtxB,SAMnB,IAAIylF,EAAkBvlF,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEzB,MAApBhmD,KAAK0kI,aAIJ1kI,KAAK0rI,eAAiBvkF,EAAI5pB,WAAav9B,KAAK2rI,uBAC7C/qF,SAASqB,OAAyB,GAAf+D,EAAIwlF,SAA+C,IAAfxlF,EAAIwlF,WAE7DxrI,KAAK0rI,eAAgB,EACrBvkF,EAAI5pB,UAAY,OAKnBiqB,QAAQD,YAAYJ,EAAK,WAAYskF,GACrCjkF,QAAQD,YAAYJ,EAAK,QAASskF,GAGlC,IAAIG,EAAe1lF,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEtB,MAApBhmD,KAAK0kI,cAM8B,GAAlC1kI,KAAK0lD,SAASnoB,UAAU38B,QAA0C,QAA3BZ,KAAK0lD,SAASnoB,WAExDv9B,KAAK0lD,SAASnoB,UAAYv9B,KAAK2rI,oBAC/B3rI,KAAK0rI,cAAgB1rI,KAAK0lD,SAASnoB,UAAU38B,OAAS,GAItDZ,KAAK0rI,eAAgB,MAKxBlkF,QAAQD,YAAYJ,EAAOvG,SAASI,SAAYJ,SAASE,MAAmB,QAAV,QAAmB8qF,GACrFpkF,QAAQD,YAAYJ,EAAK,MAAOykF,GAChCpkF,QAAQD,YAAYJ,EAAK,QAASykF,GAGlC,IAAIlmD,EAAY9kC,SAASI,SAAYJ,SAASE,MAAmB,UAAV,QAEnDuG,EAAgBnB,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvB,MAApBhmD,KAAK0kI,aAAuB1kI,KAAKoqI,WAAa5iF,QAAQ6vB,WAAWrxB,KAI3C,MAArBhmD,KAAK6rI,cAERp9H,OAAOob,aAAa7pB,KAAK6rI,cAG1B7rI,KAAK6rI,aAAep9H,OAAOkM,WAAWurC,QAAQ1jD,KAAKxC,MAAM,WAExDA,KAAK6rI,aAAe,KACpB7rI,KAAK4lD,YACF,OAIN4B,QAAQD,YAAYJ,EAAKu+B,EAASr+B,GAClCG,QAAQD,YAAY94C,OAAQ,SAAU44C,GAElCpsC,SAASkmC,cAAgB,GAE5BqG,QAAQD,YAAYJ,EAAK,iBAAkBE,GAC3CG,QAAQD,YAAYJ,EAAK,kBAAmBE,KAI5CG,QAAQD,YAAYJ,EAAK,MAAOE,GAChCG,QAAQD,YAAYJ,EAAK,QAASE,KAWpCk9E,aAAa7kI,UAAU6rI,mBAAqB,SAASvlF,GAEpD,OAAsB,KAAfA,EAAIwlF,SAA4BxrI,KAAKosD,MAAM0/E,2BAClC,IAAf9lF,EAAIwlF,UAA8BhkF,QAAQg0B,cAAcx1B,KACvDwB,QAAQi0B,YAAYz1B,IAQvBu+E,aAAa7kI,UAAUqsI,cAAgB,SAAS/lF,GAE/C,OAAOwB,QAAQkwB,UAAU1xB,IAAQhmD,KAAK0lD,UAQvC6+E,aAAa7kI,UAAUkmD,OAAS,WAE/B,IAAI9U,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAAS/sD,KAAK0kI,aAE/C,GAAa,MAAT5zF,EAEH9wC,KAAK2kI,aAAY,QAEb,GAAqB,MAAjB3kI,KAAK0lD,SACd,CACC,IAAIv2C,EAASnP,KAAKosD,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAC3CG,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7B4O,EAAI,KAET,GAAK/7D,KAAKoqI,UAAwD,QAA3Ct5F,EAAMlpB,MAAMiiC,YAAYwjB,gBA0C9C,CACC,IAAI2+D,EAAK9lF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYglB,kBAAmB,MAStE,GARD9S,EAAmB,MAAdjrB,EAAMj/B,MAA8B,MAAd7R,KAAKgiE,MAAiBlxB,EAAMj/B,KAAK0xF,OAAS,KAE5D,MAALxnC,IAEHA,EAAI7V,QAAQ6b,oBAAoB/hE,KAAKgiE,OAAS9b,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY8kB,YAAa9kB,YAAYqY,cAC/Ghc,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY+kB,qBAAsB/kB,YAAYuY,gBAG1EjzD,GAIJ,GAFAnP,KAAK88D,OAAS,IAAIjS,YAAY/Z,EAAMozF,eAAellF,EAAGlO,EAAMozF,eAAet5E,EAAG,EAAG,GAEvE,MAANohF,EACH,CACA,IAAIr8G,GAAOznB,WAAW8jI,GAAM,GAAK7+E,EACjCntD,KAAK88D,OAAOhX,MAAQn2B,EACpB3vB,KAAK88D,OAAO9d,GAAK+c,EAAE/c,EAAIrvB,OAIzB,CACC,IAAIs8G,EAAMphF,YAAYoB,cAAcnb,GAChCo7F,EAAOhmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cACnFiqE,EAAOjmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAS/F,GAPD6pE,EAAsB,MAAfn7F,EAAMoc,OAAiBg/E,GAAQriF,YAAYqY,cAAgBiqE,GAAQtiF,YAAYuY,aAAgBtxB,EAAMoc,MAAMo6C,eAAe2kC,GAAOA,EAE7H,MAAND,IAEHC,EAAInmF,MAAQ59C,WAAW8jI,GAAM7+E,IAGzBrc,EAAM6sB,KAAKvR,MAAMmB,aAAa6+E,eAA4D,SAA3Ct7F,EAAMlpB,MAAMiiC,YAAYwjB,gBAC5E,CACA,IAAIq9B,EAAUr1E,SAASyb,EAAMlpB,MAAMiiC,YAAY4nB,gBAAkB,GAAKtkB,EAClEuhD,GAAcr5E,SAASyb,EAAMlpB,MAAMiiC,YAAY6nB,oBAAsB,GAAK45B,OAAO5rG,UAAUs4G,gBAAkB7qD,EAAQu9C,EACrHiE,GAAgBt5E,SAASyb,EAAMlpB,MAAMiiC,YAAYgoB,sBAAwB,GAAKy5B,OAAO5rG,UAAUy4G,kBAAoBhrD,EAAQu9C,EAC3HkE,GAAiBv5E,SAASyb,EAAMlpB,MAAMiiC,YAAY+nB,uBAAyB,GAAK05B,OAAO5rG,UAAUu4G,mBAAqB9qD,EAAQu9C,EAC9HmE,GAAex5E,SAASyb,EAAMlpB,MAAMiiC,YAAY8nB,qBAAuB,GAAK25B,OAAO5rG,UAAUw4G,iBAAmB/qD,EAAQu9C,EAExHwhC,EAAOhmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cACnFiqE,EAAOjmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAEhG6pE,EAAM,IAAIphF,YAAYohF,EAAIjtF,EAAI6vD,EAAao9B,EAAIrhF,EAAI8jD,EAClDu9B,EAAInmF,OAAUomF,GAAQriF,YAAYqY,cAAsB,MAAN8pE,EAAen9B,EAAcF,EAAgB,GAC/Fs9B,EAAItmF,QAAWwmF,GAAQtiF,YAAYuY,aAAiBssC,EAAaE,EAAiB,IAGpF5uG,KAAK88D,OAAS,IAAIjS,YAAYohF,EAAIjtF,EAAIlO,EAAMozF,eAAellF,EAAGitF,EAAIrhF,EAAI9Z,EAAMozF,eAAet5E,EAAGqhF,EAAInmF,MAAOmmF,EAAItmF,QAM9G,GAAI3lD,KAAKosD,MAAMigF,WAAWv7F,EAAMkc,QAAUhtD,KAAK88D,OAAOhX,OAAS,GAAK9lD,KAAK88D,OAAOnX,QAAU,IACzF3lD,KAAK0lD,SAASnoB,WAAav9B,KAAK2rI,oBACjC,CACC3rI,KAAK0lD,SAAS99B,MAAMu4E,SAAWt2C,YAAYiiB,UAC3C9rE,KAAK0lD,SAAS99B,MAAMo7C,WAAa,SAG7BrzC,EAAMzvB,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,OAAU7qC,SAASkmC,aAAqBgM,IAAkBntD,KAAKyqI,gBAE5D,YAAhCzqI,KAAK0lD,SAAS99B,MAAM44B,UAEvBxgD,KAAK0lD,SAAS99B,MAAMk+B,MAAQn2B,EAAM,KAE9B3vB,KAAK0lD,SAASmgD,YAAcl2E,IAE/B3vB,KAAK0lD,SAAS99B,MAAMk+B,MAAQ9lD,KAAK0lD,SAASmgD,YAAc,OAKzD7lG,KAAK0lD,SAAS99B,MAAMi4E,SAAWlwE,EAAM,UAMtC3vB,KAAK0lD,SAAS99B,MAAMo7C,WAAa,SACjChjE,KAAK0lD,SAAS99B,MAAMk+B,MAAQ,GAKA,GAAzB7qC,SAASkmC,eAEZnhD,KAAK0lD,SAAS99B,MAAMm7C,KAAO,IAC3B/iE,KAAK0lD,SAAS99B,MAAM+9B,OAAS,QAG9B,IAAIm6C,EAAK9/F,KAAK0lD,SAASmgD,YACnB9F,EAAK//F,KAAK0lD,SAAS6C,aAUM,GAAzBttC,SAASkmC,cAGZnhD,KAAK0lD,SAAS99B,MAAMknB,KAAO5uC,KAAKwD,IAAI,EAAGxD,KAAKD,MAAMD,KAAK88D,OAAO9d,EAAI+c,EAAE/c,GAAKh/C,KAAK88D,OAAOhX,OAASg6C,EAAK,GAAK3yC,GAAS2yC,GAAM3yC,EAAQ,GAAK,EAAkB,GAAb4O,EAAE/c,EAAI,KAAYmO,IAAU,KACrKntD,KAAK0lD,SAAS99B,MAAMonB,IAAM9uC,KAAKwD,IAAI,EAAGxD,KAAKD,MAAMD,KAAK88D,OAAOlS,EAAImR,EAAEnR,GAAK5qD,KAAK88D,OAAOnX,QAAUo6C,EAAK,IAAO5yC,GAAS4yC,GAAM5yC,EAAQ,GAAK,EAA0B,EAAtBjtD,KAAKk3D,IAAI2E,EAAEnR,EAAI,KAAYuC,IAAU,KAE/KntD,KAAK0lD,SAAS99B,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMyjC,EAAK3yC,GAAS,KACrDntD,KAAK0lD,SAAS99B,MAAM+9B,OAASzlD,KAAKm8D,MAAM0jC,EAAK5yC,GAAS,MAE9CvM,SAASM,WAEjBlhD,KAAK0lD,SAAS99B,MAAMknB,KAAO5uC,KAAKwD,IAAI,EAAGxD,KAAKD,KAAKD,KAAK88D,OAAO9d,EAAI+c,EAAE/c,GAAKh/C,KAAK88D,OAAOhX,OAASg6C,EAAK,GAAK3yC,GAAS2yC,GAAM3yC,EAAQ,GAAK,EAAkB,GAAb4O,EAAE/c,EAAI,MAAa,KAC3Jh/C,KAAK0lD,SAAS99B,MAAMonB,IAAM9uC,KAAKwD,IAAI,EAAGxD,KAAKD,KAAKD,KAAK88D,OAAOlS,EAAImR,EAAEnR,GAAK5qD,KAAK88D,OAAOnX,QAAUo6C,EAAK,IAAO5yC,GAAS4yC,GAAM5yC,EAAQ,GAAK,EAA0B,EAAtBjtD,KAAKk3D,IAAI2E,EAAEnR,EAAI,MAAa,OAIrK5qD,KAAK0lD,SAAS99B,MAAMknB,KAAO5uC,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAI+c,EAAE/c,GAAKh/C,KAAK88D,OAAOhX,MAAQ,IAAM,GAAK,KACxG9lD,KAAK0lD,SAAS99B,MAAMonB,IAAM9uC,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAImR,EAAEnR,GAAK5qD,KAAK88D,OAAOnX,OAAS,KAAe,GAARoW,EAAEnR,EAAW,EAAI,IAAM,GAAK,WAjKjI5qD,KAAK88D,OAAS98D,KAAKssI,gBAAgBx7F,GACnC9wC,KAAK0lD,SAAS99B,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,MAAQqH,GAAS,KACpEntD,KAAK0lD,SAAS99B,MAAM+9B,OAASzlD,KAAKm8D,MAAMr8D,KAAK88D,OAAOnX,OAASwH,GAAS,KAGzC,GAAzBlyC,SAASkmC,cAAqBP,SAASM,WAE1ClhD,KAAK0lD,SAAS99B,MAAMknB,KAAO5uC,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,GAAK,KACvDh/C,KAAK0lD,SAAS99B,MAAMonB,IAAM9uC,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,GAAK,OAItD5qD,KAAK0lD,SAAS99B,MAAMknB,KAAO5uC,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAO9d,EAAI,IAAM,KACxEh/C,KAAK0lD,SAAS99B,MAAMonB,IAAM9uC,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAMr8D,KAAK88D,OAAOlS,EAAI,IAAM,MAIpE5qD,KAAKosD,MAAMigF,WAAWv7F,EAAMkc,QAAUhtD,KAAK88D,OAAOhX,OAAS,GAAK9lD,KAAK88D,OAAOnX,QAAU,IACzF3lD,KAAK0lD,SAASnoB,WAAav9B,KAAK2rI,qBAEhC3rI,KAAK0lD,SAAS99B,MAAMu4E,SAAWt2C,YAAYiiB,UAC3C9rE,KAAK0lD,SAAS99B,MAAMo7C,WAAa,SAEc,QAA3ClyB,EAAMlpB,MAAMiiC,YAAYwjB,kBAE3BrtE,KAAK0lD,SAAS99B,MAAMk+B,MAAQ5lD,KAAKm8D,MAAMr8D,KAAK88D,OAAOhX,MAAQqH,GAASntD,KAAKyqI,gBAAkB,QAK5FzqI,KAAK0lD,SAAS99B,MAAMo7C,WAAa,SAEc,QAA3ClyB,EAAMlpB,MAAMiiC,YAAYwjB,kBAE3BrtE,KAAK0lD,SAAS99B,MAAMk+B,MAAQ,KAmI3BlF,SAASuB,OAEZniD,KAAK0lD,SAAS99B,MAAMm7C,KAAO5V,GAI3BjH,QAAQ2I,iBAAiB7uD,KAAK0lD,SAAS99B,MAAO,kBAAmB,WACjEs+B,QAAQ2I,iBAAiB7uD,KAAK0lD,SAAS99B,MAAO,YAC7C,SAAWulC,EAAQ,IAAMA,EAAQ,KAAa,MAAL4O,EAAa,GACtD,cAAuB,IAANA,EAAE/c,EAAW,KAAc,IAAN+c,EAAEnR,EAAW,UAUvD25E,aAAa7kI,UAAU4rI,UAAY,WAElCtrI,KAAK2kI,aAAa3kI,KAAKosD,MAAMmgF,6BAS9BhI,aAAa7kI,UAAU8sI,mBAAqB,SAAS17F,GAEpD,OAAO,MAaRyzF,aAAa7kI,UAAUmrI,eAAiB,WAEvC,GAAIjqF,SAASuB,OAEZ,OAAO,EAIP,IAAIsqF,GAAe,EAEnB,GAAI7rF,SAASyB,OACb,CACC,IAAI2vC,EAAOhyF,KAAKosD,MAAMuR,KAAKgoE,cAAc3/D,gBAE7B,MAARgsB,IAEHy6C,EAAyD,YAA1CvmF,QAAQwI,gBAAgBsjC,GAAMxxC,UAI/C,OAAQisF,GAcVlI,aAAa7kI,UAAUgtI,aAAe,SAAS1/E,EAAM3iB,GAEpDrqC,KAAK2kI,aAAY,GACjB3kI,KAAKgiE,MAAQ,KAGQ,MAAjBhiE,KAAK0lD,UAER1lD,KAAK0kB,OAG2B,MAA7B1kB,KAAKosD,MAAMugF,gBAEd3sI,KAAKosD,MAAMugF,eAAeC,cAG3B,IAAI97F,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAASC,GAE1C,GAAa,MAATlc,EACJ,CAEa9wC,KAAKosD,MAAMU,UAAUK,MAAjC,IACI1M,EAAOyF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYqoB,eAAgBroB,YAAY6Y,kBAC7E+rC,EAASvoD,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYooB,iBAAkBpoB,YAAY8Y,oBACjF/O,EAAQ1N,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYmoB,gBAAiB,SACnEhQ,EAAQ9b,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY8kB,YAAa9kB,YAAYyrB,YAC3Eu3D,GAAQ3mF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYsoB,gBAAiB,GACrEtoB,YAAY6pB,YAAc7pB,YAAY6pB,UACpCo5D,GAAU5mF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYsoB,gBAAiB,GACvEtoB,YAAY8pB,cAAgB9pB,YAAY8pB,YACtCo5D,GAAS7mF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYsoB,gBAAiB,GACtEtoB,YAAY+pB,iBAAmB/pB,YAAY+pB,eAE7C5zE,KAAK0lD,SAAS99B,MAAMi7C,WAAchZ,YAAgC,qBAAI3pD,KAAKm8D,MAAM5b,EAAOoJ,YAAYiZ,aAAe,KAAOjZ,YAAYiZ,YACtI9iE,KAAK0lD,SAAS99B,MAAM4lE,gBAAkBxtF,KAAKwsI,mBAAmB17F,GAC9D9wC,KAAK0lD,SAAS99B,MAAMisC,eAAiB,EAAU,YAAc,GAC7D7zD,KAAK0lD,SAAS99B,MAAMo5E,WAAa,EAAS,OAAS,SACnDhhG,KAAK0lD,SAAS99B,MAAMoxE,UAAY,EAAW,SAAW,GACtDh5F,KAAK0lD,SAAS99B,MAAM26C,SAAWriE,KAAKm8D,MAAM5b,GAAQ,KAClDzgD,KAAK0lD,SAAS99B,MAAMi/D,OAAS7mF,KAAK6mF,OAClC7mF,KAAK0lD,SAAS99B,MAAM46C,WAAaisC,EACjCzuG,KAAK0lD,SAAS99B,MAAMmsE,UAAY/xB,EAChChiE,KAAK0lD,SAAS99B,MAAMy+E,QAAU,OAC9BrmG,KAAK0lD,SAAS99B,MAAMgsC,MAAQA,EAE5B,IAAIt1B,EAAMt+B,KAAKivG,cAAgB/oD,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYujB,qBAAsBvjB,YAAYgiB,wBAEvGvtC,GAAOurB,YAAY4rB,sBAET,MAAT3kC,GAA+B,MAAdA,EAAMj/B,MAAgBi/B,EAAMj/B,KAAK4xD,SAAW5Z,YAAYue,oBAC3EliB,QAAQwJ,OAAO5e,EAAMj/B,KAAKvU,SAE3BghC,EAAMwS,EAAMj/B,KAAKinG,qBAIfx6E,GAAOurB,YAAY6rB,oBAAsBp3C,GAAOurB,YAAY8rB,mBAE/D31E,KAAK0lD,SAASxtB,aAAa,MAAOoG,GAIlCt+B,KAAK0lD,SAAS3nB,gBAAgB,OAI/B/9B,KAAK0lD,SAASnoB,UAAYv9B,KAAKkrI,gBAAgBp6F,EAAOzG,IAAY,GAClErqC,KAAK2qI,aAAe3qI,KAAK0lD,SAASnoB,UAKI,GAAlCv9B,KAAK0lD,SAASnoB,UAAU38B,QAA0C,QAA3BZ,KAAK0lD,SAASnoB,WAExDv9B,KAAK0lD,SAASnoB,UAAYv9B,KAAK2rI,oBAC/B3rI,KAAK0rI,eAAgB,GAIrB1rI,KAAK0rI,cAAgB1rI,KAAK0lD,SAASnoB,WAAav9B,KAAK2rI,oBAGtD3rI,KAAKosD,MAAM2R,UAAUrlC,YAAY14B,KAAK0lD,UAGtC1lD,KAAK0kI,YAAc13E,EACnBhtD,KAAKqqC,QAAUA,EACfrqC,KAAKgb,SAAW,KAEE,MAAd81B,EAAMj/B,MAAgB7R,KAAKgtI,YAAYl8F,KAE1C9wC,KAAKgb,SAAW81B,EAAMj/B,KAAKqB,KAC3BlT,KAAKgb,SAAS4M,MAAMygC,WAAa,UAI9BroD,KAAKoqI,WAAapqI,KAAKosD,MAAMhmC,MAAMjX,OAAO2hC,EAAMkc,OAAoD,QAA3Clc,EAAMlpB,MAAMiiC,YAAYwjB,kBAEpF5+D,OAAOkM,WAAWurC,QAAQ1jD,KAAKxC,MAAM,WAEpCA,KAAK4lD,YACF,GAGL5lD,KAAK4lD,SAGL,IAGC5lD,KAAK0lD,SAAS2gB,QAEVrmE,KAAKitI,gBAAkBjtI,KAAK0lD,SAASnoB,UAAU38B,OAAS,IAC1DZ,KAAK0lD,SAASnoB,WAAav9B,KAAK2rI,sBAAwB3rI,KAAK0rI,gBAE9DzwH,SAASiyH,YAAY,aAAa,EAAO,MAG3C,MAAOjhI,OAYTs4H,aAAa7kI,UAAUutI,aAAe,WAErC,OAAOjtI,KAAKqqI,YAQb9F,aAAa7kI,UAAUqxD,eAAiB,WAEvC,IAAIC,EAAY,KAEZviD,OAAOyiD,aAEVF,EAAYviD,OAAOyiD,eAEXj2C,SAAS+1C,YAEjBA,EAAY/1C,SAAS+1C,WAGL,MAAbA,IAECA,EAAUC,MAEbD,EAAUC,QAEFD,EAAUG,iBAElBH,EAAUG,oBAUbozE,aAAa7kI,UAAUilI,YAAc,SAASwI,GAI7C,GAFAA,EAASA,IAAU,EAEK,MAApBntI,KAAK0kI,YACT,CACsB,MAAjB1kI,KAAKgb,WAERhb,KAAKgb,SAAS4M,MAAMygC,WAAa,UACjCroD,KAAKgb,SAAW,MAGjB,IAAI81B,EAAUq8F,EAAuD,KAA7CntI,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAK0kI,aAElDvnG,EAAUn9B,KAAK2qI,aAmBnB,GAlBA3qI,KAAK2qI,aAAe,KACpB3qI,KAAK0kI,YAAc,KACnB1kI,KAAKqqC,QAAU,KACfrqC,KAAK88D,OAAS,KACd98D,KAAK0lD,SAAS0nF,OACdptI,KAAK+wD,iBAE2B,MAA5B/wD,KAAK0lD,SAASjvB,YAEjBz2B,KAAK0lD,SAASjvB,WAAWgC,YAAYz4B,KAAK0lD,UAGvC1lD,KAAK0rI,eAAiB1rI,KAAK0lD,SAASnoB,WAAav9B,KAAK2rI,sBAEzD3rI,KAAK0lD,SAASnoB,UAAY,GAC1Bv9B,KAAK0rI,eAAgB,GAGT,MAAT56F,IAAkB9wC,KAAK0lD,SAASnoB,WAAaJ,GAAyB,MAAdn9B,KAAKgiE,OACjE,CACChiE,KAAKqtI,kBACL,IAAI/vI,EAAQ0C,KAAKorI,gBAAgBt6F,GAEjC9wC,KAAKosD,MAAM8W,WAAW5B,cACtB,IAEc,MAAThkE,GAEH0C,KAAK+qI,WAAWj6F,EAAOxzC,GAGN,MAAd0C,KAAKgiE,OAERhiE,KAAKosD,MAAMiV,cAAcxX,YAAY8kB,YAAa3uE,KAAKgiE,MAAO,CAAClxB,EAAMkc,OAGvE,QAEChtD,KAAKosD,MAAM8W,WAAW1B,aAKxBha,QAAQ0yB,QAAQl6E,KAAK0lD,UACrB1lD,KAAK0lD,SAAW,KAChB1lD,KAAKgiE,MAAQ,OAUfuiE,aAAa7kI,UAAU2tI,gBAAkB,WAET,MAA3BrtI,KAAK0lD,SAAS2hD,WACmB,MAApCrnG,KAAK0lD,SAAS2hD,UAAU13C,UAExB3vD,KAAK0lD,SAASjtB,YAAYz4B,KAAK0lD,SAAS2hD,YAU1Ck9B,aAAa7kI,UAAUstI,YAAc,SAASl8F,GAE7C,OAAO,GAQRyzF,aAAa7kI,UAAU4nF,eAAiB,SAASx2C,GAEhD,IAAIqc,EAAQntD,KAAKosD,MAAMU,UAAUK,MAEjC,OAAO,IAAItC,YAAY,EAAG,EAAkB,MAAd/Z,EAAMj/B,KAAgB,GAAKi/B,EAAMj/B,KAAK4uC,KAAO0M,EAAQ,GAC/C,QAAjCntD,KAAK0lD,SAAS99B,MAAMmsE,UAAuB,IAAM,KAQrDwwC,aAAa7kI,UAAU4sI,gBAAkB,SAASx7F,GAEjD,IAAI3hC,EAASnP,KAAKosD,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAC5CG,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7Bw6B,EAAU3nF,KAAKsnF,eAAex2C,GAC9Bm1B,EAAW0hB,EAAQ7hC,MAClBogB,EAAYyhB,EAAQhiC,OACpB9iD,EAAS,KAEb,IAAKsM,GAAU2hC,EAAM6sB,KAAKvR,MAAMmB,aAAa6+E,eAA4D,QAA3Ct7F,EAAMlpB,MAAMiiC,YAAYwjB,gBAErFxqE,EAASiuC,EAAMoc,MAAMo6C,eAAez8C,YAAYoB,cAAcnb,QAG/D,CACA,IAAI45D,EAAUr1E,SAASyb,EAAMlpB,MAAMiiC,YAAY4nB,gBAAkB,GAAKtkB,EAClEuhD,GAAcr5E,SAASyb,EAAMlpB,MAAMiiC,YAAY6nB,oBAAsB,GAAK45B,OAAO5rG,UAAUs4G,gBAAkB7qD,EAAQu9C,EACrHiE,GAAgBt5E,SAASyb,EAAMlpB,MAAMiiC,YAAYgoB,sBAAwB,GAAKy5B,OAAO5rG,UAAUy4G,kBAAoBhrD,EAAQu9C,EAC3HkE,GAAiBv5E,SAASyb,EAAMlpB,MAAMiiC,YAAY+nB,uBAAyB,GAAK05B,OAAO5rG,UAAUu4G,mBAAqB9qD,EAAQu9C,EAC9HmE,GAAex5E,SAASyb,EAAMlpB,MAAMiiC,YAAY8nB,qBAAuB,GAAK25B,OAAO5rG,UAAUw4G,iBAAmB/qD,EAAQu9C,EAE3H7nG,EAAS,IAAIgoD,YAAY/Z,EAAMkO,EAAGlO,EAAM8Z,EACtC1qD,KAAKwD,IAAIuiE,EAAUn1B,EAAMgV,MAAQ+oD,EAAcF,GAC/CzuG,KAAKwD,IAAIwiE,EAAWp1B,EAAM6U,OAAS+oD,EAAaE,IACnD,IAAIs9B,EAAOhmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cACnFiqE,EAAOjmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAgDhG,GA9CAv/D,EAAyB,MAAfiuC,EAAMoc,OAAiBg/E,GAAQriF,YAAYqY,cAAgBiqE,GAAQtiF,YAAYuY,aAAgBtxB,EAAMoc,MAAMo6C,eAAezkG,GAAUA,EAE1IsM,GAEHtM,EAAOm8C,EAAIlO,EAAMozF,eAAellF,EAChCn8C,EAAO+nD,EAAI9Z,EAAMozF,eAAet5E,EAEd,MAAd9Z,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,cAIhCl1D,EAAMj/B,KAAKm0F,YAAYhnD,EAAI,IAE9Bn8C,EAAOm8C,EAAIlO,EAAMj/B,KAAKm0F,YAAYhnD,GAG/BlO,EAAMj/B,KAAKm0F,YAAYp7C,EAAI,IAE9B/nD,EAAO+nD,EAAI9Z,EAAMj/B,KAAKm0F,YAAYp7C,KAId,MAAd9Z,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,cAEzCnjG,EAAOm8C,EAAI9+C,KAAKyD,IAAId,EAAOm8C,EAAGlO,EAAMj/B,KAAKm0F,YAAYhnD,GACrDn8C,EAAO+nD,EAAI1qD,KAAKyD,IAAId,EAAO+nD,EAAG9Z,EAAMj/B,KAAKm0F,YAAYp7C,IAGtD/nD,EAAOm8C,GAAK6vD,EACZhsG,EAAO+nD,GAAK8jD,EAEM,MAAd59D,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,cAE/B72F,GAOJtM,EAAOijD,MAAQ5lD,KAAKwD,IAAIuiE,EAAUn1B,EAAMj/B,KAAKm0F,YAAYlgD,OACzDjjD,EAAO8iD,OAASzlD,KAAKwD,IAAIwiE,EAAWp1B,EAAMj/B,KAAKm0F,YAAYrgD,UAN3D9iD,EAAOijD,MAAQ5lD,KAAKwD,IAAIb,EAAOijD,MAAOhV,EAAMj/B,KAAKm0F,YAAYlgD,OAC7DjjD,EAAO8iD,OAASzlD,KAAKwD,IAAIb,EAAO8iD,OAAQ7U,EAAMj/B,KAAKm0F,YAAYrgD,UAU7D3lD,KAAKosD,MAAM8W,WAAWyyB,SAAS7kD,EAAMkc,MACzC,CACC,IAAIi3C,EAAa/9C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cAEzF+hC,GAAcp6C,YAAYyrB,WAE7BzyE,EAAOm8C,GAAKlO,EAAMgV,MAEVm+C,GAAcp6C,YAAYsY,cAElCt/D,EAAOm8C,GAAKlO,EAAMgV,OAGnB,IAAIo+C,EAAWh+C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAEhG8hC,GAAYr6C,YAAY0rB,UAE3B1yE,EAAO+nD,GAAK9Z,EAAM6U,OAEVu+C,GAAYr6C,YAAYwY,eAEhCx/D,EAAO+nD,GAAK9Z,EAAM6U,SAKpB,OAAO,IAAIkF,YAAY3qD,KAAKm8D,MAAMx5D,EAAOm8C,GAAI9+C,KAAKm8D,MAAMx5D,EAAO+nD,GAAI1qD,KAAKm8D,MAAMx5D,EAAOijD,OAAQ5lD,KAAKm8D,MAAMx5D,EAAO8iD,UAejH4+E,aAAa7kI,UAAUisI,kBAAoB,SAAU3+E,GAEpD,OAAOhtD,KAAKsqI,gBASb/F,aAAa7kI,UAAU4tI,eAAiB,WAEvC,OAAOttI,KAAK0kI,aAQbH,aAAa7kI,UAAUgmB,QAAU,WAEX,MAAjB1lB,KAAK0lD,WAER8B,QAAQ0yB,QAAQl6E,KAAK0lD,UAEW,MAA5B1lD,KAAK0lD,SAASjvB,YAEjBz2B,KAAK0lD,SAASjvB,WAAWgC,YAAYz4B,KAAK0lD,UAG3C1lD,KAAK0lD,SAAW,MAIS,MAAtB1lD,KAAKixF,gBAERjxF,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKixF,eAC1CjxF,KAAKixF,cAAgB,MAGlBjxF,KAAKwkI,cAERxkI,KAAKosD,MAAMuR,KAAK6a,eAAex4E,KAAKwkI,aACpCxkI,KAAKwkI,YAAc,OAIrB7jF,WAAW4jF,aAAuC,qBAAjBA,aAA+BA,kBAAehkI,EA6C/EqkI,eAAe2I,cAAgB,IAAIlvI,OAOnCumI,eAAellI,UAAU8tI,iBAAmB/9B,YAO5Cm1B,eAAellI,UAAU+tI,mBAAqBx/B,iBAO9C22B,eAAellI,UAAUguI,iBAAmBpiC,OAQ5Cs5B,eAAellI,UAAUiuI,uBAAwB,EAQjD/I,eAAellI,UAAU0sI,eAAgB,EAOzCxH,eAAellI,UAAUomG,WAAY,EAOrC8+B,eAAellI,UAAUqmG,kBAAoB,EAQ7C6+B,eAAellI,UAAUkuI,0BAA2B,EAmBpDhJ,eAAeiJ,cAAgB,SAASxwI,EAAK6vD,GAE5C03E,eAAe2I,cAAclwI,GAAO6vD,GAIrC03E,eAAeiJ,cAAchkF,YAAYgqB,gBAAiBo6B,kBAC1D22B,eAAeiJ,cAAchkF,YAAYiqB,cAAeo6B,WACxD02B,eAAeiJ,cAAchkF,YAAYmqB,cAAeo6B,WACxDw2B,eAAeiJ,cAAchkF,YAAYyqB,eAAgBk7B,YACzDo1B,eAAeiJ,cAAchkF,YAAY2qB,gBAAiBi7B,aAC1Dm1B,eAAeiJ,cAAchkF,YAAY4qB,YAAas5B,SACtD62B,eAAeiJ,cAAchkF,YAAY8qB,eAAgBw6B,YACzDy1B,eAAeiJ,cAAchkF,YAAY+qB,cAAew6B,WACxDw1B,eAAeiJ,cAAchkF,YAAY6qB,YAAas5B,SACtD42B,eAAeiJ,cAAchkF,YAAYoqB,WAAYo7B,QACrDu1B,eAAeiJ,cAAchkF,YAAYsqB,YAAak6B,SACtDu2B,eAAeiJ,cAAchkF,YAAYuqB,sBAAuBm6B,kBAChEq2B,eAAeiJ,cAAchkF,YAAYkqB,qBAAsBo6B,iBAC/Dy2B,eAAeiJ,cAAchkF,YAAY0qB,eAAgBm7B,YACzDk1B,eAAeiJ,cAAchkF,YAAYqqB,YAAao7B,cACtDs1B,eAAeiJ,cAAchkF,YAAYwqB,YAAak7B,SAYtDq1B,eAAellI,UAAUouI,gBAAkB,SAASh9F,GAEnDA,EAAMoc,MAAMuW,QAAU3yB,EAAM6sB,KAAKvR,MAAMqX,QACvCzjE,KAAK+tI,eAAej9F,GACpBA,EAAMoc,MAAMxoC,KAAKosB,EAAM6sB,KAAKgoE,gBAY7Bf,eAAellI,UAAUsuI,YAAc,SAASl9F,GAE/C,IAAIoc,EAAQ,KAEZ,GAAmB,MAAfpc,EAAMlpB,MACV,CAGC,IAAIu5E,EAAUkM,kBAAkBC,WAAWx8D,EAAMlpB,MAAMiiC,YAAYopB,cAEnE,GAAe,MAAXkuB,EAEHj0C,EAAQ,IAAI6pC,QAAQoK,OAGrB,CACC,IAAIz4C,EAAO1oD,KAAKiuI,oBAAoBn9F,GACpCoc,EAAQ,IAAIxE,GAId,OAAOwE,GAYR03E,eAAellI,UAAUwuI,qBAAuB,SAASp9F,GAExDA,EAAMoc,MAAM8sD,eAAiBh6G,KAAKmuI,SAASr9F,EAAM6sB,KAAKvR,MAAMgiF,kBAAkBt9F,KAQ/E8zF,eAAellI,UAAUyuI,SAAW,SAASrwI,GAE5C,OAAgB,MAARA,EAAgB8mI,eAAe2I,cAAczvI,GAAQ,MAQ9D8mI,eAAellI,UAAUuuI,oBAAsB,SAASn9F,GAEvD,IAAI4X,EAAO1oD,KAAKmuI,SAASr9F,EAAMlpB,MAAMiiC,YAAYopB,cAQjD,OANY,MAARvqB,IAEHA,EAAQ5X,EAAM6sB,KAAKvR,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAChDhtD,KAAKwtI,iBAAmBxtI,KAAKytI,oBAGxB/kF,GAYRk8E,eAAellI,UAAUquI,eAAiB,SAASj9F,GAElDA,EAAMoc,MAAMnsD,MAAM+vC,GAClBA,EAAMoc,MAAMi7B,MAAQr3C,EAAM6sB,KAAKvR,MAAMiqC,SAASvlD,GAC9CA,EAAMoc,MAAMgtD,eAAiBppE,EAAM6sB,KAAKvR,MAAMiiF,kBAAkBv9F,GAChEA,EAAMoc,MAAMitD,qBAAuBrpE,EAAMlpB,MAAMiiC,YAAYomB,6BAC3Dn/B,EAAMoc,MAAMktD,uBAAyBtpE,EAAM6sB,KAAKvR,MAAMkiF,0BAA0Bx9F,GAChFA,EAAMoc,MAAMmtD,mBAAqBvpE,EAAMlpB,MAAMiiC,YAAYymB,2BACzDx/B,EAAMoc,MAAMwtD,eAAiB5pE,EAAM6sB,KAAKvR,MAAMmiF,kBAAkBz9F,GAEhE9wC,KAAKwuI,mBAAmB19F,IAWzB8zF,eAAellI,UAAU8uI,mBAAqB,SAAS19F,GAEnC,MAAfA,EAAMoc,QAETltD,KAAKyuI,aAAa39F,EAAO,iBAAkB+Y,YAAYqkB,iBACvDluE,KAAKyuI,aAAa39F,EAAO,yBAA0B+Y,YAAYykB,qBAC/DtuE,KAAKyuI,aAAa39F,EAAO,OAAQ+Y,YAAYqkB,iBAC7CluE,KAAKyuI,aAAa39F,EAAO,SAAU+Y,YAAY2kB,mBAC/CxuE,KAAKyuI,aAAa39F,EAAO,WAAY+Y,YAAYykB,uBAUnDs2D,eAAellI,UAAUgvI,uBAAyB,SAAS59F,GAG1D,GAAmB,MAAfA,EAAMlpB,MAKT,IAHA,IAAIzF,EAAS,CAAC,UAAW,WAAY,aACjCwkB,EAAS,CAACkjB,YAAYqkB,gBAAiBrkB,YAAY2kB,kBAAmB3kB,YAAYykB,qBAE7EplE,EAAI,EAAGA,EAAIy9B,EAAO/lC,OAAQsI,IAElC,GAAIg9C,QAAQ18C,QAAQ2Y,EAAQ2uB,EAAMlpB,MAAM+e,EAAOz9B,MAAQ,EAEtD,OAAO,EAKV,OAAO,GASR07H,eAAellI,UAAU+uI,aAAe,SAAS39F,EAAO69F,EAAOtxI,GAE9D,IAAIC,EAAQwzC,EAAMoc,MAAMyhF,GACpBviF,EAAQtb,EAAM6sB,KAAKvR,MACnBwiF,EAAa,KA2BjB,GAzBa,WAATtxI,EAEHsxI,EAAaxiF,EAAMhmC,MAAM2vE,UAAUjlD,EAAMkc,MAExB,YAAT1vD,GAERwzC,EAAMoc,MAAMyhF,GAAUtxI,GAAOwsD,YAAY2kB,kBAAqB,UAAY,UAIzEogE,EAFiD,MAA9CxiF,EAAMhmC,MAAMi2F,YAAYvrE,EAAMkc,MAAM,GAE1BZ,EAAMhmC,MAAMi2F,YAAYvrE,EAAMkc,MAAM,GAIpClc,EAAMkc,KAGpB4hF,EAAaxiF,EAAMyiF,YAAYD,GAC/BvxI,EAAM+uD,EAAM0iF,iCAEK,aAATxxI,IAERwzC,EAAMoc,MAAMyhF,GAAS79F,EAAMoc,MAAMgtD,gBAGhB,MAAd00B,EACJ,CACC,IAAIG,EAAS3iF,EAAMU,UAAUC,SAAS6hF,GACtC99F,EAAMoc,MAAMyhF,GAAS,KAEP,MAAVI,IAEiB,MAAhBA,EAAO7hF,OAA0B,kBAATyhF,EAE3B79F,EAAMoc,MAAMyhF,GAASI,EAAO7hF,MAAMyhF,GAIlC79F,EAAMoc,MAAMyhF,GAASI,EAAOnnH,MAAMvqB,MAetCunI,eAAellI,UAAUsvI,cAAgB,SAASl+F,GAEjD,OAAOA,EAAM6sB,KAAKvR,MAAM6iF,SAASn+F,EAAMkc,OAYxC43E,eAAellI,UAAUwvI,YAAc,SAASp+F,EAAOxzC,GAEtD,IAAI8uD,EAAQtb,EAAM6sB,KAAKvR,MACVA,EAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAE3C,GAAIlc,EAAMlpB,MAAMiiC,YAAYqoB,gBAAkB,GAAgD,MAA3CphC,EAAMlpB,MAAMiiC,YAAYqoB,gBAC3E,CAEC,IAAIi9D,EAAe/iF,EAAMgjF,YAAYt+F,EAAMkc,OAAmB,MAAT1vD,GAAiB4oD,QAAQwJ,OAAOpyD,GAErFwzC,EAAMj/B,KAAO,IAAI7R,KAAK0tI,iBAAiBpwI,EAAO,IAAIutD,YAC/C/Z,EAAMlpB,MAAMiiC,YAAY8kB,cAAgB9kB,YAAYqY,aACrD9V,EAAMijF,iBAAiBv+F,GACvBA,EAAMlpB,MAAMiiC,YAAYmoB,iBACxBlhC,EAAMlpB,MAAMiiC,YAAYooB,kBACxBnhC,EAAMlpB,MAAMiiC,YAAYqoB,gBACxBphC,EAAMlpB,MAAMiiC,YAAYsoB,iBACxBrhC,EAAMlpB,MAAMiiC,YAAY4nB,eACxB3gC,EAAMlpB,MAAMiiC,YAAY6nB,mBACxB5gC,EAAMlpB,MAAMiiC,YAAYgoB,qBACxB/gC,EAAMlpB,MAAMiiC,YAAY+nB,sBACxB9gC,EAAMlpB,MAAMiiC,YAAY8nB,oBACxB7gC,EAAMlpB,MAAMiiC,YAAY+T,kBACxB9sB,EAAMlpB,MAAMiiC,YAAY8lB,6BACxB7+B,EAAMlpB,MAAMiiC,YAAY+lB,yBACxBxjB,EAAMigF,WAAWv7F,EAAMkc,OAASZ,EAAMgjF,YAAYt+F,EAAMkc,MACxDZ,EAAMkjF,eAAex+F,EAAMkc,MAC3Blc,EAAMlpB,MAAMiiC,YAAYwjB,gBACxBv8B,EAAMlpB,MAAMiiC,YAAYgmB,qBACxB3pB,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYujB,qBAAsBvjB,YAAYgiB,yBAC9E/6B,EAAMj/B,KAAK67C,QAAUxH,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYsjB,mBAAoB,KACnFr8B,EAAMj/B,KAAK4xD,QAAU,EAAgB5Z,YAAYue,mBAAqBt3B,EAAM6sB,KAAKvR,MAAMqX,QACvF3yB,EAAMj/B,KAAK+V,MAAQkpB,EAAMlpB,MACzBkpB,EAAMj/B,KAAKi/B,MAAQA,EACnB9wC,KAAKuvI,gBAAgBz+F,EAAOA,EAAMj/B,MAOlC,IAAI29H,GAAe,EAEfziF,EAAW,SAAS/G,GAEvB,IAAInjD,EAASiuC,EAEb,GAAI8P,SAAS+B,UAAY6sF,EACzB,CACC,IAAIxwF,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GAIvBgU,EAAK9T,QAAQ2Y,aAAazS,EAAM2R,UAAW/e,EAAG4L,GAClD/nD,EAASupD,EAAMuR,KAAK5Q,SAASX,EAAMq+B,UAAUzwB,EAAGhb,EAAGgb,EAAGpP,IAGvD,OAAO/nD,GAIR2kD,QAAQ4xB,oBAAoBtoC,EAAMj/B,KAAKqB,KACtCgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKyvI,aAAa3+F,EAAOkV,KAE5BoG,EAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,EAAKlV,IAC/D0+F,EAAepjF,EAAMqX,SAAW5Z,YAAY6Z,aACR,OAAnClc,QAAQkwB,UAAU1xB,GAAK2J,aAG1BzJ,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKyvI,aAAa3+F,EAAOkV,IAE5BoG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAK+G,EAAS/G,QAG1EE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKyvI,aAAa3+F,EAAOkV,KAE5BoG,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,EAAK+G,EAAS/G,KACtEwpF,GAAe,OAMdpjF,EAAMsjF,uBAETloF,QAAQD,YAAYzW,EAAMj/B,KAAKqB,KAAM,WACpCgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKyvI,aAAa3+F,EAAOkV,KAE5BoG,EAAMytB,SAAS7zB,EAAKlV,EAAMkc,MAC1BxF,QAAQ8vB,QAAQtxB,UAiBtB4+E,eAAellI,UAAU6vI,gBAAkB,SAASz+F,EAAOoc,GAEtDtM,SAASyB,QAAUzB,SAAS0B,OAAS4K,EAAMuW,SAAW5Z,YAAY6Z,YAErExW,EAAMxoC,KAAKosB,EAAM6sB,KAAKvR,MAAM2R,WAI5B7Q,EAAMxoC,KAAKosB,EAAM6sB,KAAKgoE,gBAaxBf,eAAellI,UAAUiwI,mBAAqB,SAAS7+F,GAEtD,IAAIsb,EAAQtb,EAAM6sB,KAAKvR,MACnB+qC,EAAW/qC,EAAMwjF,gBAAgB9+F,EAAMkc,MACvCoJ,EAAO,KAEX,GAAgB,MAAZ+gC,EACJ,CACC/gC,EAAO,IAAIxN,aAEX,IAAK,IAAI1/C,EAAI,EAAGA,EAAIiuF,EAASv2F,OAAQsI,IACrC,CACC,IAAIgkD,EAA2B,MAAlBpc,EAAMqmD,SAAoBrmD,EAAMqmD,SAAS9tF,OAAO8tF,EAASjuF,IAAM,KAE5E,GAAa,MAATgkD,EACJ,CACC,IAAIv9B,EAAM,IAAI2/E,aAAa,IAAIzkD,YAAessC,EAASjuF,GAAGi/E,MAAMvzE,KAChE+a,EAAI8zC,QAAU3yB,EAAM6sB,KAAKvR,MAAMqX,QAC/B9zC,EAAIgqF,qBAAsB,EAC1BhqF,EAAI+1G,QAAUvuC,EAASjuF,GACvBlJ,KAAKylI,kBAAkB30F,EAAOnhB,GAC9B3vB,KAAK6vI,4BAA4B/+F,EAAOqmD,EAASjuF,GAAIymB,GAE3B,MAAtBwnE,EAASjuF,GAAGulD,SAEf9+B,EAAIzc,KAAK0U,MAAM6mC,OAAS0oC,EAASjuF,GAAGulD,QAGrC2H,EAAKvN,IAAIsuC,EAASjuF,GAAIymB,QAItBymC,EAAKvN,IAAIsuC,EAASjuF,GAAIgkD,IAMH,MAAlBpc,EAAMqmD,UAETrmD,EAAMqmD,SAASluC,OAAM,SAASt4C,EAAIu8C,GAEjCA,EAAMxnC,aAIRorB,EAAMqmD,SAAW/gC,GAalBwuE,eAAellI,UAAU+lI,kBAAoB,SAAS30F,EAAO40F,GAE5DA,EAAQhhH,KAAKosB,EAAM6sB,KAAK8nC,mBASzBm/B,eAAellI,UAAUmwI,4BAA8B,SAAS/+F,EAAO40F,EAASx4E,GAE/E,IAAId,EAAStb,EAAM6sB,KAAKvR,MAExB5E,QAAQD,YAAY2F,EAAMh6C,KAAM,SAAS,SAAU8yC,GAE9CoG,EAAMq4E,aAETr4E,EAAMu4E,aAAav4E,EAAMmgF,4BAG1B7G,EAAQjtD,UAAU,IAAI9B,cAAcnvB,QAAQi4B,MAC1C,QAASz5B,EAAK,OAAQlV,EAAMkc,UAG/BxF,QAAQ4xB,oBAAoBlsB,EAAMh6C,MACjC,SAAU8yC,GAETwB,QAAQ8vB,QAAQtxB,MAEjB,SAAUA,GAEToG,EAAM0tB,eAAetyB,QAAQwyB,WAC5B,IAAIpD,aAAa5wB,EAAKlV,OAGrB8P,SAAS+B,UAEZ6E,QAAQD,YAAY2F,EAAMh6C,KAAM,YAAY,SAAU8yC,GAErD0/E,EAAQjtD,UAAU,IAAI9B,cAAcnvB,QAAQi4B,MAC1C,QAASz5B,EAAK,OAAQlV,EAAMkc,WAcjC43E,eAAellI,UAAUowI,cAAgB,SAASh/F,GAEjD,IAAIsb,EAAQtb,EAAM6sB,KAAKvR,MACnB+7B,EAAQ/7B,EAAM2jF,gBAAgBj/F,GAElC,GAAIsb,EAAM4jF,gBAA2B,MAAT7nD,GAE3B,GAAqB,MAAjBr3C,EAAM+0F,QACV,CACC,IAAIhlI,EAAI,IAAIgqD,YAAY,EAAG,EAAGs9B,EAAMriC,MAAOqiC,EAAMxiC,QACjD7U,EAAM+0F,QAAU,IAAIv2B,aAAazuG,EAAGsnF,EAAMvzE,KAC1Ck8B,EAAM+0F,QAAQlsB,qBAAsB,EACpC7oE,EAAM+0F,QAAQpiE,QAAUrX,EAAMqX,QAE9BzjE,KAAK4lI,YAAY90F,EAAOA,EAAM+0F,SAAS,EAAM7lI,KAAKiwI,0BAA0Bn/F,UAGpD,MAAjBA,EAAM+0F,UAEd/0F,EAAM+0F,QAAQngH,UACdorB,EAAM+0F,QAAU,OAalBjB,eAAellI,UAAUuwI,0BAA4B,SAASn/F,GAE7D,IAAIsb,EAAQtb,EAAM6sB,KAAKvR,MAEvB,OAAOlG,QAAQ1jD,KAAKxC,MAAM,SAAUgmD,GAEnC,GAAIhmD,KAAK4tI,0BAA4BxhF,EAAM+B,YAC3C,CACC,IAAI+hF,GAAY9jF,EAAMqzD,gBAAgB3uE,EAAMkc,MAC5CZ,EAAM+jF,UAAUD,GAAU,EAAO,CAACp/F,EAAMkc,MAAO,KAAMhH,GACrDwB,QAAQ8vB,QAAQtxB,QAiBnB4+E,eAAellI,UAAUkmI,YAAc,SAAS90F,EAAO+0F,EAASC,EAAcC,GAE7E,IAAI35E,EAAQtb,EAAM6sB,KAAKvR,MAKnB+iF,EAAc/iF,EAAMgjF,YAAYt+F,EAAMkc,OAASpM,SAAS0B,OAC3D8J,EAAMqX,SAAW5Z,YAAY6Z,YAE1ByrE,GAEHtJ,EAAQpiE,QAAU5Z,YAAYse,mBAC9B09D,EAAQnhH,KAAK0nC,EAAM2R,WACnB8nE,EAAQ3yH,KAAK0U,MAAMi/D,OAAS,GAI5Bg/C,EAAQnhH,KAAKosB,EAAM6sB,KAAK8nC,kBAGzB,IAAIvyF,EAAO2yH,EAAQ5qG,WAAa4qG,EAAQ3yH,KAaxC,GAVoB,MAAhB6yH,GAAyBnlF,SAASe,SAEjCyK,EAAM+B,cAETj7C,EAAK0U,MAAM6mC,OAAS,WAGrBjH,QAAQD,YAAYr0C,EAAM,QAAS6yH,IAGhCD,EACJ,CACC,IAAIxlF,EAAQ,KAEZkH,QAAQ4xB,oBAAoBlmE,GAC3B,SAAU8yC,GAET1F,EAAQ,IAAIqK,QAAQnD,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IAChEoG,EAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,EAAKlV,IAC/D0W,QAAQ8vB,QAAQtxB,MAEjB,SAAUA,GAEToG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAKlV,OAEhE,SAAUkV,GAEToG,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,EAAKlV,IAC7D0W,QAAQ8vB,QAAQtxB,MAIE,MAAhB+/E,GAAwBnlF,SAASe,QAEpCzuC,EAAKvD,iBAAiB,YAAY,SAASq2C,GAE1C,GAAa,MAAT1F,EACJ,CACC,IAAIw+C,EAAM1yC,EAAMsmE,UAEZxyH,KAAKk3D,IAAI9W,EAAMtB,EAAIwI,QAAQqwB,WAAW7xB,IAAQ84C,GACjD5+F,KAAKk3D,IAAI9W,EAAMsK,EAAIpD,QAAQuwB,WAAW/xB,IAAQ84C,IAE9CinC,EAAarnI,KAAKqnI,EAAc//E,GAChCwB,QAAQ8vB,QAAQtxB,QAGhB,GAIL,OAAO9yC,GAcR0xH,eAAellI,UAAU0wI,aAAe,SAASt/F,EAAOkV,GAEvD,OAAO,GAcR4+E,eAAellI,UAAU+vI,aAAe,SAAS3+F,EAAOkV,GAEvD,OAAO,GAYR4+E,eAAellI,UAAUorI,iBAAmB,SAASh6F,GAEpD,IAAIsb,EAAQtb,EAAM6sB,KAAKvR,MAKnBW,EAAW,SAAS/G,GAEvB,IAAInjD,EAASiuC,EAEb,GAAKsb,EAAMqX,SAAW5Z,YAAY6Z,aAAkD,OAAnClc,QAAQkwB,UAAU1xB,GAAK2J,UAAsB/O,SAAS+B,SACvG,CACC,IAAI3D,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GAIvBgU,EAAK9T,QAAQ2Y,aAAazS,EAAM2R,UAAW/e,EAAG4L,GAClD/nD,EAASupD,EAAMuR,KAAK5Q,SAASX,EAAMq+B,UAAUzwB,EAAGhb,EAAGgb,EAAGpP,IAGvD,OAAO/nD,GAGR2kD,QAAQ4xB,oBAAoBtoC,EAAMoc,MAAMh6C,KACvCgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKowI,aAAat/F,EAAOkV,IAE5BoG,EAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,EAAKlV,OAGjEoV,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKowI,aAAat/F,EAAOkV,IAE5BoG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAK+G,EAAS/G,QAG1EE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKowI,aAAat/F,EAAOkV,IAE5BoG,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,EAAK+G,EAAS/G,SAMrEoG,EAAMsjF,uBAETloF,QAAQD,YAAYzW,EAAMoc,MAAMh6C,KAAM,WACrCgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKowI,aAAat/F,EAAOkV,KAE5BoG,EAAMytB,SAAS7zB,EAAKlV,EAAMkc,MAC1BxF,QAAQ8vB,QAAQtxB,SAgBrB4+E,eAAellI,UAAU2wI,YAAc,SAASv/F,EAAOjsC,GAEtD,IAAIunD,EAAQtb,EAAM6sB,KAAKvR,MACnB9uD,EAAQ0C,KAAKgvI,cAAcl+F,GAC3Bw/F,EAAWlkF,EAAMigF,WAAWv7F,EAAMkc,MAClCk4E,EAAW94E,EAAMkjF,eAAex+F,EAAMkc,MACtCmiF,EAAer+F,EAAM6sB,KAAKvR,MAAMgjF,YAAYt+F,EAAMkc,OAAmB,MAAT1vD,GAAiB4oD,QAAQwJ,OAAOpyD,GAC5FmmE,EAAU,EAAgB5Z,YAAYue,mBAAqBt3B,EAAM6sB,KAAKvR,MAAMqX,QAC5EzU,EAAWle,EAAMlpB,MAAMiiC,YAAYwjB,iBAAmB,UAmB1D,GAjBkB,MAAdv8B,EAAMj/B,MAAiBi/B,EAAMj/B,KAAK2pC,MAAQ80F,GAAYx/F,EAAMj/B,KAAKk9F,SAAWm2B,GAC/Ep0F,EAAMj/B,KAAKm9C,UAAYA,GAAYle,EAAMj/B,KAAK4xD,SAAWA,IAEzD3yB,EAAMj/B,KAAK6T,UACXorB,EAAMj/B,KAAO,MAGI,MAAdi/B,EAAMj/B,MAAyB,MAATvU,IAAkB4oD,QAAQwJ,OAAOpyD,IAAUA,EAAMsD,OAAS,GAEnFZ,KAAKkvI,YAAYp+F,EAAOxzC,GAEF,MAAdwzC,EAAMj/B,MAA0B,MAATvU,GAAiC,GAAhBA,EAAMsD,SAEtDkwC,EAAMj/B,KAAK6T,UACXorB,EAAMj/B,KAAO,MAGI,MAAdi/B,EAAMj/B,KACV,CAGKhN,IAGyB,MAAxBisC,EAAMj/B,KAAK2mG,WAAqBx4G,KAAKuwI,mBAAmBz/F,EAAOA,EAAMj/B,QAGxEi/B,EAAMj/B,KAAK2mG,UAAY,MAGxB1nE,EAAMj/B,KAAK44F,cACX35D,EAAMj/B,KAAK9Q,MAAM+vC,GAGjBA,EAAMj/B,KAAKowD,OAAS7V,EAAMijF,iBAAiBv+F,IAG5C,IAAIgsB,EAAS98D,KAAKsnG,eAAex2D,GAC7B0/F,EAAYxwI,KAAKywI,aAAa3/F,GAElC,GAAIjsC,GAAUisC,EAAMj/B,KAAKvU,OAASA,GAASwzC,EAAMj/B,KAAKw6H,YAAciE,GACnEx/F,EAAMj/B,KAAKm9C,UAAYA,GAAYle,EAAMj/B,KAAK6+H,YAAcxL,GAC5Dp0F,EAAMj/B,KAAKs7C,OAASqjF,GAAa1/F,EAAMj/B,KAAK4xD,SAAWA,IACtD3yB,EAAMj/B,KAAKirD,OAAOhS,OAAOgS,GAC3B,CAEgC,GAA3BhsB,EAAMj/B,KAAKirD,OAAOhX,OAAqC,MAAvBhV,EAAM4nE,eAEQ,GADjDx4G,KAAKm8D,MAAOvrB,EAAMj/B,KAAKirD,OAAOhX,MAC9BhV,EAAMj/B,KAAKs7C,MAAQqjF,EAAa1zE,EAAOhX,SAEvChV,EAAM4nE,cAAgB,MAGvB5nE,EAAMj/B,KAAK4xD,QAAUA,EACrB3yB,EAAMj/B,KAAKvU,MAAQA,EACnBwzC,EAAMj/B,KAAKirD,OAASA,EACpBhsB,EAAMj/B,KAAKs7C,MAAQqjF,EACnB1/F,EAAMj/B,KAAK2pC,KAAO80F,EAClBx/F,EAAMj/B,KAAKk9F,QAAUm2B,EACrBp0F,EAAMj/B,KAAKm9C,SAAWA,EAGtB,IAAI2hF,EAAM7/F,EAAMj/B,KAAKqB,KAAK0U,MAAMygC,WAChCroD,KAAK4wI,iBAAiB9/F,EAAMj/B,MAC5Bi/B,EAAMj/B,KAAKqB,KAAK0U,MAAMygC,WAAasoF,KAetC/L,eAAellI,UAAU6wI,mBAAqB,SAASz/F,EAAOoc,GAE7D,SAAS3b,EAAMl8B,EAAUyrD,EAAWrW,GAEnC,IAAI5nD,GAAS,EAcb,OARCA,EAHgB,cAAbi+D,GAA0C,gBAAbA,GACnB,iBAAbA,GAA6C,eAAbA,EAEvB54D,WAAWglD,EAAM73C,IAAanN,WAAWglD,EAAMw9C,WACtD55D,EAAMlpB,MAAMk5C,IAAcrW,GAInByC,EAAM73C,KAAcy7B,EAAMlpB,MAAMk5C,IAAcrW,GAGjD5nD,EAGR,OAAO0uC,EAAM,YAAasY,YAAYsoB,gBAAiBtoB,YAAYmiB,oBAClEz6B,EAAM,SAAUsY,YAAYooB,iBAAkBpoB,YAAY8Y,qBAC1DpxB,EAAM,OAAQsY,YAAYqoB,eAAgBroB,YAAY6Y,mBACtDnxB,EAAM,QAASsY,YAAYmoB,gBAAiB,UAC5CzgC,EAAM,QAASsY,YAAY8kB,YAAa,KACxCp9B,EAAM,SAAUsY,YAAY+kB,qBAAsB,KAClDr9B,EAAM,UAAWsY,YAAY4nB,cAAe,IAC5ClgC,EAAM,aAAcsY,YAAY6nB,kBAAmB,IACnDngC,EAAM,eAAgBsY,YAAYgoB,oBAAqB,IACvDtgC,EAAM,gBAAiBsY,YAAY+nB,qBAAsB,IACzDrgC,EAAM,cAAesY,YAAY8nB,mBAAoB,IACrDpgC,EAAM,aAAcsY,YAAY+T,kBAAkB,IAClDrsB,EAAM,aAAcsY,YAAY8lB,8BAChCp+B,EAAM,SAAUsY,YAAY+lB,0BAC5Br+B,EAAM,UAAWsY,YAAYsjB,mBAAoB,MACjD57B,EAAM,gBAAiBsY,YAAYujB,qBAAsBvjB,YAAYgiB,yBAYvE+4D,eAAellI,UAAUkxI,iBAAmB,SAAS1jF,GAEpDA,EAAMM,UAYPo3E,eAAellI,UAAU+wI,aAAe,SAAS3/F,GAEhD,OAAOA,EAAM6sB,KAAKxQ,OAYnBy3E,eAAellI,UAAU4nG,eAAiB,SAASx2D,GAElD,IAAIsb,EAAQtb,EAAM6sB,KAAKvR,MACnBe,EAAQrc,EAAM6sB,KAAKxQ,MACnBh+C,EAASi9C,EAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MACvC8P,EAAS,IAAIjS,YAAY/Z,EAAMozF,eAAellF,EAAGlO,EAAMozF,eAAet5E,GAE1E,GAAIz7C,EACJ,CACC,IAAIu7F,EAAU55D,EAAMj/B,KAAK4nG,aACzB38C,EAAO9d,GAAK0rD,EAAQ1rD,EAAImO,EACxB2P,EAAOlS,GAAK8/C,EAAQ9/C,EAAIuC,EAExB,IAAI6oC,EAAM5pC,EAAM6pC,gBAAgBnlD,EAAMkc,MAE3B,MAAPgpC,IAEHl5B,EAAOhX,MAAQ5lD,KAAKwD,IAAI,EAAGsyF,EAAIlwC,MAAQqH,GACvC2P,EAAOnX,OAASzlD,KAAKwD,IAAI,EAAGsyF,EAAIrwC,OAASwH,QAI3C,CAEC,GAAIrc,EAAMj/B,KAAK01F,wBACf,CACC,IAAI53E,EAAMmtC,EAAO9d,EACjB8d,EAAO9d,EAAI8d,EAAOlS,EAClBkS,EAAOlS,EAAIj7B,EAGZmtC,EAAO9d,GAAKlO,EAAMkO,EAClB8d,EAAOlS,GAAK9Z,EAAM8Z,EAGlBkS,EAAOhX,MAAQ5lD,KAAKwD,IAAI,EAAGotC,EAAMgV,OACjCgX,EAAOnX,OAASzlD,KAAKwD,IAAI,EAAGotC,EAAM6U,QAElC,IAAIkf,EAAK3e,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY2kB,kBAAmB3kB,YAAYC,MAElF,GAAI+a,GAAMhb,YAAYC,MAAc,IAAN+a,EAC9B,CACC,IAAIr9B,EAAIt/B,WAAWg+C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY6kB,kBAAmB,IAAMvhB,EAClFte,EAAK,EAAI3uC,KAAKC,OAAOqnC,EAAI,GAAK,GAC9BqpG,EAAK3wI,KAAKC,MAAMqnC,EAAI,GAExBs1B,EAAO9d,GAAKnQ,EACZiuB,EAAOlS,GAAK/b,EACZiuB,EAAOhX,OAAS+qF,EAChB/zE,EAAOnX,QAAUkrF,GAInB,GAAI//F,EAAMj/B,KAAK01F,wBACf,CAEC,IAAIv7C,GAAKlb,EAAMgV,MAAQhV,EAAM6U,QAAU,EACvCmX,EAAO9d,GAAKgN,EACZ8Q,EAAOlS,GAAKoB,EACRr8B,EAAMmtC,EAAOhX,MACjBgX,EAAOhX,MAAQgX,EAAOnX,OACtBmX,EAAOnX,OAASh2B,EAIjB,GAAmB,MAAfmhB,EAAMoc,MACV,CACC,IAAIg/E,EAAOhmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cACnFiqE,EAAOjmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAE5F8pE,GAAQriF,YAAYqY,cAAgBiqE,GAAQtiF,YAAYuY,eAE3DtF,EAAShsB,EAAMoc,MAAMo6C,eAAexqC,IAKtC,IAAIkvE,EAAK9lF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYglB,kBAAmB,MAYtE,OAVU,MAANm9D,IAEHlvE,EAAOhX,MAAQ59C,WAAW8jI,GAAM7+E,GAG5Bh+C,GAEJnP,KAAK8wI,kBAAkBhgG,EAAOgsB,GAGxBA,GAcR8nE,eAAellI,UAAUoxI,kBAAoB,SAAShgG,EAAOgsB,GAK5D,GAHAA,EAAOlS,GAAK9Z,EAAMj/B,KAAK0xF,OAAO34C,EAAIkS,EAAOnX,OACzCmX,EAAO9d,GAAKlO,EAAMj/B,KAAK0xF,OAAOvkD,EAAI8d,EAAOhX,OAEpC9lD,KAAKosI,eAA6D,QAA3Ct7F,EAAMlpB,MAAMiiC,YAAYwjB,iBAAwE,SAA3Cv8B,EAAMlpB,MAAMiiC,YAAYwjB,gBACzG,CACC,IAAI7lC,EAAIsJ,EAAM6sB,KAAKxQ,MACfu9C,EAAU55D,EAAMj/B,KAAK4nG,aACzB38C,EAAO9d,GAAK0rD,EAAQ1rD,EAAIxX,EACxBs1B,EAAOlS,GAAK8/C,EAAQ9/C,EAAIpjB,EAExB,IAAI0kG,EAAOhmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cACnFiqE,EAAOjmF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAC5F4pE,EAAK9lF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYglB,kBAAmB,MAEtE/R,EAAOhX,MAAQ5lD,KAAKwD,IAAI,EAAGo5D,EAAOhX,OAAUomF,GAAQriF,YAAYqY,cAAsB,MAAN8pE,EAAel7F,EAAMj/B,KAAKg9F,YAAcrnE,EAAIsJ,EAAMj/B,KAAK88F,aAAennE,EAAK,IAC3Js1B,EAAOnX,OAASzlD,KAAKwD,IAAI,EAAGo5D,EAAOnX,QAAWwmF,GAAQtiF,YAAYuY,aAAiBtxB,EAAMj/B,KAAK68F,WAAalnE,EAAIsJ,EAAMj/B,KAAK+8F,cAAgBpnE,EAAK,IAGhJ,IAAImyD,EAAQ7oD,EAAMj/B,KAAKw5F,kBAGvB,GAAa,GAAT1R,GAAuB,MAAT7oD,GAAiBA,EAAM6sB,KAAKvR,MAAMhmC,MAAMuvE,SAAS7kD,EAAMkc,MACzE,CACC,IAAI0M,EAAK5oB,EAAMka,aACXyS,EAAK3sB,EAAMma,aAEf,GAAI6R,EAAO9d,GAAK0a,GAAMoD,EAAOlS,GAAK6S,EAClC,CACC,IAAI9G,EAAMgjC,GAASz5F,KAAKu2D,GAAK,KAC7BuD,GAAK9T,QAAQ6T,gBAAgB,IAAIpP,QAAQmS,EAAO9d,EAAG8d,EAAOlS,GACxD1qD,KAAKs3D,IAAIb,GAAMz2D,KAAKw3D,IAAIf,GAAM,IAAIhM,QAAQ+O,EAAI+D,IAEhDX,EAAO9d,EAAIgb,GAAGhb,EACd8d,EAAOlS,EAAIoP,GAAGpP,KAcjBg6E,eAAellI,UAAUqxI,mBAAqB,SAASjgG,EAAOjsC,GAI7D,GAFA7E,KAAK2vI,mBAAmB7+F,GAEF,MAAlBA,EAAMqmD,SACV,CACC,IAAIsM,EAAMv9C,QAAQgZ,IAAIhZ,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,eAAgB,GAAI,IAC1EnE,EAAMzQ,QAAQqQ,UAAUktC,GACxBjsC,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAEzB7lB,EAAMqmD,SAASluC,OAAM,SAASt4C,EAAIu8C,GAEjC,IAAI4P,EAAS5P,EAAMw4E,QAAQsL,UAAUlgG,GAErC,IAAKA,EAAM6sB,KAAKvR,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,OAE1B,MAAflc,EAAMoc,OAAwB,GAAPu2C,EAC3B,CACC,IAAI/pC,EAAKoD,EAAO9R,aACZyS,EAAKX,EAAO7R,aAEZhZ,EAAQiU,QAAQ6T,gBAAgB,IAAIpP,QAAQ+O,EAAI+D,GAAKjG,EAAKE,EACtD,IAAI/M,QAAQ7Z,EAAMka,aAAcla,EAAMma,eAExCyO,EAAKznB,EAAM+M,EACXye,EAAKxrB,EAAM2Y,EACXkS,EAAO9d,EAAI9+C,KAAKm8D,MAAM3C,EAAKoD,EAAOhX,MAAQ,GAC1CgX,EAAOlS,EAAI1qD,KAAKm8D,MAAMoB,EAAKX,EAAOnX,OAAS,IAI/C9gD,GAA0B,MAAhBqoD,EAAM4P,QAAkB5P,EAAMC,OAASrc,EAAM6sB,KAAKxQ,OAC9DD,EAAM4P,OAAOhS,OAAOgS,KAErB5P,EAAM4P,OAASA,EACf5P,EAAMC,MAAQrc,EAAM6sB,KAAKxQ,MACzBD,EAAMM,eAeVo3E,eAAellI,UAAUuxI,cAAgB,SAASngG,EAAOjsC,GAExD,IAAIsjF,EAAQr3C,EAAM6sB,KAAKvR,MAAM2jF,gBAAgBj/F,GAE7C,GAAqB,MAAjBA,EAAM+0F,SAA4B,MAAT19C,EAC7B,CACC,IAAIrrB,EAAS98D,KAAKkxI,iBAAiBpgG,EAAOq3C,EAAMriC,MAAOqiC,EAAMxiC,QACzDuY,EAAKl+D,KAA0B,sBACjCkmD,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,eAAgB,GAC1DhqB,EAAMoc,MAAMm+C,kBACV7jE,EAAIsJ,EAAM6sB,KAAKxQ,OAEftoD,GAAUisC,EAAM+0F,QAAQ14E,OAAS3lB,GAAMsJ,EAAM+0F,QAAQ/oE,OAAOhS,OAAOgS,IACtEhsB,EAAM+0F,QAAQpsE,UAAYyE,IAE1BptB,EAAM+0F,QAAQpsE,SAAWyE,EACzBptB,EAAM+0F,QAAQ/oE,OAASA,EACvBhsB,EAAM+0F,QAAQ14E,MAAQ3lB,EAEtBsJ,EAAM+0F,QAAQr4E,YAWjBo3E,eAAellI,UAAUwxI,iBAAmB,SAASpgG,EAAO0V,EAAGz/C,GAE9D,GAAqB,MAAjB+pC,EAAM+0F,QACV,CACC,IAAIr+F,EAAIsJ,EAAM6sB,KAAKxQ,MACfuM,EAAK5oB,EAAMka,aACXyS,EAAK3sB,EAAMma,aAEf,IAAKna,EAAM6sB,KAAKvR,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,QAE7C0M,EAAK5oB,EAAMkO,EAAIwH,EAAIhf,EACnBi2B,EAAK3sB,EAAM8Z,EAAI7jD,EAAIygC,EAEA,MAAfsJ,EAAMoc,OACV,CAEC,IAAIu2C,EAAM3yD,EAAMoc,MAAMs8C,mBAEtB,GAAIxpG,KAAK2tI,sBAERlqC,EAAMv9C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,eAAgB,QAIhE,GAAIhqB,EAAMoc,MAAMq6C,wBAChB,CACC,IAAIv7C,GAAKlb,EAAMgV,MAAQhV,EAAM6U,QAAU,EACvC+T,GAAM1N,EACNyR,GAAMzR,EAIR,GAAW,GAAPy3C,EACJ,CACO,IAAI9sC,EAAMzQ,QAAQqQ,UAAUktC,GACxBjsC,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAEf1kB,EAAQiU,QAAQ6T,gBAAgB,IAAIpP,QAAQ+O,EAAI+D,GAAKjG,EAAKE,EAC5D,IAAI/M,QAAQ7Z,EAAMka,aAAcla,EAAMma,eACxCyO,EAAKznB,EAAM+M,EACXye,EAAKxrB,EAAM2Y,GAKpB,OAAQ9Z,EAAM6sB,KAAKvR,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAChD,IAAInC,YAAY3qD,KAAKm8D,MAAM3C,EAAKlT,EAAI,EAAIhf,GAAItnC,KAAKm8D,MAAMoB,EAAK12D,EAAI,EAAIygC,GAAItnC,KAAKm8D,MAAM7V,EAAIhf,GAAItnC,KAAKm8D,MAAMt1D,EAAIygC,IAI5G,OAAO,MAeRo9F,eAAellI,UAAUyxI,iBAAmB,SAASrgG,EAAO59B,EAAMk+H,GAIjE,IAFA,IAAIC,EAASrxI,KAAKsxI,kBAAkBxgG,GAE3B5nC,EAAI,EAAGA,EAAImoI,EAAOzwI,OAAQsI,IAElC,GAAiB,MAAbmoI,EAAOnoI,IAAgC,MAAlBmoI,EAAOnoI,GAAGgK,KACnC,CACC,IAAIo8B,EAAO+hG,EAAOnoI,GAAGgK,KAAKujB,YAAcqa,EAAM6sB,KAAKgoE,eAClD0L,EAAOnoI,GAAGgK,KAAKujB,YAAcqa,EAAM6sB,KAAK8nC,iBACrC1hC,EAAO,EAASqtE,EAAWl+H,EAE/B,GAAY,MAAR6wD,GAAgBA,EAAKprC,aAAe04G,EAAOnoI,GAAGgK,KAEzB,MAApB6wD,EAAKprC,YAERorC,EAAKttC,WAAWiC,YAAY24G,EAAOnoI,GAAGgK,MAItC6wD,EAAKttC,WAAW6B,aAAa+4G,EAAOnoI,GAAGgK,KAAM6wD,EAAKprC,kBAG/C,GAAY,MAARorC,EAGR,GAAIstE,EAAOnoI,GAAGgK,KAAKujB,YAAcqa,EAAM6sB,KAAKvR,MAAM2R,UAClD,CACC,IAAI6F,EAAS9yB,EAAM6sB,KAAKiG,OAExB,MAAiB,MAAVA,GAAkBA,EAAOntC,YAAcqa,EAAM6sB,KAAKvR,MAAM2R,UAE9D6F,EAASA,EAAOntC,WAGH,MAAVmtC,GAAwC,MAAtBA,EAAOjrC,YAExBirC,EAAOjrC,aAAe04G,EAAOnoI,GAAGgK,MAEnCm+H,EAAOnoI,GAAGgK,KAAKujB,WAAW6B,aAAa+4G,EAAOnoI,GAAGgK,KAAM0wD,EAAOjrC,aAK/D04G,EAAOnoI,GAAGgK,KAAKujB,WAAWiC,YAAY24G,EAAOnoI,GAAGgK,WAGD,MAAxCm+H,EAAOnoI,GAAGgK,KAAKujB,WAAWgH,YAAsB4zG,EAAOnoI,GAAGgK,KAAKujB,WAAWgH,YAAc4zG,EAAOnoI,GAAGgK,MAG1Gm+H,EAAOnoI,GAAGgK,KAAKujB,WAAW6B,aAAa+4G,EAAOnoI,GAAGgK,KAAMm+H,EAAOnoI,GAAGgK,KAAKujB,WAAWgH,YAI/E6R,EAEH8hG,EAAWC,EAAOnoI,GAAGgK,KAIrBA,EAAOm+H,EAAOnoI,GAAGgK,KAKpB,MAAO,CAACA,EAAMk+H,IAafxM,eAAellI,UAAU4xI,kBAAoB,SAASxgG,GAErD,MAAO,CAACA,EAAMoc,MAAOpc,EAAMj/B,KAAMi/B,EAAM+0F,UAmBxCjB,eAAellI,UAAU8tD,OAAS,SAAS1c,EAAOnpB,EAAOogH,GAExD,IAAIwJ,EAAevxI,KAAKknG,YAAYp2D,EAAOnpB,EAAOogH,GAE/B,MAAfj3F,EAAMoc,OAA+B,MAAb66E,IAAqBA,IAEhD/nI,KAAKqwI,YAAYv/F,EAAOygG,GACxBvxI,KAAK+wI,mBAAmBjgG,EAAOygG,GAC/BvxI,KAAKixI,cAAcngG,EAAOygG,KAa5B3M,eAAellI,UAAUwnG,YAAc,SAASp2D,EAAOnpB,EAAOogH,GAE7D,IAAI3hH,EAAQ0qB,EAAM6sB,KAAKvR,MAAMhmC,MACzBmrH,GAAe,EA2EnB,OAxEmB,MAAfzgG,EAAMoc,OAAsC,MAArBpc,EAAMoc,MAAMtlC,OAAgC,MAAfkpB,EAAMlpB,OAC7DkpB,EAAMoc,MAAMtlC,MAAMiiC,YAAYopB,cAAgBniC,EAAMlpB,MAAMiiC,YAAYopB,eAEtEniC,EAAMoc,MAAMxnC,UACZorB,EAAMoc,MAAQ,MAGI,MAAfpc,EAAMoc,OAA+C,MAA9Bpc,EAAM6sB,KAAKvR,MAAM2R,WAC3CjtB,EAAMkc,MAAQlc,EAAM6sB,KAAKmhD,cACxB14F,EAAMuvE,SAAS7kD,EAAMkc,OAAS5mC,EAAMjX,OAAO2hC,EAAMkc,QAElDlc,EAAMoc,MAAQltD,KAAKguI,YAAYl9F,GAEZ,MAAfA,EAAMoc,QAETpc,EAAMoc,MAAM64C,kBAAoB/lG,KAAK+lG,kBACrCj1D,EAAMoc,MAAM44C,UAAY9lG,KAAK8lG,UAE7B9lG,KAAKkuI,qBAAqBp9F,GAC1B9wC,KAAK8tI,gBAAgBh9F,GACrB9wC,KAAK2vI,mBAAmB7+F,GACxB9wC,KAAK8qI,iBAAiBh6F,GAGtBA,EAAM6sB,KAAKvR,MAAMolF,sBAAsBC,cAAc3gG,KAG7CnpB,GAAwB,MAAfmpB,EAAMoc,OAAmBhH,QAAQgQ,aAAaplB,EAAMoc,MAAMtlC,MAC5EkpB,EAAMlpB,SAAU5nB,KAAK0uI,uBAAuB59F,KAE5CA,EAAMoc,MAAMu9C,cACZzqG,KAAK+tI,eAAej9F,GAEpBA,EAAM6sB,KAAKvR,MAAMolF,sBAAsBC,cAAc3gG,GACrDnpB,GAAQ,GAGU,MAAfmpB,EAAMoc,QAGTltD,KAAK8vI,cAAch/F,IAIfnpB,GAAS3nB,KAAK0xI,eAAe5gG,EAAOA,EAAMoc,UAEjB,MAAxBpc,EAAM6qB,gBAET7qB,EAAMoc,MAAMy4C,OAAS70D,EAAM6qB,eAAerxD,QAC1CwmC,EAAMoc,MAAM4P,OAAS,OAIrBhsB,EAAMoc,MAAMy4C,OAAS,KACrB70D,EAAMoc,MAAM4P,OAAS,IAAIjS,YAAY/Z,EAAMkO,EAAGlO,EAAM8Z,EAAG9Z,EAAMgV,MAAOhV,EAAM6U,SAG3E7U,EAAMoc,MAAMC,MAAQrc,EAAM6sB,KAAKxQ,MAEd,MAAb46E,GAAqBA,EAExB/nI,KAAK2xI,cAAc7gG,GAInBA,EAAMoc,MAAMk6C,oBAGbmqC,GAAe,IAIVA,GAQR3M,eAAellI,UAAUiyI,cAAgB,SAAS7gG,GAEjDA,EAAMoc,MAAMM,UAQbo3E,eAAellI,UAAUgyI,eAAiB,SAAS5gG,EAAOoc,GAEzD,OAAuB,MAAhBA,EAAM4P,QAAkB5P,EAAMC,OAASrc,EAAM6sB,KAAKxQ,OAC/B,MAAxBrc,EAAM6qB,iBAA2BzO,EAAM4P,OAAOhS,OAAOha,IAC7B,MAAxBA,EAAM6qB,iBAA2BzV,QAAQ+P,YAAY/I,EAAMy4C,OAAQ70D,EAAM6qB,iBAY5EipE,eAAellI,UAAUgmB,QAAU,SAASorB,GAExB,MAAfA,EAAMoc,QAES,MAAdpc,EAAMj/B,OAETi/B,EAAMj/B,KAAK6T,UACXorB,EAAMj/B,KAAO,MAGQ,MAAlBi/B,EAAMqmD,WAETrmD,EAAMqmD,SAASluC,OAAM,SAASt4C,EAAIu8C,GAEjCA,EAAMxnC,aAGPorB,EAAMqmD,SAAW,MAGG,MAAjBrmD,EAAM+0F,UAET/0F,EAAM+0F,QAAQngH,UACdorB,EAAM+0F,QAAU,MAGjB/0F,EAAMoc,MAAMxnC,UACZorB,EAAMoc,MAAQ,OAIhBvM,WAAWikF,eAA2C,qBAAnBA,eAAiCA,oBAAiBrkI,EAMrF,IAAIqxI,YACJ,CA4FEC,eAAgB,SAAU/gG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAEzD,IAAI86D,EAAO7sB,EAAM6sB,KACZvR,EAAQuR,EAAKvR,MACb0lF,EAAU5rF,QAAQxb,SAASoG,EAAMlpB,MACnCiiC,YAAY2mB,cACZ3mB,YAAYuiB,gBAAkBzO,EAAKxQ,MAElCqP,EAAM1rB,EAAM6qB,eACZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAO,GAEnBmxI,GAAe,EAEpB,GAAU,MAAN5nC,EAEHjmG,EAAS,IAAI+/H,YACb//H,EAAO86C,EAAImrD,EAAGnrD,EACd96C,EAAO0mD,EAAIu/C,EAAGv/C,MAEV,IAAc,MAAV1mD,EAyBR,OAvBA,IAAIu3D,EAAavV,QAAQiU,mBAAmBj2D,EAAQ4sC,GAAO,EAAM+Y,YAAY8Q,qBAE7E,GAAIc,GAAc5R,YAAY8Q,qBAAuBc,GAAc5R,YAAYuR,oBAC9EvR,YAAYqR,oBAEZ62E,EAAet2E,GAAc5R,YAAYuR,wBAG1C,CACE,IAAI42E,EAAiB5lF,EAAM6pC,gBAAgB/xF,EAAO8oD,MAE9CglF,EAAe97C,SAElB67C,EAAeC,EAAehzF,GAAK,GAEjB,MAAV56C,IAER2tI,EAAe3tI,EAAO46C,EAAI56C,EAAO0hD,MAAQ5hD,EAAO86C,IASnD,IAAIizF,GAAe,EAEpB,GAAU,MAAN/nC,EAEH9lG,EAAS,IAAI6/H,YACb7/H,EAAO46C,EAAIkrD,EAAGlrD,EACd56C,EAAOwmD,EAAIs/C,EAAGt/C,OAEV,GAAc,MAAVxmD,EACR,CACIq3D,EAAavV,QAAQiU,mBAAmB/1D,EAAQ0sC,GAAO,EAAO+Y,YAAY8Q,qBAE9E,GAAIc,GAAc5R,YAAY8Q,qBAAuBc,GAAc5R,YAAYuR,oBAC9EvR,YAAYqR,oBAEZ+2E,EAAex2E,GAAc5R,YAAYuR,wBAG1C,CACE,IAAI82E,EAAiB9lF,EAAM6pC,gBAAgB7xF,EAAO4oD,MAE9CklF,EAAeh8C,SAElB+7C,EAAeC,EAAelzF,GAAK,GAEjB,MAAV96C,IAER+tI,EAAe/tI,EAAO86C,EAAI96C,EAAO4hD,MAAQ1hD,EAAO46C,IAKpD,GAAc,MAAV96C,GAA4B,MAAVE,EACtB,CACC,IAAIyyD,EAAK,EAAiB3yD,EAAO86C,EAAI96C,EAAO86C,EAAI96C,EAAO4hD,MACnDgR,EAAK6G,EAAKw0E,kBAAkBjuI,GAE5BkuI,EAAK,EAAiBhuI,EAAO46C,EAAI56C,EAAO46C,EAAI56C,EAAO0hD,MACnDusF,EAAK10E,EAAKw0E,kBAAkB/tI,GAE5Bw0D,EAAMk5E,EAENjjG,EAAK,GAAkB+pB,EAAMA,EAC7BzkD,EAAM,IAAIw2C,QAAQkM,EAAKhoB,EAAIioB,GAE/BjoB,EAAK,GAAkB+pB,EAAMA,EAC7B,IAAItvD,EAAM,IAAIqhD,QAAQynF,EAAKvjG,EAAIwjG,GAG/B,GAAIN,GAAgBE,EACpB,CACC,IAAIjzF,EAAI,EACP9+C,KAAKyD,IAAIkzD,EAAIu7E,GAAIN,EACjB5xI,KAAKwD,IAAImzD,EAAIu7E,GAAIN,EAElBjvI,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAG8X,IAC3Bj0D,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAGqzF,SAEvB,GAAKl+H,EAAI6qC,EAAI11C,EAAI01C,GAAM+yF,EAC5B,CACC,IAAIO,EAAOx7E,GAAMu7E,EAAKv7E,GAAM,EAE5Bj0D,EAAOkO,KAAKoD,GACZtR,EAAOkO,KAAK,IAAI45C,QAAQx2C,EAAI6qC,EAAGszF,IAC/BzvI,EAAOkO,KAAK,IAAI45C,QAAQrhD,EAAI01C,EAAGszF,IAC/BzvI,EAAOkO,KAAKzH,QAIZzG,EAAOkO,KAAKoD,GACZtR,EAAOkO,KAAKzH,KAUfipI,KAAM,SAAUzhG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAE9C,IAAI25D,EAAM1rB,EAAM6qB,eAEZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAO,GAExB,GAAU,MAANupG,GAAoB,MAAND,GAelB,GAAc,MAAVhmG,EACJ,CACC,IAAIy5D,EAAO7sB,EAAM6sB,KACbvR,EAAQuR,EAAKvR,MACb4N,EAAgB,MAAV2rC,GAAkBA,EAAO/kG,OAAS,EAAK+kG,EAAO,GAAK,KAEnD,MAAN3rC,IAEHA,EAAK2D,EAAK60E,sBAAsB1hG,EAAOkpB,GAEnC9T,QAAQ6W,SAAS74D,EAAQ81D,EAAGhb,EAAGgb,EAAGpP,KAErCoP,EAAK,OAIP,IAAIhb,EAAI,EACJnQ,EAAK,EACL+b,EAAI,EACJ7b,EAAK,EAEJ6pB,EAAM1S,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY2mB,cACnDpkB,EAAMygC,UAAYlvB,EAAKxQ,MACrB7uB,EAAM4nB,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYqS,gBACnDrS,YAAYwR,gBAET/8B,GAAOurB,YAAYmR,iBACtB18B,GAAOurB,YAAYyR,iBAEnBtc,EAAI2e,EAAK80E,kBAAkBvuI,GAC3B2qC,EAAK+pB,IAILhO,EAAI+S,EAAKw0E,kBAAkBjuI,GAC3B6qC,EAAK6pB,GAGI,MAANoB,GACHA,EAAGhb,EAAI96C,EAAO86C,GACdgb,EAAGhb,EAAI96C,EAAO86C,EAAI96C,EAAO4hD,MAEf,MAANkU,GAEHhb,EAAIgb,EAAGhb,EACPjQ,EAAK7uC,KAAKwD,IAAIxD,KAAKk3D,IAAIxM,EAAIoP,EAAGpP,GAAI7b,IAI9BzQ,GAAOurB,YAAYmR,gBAEtBpQ,EAAI1mD,EAAO0mD,EAAI,EAAI/b,EAEXvQ,GAAOurB,YAAYyR,gBAE3B1Q,EAAI1mD,EAAO0mD,EAAI1mD,EAAOyhD,OAAS,EAAI9W,EAInCmQ,EAFQ1gB,GAAOurB,YAAY0R,eAEvBr3D,EAAO86C,EAAI,EAAIjQ,EAIf7qC,EAAO86C,EAAI96C,EAAO4hD,MAAQ,EAAI/W,EAItB,MAANirB,IAERhb,EAAI2e,EAAK80E,kBAAkBvuI,GAC3B2qC,EAAK3uC,KAAKwD,IAAIxD,KAAKk3D,IAAIpY,EAAIgb,EAAGhb,GAAIjQ,GAClC6b,EAAIoP,EAAGpP,EACP7b,EAAK,GAGNlsC,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAInQ,EAAI+b,EAAI7b,IACpClsC,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAInQ,EAAI+b,EAAI7b,UAzFpC,GAAc,MAAV42D,GAAkBA,EAAO/kG,OAAS,EAErC,IAAK,IAAIsI,EAAI,EAAGA,EAAIy8F,EAAO/kG,OAAQsI,IACnC,CACC,IAAI8wD,EAAK2rC,EAAOz8F,GAChB8wD,EAAKlpB,EAAM6sB,KAAK60E,sBAAsB1hG,EAAOkpB,GAC7Cn3D,EAAOkO,KAAK,IAAI45C,QAAQqP,EAAGhb,EAAGgb,EAAGpP,MA+FrC8nF,eAAgB,SAAU5hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAExD,IAAIm3D,EAAgB,MAAV2rC,GAAkBA,EAAO/kG,OAAS,EAAK+kG,EAAO,GAAK,KAEzDzB,GAAW,EACXD,GAAa,EAEjB,GAAc,MAAV//F,GAA4B,MAAVE,EAErB,GAAU,MAAN41D,EACJ,CACC,IAAIlrB,EAAO5uC,KAAKyD,IAAIO,EAAO86C,EAAG56C,EAAO46C,GACjCwV,EAAQt0D,KAAKwD,IAAIQ,EAAO86C,EAAI96C,EAAO4hD,MACtC1hD,EAAO46C,EAAI56C,EAAO0hD,OAEf9W,EAAM9uC,KAAKyD,IAAIO,EAAO0mD,EAAGxmD,EAAOwmD,GAChC8J,EAASx0D,KAAKwD,IAAIQ,EAAO0mD,EAAI1mD,EAAOyhD,OACvCvhD,EAAOwmD,EAAIxmD,EAAOuhD,QAEnBqU,EAAKlpB,EAAM6sB,KAAK60E,sBAAsB1hG,EAAOkpB,GAE7CkqC,EAAWlqC,EAAGpP,EAAI5b,GAAOgrB,EAAGpP,EAAI8J,EAChCuvC,EAAajqC,EAAGhb,EAAIlQ,GAAQkrB,EAAGhb,EAAIwV,MAGpC,CACK1lB,EAAO5uC,KAAKwD,IAAIQ,EAAO86C,EAAG56C,EAAO46C,GACjCwV,EAAQt0D,KAAKyD,IAAIO,EAAO86C,EAAI96C,EAAO4hD,MACtC1hD,EAAO46C,EAAI56C,EAAO0hD,OAInB,GAFAo+C,EAAWp1D,GAAQ0lB,GAEd0vC,EACL,CACKl1D,EAAM9uC,KAAKwD,IAAIQ,EAAO0mD,EAAGxmD,EAAOwmD,GAChC8J,EAASx0D,KAAKyD,IAAIO,EAAO0mD,EAAI1mD,EAAOyhD,OACvCvhD,EAAOwmD,EAAIxmD,EAAOuhD,QAEnBs+C,EAAaj1D,GAAO0lB,GAKlBuvC,IAAeC,GACnBpzD,EAAMlpB,MAAMiiC,YAAYkoB,cAAgBloB,YAAYgsB,eAMpD+7D,YAAYe,WAAW7hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAJtD+uI,YAAYgB,YAAY9hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,IAczD8vI,WAAY,SAAU7hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAEpD,IAAI86D,EAAO7sB,EAAM6sB,KACb3D,EAAgB,MAAV2rC,GAAkBA,EAAO/kG,OAAS,EAAK+kG,EAAO,GAAK,KACzDnpC,EAAM1rB,EAAM6qB,eACZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAO,GAqBxB,GAnBU,MAANo5D,IAEHA,EAAK2D,EAAK60E,sBAAsB1hG,EAAOkpB,IAG9B,MAANmwC,IAEHjmG,EAAS,IAAI+/H,YACb//H,EAAO86C,EAAImrD,EAAGnrD,EACd96C,EAAO0mD,EAAIu/C,EAAGv/C,GAGL,MAANs/C,IAEH9lG,EAAS,IAAI6/H,YACb7/H,EAAO46C,EAAIkrD,EAAGlrD,EACd56C,EAAOwmD,EAAIs/C,EAAGt/C,GAGD,MAAV1mD,GAA4B,MAAVE,EACtB,CACC,IAAIwG,EAAI1K,KAAKwD,IAAIQ,EAAO86C,EAAG56C,EAAO46C,GAC9Bkf,EAAIh+D,KAAKyD,IAAIO,EAAO86C,EAAI96C,EAAO4hD,MAC9B1hD,EAAO46C,EAAI56C,EAAO0hD,OAEnB9G,EAAW,MAANgb,EAAcA,EAAGhb,EAAI9+C,KAAKm8D,MAAM6B,GAAKtzD,EAAIszD,GAAK,GAEnDhE,EAAKyD,EAAKw0E,kBAAkBjuI,GAC5Bm1D,EAAKsE,EAAKw0E,kBAAkB/tI,GA2BhC,GAzBU,MAAN41D,IAECA,EAAGpP,GAAK1mD,EAAO0mD,GAAKoP,EAAGpP,GAAK1mD,EAAO0mD,EAAI1mD,EAAOyhD,SAEjDuU,EAAKF,EAAGpP,GAGLoP,EAAGpP,GAAKxmD,EAAOwmD,GAAKoP,EAAGpP,GAAKxmD,EAAOwmD,EAAIxmD,EAAOuhD,SAEjD0T,EAAKW,EAAGpP,IAIL1E,QAAQ6W,SAAS34D,EAAQ46C,EAAGkb,IAC/BhU,QAAQ6W,SAAS74D,EAAQ86C,EAAGkb,IAE7Br3D,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAIkb,IAGxBhU,QAAQ6W,SAAS34D,EAAQ46C,EAAGqa,IAC/BnT,QAAQ6W,SAAS74D,EAAQ86C,EAAGqa,IAE7Bx2D,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAGqa,IAGP,GAAjBx2D,EAAOjC,OAEV,GAAU,MAANo5D,EAEE9T,QAAQ6W,SAAS34D,EAAQ46C,EAAGgb,EAAGpP,IAClC1E,QAAQ6W,SAAS74D,EAAQ86C,EAAGgb,EAAGpP,IAEhC/nD,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAGgb,EAAGpP,QAIhC,CACC,IAAIoB,EAAI9rD,KAAKwD,IAAIQ,EAAO0mD,EAAGxmD,EAAOwmD,GAC9B/pD,EAAIX,KAAKyD,IAAIO,EAAO0mD,EAAI1mD,EAAOyhD,OAChCvhD,EAAOwmD,EAAIxmD,EAAOuhD,QAErB9iD,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAGgN,GAAKnrD,EAAImrD,GAAK,OAY7C4mF,YAAa,SAAS9hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAEpD,IAAI86D,EAAO7sB,EAAM6sB,KACb3D,EAAgB,MAAV2rC,GAAkBA,EAAO/kG,OAAS,EAAK+kG,EAAO,GAAK,KACzDnpC,EAAM1rB,EAAM6qB,eACZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAO,GAqBxB,GAnBU,MAANo5D,IAEHA,EAAK2D,EAAK60E,sBAAsB1hG,EAAOkpB,IAG9B,MAANmwC,IAEHjmG,EAAS,IAAI+/H,YACb//H,EAAO86C,EAAImrD,EAAGnrD,EACd96C,EAAO0mD,EAAIu/C,EAAGv/C,GAGL,MAANs/C,IAEH9lG,EAAS,IAAI6/H,YACb7/H,EAAO46C,EAAIkrD,EAAGlrD,EACd56C,EAAOwmD,EAAIs/C,EAAGt/C,GAGD,MAAV1mD,GAA4B,MAAVE,EACtB,CACC,IAAI4nD,EAAI9rD,KAAKwD,IAAIQ,EAAO0mD,EAAGxmD,EAAOwmD,GAC9B/pD,EAAIX,KAAKyD,IAAIO,EAAO0mD,EAAI1mD,EAAOyhD,OAC9BvhD,EAAOwmD,EAAIxmD,EAAOuhD,QAEnB3G,EAAI2e,EAAK80E,kBAAkBvuI,GAErB,MAAN81D,GACHA,EAAGhb,GAAK96C,EAAO86C,GACfgb,EAAGhb,GAAK96C,EAAO86C,EAAI96C,EAAO4hD,QAE1B9G,EAAIgb,EAAGhb,GAGR,IAAI4L,EAAW,MAANoP,EAAcA,EAAGpP,EAAI1qD,KAAKm8D,MAAMx7D,GAAKmrD,EAAInrD,GAAK,GAyBvD,GAvBKqlD,QAAQ6W,SAAS34D,EAAQ46C,EAAG4L,IAC/B1E,QAAQ6W,SAAS74D,EAAQ86C,EAAG4L,IAE7B/nD,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAO3B5L,EAJS,MAANgb,GACHA,EAAGhb,GAAK56C,EAAO46C,GACfgb,EAAGhb,GAAK56C,EAAO46C,EAAI56C,EAAO0hD,MAEtBkU,EAAGhb,EAIH2e,EAAK80E,kBAAkBruI,GAGvB8hD,QAAQ6W,SAAS34D,EAAQ46C,EAAG4L,IAC/B1E,QAAQ6W,SAAS74D,EAAQ86C,EAAG4L,IAE7B/nD,EAAOkO,KAAK,IAAI45C,QAAQ3L,EAAG4L,IAGP,GAAjB/nD,EAAOjC,OAEV,GAAU,MAANo5D,GAA+B,GAAjBn3D,EAAOjC,OAEnBslD,QAAQ6W,SAAS34D,EAAQ41D,EAAGhb,EAAG4L,IAClC1E,QAAQ6W,SAAS74D,EAAQ81D,EAAGhb,EAAG4L,IAEhC/nD,EAAOkO,KAAK,IAAI45C,QAAQqP,EAAGhb,EAAG4L,QAIhC,CACC,IAAIhgD,EAAI1K,KAAKwD,IAAIQ,EAAO86C,EAAG56C,EAAO46C,GAC9Bkf,EAAIh+D,KAAKyD,IAAIO,EAAO86C,EAAI96C,EAAO4hD,MAChC1hD,EAAO46C,EAAI56C,EAAO0hD,OAErBjjD,EAAOkO,KAAK,IAAI45C,QAAQ//C,GAAKszD,EAAItzD,GAAK,EAAGggD,OAY7CioF,iBAAkB,SAAS/hG,EAAO5sC,EAAQE,EAAQ0uI,EAAOjwI,GAGxD,IAAI25D,EAAM1rB,EAAM6qB,eACZmjC,EAAM5+F,KAAKwD,IAAI,EAAGotC,EAAM6sB,KAAKxQ,OAG7B4lF,EAAclwI,EAAOjC,OAAS,EAAKiC,EAAO,GAAK,KAC/CohG,GAAa,EACb+uC,EAAO,KAGX,SAASC,EAAUj5E,GAQlB,OANkB,MAAd+4E,GAAsB7yI,KAAKk3D,IAAI27E,EAAW/zF,EAAIgb,EAAGhb,IAAM8/C,GAAO5+F,KAAKk3D,IAAI27E,EAAWnoF,EAAIoP,EAAGpP,IAAMk0C,KAElGj8F,EAAOkO,KAAKipD,GACZ+4E,EAAa/4E,GAGP+4E,EAIR,IAAI/4E,EAAKwC,EAAI,GAEH,MAANxC,GAAwB,MAAV91D,EAEjB81D,EAAK,IAAIrP,QAAQ7Z,EAAM6sB,KAAK80E,kBAAkBvuI,GAAS4sC,EAAM6sB,KAAKw0E,kBAAkBjuI,IAEtE,MAAN81D,IAERA,EAAKA,EAAGx1C,SAGTw1C,EAAGhb,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,GACrBgb,EAAGpP,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,GAErB,IAAIsoF,EAAU12E,EAAI57D,OAAS,EAG3B,GAAa,MAATkyI,GAAiBA,EAAMlyI,OAAS,EACpC,CAIC,IAFA,IAAIuyI,EAAW,GAENjqI,EAAI,EAAGA,EAAI4pI,EAAMlyI,OAAQsI,IAClC,CACC,IAAIymB,EAAMmhB,EAAM6sB,KAAK60E,sBAAsB1hG,EAAOgiG,EAAM5pI,IAE7C,MAAPymB,IAEHA,EAAIqvB,EAAI9+C,KAAKm8D,MAAM1sC,EAAIqvB,GACvBrvB,EAAIi7B,EAAI1qD,KAAKm8D,MAAM1sC,EAAIi7B,GACvBuoF,EAASpiI,KAAK4e,IAIhB,GAAuB,GAAnBwjH,EAASvyI,OAEZ,OAGDkyI,EAAQK,EAGE,MAANn5E,GAA0B,MAAZ84E,EAAM,KAEnB5yI,KAAKk3D,IAAI07E,EAAM,GAAG9zF,EAAIgb,EAAGhb,GAAK8/C,IAEjCg0C,EAAM,GAAG9zF,EAAIgb,EAAGhb,GAGb9+C,KAAKk3D,IAAI07E,EAAM,GAAGloF,EAAIoP,EAAGpP,GAAKk0C,IAEjCg0C,EAAM,GAAGloF,EAAIoP,EAAGpP,IAIlB,IAAIs/C,EAAK1tC,EAAI02E,GAEH,MAANhpC,GAAyC,MAA3B4oC,EAAMA,EAAMlyI,OAAS,KAElCV,KAAKk3D,IAAI07E,EAAMA,EAAMlyI,OAAS,GAAGo+C,EAAIkrD,EAAGlrD,GAAK8/C,IAEhDg0C,EAAMA,EAAMlyI,OAAS,GAAGo+C,EAAIkrD,EAAGlrD,GAG5B9+C,KAAKk3D,IAAI07E,EAAMA,EAAMlyI,OAAS,GAAGgqD,EAAIs/C,EAAGt/C,GAAKk0C,IAEhDg0C,EAAMA,EAAMlyI,OAAS,GAAGgqD,EAAIs/C,EAAGt/C,IAIjCooF,EAAOF,EAAM,GAEb,IAAIM,EAAclvI,EACdmvI,EAAY72E,EAAI,GAChB82E,GAAU,EACVC,GAAW,EACXC,EAAcR,EAED,MAAbK,IAEHA,EAAUr0F,EAAI9+C,KAAKm8D,MAAMg3E,EAAUr0F,GACnCq0F,EAAUzoF,EAAI1qD,KAAKm8D,MAAMg3E,EAAUzoF,GACnCwoF,EAAc,MAKf,IAASlqI,EAAI,EAAGA,EAAI,EAAGA,IACvB,CACC,IAAIuqI,EAA8B,MAAbJ,GAAqBA,EAAUr0F,GAAKw0F,EAAYx0F,EACjE00F,EAA6B,MAAbL,GAAqBA,EAAUzoF,GAAK4oF,EAAY5oF,EAEhE+oF,EAA2B,MAAfP,GAAwBI,EAAY5oF,GAAKwoF,EAAYxoF,GACnE4oF,EAAY5oF,GAAKwoF,EAAYxoF,EAAIwoF,EAAYztF,OAC3CiuF,EAA4B,MAAfR,GAAwBI,EAAYx0F,GAAKo0F,EAAYp0F,GACpEw0F,EAAYx0F,GAAKo0F,EAAYp0F,EAAIo0F,EAAYttF,MAS/C,GAPAwtF,EAAUI,GAA+B,MAAbL,GAAqBM,EACjDJ,EAAWE,GAAgC,MAAbJ,GAAqBO,EAM5C,GAAH1qI,IAAUoqI,GAAWC,GAAcE,GAAkBC,QAIzD,CACC,GAAiB,MAAbL,IAAuBK,IAAkBD,IAAoBE,GAAaC,GAC9E,CACC3vC,GAAa0vC,EACb,MAGD,GAAIJ,GAAYD,EAChB,CACCrvC,EAAaqvC,EAEJ,GAALpqI,IAGH+6F,EAAa6uC,EAAMlyI,OAAS,GAAK,EAAI0yI,EAAUC,GAGhD,OAIFH,EAAchvI,EACdivI,EAAY72E,EAAI02E,GAEC,MAAbG,IAEHA,EAAUr0F,EAAI9+C,KAAKm8D,MAAMg3E,EAAUr0F,GACnCq0F,EAAUzoF,EAAI1qD,KAAKm8D,MAAMg3E,EAAUzoF,GACnCwoF,EAAc,MAGfI,EAAcV,EAAMA,EAAMlyI,OAAS,GAE/B6yI,GAAkBC,IAErBZ,EAAQA,EAAMxoI,MAAM,IAIlB25F,IAA0B,MAAVznC,EAAI,IAAcA,EAAI,GAAG5R,GAAKooF,EAAKpoF,GAC3C,MAAV4R,EAAI,IAAwB,MAAVt4D,IAClB8uI,EAAKpoF,EAAI1mD,EAAO0mD,GAAKooF,EAAKpoF,EAAI1mD,EAAO0mD,EAAI1mD,EAAOyhD,SAEjDstF,EAAU,IAAItoF,QAAQqP,EAAGhb,EAAGg0F,EAAKpoF,KAExBq5C,IAA0B,MAAVznC,EAAI,IAAcA,EAAI,GAAGxd,GAAKg0F,EAAKh0F,GAChD,MAAVwd,EAAI,IAAwB,MAAVt4D,IAClB8uI,EAAKh0F,EAAI96C,EAAO86C,GAAKg0F,EAAKh0F,EAAI96C,EAAO86C,EAAI96C,EAAO4hD,SAElDmtF,EAAU,IAAItoF,QAAQqoF,EAAKh0F,EAAGgb,EAAGpP,IAG9Bq5C,EAEHjqC,EAAGpP,EAAIooF,EAAKpoF,EAIZoP,EAAGhb,EAAIg0F,EAAKh0F,EAGb,IAAS91C,EAAI,EAAGA,EAAI4pI,EAAMlyI,OAAQsI,IAEjC+6F,GAAcA,EACd+uC,EAAOF,EAAM5pI,GAKT+6F,EAEHjqC,EAAGpP,EAAIooF,EAAKpoF,EAIZoP,EAAGhb,EAAIg0F,EAAKh0F,EAGbi0F,EAAUj5E,EAAGx1C,cAKdwuH,EAAOh5E,EAEPiqC,GAAa,EAkCd,GA9BAjqC,EAAKwC,EAAI02E,GAEC,MAANl5E,GAAwB,MAAV51D,IAEjB41D,EAAK,IAAIrP,QAAQ7Z,EAAM6sB,KAAK80E,kBAAkBruI,GAAS0sC,EAAM6sB,KAAKw0E,kBAAkB/tI,KAG3E,MAAN41D,IAEHA,EAAGhb,EAAI9+C,KAAKm8D,MAAMrC,EAAGhb,GACrBgb,EAAGpP,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,GAET,MAARooF,IAEC/uC,IAAgC,MAAhBznC,EAAI02E,IAAoB12E,EAAI02E,GAAStoF,GAAKooF,EAAKpoF,GACjD,MAAhB4R,EAAI02E,IAA8B,MAAV9uI,IACxB4uI,EAAKpoF,EAAIxmD,EAAOwmD,GAAKooF,EAAKpoF,EAAIxmD,EAAOwmD,EAAIxmD,EAAOuhD,SAEjDstF,EAAU,IAAItoF,QAAQqP,EAAGhb,EAAGg0F,EAAKpoF,KAExBq5C,IAAgC,MAAhBznC,EAAI02E,IAAoB12E,EAAI02E,GAASl0F,GAAKg0F,EAAKh0F,GACtD,MAAhBwd,EAAI02E,IAA8B,MAAV9uI,IACxB4uI,EAAKh0F,EAAI56C,EAAO46C,GAAKg0F,EAAKh0F,EAAI56C,EAAO46C,EAAI56C,EAAO0hD,SAElDmtF,EAAU,IAAItoF,QAAQqoF,EAAKh0F,EAAGgb,EAAGpP,MAMtB,MAAV4R,EAAI,IAAwB,MAAVt4D,EAErB,MAAOrB,EAAOjC,OAAS,GAAkB,MAAbiC,EAAO,IAClCqjD,QAAQ6W,SAAS74D,EAAQrB,EAAO,GAAGm8C,EAAGn8C,EAAO,GAAG+nD,GAEhD/nD,EAAO4G,OAAO,EAAG,GAKnB,GAAoB,MAAhB+yD,EAAI02E,IAA8B,MAAV9uI,EAE3B,MAAOvB,EAAOjC,OAAS,GAAkC,MAA7BiC,EAAOA,EAAOjC,OAAS,IAClDslD,QAAQ6W,SAAS34D,EAAQvB,EAAOA,EAAOjC,OAAS,GAAGo+C,EAAGn8C,EAAOA,EAAOjC,OAAS,GAAGgqD,GAEhF/nD,EAAO4G,OAAO5G,EAAOjC,OAAS,EAAG,GAKzB,MAANspG,GAA2C,MAA7BrnG,EAAOA,EAAOjC,OAAS,IACxCV,KAAKk3D,IAAI8yC,EAAGlrD,EAAIn8C,EAAOA,EAAOjC,OAAS,GAAGo+C,IAAM8/C,GAChD5+F,KAAKk3D,IAAI8yC,EAAGt/C,EAAI/nD,EAAOA,EAAOjC,OAAS,GAAGgqD,IAAMk0C,IAEhDj8F,EAAO4G,OAAO5G,EAAOjC,OAAS,EAAG,GAGA,MAA7BiC,EAAOA,EAAOjC,OAAS,KAEtBV,KAAKk3D,IAAIv0D,EAAOA,EAAOjC,OAAS,GAAGo+C,EAAIkrD,EAAGlrD,GAAK8/C,IAElDj8F,EAAOA,EAAOjC,OAAS,GAAGo+C,EAAIkrD,EAAGlrD,GAG9B9+C,KAAKk3D,IAAIv0D,EAAOA,EAAOjC,OAAS,GAAGgqD,EAAIs/C,EAAGt/C,GAAKk0C,IAElDj8F,EAAOA,EAAOjC,OAAS,GAAGgqD,EAAIs/C,EAAGt/C,MAMrCipF,WAAY,GAEZC,oBAAoB,EAEpBC,WAAY,CAAE,EAAG,EAAG,GAClB,CAAE,GAAI,GAAK,CAAE,EAAG,GAAK,CAAE,EAAG,GAAK,EAAG,EAAG,GAAK,CAAE,GAAI,GAAK,CAAE,EAAG,IAE5DC,WAAY,CAAE,CAAE,EAAG,GAAI,CAAE,EAAG,GAAK,CAAE,EAAG,GAAI,CAAE,EAAG,GAAI,CAAE,EAAG,GAAK,CAAE,EAAG,GACpD,CAAE,EAAG,GAAK,CAAE,EAAG,GAAI,CAAE,EAAG,GAAK,CAAE,EAAG,GAAI,CAAE,EAAG,GAAK,CAAE,EAAG,IAEnEC,cAAe,CACd,CAAE,CAAE,IAAK,KAAM,KAAM,MAAQ,CAAE,IAAK,KAAM,IAAK,KAAM,KAAM,MAC1D,CAAE,IAAK,KAAM,IAAK,KAAM,KAAM,MAC9B,CAAE,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,OACtC,CAAE,CAAE,IAAK,KAAM,IAAK,KAAM,KAAM,MAAQ,CAAE,IAAK,KAAM,KAAM,MACzD,CAAE,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,MACpC,CAAE,IAAK,KAAM,IAAK,KAAM,KAAM,OAChC,CAAE,CAAE,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,MAAQ,CAAE,KAAM,MACpD,CAAE,KAAM,KAAM,KAAM,IAAK,KAAM,MAC/B,CAAE,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,OACtC,CAAE,CAAE,KAAM,MAAQ,CAAE,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,MACpD,CAAE,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,MACpC,CAAE,KAAM,KAAM,KAAM,IAAK,KAAM,QAEjCC,oBAAqB,CACnB,CAAE,KAAM,CAAE,KAAM,MAAQ,KAAM,MAC9B,CAAE,KAAM,CAAE,IAAK,KAAM,KAAM,MAAS,KAAM,MAC1C,CAAE,KAAM,CAAE,KAAM,MAAQ,KAAM,MAC9B,CAAE,CAAE,KAAM,MAAQ,CAAE,KAAM,KAAM,MAC9B,CAAE,KAAM,MACR,OACJC,kBAAmB,GAEnBC,OAAQ,CACD,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1B,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEjCC,UAAW,GAEXC,SAAU,GAEVC,WAAY,IAEZC,YAAa,IAEbC,KAAM,EAENC,IAAK,EAELC,MAAO,EAEPC,OAAQ,EAGRC,UAAW,IAIXC,YAAa,IAEbC,YAAa,KAEbC,YAAa,KAEbC,YAAa,KAGbC,aAAc,SAASpkG,EAAO5sC,EAAQE,EAAQuhG,EAAQhuB,GAErD,IAAIr6E,EAAQ4oD,QAAQxb,SAASoG,EAAMlpB,MAAO,EAAaiiC,YAAYupB,wBAClEvpB,YAAYwpB,wBAAyBntB,QAAQxb,SAASoG,EAAMlpB,MAC1DiiC,YAAYspB,iBAAkBy+D,YAAYiC,aAE7C,GAAa,QAATv2I,EACJ,CAEC,IAAIqZ,EAAOuvC,QAAQxb,SAASoG,EAAMlpB,MAAO,EAAaiiC,YAAY6mB,iBAAmB7mB,YAAY4mB,eAAgB5mB,YAAYC,MAE7H,GAAInzC,GAAQkzC,YAAYC,KACxB,CACC,IAAIrJ,EAAOyF,QAAQ4P,UAAUhlB,EAAMlpB,MAAO,EAAaiiC,YAAY6T,gBAAkB7T,YAAY8mB,cAAe9mB,YAAYqiB,oBAC5H5uE,EAAQ4C,KAAKwD,IAAI,EAAGxD,KAAKD,MAAMwgD,EAAOmxF,YAAYiC,YAAcjC,YAAYiC,aAAejC,YAAYiC,gBAIvGv2I,EAAQ,EAAIs0I,YAAYiC,WAI1B,OAAOv2I,GAmBR63I,cAAe,SAASrkG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,GAEtD,IAAIupD,EAAQtb,EAAM6sB,KAAKvR,MACnBgpF,EAAuB,MAAVlxI,GAAyBkoD,EAAM8W,WAAW/zD,OAAOjL,EAAO8oD,MACrEqoF,EAAuB,MAAVjxI,GAAyBgoD,EAAM8W,WAAW/zD,OAAO/K,EAAO4oD,MAErEwP,EAAM1rB,EAAM6qB,eACZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAO,GAEpB00I,EAAoB,MAAVpxI,EAAiBA,EAAO86C,EAAImrD,EAAGnrD,EACzCu2F,EAAoB,MAAVrxI,EAAiBA,EAAO0mD,EAAIu/C,EAAGv/C,EACzC4qF,EAAwB,MAAVtxI,EAAiBA,EAAO4hD,MAAQ,EAC9C2vF,EAAyB,MAAVvxI,EAAiBA,EAAOyhD,OAAS,EAEhD+vF,EAAoB,MAAVtxI,EAAiBA,EAAO46C,EAAIkrD,EAAGlrD,EACzC22F,EAAoB,MAAVvxI,EAAiBA,EAAOwmD,EAAIs/C,EAAGt/C,EACzCgrF,EAAwB,MAAVxxI,EAAiBA,EAAO0hD,MAAQ,EAC9C+vF,EAAyB,MAAVzxI,EAAiBA,EAAOuhD,OAAS,EAEhDmwF,EAAqBhlG,EAAM6sB,KAAKxQ,MAAQykF,YAAYsD,aAAapkG,EAAO5sC,EAAQE,EAAQuhG,GAAQ,GAChGowC,EAAqBjlG,EAAM6sB,KAAKxQ,MAAQykF,YAAYsD,aAAapkG,EAAO5sC,EAAQE,EAAQuhG,GAAQ,GAGtF,MAAVzhG,GAAkBE,GAAUF,IAE/B6xI,EAAqB71I,KAAKwD,IAAIoyI,EAAoBC,GAClDD,EAAqBC,GAGtB,IAAIC,EAAcD,EAAqBD,EACnCG,GAAW,EAGf,GAAU,MAAN9rC,GAAoB,MAAND,EAClB,CACC,IAAIr7D,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EAEnBqrF,EAAWpnG,EAAKA,EAAKE,EAAKA,EAAKinG,EAAcA,EAG9C,GAAIC,GAAarE,YAAYkC,oBAAiC,MAAVnuC,GACnDA,EAAO/kG,OAAS,GAAOw0I,GAAcC,EAErCzD,YAAYiB,iBAAiB/hG,EAAO5sC,EAAQE,EAAQuhG,EAAQ9iG,OAH7D,CAWA,IAAIqzI,EAAiB,CAACrsF,YAAY+rB,mBAAoB/rB,YAAY+rB,oBAC9Dnc,EAAW,EAEf,GAAc,MAAVv1D,IAEHgyI,EAAe,GAAKhwF,QAAQiU,mBAAmBj2D,EAAQ4sC,GAAO,EAC5D+Y,YAAY+rB,oBACdnc,EAAWvT,QAAQxb,SAASxmC,EAAO0jB,MAAOiiC,YAAYiR,eAAgB,GAEtD,GAAZrB,GACJ,CACC,IAAI08E,EAAUjwF,QAAQsT,eAAe,IAAI3O,YAAYyqF,EAASC,EAASC,EAAaC,GAAeh8E,GACnG67E,EAAUa,EAAQn3F,EAClBu2F,EAAUY,EAAQvrF,EAClB4qF,EAAcW,EAAQrwF,MACtB2vF,EAAeU,EAAQxwF,OAIzB,GAAc,MAAVvhD,IAEH8xI,EAAe,GAAKhwF,QAAQiU,mBAAmB/1D,EAAQ0sC,GAAO,EAC7D+Y,YAAY+rB,oBACbnc,EAAWvT,QAAQxb,SAAStmC,EAAOwjB,MAAOiiC,YAAYiR,eAAgB,GAEtD,GAAZrB,GACJ,CACK08E,EAAUjwF,QAAQsT,eAAe,IAAI3O,YAAY6qF,EAASC,EAASC,EAAaC,GAAep8E,GACnGi8E,EAAUS,EAAQn3F,EAClB22F,EAAUQ,EAAQvrF,EAClBgrF,EAAcO,EAAQrwF,MACtB+vF,EAAeM,EAAQxwF,OAKzB2vF,EAAUp1I,KAAKm8D,MAAgB,GAAVi5E,GAAgB,GACrCC,EAAUr1I,KAAKm8D,MAAgB,GAAVk5E,GAAgB,GACrCC,EAAct1I,KAAKm8D,MAAoB,GAAdm5E,GAAoB,GAC7CC,EAAev1I,KAAKm8D,MAAqB,GAAfo5E,GAAqB,GAE/CC,EAAUx1I,KAAKm8D,MAAgB,GAAVq5E,GAAgB,GACrCC,EAAUz1I,KAAKm8D,MAAgB,GAAVs5E,GAAgB,GACrCC,EAAc11I,KAAKm8D,MAAoB,GAAdu5E,GAAoB,GAC7CC,EAAe31I,KAAKm8D,MAAqB,GAAfw5E,GAAqB,GAY/C,IAVA,IAAIv3G,EAAM,CAAC,EAAG,GAMV03D,EAAM,CAAE,CAACs/C,EAASC,EAASC,EAAaC,GAChC,CAACC,EAASC,EAASC,EAAaC,IACxC1wF,EAAS,CAAC2wF,EAAoBC,GAEzB7sI,EAAI,EAAGA,EAAI,EAAGA,IAEtB0oI,YAAYwC,OAAOlrI,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAKi8C,EAAOj8C,GAC9C0oI,YAAYwC,OAAOlrI,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAKi8C,EAAOj8C,GAC9C0oI,YAAYwC,OAAOlrI,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAKi8C,EAAOj8C,GAC1D0oI,YAAYwC,OAAOlrI,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAK8sF,EAAI9sF,GAAG,GAAKi8C,EAAOj8C,GAI3D,IAAIktI,EAAapgD,EAAI,GAAG,GAAKA,EAAI,GAAG,GAAK,EACrCqgD,EAAargD,EAAI,GAAG,GAAKA,EAAI,GAAG,GAAK,EACrCsgD,EAAatgD,EAAI,GAAG,GAAKA,EAAI,GAAG,GAAK,EACrCugD,EAAavgD,EAAI,GAAG,GAAKA,EAAI,GAAG,GAAK,EAKrCj7B,GAHAlsB,EAAKunG,EAAaE,EAClBvnG,EAAKsnG,EAAaE,EAEX,GAEP1nG,EAAK,EAIPksB,EAFGhsB,EAAK,EAED,EAIA,EAKJA,GAAM,IAETgsB,EAAO,EAGG,GAANlsB,IAEHksB,EAAO,IAMV,IAAIq4E,EAAc,KAEJ,MAAVlvI,IAEHkvI,EAAcjpC,GAGf,IAAI1uC,EAAa,CAAE,CAAC,GAAK,IAAO,CAAC,GAAK,KAEtC,IAASvyD,EAAI,EAAGA,EAAI,EAAGA,IAEH,MAAfkqI,IAEH33E,EAAWvyD,GAAG,IAAMkqI,EAAYp0F,EAAIg3C,EAAI9sF,GAAG,IAAM8sF,EAAI9sF,GAAG,GAEpDhJ,KAAKk3D,IAAIg8E,EAAYp0F,EAAIg3C,EAAI9sF,GAAG,KAAO,EAE1Co1B,EAAIp1B,GAAK2gD,YAAYuR,oBAEbl7D,KAAKk3D,IAAIg8E,EAAYp0F,EAAIg3C,EAAI9sF,GAAG,GAAK8sF,EAAI9sF,GAAG,KAAO,IAE3Do1B,EAAIp1B,GAAK2gD,YAAYqR,qBAGtBO,EAAWvyD,GAAG,IAAMkqI,EAAYxoF,EAAIorC,EAAI9sF,GAAG,IAAM8sF,EAAI9sF,GAAG,GAEpDhJ,KAAKk3D,IAAIg8E,EAAYxoF,EAAIorC,EAAI9sF,GAAG,KAAO,EAE1Co1B,EAAIp1B,GAAK2gD,YAAYoR,qBAEb/6D,KAAKk3D,IAAIg8E,EAAYxoF,EAAIorC,EAAI9sF,GAAG,GAAK8sF,EAAI9sF,GAAG,KAAO,IAE3Do1B,EAAIp1B,GAAK2gD,YAAYsR,uBAIvBi4E,EAAc,KAEA,MAAVhvI,IAEHgvI,EAAclpC,GAIhB,IAAIssC,EAAgBxgD,EAAI,GAAG,IAAMA,EAAI,GAAG,GAAKA,EAAI,GAAG,IAChDygD,EAAiBzgD,EAAI,GAAG,IAAMA,EAAI,GAAG,GAAKA,EAAI,GAAG,IACjD0gD,EAAmB1gD,EAAI,GAAG,IAAMA,EAAI,GAAG,GAAKA,EAAI,GAAG,IACnD2gD,EAAkB3gD,EAAI,GAAG,IAAMA,EAAI,GAAG,GAAKA,EAAI,GAAG,IAEtD47C,YAAYuC,kBAAkB,GAAKj0I,KAAKwD,IAAI+yI,EAAiBT,EAAa,GAC1EpE,YAAYuC,kBAAkB,GAAKj0I,KAAKwD,IAAI8yI,EAAgBR,EAAa,GACzEpE,YAAYuC,kBAAkB,GAAKj0I,KAAKwD,IAAIgzI,EAAmBV,EAAa,GAC5EpE,YAAYuC,kBAAkB,GAAKj0I,KAAKwD,IAAIizI,EAAkBX,EAAa,GAQ3E,IAAIY,EAAU,GACVC,EAAU,GACVC,EAAW,GAEfD,EAAQ,GAAMJ,GAAkBE,EAAmB9sF,YAAYuR,oBAC3DvR,YAAYqR,oBAChB47E,EAAS,GAAMN,GAAiBE,EAAoB7sF,YAAYoR,qBAC5DpR,YAAYsR,qBAEhB07E,EAAQ,GAAK3wF,QAAQsV,uBAAuBq7E,EAAQ,IACpDC,EAAS,GAAK5wF,QAAQsV,uBAAuBs7E,EAAS,IAEtD,IAAIC,EAAqBN,GAAkBE,EAAkBF,EACzDE,EACAK,EAAoBR,GAAiBE,EAAmBF,EACxDE,EAEAO,EAAe,CAAE,CAAC,EAAG,GAAK,CAAC,EAAG,IAC9BC,GAAoB,EAGxB,IAAShuI,EAAI,EAAGA,EAAI,EAAGA,IAER,GAAVo1B,EAAIp1B,KAKgC,IAAnC2tI,EAAQ3tI,GAAKgtI,EAAehtI,MAEhC2tI,EAAQ3tI,GAAKg9C,QAAQsV,uBAAuBq7E,EAAQ3tI,KAGZ,IAApC4tI,EAAS5tI,GAAKgtI,EAAehtI,MAEjC4tI,EAAS5tI,GAAKg9C,QACXsV,uBAAuBs7E,EAAS5tI,KAGpC+tI,EAAa/tI,GAAG,GAAK4tI,EAAS5tI,GAC9B+tI,EAAa/tI,GAAG,GAAK2tI,EAAQ3tI,IAG1B8tI,EAAoB,GACnBD,EAAqB,KAGnBF,EAAQ,GAAKX,EAAe,IAAM,IACjCY,EAAS,GAAKZ,EAAe,IAAM,GAEzCe,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKJ,EAAQ,GAC7BK,GAAoB,IAEVJ,EAAS,GAAKZ,EAAe,IAAM,IACvCW,EAAQ,GAAKX,EAAe,IAAM,IAExCe,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKH,EAAS,GAC9BI,GAAoB,IAIlBF,EAAoB,IAAME,IAE7BD,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKJ,EAAQ,GAC7BK,GAAoB,GAIjBH,EAAqB,IAAMG,IAE9BD,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKH,EAAS,GAC9BG,EAAa,GAAG,GAAKJ,EAAQ,GAC7BI,EAAa,GAAG,GAAKH,EAAS,GAC9BI,GAAoB,GAOrB,IAAShuI,EAAI,EAAGA,EAAI,EAAGA,IAER,GAAVo1B,EAAIp1B,KAKwC,IAA3C+tI,EAAa/tI,GAAG,GAAKgtI,EAAehtI,MAExC+tI,EAAa/tI,GAAG,GAAK+tI,EAAa/tI,GAAG,IAGtC0tI,EAAQ1tI,GAAK+tI,EAAa/tI,GAAG,GAAKgtI,EAAehtI,GACjD0tI,EAAQ1tI,KAAO+tI,EAAa/tI,GAAG,GAAKgtI,EAAehtI,KAAO,EAC1D0tI,EAAQ1tI,KAAO+tI,EAAa,EAAI/tI,GAAGA,GAAKgtI,EAAehtI,KAAO,GAC9D0tI,EAAQ1tI,KAAO+tI,EAAa,EAAI/tI,GAAG,EAAIA,GAAKgtI,EAAehtI,KAAO,GAExC,IAAR,GAAb0tI,EAAQ1tI,MAEZ0tI,EAAQ1tI,GAAK0tI,EAAQ1tI,IAAM,GAGA,IAAV,KAAb0tI,EAAQ1tI,MAEZ0tI,EAAQ1tI,GAAmB,GAAb0tI,EAAQ1tI,GAAY0tI,EAAQ1tI,IAAM,GAGnB,IAAZ,OAAb0tI,EAAQ1tI,MAEZ0tI,EAAQ1tI,GAAmB,MAAb0tI,EAAQ1tI,IACH,UAAb0tI,EAAQ1tI,KAAmB,GAGlCo1B,EAAIp1B,GAAkB,GAAb0tI,EAAQ1tI,GAEbgtI,EAAehtI,IAAM2gD,YAAYuR,qBAChC86E,EAAehtI,IAAM2gD,YAAYoR,sBACjCi7E,EAAehtI,IAAM2gD,YAAYqR,qBACjCg7E,EAAehtI,IAAM2gD,YAAYsR,uBAErC78B,EAAIp1B,GAAKgtI,EAAehtI,KAO1B,IAAIiuI,EAAc74G,EAAI,IAAMurB,YAAYqR,oBAAsB,EAC1D58B,EAAI,GACJ84G,EAAc94G,EAAI,IAAMurB,YAAYqR,oBAAsB,EAC1D58B,EAAI,GAER64G,GAAep8E,EACfq8E,GAAer8E,EAEXo8E,EAAc,IAEjBA,GAAe,GAGZC,EAAc,IAEjBA,GAAe,GAGhB,IAAIC,EAAezF,YAAYqC,cAAckD,EAAc,GAAGC,EAAc,GAK5E,OAHAxF,YAAYoC,WAAW,GAAG,GAAKh+C,EAAI,GAAG,GACtC47C,YAAYoC,WAAW,GAAG,GAAKh+C,EAAI,GAAG,GAE9B13D,EAAI,IAEX,KAAKurB,YAAYuR,oBAChBw2E,YAAYoC,WAAW,GAAG,IAAM8B,EAChClE,YAAYoC,WAAW,GAAG,IAAMv4E,EAAW,GAAG,GAAKu6B,EAAI,GAAG,GAC1D,MACD,KAAKnsC,YAAYsR,qBAChBy2E,YAAYoC,WAAW,GAAG,IAAMv4E,EAAW,GAAG,GAAKu6B,EAAI,GAAG,GAC1D47C,YAAYoC,WAAW,GAAG,IAAMh+C,EAAI,GAAG,GAAK8/C,EAC5C,MACD,KAAKjsF,YAAYqR,oBAChB02E,YAAYoC,WAAW,GAAG,IAAMh+C,EAAI,GAAG,GAAK8/C,EAC5ClE,YAAYoC,WAAW,GAAG,IAAMv4E,EAAW,GAAG,GAAKu6B,EAAI,GAAG,GAC1D,MACD,KAAKnsC,YAAYoR,qBAChB22E,YAAYoC,WAAW,GAAG,IAAMv4E,EAAW,GAAG,GAAKu6B,EAAI,GAAG,GAC1D47C,YAAYoC,WAAW,GAAG,IAAM8B,EAChC,MAGF,IAAIwB,EAAe,EAGfC,IAAmBj5G,EAAI,IAAMurB,YAAYqR,oBAAsBrR,YAAYuR,sBAAwB,EAAI,EACvG,EACAo8E,GAAqBD,GACrBE,GAAqB,EAEzB,IAASvuI,EAAI,EAAGA,EAAImuI,EAAaz2I,OAAQsI,IACzC,CACC,IAAIwuI,GAAkC,GAAlBL,EAAanuI,GAI7ByuI,GAAiBD,IAAiB7tF,YAAYqR,oBAAsB,EACpEw8E,GAEJC,IAAkB58E,EAEd48E,GAAiB,IAEpBA,IAAkB,GAGnB,IAAIv9C,GAAYw3C,YAAYmC,WAAW4D,GAAiB,GAExDF,GAAsBE,GAAiB,EAAI,EAAK,EAAI,EAKhDF,IAAsBF,KAEzBD,IAKA1F,YAAYoC,WAAWsD,GAAc,GAAK1F,YAAYoC,WAAWsD,EAAe,GAAG,GACnF1F,YAAYoC,WAAWsD,GAAc,GAAK1F,YAAYoC,WAAWsD,EAAe,GAAG,IAGpF,IAAI7yG,IAAO4yG,EAAanuI,GAAK0oI,YAAYoD,aAAe,EACpD4C,IAAOP,EAAanuI,GAAK0oI,YAAYmD,aAAe,EACpD8C,IAAQR,EAAanuI,GAAK0oI,YAAYiD,YAAc,EACxDgD,KAAe98E,EAEX88E,GAAO,KAEVA,KAAe,GAGhB,IAAIp7E,IAAU46E,EAAanuI,GAAK0oI,YAAYkD,aAAe,EAE3D,IAAK8C,IAAOnzG,KAAQozG,GAAO,EAC3B,CACC,IAAIC,GAAQ,EACRC,GAASH,GAAM,EAAI,EAevB,GAXCE,GAFGr7E,IAAgC,GAAtBg7E,GAELzhD,EAAI+hD,IAAQ,GAAKt8E,EAAWs8E,IAAQ,GAAK/hD,EAAI+hD,IAAQ,GAErDt7E,GAEAu5B,EAAI+hD,IAAQ,GAAKt8E,EAAWs8E,IAAQ,GAAK/hD,EAAI+hD,IAAQ,GAIrDnG,YAAYwC,OAAO2D,IAAQF,IAGV,GAAtBJ,GACJ,CACC,IAAIngD,GAAQs6C,YAAYoC,WAAWsD,GAAc,GAC7CU,IAAUF,GAAQxgD,IAAS8C,GAAU,GAErC49C,GAAS,IAEZpG,YAAYoC,WAAWsD,GAAc,IAAMl9C,GAAU,GACjD49C,QAIN,CACC,IAAIzgD,GAAQq6C,YAAYoC,WAAWsD,GAAc,GAC7CW,IAAUH,GAAQvgD,IAAS6C,GAAU,GAErC69C,GAAS,IAEZrG,YAAYoC,WAAWsD,GAAc,IAAMl9C,GAAU,GACjD69C,UAKEx7E,KAGRm1E,YAAYoC,WAAWsD,GAAc,IAAMl9C,GAAU,GACjDl6F,KAAKk3D,IAAIw6E,YAAYuC,kBAAkBwD,IAAkB,GAC7D/F,YAAYoC,WAAWsD,GAAc,IAAMl9C,GAAU,GACjDl6F,KAAKk3D,IAAIw6E,YAAYuC,kBAAkBwD,IAAkB,IAG1DL,EAAe,GACd1F,YAAYoC,WAAWsD,GAAcG,KAAuB7F,YAAYoC,WAAWsD,EAAe,GAAGG,IAEzGH,IAIAC,GAAkBE,GAIpB,IAASvuI,EAAI,EAAGA,GAAKouI,EAAcpuI,IACnC,CACC,GAAIA,GAAKouI,EACT,CAQC,IAAIY,IAAqB55G,EAAI,IAAMurB,YAAYqR,oBAAsBrR,YAAYuR,sBAAwB,EAAI,EACzG,EACA+8E,GAAaD,IAAqBV,GAAqB,EAAI,EAI/D,GAAIW,KAAeb,EAAe,GAAK,EAGtC,MAIFz0I,EAAOkO,KAAK,IAAI45C,QAAQzqD,KAAKm8D,MAAMu1E,YAAYoC,WAAW9qI,GAAG,IAAKhJ,KAAKm8D,MAAMu1E,YAAYoC,WAAW9qI,GAAG,MAIxG,IAAI9F,GAAQ,EAEZ,MAAOA,GAAQP,EAAOjC,OAEI,MAArBiC,EAAOO,GAAQ,IAA+B,MAAjBP,EAAOO,KACvCP,EAAOO,GAAQ,GAAG47C,GAAKn8C,EAAOO,IAAO47C,GACrCn8C,EAAOO,GAAQ,GAAGwnD,GAAK/nD,EAAOO,IAAOwnD,EAErCxnD,KAIAP,EAAO4G,OAAOrG,GAAO,KAKxBg1I,gBAAiB,SAAS95G,EAAKy8B,EAAMlsB,EAAIE,GAExC,IAAIooG,EAAc74G,EAAI,IAAMurB,YAAYqR,oBAAsB,EAC1D58B,EAAI,GACJ84G,EAAc94G,EAAI,IAAMurB,YAAYqR,oBAAsB,EAC1D58B,EAAI,GAER64G,GAAep8E,EACfq8E,GAAer8E,EAEXo8E,EAAc,IAEjBA,GAAe,GAEZC,EAAc,IAEjBA,GAAe,GAGhB,IAAIv0I,EAASoxI,cAAckD,EAAc,GAAGC,EAAc,GAU1D,OARU,GAANvoG,GAAiB,GAANE,GAE+C,MAAzDmlG,oBAAoBiD,EAAc,GAAGC,EAAc,KAEtDv0I,EAASqxI,oBAAoBiD,EAAc,GAAGC,EAAc,IAIvDv0I,IAIT89C,WAAWixF,YAAqC,qBAAhBA,YAA8BA,iBAAcrxI,EAM5E,IAAI83I,gBACJ,CAWCl2H,OAAQ,GAORm2H,SAAU,SAASx6I,EAAM6J,GAExB0wI,gBAAgBl2H,OAAOrkB,GAAQ6J,GAQhC+iC,SAAU,SAAS5sC,GAElB,OAAOu6I,gBAAgBl2H,OAAOrkB,IAQ/Bo5E,QAAS,SAAS55E,GAEjB,IAAK,IAAID,KAAOg7I,gBAAgBl2H,OAE/B,GAAIk2H,gBAAgBl2H,OAAO9kB,IAAQC,EAElC,OAAOD,EAIT,OAAO,OA2ET,SAASk7I,YAAYnsF,GAEpBpsD,KAAKosD,MAAQA,EACbpsD,KAAK6jE,UAAY,IAAIlZ,QACrB3qD,KAAK2kE,YAAc,IAAI9Z,YACvB7qD,KAAKo3F,OAAS,IAAIxuC,aAm1FnB,SAAS4vF,oBAAoB76E,EAAMq0B,GAOlC,GALAhyF,KAAK29D,KAAOA,EACZ39D,KAAKgyF,KAAOA,EACZhyF,KAAK8oD,SAAWkpC,EAChBhyF,KAAKy4I,KAAe,MAARzmD,GAEPhyF,KAAKy4I,KACV,CACC,IAAI9oH,EAAM3vB,KAAK29D,KAAKmhD,YAChB14F,EAAQpmB,KAAK29D,KAAKvR,MAAM8W,WAE5B,MAAc,MAAPvzC,EACP,CACC,GAAIA,GAAOqiE,EACX,CACChyF,KAAKy4I,MAAO,EACZ,MAGD9oH,EAAMvJ,EAAM2vE,UAAUpmE,KAoqBzB,SAAS+oH,QAAQ36E,EAAW33C,EAAOuyH,EAAYC,GAM9C54I,KAAK64I,eAAiB,KAGtB74I,KAAK24I,WAAaA,EAEd/3F,SAASyB,OAEZriD,KAAKyjE,QAAU5Z,YAAY6Z,YAEnBi1E,GAAc9uF,YAAYie,sBAAwBlnB,SAASuB,OAEnEniD,KAAKyjE,QAAU5Z,YAAYoe,YAEnB0wE,GAAc9uF,YAAYme,uBAElChoE,KAAKyjE,QAAU5Z,YAAYue,mBAEnBuwE,GAAc9uF,YAAYke,sBAElC/nE,KAAKyjE,QAAU5Z,YAAYse,mBAI3BnoE,KAAKyjE,QAAU5Z,YAAYqe,kBAI5BloE,KAAKomB,MAAkB,MAATA,EAAiBA,EAAQ,IAAI6xG,aAC3Cj4H,KAAK84I,eAAiB,GACtB94I,KAAK+4I,aAAe,GACpB/4I,KAAKutD,aAAevtD,KAAKg5I,qBACzBh5I,KAAKi5I,kBAAkBj5I,KAAKk5I,wBAC5Bl5I,KAAKm5I,cAA6B,MAAdP,EAAsBA,EAAa54I,KAAKo5I,oBAC5Dp5I,KAAK29D,KAAO39D,KAAKq5I,kBAGjBr5I,KAAKs5I,yBAA2BpzF,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEnEhmD,KAAKkxF,kBAAkBlrC,EAAIoxB,YAAY,QAAQ/qB,YAGhDrsD,KAAKomB,MAAMmhC,YAAYC,QAAQ83B,OAAQt/E,KAAKs5I,0BAG5Ct5I,KAAKu5I,iBAGY,MAAbx7E,GAEH/9D,KAAK0kB,KAAKq5C,GAGX/9D,KAAK29D,KAAK67E,aA2/XX,SAASC,cAActxD,EAAOuxD,EAAS13E,EAAOvc,EAAe2O,EAAQ3F,GAEpEzuD,KAAKmoF,MAAQA,EACbnoF,KAAK05I,QAAUA,EACf15I,KAAKgiE,MAAkB,MAATA,EAAiBA,EAAQhiE,KAAKgiE,MAC5ChiE,KAAKylD,cAAkC,MAAjBA,EAAyBA,EAAgBzlD,KAAKylD,cACpEzlD,KAAKo0D,OAAoB,MAAVA,EAAkBA,EAAS,IAAIzJ,QAC9C3qD,KAAKyuD,OAAoB,MAAVA,EAAkBA,EAAS,OAmO3C,SAASkrF,UAAUz1I,EAAQ65D,GAE1B/9D,KAAKkE,OAASA,EAEG,MAAb65D,GAEH/9D,KAAK0kB,KAAKq5C,GA+uBZ,SAAS67E,eAAe11I,EAAQyS,EAAMof,EAAMz4B,EAAOqG,EAAKD,EACvDm2I,EAAgBC,EAAYC,EAAWC,GAEvCh6I,KAAKkE,OAASA,EACdlE,KAAK2W,KAAOA,EACZ3W,KAAK+1B,KAAOA,EACZ/1B,KAAK1C,MAAQA,EACb0C,KAAK2D,IAAc,MAAPA,EAAeA,EAAM,EACjC3D,KAAK0D,IAAc,MAAPA,EAAeA,EAAM,IACjC1D,KAAK65I,eAAiBA,EACtB75I,KAAK85I,WAAar2F,YAAYpkD,IAAIy6I,IAAeA,EACjD95I,KAAK+5I,UAAYt2F,YAAYpkD,IAAI06I,IAAcA,EAC/C/5I,KAAKg6I,sBAAkD,MAAzBA,GAC7BA,EAwOF,SAASC,gBAAgB7tF,GAGxBpsD,KAAKk6I,YAAch0F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAElDhmD,KAAKmuD,aAERnuD,KAAKm6I,WAAWn0F,EAAIoxB,YAAY,YAKlCp3E,KAAKo6I,YAAcl0F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAElDhmD,KAAKmuD,aAERnuD,KAAKq6I,WAAWr0F,EAAIoxB,YAAY,SAAUpxB,EAAIoxB,YAAY,aAI5Dp3E,KAAKmxF,SAAS/kC,GA2Xf,SAASkuF,kBAAkBluF,EAAO63C,EAAYs2C,EAAYC,GAEzDx6I,KAAKikG,WAA4B,MAAdA,GAAsBA,EACzCjkG,KAAKu6I,WAA4B,MAAdA,GAAsBA,EACzCv6I,KAAKw6I,cAAkC,MAAjBA,GAAyBA,EAE/Cx6I,KAAKy6I,WAAav0F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEjDhmD,KAAKmuD,aAAenuD,KAAK06I,gBAE5B16I,KAAK26I,WAAW30F,EAAIoxB,YAAY,aAIlCp3E,KAAKqnD,cAAgBnB,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEpDhmD,KAAKmuD,aAAenuD,KAAK46I,mBAE5B56I,KAAK66I,aAAa70F,EAAIoxB,YAAY,aAIpCp3E,KAAKmxF,SAAS/kC,GAoaf,SAAS4X,sBAAsBrG,EAAMxQ,EAAOiT,EAAO06E,EAAiBnkD,GAEnExpC,EAAkB,MAATA,EAAiBA,EAAQ,EAClCntD,KAAK29D,KAAOA,EAGZ39D,KAAK+6I,qBAAuBp9E,EAAKq9E,kBACjCh7I,KAAKi7I,UAAYt9E,EAAKiH,iBACtB5kE,KAAKk7I,UAAYv9E,EAAKw9E,YACtBn7I,KAAKo7I,SAAWz9E,EAAKmH,WACrB9kE,KAAKq7I,iBAAmB19E,EAAKvR,MAAMmB,aAAaokF,cAEhD,IAAIlgG,EAAOzxC,KA8CX,GA3C2B,MAAvB22F,IAEHh5B,EAAKvR,MAAMmB,aAAaokF,cAAgB,SAAS7gG,GAEhD,IAAIwqG,EAAWxqG,EAAMoc,MAAM+pC,MAE3BnmD,EAAMoc,MAAM+pC,MAAQ,SAASn2F,GAE5B,IAAIqiD,EAAOwzC,EAAoB7lD,GAEnB,MAARqS,GAEHriD,EAAE81F,QAAQzzC,GAGXm4F,EAASv6I,MAAMf,KAAMgB,WAET,MAARmiD,GAEHriD,EAAE81F,QAAQ,OAIZnlD,EAAK4pG,iBAAiBt6I,MAAM48D,EAAKvR,MAAMmB,aAAcvsD,WACrD8vC,EAAMoc,MAAM+pC,MAAQqkD,IAKtB39E,EAAKq9E,kBAAoB,SAAShuF,EAAMuuF,GAEvC,OAAY,MAARvuF,GAAmC,MAAnB8tF,GAA2BA,EAAgB9tF,GAEvDvb,EAAKspG,qBAAqBh6I,MAAM48D,EAAM38D,WAGvC,MAIR28D,EAAKujC,UAAU,IAAIt4C,cACnB+U,EAAK69E,SAASruF,GAED,MAATiT,EACJ,CACCzC,EAAK89E,uBAKL,IAJA,IAAI56C,EAAO,KAIF33F,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI4zD,EAASa,EAAKnE,eAAemE,EAAKq9E,kBAAkBr9E,EAAK+9E,aAAat7E,EAAMl3D,MAEpE,MAAR23F,EAEHA,EAAO/jC,EAIP+jC,EAAKr6F,IAAIs2D,GAIXa,EAAKg+E,eAAe96C,GAAQ,IAAIh2C,cAkElC,SAAS0qC,mBAAmBnpC,GAE3BpsD,KAAK47I,OAAS,IAAIhzF,aAClB5oD,KAAKosD,MAAQA,EA+Md,SAAS+/C,uBAAuBl6D,EAAOi6D,EAAWpuG,EAAM+wC,EAAIE,GAE3D/uC,KAAKiyC,MAAQA,EACbjyC,KAAKksG,UAA0B,MAAbA,GAAqBA,EACvClsG,KAAKlC,KAAOA,EACZkC,KAAK6uC,GAAKA,GAAS,EACnB7uC,KAAK+uC,GAAKA,GAAS,EAkEpB,SAAS8sG,eAAezvF,GAEvBpsD,KAAKosD,MAAQA,EACbpsD,KAAKosD,MAAM+jC,iBAAiBnwF,MAG5BA,KAAK87I,WAAa51F,QAAQ1jD,KAAKxC,MAAM,WAEpCA,KAAK+7I,gBACL/7I,KAAKg8I,gBAGNh8I,KAAKosD,MAAM7E,YAAYC,QAAQw1B,IAAKh9E,KAAK87I,YAGzC97I,KAAKi8I,cAAgB/1F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAExDhmD,KAAK4qF,WAGN5qF,KAAKosD,MAAM7E,YAAYC,QAAQu6B,OAAQ/hF,KAAKi8I,eAG5Cj8I,KAAKk8I,eAAiBh2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEzD,GAAkB,MAAdhmD,KAAKsgD,MAER,IAECtgD,KAAK88D,OAAS98D,KAAKosD,MAAMU,UAAUkkF,UAAUhxI,KAAKogE,OAClDpgE,KAAKm8I,QAAUn8I,KAAKo8I,iBAAiBp8I,KAAKogE,OAC1CpgE,KAAK+7I,eAAc,GAGnBttI,OAAOkM,WAAWurC,QAAQ1jD,KAAKxC,MAAM,WAEhCA,KAAKq8I,kBAERr8I,KAAKs8I,0BAA0Bt8I,KAAKogE,OAAO,GAC3CpgE,KAAK+7I,oBAEH,GAEL,MAAO9vI,GAGNjM,KAAK4qF,YAKR5qF,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKk8I,gBAu/CxD,SAASK,iBAAiBnwF,GAEZ,MAATA,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKosD,MAAM+jC,iBAAiBnwF,MAG5BA,KAAKw8I,oBAAsBt2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAE9D,IAAI0/B,EAAU1/B,EAAIoxB,YAAY,aAC1BuO,EAAK3/B,EAAIoxB,YAAY,SAErBsO,GAAWl+B,QAAQuyB,YAAc/5E,KAAKy8I,oBAAoB92D,KAE7D3lF,KAAKiL,MAAM06E,GACX3lF,KAAKmvB,QAAS,EACdnvB,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu1B,UAAW,QAAS4I,IAC7DA,EAAGrO,cAILt3E,KAAKosD,MAAM7E,YAAYC,QAAQm2B,iBAAkB39E,KAAKw8I,qBAGtDx8I,KAAK08I,eAAiBx2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQq1F,GAEzD,GAAI38I,KAAK48I,iBACT,CACC,IAAI52F,EAAM22F,EAAGvlE,YAAY,SAkBzB,GAhBK5vB,QAAQ6vB,WAAWrxB,IAAoB,gBAAZA,EAAIrvC,KAWf,cAAZqvC,EAAIrvC,MAA6C,MAArB3W,KAAK68I,eAEzC78I,KAAK68I,aAAe,OAXpB78I,KAAK68I,aAAe78I,KAAKosD,MAAMuR,KAAKxQ,MAG/BntD,KAAKmvB,QAAiC,MAAvBnvB,KAAK88I,iBAExB98I,KAAKiL,MAAMjL,KAAK88I,gBAChB98I,KAAK88I,eAAiB,OAQC,MAArB98I,KAAK68I,aACT,CACC,IAAIv/I,EAAQ4C,KAAKm8D,MAAMr8D,KAAK68I,aAAe72F,EAAImH,MAAQ,KAAO,IAEzC,MAAjBntD,KAAKysG,WAERnvG,EAAQ4C,KAAKwD,IAAI1D,KAAKysG,SAAUnvG,IAGZ,MAAjB0C,KAAK+8I,WAERz/I,EAAQ4C,KAAKyD,IAAI3D,KAAK+8I,SAAUz/I,IAG7B0C,KAAKosD,MAAMuR,KAAKxQ,OAAS7vD,IAE5B0C,KAAKosD,MAAM4wF,OAAO1/I,GAClBkqD,QAAQ8vB,QAAQtxB,SAMpBhmD,KAAKosD,MAAM7E,YAAYC,QAAQo2B,QAAS59E,KAAK08I,gBAE7C18I,KAAKowF,gBAAkBlqC,QAAQ1jD,KAAKxC,MAAM,WAEjCA,KAAKmvB,QAERnvB,KAAK4qF,WAKXpjC,QAAQD,YAAYtsC,SAAU,UAAWjb,KAAKowF,kBAmYhD,SAAS6sD,mBAAmB7wF,EAAOihC,GAErB,MAATjhC,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKqtF,cAAgBA,EACrBrtF,KAAKosD,MAAM+jC,iBAAiBnwF,MAG5BA,KAAK08I,eAAiBx2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQq1F,GAEzD38I,KAAKk9I,aAAc,KAGpBl9I,KAAKosD,MAAM7E,YAAYC,QAAQo2B,QAAS59E,KAAK08I,gBAE7C18I,KAAK0kB,QA4OP,SAASy4H,aAAa/wF,EAAOgxF,EAAYC,EAAc7/E,GAEtDsZ,cAAcp4E,KAAKsB,MAEN,MAATosD,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKo9I,WAA4B,MAAdA,EAAsBA,EAAavzF,YAAYyf,oBAClEtpE,KAAKq9I,aAAgC,MAAhBA,EAAwBA,EAAexzF,YAAY0f,sBACxEvpE,KAAKw9D,QAAsB,MAAXA,EAAmBA,EAAU3T,YAAY8d,gBAEzD3nE,KAAKwsF,UAAY,IAAIP,gBAAgB7/B,IAoZvC,SAASkxF,wBAAwBlxF,GAEhC0qB,cAAcp4E,KAAKsB,MAEnBA,KAAKosD,MAAQA,EACbpsD,KAAKutB,SAAW,IAAIq7B,aACpB5oD,KAAKosD,MAAM+jC,iBAAiBnwF,MAE5BA,KAAKk8I,eAAiBh2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAErDhmD,KAAKmuD,aAERnuD,KAAKu9I,aAIPv9I,KAAKosD,MAAMoxF,oBAAoBj2F,YAAYC,QAAQ83B,OAAQt/E,KAAKk8I,gBAChEl8I,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKk8I,gBACvDl8I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQk4B,MAAO1/E,KAAKk8I,gBACrDl8I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQm4B,UAAW3/E,KAAKk8I,gBACzDl8I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQo4B,oBAAqB5/E,KAAKk8I,gBACnEl8I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQs4B,KAAM9/E,KAAKk8I,gBACpDl8I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQq4B,GAAI7/E,KAAKk8I,gBAsanD,SAASuB,oBAAoBrxF,EAAOihC,GAEnCvW,cAAcp4E,KAAKsB,MAEN,MAATosD,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKqtF,cAAgBA,EACrBrtF,KAAK0kB,OAGL1kB,KAAKi8I,cAAgB/1F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAExDhmD,KAAK4qF,WAGN5qF,KAAKosD,MAAM7E,YAAYC,QAAQu6B,OAAQ/hF,KAAKi8I,gBA0iE9C,SAASyB,oBAAoBtxF,GAE5BpsD,KAAKosD,MAAQA,EAGbpsD,KAAK29I,aAAez3F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAE9B,MAArBhmD,KAAK49I,cAA4E,MAApD59I,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAK49I,aAAa5wF,MAE3EhtD,KAAK4qF,QAIL5qF,KAAKwtD,YAIPxtD,KAAKosD,MAAMhmC,MAAMmhC,YAAYC,QAAQ83B,OAAQt/E,KAAK29I,cAClD39I,KAAKosD,MAAMuR,KAAKpW,YAAYC,QAAQo4B,oBAAqB5/E,KAAK29I,cAC9D39I,KAAKosD,MAAMuR,KAAKpW,YAAYC,QAAQm4B,UAAW3/E,KAAK29I,cACpD39I,KAAKosD,MAAMuR,KAAKpW,YAAYC,QAAQk4B,MAAO1/E,KAAK29I,cAChD39I,KAAKosD,MAAM7E,YAAYC,QAAQ62B,KAAMr+E,KAAK29I,cAkf3C,SAASE,aAAazxF,GAER,MAATA,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKosD,MAAM+jC,iBAAiBnwF,MAG5BA,KAAK89I,uBAAyB53F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEjE,IAAI0/B,EAAU1/B,EAAIoxB,YAAY,aAC1BuO,EAAK3/B,EAAIoxB,YAAY,SAEzB,GAAIsO,GAAWl+B,QAAQuyB,YAAc/5E,KAAK+9I,uBAAuBp4D,GACjE,CACC,IAAIvxB,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtCa,EAAS1Y,QAAQuY,gBAAgBz+D,KAAKosD,MAAM2R,WAChDa,EAAO5f,GAAKoV,EAAOpV,EACnB4f,EAAOhU,GAAKwJ,EAAOxJ,EACnB5qD,KAAKiL,MAAM06E,EAAG/N,OAAShZ,EAAO5f,EAAG2mC,EAAG7N,OAASlZ,EAAOhU,GACpD+6B,EAAGrO,SAAQ,OAIbt3E,KAAKosD,MAAM7E,YAAYC,QAAQm2B,iBAAkB39E,KAAK89I,wBAGtD99I,KAAK87I,WAAa51F,QAAQ1jD,KAAKxC,MAAM,WAEpCA,KAAKg+I,aAGNh+I,KAAKosD,MAAM7E,YAAYC,QAAQw1B,IAAKh9E,KAAK87I,YAGzC97I,KAAK08I,eAAiBx2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQq1F,GAEvC,MAAd38I,KAAKsgD,OAERtgD,KAAK4qF,WAIP5qF,KAAKosD,MAAM7E,YAAYC,QAAQo2B,QAAS59E,KAAK08I,gBAGzC97F,SAASE,OAEZ0G,QAAQD,YAAY94C,OAAQ,SAC3By3C,QAAQ1jD,KAAKxC,MAAM,WAElBA,KAAK0lB,eAyXV,SAASu4H,SAASntG,EAAO2d,EAAQ05B,GAEhCnoF,KAAKosD,MAAQtb,EAAM6sB,KAAKvR,MACxBpsD,KAAK8wC,MAAQA,EACb9wC,KAAKyuD,OAAoB,MAAVA,EAAkBA,EAASzuD,KAAKyuD,OAC/CzuD,KAAKmoF,MAAkB,MAATA,EAAiBA,EAAQnoF,KAAKmoF,MAC5CnoF,KAAK0kB,OA8VN,SAASw5H,gBAAgBptG,GAEX,MAATA,IAEH9wC,KAAK8wC,MAAQA,EACb9wC,KAAK0kB,OAGL1kB,KAAKi8I,cAAgB/1F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEpDhmD,KAAKm+I,aAA6B,MAAdn+I,KAAKoD,QAG5BpD,KAAK8wC,MAAM6sB,KAAKvR,MAAMmB,aAAaC,OAAOxtD,KAAK8wC,OAAO,GAGtD9wC,KAAK8wC,MAAM6sB,KAAKygF,WAAWp+I,KAAK8wC,MAAMkc,MACtChtD,KAAK8wC,MAAM23F,SAAU,EACrBzoI,KAAK8wC,MAAM6sB,KAAK0gF,YAGjBr+I,KAAK4qF,WAGN5qF,KAAK8wC,MAAM6sB,KAAKvR,MAAM7E,YAAYC,QAAQu6B,OAAQ/hF,KAAKi8I,gBAy7DzD,SAASqC,cAAcxtG,GAET,MAATA,IAEH9wC,KAAK8wC,MAAQA,EACb9wC,KAAK0kB,OAGL1kB,KAAKi8I,cAAgB/1F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAExD,IAAI52B,EAAsB,MAAdpvB,KAAKoD,MACjBpD,KAAK4qF,QAEDx7D,GAEHpvB,KAAKosD,MAAMmB,aAAaC,OAAOxtD,KAAK8wC,OAAO,EAAOA,EAAM6sB,KAAK4gF,kBAI/Dv+I,KAAK8wC,MAAM6sB,KAAKvR,MAAM7E,YAAYC,QAAQu6B,OAAQ/hF,KAAKi8I,gBA83EzD,SAASuC,mBAAmB1tG,GAE3BwtG,cAAc5/I,KAAKsB,KAAM8wC,GAuN1B,SAAS2tG,qBAAqB3tG,GAE7BwtG,cAAc5/I,KAAKsB,KAAM8wC,GA2d1B,SAAS4tG,aAAatyF,EAAOhoD,GAEf,MAATgoD,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKoE,OAASA,GAAU6W,SAAS2nC,gBAGjC5iD,KAAK2+I,WAAa,GAClB3+I,KAAK4+I,UAAY,GACjB5+I,KAAK6+I,YAAc,GACnB7+I,KAAK8+I,iBAAmB,GAExB9+I,KAAK++I,eAAiB74F,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEjDhmD,KAAKg/I,QAAQh5F,MAIdwB,QAAQD,YAAYvnD,KAAKoE,OAAQ,UAAWpE,KAAK++I,gBAG7Cn+F,SAASE,OAEZ0G,QAAQD,YAAY94C,OAAQ,SAC3By3C,QAAQ1jD,KAAKxC,MAAM,WAElBA,KAAK0lB,eA+WV,SAASu5H,iBAAiB7yF,EAAOniC,GAEnB,MAATmiC,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKiqB,MAAQA,GAAS,IACtBjqB,KAAKosD,MAAM+jC,iBAAiBnwF,OAuY9B,SAASk/I,cAAc9yF,EAAOwH,EAAO9L,GAEpCq1F,aAAaz+I,KAAKsB,KAAMosD,EAAOwH,GAE/B5zD,KAAKosD,MAAM+jC,iBAAiBnwF,MAEf,MAAT8nD,IAEH9nD,KAAKk4E,QAAUpwB,GAIZlH,SAASE,OAEZ0G,QAAQD,YAAY94C,OAAQ,SAAUy3C,QAAQ1jD,KAAKxC,MAAM,WAExDA,KAAK0lB,cA4ER,SAASumE,gBAAgB7/B,EAAO+yF,EAAgB7mD,EAAaC,GAE/C,MAATnsC,IAEHpsD,KAAKosD,MAAQA,EACbpsD,KAAKm/I,eAAoC,MAAlBA,EAA0BA,EAAiBt1F,YAAYyf,oBAC9EtpE,KAAKs4F,YAA8B,MAAfA,EAAuBA,EAAczuC,YAAY6f,sBACrE1pE,KAAKu4F,OAAoB,MAAVA,GAAkBA,EACjCv4F,KAAK0tD,QAAU7D,YAAY+f,kBAG3B5pE,KAAKo/I,eAAiBl5F,QAAQ1jD,KAAKxC,MAAM,WAGxC,GAAkB,MAAdA,KAAK8wC,MACT,CACC,IAAInhB,EAAM3vB,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAK8wC,MAAMkc,MAEnC,MAAPr9B,EAEH3vB,KAAK0mF,QAIL1mF,KAAK8wC,MAAQnhB,EACb3vB,KAAKg+I,eAKRh+I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQk4B,MAAO1/E,KAAKo/I,gBACrDp/I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQm4B,UAAW3/E,KAAKo/I,gBACzDp/I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQo4B,oBAAqB5/E,KAAKo/I,gBACnEp/I,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKo/I,gBAGvDp/I,KAAK29I,aAAez3F,QAAQ1jD,KAAKxC,MAAM,WAEtCA,KAAK0mF,UAGN1mF,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQs4B,KAAM9/E,KAAK29I,cACpD39I,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQq4B,GAAI7/E,KAAK29I,eA8SpD,SAAS0B,oBAAoB/rF,GAE5B,GAAc,MAAVA,EACJ,CACCtzD,KAAKszD,OAASA,EACdtzD,KAAK8Z,QAAU,IAAI4kI,aAAaprF,EAAOlH,OAKvC,IAAI1vC,EAAM1c,KAAK8Z,QAAQwlI,OAEvBt/I,KAAK8Z,QAAQwlI,OAAS,SAASt5F,GAE9BtpC,EAAI3b,MAAMf,KAAMgB,WAChBsyD,EAAOisF,iBACPjsF,EAAOmlB,UAAU,IAAI9B,cAAcnvB,QAAQu6B,OAAQ,QAAS/7B,MAoG/D,SAASw5F,mBAAmB9yI,GAE3B1M,KAAK0M,OAASA,EA4Tf,SAAS+yI,iBAAiB1hF,EAAWzK,GAEpCtzD,KAAKszD,OAASA,EAEG,MAAbyK,GAA+B,MAAVzK,GAExBtzD,KAAK0kB,KAAKq5C,GAm2BZ,SAAS2hF,SAAShzI,GAEjB1M,KAAK2/I,QAAU,GACf3/I,KAAK4/I,aAIgB,MAAjB3kI,SAASgzB,OAGZjuC,KAAK6/I,qBAAuB,GAC5B7/I,KAAK8/I,aAAe,IAAIN,mBACxBx/I,KAAK+/I,YAAc,IAAIh6D,cAGvB/lF,KAAKosD,MAAQpsD,KAAKggJ,cAClBhgJ,KAAKigJ,QAAUjgJ,KAAKkgJ,gBAGpBlgJ,KAAKmgJ,WAAa,IAAId,oBAAoBr/I,MAI1CA,KAAKogJ,UAAU1zI,GAGf1M,KAAKosD,MAAM0iF,gCAAkC9uI,KAAKqgJ,mBAG/B,MAAfrgJ,KAAK44H,QAGR54H,KAAK44H,SAIFh4E,SAASE,OAEZ0G,QAAQD,YAAY94C,OAAQ,SAAUy3C,QAAQ1jD,KAAKxC,MAAM,WAExDA,KAAK0lB,eA/hgCT2yH,gBAAgBC,SAASzuF,YAAYksB,gBAAiB67D,YAAYc,gBAClE2F,gBAAgBC,SAASzuF,YAAYmsB,0BAA2B47D,YAAYC,gBAC5EwG,gBAAgBC,SAASzuF,YAAYosB,eAAgB27D,YAAYW,MACjE8F,gBAAgBC,SAASzuF,YAAYqsB,qBAAsB07D,YAAYe,YACvE0F,gBAAgBC,SAASzuF,YAAYssB,sBAAuBy7D,YAAYgB,aACxEyF,gBAAgBC,SAASzuF,YAAYusB,qBAAsBw7D,YAAYuD,eACvEkD,gBAAgBC,SAASzuF,YAAYwsB,kBAAmBu7D,YAAYiB,kBAEpEwF,gBAAgBC,SAASzuF,YAAYysB,kBAAmB+rD,YAAYO,kBACpEyV,gBAAgBC,SAASzuF,YAAY0sB,oBAAqB8rD,YAAYC,oBACtE+V,gBAAgBC,SAASzuF,YAAY2sB,kBAAmB6rD,YAAYgB,kBACpEgV,gBAAgBC,SAASzuF,YAAY6sB,mBAAoB2rD,YAAYiB,mBACrE+U,gBAAgBC,SAASzuF,YAAY4sB,kBAAmB4rD,YAAYmB,kBAEpE7iF,WAAW03F,gBAA6C,qBAApBA,gBAAkCA,qBAAkB93I,EAmExFg4I,YAAY74I,UAAY,IAAIo3E,cAC5ByhE,YAAY74I,UAAUqyB,YAAcwmH,YAKpCA,YAAY74I,UAAU4gJ,YAAc,IAAI31F,QASxC4tF,YAAY74I,UAAU8pI,aAAqC,QAArB5oF,SAASwD,SAAsB,OAAS,GAS9Em0F,YAAY74I,UAAU6gJ,yBAAiD,QAArB3/F,SAASwD,SAAsB,mBAAqB,GAUtGm0F,YAAY74I,UAAUgsG,WAAY,EAQlC6sC,YAAY74I,UAAU8gJ,wBAAyB,EAS/CjI,YAAY74I,UAAU+gJ,oBAAqB,EAQ3ClI,YAAY74I,UAAUqoI,WAAY,EAOlCwQ,YAAY74I,UAAU0sD,MAAQ,KAO9BmsF,YAAY74I,UAAUo/G,YAAc,KAOpCy5B,YAAY74I,UAAUilE,YAAc,KAOpC4zE,YAAY74I,UAAUytD,MAAQ,EAQ9BorF,YAAY74I,UAAUmkE,UAAY,KAOlC00E,YAAY74I,UAAU03F,OAAS,KAS/BmhD,YAAY74I,UAAUokC,aAAc,EAOpCy0G,YAAY74I,UAAUghJ,SAAW,KAOjCnI,YAAY74I,UAAUihJ,aAAe,KAOrCpI,YAAY74I,UAAUkhJ,mBAAqB,KAO3CrI,YAAY74I,UAAUmhJ,uBAAyB,KAO/CtI,YAAY74I,UAAUklE,eAAiB,WAEtC,OAAO5kE,KAAK2kE,aAQb4zE,YAAY74I,UAAUi8I,eAAiB,SAASr+I,GAE/C0C,KAAK2kE,YAAcrnE,GAYpBi7I,YAAY74I,UAAUsxI,UAAY,SAAS5wE,GAE1C,IAAIv9D,EAAS,KAEb,GAAa,MAATu9D,GAAiBA,EAAMx/D,OAAS,EAInC,IAFA,IAAIwlB,EAAQpmB,KAAKosD,MAAM8W,WAEdh6D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIkd,EAAMuvE,SAASv1B,EAAMl3D,KAAOkd,EAAMjX,OAAOixD,EAAMl3D,IACnD,CACC,IAAI4nC,EAAQ9wC,KAAK+sD,SAASqT,EAAMl3D,IAEnB,MAAT4nC,IAEW,MAAVjuC,EAEHA,EAASgoD,YAAYoB,cAAcnb,GAInCjuC,EAAO2D,IAAIsqC,IAOhB,OAAOjuC,GAaR01I,YAAY74I,UAAUohJ,eAAiB,SAAS9uD,GAE/C,GAAIhyF,KAAK8+G,aAAe9sB,EACxB,CACC,IAAIjxD,EAAS,IAAIy3G,oBAAoBx4I,KAAMgyF,GAC3CjxD,EAAO0yB,UACP,IAAI47B,EAAO,IAAIxJ,eAAe7lF,MAAM,GACpCqvF,EAAK7oF,IAAIu6B,GACT/gC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ43B,KAAM,OAAQiQ,IACvDrvF,KAAKosD,MAAM20F,gBAGZ,OAAO/uD,GAeRumD,YAAY74I,UAAUshJ,kBAAoB,SAAS7zF,EAAOte,EAAIE,GAE7D,IAAIkyG,EAAgBjhJ,KAAKmtD,MACrB+zF,EAAoB,IAAIv2F,QAAQ3qD,KAAK6jE,UAAU7kB,EAAGh/C,KAAK6jE,UAAUjZ,GAEjE5qD,KAAKmtD,OAASA,GAASntD,KAAK6jE,UAAU7kB,GAAKnQ,GAAM7uC,KAAK6jE,UAAUjZ,GAAK7b,IAExE/uC,KAAKmtD,MAAQA,EAEbntD,KAAK6jE,UAAU7kB,EAAInQ,EACnB7uC,KAAK6jE,UAAUjZ,EAAI7b,EAEf/uC,KAAKqjE,mBAERrjE,KAAKmhJ,oBAIPnhJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo4B,oBACxC,QAASzyB,EAAO,gBAAiB8zF,EACjC,YAAajhJ,KAAK6jE,UAAW,oBAAqBq9E,KAQpD3I,YAAY74I,UAAUolE,SAAW,WAEhC,OAAO9kE,KAAKmtD,OAaborF,YAAY74I,UAAU87I,SAAW,SAASl+I,GAEzC,IAAI2jJ,EAAgBjhJ,KAAKmtD,MAErBntD,KAAKmtD,OAAS7vD,IAEjB0C,KAAKmtD,MAAQ7vD,EAET0C,KAAKqjE,mBAERrjE,KAAKmhJ,oBAIPnhJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQk4B,MACxC,QAASpiF,EAAO,gBAAiB2jJ,KAQnC1I,YAAY74I,UAAUokE,aAAe,WAEpC,OAAO9jE,KAAK6jE,WAeb00E,YAAY74I,UAAUoxF,aAAe,SAASjiD,EAAIE,GAEjD,IAAImyG,EAAoB,IAAIv2F,QAAQ3qD,KAAK6jE,UAAU7kB,EAAGh/C,KAAK6jE,UAAUjZ,GAEjE5qD,KAAK6jE,UAAU7kB,GAAKnQ,GAAM7uC,KAAK6jE,UAAUjZ,GAAK7b,IAEjD/uC,KAAK6jE,UAAU7kB,EAAInQ,EACnB7uC,KAAK6jE,UAAUjZ,EAAI7b,EAEf/uC,KAAKqjE,mBAERrjE,KAAKmhJ,oBAIPnhJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm4B,UACxC,YAAa3/E,KAAK6jE,UAAW,oBAAqBq9E,KAQpD3I,YAAY74I,UAAUyhJ,iBAAmB,WAExCnhJ,KAAKw5I,aACLx5I,KAAKosD,MAAM20F,iBAQZxI,YAAY74I,UAAU69I,QAAU,WAEP,MAApBv9I,KAAK8+G,aAER9+G,KAAKwQ,QAGNxQ,KAAKw5I,cAQNjB,YAAY74I,UAAU85I,WAAa,WAElCx5I,KAAKo+I,aACLp+I,KAAKq+I,YAgBN9F,YAAY74I,UAAU8Q,MAAQ,SAASw8C,EAAMrlC,EAAO8tE,GAEnD,IAAIrvE,EAAQpmB,KAAKosD,MAAM8W,WAOvB,GANAlW,EAAOA,GAAQ5mC,EAAM+8C,UACrBx7C,EAAkB,MAATA,GAAiBA,EAC1B8tE,EAAsB,MAAXA,GAAmBA,EAE9Bz1F,KAAKohJ,YAAYp0F,GAEbyoC,IAAY9tE,GAASqlC,GAAQhtD,KAAK8+G,aAIrC,IAFA,IAAInxD,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKwQ,MAAM4V,EAAMynC,WAAWb,EAAM9jD,GAAIye,QAKvC3nB,KAAKo+I,WAAWpxF,IAelBurF,YAAY74I,UAAU0+I,WAAa,SAASpxF,EAAMyoC,EAAS4rD,GAE1D,IAAIj7H,EAAQpmB,KAAKosD,MAAM8W,WACvBlW,EAAOA,GAAQ5mC,EAAM+8C,UACrBsyB,EAAsB,MAAXA,GAAmBA,EAC9B4rD,EAAgC,MAAhBA,GAAwBA,EAExC,IAAIvwG,EAAQ9wC,KAAK+sD,SAASC,GAQ1B,GANa,MAATlc,IAEHA,EAAM23F,SAAU,IAIZz7E,EAAKs0F,aACV,CAIC,GAHAt0F,EAAKs0F,cAAe,EAGhB7rD,EAIH,IAFA,IAAI9nC,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GACnClJ,KAAKo+I,WAAWrrI,EAAO0iF,EAAS4rD,GAKlC,GAAIA,EAEH,KAAInlC,EAAY91F,EAAM+1F,aAAanvD,GAEnC,IAAS9jD,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAE9BlJ,KAAKo+I,WAAWh4H,EAAMg2F,UAAUpvD,EAAM9jD,GAAIusF,EAAS4rD,UAI9Cr0F,EAAKs0F,eAgBd/I,YAAY74I,UAAU2+I,SAAW,SAASrxF,GAEzC,IAAI7E,EAAKrD,MAAMrd,MAAM,wBACrBh5B,OAAO8mD,OAAS9R,YAAYpkD,IAAIW,KAAKugJ,2BACpCvgJ,KAAKugJ,yBAENvgJ,KAAKy7I,uBAGL,IAAI8F,EAAc,KAEdvhJ,KAAKygJ,oBAAqC,MAAfzgJ,KAAK4jE,QAAkC,MAAhB5jE,KAAKg5G,UAC/B,GAAzB/9F,SAASkmC,eAAsBP,SAASQ,OAAUR,SAASM,aAG7DlhD,KAAKqsC,YAAcpxB,SAAS9b,cAAc,OAC1Ca,KAAKqsC,YAAYzkB,MAAM44B,SAAW,WAClCxgD,KAAKqsC,YAAYzkB,MAAMk+B,MAAQ9lD,KAAK4jE,OAAOhd,YAAc,KACzD5mD,KAAKqsC,YAAYzkB,MAAM+9B,OAAS3lD,KAAK4jE,OAAOjd,aAAe,KAC3D3mD,KAAK4jE,OAAOntC,WAAWiC,YAAY14B,KAAKqsC,aAExCk1G,EAAcvhJ,KAAKujE,SAAS37C,MAAMikB,QAClC7rC,KAAK4jE,OAAOh8C,MAAMikB,QAAU,OAG5B7rC,KAAKg5G,QAAU/9F,SAAS9b,cAAc,OACtCa,KAAKg5G,QAAQpxF,MAAM44B,SAAW,WAC9BxgD,KAAKg5G,QAAQpxF,MAAMo7C,WAAa,SAChChjE,KAAKg5G,QAAQpxF,MAAMygC,WAAa,SAChCroD,KAAKg5G,QAAQpxF,MAAMikB,QAAW+U,SAAkB,UAAI,SAAW,eAC/D5gD,KAAKg5G,QAAQpxF,MAAMm7C,KAAO,IAE1B9nD,SAASgzB,KAAKvV,YAAY14B,KAAKg5G,UAGhC,IAAIr0C,EAAc3kE,KAAKw5D,eAAex5D,KAAKg7I,kBAC1Ch7I,KAAK07I,aAAa1uF,IAA8B,MAApBhtD,KAAK8+G,YAChC9+G,KAAK8+G,YAAc9+G,KAAKosD,MAAM8W,WAAWC,cAC3CnjE,KAAK27I,eAA+B,MAAfh3E,EAAuBA,EAAc3kE,KAAKwhJ,kBAC/DxhJ,KAAKyhJ,qBAEc,MAAfF,IAEHvhJ,KAAK4jE,OAAOh8C,MAAMikB,QAAU01G,EAC5BvhJ,KAAKg5G,QAAQviF,WAAWgC,YAAYz4B,KAAKg5G,SAEjB,MAApBh5G,KAAKqsC,aAERrsC,KAAKqsC,YAAY5V,WAAWgC,YAAYz4B,KAAKqsC,aAI9CrsC,KAAKg5G,QAAU,MAGhBh5G,KAAKy7I,uBAELhtI,OAAO8mD,OAAS9R,YAAYpkD,IAAIW,KAAKwpI,eACpCxpI,KAAKwpI,aACN1kF,MAAMrb,MAAM,uBAAwB0e,IASrCowF,YAAY74I,UAAU8hJ,eAAiB,WAEtC,OAAO,IAAI32F,YAAY7qD,KAAK6jE,UAAU7kB,EAAIh/C,KAAKmtD,MAAOntD,KAAK6jE,UAAUjZ,EAAI5qD,KAAKmtD,QAe/EorF,YAAY74I,UAAU85D,eAAiB,SAAS1oB,EAAO2kD,GAEtDA,EAAsB,MAAXA,GAAmBA,EAC9B,IAAIoL,EAAO,KAEX,GAAa,MAAT/vD,IAEgB,MAAfA,EAAMoc,OAA4C,MAA3Bpc,EAAMoc,MAAM84C,cAEtCnF,EAAO/vD,EAAMoc,MAAM84C,YAAYxhF,SAId,MAAdssB,EAAMj/B,MAA0C,MAA1Bi/B,EAAMj/B,KAAKm0F,cAExB,MAARnF,EAEHA,EAAKr6F,IAAIsqC,EAAMj/B,KAAKm0F,aAIpBnF,EAAO/vD,EAAMj/B,KAAKm0F,YAAYxhF,SAI5BixE,GAKH,IAHA,IAAIrvE,EAAQpmB,KAAKosD,MAAM8W,WACnBvV,EAAavnC,EAAMwnC,cAAc9c,EAAMkc,MAElC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI4zD,EAAS98D,KAAKw5D,eAAex5D,KAAK+sD,SAAS3mC,EAAMynC,WAAW/c,EAAMkc,KAAM9jD,KAE9D,MAAV4zD,IAES,MAAR+jC,EAEHA,EAAO/jC,EAIP+jC,EAAKr6F,IAAIs2D,IAOd,OAAO+jC,GAYR03C,YAAY74I,UAAUgiJ,0BAA4B,SAAS5kF,GAE1D,OAAO,IAAImxC,iBAAiBnxC,EAAQ,QAAS,UAQ9Cy7E,YAAY74I,UAAU+hJ,mBAAqB,WAE1CzhJ,KAAK2hJ,0BACL3hJ,KAAK4hJ,0BAQNrJ,YAAY74I,UAAUiiJ,wBAA0B,WAE/C,IAAI14C,EAAKjpG,KAAKosD,MAAMy1F,qBAEpB,GAAU,MAAN54C,EACJ,CACC,GAA4B,MAAxBjpG,KAAKw0F,iBAA2Bx0F,KAAKw0F,gBAAgBrM,OAAS8gB,EAAGr0F,IACrE,CAC6B,MAAxB5U,KAAKw0F,iBAERx0F,KAAKw0F,gBAAgB9uE,UAGtB,IAAIo3C,EAAS,IAAIjS,YAAY,EAAG,EAAG,EAAG,GAEtC7qD,KAAKw0F,gBAAkB,IAAI8a,aAAaxyC,EAAQmsC,EAAGr0F,KACnD5U,KAAKw0F,gBAAgB/wB,QAAUzjE,KAAKosD,MAAMqX,QAC1CzjE,KAAKw0F,gBAAgB9vE,KAAK1kB,KAAK2nI,gBAC/B3nI,KAAKw0F,gBAAgBhnC,SAGQ,GAAzBvyC,SAASkmC,cAAsBP,SAASQ,OAE3CoG,QAAQ4xB,oBAAoBp5E,KAAKw0F,gBAAgBthF,KAChDgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,OAEhEE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,OAEhEE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,QAMjEhmD,KAAK8hJ,sBAAsB9hJ,KAAKw0F,gBAAiByU,QAEjB,MAAxBjpG,KAAKw0F,kBAEbx0F,KAAKw0F,gBAAgB9uE,UACrB1lB,KAAKw0F,gBAAkB,OASzB+jD,YAAY74I,UAAUkiJ,uBAAyB,WAE9C,GAAI5hJ,KAAKosD,MAAM21F,YACf,CACC,IAAIjlF,EAAS98D,KAAKgiJ,0BAEc,MAA5BhiJ,KAAKiiJ,qBAERjiJ,KAAKiiJ,oBAAsBjiJ,KAAK0hJ,0BAA0B5kF,GAC1D98D,KAAKiiJ,oBAAoB90F,MAAQntD,KAAKmtD,MACtCntD,KAAKiiJ,oBAAoB95C,UAAW,EACpCnoG,KAAKiiJ,oBAAoBx+E,QAAUzjE,KAAKosD,MAAMqX,QAC9CzjE,KAAKiiJ,oBAAoBv9H,KAAK1kB,KAAK2nI,gBACnC3nI,KAAKiiJ,oBAAoBz0F,SAGrBxtD,KAAKosD,MAAMsjF,uBAEdloF,QAAQD,YAAYvnD,KAAKiiJ,oBAAoB/uI,KAAM,WAAYgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE1FhmD,KAAKosD,MAAMytB,SAAS7zB,OAMtBwB,QAAQ4xB,oBAAoBp5E,KAAKiiJ,oBAAoB/uI,KACpDgzC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,OAEhEE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAGM,MAA7BhmD,KAAKosD,MAAMugF,gBAA0B3sI,KAAKosD,MAAMugF,eAAeuV,iBAElEliJ,KAAKosD,MAAMugF,eAAejmD,OAGvB1mF,KAAKosD,MAAMw/B,cAAgBpkC,QAAQ6vB,WAAWrxB,IAEjDhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,OAGjEE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3BhmD,KAAKosD,MAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,UAM/DhmD,KAAKiiJ,oBAAoB90F,MAAQntD,KAAKmtD,MACtCntD,KAAKiiJ,oBAAoBnlF,OAASA,EAClC98D,KAAKiiJ,oBAAoBz0F,eAGU,MAA5BxtD,KAAKiiJ,sBAEbjiJ,KAAKiiJ,oBAAoBv8H,UACzB1lB,KAAKiiJ,oBAAsB,OAS7B1J,YAAY74I,UAAUsiJ,wBAA0B,WAE/C,IAAInpC,EAAM74G,KAAKosD,MAAMkY,WACjB4oC,EAAKltG,KAAKmtD,MAAQntD,KAAKosD,MAAMu3E,UAC7B7mE,EAAS,IAAIjS,YAAY7qD,KAAKmtD,MAAQntD,KAAK6jE,UAAU7kB,EAAGh/C,KAAKmtD,MAAQntD,KAAK6jE,UAAUjZ,EACtFiuD,EAAI/yD,MAAQonD,EAAI2L,EAAIlzD,OAASunD,GAE/B,OAAOpwC,GA8BRy7E,YAAY74I,UAAUoiJ,sBAAwB,SAASttD,EAAiByU,GAEvEzU,EAAgBrnC,MAAQntD,KAAKmtD,MAC7BqnC,EAAgB13B,OAAO9d,EAAIh/C,KAAKmtD,MAAQntD,KAAK6jE,UAAU7kB,EACvDw1C,EAAgB13B,OAAOlS,EAAI5qD,KAAKmtD,MAAQntD,KAAK6jE,UAAUjZ,EACvD4pC,EAAgB13B,OAAOhX,MAAQ9lD,KAAKmtD,MAAQ87C,EAAGnjD,MAC/C0uC,EAAgB13B,OAAOnX,OAAS3lD,KAAKmtD,MAAQ87C,EAAGtjD,OAEhD6uC,EAAgBhnC,UAgBjB+qF,YAAY74I,UAAUg8I,aAAe,SAAS1uF,EAAM9E,GAInD,GAFAA,EAAsB,MAAXA,GAAmBA,EAElB,MAAR8E,EACJ,CACC9E,EAAUA,GAAWloD,KAAKosD,MAAMuwD,cAAc3vD,GAC9C,IAAIlc,EAAQ9wC,KAAK+sD,SAASC,EAAM9E,GAEhC,GAAa,MAATpX,GAAkBoX,EASrB,IAHA,IAAI9hC,EAAQpmB,KAAKosD,MAAM8W,WACnBvV,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAK07I,aAAat1H,EAAMynC,WAAWb,EAAM9jD,GAAIg/C,KAC1CloD,KAAKy/G,gBAAgBzyD,IAASA,GAAQhtD,KAAK8+G,mBAV/C9+G,KAAKohJ,YAAYp0F,GAenB,OAAOA,GAcRurF,YAAY74I,UAAUs7I,kBAAoB,SAAShuF,EAAMyoC,GAExDA,EAAsB,MAAXA,GAAmBA,EAC9B,IAAI3kD,EAAQ,KAEZ,GAAY,MAARkc,IAEHlc,EAAQ9wC,KAAK+sD,SAASC,GAET,MAATlc,GACJ,CACC,IAAI1qB,EAAQpmB,KAAKosD,MAAM8W,WAgCvB,GA9BIpyB,EAAM23F,UAET33F,EAAM23F,SAAU,GAEG,MAAf33F,EAAMlpB,OAAiBkpB,EAAM03F,gBAEhC13F,EAAMlpB,MAAQ5nB,KAAKosD,MAAMyvD,aAAa/qE,EAAMkc,MAC5Clc,EAAM03F,cAAe,GAGlBx7E,GAAQhtD,KAAK8+G,aAEhB9+G,KAAKg7I,kBAAkB50H,EAAM2vE,UAAU/oC,IAAO,GAG/Clc,EAAMk4F,wBAAwBhpI,KAAKg7I,kBAAkBh7I,KAAKkyG,mBAAmBllD,GAAM,IAAO,IAAQ,GAClGlc,EAAMk4F,wBAAwBhpI,KAAKg7I,kBAAkBh7I,KAAKkyG,mBAAmBllD,GAAM,IAAQ,IAAQ,GAEnGhtD,KAAKmiJ,gBAAgBrxG,GAGjBkc,GAAQhtD,KAAK8+G,aAAgBhuE,EAAM23F,UAEtCzoI,KAAKosD,MAAMmB,aAAaC,OAAO1c,GAAO,EAAO9wC,KAAKu+I,eAGlDztG,EAAMw4F,uBAIJ7zC,IAAY3kD,EAAM23F,QACtB,CAEoB,MAAf33F,EAAMoc,OAETltD,KAAKoiJ,eAAetxG,GAKrB,IAFA,IAAI6c,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKg7I,kBAAkB50H,EAAMynC,WAAWb,EAAM9jD,KAMlD,OAAO4nC,GAYRynG,YAAY74I,UAAUyiJ,gBAAkB,SAASrxG,GAQhD,GANAA,EAAMozF,eAAellF,EAAI,EACzBlO,EAAMozF,eAAet5E,EAAI,EACzB9Z,EAAM8tB,OAAO5f,EAAI,EACjBlO,EAAM8tB,OAAOhU,EAAI,EACjB9Z,EAAMlwC,OAAS,EAEXkwC,EAAMkc,MAAQhtD,KAAK8+G,YACvB,CACC,IAAI14F,EAAQpmB,KAAKosD,MAAM8W,WACnBm/E,EAASriJ,KAAK+sD,SAAS3mC,EAAM2vE,UAAUjlD,EAAMkc,OAEnC,MAAVq1F,GAAkBA,EAAOr1F,MAAQhtD,KAAK8+G,cAEzChuE,EAAM8tB,OAAO5f,GAAKqjG,EAAOzjF,OAAO5f,EAChClO,EAAM8tB,OAAOhU,GAAKy3F,EAAOzjF,OAAOhU,GAGjC,IAAIwJ,EAASp0D,KAAKosD,MAAMk2F,sBAAsBxxG,EAAMkc,MAEtC,MAAVoH,IAEHtjB,EAAM8tB,OAAO5f,GAAKoV,EAAOpV,EACzBlO,EAAM8tB,OAAOhU,GAAKwJ,EAAOxJ,GAG1B,IAAIorC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBnlD,EAAMkc,MAE3C,GAAW,MAAPgpC,EACJ,CACC,IAAK5vE,EAAMjX,OAAO2hC,EAAMkc,MAIvB,GAFAoH,EAAS4hC,EAAI5hC,QAAUp0D,KAAKsgJ,YAExBtqD,EAAIE,UAAsB,MAAVmsD,EAEnB,GAAIj8H,EAAMjX,OAAOkzI,EAAOr1F,MACxB,CACC,IAAI4R,EAAS5+D,KAAK8rD,SAASu2F,EAAQrsD,GAErB,MAAVp3B,IAEH9tB,EAAM8tB,OAAO5f,GAAM4f,EAAO5f,EAAIh/C,KAAKmtD,MAASk1F,EAAOzjF,OAAO5f,EAAIh/C,KAAK6jE,UAAU7kB,EAC7ElO,EAAM8tB,OAAOhU,GAAMgU,EAAOhU,EAAI5qD,KAAKmtD,MAASk1F,EAAOzjF,OAAOhU,EAAI5qD,KAAK6jE,UAAUjZ,QAK9E9Z,EAAM8tB,OAAO5f,GAAKg3C,EAAIh3C,EAAIqjG,EAAOv8F,MAAQ9lD,KAAKmtD,MAAQiH,EAAOpV,EAC7DlO,EAAM8tB,OAAOhU,GAAKorC,EAAIprC,EAAIy3F,EAAO18F,OAAS3lD,KAAKmtD,MAAQiH,EAAOxJ,OAK/D9Z,EAAMozF,eAAellF,EAAIh/C,KAAKmtD,MAAQiH,EAAOpV,EAC7ClO,EAAMozF,eAAet5E,EAAI5qD,KAAKmtD,MAAQiH,EAAOxJ,EAC7C9Z,EAAM8tB,OAAO5f,GAAKg3C,EAAIh3C,EACtBlO,EAAM8tB,OAAOhU,GAAKorC,EAAIprC,EAIxB9Z,EAAMkO,EAAIh/C,KAAKmtD,OAASntD,KAAK6jE,UAAU7kB,EAAIlO,EAAM8tB,OAAO5f,GACxDlO,EAAM8Z,EAAI5qD,KAAKmtD,OAASntD,KAAK6jE,UAAUjZ,EAAI9Z,EAAM8tB,OAAOhU,GACxD9Z,EAAMgV,MAAQ9lD,KAAKmtD,MAAQ6oC,EAAIlwC,MAC/BhV,EAAM4nE,cAAgB1iB,EAAIlwC,MAC1BhV,EAAM6U,OAAS3lD,KAAKmtD,MAAQ6oC,EAAIrwC,OAE5Bv/B,EAAMuvE,SAAS7kD,EAAMkc,OAExBhtD,KAAKuiJ,kBAAkBzxG,EAAOklD,GAG3B5vE,EAAMjX,OAAO2hC,EAAMkc,OAEtBhtD,KAAKwiJ,gBAAgB1xG,EAAOklD,IAK/BllD,EAAMw4F,sBAUPiP,YAAY74I,UAAU+/G,gBAAkB,SAASzyD,GAEhD,OAAOhtD,KAAKosD,MAAMqzD,gBAAgBzyD,IAQnCurF,YAAY74I,UAAU6iJ,kBAAoB,SAASzxG,EAAOklD,GAEzD,IAAI5vE,EAAQpmB,KAAKosD,MAAM8W,WACnBm/E,EAASriJ,KAAK+sD,SAAS3mC,EAAM2vE,UAAUjlD,EAAMkc,OAEjD,GAAIgpC,EAAIE,UAAsB,MAAVmsD,IAAmBj8H,EAAMjX,OAAOkzI,EAAOr1F,MAC3D,CACC,IAAI6Q,EAAQ3X,QAAQqQ,UAAU8rF,EAAOz6H,MAAMiiC,YAAYiR,iBAAmB,KAE1E,GAAa,GAAT+C,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEfokE,EAAK,IAAIt3E,QAAQ7Z,EAAMka,aAAcla,EAAMma,cAC3CyO,EAAK,IAAI/O,QAAQ03F,EAAOr3F,aAAcq3F,EAAOp3F,cAC7C+O,EAAK9T,QAAQ6T,gBAAgBkoE,EAAIzqE,EAAKE,EAAKgC,GAC/C5oB,EAAMkO,EAAIgb,EAAGhb,EAAIlO,EAAMgV,MAAQ,EAC/BhV,EAAM8Z,EAAIoP,EAAGpP,EAAI9Z,EAAM6U,OAAS,GAIlC3lD,KAAKyiJ,wBAAwB3xG,IAQ9BynG,YAAY74I,UAAU8iJ,gBAAkB,SAAS1xG,EAAOklD,GAEvD,IAAI9xF,EAAS4sC,EAAMi4F,yBAAwB,GACvC3kI,EAAS0sC,EAAMi4F,yBAAwB,GAK3C,GAAuD,MAAlD/oI,KAAKosD,MAAMhmC,MAAMi2F,YAAYvrE,EAAMkc,MAAM,IAA2B,MAAV9oD,GACnD,MAAVA,GAAgD,MAA9B8xF,EAAI+rC,kBAAiB,IACY,MAAnD/hI,KAAKosD,MAAMhmC,MAAMi2F,YAAYvrE,EAAMkc,MAAM,IAA4B,MAAV5oD,GACjD,MAAVA,GAAiD,MAA/B4xF,EAAI+rC,kBAAiB,GAExC/hI,KAAKwQ,MAAMsgC,EAAMkc,MAAM,OAGxB,CACChtD,KAAK0iJ,0BAA0B5xG,EAAO5sC,EAAQE,GAC9CpE,KAAK2iJ,aAAa7xG,EAAOklD,EAAI2P,OAAQzhG,EAAQE,GAC7CpE,KAAK4iJ,6BAA6B9xG,EAAO5sC,EAAQE,GAEjD,IAAIo4D,EAAM1rB,EAAM6qB,eAEZ7qB,EAAMkc,MAAQhtD,KAAK8+G,cAAuB,MAAPtiD,GAAeA,EAAI57D,OAAS,GACxD,MAAV47D,EAAI,IAAqC,MAAvBA,EAAIA,EAAI57D,OAAS,IAInCZ,KAAKwQ,MAAMsgC,EAAMkc,MAAM,IAIvBhtD,KAAK6iJ,iBAAiB/xG,GACtB9wC,KAAK8iJ,sBAAsBhyG,MAe9BynG,YAAY74I,UAAU+iJ,wBAA0B,SAAS3xG,GAExD,IAAI/pC,EAAIm/C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYilB,qBAAsBjlB,YAAYqY,cAEpF,GAAIn7D,GAAK8iD,YAAYyrB,WACrB,CACC,IAAI02D,EAAK9lF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYglB,kBAAmB,MAE5D,MAANm9D,EAEHA,GAAMhsI,KAAKmtD,MAIX6+E,EAAKl7F,EAAMgV,MAGZhV,EAAMozF,eAAellF,GAAKgtF,OAEtB,GAAIjlI,GAAK8iD,YAAYsY,YAEzBrxB,EAAMozF,eAAellF,GAAKlO,EAAMgV,WAE5B,GAAI/+C,GAAK8iD,YAAYqY,aAC1B,CACK8pE,EAAK9lF,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYglB,kBAAmB,MAEtE,GAAU,MAANm9D,EACJ,CAEC,IAAIhqE,EAAQ9b,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY8kB,YAAa9kB,YAAYqY,cAC3ErzB,EAAK,EAELmzB,GAASnY,YAAYqY,aAExBrzB,EAAK,GAEGmzB,GAASnY,YAAYsY,cAE7BtzB,EAAK,GAGI,GAANA,IAEHiC,EAAMozF,eAAellF,IAAMgtF,EAAKhsI,KAAKmtD,MAAQrc,EAAMgV,OAASjX,IAK/D,IAAIxnC,EAAI6+C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYklB,8BAA+BllB,YAAYuY,cAEzF/6D,GAAKwiD,YAAY0rB,UAEpBzkC,EAAMozF,eAAet5E,GAAK9Z,EAAM6U,OAExBt+C,GAAKwiD,YAAYwY,eAEzBvxB,EAAMozF,eAAet5E,GAAK9Z,EAAM6U,SASlC4yF,YAAY74I,UAAU+7I,qBAAuB,WAE5Cz7I,KAAK0gJ,SAAW,KAChB1gJ,KAAK2gJ,aAAe,KACpB3gJ,KAAK4gJ,mBAAqB,KAC1B5gJ,KAAK6gJ,uBAAyB,MAa/BtI,YAAY74I,UAAU0iJ,eAAiB,SAAStxG,GAE/C,IAAIiyG,EAAM/iJ,KAAKosD,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,OAAShtD,KAAKosD,MAAM42F,uBAC/DhjJ,KAAKosD,MAAM8W,WAAWyyB,SAAS7kD,EAAMkc,OAAShtD,KAAKosD,MAAM62F,sBACvD7R,EAAW,GAAOpxI,KAAK6gJ,wBAA8C7gJ,KAAK2gJ,aAC1EztI,EAAO,GAAOlT,KAAK4gJ,oBAAsC5gJ,KAAK0gJ,SAC9D79I,EAAS7C,KAAKosD,MAAMmB,aAAa4jF,iBAAiBrgG,EAAO59B,EAAMk+H,GAE/D2R,GAEH/iJ,KAAK6gJ,uBAAyBh+I,EAAO,GACrC7C,KAAK4gJ,mBAAqB/9I,EAAO,KAIjC7C,KAAK2gJ,aAAe99I,EAAO,GAC3B7C,KAAK0gJ,SAAW79I,EAAO,KAgBzB01I,YAAY74I,UAAUgjJ,0BAA4B,SAASroF,EAAMn2D,EAAQE,GAExEpE,KAAKkjJ,yBAAyB7oF,EAAMn2D,GAAQ,EAC3ClE,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMn2D,GAAQ,IAClDlE,KAAKkjJ,yBAAyB7oF,EAAMj2D,GAAQ,EAC3CpE,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMj2D,GAAQ,KAenDm0I,YAAY74I,UAAUwjJ,yBAA2B,SAAS7oF,EAAMD,EAAUl2D,EAAQu3D,GAEjFpB,EAAKyuE,yBAAyB9oI,KAAKojJ,sBAAsB/oF,EAAMD,EAAUl2D,EAAQu3D,GAAav3D,IAe/Fq0I,YAAY74I,UAAU0jJ,sBAAwB,SAAS/oF,EAAMD,EAAUl2D,EAAQu3D,GAE9E,IAAIzB,EAAK,KAOT,GALkB,MAAdyB,IAEHzB,EAAKh6D,KAAKosD,MAAMi3F,mBAAmBjpF,EAAUqB,EAAYz7D,KAAKosD,MAAMk3F,aAAajpF,KAGxE,MAANL,GAA0B,MAAZI,EAClB,CACC,IAAI5yB,EAAIxnC,KAAKmtD,MACT5H,EAAKvlD,KAAK6jE,UACVmkE,EAAO3tE,EAAKuE,OACZo3B,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB57B,EAAKrN,MAC1CgN,EAAKg8B,EAAI+rC,iBAAiB79H,GAEhB,MAAN81D,IAEHA,EAAK,IAAIrP,QAAQnjB,GAAK+d,EAAGvG,EAAIgb,EAAGhb,EAAIgpF,EAAKhpF,GACpCxX,GAAK+d,EAAGqF,EAAIoP,EAAGpP,EAAIo9E,EAAKp9E,KAI/B,OAAOoP,GAcRu+E,YAAY74I,UAAU6jJ,wBAA0B,SAASzyG,GAExD,IAAIgY,EAAW,KAEf,GAAa,MAAThY,GAAgC,MAAfA,EAAMoc,OAAwC,MAAvBpc,EAAMoc,MAAMi0C,SAAiD,SAA9BrwD,EAAMoc,MAAMi0C,QAAQ/E,OAC/F,CACCtzC,EAAW+B,YAAYoB,cAAcnb,GACrC,IAAI0yG,EAAM1yG,EAAMoc,MAAMi0C,QAAQqL,cAAc17D,EAAMlpB,MAAOkpB,EAAMkO,EAAGlO,EAAM8Z,EAAG9Z,EAAMgV,MAAOhV,EAAM6U,QAC9F7U,EAAMia,QAAQy4F,EAAIxkG,EAAGwkG,EAAI54F,EAAG9Z,EAAMoc,MAAMi0C,QAAQyK,GAAK43C,EAAI19F,MAAOhV,EAAMoc,MAAMi0C,QAAQ0K,GAAK23C,EAAI79F,QAG9F,OAAOmD,GAgBRyvF,YAAY74I,UAAUijJ,aAAe,SAAStoF,EAAMsrC,EAAQzhG,EAAQE,GAEnE,GAAY,MAARi2D,EACJ,CACC,IAAImC,EAAM,GACVA,EAAIzrD,KAAKspD,EAAKsB,eAAe,IAC7B,IAAI85D,EAAYz1H,KAAKyjJ,aAAappF,EAAMsrC,EAAQzhG,EAAQE,GAExD,GAAiB,MAAbqxH,EACJ,CACC,IAAI7gH,EAAM5U,KAAK0jJ,gBAAgBrpF,EAAMn2D,GAAQ,GACzCslH,EAAMxpH,KAAK0jJ,gBAAgBrpF,EAAMj2D,GAAQ,GAGzCu/I,EAAY3jJ,KAAKujJ,wBAAwB3uI,GACzCgvI,EAAY5jJ,KAAKujJ,wBAAwB/5B,GAE7CiM,EAAUp7D,EAAMzlD,EAAK40G,EAAK7jB,EAAQnpC,GAGjB,MAAbmnF,GAEH/uI,EAAIm2C,QAAQ44F,EAAU3kG,EAAG2kG,EAAU/4F,EAAG+4F,EAAU79F,MAAO69F,EAAUh+F,QAGjD,MAAbi+F,GAEHp6B,EAAIz+D,QAAQ64F,EAAU5kG,EAAG4kG,EAAUh5F,EAAGg5F,EAAU99F,MAAO89F,EAAUj+F,aAG9D,GAAc,MAAVggD,EAER,IAAK,IAAIz8F,EAAI,EAAGA,EAAIy8F,EAAO/kG,OAAQsI,IAElC,GAAiB,MAAby8F,EAAOz8F,GACX,CACC,IAAI8wD,EAAK9T,QAAQ1hC,MAAMmhF,EAAOz8F,IAC9BszD,EAAIzrD,KAAK/Q,KAAKwyI,sBAAsBn4E,EAAML,IAK7C,IAAIrqC,EAAM0qC,EAAKsB,eACfa,EAAIzrD,KAAK4e,EAAIA,EAAI/uB,OAAO,IAExBy5D,EAAKsB,eAAiBa,IASxB+7E,YAAY74I,UAAU8yI,sBAAwB,SAAS1hG,EAAOkpB,GAE7D,GAAa,MAATlpB,GAAuB,MAANkpB,EACrB,CACC,IAAIguE,EAAOl3F,EAAM8tB,OAEd,OAAO,IAAIjU,QAAQ3qD,KAAKmtD,OAAS6M,EAAGhb,EAAIh/C,KAAK6jE,UAAU7kB,EAAIgpF,EAAKhpF,GAC/Dh/C,KAAKmtD,OAAS6M,EAAGpP,EAAI5qD,KAAK6jE,UAAUjZ,EAAIo9E,EAAKp9E,IAGlD,OAAO,MAWR2tF,YAAY74I,UAAUmkJ,mBAAqB,SAASxpF,EAAMsrC,EAAQzhG,EAAQE,GAEzE,IAAIygE,EAAK7kE,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMn2D,GAAQ,GACtD4/I,EAAK9jJ,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMj2D,GAAQ,GAE1D,UAAe,MAAVuhG,GAAkBA,EAAO/kG,OAAS,IACpCslD,QAAQxb,SAAS2vB,EAAKzyC,MAAOiiC,YAAY0pB,uBAAuB,KAC1D,MAAN1O,GAA0B,MAAZA,EAAG5yB,OAAyB,MAAN6xG,GAA0B,MAAZA,EAAG7xG,UAEtC,MAAV/tC,GAAkBA,GAAUE,IAWrCm0I,YAAY74I,UAAU+jJ,aAAe,SAASppF,EAAMsrC,EAAQzhG,EAAQE,GAEnE,IAAIqxH,EAAYz1H,KAAK6jJ,mBAAmBxpF,EAAMsrC,EAAQzhG,EAAQE,GAC7D8hD,QAAQxb,SAAS2vB,EAAKzyC,MAAOiiC,YAAYypB,WAAYtzE,KAAKosD,MAAM23F,kBAC9D79F,QAAQxb,SAAS2vB,EAAKzyC,MAAOiiC,YAAY6lB,mBAAmB,GACzB,KAArCrV,EAAKzyC,MAAMiiC,YAAYqpB,YAGxB,GAAyB,iBAAf,EACV,CACC,IAAIvjD,EAAM0oH,gBAAgB3tG,SAAS+qF,GAExB,MAAP9lG,GAAe3vB,KAAKgkJ,gBAEtBr0H,EAAMu2B,QAAQgJ,KAAKumE,IAGrBA,EAAY9lG,EAGb,MAAyB,mBAAf,EAEF8lG,EAGD,MAeR8iB,YAAY74I,UAAUkjJ,6BAA+B,SAAS9xG,EAAO5sC,EAAQE,GAE5E,IAAIo4D,EAAM1rB,EAAM6qB,eACZwuC,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAS,GAEhB,MAANspG,GAAwB,MAAV9lG,GAEjBpE,KAAKikJ,4BAA4BnzG,EAAO1sC,EAAQF,GAAQ,GAG/C,MAANimG,GAAwB,MAAVjmG,GAEjBlE,KAAKikJ,4BAA4BnzG,EAAO5sC,EAAQE,GAAQ,IAiB1Dm0I,YAAY74I,UAAUukJ,4BAA8B,SAAS5pF,EAAMpvD,EAAO8xB,EAAK74B,GAE9Em2D,EAAKyuE,yBAAyB9oI,KAAKkkJ,yBAAyB7pF,EAAMpvD,EAAO8xB,EAAK74B,GAASA,IAgBxFq0I,YAAY74I,UAAUwkJ,yBAA2B,SAAS7pF,EAAMpvD,EAAO8xB,EAAK74B,GAE3E+G,EAAQjL,KAAK0jJ,gBAAgBrpF,EAAMpvD,EAAO/G,GAC1C,IAAIpC,EAAO9B,KAAKmkJ,aAAa9pF,EAAMt9B,EAAK74B,GAEpCkgJ,EAAOpkJ,KAAKosD,MAAMk3F,aAAajpF,GAC/BwD,EAAQ3X,QAAQqQ,UAAUvhC,OAAO/pB,EAAM2c,MAAMiiC,YAAYiR,iBAAmB,MAC5E2B,EAAS,IAAI9R,QAAQ1/C,EAAM+/C,aAAc//C,EAAMggD,cAEnD,GAAa,GAAT4S,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GACpB/7D,EAAOokD,QAAQ6T,gBAAgBj4D,EAAM01D,EAAKE,EAAK+E,GAGhD,IAAI8H,EAASr8D,WAAWmyD,EAAKzyC,MAAMiiC,YAAY2nB,0BAA4B,GAC3EjN,GAAUr8D,WAAWmyD,EAAKzyC,MAAM,EAC/BiiC,YAAYynB,+BACZznB,YAAY0nB,iCAAmC,GAChD,IAAIvX,EAAKh6D,KAAKu8D,kBAAkBtxD,EAAOnJ,EAAe,GAAT+7D,GAAcumF,EAAM7/E,GAEjE,GAAa,GAAT1G,EACJ,CACKrG,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GACnB7D,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAK+E,GAG5C,OAAOzC,GAeRu+E,YAAY74I,UAAUgkJ,gBAAkB,SAAS5yG,EAAOspB,EAAUl2D,GAEjE,IAAI7G,EAAM,EAAWwsD,YAAYijB,kBAChCjjB,YAAYkjB,kBACTp8D,EAAKu1C,QAAQxb,SAASoG,EAAMlpB,MAAOvqB,GAEvC,GAAU,MAANsT,EACJ,CACC,IAAIgf,EAAM3vB,KAAK+sD,SAAS/sD,KAAKosD,MAAM8W,WAAWgV,QAAQvnE,IAG3C,MAAPgf,IAEHyqC,EAAWzqC,GAIb,OAAOyqC,GAmBRm+E,YAAY74I,UAAU68D,kBAAoB,SAASnC,EAAUt4D,EAAMygI,EAAYh+D,GAE9E,IAAItyB,EAAQ,KAEZ,GAAgB,MAAZmoB,EACJ,CACC,IAAI8xC,EAAYlsG,KAAKqkJ,qBAAqBjqF,GAE1C,GAAiB,MAAb8xC,GAA6B,MAARpqG,EACzB,CACC,IAAIg7D,EAAS98D,KAAK6oI,mBAAmBzuE,EAAUmK,GAE/C,GAAIzH,EAAOhX,MAAQ,GAAKgX,EAAOnX,OAAS,EACxC,CACC1T,EAAQ,IAAI0Y,QAAQ7oD,EAAKk9C,EAAGl9C,EAAK8oD,GACjC,IAAIoR,GAAQ,EACRC,GAAQ,EAERj8D,KAAKosD,MAAMhmC,MAAMuvE,SAASv7B,EAASpN,QAEtCgP,EAAwE,GAAhE9V,QAAQxb,SAAS0vB,EAASxyC,MAAOiiC,YAAYsS,YAAa,GAClEF,EAAwE,GAAhE/V,QAAQxb,SAAS0vB,EAASxyC,MAAOiiC,YAAYuS,YAAa,GAG5C,MAAlBhC,EAASlN,OAA2C,MAA1BkN,EAASlN,MAAMi0C,UAE5CnlC,EAAgE,GAAvD9V,QAAQxb,SAAS0vB,EAASxyC,MAAO,eAAgB,IAAYo0C,EACtEC,EAAgE,GAAvD/V,QAAQxb,SAAS0vB,EAASxyC,MAAO,eAAgB,IAAYq0C,GAGnED,IAEH/pB,EAAM+M,EAAI,EAAI8d,EAAO9R,aAAe/Y,EAAM+M,GAGvCid,IAEHhqB,EAAM2Y,EAAI,EAAIkS,EAAO7R,aAAehZ,EAAM2Y,IAI5C3Y,EAAQi6D,EAAUpvC,EAAQ1C,EAAUnoB,EAAOswF,GAE9B,MAATtwF,IAEC+pB,IAEH/pB,EAAM+M,EAAI,EAAI8d,EAAO9R,aAAe/Y,EAAM+M,GAGvCid,IAEHhqB,EAAM2Y,EAAI,EAAIkS,EAAO7R,aAAehZ,EAAM2Y,KAMjC,MAAT3Y,IAEHA,EAAQjyC,KAAK8rD,SAASsO,IAIxB,OAAOnoB,GAQRsmG,YAAY74I,UAAU+yI,kBAAoB,SAAU3hG,GAEnD,IAAIvzC,EAAoB,MAAfuzC,EAAMlpB,OAAiB1f,WAAW4oC,EAAMlpB,MAC/CiiC,YAAY2pB,0BAAgC,EAE9C,OAAO1iC,EAAMka,aAAeztD,EAAIuzC,EAAMgV,OAQvCyyF,YAAY74I,UAAUyyI,kBAAoB,SAAUrhG,GAEnD,IAAIvzC,EAAoB,MAAfuzC,EAAMlpB,OAAiB1f,WAAW4oC,EAAMlpB,MAC/CiiC,YAAY4pB,0BAAgC,EAE9C,OAAO3iC,EAAMma,aAAe1tD,EAAIuzC,EAAM6U,QA8CvC4yF,YAAY74I,UAAUmpI,mBAAqB,SAASzuE,EAAUmK,GAS7D,OAPAA,EAAoB,MAAVA,EAAkBA,EAAS,EAErB,MAAZnK,IAEHmK,GAAUr8D,WAAWkyD,EAASxyC,MAAMiiC,YAAY2nB,0BAA4B,IAGtEpX,EAASyuE,mBAAmBtkE,EAASvkE,KAAKmtD,QAQlDorF,YAAY74I,UAAU2kJ,qBAAuB,SAASvzG,GAErD,IAAIo7D,EAAYp7D,EAAMlpB,MAAMiiC,YAAYgjB,iBAGxC,GAAyB,iBAAf,EACV,CACC,IAAIl9C,EAAM0oH,gBAAgB3tG,SAASwhE,GAExB,MAAPv8E,GAAe3vB,KAAKgkJ,gBAEtBr0H,EAAMu2B,QAAQgJ,KAAKg9C,IAGrBA,EAAYv8E,EAGb,MAAyB,mBAAf,EAEFu8E,EAGD,MAgBRqsC,YAAY74I,UAAUykJ,aAAe,SAAS9pF,EAAMiqF,EAAUpgJ,GAE7D,IAAIs4D,EAAMnC,EAAKsB,eACX1pB,EAAQ,KAEZ,GAAW,MAAPuqB,GAAeA,EAAI57D,QAAU,EACjC,CACC,IAAIqyD,EAAQuJ,EAAI57D,OAChBqxC,EAAQuqB,EAAI,EAAWt8D,KAAKyD,IAAI,EAAGsvD,EAAQ,GAAK/yD,KAAKwD,IAAI,EAAGuvD,EAAQ,IAQrE,OALa,MAAThhB,GAA6B,MAAZqyG,IAEpBryG,EAAQ,IAAI0Y,QAAQ25F,EAASt5F,aAAcs5F,EAASr5F,eAG9ChZ,GAgBRsmG,YAAY74I,UAAUwyG,mBAAqB,SAAS73C,EAAMn2D,GAEzD,IAAIkiB,EAAQpmB,KAAKosD,MAAM8W,WACnBrgE,EAASujB,EAAMi2F,YAAYhiD,EAAMn2D,GACjCm1H,EAAOx2H,EAEX,MAAiB,MAAVA,GAAkBA,GAAU7C,KAAK8+G,YAElC9+G,KAAKosD,MAAMuwD,cAAc0c,KAASr5H,KAAKy/G,gBAAgB58G,KAE3Dw2H,EAAOx2H,GAGRA,EAASujB,EAAM2vE,UAAUlzF,GAW1B,OAPY,MAARw2H,GAAkBjzG,EAAM22C,SAASs8D,IACpCjzG,EAAM2vE,UAAUsjC,IAASjzG,EAAM+8C,WAC/Bk2D,GAAQr5H,KAAK8+G,cAEbua,EAAO,MAGDA,GAeRkf,YAAY74I,UAAUmjJ,iBAAmB,SAAS/xG,GAEjD,IAAI60D,EAAS70D,EAAM6qB,eACfwuC,EAAKxE,EAAO,GACZuE,EAAKvE,EAAOA,EAAO/kG,OAAS,GAEhC,GAAIupG,EAAGnrD,GAAKkrD,EAAGlrD,GAAKmrD,EAAGv/C,GAAKs/C,EAAGt/C,EAC/B,CACC,IAAI/b,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EACnB9Z,EAAM83F,iBAAmB1oI,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,QAIlD+B,EAAM83F,iBAAmB,EAG1B,IAAIhoI,EAAS,EACTyN,EAAW,GACX2rD,EAAKmwC,EAET,GAAU,MAANnwC,EACJ,CAMC,IALA,IAAI7O,EAAO6O,EAAGhb,EACVoM,EAAO4O,EAAGpP,EACVS,EAAOF,EACPG,EAAOF,EAEFliD,EAAI,EAAGA,EAAIy8F,EAAO/kG,OAAQsI,IACnC,CACC,IAAIymB,EAAMg2E,EAAOz8F,GAEjB,GAAW,MAAPymB,EACJ,CACKkf,EAAKmrB,EAAGhb,EAAIrvB,EAAIqvB,EAChBjQ,EAAKirB,EAAGpP,EAAIj7B,EAAIi7B,EADpB,IAGIknF,EAAU5xI,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GACvC1gC,EAAS0C,KAAK+gI,GACdlxI,GAAUkxI,EAEV93E,EAAKrqC,EAELw7B,EAAOjrD,KAAKyD,IAAIq2D,EAAGhb,EAAGmM,GACtBC,EAAOlrD,KAAKyD,IAAIq2D,EAAGpP,EAAGQ,GACtBC,EAAOnrD,KAAKwD,IAAIs2D,EAAGhb,EAAGqM,GACtBC,EAAOprD,KAAKwD,IAAIs2D,EAAGpP,EAAGU,IAIxBxa,EAAMlwC,OAASA,EACfkwC,EAAMziC,SAAWA,EAEjB,IAAIk2I,EAAa,EAEjBzzG,EAAMkO,EAAImM,EACVra,EAAM8Z,EAAIQ,EACVta,EAAMgV,MAAQ5lD,KAAKwD,IAAI6gJ,EAAYl5F,EAAOF,GAC1Cra,EAAM6U,OAASzlD,KAAKwD,IAAI6gJ,EAAYj5F,EAAOF,KAgB7CmtF,YAAY74I,UAAUosD,SAAW,SAAShb,EAAOsc,GAEhD,IAAIpO,EAAIlO,EAAMka,aACVJ,EAAI9Z,EAAMma,aAEd,GAAsB,MAAlBna,EAAMziC,UAAiC,MAAZ++C,IAAoBA,EAAS8oC,UA8CvD,GAAgB,MAAZ9oC,EACT,CACKgH,EAAShH,EAASgH,OAER,MAAVA,IAEHpV,GAAKoV,EAAOpV,EACZ4L,GAAKwJ,EAAOxJ,QApDd,CACC,IAAI45F,EAAkB,MAAZp3F,EAAoBA,EAASpO,EAAI,EAAI,EAC3C+tD,EAAaj8D,EAAM6qB,eAAe/6D,OAClCg7D,EAAO17D,KAAKm8D,OAAOmoF,EAAK,IAAO1zG,EAAMlwC,QACrCkxI,EAAUhhG,EAAMziC,SAAS,GACzBzN,EAAS,EACTwC,EAAQ,EAEZ,MAAOw4D,GAAQ17D,KAAKm8D,MAAMz7D,EAASkxI,IAAY1uI,EAAQ2pG,EAAa,EAEnEnsG,GAAUkxI,EACVA,EAAUhhG,EAAMziC,SAASjL,KAG1B,IAAIgqG,EAAqB,GAAX0kC,EAAgB,GAAKl2E,EAAOh7D,GAAUkxI,EAChD3nC,EAAKr5D,EAAM6qB,eAAev4D,EAAM,GAChC8mG,EAAKp5D,EAAM6qB,eAAev4D,GAE9B,GAAU,MAAN+mG,GAAoB,MAAND,EAClB,CACC,IAAIu6C,EAAK,EACLjiC,EAAU,EACVC,EAAU,EAEd,GAAgB,MAAZr1D,EACJ,CACCq3F,EAAKr3F,EAASxC,EACd,IAAIwJ,EAAShH,EAASgH,OAER,MAAVA,IAEHouD,EAAUpuD,EAAOpV,EACjByjE,EAAUruD,EAAOxJ,GAInB,IAAI/b,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EACfupD,EAAiB,GAAX29B,EAAgB,EAAI/iG,EAAK+iG,EAC/B19B,EAAiB,GAAX09B,EAAgB,EAAIjjG,EAAKijG,EAEnC9yF,EAAImrD,EAAGnrD,EAAInQ,EAAKu+D,GAAU+G,EAAKswC,EAAKjiC,GAAWxiH,KAAKmtD,MACpDvC,EAAIu/C,EAAGv/C,EAAI7b,EAAKq+D,GAAUgH,EAAKqwC,EAAKhiC,GAAWziH,KAAKmtD,OActD,OAAO,IAAIxC,QAAQ3L,EAAG4L,IAevB2tF,YAAY74I,UAAUglJ,iBAAmB,SAASz2F,EAAWjP,EAAG4L,GAE/D,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WACnB9V,EAAWhnC,EAAM62F,YAAYhvD,EAAUjB,MAE3C,GAAgB,MAAZI,EACJ,CACC,IAAI2/C,EAAa9+C,EAAU0N,eAAe/6D,OAE1C,GAAIwsD,EAAS8oC,UAAY6W,EAAa,EACtC,CAaC,IAZA,IAAI43C,EAAc12F,EAAUrtD,OACxByN,EAAW4/C,EAAU5/C,SAGrB87F,EAAKl8C,EAAU0N,eAAe,GAC9BuuC,EAAKj8C,EAAU0N,eAAe,GAC9BipF,EAAU1+F,QAAQ2V,YAAYsuC,EAAGnrD,EAAGmrD,EAAGv/C,EAAGs/C,EAAGlrD,EAAGkrD,EAAGt/C,EAAG5L,EAAG4L,GAEzDxnD,EAAQ,EACRusB,EAAM,EACN/uB,EAAS,EAEJsI,EAAI,EAAGA,EAAI6jG,EAAY7jG,IAChC,CACCymB,GAAOthB,EAASnF,EAAI,GACpBghG,EAAKj8C,EAAU0N,eAAezyD,GAC9B,IAAI0yD,EAAO1V,QAAQ2V,YAAYsuC,EAAGnrD,EAAGmrD,EAAGv/C,EAAGs/C,EAAGlrD,EAAGkrD,EAAGt/C,EAAG5L,EAAG4L,GAEtDgR,GAAQgpF,IAEXA,EAAUhpF,EACVx4D,EAAQ8F,EAAI,EACZtI,EAAS+uB,GAGVw6E,EAAKD,EAGN,IAAItxC,EAAMvqD,EAASjL,GACnB+mG,EAAKl8C,EAAU0N,eAAev4D,GAC9B8mG,EAAKj8C,EAAU0N,eAAev4D,EAAQ,GAEtC,IAAIg2D,EAAK+wC,EAAGnrD,EACRqa,EAAK8wC,EAAGv/C,EAERqP,EAAKiwC,EAAGlrD,EACRkb,EAAKgwC,EAAGt/C,EAER4U,EAAKxgB,EACLygB,EAAK7U,EAELi6F,EAAWzrF,EAAKa,EAChB6qF,EAAWzrF,EAAKa,EAEpBsF,GAAMvF,EACNwF,GAAMvF,EACN,IAAIwF,EAAY,EAEhBF,EAAKqlF,EAAWrlF,EAChBC,EAAKqlF,EAAWrlF,EAChB,IAAIE,EAAUH,EAAKqlF,EAAWplF,EAAKqlF,EAIlCplF,EAFGC,GAAW,EAEF,EAIAA,EAAUA,GACjBklF,EAAWA,EAAWC,EAAWA,GAGvC,IAAIC,EAAU7kJ,KAAKg4D,KAAKwH,GAEpBqlF,EAAUnsF,IAEbmsF,EAAUnsF,GAGX,IAAIosF,EAAY9kJ,KAAKg4D,KAAKhS,QAAQ2V,YAAYsuC,EAAGnrD,EAAGmrD,EAAGv/C,EAAGs/C,EACvDlrD,EAAGkrD,EAAGt/C,EAAG5L,EAAG4L,IACXwvC,EAAYl0C,QAAQ4Z,YAAYqqC,EAAGnrD,EAAGmrD,EAAGv/C,EAAGs/C,EAAGlrD,EAAGkrD,EAAGt/C,EAAG5L,EAAG4L,GAQ/D,OANkB,GAAdwvC,IAEH4qD,GAAaA,GAIP,IAAIr6F,SAAUg6F,EAAc,EAAI/jJ,EAASmkJ,GAAWJ,GAAgB,EACxEK,EAAYhlJ,KAAKmtD,QAItB,OAAO,IAAIxC,SAiBZ4tF,YAAY74I,UAAUojJ,sBAAwB,SAAShyG,GAEtD,IAAI60D,EAAS70D,EAAM6qB,eAKnB,GAHA7qB,EAAMozF,eAAellF,EAAIlO,EAAMka,aAC/Bla,EAAMozF,eAAet5E,EAAI9Z,EAAMma,aAEjB,MAAV06C,GAAkBA,EAAO/kG,OAAS,GAAuB,MAAlBkwC,EAAMziC,SACjD,CACC,IAAI++C,EAAWptD,KAAKosD,MAAM6pC,gBAAgBnlD,EAAMkc,MAEhD,GAAII,EAAS8oC,SACb,CACC,IAAI9hC,EAASp0D,KAAK8rD,SAAShb,EAAOsc,GAEpB,MAAVgH,IAEHtjB,EAAMozF,eAAiB9vE,OAIzB,CACC,IAAI+1C,EAAKxE,EAAO,GACZuE,EAAKvE,EAAOA,EAAO/kG,OAAS,GAEhC,GAAU,MAANupG,GAAoB,MAAND,EAClB,CACC,IAAIr7D,EAAKq7D,EAAGlrD,EAAImrD,EAAGnrD,EACfjQ,EAAKm7D,EAAGt/C,EAAIu/C,EAAGv/C,EACfiM,EAAK,EACLC,EAAK,EAEL81B,EAAMx/B,EAASgH,OAER,MAAPw4B,IAEH/1B,EAAK+1B,EAAI5tC,EACT8X,EAAK81B,EAAIhiC,GAGV,IAAI5L,EAAImrD,EAAGnrD,EAAInQ,EAAK,EAAIgoB,EAAK72D,KAAKmtD,MAC9BvC,EAAIu/C,EAAGv/C,EAAI7b,EAAK,EAAI+nB,EAAK92D,KAAKmtD,MAElCrc,EAAMozF,eAAellF,EAAIA,EACzBlO,EAAMozF,eAAet5E,EAAIA,MAkB7B2tF,YAAY74I,UAAUqtD,SAAW,SAASC,EAAMjkD,GAE/CA,EAASA,IAAU,EACnB,IAAI+nC,EAAQ,KAoBZ,OAlBY,MAARkc,IAEHlc,EAAQ9wC,KAAKo3F,OAAO/3F,IAAI2tD,GAEpBjkD,IAAoB,MAAT+nC,GAAiB9wC,KAAK8jC,cAAgB9jC,KAAKosD,MAAMuwD,cAAc3vD,KAEhE,MAATlc,GAEHA,EAAQ9wC,KAAK63F,YAAY7qC,GACzBhtD,KAAKo3F,OAAOvuC,IAAImE,EAAMlc,IAItBA,EAAMlpB,MAAQ5nB,KAAKosD,MAAMyvD,aAAa7uD,KAKlClc,GAQRynG,YAAY74I,UAAU6+I,YAAc,WAEnC,OAAOv+I,KAAK+nI,WAQbwQ,YAAY74I,UAAUulJ,aAAe,SAAS3nJ,GAE7C0C,KAAK+nI,UAAYzqI,GAQlBi7I,YAAY74I,UAAUskJ,YAAc,WAEnC,OAAOhkJ,KAAK0rG,WAQb6sC,YAAY74I,UAAUwlJ,aAAe,SAAS5nJ,GAE7C0C,KAAK0rG,UAAYpuG,GAQlBi7I,YAAY74I,UAAUy7I,UAAY,WAEjC,OAAOn7I,KAAKo3F,QAQbmhD,YAAY74I,UAAUwhG,UAAY,SAAS5jG,GAE1C0C,KAAKo3F,OAAS95F,GAWfi7I,YAAY74I,UAAUylJ,cAAgB,SAAS/kF,GAE9C,GAAa,MAATA,EAEH,OAAOpgE,KAAKo3F,OAMZ,IAFA,IAAIv0F,EAAS,GAEJqG,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI4nC,EAAQ9wC,KAAK+sD,SAASqT,EAAMl3D,IAEnB,MAAT4nC,GAEHjuC,EAAOkO,KAAK+/B,GAId,OAAOjuC,GAaT01I,YAAY74I,UAAU0hJ,YAAc,SAASp0F,GAE5C,IAAIlc,EAAQ,KAcZ,OAZY,MAARkc,IAEHlc,EAAQ9wC,KAAKo3F,OAAO/tF,OAAO2jD,GAEd,MAATlc,IAEH9wC,KAAKosD,MAAMmB,aAAa7nC,QAAQorB,GAChCA,EAAM23F,SAAU,EAChB33F,EAAMprB,YAIDorB,GAaRynG,YAAY74I,UAAUm4F,YAAc,SAAS7qC,GAE5C,OAAO,IAAIi3E,YAAYjkI,KAAMgtD,EAAMhtD,KAAKosD,MAAMyvD,aAAa7uD,KAS5DurF,YAAY74I,UAAUgoI,UAAY,WAEjC,OAAO1nI,KAAK4jE,QAQb20E,YAAY74I,UAAUkoI,kBAAoB,WAEzC,OAAO5nI,KAAK2nI,gBAQb4Q,YAAY74I,UAAUimI,YAAc,WAEnC,OAAO3lI,KAAKujE,UAQbg1E,YAAY74I,UAAU+lG,eAAiB,WAEtC,OAAOzlG,KAAKwjE,aAQb+0E,YAAY74I,UAAU0lJ,iBAAmB,WAExC,OAAOplJ,KAAKqlJ,eASb9M,YAAY74I,UAAU4lJ,iBAAmB,SAASt/F,GAEjD,IAAI9hD,EAASsjD,QAAQkwB,UAAU1xB,GAE/B,OAAQ9hD,GAAUlE,KAAKosD,MAAM2R,WAC5B75D,EAAOuyB,YAAcz2B,KAAK2nI,gBACJ,MAArBzjI,EAAOuyB,YACRvyB,EAAOuyB,WAAWA,YAAcz2B,KAAK2nI,gBACrCzjI,GAAUlE,KAAK4jE,OAAOntC,YACtBvyB,GAAUlE,KAAK4jE,QACf1/D,GAAUlE,KAAK2nI,gBACfzjI,GAAUlE,KAAKujE,UACfr/D,GAAUlE,KAAKwjE,aACft/D,GAAUlE,KAAKqlJ,eAShB9M,YAAY74I,UAAU6lJ,cAAgB,SAASv/F,GAE/C,IAAIoO,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtC/D,EAAK,IAAIrP,QAAQ3E,EAAIi2B,QAAU7nB,EAAOpV,EAAGgH,EAAIk2B,QAAU9nB,EAAOxJ,GAE9D46F,EAAWxlJ,KAAKosD,MAAM2R,UAAU5J,YAChCsxF,EAAUzlJ,KAAKosD,MAAM2R,UAAUnX,YAEnC,GAAI4+F,EAAWC,GAAWzrF,EAAGhb,EAAIymG,EAAU,GAAKzrF,EAAGhb,GAAKwmG,EAEvD,OAAO,EAGR,IAAIE,EAAY1lJ,KAAKosD,MAAM2R,UAAU7vB,aACjCy3G,EAAW3lJ,KAAKosD,MAAM2R,UAAUpX,aAEpC,OAAI++F,EAAYC,GAAY3rF,EAAGpP,EAAI+6F,EAAW,GAAK3rF,EAAGpP,GAAK86F,GAc5DnN,YAAY74I,UAAUglB,KAAO,WAE5B1kB,KAAK8qI,mBAGL,IAAI1+E,EAAQpsD,KAAKosD,MAEbA,EAAMqX,SAAW5Z,YAAY6Z,YAEhC1jE,KAAK6mG,YAEGz6C,EAAMqX,SAAW5Z,YAAYoe,YAErCjoE,KAAK+mG,YAIL/mG,KAAK8mG,cASPyxC,YAAY74I,UAAUorI,iBAAmB,WAExC,IAAI1+E,EAAQpsD,KAAKosD,MACb2R,EAAY3R,EAAM2R,UAEtB,GAAiB,MAAbA,EACJ,CAGKnd,SAAS+B,WAEZ6E,QAAQD,YAAYwW,EAAW,eAAgB7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE1EoG,EAAMw5F,iBAAiB5/F,GACvBwB,QAAQ8vB,QAAQtxB,OAGjBwB,QAAQD,YAAYwW,EAAW,gBAAiB7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3EoG,EAAMw5F,iBAAiB5/F,GACvBwB,QAAQ8vB,QAAQtxB,OAGjBwB,QAAQD,YAAYwW,EAAW,aAAc7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAExEoG,EAAMw5F,iBAAiB5/F,GACvBwB,QAAQ8vB,QAAQtxB,QAKlBwB,QAAQ4xB,oBAAoBrb,EAAW7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,IAG9DhmD,KAAKslJ,iBAAiBt/F,KAAWpF,SAASE,OAAUF,SAASI,SAAYJ,SAASgB,OACpFhB,SAASY,OAAUZ,SAASc,QAAW1hD,KAAKulJ,cAAcv/F,IAE3DoG,EAAM0tB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,OAG5DE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKslJ,iBAAiBt/F,IAEzBoG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,OAG5DE,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEvBhmD,KAAKslJ,iBAAiBt/F,IAEzBoG,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,QAO1DwB,QAAQD,YAAYwW,EAAW,WAAY7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAElEhmD,KAAKslJ,iBAAiBt/F,IAEzBoG,EAAMytB,SAAS7zB,OAOjB,IAAI+G,EAAW,SAAS/G,GAEvB,IAAIlV,EAAQ,KAKZ,GAAI8P,SAAS+B,SACb,CACC,IAAI3D,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GAIvBgU,EAAK9T,QAAQ2Y,aAAad,EAAW/e,EAAG4L,GAC5C9Z,EAAQsb,EAAMuR,KAAK5Q,SAASX,EAAMq+B,UAAUzwB,EAAGhb,EAAGgb,EAAGpP,IAGtD,OAAO9Z,GAORsb,EAAM+jC,iBACN,CACC3K,UAAW,SAASl+B,EAAQq+B,GAE3Bv5B,EAAMy5F,iBAAiBh4D,YAExB3C,UAAW,aACXE,QAAS,eAGVprF,KAAKo6I,YAAcl0F,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAGlB,MAAxBoG,EAAMugF,gBAA0BvgF,EAAMugF,eAAeuV,iBAExD91F,EAAMugF,eAAejmD,OAGlB1mF,KAAKwgJ,wBAA0Bp0F,EAAMw/B,aAAkC,MAAnBx/B,EAAM2R,YAC5D/9D,KAAKslJ,iBAAiBt/F,IAAyC,QAAjCoG,EAAM2R,UAAUn2C,MAAMikB,SACjB,UAApCugB,EAAM2R,UAAUn2C,MAAMygC,aAA2Bb,QAAQ6vB,WAAWrxB,IAEpEoG,EAAM0tB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAK+G,EAAS/G,QAI1EhmD,KAAK8lJ,WAAa5/F,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEzChmD,KAAKwgJ,wBAA0Bp0F,EAAMw/B,aAAkC,MAAnBx/B,EAAM2R,YAC5D/9D,KAAKslJ,iBAAiBt/F,IAAyC,QAAjCoG,EAAM2R,UAAUn2C,MAAMikB,SACjB,UAApCugB,EAAM2R,UAAUn2C,MAAMygC,YAEtB+D,EAAM0tB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,OAI1DwB,QAAQ4xB,oBAAoBn+D,SAAU,KAAMjb,KAAKo6I,YAAap6I,KAAK8lJ,cASrEvN,YAAY74I,UAAUonG,WAAa,WAElC,IAAI/oC,EAAY/9D,KAAKosD,MAAM2R,UAE3B,GAAiB,MAAbA,IAEH/9D,KAAK4jE,OAAS5jE,KAAK+lJ,eAAe,OAAQ,QAC1C/lJ,KAAK4jE,OAAOh8C,MAAMonC,SAAW,SAK7BhvD,KAAK2nI,eAAiB3nI,KAAK+lJ,eAAe,MAAO,OACjD/lJ,KAAKujE,SAAWvjE,KAAK+lJ,eAAe,MAAO,OAC3C/lJ,KAAKwjE,YAAcxjE,KAAK+lJ,eAAe,MAAO,OAC9C/lJ,KAAKqlJ,cAAgBrlJ,KAAK+lJ,eAAe,MAAO,OAEhD/lJ,KAAK4jE,OAAOlrC,YAAY14B,KAAK2nI,gBAC7B3nI,KAAK4jE,OAAOlrC,YAAY14B,KAAKujE,UAC7BvjE,KAAK4jE,OAAOlrC,YAAY14B,KAAKwjE,aAC7BxjE,KAAK4jE,OAAOlrC,YAAY14B,KAAKqlJ,eAE7BtnF,EAAUrlC,YAAY14B,KAAK4jE,QAC3B5jE,KAAKgmJ,qBAAqBjoF,GAGtBnd,SAASM,WACb,CACC,IAAI+kG,EAAW//F,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE1C,IAAI8W,EAAS98D,KAAK4kE,iBACd9e,EAAQgX,EAAO9d,EAAI8d,EAAOhX,MAAQ9lD,KAAKosD,MAAMmY,OAC7C5e,EAASmX,EAAOlS,EAAIkS,EAAOnX,OAAS3lD,KAAKosD,MAAMmY,OAEnDvkE,KAAKkmJ,qBAAqBpgG,EAAOH,MAGlC6B,QAAQD,YAAY94C,OAAQ,SAAUw3I,KAUzC1N,YAAY74I,UAAUwmJ,qBAAuB,SAASpgG,EAAOH,GAE5D,GAA4B,MAAxB3lD,KAAKosD,MAAM2R,UACf,CACC,IAAI+hC,EAAK9/F,KAAKosD,MAAM2R,UAAU5J,YAC1B4rC,EAAK//F,KAAKosD,MAAM2R,UAAU7vB,aAI7BluC,KAAK4jE,OAAOh8C,MAAMk+B,MAFfg6C,EAAKh6C,EAEkBA,EAAQ,KAIR,OAK1B9lD,KAAK4jE,OAAOh8C,MAAM+9B,OAFfo6C,EAAKp6C,EAEmBA,EAAS,KAIT,SAU9B4yF,YAAY74I,UAAUqmJ,eAAiB,SAASjgG,EAAOH,GAEtD,IAAIwgG,EAAOlrI,SAAS9b,cAAc,OAgBlC,OAda,MAAT2mD,GAA2B,MAAVH,GAEpBwgG,EAAKv+H,MAAM44B,SAAW,WACtB2lG,EAAKv+H,MAAMknB,KAAO,MAClBq3G,EAAKv+H,MAAMonB,IAAM,MAEjBm3G,EAAKv+H,MAAMk+B,MAAQA,EACnBqgG,EAAKv+H,MAAM+9B,OAASA,GAIpBwgG,EAAKv+H,MAAM44B,SAAW,WAGhB2lG,GAQR5N,YAAY74I,UAAUqnG,UAAY,WAEjC,IAAIhpC,EAAY/9D,KAAKosD,MAAM2R,UAE3B,GAAiB,MAAbA,EACJ,CACC,IAAIjY,EAAQiY,EAAU5J,YAClBxO,EAASoY,EAAU7vB,aACvBluC,KAAK4jE,OAAS5jE,KAAKomJ,cAActgG,EAAOH,GACxC3lD,KAAK4jE,OAAOh8C,MAAMonC,SAAW,SAE7BhvD,KAAK2nI,eAAiB3nI,KAAKomJ,cAActgG,EAAOH,GAChD3lD,KAAKujE,SAAWvjE,KAAKomJ,cAActgG,EAAOH,GAC1C3lD,KAAKwjE,YAAcxjE,KAAKomJ,cAActgG,EAAOH,GAC7C3lD,KAAKqlJ,cAAgBrlJ,KAAKomJ,cAActgG,EAAOH,GAE/C3lD,KAAK4jE,OAAOlrC,YAAY14B,KAAK2nI,gBAC7B3nI,KAAK4jE,OAAOlrC,YAAY14B,KAAKujE,UAC7BvjE,KAAK4jE,OAAOlrC,YAAY14B,KAAKwjE,aAC7BxjE,KAAK4jE,OAAOlrC,YAAY14B,KAAKqlJ,eAE7BtnF,EAAUrlC,YAAY14B,KAAK4jE,UAS7B20E,YAAY74I,UAAU0mJ,cAAgB,SAAStgG,EAAOH,GAErD,IAAIwgG,EAAOlrI,SAAS9b,cAAcyhD,SAASS,WAAa,UAcxD,OAVA8kG,EAAKv+H,MAAM44B,SAAW,WACtB2lG,EAAKv+H,MAAMknB,KAAO,MAClBq3G,EAAKv+H,MAAMonB,IAAM,MAEjBm3G,EAAKv+H,MAAMk+B,MAAQA,EAAQ,KAC3BqgG,EAAKv+H,MAAM+9B,OAASA,EAAS,KAE7BwgG,EAAKjuH,aAAa,YAAa4tB,EAAQ,IAAMH,GAC7CwgG,EAAKjuH,aAAa,cAAe,OAE1BiuH,GAQR5N,YAAY74I,UAAUmnG,UAAY,WAEjC,IAAI9oC,EAAY/9D,KAAKosD,MAAM2R,UAC3B/9D,KAAK4jE,OAAS3oD,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAG3D3jE,KAAK2nI,eAAiB1sH,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KACnE3jE,KAAK4jE,OAAOlrC,YAAY14B,KAAK2nI,gBAG7B3nI,KAAKujE,SAAWtoD,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAC7D3jE,KAAK4jE,OAAOlrC,YAAY14B,KAAKujE,UAE7BvjE,KAAKwjE,YAAcvoD,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAChE3jE,KAAK4jE,OAAOlrC,YAAY14B,KAAKwjE,aAE7BxjE,KAAKqlJ,cAAgBpqI,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,KAClE3jE,KAAK4jE,OAAOlrC,YAAY14B,KAAKqlJ,eAE7B,IAAIrzD,EAAO/2E,SAASkd,gBAAgB0xB,YAAY8Z,OAAQ,OACxDquB,EAAKpqE,MAAMknB,KAAO,MAClBkjD,EAAKpqE,MAAMonB,IAAM,MACjBgjD,EAAKpqE,MAAMk+B,MAAQ,OACnBksC,EAAKpqE,MAAM+9B,OAAS,OAIpBqsC,EAAKpqE,MAAMikB,QAAU,QACrBmmD,EAAKt5D,YAAY14B,KAAK4jE,SAGlBhjB,SAASE,OAASF,SAASI,WAE9BgxC,EAAKpqE,MAAMonC,SAAW,UAGN,MAAb+O,IAEHA,EAAUrlC,YAAYs5D,GACtBhyF,KAAKgmJ,qBAAqBjoF,KAS5Bw6E,YAAY74I,UAAUsmJ,qBAAuB,SAASjoF,GAGrD,IAAIn2C,EAAQs+B,QAAQwI,gBAAgBqP,GAEvB,MAATn2C,GAAmC,UAAlBA,EAAM44B,WAE1Bud,EAAUn2C,MAAM44B,SAAW,YAIxBI,SAASiC,aAEZkb,EAAUn2C,MAAM2+D,YAAc,SAShCgyD,YAAY74I,UAAUgmB,QAAU,WAE/B,IAAIssE,EAAuB,MAAfhyF,KAAK4jE,OAAkB5jE,KAAK4jE,OAAOoC,gBAAkB,KAErD,MAARgsB,IAEHA,EAAOhyF,KAAK4jE,QAGD,MAARouB,GAAmC,MAAnBA,EAAKv7D,aAExBz2B,KAAKwQ,MAAMxQ,KAAK8+G,aAAa,GAC7Bt3D,QAAQgyB,uBAAuBv+D,SAAU,KAAMjb,KAAKo6I,YAAap6I,KAAK8lJ,YACtEt+F,QAAQ0yB,QAAQl6E,KAAKosD,MAAM2R,WAC3Bi0B,EAAKv7D,WAAWgC,YAAYu5D,GAE5BhyF,KAAKo6I,YAAc,KACnBp6I,KAAK8lJ,WAAa,KAClB9lJ,KAAK4jE,OAAS,KACd5jE,KAAK2nI,eAAiB,KACtB3nI,KAAKujE,SAAW,KAChBvjE,KAAKwjE,YAAc,KACnBxjE,KAAKqlJ,cAAgB,OA2CvB7M,oBAAoB94I,UAAU+zD,QAAU,WAEvC,IAAI9jC,EAAM3vB,KAAK29D,KAAKmhD,YACpB9+G,KAAK29D,KAAKmhD,YAAc9+G,KAAK8oD,SAC7B9oD,KAAK8oD,SAAWn5B,EAEhB,IAAIk0C,EAAY7jE,KAAK29D,KAAKvR,MAAMi6F,oBAAoBrmJ,KAAK29D,KAAKmhD,aAE7C,MAAbj7C,IAEH7jE,KAAK29D,KAAKkG,UAAY,IAAIlZ,SAASkZ,EAAU7kB,GAAI6kB,EAAUjZ,IAGxD5qD,KAAKy4I,MAERz4I,KAAK29D,KAAKntD,MAAMxQ,KAAK29D,KAAKmhD,aAAa,GACvC9+G,KAAK29D,KAAK0gF,YAIVr+I,KAAK29D,KAAK4/E,UAGX,IAAIz/I,EAAQkC,KAAS,KAAIwnD,QAAQq4B,GAAKr4B,QAAQs4B,KAC9C9/E,KAAK29D,KAAK8a,UAAU,IAAI9B,cAAc74E,EACrC,OAAQkC,KAAK29D,KAAKmhD,YAAa,WAAY9+G,KAAK8oD,WACjD9oD,KAAKy4I,MAAQz4I,KAAKy4I,MAGnB93F,WAAW43F,YAAqC,qBAAhBA,YAA8BA,iBAAch4I,EA8rBxEmjD,gBAEHD,YAAYj9C,IAAIo6C,SAASoD,SAAW,oBAIpCpD,SAASqC,eAAelyC,KAAK6vC,SAASoD,SAAW,oBAMlD00F,QAAQh5I,UAAY,IAAIo3E,cACxB4hE,QAAQh5I,UAAUqyB,YAAc2mH,QAWhCA,QAAQh5I,UAAUm5I,eAAiB,KAOnCH,QAAQh5I,UAAUksF,aAAc,EAOhC8sD,QAAQh5I,UAAU0mB,MAAQ,KAO1BsyH,QAAQh5I,UAAUi+D,KAAO,KAmBzB+6E,QAAQh5I,UAAUk5I,WAAa,KAO/BF,QAAQh5I,UAAU2kI,eAAiB,KAOnCqU,QAAQh5I,UAAU4mJ,WAAa,KAO/B5N,QAAQh5I,UAAU6tD,aAAe,KAQjCmrF,QAAQh5I,UAAUo5I,eAAiB,KAOnCJ,QAAQh5I,UAAUi5I,WAAa,KAQ/BD,QAAQh5I,UAAU+jE,QAAU,KAO5Bi1E,QAAQh5I,UAAUmtF,SAAW,GAQ7B6rD,QAAQh5I,UAAUuqF,aAAc,EAQhCyuD,QAAQh5I,UAAU6mJ,cAAe,EAOjC7N,QAAQh5I,UAAUgwI,uBAAwB,EAQ1CgJ,QAAQh5I,UAAU8mJ,kBAAmB,EAQrC9N,QAAQh5I,UAAU+mJ,iBAAmB,IAQrC/N,QAAQh5I,UAAUgnJ,mBAAqB,GAOvChO,QAAQh5I,UAAUinJ,WAAa,EAO/BjO,QAAQh5I,UAAUinJ,WAAa,EAO/BjO,QAAQh5I,UAAUknJ,cAAgB,EAQlClO,QAAQh5I,UAAUmnJ,mBAAoB,EAOtCnO,QAAQh5I,UAAUonJ,gBAAkB,IAOpCpO,QAAQh5I,UAAUqnJ,sBAAuB,EAQzCrO,QAAQh5I,UAAUsnJ,iBAAkB,EAOpCtO,QAAQh5I,UAAUunJ,cAAgB,EAOlCvO,QAAQh5I,UAAUwnJ,cAAgB,EAQlCxO,QAAQh5I,UAAUgzH,UAAY,EAU9BgmB,QAAQh5I,UAAUynJ,eAAiB,GAQnCzO,QAAQh5I,UAAU0nJ,cAAgB,KAQlC1O,QAAQh5I,UAAU2nJ,mBAAqB,KAgBvC3O,QAAQh5I,UAAU80F,gBAAkB,KAQpCkkD,QAAQh5I,UAAUqiJ,aAAc,EAShCrJ,QAAQh5I,UAAU4nJ,mBAAoB,EAOtC5O,QAAQh5I,UAAU6nJ,eAAiB,OAOnC7O,QAAQh5I,UAAU8nJ,iBAAkB,EAQpC9O,QAAQh5I,UAAU+nJ,iBAAmB,GASrC/O,QAAQh5I,UAAUgoJ,gBAAiB,EAUnChP,QAAQh5I,UAAU4kE,WAAaza,YAAY2a,wBAQ3Ck0E,QAAQh5I,UAAUikI,UAAY,IAO9B+U,QAAQh5I,UAAUgqF,SAAU,EAQ5BgvD,QAAQh5I,UAAUioJ,eAAgB,EAUlCjP,QAAQh5I,UAAUkoJ,wBAAyB,EAU3ClP,QAAQh5I,UAAUmoJ,uBAAwB,EAU1CnP,QAAQh5I,UAAUooJ,yBAA0B,EAO5CpP,QAAQh5I,UAAUqoJ,eAAgB,EAOlCrP,QAAQh5I,UAAUsoJ,eAAgB,EAOlCtP,QAAQh5I,UAAUuoJ,aAAc,EAOhCvP,QAAQh5I,UAAUwoJ,gBAAiB,EAQnCxP,QAAQh5I,UAAUswI,gBAAiB,EAOnC0I,QAAQh5I,UAAUyoJ,eAAgB,EAOlCzP,QAAQh5I,UAAU0oJ,gBAAiB,EAOnC1P,QAAQh5I,UAAU2oJ,cAAe,EAOjC3P,QAAQh5I,UAAU4oJ,mBAAoB,EAOtC5P,QAAQh5I,UAAU6oJ,qBAAsB,EAOxC7P,QAAQh5I,UAAU8oJ,aAAc,EAShC9P,QAAQh5I,UAAU+oJ,cAAe,EAOjC/P,QAAQh5I,UAAUgpJ,gBAAiB,EAOnChQ,QAAQh5I,UAAUipJ,eAAgB,EAOlCjQ,QAAQh5I,UAAUkpJ,iBAAkB,EAOpClQ,QAAQh5I,UAAUmpJ,qBAAsB,EAQxCnQ,QAAQh5I,UAAUopJ,eAAgB,EAOlCpQ,QAAQh5I,UAAUqpJ,oBAAqB,EAavCrQ,QAAQh5I,UAAU0sF,YAAa,EAU/BssD,QAAQh5I,UAAUspJ,kBAAmB,EAUrCtQ,QAAQh5I,UAAUupJ,2BAA4B,EAW9CvQ,QAAQh5I,UAAUwpJ,iBAAkB,EAUpCxQ,QAAQh5I,UAAUypJ,kBAAmB,EASrCzQ,QAAQh5I,UAAU4sF,YAAa,EAS/BosD,QAAQh5I,UAAU0pJ,mBAAqB,KAQvC1Q,QAAQh5I,UAAU2pJ,iBAAmB,KAQrC3Q,QAAQh5I,UAAU4pJ,qBAAuB,KAQzC5Q,QAAQh5I,UAAU6pJ,qBAAuB,KAQzC7Q,QAAQh5I,UAAU8pJ,iBAAkB,EAQpC9Q,QAAQh5I,UAAU6kE,OAAS,EAS3Bm0E,QAAQh5I,UAAUsjJ,uBAAwB,EAS1CtK,QAAQh5I,UAAUujJ,uBAAwB,EAO1CvK,QAAQh5I,UAAU+pJ,0BAA2B,EAQ7C/Q,QAAQh5I,UAAUgqJ,mBAAoB,EAStChR,QAAQh5I,UAAUiqJ,2BAA4B,EAQ9CjR,QAAQh5I,UAAUkqJ,eAAgB,EAQlClR,QAAQh5I,UAAUmqJ,oBAAqB,EAQvCnR,QAAQh5I,UAAUoqJ,qBAAsB,EAQxCpR,QAAQh5I,UAAUqqJ,iBAAkB,EAQpCrR,QAAQh5I,UAAUsqJ,yBAA0B,EAQ5CtR,QAAQh5I,UAAUuqJ,WAAa,IAQ/BvR,QAAQh5I,UAAUwqJ,4BAA6B,EAQ/CxR,QAAQh5I,UAAUyqJ,YAAa,EAQ/BzR,QAAQh5I,UAAU0qJ,uBAAwB,EAQ1C1R,QAAQh5I,UAAU2qJ,oBAAqB,EAQvC3R,QAAQh5I,UAAU4qJ,kBAAmB,EAQrC5R,QAAQh5I,UAAU6qJ,qBAAsB,EAOxC7R,QAAQh5I,UAAU8qJ,YAAa,EAQ/B9R,QAAQh5I,UAAUqkJ,iBAAmBnS,YAAYW,KAQjDmG,QAAQh5I,UAAU+qJ,YAAa,EAQ/B/R,QAAQh5I,UAAUgrJ,kBAAmB,EAQrChS,QAAQh5I,UAAUirJ,oBAAqB,EAQvCjS,QAAQh5I,UAAUkrJ,mBAAoB,EAQtClS,QAAQh5I,UAAUmrJ,kBAAmB,EAQrCnS,QAAQh5I,UAAUorJ,eAAgB,EAOlCpS,QAAQh5I,UAAUqrJ,YAAa,EAQ/BrS,QAAQh5I,UAAUsrJ,0BAA2B,EAO7CtS,QAAQh5I,UAAUurJ,iBAAkB,EAQpCvS,QAAQh5I,UAAUovI,gCAAkCjlF,YAAYqkB,gBAOhEwqE,QAAQh5I,UAAUq5I,aAAe,KAQjCL,QAAQh5I,UAAUwrJ,YAAc,GAQhCxS,QAAQh5I,UAAUyrJ,YAAc,EAOhCzS,QAAQh5I,UAAUwsF,MAAQ,EAO1BwsD,QAAQh5I,UAAUysF,MAAQ,EAQ1BusD,QAAQh5I,UAAU0rJ,eAAiB,IAAIlmE,QAAQtkC,SAASsD,cAAgB,iBAAkB,EAAG,GAQ7Fw0F,QAAQh5I,UAAU2rJ,cAAgB,IAAInmE,QAAQtkC,SAASsD,cAAgB,gBAAiB,EAAG,GAU3Fw0F,QAAQh5I,UAAU4rJ,aAAe,IAAIpmE,QAAQtkC,SAASsD,cAAgB,YACnEtD,SAAe,OAAI,OAAS,QAAS,GAAI,IAU5C83F,QAAQh5I,UAAU6rJ,yBAAiD,QAArB3qG,SAASwD,SAAsB,mBAAqB,GAUlGs0F,QAAQh5I,UAAU8rJ,iCAAyD,QAArB5qG,SAASwD,SAAsB,2BAA6B,GASlHs0F,QAAQh5I,UAAU+rJ,uBAA+C,QAArB7qG,SAASwD,SAAsB,kBAAoB,GAW/Fs0F,QAAQh5I,UAAUglB,KAAO,SAASq5C,GAEjC/9D,KAAK+9D,UAAYA,EAGjB/9D,KAAKsmJ,WAAatmJ,KAAK0rJ,mBAGvB1rJ,KAAK29D,KAAKj5C,OAGV1kB,KAAK+gJ,gBAGLv5F,QAAQD,YAAYwW,EAAW,aAAc7X,QAAQ1jD,KAAKxC,MAAM,WAEpC,MAAvBA,KAAK2sI,gBAER3sI,KAAK2sI,eAAejmD,WAKlB9lC,SAASE,QAEZ0G,QAAQD,YAAY94C,OAAQ,SAAUy3C,QAAQ1jD,KAAKxC,MAAM,WAExDA,KAAK0lB,cAIN8hC,QAAQD,YAAYwW,EAAW,cAC9B7X,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3B,OAAOhmD,KAAKykI,cAAiBzkI,KAAK4rF,cAAgBpkC,QAAQi0B,YAAYz1B,QAO5C,GAAzB/qC,SAASkmC,cAEZ4c,EAAU4pC,mBAAmB,YAAa,IAAM/mD,SAASS,WAAa,mCACtCT,SAASS,WAAa,YAUxDq3F,QAAQh5I,UAAU65I,eAAiB,WAElCv5I,KAAK2sI,eAAiB3sI,KAAK2rJ,uBAC3B3rJ,KAAK2sI,eAAetiD,YAAW,GAC/BrqF,KAAKwxI,sBAAwBxxI,KAAK4rJ,8BAClC5rJ,KAAK6rJ,kBAAoB7rJ,KAAK8rJ,0BAC9B9rJ,KAAK6rJ,kBAAkBxhE,YAAW,GAClCrqF,KAAK+rF,aAAe/rF,KAAK+rJ,qBACzB/rJ,KAAKgsJ,eAAiBhsJ,KAAKisJ,uBAC3BjsJ,KAAKgsJ,eAAeE,gBAAiB,EACrClsJ,KAAK6lJ,iBAAmB7lJ,KAAKmsJ,0BAQ9BzT,QAAQh5I,UAAUisJ,qBAAuB,WAExC,OAAO,IAAI1M,iBAAiBj/I,OAQ7B04I,QAAQh5I,UAAUksJ,4BAA8B,WAE/C,OAAO,IAAItO,wBAAwBt9I,OAQpC04I,QAAQh5I,UAAUosJ,wBAA0B,WAE3C,OAAO,IAAIrO,oBAAoBz9I,OAQhC04I,QAAQh5I,UAAUqsJ,mBAAqB,WAEtC,OAAO,IAAIlQ,eAAe77I,OAQ3B04I,QAAQh5I,UAAUusJ,qBAAuB,WAExC,OAAO,IAAI1P,iBAAiBv8I,OAQ7B04I,QAAQh5I,UAAUysJ,uBAAyB,WAE1C,OAAO,IAAIlP,mBAAmBj9I,OAQ/B04I,QAAQh5I,UAAUw5I,qBAAuB,WAExC,OAAO,IAAI/U,sBAAsBnkI,OAQlC04I,QAAQh5I,UAAU05I,iBAAmB,WAEpC,OAAO,IAAIxV,cAQZ8U,QAAQh5I,UAAU25I,gBAAkB,WAEnC,OAAO,IAAId,YAAYv4I,OAQxB04I,QAAQh5I,UAAUs5I,mBAAqB,WAEtC,OAAO,IAAIpU,gBAQZ8T,QAAQh5I,UAAUgsJ,iBAAmB,WAEpC,OAAO,IAAInnB,aAAavkI,OAQzB04I,QAAQh5I,UAAUwjE,SAAW,WAE5B,OAAOljE,KAAKomB,OAQbsyH,QAAQh5I,UAAUotD,QAAU,WAE3B,OAAO9sD,KAAK29D,MAQb+6E,QAAQh5I,UAAU0sJ,cAAgB,WAEjC,OAAOpsJ,KAAK44I,YAQbF,QAAQh5I,UAAUy5I,cAAgB,SAASP,GAE1C54I,KAAK44I,WAAaA,GAQnBF,QAAQh5I,UAAU89I,kBAAoB,WAErC,OAAOx9I,KAAKqkI,gBAQbqU,QAAQh5I,UAAUu5I,kBAAoB,SAAS5U,GAE9CrkI,KAAKqkI,eAAiBA,GAQvBqU,QAAQh5I,UAAU2sJ,4BAA8B,SAAShgG,GA0BxD,IAxBA,IAAI+J,EAAO,IAAIxN,aACXwX,EAAQ,GAER6pE,EAAU/jF,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEzC,IAAKoJ,EAAK/2D,IAAI2tD,IAAShtD,KAAKomB,MAAM22C,SAAS/P,GAE1C,GAAIhtD,KAAKomB,MAAMjX,OAAO69C,IAAShtD,KAAKomB,MAAMuvE,SAAS3oC,GAElDoJ,EAAKvN,IAAImE,GAAM,GACfoT,EAAMrvD,KAAKi8C,QAMX,IAFA,IAAIW,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/B+gI,EAAQjqI,KAAKomB,MAAMynC,WAAWb,EAAM9jD,OAM/BA,EAAI,EAAGA,EAAImjD,EAAQzrD,OAAQsI,IACpC,CACC,IAAI63B,EAASsrB,EAAQnjD,GAErB,GAAI63B,EAAOhP,aAAesmG,aAC1B,CACC,IAAIrrE,EAAO,KAEPjsB,aAAkB6rB,cAErBI,EAAOjsB,EAAOhuB,MAES,MAAfguB,EAAOisB,MAAgBjsB,EAAOisB,gBAAgB2rE,SAEtD3rE,EAAOjsB,EAAOisB,MAGH,MAARA,GAEHi9E,EAAQj9E,IAKX,OAAOoT,GAaRs4E,QAAQh5I,UAAUwxF,kBAAoB,SAAS7kC,GAE9C,IAAK,IAAInjD,EAAI,EAAGA,EAAImjD,EAAQzrD,OAAQsI,IAEnClJ,KAAKssJ,cAAcjgG,EAAQnjD,IAG5BlJ,KAAKusJ,kBACLvsJ,KAAK29D,KAAK0gF,WACVr+I,KAAK+gJ,iBAQNrI,QAAQh5I,UAAU6sJ,gBAAkB,WAKnC,IAHA,IAAInsF,EAAQpgE,KAAK6jF,oBACbt2C,EAAU,GAELrkC,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAKlJ,KAAKomB,MAAM22C,SAASqD,EAAMl3D,KAAQlJ,KAAK28G,cAAcv8C,EAAMl3D,IAKhE,CACC,IAAI20H,EAAM79H,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IAErC,MAAc,MAAP20H,GAAeA,GAAO79H,KAAK29D,KAAKmhD,YACvC,CACC,GAAI9+G,KAAKy/G,gBAAgBoe,KAAS79H,KAAK28G,cAAckhB,GACrD,CACCtwF,EAAQx8B,KAAKqvD,EAAMl3D,IACnB,MAGD20H,EAAM79H,KAAKomB,MAAM2vE,UAAU8nC,SAd5BtwF,EAAQx8B,KAAKqvD,EAAMl3D,IAmBrBlJ,KAAKwsJ,qBAAqBj/G,IAc3BmrG,QAAQh5I,UAAU4sJ,cAAgB,SAASvrH,GAI1C,GAAIA,aAAkBs3F,aAErBr4H,KAAK+wD,iBACL/wD,KAAKysJ,iBAAiB,MACtBzsJ,KAAK0sJ,mBAAmB3rH,EAAO+nB,UAE3B9oD,KAAKoqJ,wBAERpqJ,KAAK29D,KAAKxQ,MAAQ,EAClBntD,KAAK29D,KAAKkG,UAAU7kB,EAAI,EACxBh/C,KAAK29D,KAAKkG,UAAUjZ,EAAI,GAGzB5qD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ62B,YAMrC,GAAIt9C,aAAkB6rB,cAC3B,CACC,IAAI+/F,EAAY3sJ,KAAKomB,MAAM2vE,UAAUh1D,EAAOhuB,OAC5C/S,KAAK29D,KAAKygF,WAAWr9G,EAAOhuB,OAAO,GAAM,GAEpC/S,KAAKomB,MAAM22C,SAAS4vF,KAAc3sJ,KAAKy/G,gBAAgBktC,KAE3D3sJ,KAAK29D,KAAKygF,WAAWr9G,EAAOhuB,OAAO,GAAM,GACzC/S,KAAK0sJ,mBAAmB3rH,EAAOhuB,OAG3B/S,KAAK29D,KAAKmhD,aAAe/9E,EAAOhuB,OAEnC/S,KAAK4sJ,QAIHD,GAAa5rH,EAAO+nB,WAGN,MAAb6jG,GAEH3sJ,KAAK29D,KAAKygF,WAAWuO,GAAW,GAAO,GAGjB,MAAnB5rH,EAAO+nB,UAEV9oD,KAAK29D,KAAKygF,WAAWr9G,EAAO+nB,UAAU,GAAO,SAO3C,GAAI/nB,aAAkB2rB,kBAAoB3rB,aAAkB0rB,kBAG5D1rB,aAAkB2rB,kBAAyC,MAAnB3rB,EAAO+nB,UAAuC,MAAnB/nB,EAAOqsB,UACzD,MAAnBrsB,EAAO+nB,WAAqB/nB,EAAO+nB,SAASgC,OAAO/pB,EAAOqsB,YAE3DptD,KAAK29D,KAAKygF,WAAWr9G,EAAOisB,WAMzB,GAAIjsB,aAAkB4rB,cAE1B3sD,KAAK29D,KAAKygF,WAAWr9G,EAAOisB,MAAM,GAAO,QAIrC,GAAIjsB,aAAkB8rB,cAC3B,CACC7sD,KAAK29D,KAAKygF,WAAWr9G,EAAOisB,MAAM,GAAM,GACxC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAAShsB,EAAOisB,MAEzB,MAATlc,IAEHA,EAAM03F,cAAe,QAKC,MAAfznG,EAAOisB,MAAgBjsB,EAAOisB,gBAAgB2rE,QAEtD34H,KAAK0sJ,mBAAmB3rH,EAAOisB,OAcjC0rF,QAAQh5I,UAAUgtJ,mBAAqB,SAAS1/F,GAI/C,IAFA,IAAIW,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAK0sJ,mBAAmB1sJ,KAAKomB,MAAMynC,WAAWb,EAAM9jD,IAGrDlJ,KAAK29D,KAAKygF,WAAWpxF,GAAM,GAAO,GAClChtD,KAAK29D,KAAKyjF,YAAYp0F,IAkBvB0rF,QAAQh5I,UAAUmtJ,eAAiB,SAAS7/F,EAAM04E,GAE5B,MAAjB14E,EAAKmqC,WAERnqC,EAAKmqC,SAAW,IAGjBnqC,EAAKmqC,SAASpmF,KAAK20H,GAEnB,IAAI50F,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAW/B,OARa,MAATlc,GAEH9wC,KAAKutD,aAAaC,OAAO1c,GAG1B9wC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo6B,YACvC,OAAQ50B,EAAM,UAAW04E,IAEpBA,GAaRgT,QAAQh5I,UAAUkwI,gBAAkB,SAAS5iF,GAE5C,OAAOA,EAAKmqC,UAebuhD,QAAQh5I,UAAUotJ,kBAAoB,SAAS9/F,EAAM04E,GAEpD,GAAe,MAAXA,EAEH1lI,KAAK+sJ,mBAAmB//F,OAGzB,CACC,IAAI5pD,EAAQ8iD,QAAQ18C,QAAQwjD,EAAKmqC,SAAUuuC,GAE3C,GAAItiI,GAAS,EACb,CACC4pD,EAAKmqC,SAAS1tF,OAAOrG,EAAO,GAEA,GAAxB4pD,EAAKmqC,SAASv2F,SAEjBosD,EAAKmqC,SAAW,MAIjB,IAAIrmD,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAElB,MAATlc,GAEH9wC,KAAKutD,aAAaC,OAAO1c,GAG1B9wC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq6B,eACvC,OAAQ70B,EAAM,UAAW04E,SAI3BA,EAAU,KAIZ,OAAOA,GAcRgT,QAAQh5I,UAAUqtJ,mBAAqB,SAAS//F,GAE/C,IAAImqC,EAAWnqC,EAAKmqC,SAEpB,GAAgB,MAAZA,EACJ,CACCnqC,EAAKmqC,SAAW,KAGhB,IAAIrmD,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAElB,MAATlc,GAEH9wC,KAAKutD,aAAaC,OAAO1c,GAG1B,IAAK,IAAI5nC,EAAI,EAAGA,EAAIiuF,EAASv2F,OAAQsI,IAEpClJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq6B,eACvC,OAAQ70B,EAAM,UAAWmqC,EAASjuF,KAItC,OAAOiuF,GAgBRuhD,QAAQh5I,UAAUstJ,kBAAoB,SAAShgG,GAE9CA,EAAgB,MAARA,EAAgBA,EAAOhtD,KAAKomB,MAAM+8C,UAC1CnjE,KAAK+sJ,mBAAmB//F,GAKxB,IAFA,IAAIW,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAKomB,MAAMynC,WAAWb,EAAM9jD,GACxClJ,KAAKgtJ,kBAAkBj6I,KA4BzB2lI,QAAQh5I,UAAUutJ,eAAiB,SAASjgG,EAAMkgG,EAASvmF,EAAKwmF,GAE/D,GAAe,MAAXD,GAAmBA,EAAQtsJ,OAAS,EACxC,CACC+lE,EAAc,MAAPA,EAAeA,EAAM3mE,KAAKsrJ,aAGjC,IAAI5lB,EAAU,IAAI+T,cAAc9yE,EAC/B,mBAAmBumF,EAAQ,WAiB5B,OAdIC,GAEHznB,EAAQn+E,YAAYC,QAAQi4B,MAC3Bv5B,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAE/BhmD,KAAKmuD,aAERnuD,KAAKotJ,iBAAiBpgG,OAOnBhtD,KAAK6sJ,eAAe7/F,EAAM04E,GAOlC,OAHC1lI,KAAK+sJ,mBAAmB//F,GAGlB,MAiBR0rF,QAAQh5I,UAAUgtI,aAAe,SAAS1mF,GAEzChmD,KAAKqtJ,mBAAmB,KAAMrnG,IAe/B0yF,QAAQh5I,UAAU2tJ,mBAAqB,SAASrgG,EAAMhH,GAE1C,MAAPA,GAAgBwB,QAAQwzB,kBAAkBh1B,KAEjC,MAARgH,IAEHA,EAAOhtD,KAAKstJ,mBAEA,MAARtgG,GAAiBhtD,KAAKutJ,eAAevgG,KAExCA,EAAO,OAIG,MAARA,IAEHhtD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQi6B,cACvC,OAAQz0B,EAAM,QAAShH,IACzBhmD,KAAKsmJ,WAAW5Z,aAAa1/E,EAAMhH,GACnChmD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQk6B,gBACvC,OAAQ10B,EAAM,QAAShH,OAkB5B0yF,QAAQh5I,UAAUyrI,gBAAkB,SAASn+E,EAAMhH,GAElD,OAAOhmD,KAAKwtJ,qBAAqBxgG,IAalC0rF,QAAQh5I,UAAUilI,YAAc,SAASwI,GAExCntI,KAAKsmJ,WAAW3hB,YAAYwI,GAC5BntI,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm6B,gBAAiB,SAAUwrD,KAgBrEuL,QAAQh5I,UAAUsrI,aAAe,SAASh+E,EAAM1vD,EAAO0oD,GAEtDhmD,KAAKomB,MAAMk7C,cACX,IAEC,IAAI5kD,EAAMswC,EAAK1vD,MACf0C,KAAKytJ,iBAAiBzgG,EAAM1vD,EAAO0C,KAAK0tJ,eAAe1gG,IACvDhtD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ45B,cACxC,OAAQp0B,EAAM,QAAS1vD,EAAO,MAAOof,EAAK,QAASspC,IAErD,QAEChmD,KAAKomB,MAAMo7C,YAGZ,OAAOxU,GAkCR0rF,QAAQh5I,UAAU+tJ,iBAAmB,SAASzgG,EAAM1vD,EAAO8sI,GAE1DpqI,KAAKomB,MAAMk7C,cACX,IAECthE,KAAKomB,MAAMi5G,SAASryE,EAAM1vD,GAEtB8sI,GAEHpqI,KAAK2tJ,gBAAgB3gG,GAAM,GAG7B,QAEChtD,KAAKomB,MAAMo7C,cAiBbk3E,QAAQh5I,UAAU4/I,OAAS,SAASt5F,GAEnChmD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu6B,OAAQ,QAAS/7B,KAiC3D0yF,QAAQh5I,UAAUkuJ,MAAQ,SAASjoE,GAElC,IAAI3/B,EAAM2/B,EAAGlO,WACTzqB,EAAO24B,EAAGzN,UACV21E,EAAM,IAAIl3E,cAAcnvB,QAAQi4B,MAAO,QAASz5B,EAAK,OAAQgH,GAUjE,GARI24B,EAAGtO,cAENw2E,EAAIv2E,UAGLt3E,KAAKy4E,UAAUo1E,GAGX7tJ,KAAKmuD,cAAgB3G,QAAQ6vB,WAAWrxB,KAAS6nG,EAAIx2E,aAExD,GAAY,MAARrqB,EACJ,CACC,GAAIhtD,KAAK8tJ,wBAAwB9nG,GACjC,CACC,IAAI72B,GAAS,EAETQ,EAAM3vB,KAAKyqF,UAAU9E,EAAGpO,OAAQoO,EAAGnO,OAAQ,KAAM,KAAM,KAAMtxB,QAAQ1jD,KAAKxC,MAAM,SAAS8wC,GAE5F,IAAIjZ,EAAW73B,KAAK+tJ,eAAej9G,EAAMkc,MAGzC,OAFA79B,EAASA,GAAU0I,GAEX1I,GAAU0I,MAGR,MAAPlI,IAEHq9B,EAAOr9B,GAIT3vB,KAAKguJ,mBAAmBhhG,EAAMhH,OAG/B,CACC,IAAIioG,EAAW,KAEXjuJ,KAAKkuJ,+BAIRD,EAAWjuJ,KAAKmuJ,cAAcxoE,EAAG3N,YAAa2N,EAAG1N,cAIlC,MAAZg2E,EAEHjuJ,KAAKguJ,mBAAmBC,EAAUjoG,GAIzBhmD,KAAKouJ,cAAcpoG,IAE5BhmD,KAAK+wD,mBA8CT2nF,QAAQh5I,UAAUm6E,SAAW,SAAS7zB,EAAKgH,GAE1C,IAAI6gG,EAAM,IAAIl3E,cAAcnvB,QAAQw6B,aAAc,QAASh8B,EAAK,OAAQgH,GACxEhtD,KAAKy4E,UAAUo1E,IAGX7tJ,KAAKmuD,aAAgB3G,QAAQ6vB,WAAWrxB,IAAS6nG,EAAIx2E,cAChD,MAARrqB,IAAgBhtD,KAAKutJ,eAAevgG,IAAUhtD,KAAKykI,UAAUz3E,KAE7DhtD,KAAKqtJ,mBAAmBrgG,EAAMhH,GAC9BwB,QAAQ8vB,QAAQtxB,KAclB0yF,QAAQh5I,UAAU2uJ,WAAa,SAAS1oE,GAEvC,IAAI3/B,EAAM2/B,EAAGlO,WACTo2E,EAAM,IAAIl3E,cAAcnvB,QAAQq2B,aAAc,QAAS73B,EAAK,OAAQ2/B,EAAGzN,WAY3E,GATAl4E,KAAKy4E,UAAUo1E,GAEXA,EAAIx2E,eAGPr3E,KAAKgsJ,eAAesC,gBAAiB,GAIlCtuJ,KAAKmuD,cAAgB3G,QAAQ6vB,WAAWrxB,KAAS6nG,EAAIx2E,cAAgBr3E,KAAK6rJ,kBAAkB19F,YAChG,CACC,IAAIrd,EAAQ9wC,KAAK29D,KAAK5Q,SAAS/sD,KAAK6rJ,kBAAkB0C,OAAOr2E,QAAQyN,IAExD,MAAT70C,IAEH9wC,KAAK6rJ,kBAAkB0C,OAAOC,aAAexuJ,KAAK6rJ,kBAAkB0C,OAAOnR,WAC3Ep9I,KAAK6rJ,kBAAkB0C,OAAOE,YAAc39G,EAC5C9wC,KAAK6rJ,kBAAkB0C,OAAOG,OAE9B1uJ,KAAK6rJ,kBAAkBvrG,MAAQ,IAAIqK,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aAC9Dj4E,KAAK6rJ,kBAAkB59F,UAAYjuD,KAAK6rJ,kBAAkB8C,gBAAgBhpE,GAC1E3lF,KAAK6rJ,kBAAkB/iG,SAAWhY,EAClC9wC,KAAK6rJ,kBAAkBpzE,UAAU,IAAI9B,cAAcnvB,QAAQy6B,MAAO,QAASjiF,KAAK6rJ,kBAAkB/iG,cAWrG4vF,QAAQh5I,UAAU2sF,qBAAuB,SAASrtC,EAAG4L,EAAGz/C,EAAQo5D,GAE/D,GAAKvkE,KAAKkpJ,kBAAoBlpJ,KAAKgpJ,mBAAoB9iG,QAAQ6I,cAAc/uD,KAAK+9D,WAwFzE/9D,KAAKmpJ,mBAAqBnpJ,KAAKgsJ,eAAethE,aAE3B,MAAvB1qF,KAAK4uJ,iBAER5uJ,KAAK4uJ,eAAiB5uJ,KAAK6uJ,wBAG5B7uJ,KAAK4uJ,eAAel+D,MAAM1xC,EAAIh/C,KAAKksF,MAAOthC,EAAI5qD,KAAKmsF,YA9FpD,CACC,IAAIrrF,EAAId,KAAK+9D,UAGb,GAFAwG,EAAoB,MAAVA,EAAkBA,EAAS,GAEjCvlB,GAAKl+C,EAAEq9D,YAAcvT,GAAK9pD,EAAEwnD,WAAatJ,GAAKl+C,EAAEq9D,WAAar9D,EAAE8lD,aAClEgE,GAAK9pD,EAAEwnD,UAAYxnD,EAAE6lD,aACtB,CACC,IAAI9X,EAAK/tC,EAAEq9D,WAAar9D,EAAE8lD,YAAc5H,EAExC,GAAInQ,EAAK01B,EACT,CACC,IAAI7nD,EAAM5b,EAAEq9D,WAMZ,GALAr9D,EAAEq9D,YAAcoG,EAAS11B,EAKrB1jC,GAAUuR,GAAO5b,EAAEq9D,WACvB,CACC,GAAIn+D,KAAKyjE,SAAW5Z,YAAY6Z,YAChC,CACC,IAAIsuB,EAAOhyF,KAAK29D,KAAKgoE,cAAc3/D,gBAC/BlgB,EAAQ9lD,KAAK+9D,UAAU8nC,YAActhC,EAAS11B,EAIlDmjD,EAAKpqE,MAAMk+B,MAAQA,EAAQ,SAG5B,CACKA,EAAQ5lD,KAAKwD,IAAI5C,EAAE8lD,YAAa9lD,EAAE+kG,aAAethC,EAAS11B,EAA9D,IACI+0B,EAAS5jE,KAAK29D,KAAK+pE,YACvB9jE,EAAOh8C,MAAMk+B,MAAQA,EAAQ,KAG9BhlD,EAAEq9D,YAAcoG,EAAS11B,QAK1BA,EAAKmQ,EAAIl+C,EAAEq9D,WAEPtvB,EAAK01B,IAERzjE,EAAEq9D,YAAcoG,EAAS11B,GAI3B,IAAIE,EAAKjuC,EAAEwnD,UAAYxnD,EAAE6lD,aAAeiE,EAExC,GAAI7b,EAAKw1B,EACT,CACK7nD,EAAM5b,EAAEwnD,UAGZ,GAFAxnD,EAAEwnD,WAAaic,EAASx1B,EAEpBryB,GAAO5b,EAAEwnD,WAAan9C,EAC1B,CACC,GAAInL,KAAKyjE,SAAW5Z,YAAY6Z,YAChC,CACKsuB,EAAOhyF,KAAK29D,KAAKgoE,cAAc3/D,gBAAnC,IACIrgB,EAAS3lD,KAAK+9D,UAAUxV,aAAegc,EAASx1B,EAIpDijD,EAAKpqE,MAAM+9B,OAASA,EAAS,SAG9B,CACKA,EAASzlD,KAAKwD,IAAI5C,EAAE6lD,aAAc7lD,EAAEynD,cAAgBgc,EAASx1B,EAC7D60B,EAAS5jE,KAAK29D,KAAK+pE,YACvB9jE,EAAOh8C,MAAM+9B,OAASA,EAAS,KAGhC7kD,EAAEwnD,WAAaic,EAASx1B,QAKzBA,EAAK6b,EAAI9pD,EAAEwnD,UAEPvZ,EAAKw1B,IAERzjE,EAAEwnD,WAAaic,EAASx1B,MAsB7B2pG,QAAQh5I,UAAUmvJ,qBAAuB,WAExC,OAAO,IAAIl/D,iBAAiB3vF,OAU7B04I,QAAQh5I,UAAUovJ,eAAiB,WAElC,IAAInqH,EAAMuhB,QAAQwI,gBAAgB1uD,KAAK+9D,WAEvC,OAAO,IAAIlT,YAAY3E,QAAQ0I,eAAejqB,EAAImvB,cACvB,QAAvBnvB,EAAIoqH,gBAA6B7oG,QAAQ0I,eAAejqB,EAAIqqH,iBAAmB,GAClF9oG,QAAQ0I,eAAejqB,EAAIsqH,aACF,QAAtBtqH,EAAIuqH,eAA4BhpG,QAAQ0I,eAAejqB,EAAIwqH,gBAAkB,GAChFjpG,QAAQ0I,eAAejqB,EAAImvD,eACA,QAAxBnvD,EAAIyqH,iBAA8BlpG,QAAQ0I,eAAejqB,EAAI0qH,kBAAoB,GACpFnpG,QAAQ0I,eAAejqB,EAAI2qH,gBACC,QAAzB3qH,EAAI4qH,kBAA+BrpG,QAAQ0I,eAAejqB,EAAI6qH,mBAAqB,KAQxF9W,QAAQh5I,UAAU+vJ,qBAAuB,SAAS3yF,EAAQhX,EAAOH,GAEpD3lD,KAAK29D,KAAKxQ,MAAtB,IACI5H,EAAKvlD,KAAK29D,KAAKkG,UACfg1C,EAAM74G,KAAKskE,WACX4oC,EAAKltG,KAAK2jI,UACV+rB,EAAO,IAAI7kG,YAAY,EAAG,EAAG3qD,KAAKD,KAAK44G,EAAI/yD,MAAQonD,GAAKhtG,KAAKD,KAAK44G,EAAIlzD,OAASunD,IAE/EyiD,EAAU3vJ,KAAsB,kBAAIE,KAAKD,KAAK6lD,EAAQ4pG,EAAK5pG,OAAS,EACpE8pG,EAAU5vJ,KAAsB,kBAAIE,KAAKD,KAAK0lD,EAAS+pG,EAAK/pG,QAAU,EAE1E,OAAO,IAAIkF,YAAY,EAAG,EAAG8kG,EAASD,EAAK5pG,MAAQ,EAAIP,EAAGvG,EAAG4wG,EAASF,EAAK/pG,OAAS,EAAIJ,EAAGqF,IAiD5F8tF,QAAQh5I,UAAUs0D,IAAM,SAASuQ,EAAQsrF,EAAYtsD,EAAQ7Z,EAASomE,EAAaC,EAAcnwD,GAEhG,GAAsB,MAAlB5/F,KAAK+9D,UACT,CACCwG,EAAoB,MAAVA,EAAkBA,EAASvkE,KAAKgwJ,YAC1CH,EAA4B,MAAdA,GAAsBA,EACpCtsD,EAAoB,MAAVA,EAAkBA,EAAS,EACrC7Z,EAAsB,MAAXA,GAAmBA,EAC9BomE,EAA8B,MAAfA,GAAuBA,EACtCC,EAAgC,MAAhBA,GAAwBA,EAGxC,IAAIE,EAAYjwJ,KAAK8uJ,iBACjBoB,EAAKlwJ,KAAK+9D,UAAU5J,YAAc87F,EAAUjxG,EAAIixG,EAAUnqG,MAAQ,EAClEqqG,EAAmB,MAAbvwD,EAAqBA,EAAY5/F,KAAK+9D,UAAU7vB,aAAe+hH,EAAUrlG,EAAIqlG,EAAUtqG,OAAS,EACtGmX,EAAS98D,KAAK29D,KAAKiH,iBAEvB,GAAI9H,EAAOhX,MAAQ,GAAKgX,EAAOnX,OAAS,EACxC,CACKkqG,GAA0B,MAAZ/yF,EAAO9d,GAAyB,MAAZ8d,EAAOlS,IAE5CkS,EAASA,EAAOt4C,QAChBs4C,EAAOhX,OAASgX,EAAO9d,EACvB8d,EAAOnX,QAAUmX,EAAOlS,EACxBkS,EAAO9d,EAAI,EACX8d,EAAOlS,EAAI,GAIZ,IAAIpjB,EAAIxnC,KAAK29D,KAAKxQ,MACdijG,EAAKtzF,EAAOhX,MAAQte,EACpB6oH,EAAKvzF,EAAOnX,OAASne,EAGG,MAAxBxnC,KAAKw0F,kBAER47D,EAAKlwJ,KAAKwD,IAAI0sJ,EAAIpwJ,KAAKw0F,gBAAgB1uC,MAAQgX,EAAO9d,EAAIxX,GAC1D6oH,EAAKnwJ,KAAKwD,IAAI2sJ,EAAIrwJ,KAAKw0F,gBAAgB7uC,OAASmX,EAAOlS,EAAIpjB,IAG5D,IAAI3mC,GAAK,EAAe0jE,EAAS,EAAIA,GAAUg/B,EAAS,EAExD2sD,GAAMrvJ,EACNsvJ,GAAMtvJ,EAEN,IAAIyvJ,EAAO,EAAgBH,EAAKE,EAAK,EAAiBH,EAAKE,EAC1DlwJ,KAAKyD,IAAIusJ,EAAKE,EAAID,EAAKE,GAYxB,GAVwB,MAApBrwJ,KAAKkrJ,cAERoF,EAAKpwJ,KAAKwD,IAAI4sJ,EAAItwJ,KAAKkrJ,cAGA,MAApBlrJ,KAAKmrJ,cAERmF,EAAKpwJ,KAAKyD,IAAI2sJ,EAAItwJ,KAAKmrJ,eAGpBzhE,EAkCH,OAAO4mE,EAhCP,GAAKT,EAyBI7vJ,KAAK29D,KAAKxQ,OAASmjG,GAE3BtwJ,KAAK29D,KAAK69E,SAAS8U,QAzBnB,GAAKpqG,QAAQ6I,cAAc/uD,KAAK+9D,WAQhC,CACC/9D,KAAK29D,KAAK69E,SAAS8U,GACnB,IAAI3kG,EAAK3rD,KAAK4kE,iBAEF,MAARjZ,EAAG3M,IAENh/C,KAAK+9D,UAAUI,WAAaxS,EAAG3M,GAGpB,MAAR2M,EAAGf,IAEN5qD,KAAK+9D,UAAUzV,UAAYqD,EAAGf,OAlBhC,CACC,IAAIiM,EAAkB,MAAZiG,EAAO9d,EAAa9+C,KAAKC,MAAMH,KAAK29D,KAAKkG,UAAU7kB,EAAI8d,EAAO9d,EAAIxX,EAAI+8B,EAAS+rF,EAAK/sD,EAAS,GAAKh/B,EACxGzN,EAAkB,MAAZgG,EAAOlS,EAAa1qD,KAAKC,MAAMH,KAAK29D,KAAKkG,UAAUjZ,EAAIkS,EAAOlS,EAAIpjB,EAAI+8B,EAAS+rF,EAAK/sD,EAAS,GAAKh/B,EAE5GvkE,KAAK29D,KAAKqjF,kBAAkBsP,EAAIz5F,EAAIC,KA8BzC,OAAO92D,KAAK29D,KAAKxQ,OAUlBurF,QAAQh5I,UAAUqhJ,cAAgB,WAEjC,IAAIjkF,EAAS98D,KAAK4kE,iBAElB,GAAsB,MAAlB5kE,KAAK+9D,UACT,CACC,IAAIwG,EAASvkE,KAAKgwJ,YAEdlqG,EAAQ5lD,KAAKwD,IAAI,EAAGo5D,EAAO9d,EAAI8d,EAAOhX,MAAQye,GAC9C5e,EAASzlD,KAAKwD,IAAI,EAAGo5D,EAAOlS,EAAIkS,EAAOnX,OAAS4e,GAapD,GAXiC,MAA7BvkE,KAAKspJ,uBAERxjG,EAAQ5lD,KAAKwD,IAAIoiD,EAAO9lD,KAAKspJ,qBAAqBxjG,OAClDH,EAASzlD,KAAKwD,IAAIiiD,EAAQ3lD,KAAKspJ,qBAAqB3jG,SAGjD3lD,KAAKwpJ,iBAERxpJ,KAAKuwJ,kBAAkBzqG,EAAOH,GAG3B3lD,KAAK0nJ,iBAAoB9mG,SAASE,OAAS9gD,KAAK+hJ,YACpD,CACC,IAAIthG,EAAOzgD,KAAKyvJ,qBAAqB3yF,EAAQ58D,KAAKwD,IAAI,EAAGoiD,GAAQ5lD,KAAKwD,IAAI,EAAGiiD,IAEjE,MAARlF,IAEHqF,EAAQrF,EAAKqF,MAAQ9lD,KAAK29D,KAAKxQ,MAC/BxH,EAASlF,EAAKkF,OAAS3lD,KAAK29D,KAAKxQ,OAanC,GAT6B,MAAzBntD,KAAKqpJ,mBAERvjG,EAAQ5lD,KAAKwD,IAAIoiD,EAAO9lD,KAAKqpJ,iBAAiBvjG,MAAQ9lD,KAAK29D,KAAKxQ,OAChExH,EAASzlD,KAAKwD,IAAIiiD,EAAQ3lD,KAAKqpJ,iBAAiB1jG,OAAS3lD,KAAK29D,KAAKxQ,QAGpErH,EAAQ5lD,KAAKD,KAAK6lD,GAClBH,EAASzlD,KAAKD,KAAK0lD,GAEf3lD,KAAKyjE,SAAW5Z,YAAY6Z,YAChC,CACC,IAAIsuB,EAAOhyF,KAAK29D,KAAKgoE,cAAc3/D,gBAEvB,MAARgsB,IAEHA,EAAKpqE,MAAMq+C,SAAW/lE,KAAKwD,IAAI,EAAGoiD,GAAS,KAC3CksC,EAAKpqE,MAAMs+C,UAAYhmE,KAAKwD,IAAI,EAAGiiD,GAAU,KAC7CqsC,EAAKpqE,MAAMk+B,MAAQ,OACnBksC,EAAKpqE,MAAM+9B,OAAS,aAKjB/E,SAASM,UAGZlhD,KAAK29D,KAAKuoF,qBAAqBhmJ,KAAKwD,IAAI,EAAGoiD,GAAQ5lD,KAAKwD,IAAI,EAAGiiD,KAI/D3lD,KAAK29D,KAAKiG,OAAOh8C,MAAMq+C,SAAW/lE,KAAKwD,IAAI,EAAGoiD,GAAS,KACvD9lD,KAAK29D,KAAKiG,OAAOh8C,MAAMs+C,UAAYhmE,KAAKwD,IAAI,EAAGiiD,GAAU,MAI3D3lD,KAAKwwJ,iBAAiBxwJ,KAAKsnJ,kBAAmBxhG,EAAOH,GAGtD3lD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQg2B,KAAM,SAAU1gB,KAQ1D47E,QAAQh5I,UAAU6wJ,kBAAoB,SAASzqG,EAAOH,GAEpB,MAA7B3lD,KAAKupJ,uBAERzjG,EAAQ5lD,KAAKyD,IAAI3D,KAAKupJ,qBAAqBzjG,MAAOA,GAClDH,EAASzlD,KAAKyD,IAAI3D,KAAKupJ,qBAAqB5jG,OAAQA,IAGrD3lD,KAAK+9D,UAAUn2C,MAAMk+B,MAAQ5lD,KAAKD,KAAK6lD,GAAS,KAChD9lD,KAAK+9D,UAAUn2C,MAAM+9B,OAASzlD,KAAKD,KAAK0lD,GAAU,MAcnD+yF,QAAQh5I,UAAU8wJ,iBAAmB,SAAStoG,EAASpC,EAAOH,GAE7D,IAAIwH,EAAQntD,KAAK29D,KAAKxQ,MAClB5H,EAAKvlD,KAAK29D,KAAKkG,UACfg1C,EAAM74G,KAAKskE,WACX4oC,EAAK//C,EAAQntD,KAAK2jI,UAClB7mE,EAAS,IAAIjS,YAAY,EAAG,EAAGguD,EAAI/yD,MAAQonD,EAAI2L,EAAIlzD,OAASunD,GAE5DujD,EAAK5lG,YAAYoB,cAAcjsD,KAAK4kE,kBACxC6rF,EAAG3qG,MAAQ5lD,KAAKwD,IAAI,EAAG+sJ,EAAG3qG,OAC1B2qG,EAAG9qG,OAASzlD,KAAKwD,IAAI,EAAG+sJ,EAAG9qG,QAE3BmX,EAAO9d,EAAI9+C,KAAKC,OAAOswJ,EAAGzxG,EAAIuG,EAAGvG,EAAImO,GAAS2P,EAAOhX,OAASgX,EAAOhX,MAAQP,EAAGvG,EAAImO,EACpF2P,EAAOlS,EAAI1qD,KAAKC,OAAOswJ,EAAG7lG,EAAIrF,EAAGqF,EAAIuC,GAAS2P,EAAOnX,QAAUmX,EAAOnX,OAASJ,EAAGqF,EAAIuC,EAEtFsjG,EAAG3qG,MAAQ5lD,KAAKD,MAAMwwJ,EAAG3qG,OAAS2qG,EAAGzxG,EAAI8d,EAAO9d,IAAM8d,EAAOhX,OAASgX,EAAOhX,MAC7E2qG,EAAG9qG,OAASzlD,KAAKD,MAAMwwJ,EAAG9qG,QAAU8qG,EAAG7lG,EAAIkS,EAAOlS,IAAMkS,EAAOnX,QAAUmX,EAAOnX,OAGhFuC,EAAUA,GAAWhoD,KAAKyD,IAAIm5D,EAAOhX,MAAOgX,EAAOnX,QAAU3lD,KAAKynJ,iBAElE,IAAIiJ,EAAkB,EAAYxwJ,KAAKD,KAAKwwJ,EAAG9qG,OAASmX,EAAOnX,QAAU,EAAI,EACzEgrG,EAAgB,EAAYzwJ,KAAKD,KAAKwwJ,EAAG3qG,MAAQgX,EAAOhX,OAAS,EAAI,EACrE0O,GAASm8F,EAAgB,GAAK7zF,EAAOhX,MACrC4O,GAAUg8F,EAAkB,GAAK5zF,EAAOnX,OAEX,MAA7B3lD,KAAK4wJ,sBAAgCF,EAAkB,IAE1D1wJ,KAAK4wJ,qBAAuB,IAGE,MAA3B5wJ,KAAK6wJ,oBAA8BF,EAAgB,IAEtD3wJ,KAAK6wJ,mBAAqB,IAG3B,IAAIC,EAAiB5qG,QAAQ1jD,KAAKxC,MAAM,SAAS+wJ,GAEhD,GAAc,MAAVA,EACJ,CAGC,IAFA,IAAI99F,EAAS89F,GAAU/wJ,KAAK4wJ,qBAAwBF,EAAkBC,EAE7DznJ,EAAI,EAAGA,GAAK+pD,EAAO/pD,IAC5B,CACC,IAAIszD,EAAOu0F,GAAU/wJ,KAAK4wJ,qBACzB,CAAC,IAAIjmG,QAAQzqD,KAAKm8D,MAAMS,EAAO9d,GAAI9+C,KAAKm8D,MAAMS,EAAOlS,EAAI1hD,EAAI4zD,EAAOnX,SAC7D,IAAIgF,QAAQzqD,KAAKm8D,MAAMS,EAAO9d,EAAIwV,GAAQt0D,KAAKm8D,MAAMS,EAAOlS,EAAI1hD,EAAI4zD,EAAOnX,UAC5E,CAAC,IAAIgF,QAAQzqD,KAAKm8D,MAAMS,EAAO9d,EAAI91C,EAAI4zD,EAAOhX,OAAQ5lD,KAAKm8D,MAAMS,EAAOlS,IACvE,IAAID,QAAQzqD,KAAKm8D,MAAMS,EAAO9d,EAAI91C,EAAI4zD,EAAOhX,OAAQ5lD,KAAKm8D,MAAMS,EAAOlS,EAAI8J,KAEnF,GAAiB,MAAbq8F,EAAO7nJ,GAEV6nJ,EAAO7nJ,GAAGy8F,OAASnpC,EACnBu0F,EAAO7nJ,GAAGskD,aAGX,CACC,IAAIwjG,EAAY,IAAIvsD,WAAWjoC,EAAKx8D,KAAKunJ,gBACzCyJ,EAAUvtF,QAAUzjE,KAAKyjE,QACzButF,EAAU3lE,eAAgB,EAC1B2lE,EAAUtsD,SAAW1kG,KAAKwnJ,gBAC1BwJ,EAAUtsI,KAAK1kB,KAAK29D,KAAKgqE,gBACzBqpB,EAAUxjG,SAEVujG,EAAO7nJ,GAAK8nJ,GAId,IAAS9nJ,EAAI+pD,EAAO/pD,EAAI6nJ,EAAOnwJ,OAAQsI,IAEtC6nJ,EAAO7nJ,GAAGwc,UAGXqrI,EAAOtnJ,OAAOwpD,EAAO89F,EAAOnwJ,OAASqyD,OAIvC69F,EAAe9wJ,KAAK4wJ,sBACpBE,EAAe9wJ,KAAK6wJ,qBAqBrBnY,QAAQh5I,UAAUm8G,aAAe,SAAS7uD,GAEzC,IAAI8T,EAAY9gE,KAAKomB,MAAM8c,SAAS8pB,GAChCplC,EAAQ,KAwBZ,OAnBCA,EAFG5nB,KAAKomB,MAAMjX,OAAO69C,GAEbhtD,KAAK44I,WAAWvQ,sBAIhBroI,KAAK44I,WAAWxQ,wBAIR,MAAbtnE,IAEHl5C,EAAQ5nB,KAAKixJ,qBAAqBjxJ,KAAK44I,WAAW/8B,aAAa/6C,EAAWl5C,KAI9D,MAATA,IAEHA,EAAQ,IAAIvpB,QAGNupB,GAUR8wH,QAAQh5I,UAAUuxJ,qBAAuB,SAASrpI,GAEjD,GAAa,MAATA,EACJ,CACC,IAAIvqB,EAAMuqB,EAAMiiC,YAAYulB,aACxB+Y,EAAQnoF,KAAKkxJ,oBAAoB7zJ,GAYrC,GAVa,MAAT8qF,EAEHvgE,EAAMiiC,YAAYulB,aAAe+Y,EAIjCA,EAAQ9qF,EAII,MAAT8qF,GAA2C,eAA1BA,EAAMpkC,UAAU,EAAG,IACxC,CACC,GAA8B,wBAA1BokC,EAAMpkC,UAAU,EAAG,IAGtBokC,EAAQA,EAAMpkC,UAAU,EAAG,IAAMotG,mBAAmBhpE,EAAMpkC,UAAU,UAEhE,GAA8B,0BAA1BokC,EAAMpkC,UAAU,EAAG,IAC5B,CACC,IAAIqtG,EAAQjpE,EAAM3+E,QAAQ,KAGtB4nJ,EAAQ,GAA8C,YAAzCjpE,EAAMpkC,UAAUqtG,EAAQ,EAAGA,EAAQ,KAEnDjpE,EAAQA,EAAMpkC,UAAU,EAAGqtG,GAAS,WACjCjpE,EAAMpkC,UAAUqtG,EAAQ,IAI7BxpI,EAAMiiC,YAAYulB,aAAe+Y,GAInC,OAAOvgE,GAeR8wH,QAAQh5I,UAAU2xJ,aAAe,SAASzpI,EAAOw4C,GAIhD,GAFAA,EAAQA,GAASpgE,KAAK6jF,oBAET,MAATzjB,EACJ,CACCpgE,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjClJ,KAAKomB,MAAMm7C,SAASnB,EAAMl3D,GAAI0e,GAGhC,QAEC5nB,KAAKomB,MAAMo7C,eAoBdk3E,QAAQh5I,UAAU4xJ,gBAAkB,SAASj0J,EAAKotD,EAAcuC,GAI/D,OAFAA,EAAOA,GAAQhtD,KAAKstJ,mBAEbttJ,KAAKuxJ,iBAAiBl0J,EAAKotD,EAAc,CAACuC,KAmBlD0rF,QAAQh5I,UAAU6xJ,iBAAmB,SAASl0J,EAAKotD,EAAc2V,GAEhE3V,EAAgC,MAAhBA,GAAwBA,EACxC2V,EAAQA,GAASpgE,KAAK6jF,oBACtB,IAAIvmF,EAAQ,KAEZ,GAAa,MAAT8iE,GAAiBA,EAAMx/D,OAAS,EACpC,CACC,IAAIkwC,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAM,IACjCx4C,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAaz7C,EAAM,IAEvD,MAATx4C,IAEHtqB,EAAS4oD,QAAQxb,SAAS9iB,EAAOvqB,EAAKotD,GAAiB,EAAI,EAC3DzqD,KAAKqhE,cAAchkE,EAAKC,EAAO8iE,IAIjC,OAAO9iE,GAmBRo7I,QAAQh5I,UAAU2hE,cAAgB,SAAShkE,EAAKC,EAAO8iE,GAEtDA,EAAQA,GAASpgE,KAAK6jF,oBACtB39B,QAAQmb,cAAcrhE,KAAKomB,MAAOg6C,EAAO/iE,EAAKC,IAgB/Co7I,QAAQh5I,UAAU8xJ,qBAAuB,SAASn0J,EAAKukE,EAAMxB,GAE5DpgE,KAAK2hE,kBAAkBtkE,EAAKukE,EAAM,KAAMxB,IAiBzCs4E,QAAQh5I,UAAUiiE,kBAAoB,SAAStkE,EAAKukE,EAAMtkE,EAAO8iE,GAIhE,GAFAA,EAAQA,GAASpgE,KAAK6jF,oBAET,MAATzjB,GAAiBA,EAAMx/D,OAAS,EACpC,CACC,GAAa,MAATtD,EACJ,CACC,IAAIwzC,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAM,IACjCx4C,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAaz7C,EAAM,IAEpE,GAAa,MAATx4C,EACJ,CACC,IAAI8M,EAAUW,SAASzN,EAAMvqB,IAAQ,GACrCC,KAAWo3B,EAAUktC,IAASA,IAIhC1b,QAAQyb,kBAAkB3hE,KAAKomB,MAAOg6C,EAAO/iE,EAAKukE,EAAMtkE,KAqB1Do7I,QAAQh5I,UAAU+xJ,WAAa,SAASzvF,EAAO5B,EAAOsxF,GAOrD,GALa,MAATtxF,IAEHA,EAAQpgE,KAAK6jF,qBAGD,MAATzjB,GAAiBA,EAAMx/D,OAAS,EACpC,CAEC,GAAa,MAAT8wJ,EAEH,IAAK,IAAIxoJ,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAMl3D,IAErC,GAAa,MAAT4nC,IAAkB9wC,KAAKomB,MAAMjX,OAAOixD,EAAMl3D,IAE7C,GAAa,MAATwoJ,EACJ,CACC,GAAI1vF,GAASnY,YAAYqY,aACzB,CACCwvF,EAAQ5gH,EAAMkO,EAAIlO,EAAMgV,MAAQ,EAChC,MAEI,GAAIkc,GAASnY,YAAYsY,YAE7BuvF,EAAQ5gH,EAAMkO,EAAIlO,EAAMgV,WAEpB,GAAIkc,GAASnY,YAAY0rB,UAE7Bm8E,EAAQ5gH,EAAM8Z,MAEV,IAAIoX,GAASnY,YAAYuY,aAC9B,CACCsvF,EAAQ5gH,EAAM8Z,EAAI9Z,EAAM6U,OAAS,EACjC,MAIA+rG,EAFQ1vF,GAASnY,YAAYwY,aAErBvxB,EAAM8Z,EAAI9Z,EAAM6U,OAIhB7U,EAAMkO,QAOd0yG,EAFG1vF,GAASnY,YAAYsY,YAEhBjiE,KAAKwD,IAAIguJ,EAAO5gH,EAAMkO,EAAIlO,EAAMgV,OAEhCkc,GAASnY,YAAY0rB,UAErBr1E,KAAKyD,IAAI+tJ,EAAO5gH,EAAM8Z,GAEtBoX,GAASnY,YAAYwY,aAErBniE,KAAKwD,IAAIguJ,EAAO5gH,EAAM8Z,EAAI9Z,EAAM6U,QAIhCzlD,KAAKyD,IAAI+tJ,EAAO5gH,EAAMkO,GAQnC,GAAa,MAAT0yG,EACJ,CACC,IAAIlqH,EAAIxnC,KAAK29D,KAAKxQ,MAElBntD,KAAKomB,MAAMk7C,cACX,IAEC,IAASp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACK4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAMl3D,IAErC,GAAa,MAAT4nC,EACJ,CACC,IAAIklD,EAAMh2F,KAAKi2F,gBAAgB71B,EAAMl3D,IAE1B,MAAP8sF,GAAgBh2F,KAAKomB,MAAMjX,OAAOixD,EAAMl3D,MAE3C8sF,EAAMA,EAAIxxE,QAENw9C,GAASnY,YAAYqY,aAExB8zB,EAAIh3C,IAAM0yG,EAAQ5gH,EAAMkO,EAAIlO,EAAMgV,MAAQ,GAAKte,EAEvCw6B,GAASnY,YAAYsY,YAE7B6zB,EAAIh3C,IAAM0yG,EAAQ5gH,EAAMkO,EAAIlO,EAAMgV,OAASte,EAEnCw6B,GAASnY,YAAY0rB,UAE7BygB,EAAIprC,IAAM8mG,EAAQ5gH,EAAM8Z,GAAKpjB,EAErBw6B,GAASnY,YAAYuY,aAE7B4zB,EAAIprC,IAAM8mG,EAAQ5gH,EAAM8Z,EAAI9Z,EAAM6U,OAAS,GAAKne,EAExCw6B,GAASnY,YAAYwY,aAE7B2zB,EAAIprC,IAAM8mG,EAAQ5gH,EAAM8Z,EAAI9Z,EAAM6U,QAAUne,EAI5CwuD,EAAIh3C,IAAM0yG,EAAQ5gH,EAAMkO,GAAKxX,EAG9BxnC,KAAK2xJ,WAAWvxF,EAAMl3D,GAAI8sF,KAK7Bh2F,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ25B,YACvC,QAASnf,EAAO,QAAS5B,IAE5B,QAECpgE,KAAKomB,MAAMo7C,cAKd,OAAOpB,GAqCRs4E,QAAQh5I,UAAUkyJ,SAAW,SAASv3F,GAErC,GAAY,MAARA,GACwB,MAA3Br6D,KAAKqnJ,mBACN,CACCrnJ,KAAKomB,MAAMk7C,cACX,IAEC,IAAI15C,EAAQ5nB,KAAKomB,MAAM8c,SAASm3B,GAEnB,MAATzyC,GAAiC,GAAhBA,EAAMhnB,OAE1BZ,KAAKomB,MAAMm7C,SAASlH,EAAMr6D,KAAKqnJ,oBAI/BrnJ,KAAKomB,MAAMm7C,SAASlH,EAAM,MAI3Br6D,KAAK8nH,UAAUztD,GACfr6D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQg6B,UAAW,OAAQnnB,IAE7D,QAECr6D,KAAKomB,MAAMo7C,aAIb,OAAOnH,GAQRq+E,QAAQh5I,UAAUmyJ,eAAiB,SAASC,GAE3C9xJ,KAAK+4I,aAAahoI,KAAK+gJ,IAQxBpZ,QAAQh5I,UAAUqyJ,kBAAoB,SAASD,GAI9C,IAFA,IAAIniI,EAAM,GAEDzmB,EAAI,EAAGA,EAAIlJ,KAAK+4I,aAAan4I,OAAQsI,IAEzClJ,KAAK+4I,aAAa7vI,IAAM4oJ,GAE3BniI,EAAI5e,KAAK/Q,KAAK+4I,aAAa7vI,IAI7BlJ,KAAK+4I,aAAeppH,GASrB+oH,QAAQh5I,UAAUwxJ,oBAAsB,SAAS7zJ,GAEhD,GAAW,MAAPA,EAEH,IAAK,IAAI6L,EAAI,EAAGA,EAAIlJ,KAAK+4I,aAAan4I,OAAQsI,IAC9C,CACC,IAAIi/E,EAAQnoF,KAAK+4I,aAAa7vI,GAAGmtF,SAASh5F,GAE1C,GAAa,MAAT8qF,EAEH,OAAOA,EAKV,OAAO,MAoBRuwD,QAAQh5I,UAAUsyJ,WAAa,SAASC,EAAM7xF,GAEhC,MAATA,IAEHA,EAAQla,QAAQia,UAAUngE,KAAK6jF,qBAAqB,IAGrD7jF,KAAKomB,MAAMk7C,cACX,IAECthE,KAAKkyJ,aAAa9xF,EAAO6xF,GACzBjyJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQk5B,YACvC,OAAQuxE,EAAM,QAAS7xF,IAE1B,QAECpgE,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAcRs4E,QAAQh5I,UAAUwyJ,aAAe,SAAS9xF,EAAO6xF,GAEhD,GAAa,MAAT7xF,EACJ,CACCpgE,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI7C,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IAEpC+oJ,EAEHjyJ,KAAKomB,MAAM5f,IAAIH,EAAQ+5D,EAAMl3D,GAAIA,GAIjClJ,KAAKomB,MAAM5f,IAAIH,EAAQ+5D,EAAMl3D,GAC3BlJ,KAAKomB,MAAMwnC,cAAcvnD,GAAU,GAIvCrG,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm5B,cACvC,OAAQsxE,EAAM,QAAS7xF,IAE1B,QAECpgE,KAAKomB,MAAMo7C,eA2Bdk3E,QAAQh5I,UAAUyyJ,WAAa,SAASxyD,EAAOp7B,EAAQnE,GAEzC,MAATA,IAEHA,EAAQla,QAAQia,UAAUngE,KAAK6jF,qBAAqB,IAGrDzjB,EAAQpgE,KAAKoyJ,iBAAiBhyF,GAEjB,MAATu/B,IAEHA,EAAQ3/F,KAAKqyJ,gBAAgBjyF,IAG9B,IAAItD,EAAS98D,KAAKsyJ,kBAAkB3yD,EAAOv/B,EAAOmE,GAElD,GAAInE,EAAMx/D,OAAS,GAAe,MAAVk8D,EACxB,CAEC,IAAIz2D,EAASrG,KAAKomB,MAAM2vE,UAAU4J,GAEpB,MAAVt5F,IAEHA,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAM,KAGrCpgE,KAAKomB,MAAMk7C,cACX,IAIoC,MAA/BthE,KAAKi2F,gBAAgB0J,IAExB3/F,KAAKomB,MAAMk3F,YAAY3d,EAAO,IAAIwd,YAInC,IAAI/5G,EAAQpD,KAAKomB,MAAMwnC,cAAcvnD,GACrCrG,KAAK26I,WAAW,CAACh7C,GAAQt5F,EAAQjD,EAAO,KAAM,MAAM,GAAO,GAAO,GAGlEA,EAAQpD,KAAKomB,MAAMwnC,cAAc+xC,GACjC3/F,KAAK26I,WAAWv6E,EAAOu/B,EAAOv8F,EAAO,KAAM,MAAM,GAAO,GAAO,GAC/DpD,KAAKq6I,WAAWj6E,GAAQtD,EAAO9d,GAAI8d,EAAOlS,GAAG,GAAO,GAAO,GAG3D5qD,KAAK66I,aAAa,CAACl7C,GAAQ,CAAC7iC,IAAS,GAErC98D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQs5B,YACvC,QAAS6e,EAAO,SAAUp7B,EAAQ,QAASnE,IAE9C,QAECpgE,KAAKomB,MAAMo7C,aAIb,OAAOm+B,GASR+4C,QAAQh5I,UAAU0yJ,iBAAmB,SAAShyF,GAE7C,IAAIv9D,EAAS,GAEb,GAAa,MAATu9D,GAAiBA,EAAMx/D,OAAS,EACpC,CACC,IAAIyF,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAM,IACxCv9D,EAAOkO,KAAKqvD,EAAM,IAGlB,IAAK,IAAIl3D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BlJ,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,KAAO7C,GAErCxD,EAAOkO,KAAKqvD,EAAMl3D,IAKrB,OAAOrG,GAQR61I,QAAQh5I,UAAU4yJ,kBAAoB,SAAS3yD,EAAO/tF,EAAU2yD,GAE/D,IAAI1hE,EAAS7C,KAAK4nH,2BAA2Bh2G,GAAU,GAEvD,GAAc,MAAV/O,EACJ,CACC,GAAI7C,KAAKq/G,WAAW1f,GACpB,CACC,IAAIl/C,EAAOzgD,KAAK8/G,aAAangB,GAE7B98F,EAAOm8C,GAAKyB,EAAKqF,MACjBjjD,EAAO+nD,GAAKnK,EAAKkF,OACjB9iD,EAAOijD,OAASrF,EAAKqF,MACrBjjD,EAAO8iD,QAAUlF,EAAKkF,OAIT,MAAV4e,IAEH1hE,EAAOm8C,GAAKulB,EACZ1hE,EAAO+nD,GAAK2Z,EACZ1hE,EAAOijD,OAAS,EAAIye,EACpB1hE,EAAO8iD,QAAU,EAAI4e,GAIvB,OAAO1hE,GAqBR61I,QAAQh5I,UAAU2yJ,gBAAkB,SAASjyF,GAE5C,IAAIu/B,EAAQ,IAAIg5B,OAAO,IAIvB,OAHAh5B,EAAMqhC,WAAU,GAChBrhC,EAAMuhC,gBAAe,GAEdvhC,GAeR+4C,QAAQh5I,UAAU6yJ,aAAe,SAASnyF,GAEzC,IAAIv9D,EAAS,GAEb,GAAa,MAATu9D,EACJ,CACCA,EAAQpgE,KAAK6jF,oBAKb,IAFA,IAAIl0D,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BlJ,KAAKomB,MAAMwnC,cAAcwS,EAAMl3D,IAAM,GAExCymB,EAAI5e,KAAKqvD,EAAMl3D,IAIjBk3D,EAAQzwC,EAGT,GAAa,MAATywC,GAAiBA,EAAMx/D,OAAS,EACpC,CACCZ,KAAKomB,MAAMk7C,cACX,IAEC,IAASp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI0I,EAAW5R,KAAKomB,MAAM03G,YAAY19D,EAAMl3D,IAE5C,GAAgB,MAAZ0I,GAAoBA,EAAShR,OAAS,EAC1C,CACCgR,EAAWA,EAAStH,QACpB,IAAIjE,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IACpC9F,EAAQpD,KAAKomB,MAAMwnC,cAAcvnD,GAErCrG,KAAK26I,WAAW/oI,EAAUvL,EAAQjD,EAAO,KAAM,MAAM,GACrDP,EAASA,EAAO7D,OAAO4S,IAIzB5R,KAAKwyJ,wBAAwBpyF,GAC7BpgE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu5B,cAAe,QAAS3gB,IAElE,QAECpgE,KAAKomB,MAAMo7C,aAIb,OAAO3+D,GAYR61I,QAAQh5I,UAAU8yJ,wBAA0B,SAASpyF,GAEpDpgE,KAAKyyJ,aAAazyJ,KAAK0yJ,YAAYtyF,KAapCs4E,QAAQh5I,UAAUizJ,sBAAwB,SAASvyF,GAErC,MAATA,IAEHA,EAAQpgE,KAAK6jF,qBAGd7jF,KAAKomB,MAAMk7C,cACX,IAEC,IAAIj7D,EAASrG,KAAKmkF,mBACd/gF,EAAQpD,KAAKomB,MAAMwnC,cAAcvnD,GAErCrG,KAAK26I,WAAWv6E,EAAO/5D,EAAQjD,EAAO,KAAM,MAAM,GAClDpD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw5B,yBAA0B,QAAS5gB,IAE7E,QAECpgE,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAuBRs4E,QAAQh5I,UAAUs+G,kBAAoB,SAAS59C,EAAOmE,EAAQquF,EAAWh1C,EAAWC,EAAaC,EAAcC,GAEjG,MAAT39C,IAEHA,EAAQpgE,KAAK6jF,qBAGdtf,EAAoB,MAAVA,EAAkBA,EAAS,EACrCquF,EAA0B,MAAbA,GAAqBA,EAClCh1C,EAA0B,MAAbA,EAAqBA,EAAY,EAC9CC,EAA8B,MAAfA,EAAuBA,EAAc,EACpDC,EAAgC,MAAhBA,EAAwBA,EAAe,EACvDC,EAA4B,MAAdA,EAAsBA,EAAa,EAEjD/9G,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAIk3D,EAAMx/D,OAAS,EAAGsI,GAAK,EAAGA,IACvC,CACC,IAAI8sF,EAAMh2F,KAAKi2F,gBAAgB71B,EAAMl3D,IAErC,GAAW,MAAP8sF,EACJ,CACC,IAAIpkF,EAAW5R,KAAKk7H,cAAc96D,EAAMl3D,IAExC,GAAgB,MAAZ0I,GAAoBA,EAAShR,OAAS,EAC1C,CACC,IAAIk8D,EAAS98D,KAAK4nH,2BAA2Bh2G,GAAU,GAEvD,GAAc,MAAVkrD,GAAkBA,EAAOhX,MAAQ,GAAKgX,EAAOnX,OAAS,EAC1D,CACC,IAAI7W,EAAO,EACPE,EAAM,EAGV,GAAIhvC,KAAKq/G,WAAWj/C,EAAMl3D,IAC1B,CACC,IAAIu3C,EAAOzgD,KAAK8/G,aAAa1/C,EAAMl3D,IACnC4lC,EAAO2R,EAAKqF,MACZ9W,EAAMyR,EAAKkF,OAGZqwC,EAAMA,EAAIxxE,QAENouI,IAEH58D,EAAIh3C,EAAI9+C,KAAKm8D,MAAM25B,EAAIh3C,EAAI8d,EAAO9d,EAAIulB,EAASz1B,EAAOivE,GACtD/nB,EAAIprC,EAAI1qD,KAAKm8D,MAAM25B,EAAIprC,EAAIkS,EAAOlS,EAAI2Z,EAASv1B,EAAM4uE,IAGtD5nB,EAAIlwC,MAAQ5lD,KAAKm8D,MAAMS,EAAOhX,MAAQ,EAAIye,EAASz1B,EAAOivE,EAAaF,GACvE7nB,EAAIrwC,OAASzlD,KAAKm8D,MAAMS,EAAOnX,OAAS,EAAI4e,EAASv1B,EAAM4uE,EAAYE,GAEvE99G,KAAKomB,MAAMk3F,YAAYl9C,EAAMl3D,GAAI8sF,GACjCh2F,KAAKqoH,UAAUz2G,EAAU2yD,EAASz1B,EAAOguB,EAAO9d,EAAI++D,EAClDx5C,EAASv1B,EAAM8tB,EAAOlS,EAAIgzD,OAMjC,QAEC59G,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAaRs4E,QAAQh5I,UAAU85D,eAAiB,SAAS4G,GAE3C,IAAIv9D,EAAS,KAEb,GAAa,MAATu9D,GAAiBA,EAAMx/D,OAAS,EAEnC,IAAK,IAAIsI,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIlJ,KAAKomB,MAAMuvE,SAASv1B,EAAMl3D,KAAOlJ,KAAKomB,MAAMjX,OAAOixD,EAAMl3D,IAC7D,CACC,IAAI23F,EAAO7gG,KAAK29D,KAAKnE,eAAex5D,KAAK29D,KAAK5Q,SAASqT,EAAMl3D,KAAK,GAEtD,MAAR23F,IAEW,MAAVh+F,EAEHA,EAASgoD,YAAYoB,cAAc40C,GAInCh+F,EAAO2D,IAAIq6F,IAOhB,OAAOh+F,GAqBR61I,QAAQh5I,UAAUygI,UAAY,SAASnzE,EAAM6lG,EAAmB9yB,EAAS+yB,GAExE,OAAO9yJ,KAAKgkF,WAAW,CAACh3B,GAAO6lG,EAAmB9yB,EAAS+yB,GAAc,IAoB1Epa,QAAQh5I,UAAUskF,WAAa,SAAS5jB,EAAOyyF,EAAmB9yB,EAAS+yB,GAE1ED,EAA0C,MAArBA,GAA6BA,EAClD,IAAIxyB,EAAS,KAEb,GAAa,MAATjgE,EACJ,CAKC,IAHA,IAAIhK,EAAO,IAAIxN,aACXj5B,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GACnBymB,EAAI5e,KAAKqvD,EAAMl3D,IAGhB,GAAIymB,EAAI/uB,OAAS,EACjB,CACC,IAAIusD,EAAQntD,KAAK29D,KAAKxQ,MAClB4lG,EAAQ/yJ,KAAK29D,KAAKkG,UACtBw8D,EAASrgI,KAAKomB,MAAM49D,WAAW5jB,GAAO,EAAM2/D,GAE5C,IAAS72H,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,IAAK2pJ,GAAqB7yJ,KAAKomB,MAAMjX,OAAOkxH,EAAOn3H,KAGJ,MAF9ClJ,KAAKgzJ,uBAAuB3yB,EAAOn3H,GAClClJ,KAAKomB,MAAMi2F,YAAYgkB,EAAOn3H,IAAI,GAClClJ,KAAKomB,MAAMi2F,YAAYgkB,EAAOn3H,IAAI,IAEnCm3H,EAAOn3H,GAAK,SAGb,CACC,IAAIk3C,EAAIpgD,KAAKomB,MAAM62F,YAAYojB,EAAOn3H,IAEtC,GAAS,MAALk3C,EACJ,CACC,IAAItP,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAMl3D,IACjCw1G,EAAS1+G,KAAK29D,KAAK5Q,SAAS/sD,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,KAE3D,GAAa,MAAT4nC,GAA2B,MAAV4tE,EACrB,CACC,IAAI7vE,EAAK,EAAiB,EAAI6vE,EAAO9/C,OAAO5f,EACxCjQ,EAAK,EAAiB,EAAI2vE,EAAO9/C,OAAOhU,EAE5C,GAAI5qD,KAAKomB,MAAMjX,OAAOkxH,EAAOn3H,IAC7B,CACC,IAAIszD,EAAM1rB,EAAM6qB,eAEhB,GAAW,MAAPa,EACJ,CAEC,IAAI5nD,EAAM5U,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,GAE3C,MAAc,MAAP0L,IAAgBwhD,EAAK/2D,IAAIuV,GAE/BA,EAAM5U,KAAKomB,MAAM2vE,UAAUnhF,GAGjB,MAAPA,GAAyB,MAAV4nD,EAAI,IAEtBpc,EAAE4hF,iBACD,IAAIr3E,QAAQ6R,EAAI,GAAGxd,EAAImO,EAAQ4lG,EAAM/zG,EACpCwd,EAAI,GAAG5R,EAAIuC,EAAQ4lG,EAAMnoG,IAAI,GAIhC,IAAI4+D,EAAMxpH,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,GAE3C,MAAc,MAAPsgH,IAAgBpzD,EAAK/2D,IAAImqH,GAE/BA,EAAMxpH,KAAKomB,MAAM2vE,UAAUyzB,GAG5B,IAAIvhH,EAAIu0D,EAAI57D,OAAS,EAEV,MAAP4oH,GAAyB,MAAVhtD,EAAIv0D,IAEtBm4C,EAAE4hF,iBACD,IAAIr3E,QAAQ6R,EAAIv0D,GAAG+2C,EAAImO,EAAQ4lG,EAAM/zG,EACpCwd,EAAIv0D,GAAG2iD,EAAIuC,EAAQ4lG,EAAMnoG,IAAI,GAIhC,IAAI+6C,EAASvlD,EAAEulD,OAEf,GAAc,MAAVA,EAEH,IAAK,IAAIn4E,EAAI,EAAGA,EAAIm4E,EAAO/kG,OAAQ4sB,IAElCm4E,EAAOn4E,GAAGwxB,GAAKnQ,EACf82D,EAAOn4E,GAAGo9B,GAAK7b,QAOlBqR,EAAEyjB,UAAUh1B,EAAIE,WASrBsxF,EAAS,GAIX,OAAOA,GA4CRqY,QAAQh5I,UAAUy7H,aAAe,SAAS90H,EAAQsK,EAAIrT,EACrD0hD,EAAG4L,EAAG9E,EAAOH,EAAQ/9B,EAAOsuE,GAE5B,IAAI4lB,EAAS97G,KAAKizJ,aAAa5sJ,EAAQsK,EAAIrT,EAAO0hD,EAAG4L,EAAG9E,EAAOH,EAAQ/9B,EAAOsuE,GAE9E,OAAOl2F,KAAKiqI,QAAQnuB,EAAQz1G,IAQ7BqyI,QAAQh5I,UAAUuzJ,aAAe,SAAS5sJ,EAAQsK,EAAIrT,EACpD0hD,EAAG4L,EAAG9E,EAAOH,EAAQ/9B,EAAOsuE,GAG7B,IAAI9oC,EAAW,IAAI+vD,WAAWn+D,EAAG4L,EAAG9E,EAAOH,GAC3CyH,EAAS8oC,SAAwB,MAAZA,GAAoBA,EAGzC,IAAI4lB,EAAS,IAAI6c,OAAOr7H,EAAO8vD,EAAUxlC,GAKzC,OAJAk0F,EAAOihB,MAAMpsH,GACbmrG,EAAOklB,WAAU,GACjBllB,EAAOolB,gBAAe,GAEfplB,GAoBR48B,QAAQh5I,UAAU0+H,WAAa,SAAS/3H,EAAQsK,EAAIrT,EAAO4G,EAAQE,EAAQwjB,GAE1E,IAAIyyC,EAAOr6D,KAAKkzJ,WAAW7sJ,EAAQsK,EAAIrT,EAAO4G,EAAQE,EAAQwjB,GAE9D,OAAO5nB,KAAKmzJ,QAAQ94F,EAAMh0D,EAAQnC,EAAQE,IAW3Cs0I,QAAQh5I,UAAUwzJ,WAAa,SAAS7sJ,EAAQsK,EAAIrT,EAAO4G,EAAQE,EAAQwjB,GAG1E,IAAIyyC,EAAO,IAAIs+D,OAAOr7H,EAAO,IAAI6/G,WAAcv1F,GAK/C,OAJAyyC,EAAK0iE,MAAMpsH,GACX0pD,EAAK4mE,SAAQ,GACb5mE,EAAKjN,SAAS8oC,UAAW,EAElB77B,GAmBRq+E,QAAQh5I,UAAUyzJ,QAAU,SAAS94F,EAAMh0D,EAAQnC,EAAQE,EAAQhB,GAElE,OAAOpD,KAAKiqI,QAAQ5vE,EAAMh0D,EAAQjD,EAAOc,EAAQE,IAmBlDs0I,QAAQh5I,UAAUuqI,QAAU,SAASj9E,EAAM3mD,EAAQjD,EAAOc,EAAQE,GAEjE,OAAOpE,KAAKkqI,SAAS,CAACl9E,GAAO3mD,EAAQjD,EAAOc,EAAQE,GAAQ,IAoB7Ds0I,QAAQh5I,UAAUwqI,SAAW,SAAS9pE,EAAO/5D,EAAQjD,EAAOc,EAAQE,GAErD,MAAViC,IAEHA,EAASrG,KAAKmkF,oBAGF,MAAT/gF,IAEHA,EAAQpD,KAAKomB,MAAMwnC,cAAcvnD,IAGlCrG,KAAKomB,MAAMk7C,cACX,IAECthE,KAAK26I,WAAWv6E,EAAO/5D,EAAQjD,EAAOc,EAAQE,GAAQ,GAAO,GAC7DpE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ04B,UAAW,QAAS9f,EAC3D,SAAU/5D,EAAQ,QAASjD,EAAO,SAAUc,EAAQ,SAAUE,IAEjE,QAECpE,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GASRs4E,QAAQh5I,UAAUi7I,WAAa,SAASv6E,EAAO/5D,EAAQjD,EAAOc,EAAQE,EAAQgvJ,EAAUC,EAAWloJ,GAElG,GAAa,MAATi1D,GAA2B,MAAV/5D,GAA2B,MAATjD,EACvC,CACCpD,KAAKomB,MAAMk7C,cACX,IAMC,IAJA,IAAIgyF,EAAc,EAAatzJ,KAAK29D,KAAK5Q,SAAS1mD,GAAU,KACxDk6D,EAAqB,MAAf+yF,EAAuBA,EAAY10F,OAAS,KAClD20F,EAAO,IAAI5oG,QAAQ,EAAG,GAEjBzhD,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAgB,MAAZk3D,EAAMl3D,GAET9F,QAGD,CACC,IAAI0lD,EAAW9oD,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IAG1C,GAAU,MAANq3D,GAAcH,EAAMl3D,IAAM7C,GAAUA,GAAUyiD,EAClD,CACC,IAAI0qG,EAAWxzJ,KAAK29D,KAAK5Q,SAASjE,GAC9B0X,EAAkB,MAAZgzF,EAAoBA,EAAS50F,OAAS20F,EAC5Cv9D,EAAMh2F,KAAKomB,MAAM62F,YAAY78C,EAAMl3D,IAEvC,GAAW,MAAP8sF,EACJ,CACC,IAAInnD,EAAK2xB,EAAGxhB,EAAIuhB,EAAGvhB,EACfjQ,EAAKyxB,EAAG5V,EAAI2V,EAAG3V,EAInBorC,EAAMA,EAAIxxE,QACVwxE,EAAInyB,UAAUh1B,EAAIE,GAEbinD,EAAIE,WAAYl2F,KAAKomB,MAAMuvE,SAASv1B,EAAMl3D,KAC7ClJ,KAAKyzJ,+BAENz9D,EAAIh3C,EAAI9+C,KAAKwD,IAAI,EAAGsyF,EAAIh3C,GACxBg3C,EAAIprC,EAAI1qD,KAAKwD,IAAI,EAAGsyF,EAAIprC,IAGzB5qD,KAAKomB,MAAMk3F,YAAYl9C,EAAMl3D,GAAI8sF,IAM/B3vF,GAAUyiD,GAAY1lD,EAAQ8F,EAAIlJ,KAAKomB,MAAMwnC,cAAcvnD,IAE9DjD,IAGDpD,KAAKomB,MAAM5f,IAAIH,EAAQ+5D,EAAMl3D,GAAI9F,EAAQ8F,GAErClJ,KAAK+oJ,oBAER/oJ,KAAK0zJ,aAAatzF,EAAMl3D,IAAI,IAId,MAAViC,GAAkBA,IACtBnL,KAAK2zJ,qBAAqBvzF,EAAMl3D,KAAOlJ,KAAK4zJ,eAAexzF,EAAMl3D,KAEjElJ,KAAK6zJ,aAAazzF,EAAMl3D,KAIR,MAAbmqJ,GAAqBA,IAExBrzJ,KAAK8zJ,eAAe1zF,EAAMl3D,IAIb,MAAVhF,GAEHlE,KAAK+zJ,cAAc3zF,EAAMl3D,GAAIhF,GAAQ,GAIxB,MAAVE,GAEHpE,KAAK+zJ,cAAc3zF,EAAMl3D,GAAI9E,GAAQ,GAKxCpE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ24B,YAAa,QAAS/f,EAC9D,SAAU/5D,EAAQ,QAASjD,EAAO,SAAUc,EAAQ,SAAUE,EAC9D,WAAYgvJ,IAEd,QAECpzJ,KAAKomB,MAAMo7C,eAgBdk3E,QAAQh5I,UAAUg0J,aAAe,SAAS1mG,EAAMyoC,GAI/C,GAFAA,EAAsB,MAAXA,GAAmBA,EAE1BA,EAIH,IAFA,IAAI9nC,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAK0zJ,aAAa1zJ,KAAKomB,MAAMynC,WAAWb,EAAM9jD,IAI5ClJ,KAAKkjE,WAAWyyB,SAAS3oC,IAAShtD,KAAK0tJ,eAAe1gG,IAEzDhtD,KAAKg0J,eAAehnG,IAmBtB0rF,QAAQh5I,UAAUkkF,YAAc,SAASxjB,EAAOihF,GAU/C,GARAA,EAAgC,MAAhBA,GAAwBA,EAE3B,MAATjhF,IAEHA,EAAQpgE,KAAKi0J,kBAAkBj0J,KAAK6jF,sBAIjCw9D,EAIHjhF,EAAQpgE,KAAKi0J,kBAAkBj0J,KAAK0yJ,YAAYtyF,QAGjD,CACCA,EAAQA,EAAM91D,QAOd,IAHA,IAAIyjD,EAAQ/tD,KAAKi0J,kBAAkBj0J,KAAKk0J,YAAY9zF,IAChDhK,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpB,IAASA,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAEG,MAAhClJ,KAAK29D,KAAK5Q,SAASgB,EAAM7kD,KAC3BktD,EAAK/2D,IAAI0uD,EAAM7kD,MAEhBktD,EAAKvN,IAAIkF,EAAM7kD,IAAI,GACnBk3D,EAAMrvD,KAAKg9C,EAAM7kD,KAKpBlJ,KAAKomB,MAAMk7C,cACX,IAECthE,KAAKyyJ,aAAaryF,GAClBpgE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo5B,aACvC,QAASxgB,EAAO,eAAgBihF,IAEnC,QAECrhJ,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAaRs4E,QAAQh5I,UAAU+yJ,aAAe,SAASryF,GAEzC,GAAa,MAATA,GAAiBA,EAAMx/D,OAAS,EACpC,CACC,IAAIusD,EAAQntD,KAAK29D,KAAKxQ,MAClB5H,EAAKvlD,KAAK29D,KAAKkG,UAEnB7jE,KAAKomB,MAAMk7C,cACX,IAKC,IAFA,IAAIlL,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpB,IAASA,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CA+DC,IA7DA,IAAI6kD,EAAQ/tD,KAAKk0J,YAAY,CAAC9zF,EAAMl3D,KAEhCirJ,EAAqBjuG,QAAQ1jD,KAAKxC,MAAM,SAASq6D,EAAMn2D,GAE1D,IAAI8xF,EAAMh2F,KAAKomB,MAAM62F,YAAY5iD,GAEjC,GAAW,MAAP27B,EACJ,CAEC,IAAI57B,EAAWp6D,KAAKomB,MAAMi2F,YAAYhiD,EAAMn2D,GACxCkwJ,GAAY,EACZzkI,EAAMyqC,EAEV,MAAc,MAAPzqC,EACP,CACC,GAAIywC,EAAMl3D,IAAMymB,EAChB,CACCykI,GAAY,EACZ,MAGDzkI,EAAM3vB,KAAKomB,MAAM2vE,UAAUpmE,GAG5B,GAAIykI,EACJ,CACCp+D,EAAMA,EAAIxxE,QACV,IAAIssB,EAAQ9wC,KAAK29D,KAAK5Q,SAASsN,GAE/B,GAAa,MAATvpB,GAAyC,MAAxBA,EAAM6qB,eAC3B,CACC,IAAIa,EAAM1rB,EAAM6qB,eACZ1zD,EAAI,EAAW,EAAIu0D,EAAI57D,OAAS,EAEpCo1F,EAAIgsC,iBAAiB,IAAIr3E,QACxB6R,EAAIv0D,GAAG+2C,EAAImO,EAAQ5H,EAAGvG,EAAIlO,EAAM8tB,OAAO5f,EACvCwd,EAAIv0D,GAAG2iD,EAAIuC,EAAQ5H,EAAGqF,EAAI9Z,EAAM8tB,OAAOhU,GAAI1mD,OAG7C,CAMC,IAAImwJ,EAASr0J,KAAK29D,KAAK5Q,SAASqN,GAElB,MAAVi6F,GAEHr+D,EAAIgsC,iBAAiB,IAAIr3E,QACxB0pG,EAAOrpG,aAAemC,EAAQ5H,EAAGvG,EACjCq1G,EAAOppG,aAAekC,EAAQ5H,EAAGqF,GAAI1mD,GAIxClE,KAAKomB,MAAMk3F,YAAYjjD,EAAM27B,GAC7Bh2F,KAAKomB,MAAM43G,YAAY3jE,EAAM,KAAMn2D,QAK7BspB,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAE5B4oC,EAAK/2D,IAAI0uD,EAAMvgC,MAEnB4oC,EAAKvN,IAAIkF,EAAMvgC,IAAI,GACnB2mI,EAAmBpmG,EAAMvgC,IAAI,GAC7B2mI,EAAmBpmG,EAAMvgC,IAAI,IAI/BxtB,KAAKomB,MAAM/c,OAAO+2D,EAAMl3D,IAGzBlJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQq5B,cAAe,QAASzgB,IAElE,QAECpgE,KAAKomB,MAAMo7C,eAqBdk3E,QAAQh5I,UAAU40J,UAAY,SAASj6F,EAAM+F,EAAOm0F,EAAS1lH,EAAIE,GAEhEF,EAAKA,GAAM,EACXE,EAAKA,GAAM,EAEX,IAAI1oC,EAASrG,KAAKomB,MAAM2vE,UAAU17B,GAC9Bn2D,EAASlE,KAAKomB,MAAMi2F,YAAYhiD,GAAM,GAE1Cr6D,KAAKomB,MAAMk7C,cACX,IAEC,GAAe,MAAXizF,EACJ,CACCA,EAAUv0J,KAAKmgI,UAAU9lE,GAGzB,IAAIvpB,EAAQ9wC,KAAK29D,KAAK5Q,SAASsN,GAC3B27B,EAAMh2F,KAAKi2F,gBAAgBs+D,GAE/B,GAAW,MAAPv+D,GAA6B,MAAdA,EAAI2P,QAA2B,MAAT70D,EACzC,CACC,IAAIkb,EAAIhsD,KAAK29D,KAAKkG,UACdr8B,EAAIxnC,KAAK29D,KAAKxQ,MACd5C,EAAMrE,QAAQwV,mBAAmB5qB,GAAQjC,EAAKmd,EAAEhN,GAAKxX,GAAIuH,EAAKid,EAAEpB,GAAKpjB,GACzEwuD,EAAI2P,OAAS3P,EAAI2P,OAAOr7F,MAAM,EAAGigD,GAEjCyrC,EAAMh2F,KAAKi2F,gBAAgB57B,GAEhB,MAAP27B,GAA6B,MAAdA,EAAI2P,SAEtB3P,EAAMA,EAAIxxE,QACVwxE,EAAI2P,OAAS3P,EAAI2P,OAAOr7F,MAAMigD,GAC9BvqD,KAAKomB,MAAMk3F,YAAYjjD,EAAM27B,KAKhCh2F,KAAKq6I,WAAWj6E,EAAOvxB,EAAIE,GAAI,GAAO,GACtC/uC,KAAK26I,WAAWv6E,EAAO/5D,EAAQrG,KAAKomB,MAAMwnC,cAAcvnD,GAAS,KAAM,MACrE,GACFrG,KAAK26I,WAAW,CAAC4Z,GAAUluJ,EAAQrG,KAAKomB,MAAMwnC,cAAcvnD,GAC1DnC,EAAQk8D,EAAM,IAAI,GACpBpgE,KAAK+zJ,cAAc15F,EAAM+F,EAAM,IAAI,GACnCpgE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ+5B,WAAY,OAAQlnB,EAC3D,QAAS+F,EAAO,UAAWm0F,EAAS,KAAM1lH,EAAI,KAAME,IAEvD,QAEC/uC,KAAKomB,MAAMo7C,YAGZ,OAAO+yF,GAuBR7b,QAAQh5I,UAAU80J,YAAc,SAASnrH,EAAM+2B,EAAOihF,GAExC,MAATjhF,IAEHA,EAAQpgE,KAAK6jF,qBAIVw9D,IAEHjhF,EAAQpgE,KAAK0yJ,YAAYtyF,IAG1BpgE,KAAKomB,MAAMk7C,cACX,IAECthE,KAAKy0J,aAAar0F,EAAO/2B,GACzBrpC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQg5B,aACxC,OAAQn3C,EAAM,QAAS+2B,EAAO,eAAgBihF,IAEhD,QAECrhJ,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAaRs4E,QAAQh5I,UAAU+0J,aAAe,SAASr0F,EAAO/2B,GAEhD,GAAa,MAAT+2B,GAAiBA,EAAMx/D,OAAS,EACpC,CACCZ,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjClJ,KAAKomB,MAAM6hC,WAAWmY,EAAMl3D,GAAImgC,GAGlC,QAECrpC,KAAKomB,MAAMo7C,eA4Bdk3E,QAAQh5I,UAAUywI,UAAY,SAASD,EAAUz6C,EAASr1B,EAAOs0F,EAAe1uG,GAE/EyvC,EAAsB,MAAXA,GAAmBA,EAEjB,MAATr1B,IAEHA,EAAQpgE,KAAK20J,iBAAiB30J,KAAK6jF,oBAAqBqsD,IAGzDlwI,KAAK2kI,aAAY,GAEjB3kI,KAAKomB,MAAMk7C,cACX,IAECthE,KAAK40J,YAAYx0F,EAAO8vE,EAAUz6C,EAASi/D,GAC3C10J,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy5B,WACxC,WAAYivD,EAAU,UAAWz6C,EAAS,QAASr1B,IAErD,QAECpgE,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAmBRs4E,QAAQh5I,UAAUk1J,YAAc,SAASx0F,EAAO8vE,EAAUz6C,EAASi/D,GAElE,GAAa,MAATt0F,GAAiBA,EAAMx/D,OAAS,EACpC,CACCZ,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,KAAMwrJ,GAAiB10J,KAAK60J,eAAez0F,EAAMl3D,GAAIgnI,KACpDA,GAAYlwI,KAAKy/G,gBAAgBr/C,EAAMl3D,IACxC,CASC,GARAlJ,KAAKomB,MAAMs5G,aAAat/D,EAAMl3D,GAAIgnI,GAClClwI,KAAK80J,WAAW10F,EAAMl3D,GAAIgnI,GAEtBlwI,KAAK4zJ,eAAexzF,EAAMl3D,KAE7BlJ,KAAK6zJ,aAAazzF,EAAMl3D,IAGrBusF,EACJ,CACC,IAAI7jF,EAAW5R,KAAKomB,MAAM03G,YAAY19D,EAAMl3D,IAC5ClJ,KAAK40J,YAAYhjJ,EAAUs+H,EAAUz6C,GAGtCz1F,KAAK8zJ,eAAe1zF,EAAMl3D,IAI5BlJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ05B,aACxC,QAAS9gB,EAAO,WAAY8vE,EAAU,UAAWz6C,IAEnD,QAECz1F,KAAKomB,MAAMo7C,eAgBdk3E,QAAQh5I,UAAUo1J,WAAa,SAAS9nG,EAAM+nG,GAE7C,GAAY,MAAR/nG,EACJ,CACC,IAAIgpC,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAEtB,MAAPgpC,IAEHA,EAAMA,EAAIxxE,QAEVxkB,KAAKg1J,sBAAsBhoG,EAAMgpC,EAAK++D,GACtC/+D,EAAI8rC,OAEJ9hI,KAAKomB,MAAMk3F,YAAYtwD,EAAMgpC,MAqBhC0iD,QAAQh5I,UAAUs1J,sBAAwB,SAAShoG,EAAMgpC,EAAK++D,GAE7D,GAAY,MAAR/nG,GAAuB,MAAPgpC,EACpB,CACC,IAAIllD,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,GAA2B,MAAvBgpC,EAAI2rC,gBACR,CACC,IAAI7kE,EAASk5B,EAEb,GAAIh2F,KAAKgqJ,wBACT,CACC,IAAIr6H,EAAM3vB,KAAKi1J,wBAAwBjoG,GAEvC,GAAW,MAAPr9B,EACJ,CACCmtC,EAASntC,EAET,IAAIg7E,EAAYzkD,QAAQxb,SAAS9iB,EAAOiiC,YAAY6T,iBAEhDitC,EAAY,IAEf7tC,EAAOnX,OAASzlD,KAAKwD,IAAIo5D,EAAOnX,OAAQglD,KAK3C3U,EAAI2rC,gBAAkB,IAAI92E,YAAY,EAAG,EAAGiS,EAAOhX,MAAOgX,EAAOnX,QAGlE,GAA2B,MAAvBqwC,EAAI2rC,gBACR,CACC3rC,EAAI2rC,gBAAgB3iF,EAAIg3C,EAAIh3C,EAC5Bg3C,EAAI2rC,gBAAgB/2E,EAAIorC,EAAIprC,EAE5B,IAAIiT,EAAQ3X,QAAQqQ,UAAU3uC,EAAMiiC,YAAYiR,iBAAmB,GAEnE,GAAa,GAAT+C,EACJ,CACC,IAAIhvB,EAAKmnD,EAAI2rC,gBAAgB32E,aAAegrC,EAAIhrC,aAC5Cjc,EAAKinD,EAAI2rC,gBAAgB12E,aAAe+qC,EAAI/qC,aAE5CuM,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEfqsD,EAAM1yD,EAAM3oB,EAAK6oB,EAAM3oB,EACvBk7E,EAAMvyD,EAAM7oB,EAAK2oB,EAAMzoB,EAE3BinD,EAAI2rC,gBAAgB3iF,GAAKkrE,EAAMr7E,EAC/BmnD,EAAI2rC,gBAAgB/2E,GAAKq/D,EAAMl7E,MAYnC2pG,QAAQh5I,UAAUgzJ,YAAc,SAAStyF,GAExC,IAAI80F,EAAW90F,EAAM91D,QAErB,OAAO47C,QAAQiQ,iBAAiB++F,EAASl2J,OAAOgB,KAAKk0J,YAAY9zF,MAQlEs4E,QAAQh5I,UAAUw0J,YAAc,SAAS9zF,GAExC,IAAIrS,EAAQ,GAEZ,GAAa,MAATqS,EAEH,IAAK,IAAIl3D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CAGC,IAFA,IAAIgzG,EAAYl8G,KAAKomB,MAAM+1F,aAAa/7C,EAAMl3D,IAErCskB,EAAI,EAAGA,EAAI0uF,EAAW1uF,IAE9BugC,EAAMh9C,KAAK/Q,KAAKomB,MAAMg2F,UAAUh8C,EAAMl3D,GAAIskB,IAI3C,IAAI5b,EAAW5R,KAAKomB,MAAM03G,YAAY19D,EAAMl3D,IAC5C6kD,EAAQA,EAAM/uD,OAAOgB,KAAKk0J,YAAYtiJ,IAIxC,OAAOm8C,GAkBR2qF,QAAQh5I,UAAUs0J,eAAiB,SAAShnG,EAAMmoG,GAEjDA,EAAoC,MAAlBA,GAA0BA,EAE5Cn1J,KAAKomB,MAAMk7C,cACX,IAECthE,KAAK2tJ,gBAAgB3gG,EAAMmoG,GAC3Bn1J,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQs6B,iBACvC,OAAQ90B,EAAM,iBAAkBmoG,IAEnC,QAECn1J,KAAKomB,MAAMo7C,YAGZ,OAAOxU,GAaR0rF,QAAQh5I,UAAUiuJ,gBAAkB,SAAS3gG,EAAMmoG,GAElD,GAAY,MAARnoG,EACJ,CACChtD,KAAKomB,MAAMk7C,cACX,IAEC,IAAI7gB,EAAOzgD,KAAKi1J,wBAAwBjoG,GACpCgpC,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAEjC,GAAY,MAARvM,GAAuB,MAAPu1C,EACpB,CACC,IAAIwiC,EAAYx4H,KAAKy/G,gBAAgBzyD,GAGrC,GAFAgpC,EAAMA,EAAIxxE,QAENxkB,KAAKq/G,WAAWryD,GACpB,CACC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAC1DooG,EAAYp1J,KAAKomB,MAAM8c,SAAS8pB,GAEnB,MAAbooG,IAEHA,EAAY,IAGTlvG,QAAQxb,SAAS9iB,EAAOiiC,YAAY+T,kBAAkB,IAEzDw3F,EAAYlvG,QAAQqb,SAAS6zF,EAC3BvrG,YAAY6T,gBAAiBjd,EAAKkF,OAAS,GAEzC6yE,IAEHxiC,EAAIrwC,OAASlF,EAAKkF,OAAS,GAG5BqwC,EAAIlwC,MAAQrF,EAAKqF,QAIjBsvG,EAAYlvG,QAAQqb,SAAS6zF,EAC3BvrG,YAAY6T,gBAAiBjd,EAAKqF,MAAQ,GAExC0yE,IAEHxiC,EAAIlwC,MAAQrF,EAAKqF,MAAQ,GAG1BkwC,EAAIrwC,OAASlF,EAAKkF,QAGnB3lD,KAAKomB,MAAMm7C,SAASvU,EAAMooG,OAG3B,CACKtkH,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,IAAShtD,KAAK29D,KAAKk6B,YAAY7qC,GAA9D,IACIgV,EAASlxB,EAAMlpB,MAAMiiC,YAAY8kB,cAAgB9kB,YAAYqY,aAE7DF,GAASnY,YAAYsY,YAExB6zB,EAAIh3C,GAAKg3C,EAAIlwC,MAAQrF,EAAKqF,MAElBkc,GAASnY,YAAYqY,eAE7B8zB,EAAIh3C,GAAK9+C,KAAKm8D,OAAO25B,EAAIlwC,MAAQrF,EAAKqF,OAAS,IAGhD,IAAImc,EAASjiE,KAAKqvI,iBAAiBv+F,GAE/BmxB,GAAUpY,YAAYwY,aAEzB2zB,EAAIprC,GAAKorC,EAAIrwC,OAASlF,EAAKkF,OAEnBsc,GAAUpY,YAAYuY,eAE9B4zB,EAAIprC,GAAK1qD,KAAKm8D,OAAO25B,EAAIrwC,OAASlF,EAAKkF,QAAU,IAGlDqwC,EAAIlwC,MAAQrF,EAAKqF,MACjBkwC,EAAIrwC,OAASlF,EAAKkF,OAGnB,IAAKwvG,IAAmB38B,EACxB,CACC,IAAI17D,EAAS98D,KAAK29D,KAAKqzE,UAAUhxI,KAAKomB,MAAM03G,YAAY9wE,IAExD,GAAc,MAAV8P,EACJ,CACC,IAAIvX,EAAKvlD,KAAK29D,KAAKkG,UACf1W,EAAQntD,KAAK29D,KAAKxQ,MAElBrH,GAASgX,EAAO9d,EAAI8d,EAAOhX,OAASqH,EAAQ6oC,EAAIh3C,EAAIuG,EAAGvG,EACvD2G,GAAUmX,EAAOlS,EAAIkS,EAAOnX,QAAUwH,EAAQ6oC,EAAIprC,EAAIrF,EAAGqF,EAE7DorC,EAAIlwC,MAAQ5lD,KAAKwD,IAAIsyF,EAAIlwC,MAAOA,GAChCkwC,EAAIrwC,OAASzlD,KAAKwD,IAAIsyF,EAAIrwC,OAAQA,IAIpC3lD,KAAK66I,aAAa,CAAC7tF,GAAO,CAACgpC,IAAM,IAGnC,QAECh2F,KAAKomB,MAAMo7C,eAgCdk3E,QAAQh5I,UAAUu1J,wBAA0B,SAASjoG,GAEpD,IAAInqD,EAAS,KAEb,GAAY,MAARmqD,EACJ,CACC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,IAAShtD,KAAK29D,KAAKk6B,YAAY7qC,GAC1DplC,EAAQkpB,EAAMlpB,MAElB,IAAK5nB,KAAKomB,MAAMjX,OAAO69C,GACvB,CACC,IAAIuV,EAAW36C,EAAMiiC,YAAYqoB,iBAAmBroB,YAAY6Y,iBAC5D7zB,EAAK,EACLE,EAAK,EAGmB,MAAxB/uC,KAAKq2F,SAASvlD,IAAoD,MAAlClpB,EAAMiiC,YAAYulB,cAEjDxnD,EAAMiiC,YAAYopB,cAAgBppB,YAAYwqB,cAE7CzsD,EAAMiiC,YAAY+kB,uBAAyB/kB,YAAYuY,eAE1DvzB,GAAM3mC,WAAW0f,EAAMiiC,YAAYwlB,qBAAuBkgC,QAAQ7vG,UAAUm6G,WAGzEjyF,EAAMiiC,YAAY8kB,cAAgB9kB,YAAYqY,eAEjDnzB,GAAM7mC,WAAW0f,EAAMiiC,YAAYylB,sBAAwBigC,QAAQ7vG,UAAUm6G,YAMhFhrE,GAAM,GAAKjnB,EAAMiiC,YAAY4nB,gBAAkB,GAC/C5iC,GAAMjnB,EAAMiiC,YAAY8nB,qBAAuB,EAC/C9iC,GAAMjnB,EAAMiiC,YAAYgoB,sBAAwB,EAEhD9iC,GAAM,GAAKnnB,EAAMiiC,YAAY4nB,gBAAkB,GAC/C1iC,GAAMnnB,EAAMiiC,YAAY6nB,oBAAsB,EAC9C3iC,GAAMnnB,EAAMiiC,YAAY+nB,uBAAyB,EAKjD,IAAIuW,EAAQnoF,KAAK+vI,gBAAgBj/F,GAEpB,MAATq3C,IAEHt5C,GAAMs5C,EAAMriC,MAAQ,GAIrB,IAAIxoD,EAAQ0C,KAAKutD,aAAayhF,cAAcl+F,GAE5C,GAAa,MAATxzC,GAAiBA,EAAMsD,OAAS,EACpC,CACMZ,KAAKovI,YAAYt+F,EAAMkc,QAE3B1vD,EAAQ4oD,QAAQuL,aAAan0D,IAG9BA,EAAQA,EAAM2M,QAAQ,MAAO,QAE7B,IAAIw2C,EAAOyF,QAAQoc,iBAAiBhlE,EAAOilE,EAAU36C,EAAMiiC,YAAYooB,mBACnEnsB,EAAQrF,EAAKqF,MAAQjX,EACrB8W,EAASlF,EAAKkF,OAAS5W,EAE3B,IAAKmX,QAAQxb,SAAS9iB,EAAOiiC,YAAY+T,kBAAkB,GAC3D,CACC,IAAIjuC,EAAMg2B,EAEVA,EAASG,EACTA,EAAQn2B,EAGL3vB,KAAKiqF,cAERnkC,EAAQ9lD,KAAK8sF,KAAKhnC,EAAQ9lD,KAAK6sF,SAAW,GAC1ClnC,EAAS3lD,KAAK8sF,KAAKnnC,EAAS3lD,KAAK6sF,SAAW,IAG7ChqF,EAAS,IAAIgoD,YAAY,EAAG,EAAG/E,EAAOH,OAGvC,CACC,IAAI0vG,EAAM,EAAIr1J,KAAK6sF,SACnBhqF,EAAS,IAAIgoD,YAAY,EAAG,EAAGwqG,EAAKA,KAKvC,OAAOxyJ,GAcR61I,QAAQh5I,UAAUiyJ,WAAa,SAAS3kG,EAAM8P,EAAQ24B,GAErD,OAAOz1F,KAAKs1J,YAAY,CAACtoG,GAAO,CAAC8P,GAAS24B,GAAS,IAepDijD,QAAQh5I,UAAU41J,YAAc,SAASl1F,EAAOtD,EAAQ24B,GAEvDA,EAAsB,MAAXA,EAAmBA,EAAUz1F,KAAKu1J,oBAE7Cv1J,KAAKomB,MAAMk7C,cACX,IAECthE,KAAK66I,aAAaz6E,EAAOtD,EAAQ24B,GACjCz1F,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ84B,aACvC,QAASlgB,EAAO,SAAUtD,IAE7B,QAEC98D,KAAKomB,MAAMo7C,YAGZ,OAAOpB,GAiDRs4E,QAAQh5I,UAAUm7I,aAAe,SAASz6E,EAAOtD,EAAQ24B,GAIxD,GAFAA,EAAsB,MAAXA,GAAmBA,EAEjB,MAATr1B,GAA2B,MAAVtD,GAAkBsD,EAAMx/D,QAAUk8D,EAAOl8D,OAC9D,CACCZ,KAAKomB,MAAMk7C,cACX,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjClJ,KAAKw1J,YAAYp1F,EAAMl3D,GAAI4zD,EAAO5zD,IAAI,EAAOusF,GAEzCz1F,KAAK4zJ,eAAexzF,EAAMl3D,KAE7BlJ,KAAK6zJ,aAAazzF,EAAMl3D,IAGzBlJ,KAAK8zJ,eAAe1zF,EAAMl3D,IAGvBlJ,KAAKqqJ,oBAERrqJ,KAAKygH,WAAWrgD,GAGjBpgE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ+4B,cACvC,QAASngB,EAAO,SAAUtD,IAE7B,QAEC98D,KAAKomB,MAAMo7C,eAkBdk3E,QAAQh5I,UAAU81J,YAAc,SAASxoG,EAAM8P,EAAQ24F,EAAgBhgE,GAEtE,IAAIO,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAEjC,GAAW,MAAPgpC,IAAgBA,EAAIh3C,GAAK8d,EAAO9d,GAAKg3C,EAAIprC,GAAKkS,EAAOlS,GACxDorC,EAAIlwC,OAASgX,EAAOhX,OAASkwC,EAAIrwC,QAAUmX,EAAOnX,QACnD,CAGC,GAFAqwC,EAAMA,EAAIxxE,SAELixI,GAAkBz/D,EAAIE,SAC3B,CACC,IAAI9hC,EAAS4hC,EAAI5hC,OAEH,MAAVA,IAEHA,EAAOpV,GAAK8d,EAAO9d,EAAIg3C,EAAIh3C,EAC3BoV,EAAOxJ,GAAKkS,EAAOlS,EAAIorC,EAAIprC,QAK5BorC,EAAIh3C,EAAI8d,EAAO9d,EACfg3C,EAAIprC,EAAIkS,EAAOlS,EAGhBorC,EAAIlwC,MAAQgX,EAAOhX,MACnBkwC,EAAIrwC,OAASmX,EAAOnX,OAEfqwC,EAAIE,WAAYl2F,KAAKomB,MAAMuvE,SAAS3oC,IAAUhtD,KAAKyzJ,+BAEvDz9D,EAAIh3C,EAAI9+C,KAAKwD,IAAI,EAAGsyF,EAAIh3C,GACxBg3C,EAAIprC,EAAI1qD,KAAKwD,IAAI,EAAGsyF,EAAIprC,IAGzB5qD,KAAKomB,MAAMk7C,cACX,IAEKm0B,GAEHz1F,KAAK01J,iBAAiB1oG,EAAMgpC,GAG7Bh2F,KAAKomB,MAAMk3F,YAAYtwD,EAAMgpC,GAC7Bh2F,KAAK21J,oBAAoB3oG,GAE1B,QAEChtD,KAAKomB,MAAMo7C,eAgBdk3E,QAAQh5I,UAAUg2J,iBAAmB,SAAS1oG,EAAMwuE,GAOnD,IALA,IAAIxlC,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAC7Bne,EAAK2sF,EAAO11E,MAAQkwC,EAAIlwC,MACxB/W,EAAKysF,EAAO71E,OAASqwC,EAAIrwC,OACzBgI,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAK41J,UAAU51J,KAAKomB,MAAMynC,WAAWb,EAAM9jD,GAAI2lC,EAAIE,GAAI,IAazD2pG,QAAQh5I,UAAUi2J,oBAAsB,SAAS3oG,GAIhD,IAFA,IAAIW,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAK8zJ,eAAe9zJ,KAAKomB,MAAMynC,WAAWb,EAAM9jD,KAiBlDwvI,QAAQh5I,UAAUk2J,UAAY,SAAS5oG,EAAMne,EAAIE,EAAI0mD,GAEpD,IAAIO,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAEjC,GAAW,MAAPgpC,EACJ,CACC,IAAIllD,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9DgpC,EAAMA,EAAIxxE,QAGV,IAAIw6B,EAAIg3C,EAAIh3C,EACR4L,EAAIorC,EAAIprC,EACRpE,EAAIwvC,EAAIlwC,MACR/+C,EAAIivF,EAAIrwC,OAEZqwC,EAAI7oC,MAAMte,EAAIE,EAAuC,SAAnCnnB,EAAMiiC,YAAYuoB,eAES,KAAzCxqD,EAAMiiC,YAAY+oB,oBAErBojB,EAAIlwC,MAAQU,EAAI3X,EAEiC,KAAzCjnB,EAAMiiC,YAAY+oB,sBAE1BojB,EAAIlwC,MAAQU,GAGiC,KAA1C5+B,EAAMiiC,YAAYgpB,qBAErBmjB,EAAIrwC,OAAS5+C,EAAIgoC,EAEiC,KAA1CnnB,EAAMiiC,YAAYgpB,uBAE1BmjB,EAAIrwC,OAAS5+C,GAGT/G,KAAKy8G,cAAczvD,KAEvBgpC,EAAIh3C,EAAIA,EACRg3C,EAAIprC,EAAIA,GAGJ5qD,KAAK61J,gBAAgB7oG,KAEzBgpC,EAAIlwC,MAAQU,EACZwvC,EAAIrwC,OAAS5+C,GAGV/G,KAAKomB,MAAMuvE,SAAS3oC,GAEvBhtD,KAAKw1J,YAAYxoG,EAAMgpC,GAAK,EAAMP,GAIlCz1F,KAAKomB,MAAMk3F,YAAYtwD,EAAMgpC,KAehC0iD,QAAQh5I,UAAUm0J,aAAe,SAAS7mG,GAEzC,GAAY,MAARA,EACJ,CACC,IAAI3mD,EAASrG,KAAKomB,MAAM2vE,UAAU/oC,GAC9BvyC,EAAIza,KAAKi2F,gBAAgB5vF,GAE7B,GAAc,MAAVA,GAAuB,MAALoU,IAAcza,KAAKy/G,gBAAgBp5G,GACzD,CACC,IAAI2vF,EAAMh2F,KAAKi2F,gBAAgBjpC,GAEpB,MAAPgpC,IAAgBA,EAAIE,WACtBz7E,EAAEqrC,MAAQkwC,EAAIh3C,EAAIg3C,EAAIlwC,OACvBrrC,EAAEkrC,OAASqwC,EAAIprC,EAAIorC,EAAIrwC,UAEvBlrC,EAAIA,EAAE+J,QAEN/J,EAAEqrC,MAAQ5lD,KAAKwD,IAAI+W,EAAEqrC,MAAOkwC,EAAIh3C,EAAIg3C,EAAIlwC,OACxCrrC,EAAEkrC,OAASzlD,KAAKwD,IAAI+W,EAAEkrC,OAAQqwC,EAAIprC,EAAIorC,EAAIrwC,QAE1C3lD,KAAK66I,aAAa,CAACx0I,GAAS,CAACoU,IAAI,OA0BrCi+H,QAAQh5I,UAAU0kF,YAAc,SAAShkB,EAAOvxB,EAAIE,EAAI3qC,EAAQ4hD,EAAK+5E,GAEpE,OAAO//H,KAAKqoH,UAAUjoD,EAAOvxB,EAAIE,GAAI,EAAM3qC,EAAQ4hD,EAAK+5E,IA4BzD2Y,QAAQh5I,UAAU2oH,UAAY,SAASjoD,EAAOvxB,EAAIE,EAAIvqB,EAAOpgB,EAAQ4hD,EAAK+5E,GAMzE,GAJAlxF,EAAY,MAANA,EAAcA,EAAK,EACzBE,EAAY,MAANA,EAAcA,EAAK,EACzBvqB,EAAkB,MAATA,GAAiBA,EAEb,MAAT47C,IAAwB,GAANvxB,GAAiB,GAANE,GAAWvqB,GAAmB,MAAVpgB,GACrD,CAECg8D,EAAQpgE,KAAKomB,MAAM29D,gBAAgB3jB,GAEnCpgE,KAAKomB,MAAMk7C,cACX,IAMC,IAFA,IAAIlL,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpB,IAAIogF,EAAapjC,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAE5C,MAAe,MAARA,EACP,CACC,GAAIoJ,EAAK/2D,IAAI2tD,GAEZ,OAAO,EAGRA,EAAOhtD,KAAKomB,MAAM2vE,UAAU/oC,GAG7B,OAAO,KAIJ87B,EAAU,GAEd,IAAS5/E,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI8sF,EAAMh2F,KAAKi2F,gBAAgB71B,EAAMl3D,IACjC7C,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IAE5B,MAAP8sF,GAAgBA,EAAIE,UAAcl2F,KAAKomB,MAAMjX,OAAO9I,KACtDijF,EAAWtpF,KAAKomB,MAAMi2F,YAAYh2G,GAAQ,KAC3CijF,EAAWtpF,KAAKomB,MAAMi2F,YAAYh2G,GAAQ,MAE3CyiF,EAAQ/3E,KAAKqvD,EAAMl3D,IAIrBk3D,EAAQ0oB,EAEJtkE,IAEH47C,EAAQpgE,KAAKgkF,WAAW5jB,EAAOpgE,KAAK81J,sBAAuB/1B,GAE7C,MAAV37H,IAEHA,EAASpE,KAAKmkF,qBAQhB,IAAIr7B,EAAW9oD,KAAKyzJ,6BAapB,GAXc,MAAVrvJ,GAEHpE,KAAK+1J,6BAA4B,GAGlC/1J,KAAKq6I,WAAWj6E,EAAOvxB,EAAIE,GAAKvqB,GAASxkB,KAAKg2J,sBACzCh2J,KAAKi2J,uBAAkC,MAAV7xJ,EAChCpE,KAAKk2J,yBAAqC,MAAV9xJ,GAElCpE,KAAK+1J,4BAA4BjtG,GAEnB,MAAV1kD,EACJ,CACC,IAAIhB,EAAQpD,KAAKomB,MAAMwnC,cAAcxpD,GACrCpE,KAAK26I,WAAWv6E,EAAOh8D,EAAQhB,EAAO,KAAM,MAAM,GAInDpD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ44B,WAAY,QAAShgB,EAC7D,KAAMvxB,EAAI,KAAME,EAAI,QAASvqB,EAAO,SAAUpgB,EAAQ,QAAS4hD,IAEjE,QAEChmD,KAAKomB,MAAMo7C,aAIb,OAAOpB,GAURs4E,QAAQh5I,UAAU26I,WAAa,SAASj6E,EAAOvxB,EAAIE,EAAIonH,EAAY9C,EAAWloJ,GAE7E,GAAa,MAATi1D,IAAwB,GAANvxB,GAAiB,GAANE,GACjC,CACC5jC,EAAoB,MAAVA,GAAkBA,EAE5BnL,KAAKomB,MAAMk7C,cACX,IAEK60F,GAEHn2J,KAAKo2J,gBAAgBh2F,GAGtB,IAAK,IAAIl3D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjClJ,KAAKq2J,cAAcj2F,EAAMl3D,GAAI2lC,EAAIE,GAE7B5jC,GAAUnL,KAAK4zJ,eAAexzF,EAAMl3D,IAEvClJ,KAAK6zJ,aAAazzF,EAAMl3D,IAEhBmqJ,GAERrzJ,KAAK8zJ,eAAe1zF,EAAMl3D,IAIxBlJ,KAAKsqJ,kBAERtqJ,KAAKygH,WAAWrgD,GAGjBpgE,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ64B,YACxC,QAASjgB,EAAO,KAAMvxB,EAAI,KAAME,EAAI,aAAconH,IAEpD,QAECn2J,KAAKomB,MAAMo7C,eAWdk3E,QAAQh5I,UAAU22J,cAAgB,SAASrpG,EAAMne,EAAIE,GAEpD,IAAIinD,EAAMh2F,KAAKomB,MAAM62F,YAAYjwD,GAEjC,GAAW,MAAPgpC,EACJ,CAYC,GAXAnnD,EAAK3mC,WAAW2mC,GAChBE,EAAK7mC,WAAW6mC,GAChBinD,EAAMA,EAAIxxE,QACVwxE,EAAInyB,UAAUh1B,EAAIE,GAEbinD,EAAIE,WAAYl2F,KAAKomB,MAAMuvE,SAAS3oC,IAAUhtD,KAAKyzJ,+BAEvDz9D,EAAIh3C,EAAI9+C,KAAKwD,IAAI,EAAGwE,WAAW8tF,EAAIh3C,IACnCg3C,EAAIprC,EAAI1qD,KAAKwD,IAAI,EAAGwE,WAAW8tF,EAAIprC,KAGhCorC,EAAIE,WAAal2F,KAAKomB,MAAMjX,OAAO69C,GACvC,CACC,IAAI3mD,EAASrG,KAAKomB,MAAM2vE,UAAU/oC,GAC9B+J,EAAQ,EAEZ,GAAI/2D,KAAKomB,MAAMuvE,SAAStvF,GACxB,CACC,IAAIyqC,EAAQ9wC,KAAK29D,KAAK5Q,SAAS1mD,GAC3BuhB,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAax1G,GAE9D0wD,EAAQ7Q,QAAQxb,SAAS9iB,EAAOiiC,YAAYiR,eAAgB,GAG7D,GAAa,GAAT/D,EACJ,CACC,IAAIJ,EAAMzQ,QAAQqQ,WAAWQ,GACzBS,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GACfqD,EAAK9T,QAAQ6T,gBAAgB,IAAIpP,QAAQ9b,EAAIE,GAAKyoB,EAAKE,EAAK,IAAI/M,QAAQ,EAAG,IAC/E9b,EAAKmrB,EAAGhb,EACRjQ,EAAKirB,EAAGpP,EAGS,MAAdorC,EAAI5hC,OAEP4hC,EAAI5hC,OAAS,IAAIzJ,QAAQ9b,EAAIE,IAI7BinD,EAAI5hC,OAAOpV,EAAI92C,WAAW8tF,EAAI5hC,OAAOpV,GAAKnQ,EAC1CmnD,EAAI5hC,OAAOxJ,EAAI1iD,WAAW8tF,EAAI5hC,OAAOxJ,GAAK7b,GAI5C/uC,KAAKomB,MAAMk3F,YAAYtwD,EAAMgpC,KAa/B0iD,QAAQh5I,UAAU42J,uBAAyB,SAAStpG,GAEnD,GAAY,MAARA,IAAiBhtD,KAAKomB,MAAMjX,OAAO69C,GACvC,CACC,IAAI3mD,EAASrG,KAAKomB,MAAM2vE,UAAU/oC,GAElC,GAAc,MAAV3mD,GAAkBA,GAAUrG,KAAKmkF,mBACrC,CACC,IAAI/jC,EAAIpgD,KAAKomB,MAAM62F,YAAY52G,GAE/B,GAAS,MAAL+5C,EACJ,CACC,IAAIpB,EAAI,EACJ4L,EAAI,EACJpE,EAAIpG,EAAE0F,MACN/+C,EAAIq5C,EAAEuF,OAEV,GAAI3lD,KAAKq/G,WAAWh5G,GACpB,CACC,IAAIo6C,EAAOzgD,KAAK8/G,aAAaz5G,GAEzByqC,EAAQ9wC,KAAK29D,KAAK5Q,SAAS1mD,GAC3BuhB,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAax1G,GAC1Di4B,EAAM4nB,QAAQxb,SAAS9iB,EAAOiiC,YAAYqS,gBAAiBrS,YAAY0R,gBACvES,EAA+D,GAAvD9V,QAAQxb,SAAS9iB,EAAOiiC,YAAYsS,YAAa,GACzDF,EAA+D,GAAvD/V,QAAQxb,SAAS9iB,EAAOiiC,YAAYuS,YAAa,GAE7D,GAAI99B,GAAOurB,YAAYyR,iBAAmBh9B,GAAOurB,YAAYmR,gBAC7D,CACC,IAAIrrC,EAAM8wB,EAAKqF,MACfrF,EAAKqF,MAAQrF,EAAKkF,OAClBlF,EAAKkF,OAASh2B,GAGV2O,GAAOurB,YAAY0R,iBAAmBU,GAAW39B,GAAOurB,YAAYmR,kBAAoBgB,GAC3F19B,GAAOurB,YAAYwR,gBAAkBY,GAAW39B,GAAOurB,YAAYyR,iBAAmBU,KAEvFhd,EAAIyB,EAAKqF,MACT8E,EAAInK,EAAKkF,QAGVa,GAAK/F,EAAKqF,MACV/+C,GAAK05C,EAAKkF,OAGX,OAAO,IAAIkF,YAAY7L,EAAG4L,EAAGpE,EAAGz/C,KAKnC,OAAO,MASR2xI,QAAQh5I,UAAU62J,sBAAwB,WAEzC,OAAOv2J,KAAKopJ,oBAgBb1Q,QAAQh5I,UAAUo0J,eAAiB,SAAS9mG,EAAMwpG,GAIjD,GAFAA,EAA0B,MAAbA,GAAqBA,EAEtB,MAARxpG,EACJ,CACC,IAAIgpC,EAAMh2F,KAAKi2F,gBAAgBjpC,GAE/B,GAAW,MAAPgpC,IAAgBh2F,KAAKy2J,gCAAkCzgE,EAAIE,UAC/D,CACC,IAAI7vF,EAASrG,KAAKomB,MAAM2vE,UAAU/oC,GAE9BtpD,GADO1D,KAAKi2F,gBAAgB5vF,GACtBrG,KAAKu2J,yBAGf,GAAW,MAAP7yJ,EACJ,CACC,IAAIkpF,EAAM5sF,KAAK4nH,2BAA2B,CAACvhH,IAAS,GAEzC,MAAPumF,IAEHlpF,EAAMmnD,YAAYoB,cAAcvoD,GAEhCA,EAAIs7C,GAAK4tC,EAAI5tC,EACbt7C,EAAIknD,GAAKgiC,EAAIhiC,GAIf,GAAI5qD,KAAK02J,iBAAiB1pG,GAC1B,CACC,IAAIr9B,EAAM3vB,KAAKs2J,uBAAuBtpG,GAEtC,GAAW,MAAPr9B,EACJ,CACC,IAAIgnI,EAAU32J,KAAK42J,WAAW5pG,GAE1B2pG,EAAU,IAEbhnI,EAAMk7B,YAAYoB,cAAct8B,GAEhCA,EAAIqvB,GAAKrvB,EAAIm2B,MAAQ6wG,EACrBhnI,EAAIi7B,GAAKj7B,EAAIg2B,OAASgxG,EACtBhnI,EAAIm2B,OAAS,EAAIn2B,EAAIm2B,MAAQ6wG,EAC7BhnI,EAAIg2B,QAAU,EAAIh2B,EAAIg2B,OAASgxG,GAIrB,MAAPjzJ,EAEHA,EAAMisB,GAINjsB,EAAMmnD,YAAYoB,cAAcvoD,GAChCA,EAAI6nD,UAAU57B,KAKjB,GAAW,MAAPjsB,EACJ,CACC,IAAI08D,EAAQ,CAACpT,GAEb,IAAKhtD,KAAKy/G,gBAAgBzyD,GAIzB,IAFA,IAAIs0C,EAAOthG,KAAKomB,MAAMo2G,eAAexvE,GAE5B9jD,EAAI,EAAGA,EAAIo4F,EAAK1gG,OAAQsI,IAE5BlJ,KAAK28G,cAAcrb,EAAKp4F,KAE3Bk3D,EAAMrvD,KAAKuwF,EAAKp4F,IAKnB,IAAI23F,EAAO7gG,KAAK4nH,2BAA2BxnD,GAAO,GAElD,GAAY,MAARygC,EACJ,CACC7K,EAAMA,EAAIxxE,QAGV,IAAIqqB,EAAK,EAELmnD,EAAIlwC,MAAQpiD,EAAIoiD,QAEnBjX,EAAKmnD,EAAIlwC,MAAQpiD,EAAIoiD,MACrBkwC,EAAIlwC,OAASjX,GAGVgyD,EAAK7hD,EAAI6hD,EAAK/6C,MAAQpiD,EAAIs7C,EAAIt7C,EAAIoiD,QAErCjX,GAAMgyD,EAAK7hD,EAAI6hD,EAAK/6C,MAAQpiD,EAAIs7C,EAAIt7C,EAAIoiD,MAAQjX,GAIjD,IAAIE,EAAK,EAELinD,EAAIrwC,OAASjiD,EAAIiiD,SAEpB5W,EAAKinD,EAAIrwC,OAASjiD,EAAIiiD,OACtBqwC,EAAIrwC,QAAU5W,GAGX8xD,EAAKj2C,EAAIi2C,EAAKl7C,OAASjiD,EAAIknD,EAAIlnD,EAAIiiD,SAEtC5W,GAAM8xD,EAAKj2C,EAAIi2C,EAAKl7C,OAASjiD,EAAIknD,EAAIlnD,EAAIiiD,OAAS5W,GAG/C8xD,EAAK7hD,EAAIt7C,EAAIs7C,IAEhBnQ,GAAMgyD,EAAK7hD,EAAIt7C,EAAIs7C,GAGhB6hD,EAAKj2C,EAAIlnD,EAAIknD,IAEhB7b,GAAM8xD,EAAKj2C,EAAIlnD,EAAIknD,GAGV,GAAN/b,GAAiB,GAANE,IAEVinD,EAAIE,UAGW,MAAdF,EAAI5hC,SAEP4hC,EAAI5hC,OAAS,IAAIzJ,SAGlBqrC,EAAI5hC,OAAOpV,GAAKnQ,EAChBmnD,EAAI5hC,OAAOxJ,GAAK7b,IAIhBinD,EAAIh3C,GAAKnQ,EACTmnD,EAAIprC,GAAK7b,IAIX/uC,KAAKomB,MAAMk3F,YAAYtwD,EAAMgpC,QAkBlC0iD,QAAQh5I,UAAU+gH,WAAa,SAASrgD,GAEvC,GAAa,MAATA,EACJ,CAIC,IAFA,IAAIhK,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpBlJ,KAAKomB,MAAMk7C,cACX,IAEC,IAASp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI6kD,EAAQ/tD,KAAKomB,MAAM4nC,SAASoS,EAAMl3D,IAEtC,GAAa,MAAT6kD,EAEH,IAAK,IAAIvgC,EAAI,EAAGA,EAAIugC,EAAMntD,OAAQ4sB,IAClC,CACC,IAAIsjB,EAAQ9wC,KAAK29D,KAAK5Q,SAASgB,EAAMvgC,IAEjCtpB,EAAmB,MAAT4sC,EAAiBA,EAAMohE,oBAAmB,GAAQlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAMvgC,IAAI,GACnGppB,EAAmB,MAAT0sC,EAAiBA,EAAMohE,oBAAmB,GAASlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAMvgC,IAAI,GAGnG4oC,EAAK/2D,IAAI6E,IAAYkyD,EAAK/2D,IAAI+E,IAElCpE,KAAK8nH,UAAU/5D,EAAMvgC,IAKxBxtB,KAAKygH,WAAWzgH,KAAKomB,MAAM03G,YAAY19D,EAAMl3D,MAG/C,QAEClJ,KAAKomB,MAAMo7C,eAcdk3E,QAAQh5I,UAAUooH,UAAY,SAASztD,GAEtC,IAAI27B,EAAMh2F,KAAKomB,MAAM62F,YAAY5iD,GAUjC,OAPW,MAAP27B,GAA6B,MAAdA,EAAI2P,QAAkB3P,EAAI2P,OAAO/kG,OAAS,IAE5Do1F,EAAMA,EAAIxxE,QACVwxE,EAAI2P,OAAS,GACb3lG,KAAKomB,MAAMk3F,YAAYjjD,EAAM27B,IAGvB37B,GAYRq+E,QAAQh5I,UAAUm3J,qBAAuB,SAAS5kH,EAAOg3F,EAAetjD,GAEvE,GAA2B,MAAvBsjD,EAAc/7E,MAClB,CACC,IAAI4P,EAAS98D,KAAK29D,KAAKkrE,mBAAmBI,GACtC7uC,EAAY6uC,EAAcrhH,MAAMiiC,YAAYqS,iBAEhD,GAAIk+B,GAAavwC,YAAYmR,iBAAmBo/B,GAAavwC,YAAYyR,gBACzE,CACCwB,EAAO9d,GAAK8d,EAAOhX,MAAQ,EAAIgX,EAAOnX,OAAS,EAC/CmX,EAAOlS,GAAKkS,EAAOnX,OAAS,EAAImX,EAAOhX,MAAQ,EAC/C,IAAIn2B,EAAMmtC,EAAOhX,MACjBgX,EAAOhX,MAAQgX,EAAOnX,OACtBmX,EAAOnX,OAASh2B,EAGjB,IAAIkuC,EAAQ3X,QAAQqQ,UAAU0yE,EAAc/7E,MAAMs8C,oBAElD,GAAa,GAAT3rC,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAEhBokE,EAAK,IAAIt3E,QAAQmS,EAAO9R,aAAc8R,EAAO7R,cACjDhZ,EAAQiU,QAAQ6T,gBAAgB9nB,EAAOulB,EAAKE,EAAKuqE,GAGlD,IAAI50E,EAAK,EACLC,EAAK,EACLze,EAAK,EACLE,EAAK,EAGT,GAAI/uC,KAAKkjE,WAAWyyB,SAASszC,EAAcj8E,MAC3C,CACC,IAAIgP,EAAQitE,EAAcrhH,MAAMiiC,YAAYsS,aACxCF,EAAQgtE,EAAcrhH,MAAMiiC,YAAYuS,aAS5C,GAN2B,MAAvB6sE,EAAc/7E,OAAgD,MAA/B+7E,EAAc/7E,MAAMi0C,UAEtDnlC,EAAoE,GAA5D9V,QAAQxb,SAASu+F,EAAcrhH,MAAO,eAAgB,IAAWo0C,EACzEC,EAAoE,GAA5D/V,QAAQxb,SAASu+F,EAAcrhH,MAAO,eAAgB,IAAWq0C,GAGtEm+B,GAAavwC,YAAYmR,iBAAmBo/B,GAAavwC,YAAYyR,gBACzE,CACK3rC,EAAMqsC,EACVA,EAAQC,EACRA,EAAQtsC,EAGLqsC,IAEH3O,GAAM,EACNxe,GAAMiuB,EAAOhX,OAGVmW,IAEH3O,GAAM,EACNve,GAAM+tB,EAAOnX,QAIf1T,EAAQ,IAAI0Y,SAAS1Y,EAAM+M,EAAI8d,EAAO9d,GAAKqO,EAAKxe,EAAKiuB,EAAO9d,GAAI/M,EAAM2Y,EAAIkS,EAAOlS,GAAK0C,EAAKve,EAAK+tB,EAAOlS,GAEvG,IAAI5L,EAAqB,GAAhB8d,EAAOhX,MAAc,EAAI5lD,KAAKm8D,MAA6B,KAAtBpqB,EAAM+M,EAAI8d,EAAO9d,GAAY8d,EAAOhX,OAAS,IACvF8E,EAAsB,GAAjBkS,EAAOnX,OAAe,EAAIzlD,KAAKm8D,MAA6B,KAAtBpqB,EAAM2Y,EAAIkS,EAAOlS,GAAYkS,EAAOnX,QAAU,IAE7F,OAAO,IAAIwmD,uBAAuB,IAAIxhD,QAAQ3L,EAAG4L,IAAI,GAGtD,OAAO,MAeR8tF,QAAQh5I,UAAUo3J,4BAA8B,SAAS18F,EAAUl2D,GAElE,OAAgB,MAAZk2D,GAAsC,MAAlBA,EAASlN,OAA2C,MAA1BkN,EAASlN,MAAMi0C,QAEzD/mC,EAASlN,MAAMi0C,QAAQwK,YAGxB,MAeR+sC,QAAQh5I,UAAUyjJ,wBAA0B,SAAS9oF,EAAMD,EAAUl2D,GAEpE,IAAI+tC,EAAQ,KACR+M,EAAIqb,EAAKzyC,MAAM,EAAWiiC,YAAY0jB,aAAe1jB,YAAY+jB,eAErE,GAAS,MAAL5uB,EACJ,CACC,IAAI4L,EAAIyP,EAAKzyC,MAAM,EAAWiiC,YAAY2jB,aAAe3jB,YAAYgkB,eAE5D,MAALjjB,IAEH3Y,EAAQ,IAAI0Y,QAAQziD,WAAW82C,GAAI92C,WAAW0iD,KAIhD,IAAIshD,GAAY,EACZr9D,EAAK,EAAGE,EAAK,EAejB,OAba,MAATkD,IAEHi6D,EAAYhmD,QAAQxb,SAAS2vB,EAAKzyC,MAAO,EAAWiiC,YAAY8jB,qBAC/D9jB,YAAYmkB,uBAAuB,GAGpCn/B,EAAK3mC,WAAWmyD,EAAKzyC,MAAM,EAAWiiC,YAAY4jB,cAAgB5jB,YAAYikB,iBAC9E/+B,EAAK7mC,WAAWmyD,EAAKzyC,MAAM,EAAWiiC,YAAY6jB,cAAgB7jB,YAAYkkB,iBAE9El/B,EAAK1mC,SAAS0mC,GAAKA,EAAK,EACxBE,EAAK5mC,SAAS4mC,GAAKA,EAAK,GAGlB,IAAIo9D,uBAAuBl6D,EAAOi6D,EAAW,KAAMr9D,EAAIE,IAkB/D2pG,QAAQh5I,UAAUq3J,wBAA0B,SAAS18F,EAAMD,EAAUl2D,EAAQu3D,GAE5E,GAAkB,MAAdA,EACJ,CACCz7D,KAAKomB,MAAMk7C,cAEX,IAEmB,MAAd7F,GAA0C,MAApBA,EAAWxpB,OAEpCjyC,KAAKqhE,cAAc,EAAWxX,YAAY0jB,aACzC1jB,YAAY+jB,cAAe,KAAM,CAACvT,IACnCr6D,KAAKqhE,cAAc,EAAWxX,YAAY2jB,aACzC3jB,YAAYgkB,cAAe,KAAM,CAACxT,IACnCr6D,KAAKqhE,cAAc,EAAWxX,YAAY4jB,cACzC5jB,YAAYikB,eAAgB,KAAM,CAACzT,IACpCr6D,KAAKqhE,cAAc,EAAWxX,YAAY6jB,cACzC7jB,YAAYkkB,eAAgB,KAAM,CAAC1T,IACpCr6D,KAAKqhE,cAAc,EAAWxX,YAAY8jB,qBACzC9jB,YAAYmkB,sBAAuB,KAAM,CAAC3T,KAEf,MAApBoB,EAAWxpB,QAEnBjyC,KAAKqhE,cAAc,EAAWxX,YAAY0jB,aACzC1jB,YAAY+jB,cAAenS,EAAWxpB,MAAM+M,EAAG,CAACqb,IACjDr6D,KAAKqhE,cAAc,EAAWxX,YAAY2jB,aACzC3jB,YAAYgkB,cAAepS,EAAWxpB,MAAM2Y,EAAG,CAACyP,IACjDr6D,KAAKqhE,cAAc,EAAWxX,YAAY4jB,cACzC5jB,YAAYikB,eAAgBrS,EAAW5sB,GAAI,CAACwrB,IAC7Cr6D,KAAKqhE,cAAc,EAAWxX,YAAY6jB,cACzC7jB,YAAYkkB,eAAgBtS,EAAW1sB,GAAI,CAACsrB,IAGxCoB,EAAWywC,UAOflsG,KAAKqhE,cAAc,EAAWxX,YAAY8jB,qBACzC9jB,YAAYmkB,sBAAuB,KAAM,CAAC3T,IAN3Cr6D,KAAKqhE,cAAc,EAAWxX,YAAY8jB,qBACzC9jB,YAAYmkB,sBAAuB,IAAK,CAAC3T,KAS7C,QAECr6D,KAAKomB,MAAMo7C,eAiBdk3E,QAAQh5I,UAAU2jJ,mBAAqB,SAASvnC,EAAQrgD,EAAYY,GAEnEA,EAAkB,MAATA,GAAiBA,EAC1B,IAAIpqB,EAAQ,KAEZ,GAAc,MAAV6pE,GAAsC,MAApBrgD,EAAWxpB,MACjC,CACC,IAAI6qB,EAAS98D,KAAK29D,KAAKkrE,mBAAmB/sB,GAChCpiD,EAAK,IAAI/O,QAAQmS,EAAO9R,aAAc8R,EAAO7R,cACnDmvC,EAAY0hB,EAAOl0F,MAAMiiC,YAAYqS,iBACrC1Q,EAAK,EAGQ,MAAb4uC,GAC6C,GADxBl0C,QAAQxb,SAASoxE,EAAOl0F,MAChDiiC,YAAYioB,6BAA8B,KAEtCsoB,GAAavwC,YAAYmR,gBAE5BxP,GAAM,IAEE4uC,GAAavwC,YAAYwR,eAEjC7P,GAAM,IAEE4uC,GAAavwC,YAAYyR,kBAEjC9P,GAAM,IAIH4uC,GAAavwC,YAAYmR,iBAC5Bo/B,GAAavwC,YAAYyR,iBAEzBwB,EAAO/Q,YAIT,IAAIoB,EAAQntD,KAAK29D,KAAKxQ,MACtBlb,EAAQ,IAAI0Y,QAAQmS,EAAO9d,EAAIyc,EAAWxpB,MAAM+M,EAAI8d,EAAOhX,MAAQ2V,EAAW5sB,GAAKse,EACjF2P,EAAOlS,EAAI6Q,EAAWxpB,MAAM2Y,EAAIkS,EAAOnX,OAAS8V,EAAW1sB,GAAKoe,GAGlE,IAAI1B,EAAKqwD,EAAOl0F,MAAMiiC,YAAYiR,iBAAmB,EAErD,GAAIW,EAAWywC,UACf,CACC,GAAU,GAAN1gD,EACJ,CAEC,IAAIgM,EAAM,EACNE,EAAM,EAEA,IAANlM,EAEHkM,EAAM,EAEQ,KAANlM,EAERgM,GAAO,EAEO,KAANhM,IAERkM,GAAO,GAGFzlB,EAAQiU,QAAQ6T,gBAAgB9nB,EAAOulB,EAAKE,EAAKgC,GAGxDznB,EAAQjyC,KAAK29D,KAAKpB,kBAAkBu/C,EAAQ7pE,GAAO,QAMnD,GAFAwZ,GAAMD,EAEFxrD,KAAKkjE,WAAWyyB,SAASmmB,EAAO9uD,MACpC,CACC,IAAIgP,EAAiD,GAAzC8/C,EAAOl0F,MAAMiiC,YAAYsS,aACjCF,EAAiD,GAAzC6/C,EAAOl0F,MAAMiiC,YAAYuS,aAGjB,MAAhB0/C,EAAO5uD,OAAyC,MAAxB4uD,EAAO5uD,MAAMi0C,UAExCnlC,EAA8D,GAArD9V,QAAQxb,SAASoxE,EAAOl0F,MAAO,eAAgB,IAAYo0C,EACpEC,EAA8D,GAArD/V,QAAQxb,SAASoxE,EAAOl0F,MAAO,eAAgB,IAAYq0C,GAGjED,IAEH/pB,EAAM+M,EAAI,EAAI8d,EAAO9R,aAAe/Y,EAAM+M,GAGvCid,IAEHhqB,EAAM2Y,EAAI,EAAIkS,EAAO7R,aAAehZ,EAAM2Y,GAM7C,GAAU,GAANa,GAAoB,MAATxZ,EACf,CACO,IAAI0kB,EAAMzQ,QAAQqQ,UAAU9K,GACxB+L,EAAMt3D,KAAKs3D,IAAIb,GACfe,EAAMx3D,KAAKw3D,IAAIf,GAEnB1kB,EAAQiU,QAAQ6T,gBAAgB9nB,EAAOulB,EAAKE,EAAKgC,IAUzD,OANI2C,GAAkB,MAATpqB,IAEZA,EAAM+M,EAAI9+C,KAAKm8D,MAAMpqB,EAAM+M,GAC3B/M,EAAM2Y,EAAI1qD,KAAKm8D,MAAMpqB,EAAM2Y,IAGrB3Y,GAkBRymG,QAAQh5I,UAAUs3J,YAAc,SAAS38F,EAAMD,EAAUl2D,EAAQu3D,GAEhEz7D,KAAKomB,MAAMk7C,cACX,IAEC,IAAIxY,EAAW9oD,KAAKomB,MAAMi2F,YAAYhiD,EAAMn2D,GAC5ClE,KAAK+zJ,cAAc15F,EAAMD,EAAUl2D,EAAQu3D,GAC3Cz7D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ65B,aACxC,OAAQhnB,EAAM,WAAYD,EAAU,SAAUl2D,EAC9C,WAAY4kD,IAEd,QAEC9oD,KAAKomB,MAAMo7C,YAGZ,OAAOnH,GAiBRq+E,QAAQh5I,UAAUq0J,cAAgB,SAAS15F,EAAMD,EAAUl2D,EAAQu3D,GAElE,GAAY,MAARpB,EACJ,CACCr6D,KAAKomB,MAAMk7C,cACX,IAEC,IAAIxY,EAAW9oD,KAAKomB,MAAMi2F,YAAYhiD,EAAMn2D,GAO5C,GAJAlE,KAAK+2J,wBAAwB18F,EAAMD,EAAUl2D,EAAQu3D,GAIjDz7D,KAAKi3J,iBACT,CACC,IAAItmJ,EAAK,KAEL3Q,KAAKi3H,OAAO78D,KAEfzpD,EAAKypD,EAAS0iE,QACd1iE,EAAWp6D,KAAKk3J,mBAAmB98F,EAAUl2D,IAI9C,IAAI7G,EAAM,EAAWwsD,YAAYijB,kBAChCjjB,YAAYkjB,kBACb/sE,KAAKqhE,cAAchkE,EAAKsT,EAAI,CAAC0pD,IAG9Br6D,KAAKomB,MAAM43G,YAAY3jE,EAAMD,EAAUl2D,GAEnClE,KAAKuqJ,qBAERvqJ,KAAK8nH,UAAUztD,GAGhBr6D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ85B,eACxC,OAAQjnB,EAAM,WAAYD,EAAU,SAAUl2D,EAC9C,WAAY4kD,IAEd,QAEC9oD,KAAKomB,MAAMo7C,eAedk3E,QAAQh5I,UAAU02J,gBAAkB,SAASh2F,GAE5C,GAAa,MAATA,EACJ,CACCpgE,KAAKomB,MAAMk7C,cACX,IAQC,IANA,IAAInU,EAAQntD,KAAK29D,KAAKxQ,MAClB5H,EAAKvlD,KAAK29D,KAAKkG,UAGfzN,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAGpB,IAASA,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIlJ,KAAKomB,MAAMjX,OAAOixD,EAAMl3D,IAC5B,CACC,IAAI8sF,EAAMh2F,KAAKomB,MAAM62F,YAAY78C,EAAMl3D,IAEvC,GAAW,MAAP8sF,EACJ,CACC,IAAIllD,EAAQ9wC,KAAK29D,KAAK5Q,SAASqT,EAAMl3D,IACjCw1G,EAAS1+G,KAAK29D,KAAK5Q,SACtB/sD,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,KAE5B,GAAa,MAAT4nC,GACO,MAAV4tE,EACD,CACC1oB,EAAMA,EAAIxxE,QAEV,IAAIqqB,GAAM6vE,EAAO9/C,OAAO5f,EACpBjQ,GAAM2vE,EAAO9/C,OAAOhU,EACpB4R,EAAM1rB,EAAM6qB,eAEZ/mD,EAAM5U,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,GAE3C,GAAW,MAAP0L,GAAe5U,KAAKm3J,qBAAqB/2F,EAAMl3D,GAAI0L,GAAK,GAC5D,CACC,MAAc,MAAPA,IAAgBwhD,EAAK/2D,IAAIuV,GAE/BA,EAAM5U,KAAKomB,MAAM2vE,UAAUnhF,GAGjB,MAAPA,IAEHohF,EAAIgsC,iBACH,IAAIr3E,QAAQ6R,EAAI,GAAGxd,EAAImO,EAAQ5H,EAAGvG,EAAInQ,EACrC2tB,EAAI,GAAG5R,EAAIuC,EAAQ5H,EAAGqF,EAAI7b,IAAK,GACjC/uC,KAAKomB,MAAM43G,YAAY59D,EAAMl3D,GAAI,MAAM,IAIzC,IAAIsgH,EAAMxpH,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,GAE3C,GAAW,MAAPsgH,GAAexpH,KAAKm3J,qBAAqB/2F,EAAMl3D,GAAIsgH,GAAK,GAC5D,CACC,MAAc,MAAPA,IAAgBpzD,EAAK/2D,IAAImqH,GAE/BA,EAAMxpH,KAAKomB,MAAM2vE,UAAUyzB,GAG5B,GAAW,MAAPA,EACJ,CACC,IAAIvhH,EAAIu0D,EAAI57D,OAAS,EACrBo1F,EAAIgsC,iBACH,IAAIr3E,QAAQ6R,EAAIv0D,GAAG+2C,EAAImO,EAAQ5H,EAAGvG,EAAInQ,EACrC2tB,EAAIv0D,GAAG2iD,EAAIuC,EAAQ5H,EAAGqF,EAAI7b,IAAK,GACjC/uC,KAAKomB,MAAM43G,YAAY59D,EAAMl3D,GAAI,MAAM,IAIzClJ,KAAKomB,MAAMk3F,YAAYl9C,EAAMl3D,GAAI8sF,MAMtC,QAECh2F,KAAKomB,MAAMo7C,eAedk3E,QAAQh5I,UAAU03J,eAAiB,WAElC,OAAOp3J,KAAK29D,KAAKmhD,aAqClB45B,QAAQh5I,UAAU2mJ,oBAAsB,SAASr5F,GAEhD,OAAO,MA4BR0rF,QAAQh5I,UAAUu3H,OAAS,SAASjqE,GAEnC,OAAO,GAcR0rF,QAAQh5I,UAAUw3J,mBAAqB,SAASlqG,EAAM9oD,GAErD,OAAOlE,KAAKomB,MAAM2vE,UAAU/oC,IAiB7B0rF,QAAQh5I,UAAU4iJ,sBAAwB,SAASt1F,GAElD,OAAO,MAeR0rF,QAAQh5I,UAAU23J,WAAa,SAASrqG,GAEvCA,EAAOA,GAAQhtD,KAAKstJ,mBAER,MAARtgG,GAAgBhtD,KAAKs3J,YAAYtqG,KAEpChtD,KAAK29D,KAAKmjF,eAAe9zF,GACzBhtD,KAAK+wD,mBAUP2nF,QAAQh5I,UAAU63J,UAAY,WAE7B,IAAIvlE,EAAOhyF,KAAKomB,MAAM+8C,UAClBzuC,EAAU10B,KAAKo3J,iBAEnB,GAAe,MAAX1iI,EACJ,CACC,IAAI5yB,EAAO9B,KAAKomB,MAAM2vE,UAAUrhE,GAGhC,MAAO5yB,GAAQkwF,IAAShyF,KAAKs3J,YAAYx1J,IACvC9B,KAAKomB,MAAM2vE,UAAUj0F,IAASkwF,EAE/BlwF,EAAO9B,KAAKomB,MAAM2vE,UAAUj0F,GAKzBA,GAAQkwF,GAAQhyF,KAAKomB,MAAM2vE,UAAUj0F,IAASkwF,EAEjDhyF,KAAK29D,KAAKmjF,eAAe,MAIzB9gJ,KAAK29D,KAAKmjF,eAAeh/I,GAG1B,IAAIgvC,EAAQ9wC,KAAK29D,KAAK5Q,SAASr4B,GAGlB,MAAToc,GAEH9wC,KAAKotJ,iBAAiB14H,KAWzBgkH,QAAQh5I,UAAUktJ,KAAO,WAExB,IAAIl4H,EAAU10B,KAAKo3J,iBAEnB,GAAe,MAAX1iI,EACJ,CACC10B,KAAK29D,KAAKmjF,eAAe,MACzB,IAAIhwG,EAAQ9wC,KAAK29D,KAAK5Q,SAASr4B,GAElB,MAAToc,GAEH9wC,KAAKotJ,iBAAiB14H,KAezBgkH,QAAQh5I,UAAU43J,YAAc,SAAStqG,GAExC,OAAgB,MAARA,GAaR0rF,QAAQh5I,UAAUklE,eAAiB,WAElC,OAAO5kE,KAAK29D,KAAKiH,kBAiBnB8zE,QAAQh5I,UAAUwpI,cAAgB,SAASl8E,EAAMq0F,EAAcmW,GAE9D,IAAIp3F,EAAQ,CAACpT,GAGTq0F,IAEHjhF,EAAQA,EAAMphE,OAAOgB,KAAKomB,MAAM4nC,SAAShB,KAG1C,IAAInqD,EAAS7C,KAAK29D,KAAKqzE,UAAU5wE,GAGjC,GAAIo3F,EAIH,IAFA,IAAI7pG,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAIymB,EAAM3vB,KAAKkpI,cAAclpI,KAAKomB,MAAMynC,WAAWb,EAAM9jD,GACxDm4I,GAAc,GAED,MAAVx+I,EAEHA,EAAO2D,IAAImpB,GAIX9sB,EAAS8sB,EAKZ,OAAO9sB,GAuCR61I,QAAQh5I,UAAUkoH,2BAA6B,SAASxnD,EAAOihF,GAE9DA,EAAgC,MAAhBA,GAAwBA,EACxC,IAAIx+I,EAAS,KAEb,GAAa,MAATu9D,EAEH,IAAK,IAAIl3D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIm4I,GAAgBrhJ,KAAKomB,MAAMuvE,SAASv1B,EAAMl3D,IAC9C,CAEC,IAAI8sF,EAAMh2F,KAAKi2F,gBAAgB71B,EAAMl3D,IAErC,GAAW,MAAP8sF,EACJ,CACC,IAAI6K,EAAO,KAEX,GAAI7gG,KAAKomB,MAAMjX,OAAOixD,EAAMl3D,IAC5B,CACC,IAAIuuJ,EAAW,SAASz9F,GAEb,MAANA,IAEQ,MAAPrqC,EAEHA,EAAM,IAAIk7B,YAAYmP,EAAGhb,EAAGgb,EAAGpP,EAAG,EAAG,GAIrCj7B,EAAInpB,IAAI,IAAIqkD,YAAYmP,EAAGhb,EAAGgb,EAAGpP,EAAG,EAAG,MAKI,MAA1C5qD,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,IAEpCuuJ,EAASzhE,EAAI+rC,kBAAiB,IAGgB,MAA3C/hI,KAAKomB,MAAMi2F,YAAYj8C,EAAMl3D,IAAI,IAEpCuuJ,EAASzhE,EAAI+rC,kBAAiB,IAG/B,IAAIvlE,EAAMw5B,EAAI2P,OAEd,GAAW,MAAPnpC,GAAeA,EAAI57D,OAAS,EAI/B,IAFA,IAAI+uB,EAAM,IAAIk7B,YAAY2R,EAAI,GAAGxd,EAAGwd,EAAI,GAAG5R,EAAG,EAAG,GAExCp9B,EAAI,EAAGA,EAAIgvC,EAAI57D,OAAQ4sB,IAE/BiqI,EAASj7F,EAAIhvC,IAIfqzE,EAAOlxE,MAGR,CACC,IAAItpB,EAASrG,KAAKomB,MAAM2vE,UAAU31B,EAAMl3D,IAExC,GAAI8sF,EAAIE,UAEP,GAAIl2F,KAAKomB,MAAMuvE,SAAStvF,IAAWA,GAAUrG,KAAK29D,KAAKmhD,YACvD,CACKnvF,EAAM3vB,KAAK4nH,2BAA2B,CAACvhH,IAAS,GAEzC,MAAPspB,IAEHkxE,EAAO,IAAIh2C,YAAYmrC,EAAIh3C,EAAIrvB,EAAIm2B,MAAOkwC,EAAIprC,EAAIj7B,EAAIg2B,OAAQqwC,EAAIlwC,MAAOkwC,EAAIrwC,QAEzEO,QAAQ18C,QAAQ42D,EAAO/5D,IAAW,IAErCw6F,EAAK7hD,GAAKrvB,EAAIqvB,EACd6hD,EAAKj2C,GAAKj7B,EAAIi7B,UASjB,GAFAi2C,EAAOh2C,YAAYoB,cAAc+pC,GAE7Bh2F,KAAKomB,MAAMuvE,SAAStvF,IAAW6/C,QAAQ18C,QAAQ42D,EAAO/5D,IAAW,EACrE,CACKspB,EAAM3vB,KAAK4nH,2BAA2B,CAACvhH,IAAS,GAEzC,MAAPspB,IAEHkxE,EAAK7hD,GAAKrvB,EAAIqvB,EACd6hD,EAAKj2C,GAAKj7B,EAAIi7B,GAKL,MAARi2C,GAA8B,MAAd7K,EAAI5hC,SAEvBysC,EAAK7hD,GAAKg3C,EAAI5hC,OAAOpV,EACrB6hD,EAAKj2C,GAAKorC,EAAI5hC,OAAOxJ,GAIX,MAARi2C,IAEW,MAAVh+F,EAEHA,EAASgoD,YAAYoB,cAAc40C,GAInCh+F,EAAO2D,IAAIq6F,KAQjB,OAAOh+F,GAcR61I,QAAQh5I,UAAU69I,QAAU,SAASvwF,GAEpChtD,KAAK29D,KAAKntD,MAAMw8C,EAAc,MAARA,GACtBhtD,KAAK29D,KAAK0gF,WACVr+I,KAAK+gJ,gBACL/gJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ+1B,WAY1Cm7D,QAAQh5I,UAAUotF,KAAO,SAASxvF,GAOjC,OALI0C,KAAKiqF,cAER3sF,EAAQ4C,KAAKm8D,MAAM/+D,EAAQ0C,KAAK6sF,UAAa7sF,KAAK6sF,UAG5CvvF,GAeRo7I,QAAQh5I,UAAU6wF,SAAW,SAAS1hD,EAAIE,GAEzC,GAAI/uC,KAAK8nJ,yBAA2B5hG,QAAQ6I,cAAc/uD,KAAK+9D,WAE9D/9D,KAAK+9D,UAAUI,YAActvB,EAC7B7uC,KAAK+9D,UAAUzV,WAAavZ,MAG7B,CACC,IAAI60B,EAAS5jE,KAAK29D,KAAK+pE,YAEvB,GAAI1nI,KAAKyjE,SAAW5Z,YAAY6Z,YAI/B,GAAU,GAAN70B,GAAiB,GAANE,GAYd,GATI6R,SAASE,MAEZ8iB,EAAO1rC,aAAa,YAAa,aAAe2W,EAAK,IAAME,EAAK,KAIhE60B,EAAO7lC,gBAAgB,aAGE,MAAtB/9B,KAAK03J,cACT,CACC,IAAI3kJ,EAAQ/S,KAAK03J,cAAcj6H,WAE/B,MAAgB,MAAT1qB,EACP,CACC,IAAIjR,EAAOiR,EAAM4lB,YACjB34B,KAAK+9D,UAAUrlC,YAAY3lB,GAC3BA,EAAQjR,EAG4B,MAAjC9B,KAAK03J,cAAcjhI,YAEtBz2B,KAAK03J,cAAcjhI,WAAWgC,YAAYz4B,KAAK03J,eAGhD13J,KAAK03J,cAAgB,KAErB13J,KAAK+9D,UAAUrlC,YAAYkrC,EAAOntC,YAElC1jB,EAAQ/S,KAAK23J,cAAcl6H,WAE3B,MAAgB,MAAT1qB,EACP,CACKjR,EAAOiR,EAAM4lB,YACjB34B,KAAK+9D,UAAUrlC,YAAY3lB,GAC3BA,EAAQjR,EAG4B,MAAjC9B,KAAK23J,cAAclhI,YAEtBz2B,KAAK23J,cAAclhI,WAAWgC,YAAYz4B,KAAK23J,eAGhD33J,KAAK23J,cAAgB,UAIvB,CAGC,GAFA/zF,EAAO1rC,aAAa,YAAa,aAAe2W,EAAK,IAAME,EAAK,KAEtC,MAAtB/uC,KAAK03J,cACT,CAEC13J,KAAK03J,cAAgBz8I,SAAS9b,cAAc,OAC5Ca,KAAK03J,cAAc9vI,MAAM44B,SAAW,WACpCxgD,KAAK03J,cAAc9vI,MAAMonC,SAAW,UAEpChvD,KAAK23J,cAAgB18I,SAAS9b,cAAc,OAC5Ca,KAAK23J,cAAc/vI,MAAM44B,SAAW,WACpCxgD,KAAK23J,cAAc/vI,MAAMonC,SAAW,UAEpC,IAAIt6B,EAAU10B,KAAK03J,cACf3kJ,EAAQ/S,KAAK+9D,UAAUtgC,WAE3B,MAAgB,MAAT1qB,EACP,CACKjR,EAAOiR,EAAM4lB,YAGb5lB,GAAS6wD,EAAOntC,WAEnB/B,EAAQgE,YAAY3lB,GAIpB2hB,EAAU10B,KAAK23J,cAGhB5kJ,EAAQjR,EAI4B,MAAjC9B,KAAK03J,cAAcj6H,YAEtBz9B,KAAK+9D,UAAUzlC,aAAat4B,KAAK03J,cAAe9zF,EAAOntC,YAGnB,MAAjCz2B,KAAK23J,cAAcl6H,YAEtBz9B,KAAK+9D,UAAUrlC,YAAY14B,KAAK23J,eAIlC33J,KAAK03J,cAAc9vI,MAAMknB,KAAOD,EAAK,KACrC7uC,KAAK03J,cAAc9vI,MAAMonB,IAAMD,EAAK,KACpC/uC,KAAK23J,cAAc/vI,MAAMknB,KAAOD,EAAK,KACrC7uC,KAAK23J,cAAc/vI,MAAMonB,IAAMD,EAAK,UAKrC60B,EAAOh8C,MAAMknB,KAAOD,EAAK,KACzB+0B,EAAOh8C,MAAMonB,IAAMD,EAAK,KAGzB/uC,KAAKksF,MAAQr9C,EACb7uC,KAAKmsF,MAAQp9C,EAEb/uC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw1B,QAS3C07D,QAAQh5I,UAAUk4J,OAAS,WAE1B53J,KAAK+iE,KAAK/iE,KAAKiqJ,aAQhBvR,QAAQh5I,UAAUm4J,QAAU,WAE3B73J,KAAK+iE,KAAK,EAAI/iE,KAAKiqJ,aAQpBvR,QAAQh5I,UAAUo4J,WAAa,WAEP,GAAnB93J,KAAK29D,KAAKxQ,MAEbntD,KAAK29D,KAAKmzB,aAAa,EAAG,IAI1B9wF,KAAK29D,KAAKkG,UAAU7kB,EAAI,EACxBh/C,KAAK29D,KAAKkG,UAAUjZ,EAAI,EAExB5qD,KAAK29D,KAAK69E,SAAS,KAUrB9C,QAAQh5I,UAAUs9I,OAAS,SAAS7vF,EAAOsP,GAE1Cz8D,KAAK+iE,KAAK5V,EAAQntD,KAAK29D,KAAKxQ,MAAOsP,IAiBpCi8E,QAAQh5I,UAAU+8D,OAAS,SAASwnC,EAAYC,EAAUxqC,EAAI+D,GAE7DwmC,EAA4B,MAAdA,GAAsBA,EACpCC,EAAwB,MAAZA,GAAoBA,EAChCxqC,EAAY,MAANA,EAAcA,EAAK,GACzB+D,EAAY,MAANA,EAAcA,EAAK,GAEzB,IAAI1O,EAAgB7I,QAAQ6I,cAAc/uD,KAAK+9D,WAC3C2I,EAAU,EAAI1mE,KAAKgwJ,YACnB+H,EAAK/3J,KAAK+9D,UAAUnX,YAAc8f,EAClChrC,EAAK17B,KAAK+9D,UAAUpX,aAAe+f,EACnC5J,EAAS98D,KAAK4kE,iBAEd5Y,EAAIhsD,KAAK29D,KAAKkG,UACdr8B,EAAIxnC,KAAK29D,KAAKxQ,MAEdte,EAAK,EAAekpH,EAAKj7F,EAAOhX,MAAQ,EACxC/W,EAAK,EAAarT,EAAKohC,EAAOnX,OAAS,EAE3C,GAAKoJ,EAML,CACC+N,EAAO9d,GAAKgN,EAAEhN,EACd8d,EAAOlS,GAAKoB,EAAEpB,EAEd,IAAI8zC,EAAK1+F,KAAK+9D,UAAU8nC,YACpBmyD,EAAKh4J,KAAK+9D,UAAUxV,aAEpBm2C,EAAKq5D,IAERlpH,EAAK,GAGFmpH,EAAKt8H,IAERqT,EAAK,GAGN/uC,KAAK29D,KAAKmzB,aAAa5wF,KAAKC,MAAM0uC,EAAK,EAAIiuB,EAAO9d,GAAI9+C,KAAKC,MAAM4uC,EAAK,EAAI+tB,EAAOlS,IACjF5qD,KAAK+9D,UAAUI,YAAcugC,EAAKq5D,GAAM,EACxC/3J,KAAK+9D,UAAUzV,WAAa0vG,EAAKt8H,GAAM,OAvBvC17B,KAAK29D,KAAKmzB,aAAa,EAAe5wF,KAAKC,MAAM6rD,EAAEhN,EAAI8d,EAAO9d,EAAIxX,EAAIqH,EAAK6qB,EAAKlyB,GAAKwkB,EAAEhN,EACtF,EAAa9+C,KAAKC,MAAM6rD,EAAEpB,EAAIkS,EAAOlS,EAAIpjB,EAAIuH,EAAK0uB,EAAKj2B,GAAKwkB,EAAEpB,IAiCjE8tF,QAAQh5I,UAAUqjE,KAAO,SAASqqC,EAAQ3wC,GAEzCA,EAAoB,MAAVA,EAAkBA,EAASz8D,KAAKmqJ,WAC1C,IAAIh9F,EAAQjtD,KAAKm8D,MAAMr8D,KAAK29D,KAAKxQ,MAAQigD,EAAS,KAAO,IACrDt8D,EAAQ9wC,KAAK29D,KAAK5Q,SAAS/sD,KAAKstJ,oBAGpC,GAFAlgD,EAASjgD,EAAQntD,KAAK29D,KAAKxQ,MAEvBntD,KAAKkqJ,4BAAuC,MAATp5G,EACvC,CACC,IAAIoa,EAAO,IAAIL,YAAY/Z,EAAMkO,EAAIouD,EAAQt8D,EAAM8Z,EAAIwiD,EACtDt8D,EAAMgV,MAAQsnD,EAAQt8D,EAAM6U,OAASynD,GAGtCptG,KAAK29D,KAAKxQ,MAAQA,EAEbntD,KAAKi4J,oBAAoB/sG,KAE7BlrD,KAAK29D,KAAK67E,aAGVx5I,KAAK29D,KAAK69E,SAASruF,QAIrB,CACC,IAAI4B,EAAgB7I,QAAQ6I,cAAc/uD,KAAK+9D,WAE/C,GAAItB,IAAW1N,EACf,CACC,IAAIlgB,EAAK7uC,KAAK+9D,UAAU5J,YACpBplB,EAAK/uC,KAAK+9D,UAAU7vB,aAExB,GAAIk/D,EAAS,EACb,CACC,IAAI7vG,GAAK6vG,EAAS,IAAc,EAARjgD,GACxBte,IAAOtxC,EACPwxC,IAAOxxC,MAGR,CACKA,GAAK,EAAI6vG,EAAS,IAAwB,EAAlBptG,KAAK29D,KAAKxQ,OACtCte,GAAMtxC,EACNwxC,GAAMxxC,EAGPyC,KAAK29D,KAAKqjF,kBAAkB7zF,EAC3BntD,KAAK29D,KAAKkG,UAAU7kB,EAAInQ,EACxB7uC,KAAK29D,KAAKkG,UAAUjZ,EAAI7b,OAG1B,CAEC,IAAIupB,EAAKt4D,KAAK29D,KAAKkG,UAAU7kB,EACzBuZ,EAAKv4D,KAAK29D,KAAKkG,UAAUjZ,EACzB0J,EAAKt0D,KAAK+9D,UAAUI,WACpB5J,EAAKv0D,KAAK+9D,UAAUzV,UAIxB,GAFAtoD,KAAK29D,KAAK69E,SAASruF,GAEf4B,EACJ,CACKlgB,EAAK,EACLE,EAAK,EAEL0tB,IAEH5tB,EAAK7uC,KAAK+9D,UAAU5J,aAAei5C,EAAS,GAAK,EACjDr+D,EAAK/uC,KAAK+9D,UAAU7vB,cAAgBk/D,EAAS,GAAK,GAGnDptG,KAAK+9D,UAAUI,YAAcn+D,KAAK29D,KAAKkG,UAAU7kB,EAAIsZ,GAAMt4D,KAAK29D,KAAKxQ,MAAQjtD,KAAKm8D,MAAM/H,EAAK84C,EAASv+D,GACtG7uC,KAAK+9D,UAAUzV,WAAatoD,KAAK29D,KAAKkG,UAAUjZ,EAAI2N,GAAMv4D,KAAK29D,KAAKxQ,MAAQjtD,KAAKm8D,MAAM9H,EAAK64C,EAASr+D,OAoBzG2pG,QAAQh5I,UAAUw4J,WAAa,SAAShtG,GAEvC,IAAIitG,EAASn4J,KAAK+9D,UAAUnX,YAAcsE,EAAKpF,MAC3CsyG,EAASp4J,KAAK+9D,UAAUpX,aAAeuE,EAAKvF,OAC5C0yG,EAAeF,EAASC,EAG5BltG,EAAKlM,EAAI9+C,KAAKwD,IAAI,EAAGwnD,EAAKlM,GAC1BkM,EAAKN,EAAI1qD,KAAKwD,IAAI,EAAGwnD,EAAKN,GAC1B,IAAI0tG,EAAYp4J,KAAKyD,IAAI3D,KAAK+9D,UAAU8nC,YAAa36C,EAAKlM,EAAIkM,EAAKpF,OAC/DyyG,EAAar4J,KAAKyD,IAAI3D,KAAK+9D,UAAUxV,aAAc2C,EAAKN,EAAIM,EAAKvF,QAOrE,GANAuF,EAAKpF,MAAQwyG,EAAYptG,EAAKlM,EAC9BkM,EAAKvF,OAAS4yG,EAAartG,EAAKN,EAK5BytG,EAAe,EACnB,CAEC,IAAIG,EAAYttG,EAAKvF,OAAS0yG,EAC1BI,GAAqBD,EAAYttG,EAAKvF,QAAU,EACpDuF,EAAKvF,OAAS6yG,EAId,IAAIE,EAAcx4J,KAAKyD,IAAIunD,EAAKN,EAAI6tG,GACpCvtG,EAAKN,EAAIM,EAAKN,EAAI8tG,EAGlBH,EAAar4J,KAAKyD,IAAI3D,KAAK+9D,UAAUxV,aAAc2C,EAAKN,EAAIM,EAAKvF,QACjEuF,EAAKvF,OAAS4yG,EAAartG,EAAKN,MAGjC,CAEC,IAAI+tG,EAAWztG,EAAKpF,MAAQuyG,EACxBO,GAAoBD,EAAWztG,EAAKpF,OAAS,EACjDoF,EAAKpF,MAAQ6yG,EAIb,IAAI3kC,EAAa9zH,KAAKyD,IAAIunD,EAAKlM,EAAI45G,GACnC1tG,EAAKlM,EAAIkM,EAAKlM,EAAIg1E,EAGlBskC,EAAYp4J,KAAKyD,IAAI3D,KAAK+9D,UAAU8nC,YAAa36C,EAAKlM,EAAIkM,EAAKpF,OAC/DoF,EAAKpF,MAAQwyG,EAAYptG,EAAKlM,EAG/B,IAAImO,EAAQntD,KAAK+9D,UAAUnX,YAAcsE,EAAKpF,MAC1C+yG,EAAW74J,KAAK29D,KAAKxQ,MAAQA,EAE5BjH,QAAQ6I,cAAc/uD,KAAK+9D,YAM/B/9D,KAAK29D,KAAK69E,SAASqd,GACnB74J,KAAK+9D,UAAUI,WAAaj+D,KAAKm8D,MAAMnR,EAAKlM,EAAImO,GAChDntD,KAAK+9D,UAAUzV,UAAYpoD,KAAKm8D,MAAMnR,EAAKN,EAAIuC,IAN/CntD,KAAK29D,KAAKqjF,kBAAkB6X,EAAW74J,KAAK29D,KAAKkG,UAAU7kB,EAAIkM,EAAKlM,EAAIh/C,KAAK29D,KAAKxQ,MAASntD,KAAK29D,KAAKkG,UAAUjZ,EAAIM,EAAKN,EAAI5qD,KAAK29D,KAAKxQ,QA6BxIurF,QAAQh5I,UAAUo5J,oBAAsB,SAAS9rG,EAAMyP,GAEtD,IAAIzd,GAAKh/C,KAAK29D,KAAKkG,UAAU7kB,EACzB4L,GAAK5qD,KAAK29D,KAAKkG,UAAUjZ,EAEzB9Z,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAE/B,GAAa,MAATlc,EACJ,CACC,IAAIgsB,EAAS,IAAIjS,YAAY7L,EAAIlO,EAAMkO,EAAG4L,EAAI9Z,EAAM8Z,EAAG9Z,EAAMgV,MAC5DhV,EAAM6U,QAEP,GAAI8W,GAA4B,MAAlBz8D,KAAK+9D,UACnB,CACC,IAAIvX,EAAIxmD,KAAK+9D,UAAUnX,YACnB7/C,EAAI/G,KAAK+9D,UAAUpX,aAEvBmW,EAAO9d,EAAI8d,EAAO9R,aAAexE,EAAI,EACrCsW,EAAOhX,MAAQU,EACfsW,EAAOlS,EAAIkS,EAAO7R,aAAelkD,EAAI,EACrC+1D,EAAOnX,OAAS5+C,EAGjB,IAAIw+C,EAAK,IAAIoF,QAAQ3qD,KAAK29D,KAAKkG,UAAU7kB,EAAGh/C,KAAK29D,KAAKkG,UAAUjZ,GAEhE,GAAI5qD,KAAKi4J,oBAAoBn7F,GAC7B,CAEC,IAAIi8F,EAAM,IAAIpuG,QAAQ3qD,KAAK29D,KAAKkG,UAAU7kB,EAAGh/C,KAAK29D,KAAKkG,UAAUjZ,GACjE5qD,KAAK29D,KAAKkG,UAAU7kB,EAAIuG,EAAGvG,EAC3Bh/C,KAAK29D,KAAKkG,UAAUjZ,EAAIrF,EAAGqF,EAC3B5qD,KAAK29D,KAAKmzB,aAAaioE,EAAI/5G,EAAG+5G,EAAInuG,MAcrC8tF,QAAQh5I,UAAUu4J,oBAAsB,SAAS/sG,GAEhD,IAAI8tG,GAAY,EAEhB,GAAY,MAAR9tG,EACJ,CACC,IAAI1E,EAAIxmD,KAAK+9D,UAAU5J,YACnBptD,EAAI/G,KAAK+9D,UAAU7vB,aAEb+qH,EAAa/4J,KAAKyD,IAAI6iD,EAAG0E,EAAKpF,OAC9BozG,EAAch5J,KAAKyD,IAAIoD,EAAGmkD,EAAKvF,QAEzC,GAAIO,QAAQ6I,cAAc/uD,KAAK+9D,WAC/B,CACC,IAAIj9D,EAAId,KAAK+9D,UACb7S,EAAKlM,GAAKh/C,KAAK29D,KAAKkG,UAAU7kB,EAC9BkM,EAAKN,GAAK5qD,KAAK29D,KAAKkG,UAAUjZ,EAC9B,IAAI/b,EAAK/tC,EAAEq9D,WAAajT,EAAKlM,EACzBm6G,EAAMj5J,KAAKwD,IAAImrC,EAAK/tC,EAAEq9D,WAAY,GAElCtvB,EAAK,EAER/tC,EAAEq9D,YAActvB,EAAK,GAIrBA,EAAKqc,EAAKlM,EAAIi6G,EAAan4J,EAAEq9D,WAAar9D,EAAE8lD,YAExC/X,EAAK,IAER/tC,EAAEq9D,YAActvB,EAAK,IAIvB,IAAIE,EAAKjuC,EAAEwnD,UAAY4C,EAAKN,EACxBwuG,EAAMl5J,KAAKwD,IAAI,EAAGqrC,EAAKjuC,EAAEwnD,WAEzBvZ,EAAK,EAERjuC,EAAEwnD,WAAavZ,EAAK,GAIpBA,EAAKmc,EAAKN,EAAIsuG,EAAcp4J,EAAEwnD,UAAYxnD,EAAE6lD,aAExC5X,EAAK,IAERjuC,EAAEwnD,WAAavZ,EAAK,IAIjB/uC,KAAK8nJ,yBAAmC,GAAPqR,GAAmB,GAAPC,GAEjDp5J,KAAK29D,KAAKmzB,aAAaqoE,EAAKC,OAI9B,CACC,IAAIp6G,GAAKh/C,KAAK29D,KAAKkG,UAAU7kB,EACzB4L,GAAK5qD,KAAK29D,KAAKkG,UAAUjZ,EAEzBpjB,EAAIxnC,KAAK29D,KAAKxQ,MAEdjC,EAAKlM,EAAIi6G,EAAaj6G,EAAIwH,IAE7BxmD,KAAK29D,KAAKkG,UAAU7kB,IAAMkM,EAAKlM,EAAIi6G,EAAazyG,EAAIxH,GAAKxX,EACzDwxH,GAAY,GAGT9tG,EAAKN,EAAIsuG,EAActuG,EAAI7jD,IAE9B/G,KAAK29D,KAAKkG,UAAUjZ,IAAMM,EAAKN,EAAIsuG,EAAcnyJ,EAAI6jD,GAAKpjB,EAC1DwxH,GAAY,GAGT9tG,EAAKlM,EAAIA,IAEZh/C,KAAK29D,KAAKkG,UAAU7kB,IAAMA,EAAIkM,EAAKlM,GAAKxX,EACxCwxH,GAAY,GAGT9tG,EAAKN,EAAKA,IAEb5qD,KAAK29D,KAAKkG,UAAUjZ,IAAMA,EAAIM,EAAKN,GAAKpjB,EACxCwxH,GAAY,GAGTA,IAEHh5J,KAAK29D,KAAK4/E,UAGwB,MAA9Bv9I,KAAKwxI,uBAERxxI,KAAKwxI,sBAAsB+L,YAM/B,OAAOyb,GAeRtgB,QAAQh5I,UAAUu2F,gBAAkB,SAASjpC,GAE5C,OAAOhtD,KAAKomB,MAAM62F,YAAYjwD,IAkB/B0rF,QAAQh5I,UAAUi9G,cAAgB,SAAS3vD,GAE1C,OAAOhtD,KAAKomB,MAAM4hC,UAAUgF,IAkB7B0rF,QAAQh5I,UAAU+/G,gBAAkB,SAASzyD,GAE5C,OAAOhtD,KAAKomB,MAAMuzG,YAAY3sE,IAe/B0rF,QAAQh5I,UAAU25J,kBAAoB,SAASrsG,GAE9C,OAAOhtD,KAAKomB,MAAMg5G,cAAcpyE,IAajC0rF,QAAQh5I,UAAU4jJ,aAAe,SAASjpF,GAEzC,IAAIkoE,EAAaloE,EAAKzyC,MAAMiiC,YAAYyjB,kBAExC,GAAkB,MAAdi1D,EAEH,OAAOA,EAGR,IAAI5yG,EAAM3vB,KAAK29D,KAAK8lF,aAAappF,GAEjC,OAAO1qC,GAAOiiH,YAAYiB,kBACzBljH,GAAOiiH,YAAYc,gBACnB/iH,GAAOiiH,YAAYe,YACnBhjH,GAAOiiH,YAAYgB,aACnBjjH,GAAOiiH,YAAYC,gBACnBliH,GAAOiiH,YAAYuD,eAYrBuD,QAAQh5I,UAAU45J,OAAS,SAASxoH,GAEnC,IAAIl8B,EAAMk8B,EAAMi4F,yBAAwB,GACpCvf,EAAM14E,EAAMi4F,yBAAwB,GAExC,OAAe,MAAPn0H,GAAeA,GAAO40G,GAS/BkvB,QAAQh5I,UAAU65J,aAAe,SAASvzG,GAEzC,OAAOwB,QAAQg0B,cAAcx1B,IAU9B0yF,QAAQh5I,UAAUouJ,wBAA0B,SAAS9nG,GAEpD,OAAO,GAUR0yF,QAAQh5I,UAAU0uJ,cAAgB,SAASpoG,GAE1C,OAAQpF,SAAe,OAAI4G,QAAQk0B,WAAW11B,GAAOwB,QAAQg0B,cAAcx1B,IAQ5E0yF,QAAQh5I,UAAU+sF,mBAAqB,SAASzmC,GAE/C,OAAc,MAAPA,IAAgBwB,QAAQm0B,UAAU31B,IAQ1C0yF,QAAQh5I,UAAU85J,mBAAqB,SAASxzG,GAE/C,OAAOwB,QAAQi0B,YAAYz1B,IAS5B0yF,QAAQh5I,UAAU+5J,sBAAwB,SAASzzG,GAElD,OAAO,GAaR0yF,QAAQh5I,UAAUg6J,gBAAkB,SAASrqG,GAE5CnJ,QAAQI,MAAM+I,IAefqpF,QAAQh5I,UAAUi6J,YAAc,SAASt/F,EAAMn2D,EAAQE,GAEtD,OAA4D,MAArDpE,KAAKgzJ,uBAAuB34F,EAAMn2D,EAAQE,IA4ClDs0I,QAAQh5I,UAAUszJ,uBAAyB,SAAS34F,EAAMn2D,EAAQE,GAEjE,GAAY,MAARi2D,IAAiBr6D,KAAKi2J,yBAAqC,MAAV/xJ,GAA4B,MAAVE,GAEtE,MAAO,GAGR,GAAY,MAARi2D,GAAsD,MAAtCr6D,KAAKomB,MAAMi2F,YAAYhiD,GAAM,IACT,MAAvCr6D,KAAKomB,MAAMi2F,YAAYhiD,GAAM,GAE7B,OAAO,KAIR,IAAKr6D,KAAKwqJ,YAActmJ,GAAUE,GAAoB,MAAVF,EAE3C,MAAO,GAIR,IAAKlE,KAAK45J,kBAAkB11J,EAAQE,GAEnC,MAAO,GAGR,GAAc,MAAVF,GAA4B,MAAVE,EACtB,CACC,IAAI3F,EAAQ,GAIZ,IAAKuB,KAAKyqJ,WACV,CACC,IAAI96H,EAAM3vB,KAAKomB,MAAMq+F,gBAAgBvgH,EAAQE,GAAQ,IAGjDurB,EAAI/uB,OAAS,GAAoB,GAAd+uB,EAAI/uB,QAAe+uB,EAAI,IAAM0qC,KAEnD57D,IAAUglD,YAAYpkD,IAAIW,KAAKurJ,2BAC9BvrJ,KAAKurJ,0BAA0B,MAOlC,IAAIsO,EAAY75J,KAAKomB,MAAMk4G,qBAAqBp6H,GAAQ,EAAMm2D,GAC1Dy/F,EAAW95J,KAAKomB,MAAMk4G,qBAAqBl6H,GAAQ,EAAOi2D,GAG9D,GAA2B,MAAvBr6D,KAAK84I,eAER,IAAK,IAAI5vI,EAAI,EAAGA,EAAIlJ,KAAK84I,eAAel4I,OAAQsI,IAChD,CACC,IAAIoQ,EAAMtZ,KAAK84I,eAAe5vI,GAAGqoC,MAAMvxC,KAAMq6D,EAAMn2D,EAClDE,EAAQy1J,EAAWC,GAET,MAAPxgJ,IAEH7a,GAAS6a,GAMRA,EAAMtZ,KAAK+5J,aAAa1/F,EAAMn2D,EAAQE,GAO1C,OALW,MAAPkV,IAEH7a,GAAS6a,GAGF7a,EAAMmC,OAAS,EAAKnC,EAAQ,KAGrC,OAAQuB,KAAuB,mBAAI,KAAO,IAe3C04I,QAAQh5I,UAAUq6J,aAAe,SAAS1/F,EAAMn2D,EAAQE,GAEvD,OAAO,MAmBRs0I,QAAQh5I,UAAUs6J,cAAgB,SAAShtG,EAAM9mD,GAEhD8mD,EAAgB,MAARA,EAAgBA,EAAOhtD,KAAKomB,MAAM+8C,UAC1Cj9D,EAAsB,MAAXA,EAAmBA,EAAU,IAAI7H,OAK5C,IAHA,IAAI47J,GAAU,EACVtsG,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAIymB,EAAM3vB,KAAKomB,MAAMynC,WAAWb,EAAM9jD,GAClCwB,EAAMxE,EAENlG,KAAKs3J,YAAY3nI,KAEpBjlB,EAAM,IAAIrM,QAGX,IAAIoS,EAAOzQ,KAAKg6J,cAAcrqI,EAAKjlB,GAEvB,MAAR+F,EAEHzQ,KAAKitJ,eAAet9H,EAAKlf,EAAKxG,QAAQ,MAAO,SAI7CjK,KAAKitJ,eAAet9H,EAAK,MAG1BsqI,EAAUA,GAAmB,MAARxpJ,EAGtB,IAAIy8I,EAAU,GAGVltJ,KAAKy/G,gBAAgBzyD,KAAUitG,IAElC/M,IAAYzpG,YAAYpkD,IAAIW,KAAKwrJ,mCAChCxrJ,KAAKwrJ,kCAAoC,MAIvCxrJ,KAAKomB,MAAMjX,OAAO69C,GAErBkgG,GAAWltJ,KAAKgzJ,uBAAuBhmG,EACvChtD,KAAKomB,MAAMi2F,YAAYrvD,GAAM,GAC7BhtD,KAAKomB,MAAMi2F,YAAYrvD,GAAM,KAAW,GAIxCkgG,GAAWltJ,KAAKk6J,uBAAuBltG,IAAS,GAIjD,IAAI1zC,EAAMtZ,KAAK07I,aAAa1uF,EAAM9mD,GAgBlC,OAdW,MAAPoT,IAEH4zI,GAAW5zI,GAOsB,MAA9BtZ,KAAKomB,MAAM2vE,UAAU/oC,IAExBhtD,KAAK29D,KAAK0gF,WAGH6O,EAAQtsJ,OAAS,IAAMq5J,EAAW/M,EAAU,MAcrDxU,QAAQh5I,UAAUw6J,uBAAyB,SAASltG,GAEnD,IAAImtG,EAAWn6J,KAAKomB,MAAMk4G,qBAAqBtxE,GAAM,GACjDotG,EAAUp6J,KAAKomB,MAAMk4G,qBAAqBtxE,GAAM,GAChD1vD,EAAQ0C,KAAKomB,MAAMskB,SAASsiB,GAC5BvuD,EAAQ,GAEZ,GAA2B,MAAvBuB,KAAK84I,eAER,IAAK,IAAI5vI,EAAI,EAAGA,EAAIlJ,KAAK84I,eAAel4I,OAAQsI,IAChD,CACC,IAAImxJ,EAAOr6J,KAAK84I,eAAe5vI,GAE3BmxJ,EAAKn2J,QAAUgiD,QAAQwJ,OAAOpyD,EAAO+8J,EAAK1jJ,KAC7C0jJ,EAAKtkI,KAAMskI,EAAK/8J,SAAW68J,EAAWE,EAAK32J,KAC3Cy2J,EAAWE,EAAK12J,KAEhBlF,GAAS47J,EAAKvgB,WAAa,MAElBugB,EAAKn2J,QAAUgiD,QAAQwJ,OAAOpyD,EAAO+8J,EAAK1jJ,KAClD0jJ,EAAKtkI,KAAMskI,EAAK/8J,SAAW88J,EAAUC,EAAK32J,KAC1C02J,EAAUC,EAAK12J,OAEhBlF,GAAS47J,EAAKvgB,WAAa,MAK9B,OAAQr7I,EAAMmC,OAAS,EAAKnC,EAAQ,MAerCi6I,QAAQh5I,UAAUg8I,aAAe,SAAS1uF,EAAM9mD,GAE/C,OAAO,MAYRwyI,QAAQh5I,UAAUmiJ,mBAAqB,WAEtC,OAAO7hJ,KAAKw0F,iBAYbkkD,QAAQh5I,UAAU46J,mBAAqB,SAASnyE,GAE/CnoF,KAAKw0F,gBAAkBrM,GASxBuwD,QAAQh5I,UAAUqwI,gBAAkB,SAASj/F,GAE5C,GAAa,MAATA,GAAiB9wC,KAAKgwI,iBAAmBhwI,KAAKkjE,WAAW/zD,OAAO2hC,EAAMkc,MAC1E,CACC,IAAIr9B,EAAM3vB,KAAKy/G,gBAAgB3uE,EAAMkc,MAErC,GAAIhtD,KAAK60J,eAAe/jH,EAAMkc,MAAOr9B,GAEpC,OAAO,EAAQ3vB,KAAKorJ,eAAiBprJ,KAAKqrJ,cAI5C,OAAO,MA4BR3S,QAAQh5I,UAAU8tJ,qBAAuB,SAASxgG,GAEjD,IAAI1vD,EAAQ0C,KAAKomB,MAAMskB,SAASsiB,GAEhC,GAAa,MAAT1vD,EACJ,CACC,GAAI4oD,QAAQwJ,OAAOpyD,GAElB,OAAOA,EAAMqyD,SAET,GAA8B,mBAAnBryD,EAAc,SAE7B,OAAOA,EAAMkE,WAIf,MAAO,IAuDRk3I,QAAQh5I,UAAUuvI,SAAW,SAASjiF,GAErC,IAAInqD,EAAS,GAEb,GAAI7C,KAAK8qJ,eAAyB,MAAR99F,EAC1B,CACC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAEzD9G,QAAQxb,SAAS9iB,EAAOiiC,YAAY4lB,eAAe,KAEvD5sE,EAAS7C,KAAKwtJ,qBAAqBxgG,IAIrC,OAAOnqD,GAaR61I,QAAQh5I,UAAU0vI,YAAc,SAASpiF,GAExC,OAAOhtD,KAAKu6J,gBAQb7hB,QAAQh5I,UAAU66J,aAAe,WAEhC,OAAOv6J,KAAK+qJ,YAQbrS,QAAQh5I,UAAU86J,cAAgB,SAASl9J,GAE1C0C,KAAK+qJ,WAAaztJ,GAgDnBo7I,QAAQh5I,UAAU2sI,WAAa,SAASr/E,GAEvC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAiB,MAATplC,GAAyD,QAAxCA,EAAMiiC,YAAYokB,oBAe5CyqE,QAAQh5I,UAAU4vI,eAAiB,SAAStiF,GAE3C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAiB,MAATplC,GAAsD,UAArCA,EAAMiiC,YAAYwjB,iBAsB5CqrE,QAAQh5I,UAAU+6J,WAAa,SAAS3pH,EAAO59B,EAAM8rC,EAAG4L,GAEvD,IAAI8vG,EAAM,KAEV,GAAa,MAAT5pH,EACJ,CAqBC,GAnBqB,MAAjBA,EAAM+0F,SAAoB3yH,GAAQ49B,EAAM+0F,QAAQ3yH,MACnDA,EAAKujB,YAAcqa,EAAM+0F,QAAQ3yH,OAEjCwnJ,EAAM16J,KAAKyrJ,uBACXiP,EAAMx0G,QAAQuL,aAAahO,YAAYpkD,IAAIq7J,IAAQA,GAAKzwJ,QAAQ,OAAQ,SAG9D,MAAPywJ,GAAiC,MAAlB5pH,EAAMqmD,UAExBrmD,EAAMqmD,SAASluC,OAAM,SAASt4C,EAAIu8C,GAGtB,MAAPwtG,GAAgBxnJ,GAAQg6C,EAAMh6C,MAAQA,EAAKujB,YAAcy2B,EAAMh6C,OAElEwnJ,EAAMxtG,EAAMw4E,QAAQlkI,eAKZ,MAAPk5J,EACJ,CACC,IAAI5gJ,EAAU9Z,KAAKwxI,sBAAsBmpB,WAAW7pH,EAAMkc,MAE3C,MAAXlzC,GAAwD,mBAA9BA,EAAyB,oBAEtD4gJ,EAAM5gJ,EAAQ8gJ,kBAAkB1nJ,IAIvB,MAAPwnJ,IAEHA,EAAM16J,KAAK66J,kBAAkB/pH,EAAMkc,OAIrC,OAAO0tG,GAyBRhiB,QAAQh5I,UAAUm7J,kBAAoB,SAAS7tG,GAE9C,IAAI0tG,EAAM,KAWV,OAPCA,EAFW,MAAR1tG,GAAmC,MAAnBA,EAAKytG,WAElBztG,EAAKytG,aAILz6J,KAAKwtJ,qBAAqBxgG,GAG1B0tG,GAaRhiB,QAAQh5I,UAAUwoI,eAAiB,SAASl7E,GAE3C,OAAO,MAaR0rF,QAAQh5I,UAAUo7J,uBAAyB,SAASn1E,GAEnD,OAAO3lF,KAAK+6J,iBAAiBp1E,EAAGzN,YAajCwgE,QAAQh5I,UAAUq7J,iBAAmB,SAAS/tG,GAE7C,OAAO,MAeR0rF,QAAQh5I,UAAUogH,aAAe,SAASmuC,GAEzC,IAAIprJ,EAAS,IAAIgoD,YACb/Z,EAAQ9wC,KAAK29D,KAAK5Q,SAASkhG,GAC3BrmI,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAaoyC,GAE9D,GAAa,MAATrmI,EACJ,CACC,IAAI64B,EAAOprB,SAAS6wB,QAAQxb,SAAS9iB,EACpCiiC,YAAY6T,gBAAiB7T,YAAYoiB,oBAEtC/lB,QAAQxb,SAAS9iB,EAAOiiC,YAAY+T,kBAAkB,GAEzD/6D,EAAO8iD,OAASlF,EAIhB59C,EAAOijD,MAAQrF,EAIjB,OAAO59C,GAcR61I,QAAQh5I,UAAU22F,SAAW,SAASvlD,GAErC,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAAiBkpB,EAAMlpB,MAAMiiC,YAAYulB,aAAe,MAexFspE,QAAQh5I,UAAU2vI,iBAAmB,SAASv+F,GAE7C,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAC7BkpB,EAAMlpB,MAAMiiC,YAAY+kB,uBACzB/kB,YAAYuY,aAAgB,MAe9Bs2E,QAAQh5I,UAAU2uI,kBAAoB,SAASv9F,GAE9C,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAAiBkpB,EAAMlpB,MAAMiiC,YAAYmmB,uBAAyB,MAelG0oE,QAAQh5I,UAAU4uI,0BAA4B,SAASx9F,GAEtD,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAAiBkpB,EAAMlpB,MAAMiiC,YAAYqmB,+BAAiC,MAc1GwoE,QAAQh5I,UAAU0uI,kBAAoB,SAASt9F,GAE9C,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAAiBkpB,EAAMlpB,MAAMiiC,YAAYimB,uBAAyB,MAclG4oE,QAAQh5I,UAAU6uI,kBAAoB,SAASz9F,GAE9C,OAAiB,MAATA,GAAgC,MAAfA,EAAMlpB,MAAiBkpB,EAAMlpB,MAAMiiC,YAAYkmB,uBAAyB,MAQlG2oE,QAAQh5I,UAAUswJ,UAAY,WAE7B,OAAOhwJ,KAAKukE,QAYbm0E,QAAQh5I,UAAUs7J,UAAY,SAAS19J,GAEtC0C,KAAKukE,OAASjnE,GAcfo7I,QAAQh5I,UAAU2/G,WAAa,SAAUryD,GAExC,GAAY,MAARA,GAEChtD,KAAKomB,MAAM2vE,UAAU/oC,IAAShtD,KAAKomB,MAAM+8C,UAC7C,CACC,IAAIryB,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,GAAa,MAATplC,IAAkB5nB,KAAKomB,MAAMjX,OAAO69C,GAEvC,OAAOplC,EAAMiiC,YAAYopB,cAAgBppB,YAAY0qB,eAKxD,OAAO,GAYRmkE,QAAQh5I,UAAUu7J,kBAAoB,WAErC,OAAOj7J,KAAKwpJ,iBAYb9Q,QAAQh5I,UAAUw7J,mBAAqB,SAAS59J,GAE/C0C,KAAKwpJ,gBAAkBlsJ,GAQxBo7I,QAAQh5I,UAAUyuD,UAAY,WAE7B,OAAOnuD,KAAK0pF,SAabgvD,QAAQh5I,UAAU2qF,WAAa,SAAS/sF,GAEvC0C,KAAK0pF,QAAUpsF,GAQhBo7I,QAAQh5I,UAAUy7J,gBAAkB,WAEnC,OAAOn7J,KAAK2nJ,eAYbjP,QAAQh5I,UAAU07J,iBAAmB,SAAS99J,GAE7C0C,KAAK2nJ,cAAgBrqJ,GAQtBo7I,QAAQh5I,UAAU6sI,yBAA2B,WAE5C,OAAOvsI,KAAK4nJ,wBAQblP,QAAQh5I,UAAU27J,0BAA4B,SAAS/9J,GAEtD0C,KAAK4nJ,uBAAyBtqJ,GAQ/Bo7I,QAAQh5I,UAAUosI,wBAA0B,WAE3C,OAAO9rI,KAAK6nJ,uBAQbnP,QAAQh5I,UAAU47J,yBAA2B,SAASh+J,GAErD0C,KAAK6nJ,sBAAwBvqJ,GAc9Bo7I,QAAQh5I,UAAU67J,aAAe,SAASvuG,GAEzC,IAAII,EAAWptD,KAAKomB,MAAM62F,YAAYjwD,GAEtC,OAAOhtD,KAAKw7J,iBAAgC,MAAZpuG,GAAoBptD,KAAKomB,MAAMuvE,SAAS3oC,IAASI,EAAS8oC,UAc3FwiD,QAAQh5I,UAAU87J,cAAgB,WAEjC,OAAOx7J,KAAKioJ,aAabvP,QAAQh5I,UAAU+7J,eAAiB,SAASn+J,GAE3C0C,KAAKioJ,YAAc3qJ,GAQpBo7I,QAAQh5I,UAAUg8J,kBAAoB,SAASt7F,GAE9C,OAAOpgE,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAK27J,gBAAgB3uG,QAe9B0rF,QAAQh5I,UAAUi8J,gBAAkB,SAAS3uG,GAE5C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAK47J,oBAA4D,GAAtCh0I,EAAMiiC,YAAYkpB,kBASrD2lE,QAAQh5I,UAAUk8J,iBAAmB,WAEpC,OAAO57J,KAAKkoJ,gBAcbxP,QAAQh5I,UAAUm8J,kBAAoB,SAASv+J,GAE9C0C,KAAKkoJ,eAAiB5qJ,GAQvBo7I,QAAQh5I,UAAUokF,mBAAqB,SAAS1jB,GAE/C,OAAOpgE,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAK87J,cAAc9uG,QAc5B0rF,QAAQh5I,UAAUo8J,cAAgB,SAAS9uG,GAE1C,OAAOhtD,KAAK+nJ,eAQbrP,QAAQh5I,UAAUwkF,mBAAqB,SAAS9jB,GAE/C,OAAOpgE,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAK+7J,cAAc/uG,QAc5B0rF,QAAQh5I,UAAUq8J,cAAgB,SAAS/uG,GAE1C,OAAOhtD,KAAKgoJ,eA+BbtP,QAAQh5I,UAAUsqI,iBAAmB,SAASh9E,GAE7C,OAAOhtD,KAAKg8J,qBAQbtjB,QAAQh5I,UAAUs8J,kBAAoB,WAErC,OAAOh8J,KAAK4oJ,iBAQblQ,QAAQh5I,UAAUu8J,mBAAqB,SAAS3+J,GAE/C0C,KAAK4oJ,gBAAkBtrJ,GAQxBo7I,QAAQh5I,UAAUu0J,kBAAoB,SAAS7zF,GAE9C,OAAOpgE,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAKk8J,gBAAgBlvG,QAe9B0rF,QAAQh5I,UAAUw8J,gBAAkB,SAASlvG,GAE5C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKm8J,oBAA4D,GAAtCv0I,EAAMiiC,YAAYmpB,kBAQrD0lE,QAAQh5I,UAAUy8J,iBAAmB,WAEpC,OAAOn8J,KAAKooJ,gBAYb1P,QAAQh5I,UAAU08J,kBAAoB,SAAS9+J,GAE9C0C,KAAKooJ,eAAiB9qJ,GAcvBo7I,QAAQh5I,UAAU28J,eAAiB,SAASrvG,GAE3C,OAAQhtD,KAAKu7J,aAAavuG,KACvBhtD,KAAKomB,MAAMjX,OAAO69C,IAAShtD,KAAKsoJ,mBACjCtoJ,KAAKomB,MAAMuvE,SAAS3oC,IAAShtD,KAAKuoJ,sBAarC7P,QAAQh5I,UAAU48J,gBAAkB,SAAStvG,GAE5C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAA6C,GAAtCplC,EAAMiiC,YAAYipB,kBAQ1B4lE,QAAQh5I,UAAU68J,gBAAkB,SAASn8F,GAE5C,OAAOpgE,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAKy8G,cAAczvD,QAe5B0rF,QAAQh5I,UAAU+8G,cAAgB,SAASzvD,GAE1C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKw8J,mBAAqBx8J,KAAKu7J,aAAavuG,IAA6C,GAApCplC,EAAMiiC,YAAY6oB,gBAQ/EgmE,QAAQh5I,UAAU88J,eAAiB,WAElC,OAAOx8J,KAAKqoJ,cAab3P,QAAQh5I,UAAU+8J,gBAAkB,SAASn/J,GAE5C0C,KAAKqoJ,aAAe/qJ,GAQrBo7I,QAAQh5I,UAAU6qF,cAAgB,WAEjC,OAAOvqF,KAAKiqF,aAYbyuD,QAAQh5I,UAAU8qF,eAAiB,SAASltF,GAE3C0C,KAAKiqF,YAAc3sF,GAQpBo7I,QAAQh5I,UAAUu3J,eAAiB,WAElC,OAAOj3J,KAAKumJ,cAYb7N,QAAQh5I,UAAUg9J,gBAAkB,SAASp/J,GAE5C0C,KAAKumJ,aAAejpJ,GAQrBo7I,QAAQh5I,UAAUi9J,YAAc,WAE/B,OAAO38J,KAAK6sF,UAQb6rD,QAAQh5I,UAAUk9J,YAAc,SAASt/J,GAExC0C,KAAK6sF,SAAWvvF,GAQjBo7I,QAAQh5I,UAAUm9J,aAAe,WAEhC,OAAO78J,KAAK0yH,WAQbgmB,QAAQh5I,UAAUo9J,aAAe,SAASx/J,GAEzC0C,KAAK0yH,UAAYp1H,GAQlBo7I,QAAQh5I,UAAUq9J,sBAAwB,WAEzC,OAAO/8J,KAAKuoJ,qBAQb7P,QAAQh5I,UAAUs9J,uBAAyB,SAAS1/J,GAEnD0C,KAAKuoJ,oBAAsBjrJ,GAQ5Bo7I,QAAQh5I,UAAUu9J,oBAAsB,WAEvC,OAAOj9J,KAAKsoJ,mBAQb5P,QAAQh5I,UAAUw9J,qBAAuB,SAAS5/J,GAEjD0C,KAAKsoJ,kBAAoBhrJ,GAQ1Bo7I,QAAQh5I,UAAUy9J,kBAAoB,WAErC,OAAOn9J,KAAKirJ,iBAabvS,QAAQh5I,UAAU09J,mBAAqB,SAAS9/J,GAE/C0C,KAAKirJ,gBAAkB3tJ,GAQxBo7I,QAAQh5I,UAAUwuJ,2BAA6B,WAE9C,OAAOluJ,KAAKgrJ,0BAcbtS,QAAQh5I,UAAU29J,4BAA8B,SAAS//J,GAExD0C,KAAKgrJ,yBAA2B1tJ,GAQjCo7I,QAAQh5I,UAAU49J,aAAe,WAEhC,OAAOt9J,KAAKyqJ,YAcb/R,QAAQh5I,UAAU69J,cAAgB,SAASjgK,GAE1C0C,KAAKyqJ,WAAantJ,GAQnBo7I,QAAQh5I,UAAU89J,aAAe,WAEhC,OAAOx9J,KAAKwqJ,YAab9R,QAAQh5I,UAAU+9J,sBAAwB,SAASngK,GAElD0C,KAAK2qJ,mBAAqBrtJ,GAQ3Bo7I,QAAQh5I,UAAUu2J,qBAAuB,WAExC,OAAOj2J,KAAK2qJ,oBAYbjS,QAAQh5I,UAAUg+J,oBAAsB,SAASpgK,GAEhD0C,KAAK0qJ,iBAAmBptJ,GAQzBo7I,QAAQh5I,UAAUi+J,mBAAqB,WAEtC,OAAO39J,KAAK0qJ,kBAcbhS,QAAQh5I,UAAUk+J,qBAAuB,SAAStgK,GAEjD0C,KAAK4qJ,kBAAoBttJ,GAQ1Bo7I,QAAQh5I,UAAUo2J,oBAAsB,WAEvC,OAAO91J,KAAK4qJ,mBAYblS,QAAQh5I,UAAUm+J,cAAgB,SAASvgK,GAE1C0C,KAAKwqJ,WAAaltJ,GAQnBo7I,QAAQh5I,UAAUs2J,mBAAqB,WAEtC,OAAOh2J,KAAK6qJ,kBAcbnS,QAAQh5I,UAAUo+J,oBAAsB,SAASxgK,GAEhD0C,KAAK6qJ,iBAAmBvtJ,GAQzBo7I,QAAQh5I,UAAU6sF,cAAgB,WAEjC,OAAOvsF,KAAKwoJ,aAcb9P,QAAQh5I,UAAUq+J,eAAiB,SAASzgK,GAE3C0C,KAAKwoJ,YAAclrJ,GAQpBo7I,QAAQh5I,UAAUs+J,eAAiB,WAElC,OAAOh+J,KAAKyoJ,cAcb/P,QAAQh5I,UAAUu+J,gBAAkB,SAAS3gK,GAE5C0C,KAAKyoJ,aAAenrJ,GAerBo7I,QAAQh5I,UAAUm2J,gBAAkB,SAAS7oG,GAE5C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKk+J,qBAAuBl+J,KAAKu7J,aAAavuG,IACS,KAA7D9G,QAAQxb,SAAS9iB,EAAOiiC,YAAY8oB,gBAAiB,MAQvD+lE,QAAQh5I,UAAUw+J,iBAAmB,WAEpC,OAAOl+J,KAAK0oJ,gBAcbhQ,QAAQh5I,UAAUy+J,kBAAoB,SAAS7gK,GAE9C0C,KAAK0oJ,eAAiBprJ,GAiBvBo7I,QAAQh5I,UAAU0+J,uBAAyB,SAASpxG,EAAM9oD,GAEzD,OAAO,GAcRw0I,QAAQh5I,UAAU2+J,eAAiB,SAASrxG,GAE3C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKs+J,oBAAsBt+J,KAAKu7J,aAAavuG,IAA8C,GAArCplC,EAAMiiC,YAAY4oB,iBAQhFimE,QAAQh5I,UAAU4+J,gBAAkB,WAEnC,OAAOt+J,KAAK2oJ,eAcbjQ,QAAQh5I,UAAU6+J,iBAAmB,SAASjhK,GAE7C0C,KAAK2oJ,cAAgBrrJ,GActBo7I,QAAQh5I,UAAU6tJ,eAAiB,SAASvgG,GAE3C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKw+J,oBAAsBx+J,KAAKu7J,aAAavuG,IAA8C,GAArCplC,EAAMiiC,YAAY0oB,iBAQhFmmE,QAAQh5I,UAAU8+J,gBAAkB,WAEnC,OAAOx+J,KAAKmoJ,eAcbzP,QAAQh5I,UAAU++J,iBAAmB,SAASnhK,GAE7C0C,KAAKmoJ,cAAgB7qJ,GAiBtBo7I,QAAQh5I,UAAUy3J,qBAAuB,SAASnqG,EAAMoN,EAAUl2D,GAEjE,OAAOlE,KAAK0+J,0BAA4B1+J,KAAKu7J,aAAavuG,IAQ3D0rF,QAAQh5I,UAAUg/J,sBAAwB,WAEzC,OAAO1+J,KAAK6oJ,qBAQbnQ,QAAQh5I,UAAUi/J,uBAAyB,SAASrhK,GAEnD0C,KAAK6oJ,oBAAsBvrJ,GAc5Bo7I,QAAQh5I,UAAUk/J,cAAgB,SAAS5xG,GAE1C,OAAgB,MAARA,GAAgBhtD,KAAK2qJ,oBACnB,MAAR39F,KAAkBhtD,KAAKomB,MAAMjX,OAAO69C,IACrChtD,KAAK0qJ,mBAAqB1qJ,KAAKq5J,kBAAkBrsG,IAanD0rF,QAAQh5I,UAAUm/J,cAAgB,SAAS7xG,GAE1C,OAAOhtD,KAAK4+J,cAAc5xG,IAiB3B0rF,QAAQh5I,UAAUk6J,kBAAoB,SAAS11J,EAAQE,GAEtD,OAAOpE,KAAK4+J,cAAc16J,IAAWlE,KAAK6+J,cAAcz6J,IAazDs0I,QAAQh5I,UAAUwhI,eAAiB,SAASL,GAE3C7gI,KAAK6rJ,kBAAkBxhE,WAAWw2C,IAQnC6X,QAAQh5I,UAAU0/H,cAAgB,WAEjC,OAAOp/H,KAAK6rJ,kBAAkB19F,aAa/BuqF,QAAQh5I,UAAUo/J,YAAc,SAAUp1E,GAEzC1pF,KAAK2sI,eAAetiD,WAAWX,IAahCgvD,QAAQh5I,UAAUq/J,WAAa,SAASr1E,GAEvC1pF,KAAKgsJ,eAAeE,eAAiBxiE,GActCgvD,QAAQh5I,UAAU+kI,UAAY,SAASz3E,GAEtC,GAAuB,MAAnBhtD,KAAKsmJ,WACT,CACC,IAAI5hB,EAAc1kI,KAAKsmJ,WAAWhZ,iBAElC,OAAgB,MAARtgF,EAA+B,MAAf03E,EAAsB13E,GAAQ03E,EAGvD,OAAO,GAeRgU,QAAQh5I,UAAUguJ,eAAiB,SAAS1gG,GAE3C,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKg/J,mBAA0D,GAArCp3I,EAAMiiC,YAAYwoB,iBAQpDqmE,QAAQh5I,UAAUs/J,gBAAkB,WAEnC,OAAOh/J,KAAK8oJ,eAgBbpQ,QAAQh5I,UAAUu/J,iBAAmB,SAAS3hK,GAE7C0C,KAAK8oJ,cAAgBxrJ,GActBo7I,QAAQh5I,UAAUk0J,eAAiB,SAAS5mG,GAE3C,OAAQhtD,KAAKkjE,WAAW/zD,OAAO69C,IAAShtD,KAAKk/J,mBAQ9CxmB,QAAQh5I,UAAUw/J,gBAAkB,WAEnC,OAAOl/J,KAAK4pJ,eAYblR,QAAQh5I,UAAUy/J,iBAAmB,SAAS7hK,GAE7C0C,KAAK4pJ,cAAgBtsJ,GAQtBo7I,QAAQh5I,UAAUi0J,qBAAuB,SAAS3mG,GAEjD,OAAOhtD,KAAK6pJ,oBAYbnR,QAAQh5I,UAAU0/J,sBAAwB,SAAS9hK,GAElD0C,KAAK6pJ,mBAAqBvsJ,GAQ3Bo7I,QAAQh5I,UAAUw2J,sBAAwB,WAEzC,OAAOl2J,KAAK8pJ,qBAYbpR,QAAQh5I,UAAU2/J,uBAAyB,SAAS/hK,GAEnD0C,KAAK8pJ,oBAAsBxsJ,GAY5Bo7I,QAAQh5I,UAAU61J,kBAAoB,SAASzkH,GAE9C,OAAO9wC,KAAK+pJ,iBAYbrR,QAAQh5I,UAAU4/J,mBAAqB,SAAShiK,GAE/C0C,KAAK+pJ,gBAAkBzsJ,GAexBo7I,QAAQh5I,UAAUg3J,iBAAmB,SAAS1pG,GAE7C,OAAOhtD,KAAKu/J,wBAA0Bv/J,KAAKkjE,WAAW/zD,OAAOnP,KAAKkjE,WAAW6yB,UAAU/oC,KAQxF0rF,QAAQh5I,UAAU6/J,oBAAsB,WAEvC,OAAOv/J,KAAK0pJ,mBAQbhR,QAAQh5I,UAAU8/J,qBAAuB,SAASliK,GAEjD0C,KAAK0pJ,kBAAoBpsJ,GAQ1Bo7I,QAAQh5I,UAAU+2J,4BAA8B,WAE/C,OAAOz2J,KAAK2pJ,2BAQbjR,QAAQh5I,UAAU+/J,6BAA+B,SAASniK,GAEzD0C,KAAK2pJ,0BAA4BrsJ,GAQlCo7I,QAAQh5I,UAAU+zJ,2BAA6B,WAE9C,OAAOzzJ,KAAKypJ,0BAQb/Q,QAAQh5I,UAAUq2J,4BAA8B,SAASz4J,GAExD0C,KAAKypJ,yBAA2BnsJ,GAiBjCo7I,QAAQh5I,UAAUk3J,WAAa,SAAS5pG,GAEvC,OAAQhtD,KAAK0/J,qBAAqB1yG,GAAShtD,KAAKmnJ,eAAiB,GAalEzO,QAAQh5I,UAAUggK,qBAAuB,SAAS1yG,GAEjD,OAAO,GAQR0rF,QAAQh5I,UAAUi1J,iBAAmB,SAASv0F,EAAO8vE,GAEpD,OAAOlwI,KAAKomB,MAAMm2G,YAAYn8D,EAAOla,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEhE,OAAOhtD,KAAK60J,eAAe7nG,EAAMkjF,QAenCwI,QAAQh5I,UAAUm1J,eAAiB,SAAS7nG,EAAMkjF,GAEjD,IAAIp/F,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAC3BplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAK67G,aAAa7uD,GAE9D,OAAOhtD,KAAKomB,MAAMwnC,cAAcZ,GAAQ,GAA0C,GAArCplC,EAAMiiC,YAAYyoB,iBAiBhEomE,QAAQh5I,UAAUigK,kBAAoB,SAAS3yG,EAAMoT,EAAOpa,GAE3D,OAAe,MAARgH,IAAkBhtD,KAAKg+J,kBAC7Bh+J,KAAK4/J,cAAc5yG,EAAMoT,EAAOpa,KAAWhmD,KAAKomB,MAAMjX,OAAO69C,KAC5DhtD,KAAKq/G,WAAWryD,IAAUhtD,KAAKomB,MAAMwnC,cAAcZ,GAAQ,IAC3DhtD,KAAKy/G,gBAAgBzyD,MAexB0rF,QAAQh5I,UAAUkgK,cAAgB,SAASx7J,EAAQg8D,EAAOpa,GAEzD,GAAIhmD,KAAKomB,MAAMjX,OAAO/K,IAAoB,MAATg8D,GAAiC,GAAhBA,EAAMx/D,QACvDZ,KAAKq5J,kBAAkBj5F,EAAM,KACuB,MADhBpgE,KAAKgzJ,uBAAuB5uJ,EAC/DpE,KAAKomB,MAAMi2F,YAAYj4G,GAAQ,GAAOg8D,EAAM,IAC9C,CACC,IAAIxrD,EAAM5U,KAAKomB,MAAMi2F,YAAYj4G,GAAQ,GACrColH,EAAMxpH,KAAKomB,MAAMi2F,YAAYj4G,GAAQ,GAEzC,OAASpE,KAAKomB,MAAMk2F,WAAWl8C,EAAM,GAAIxrD,KACtC5U,KAAKomB,MAAMk2F,WAAWl8C,EAAM,GAAIopD,GAGpC,OAAO,GAqBRkvB,QAAQh5I,UAAUwnE,cAAgB,SAAS9G,EAAOpa,EAAKgH,EAAMxoC,GAE5D,IAAKxkB,KAAKm9J,oBAET,IAAK,IAAIj0J,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIlJ,KAAKq/G,WAAWj/C,EAAMl3D,IAEzB,OAAO,KAKV,IAAI8wD,EAAK9T,QAAQ2Y,aAAa7+D,KAAK+9D,UAClCvW,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IAC7CgU,EAAGhb,GAAKh/C,KAAKksF,MACblyB,EAAGpP,GAAK5qD,KAAKmsF,MACb,IAAI8hE,EAAWjuJ,KAAKmuJ,cAAcn0F,EAAGhb,EAAGgb,EAAGpP,GAE3C,GAAY,MAARoC,EAEHA,EAAOihG,OAEH,GAAgB,MAAZA,EACT,CAGC,IAAIt+H,EAAM3vB,KAAKomB,MAAM2vE,UAAUk4D,GAE/B,MAAc,MAAPt+H,GAAe3vB,KAAKq/G,WAAW1vF,IAAQA,GAAOq9B,EAEpDr9B,EAAM3vB,KAAKomB,MAAM2vE,UAAUpmE,GAGxBA,GAAOq9B,IAEVA,EAAOihG,GAIT,MAAe,MAARjhG,IAAiBhtD,KAAK2/J,kBAAkB3yG,EAAMoT,EAAOpa,KAC1DhmD,KAAKomB,MAAMy4F,QAAQ7xD,GAEpBA,EAAOhtD,KAAKomB,MAAM2vE,UAAU/oC,GAI7B,GAAa,MAATxoC,IAAkBA,EACtB,CACC,IAAIne,EAAS2mD,EAEb,MAAiB,MAAV3mD,GAAkB6/C,QAAQ18C,QAAQ42D,EAAO/5D,GAAU,EAEzDA,EAASrG,KAAKomB,MAAM2vE,UAAU1vF,GAIhC,OAASrG,KAAKomB,MAAMy4F,QAAQ7xD,IAAmB,MAAV3mD,EAAyB,KAAP2mD,GAexD0rF,QAAQh5I,UAAUykF,iBAAmB,WAEpC,IAAI99E,EAASrG,KAAKo3J,iBAElB,GAAc,MAAV/wJ,IAEHA,EAASrG,KAAKonJ,cAEA,MAAV/gJ,GACJ,CACC,IAAI2rF,EAAOhyF,KAAKomB,MAAM+8C,UACtB98D,EAASrG,KAAKomB,MAAMynC,WAAWmkC,EAAM,GAIvC,OAAO3rF,GASRqyI,QAAQh5I,UAAU+sJ,iBAAmB,SAASz/F,GAE7ChtD,KAAKonJ,cAAgBp6F,GAatB0rF,QAAQh5I,UAAUmvI,YAAc,SAAS7hF,GAExC,MAAe,MAARA,IAAiBhtD,KAAKq/G,WAAWryD,GAEvCA,EAAOhtD,KAAKomB,MAAM2vE,UAAU/oC,GAG7B,OAAOA,GAgBR0rF,QAAQh5I,UAAUyuJ,cAAgB,SAAUnvG,EAAG4L,EAAGvkD,GAIjD,GAFAA,EAASA,GAAUrG,KAAKmkF,mBAEV,MAAV99E,EAIH,IAFA,IAAIsnD,EAAa3tD,KAAKomB,MAAMwnC,cAAcvnD,GAEjC6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAKomB,MAAMynC,WAAWxnD,EAAQ6C,GACtCrG,EAAS7C,KAAKmuJ,cAAcnvG,EAAG4L,EAAG73C,GAEtC,GAAc,MAAVlQ,EAEH,OAAOA,EAEH,GAAI7C,KAAKq/G,WAAWtsG,GACzB,CACC,IAAI+9B,EAAQ9wC,KAAK29D,KAAK5Q,SAASh6C,GAE/B,GAAI/S,KAAKg9D,WAAWlsB,EAAOkO,EAAG4L,GAE7B,OAAO73C,GAMX,OAAO,MA0BR2lI,QAAQh5I,UAAU+qF,UAAY,SAASzrC,EAAG4L,EAAGvkD,EAAQ8qG,EAAUpjD,EAAO8xG,GAerE,GAbA1uD,EAAwB,MAAZA,GAAoBA,EAChCpjD,EAAkB,MAATA,GAAiBA,EAEZ,MAAV1nD,IAEHA,EAASrG,KAAKo3J,iBAEA,MAAV/wJ,IAEHA,EAASrG,KAAKkjE,WAAWC,YAIb,MAAV98D,EAIH,IAFA,IAAIsnD,EAAa3tD,KAAKomB,MAAMwnC,cAAcvnD,GAEjC6C,EAAIykD,EAAa,EAAGzkD,GAAK,EAAGA,IACrC,CACC,IAAI8jD,EAAOhtD,KAAKomB,MAAMynC,WAAWxnD,EAAQ6C,GACrCrG,EAAS7C,KAAKyqF,UAAUzrC,EAAG4L,EAAGoC,EAAMmkD,EAAUpjD,EAAO8xG,GAEzD,GAAc,MAAVh9J,EAEH,OAAOA,EAEH,GAAI7C,KAAK28G,cAAc3vD,KAAUe,GAAS/tD,KAAKomB,MAAMjX,OAAO69C,IAChEmkD,GAAYnxG,KAAKomB,MAAMuvE,SAAS3oC,IACjC,CACC,IAAIlc,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAE/B,GAAa,MAATlc,IAA8B,MAAZ+uH,IAAqBA,EAAS/uH,EAAOkO,EAAG4L,KAC7D5qD,KAAKg9D,WAAWlsB,EAAOkO,EAAG4L,GAE1B,OAAOoC,GAMX,OAAO,MAeR0rF,QAAQh5I,UAAUs9D,WAAa,SAASlsB,EAAOkO,EAAG4L,GAEjD,GAAa,MAAT9Z,EACJ,CACC,IAAI0rB,EAAM1rB,EAAM6qB,eAEhB,GAAW,MAAPa,EAKH,IAHA,IAAI4lE,EAAKpiI,KAAK0yH,UAAY1yH,KAAK0yH,UAC3B14D,EAAKwC,EAAI,GAEJtzD,EAAI,EAAGA,EAAIszD,EAAI57D,OAAQsI,IAChC,CACC,IAAIpH,EAAO06D,EAAItzD,GACX0yD,EAAO1V,QAAQ2V,YAAY7B,EAAGhb,EAAGgb,EAAGpP,EAAG9oD,EAAKk9C,EAAGl9C,EAAK8oD,EAAG5L,EAAG4L,GAE9D,GAAIgR,GAAQwmE,EAEX,OAAO,EAGRpoE,EAAKl4D,MAIP,CACC,IAAI+7D,EAAQ3X,QAAQqQ,UAAUrQ,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,iBAAmB,GAE3F,GAAa,GAAT+C,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAChBnE,EAAK,IAAI/O,QAAQ7Z,EAAMka,aAAcla,EAAMma,cAC3C+O,EAAK9T,QAAQ6T,gBAAgB,IAAIpP,QAAQ3L,EAAG4L,GAAI4M,EAAKE,EAAKgC,GAC9D1a,EAAIgb,EAAGhb,EACP4L,EAAIoP,EAAGpP,EAGR,GAAI1E,QAAQ6W,SAASjsB,EAAOkO,EAAG4L,GAE9B,OAAO,GAKV,OAAO,GAeR8tF,QAAQh5I,UAAUogK,oBAAsB,SAAS7R,EAAUjvG,EAAG4L,GAE7D,IAAI9Z,EAAQ9wC,KAAK8sD,UAAUC,SAASkhG,GAChCxtG,EAAOzgD,KAAK8/G,aAAamuC,GAE7B,GAAa,MAATn9G,EACJ,CACC,IAAIqc,EAAQntD,KAAK8sD,UAAUgY,WAI3B,GAHA9lB,GAAKlO,EAAMkO,EACX4L,GAAK9Z,EAAM8Z,EAEPnK,EAAKqF,MAAQ,GAAK9G,EAAI,GAAKA,EAAIyB,EAAKqF,MAAQqH,EAE/C,OAAO,EAEH,GAAI1M,EAAKkF,OAAS,GAAKiF,EAAI,GAAKA,EAAInK,EAAKkF,OAASwH,EAEtD,OAAO,EAIT,OAAO,GAYRurF,QAAQh5I,UAAUiyG,iBAAmB,SAAStrG,GAE7C,OAAOrG,KAAKk7H,cAAc70H,GAAQ,GAAM,IAYzCqyI,QAAQh5I,UAAUq+H,cAAgB,SAAS13H,GAE1C,OAAOrG,KAAKk7H,cAAc70H,GAAQ,GAAO,IAiB1CqyI,QAAQh5I,UAAUw7H,cAAgB,SAAS70H,EAAQ8qG,EAAUpjD,GAE5D1nD,EAAoB,MAAVA,EAAkBA,EAASrG,KAAKmkF,mBAC1CgtB,EAAwB,MAAZA,GAAoBA,EAChCpjD,EAAkB,MAATA,GAAiBA,EAM1B,IAJA,IAAIqS,EAAQpgE,KAAKomB,MAAM80G,cAAc70H,EAAQ8qG,EAAUpjD,GACnDlrD,EAAS,GAGJqG,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7BlJ,KAAK28G,cAAcv8C,EAAMl3D,KAE5BrG,EAAOkO,KAAKqvD,EAAMl3D,IAIpB,OAAOrG,GAcR61I,QAAQh5I,UAAUwhH,eAAiB,SAASl0D,EAAM3mD,GAEjD,OAAOrG,KAAKguD,SAAShB,EAAM3mD,GAAQ,GAAM,GAAM,IAgBhDqyI,QAAQh5I,UAAU++H,iBAAmB,SAASzxE,EAAM3mD,GAEnD,OAAOrG,KAAKguD,SAAShB,EAAM3mD,GAAQ,GAAM,GAAO,IAgBjDqyI,QAAQh5I,UAAUg/H,iBAAmB,SAAS1xE,EAAM3mD,GAEnD,OAAOrG,KAAKguD,SAAShB,EAAM3mD,GAAQ,GAAO,GAAM,IA2BjDqyI,QAAQh5I,UAAUsuD,SAAW,SAAShB,EAAM3mD,EAAQs4H,EAAUJ,EAAUK,EAAcnpC,GAErFkpC,EAAwB,MAAZA,GAAoBA,EAChCJ,EAAwB,MAAZA,GAAoBA,EAChCK,EAAgC,MAAhBA,GAAwBA,EACxCnpC,EAAsB,MAAXA,GAAmBA,EAM9B,IAJA,IAAI1nC,EAAQ,GACR4rE,EAAc35H,KAAKy/G,gBAAgBzyD,GACnCW,EAAa3tD,KAAKomB,MAAMwnC,cAAcZ,GAEjC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAKomB,MAAMynC,WAAWb,EAAM9jD,IAEpCywH,GAAgB35H,KAAK28G,cAAc5pG,KAEtCg7C,EAAQA,EAAM/uD,OAAOgB,KAAKomB,MAAM4nC,SAASj7C,EAAO4rH,EAAUJ,KAI5DxwE,EAAQA,EAAM/uD,OAAOgB,KAAKomB,MAAM4nC,SAAShB,EAAM2xE,EAAUJ,IACzD,IAAI17H,EAAS,GAEb,IAASqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASgB,EAAM7kD,IAEjChF,EAAmB,MAAT4sC,EAAiBA,EAAMohE,oBAAmB,GAAQlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,GACnG9E,EAAmB,MAAT0sC,EAAiBA,EAAMohE,oBAAmB,GAASlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,IAEnG01H,GAAgB16H,GAAUE,GAAaF,GAAUE,IAAau6H,GAClEv6H,GAAU4oD,IAAmB,MAAV3mD,GAAkBrG,KAAK07H,gBAAgBx3H,EAAQmC,EAAQovF,KACzE8oC,GAAYr6H,GAAU8oD,IAAmB,MAAV3mD,GAC9BrG,KAAK07H,gBAAgBt3H,EAAQiC,EAAQovF,OAEvC5yF,EAAOkO,KAAKg9C,EAAM7kD,IAIpB,OAAOrG,GAgBR61I,QAAQh5I,UAAUg8H,gBAAkB,SAAS1uE,EAAM3mD,EAAQovF,GAE1D,OAAQA,EAAUz1F,KAAKomB,MAAMk2F,WAAWj2G,EAAQ2mD,GAAQhtD,KAAKomB,MAC1D2vE,UAAU/oC,IAAS3mD,GAoBvBqyI,QAAQh5I,UAAUmoH,aAAe,SAAS95D,EAAOqM,EAAU4kE,EAASC,GAEnED,EAAsB,MAAXA,GAAmBA,EAC9BC,EAAsB,MAAXA,GAAmBA,EAE9B,IAAIC,EAAY,GAGZ9oE,EAAO,IAAIxN,aAEf,GAAa,MAATmF,EAEH,IAAK,IAAI7kD,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASgB,EAAM7kD,IAEjChF,EAAmB,MAAT4sC,EAAiBA,EAAMohE,oBAAmB,GAAQlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,GACnG9E,EAAmB,MAAT0sC,EAAiBA,EAAMohE,oBAAmB,GAASlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,GAIpGhF,GAAUk2D,GAAsB,MAAVh2D,GAAkBA,GAAUg2D,GAAY6kE,EAE5D7oE,EAAK/2D,IAAI+E,KAEbgyD,EAAKvN,IAAIzkD,GAAQ,GACjB86H,EAAUnuH,KAAK3M,IAMRA,GAAUg2D,GAAsB,MAAVl2D,GAAkBA,GAAUk2D,GAAY4kE,IAEjE5oE,EAAK/2D,IAAI6E,KAEbkyD,EAAKvN,IAAI3kD,GAAQ,GACjBg7H,EAAUnuH,KAAK7M,KAMnB,OAAOg7H,GAgBRwZ,QAAQh5I,UAAU+kH,gBAAkB,SAASvgH,EAAQE,EAAQ23G,GAE5DA,EAAwB,MAAZA,GAAoBA,EAMhC,IALA,IAAIhuD,EAAQ/tD,KAAKguD,SAAS9pD,GACtBrB,EAAS,GAIJqG,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASgB,EAAM7kD,IAEjC0L,EAAgB,MAATk8B,EAAiBA,EAAMohE,oBAAmB,GAAQlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,GAChGsgH,EAAgB,MAAT14E,EAAiBA,EAAMohE,oBAAmB,GAASlyG,KAAK29D,KAAKu0C,mBAAmBnkD,EAAM7kD,IAAI,IAEhG0L,GAAO1Q,GAAUslH,GAAOplH,IAAa23G,GAAYnnG,GAAOxQ,GAAUolH,GAAOtlH,IAE7ErB,EAAOkO,KAAKg9C,EAAM7kD,IAIpB,OAAOrG,GAeP61I,QAAQh5I,UAAUqgK,iBAAmB,SAAS/5G,EAAKg6G,GAEnD,IAAIvlJ,EAAIyrC,QAAQ2Y,aAAa7+D,KAAK+9D,UACjCvW,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IAEzCxe,EAAIxnC,KAAK29D,KAAKxQ,MACd5H,EAAKvlD,KAAK29D,KAAKkG,UACf+oB,EAAoB,GAAbozE,EAAsBhgK,KAAK6sF,SAAW,EAAI,EAKrD,OAHApyE,EAAEukC,EAAIh/C,KAAK8sF,KAAKryE,EAAEukC,EAAIxX,EAAI+d,EAAGvG,EAAI4tC,GACjCnyE,EAAEmwC,EAAI5qD,KAAK8sF,KAAKryE,EAAEmwC,EAAIpjB,EAAI+d,EAAGqF,EAAIgiC,GAE1BnyE,GAqBRi+H,QAAQh5I,UAAU+jF,SAAW,SAASzkC,EAAG4L,EAAG9E,EAAOH,EAAQt/C,EAAQxD,GAIlE,GAFAA,EAAoB,MAAVA,EAAkBA,EAAS,GAEjCijD,EAAQ,GAAKH,EAAS,EAC1B,CACC,IAAIv/B,EAAQpmB,KAAKkjE,WACb1O,EAAQxV,EAAI8G,EACZ4O,EAAS9J,EAAIjF,EAYjB,GAVc,MAAVt/C,IAEHA,EAASrG,KAAKo3J,iBAEA,MAAV/wJ,IAEHA,EAAS+f,EAAM+8C,YAIH,MAAV98D,EAIH,IAFA,IAAIsnD,EAAavnC,EAAMwnC,cAAcvnD,GAE5B6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI8jD,EAAO5mC,EAAMynC,WAAWxnD,EAAQ6C,GAChC4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASC,GAE/B,GAAa,MAATlc,GAAiB9wC,KAAK28G,cAAc3vD,GACxC,CACC,IAAIwJ,EAAMtQ,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,iBAAmB,EACnEwoC,EAAMxyD,EAEC,GAAP0lB,IAEH8sC,EAAMp9C,QAAQsT,eAAe8pC,EAAK9sC,KAG9BpwC,EAAMjX,OAAO69C,IAAS5mC,EAAMuvE,SAAS3oC,KACzCs2C,EAAItkD,GAAKA,GAAKskD,EAAI14C,EAAI04C,EAAI39C,QAAU+O,GACpC4uC,EAAI14C,GAAKA,GAAK04C,EAAItkD,EAAIskD,EAAIx9C,OAAS0O,EAEnC3xD,EAAOkO,KAAKi8C,GAIZhtD,KAAKyjF,SAASzkC,EAAG4L,EAAG9E,EAAOH,EAAQqH,EAAMnqD,KAO9C,OAAOA,GAqBR61I,QAAQh5I,UAAUugK,eAAiB,SAASppG,EAAIC,EAAIzwD,EAAQ65J,EAAeC,GAE1E,IAAIt9J,EAAS,GAEb,IAAIq9J,GAAiBC,KAEN,MAAV95J,IAEHA,EAASrG,KAAKmkF,oBAGD,MAAV99E,GAIH,IAFA,IAAIsnD,EAAa3tD,KAAKomB,MAAMwnC,cAAcvnD,GAEjC6C,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQ/S,KAAKomB,MAAMynC,WAAWxnD,EAAQ6C,GACtC4nC,EAAQ9wC,KAAK29D,KAAK5Q,SAASh6C,GAE3B/S,KAAK28G,cAAc5pG,IAAmB,MAAT+9B,KAE1BovH,GAAiBpvH,EAAMkO,GAAK6X,MAC/BspG,GAAkBrvH,EAAM8Z,GAAKkM,IAE/Bj0D,EAAOkO,KAAKgC,GAOjB,OAAOlQ,GAoBR61I,QAAQh5I,UAAUyhH,cAAgB,SAAS96G,EAAQ+5J,EAASnwD,GAE3DmwD,EAAsB,MAAXA,GAAmBA,EAC9BnwD,EAAoB,MAAVA,GAAkBA,EAC5B,IAAImB,EAAQ,GAEZ,GAAc,MAAV/qG,EACJ,CAMC,IALA,IAAI+f,EAAQpmB,KAAKkjE,WACbvV,EAAavnC,EAAMwnC,cAAcvnD,GACjCgzH,EAAO,KACPC,EAAU,EAELpwH,EAAE,EAAGA,EAAEykD,EAAYzkD,IAC5B,CACC,IAAI8jD,EAAO5mC,EAAMynC,WAAWxnD,EAAQ6C,GAEpC,GAAIlJ,KAAKomB,MAAMuvE,SAAS3oC,IAAShtD,KAAK28G,cAAc3vD,GACpD,CAKC,IAJA,IAAIg/C,EAAQhsG,KAAKkhH,eAAel0D,EAAM,EAAY3mD,EAAS,MACvDkzH,EAAS,EACTC,EAAQ,EAEHhsG,EAAI,EAAGA,EAAIw+E,EAAMprG,OAAQ4sB,IAClC,CACC,IAAI5Y,EAAM5U,KAAK29D,KAAKu0C,mBAAmBlG,EAAMx+E,IAAI,GAE9B5Y,GAAOo4C,EAEPusE,IAIAC,KAIfvpB,GAAoB,GAAVspB,GAAeC,EAAQ,IACnCvpB,GAAmB,GAATupB,GAAcD,EAAS,IAEnCnoB,EAAMrgG,KAAKi8C,GAGZ,IAAIysE,EAAO,EAAWD,EAAQD,EAASA,EAASC,EAE5CC,EAAOH,IAEVA,EAAUG,EACVJ,EAAOrsE,IAKU,GAAhBokD,EAAMxwG,QAAuB,MAARy4H,GAExBjoB,EAAMrgG,KAAKsoH,GAIb,OAAOjoB,GAoCRsnC,QAAQh5I,UAAU8b,SAAW,SAASsgG,EAAQC,EAAUC,EAAM3hD,EAAM4hD,EAASpP,GAE5E,GAAY,MAARmP,GAA0B,MAAVF,IAEnBC,EAAwB,MAAZA,GAAoBA,EAChClP,EAAsB,MAAXA,GAAmBA,EAC9BoP,EAAUA,GAAW,IAAIrzD,cAEpBqzD,EAAQ58G,IAAIy8G,IACjB,CACCG,EAAQpzD,IAAIizD,GAAQ,GACpB,IAAIj5G,EAASm5G,EAAKF,EAAQzhD,GAE1B,GAAc,MAAVx3D,GAAkBA,EACtB,CACC,IAAIq5G,EAAYl8G,KAAKomB,MAAM+1F,aAAaL,GAExC,GAAII,EAAY,EAEf,IAAK,IAAIhzG,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAI+C,EAAIjM,KAAKomB,MAAMg2F,UAAUN,EAAQ5yG,GACjCyuE,EAAW33E,KAAKomB,MAAMi2F,YAAYpwG,GAAG,IAAS6vG,EAElD,IAAKC,IAAclP,GAAWl1B,EAC9B,CACC,IAAI71E,EAAO9B,KAAKomB,MAAMi2F,YAAYpwG,GAAI0rE,GACtC33E,KAAKwb,SAAS1Z,EAAMi6G,EAAUC,EAAM/vG,EAAGgwG,EAASpP,QAsBvD6rC,QAAQh5I,UAAUquJ,eAAiB,SAAS/gG,GAE3C,OAAOhtD,KAAKw9I,oBAAoBl0D,WAAWt8B,IAQ5C0rF,QAAQh5I,UAAU2gK,iBAAmB,WAEpC,OAAOrgK,KAAKw9I,oBAAoB95D,WAQjCg1D,QAAQh5I,UAAUqxD,eAAiB,WAElC,OAAO/wD,KAAKw9I,oBAAoBhtI,SAQjCkoI,QAAQh5I,UAAU4gK,kBAAoB,WAErC,OAAOtgK,KAAKw9I,oBAAoBp9E,MAAMx/D,QAQvC83I,QAAQh5I,UAAU4tJ,iBAAmB,WAEpC,OAAOttJ,KAAKw9I,oBAAoBp9E,MAAM,IAQvCs4E,QAAQh5I,UAAUmkF,kBAAoB,WAErC,OAAO7jF,KAAKw9I,oBAAoBp9E,MAAM91D,SAYvCouI,QAAQh5I,UAAU0tJ,iBAAmB,SAASpgG,GAE7ChtD,KAAKw9I,oBAAoB1T,QAAQ98E,IAYlC0rF,QAAQh5I,UAAU2kF,kBAAoB,SAASjkB,GAE9CpgE,KAAKw9I,oBAAoBh6D,SAASpjB,IAYnCs4E,QAAQh5I,UAAU6gK,iBAAmB,SAASvzG,GAE7ChtD,KAAKw9I,oBAAoBvT,QAAQj9E,IAYlC0rF,QAAQh5I,UAAU8gK,kBAAoB,SAASpgG,GAE9CpgE,KAAKw9I,oBAAoBtT,SAAS9pE,IAYnCs4E,QAAQh5I,UAAU+gK,oBAAsB,SAASzzG,GAEhDhtD,KAAKw9I,oBAAoBrT,WAAWn9E,IAYrC0rF,QAAQh5I,UAAU8sJ,qBAAuB,SAASpsF,GAEjDpgE,KAAKw9I,oBAAoB55D,YAAYxjB,IActCs4E,QAAQh5I,UAAUghK,aAAe,SAASx1G,EAAMlF,GAE/C,IAAIoa,EAAQpgE,KAAKyjF,SAASv4B,EAAKlM,EAAGkM,EAAKN,EAAGM,EAAKpF,MAAOoF,EAAKvF,QAG3D,OAFA3lD,KAAK2gK,oBAAoBvgG,EAAOpa,GAEzBoa,GAQRs4E,QAAQh5I,UAAUkhK,eAAiB,WAElC5gK,KAAK6gK,YAAW,IAQjBnoB,QAAQh5I,UAAUohK,mBAAqB,WAEtC9gK,KAAK6gK,cAQNnoB,QAAQh5I,UAAUqhK,iBAAmB,WAEpC/gK,KAAK6gK,YAAW,GAAO,IAQxBnoB,QAAQh5I,UAAUshK,gBAAkB,WAEnChhK,KAAK6gK,YAAW,GAAO,GAAO,IAe/BnoB,QAAQh5I,UAAUmhK,WAAa,SAASI,EAAQC,EAAUC,GAEzD,IAAIC,EAAMphK,KAAKqkI,eACXr3E,EAAQo0G,EAAIhhG,MAAMx/D,OAAS,EAAKwgK,EAAIhhG,MAAM,GAAK,KAE/CghG,EAAIhhG,MAAMx/D,OAAS,GAEtBwgK,EAAI5wJ,QAGL,IAAInK,EAAkB,MAAR2mD,EACbhtD,KAAKomB,MAAM2vE,UAAU/oC,GACrBhtD,KAAKmkF,mBAEFx2B,EAAa3tD,KAAKomB,MAAMwnC,cAAcvnD,GAE1C,GAAY,MAAR2mD,GAAgBW,EAAa,EACjC,CACC,IAAI56C,EAAQ/S,KAAKomB,MAAMynC,WAAWxnD,EAAQ,GAC1CrG,KAAKotJ,iBAAiBr6I,QAElB,GAAa,MAARi6C,IAAgBk0G,GACK,MAA9BlhK,KAAK29D,KAAK5Q,SAAS1mD,IACe,MAAlCrG,KAAKomB,MAAM62F,YAAY52G,IAOnB,GAAY,MAAR2mD,GAAgBm0G,EACzB,CACC,IAAIxxI,EAAM3vB,KAAKomB,MAAMwnC,cAAcZ,GAEnC,GAAIr9B,EAAM,EACV,CACK5c,EAAQ/S,KAAKomB,MAAMynC,WAAWb,EAAM,GACxChtD,KAAKotJ,iBAAiBr6I,SAGnB,GAAI46C,EAAa,EACtB,CACC,IAAIzkD,EAAI7C,EAAOs4G,SAAS3xD,GAExB,GAAIi0G,EACJ,CACC/3J,IACI6J,EAAQ/S,KAAKomB,MAAMynC,WAAWxnD,EAAQ6C,EAAIykD,GAC9C3tD,KAAKotJ,iBAAiBr6I,OAGvB,CACC7J,IACA,IAAI9F,EAAU8F,EAAI,EAAKykD,EAAa,EAAIzkD,EACpC6J,EAAQ/S,KAAKomB,MAAMynC,WAAWxnD,EAAQjD,GAC1CpD,KAAKotJ,iBAAiBr6I,UA9BnB/S,KAAKo3J,kBAAoB/wJ,GAE5BrG,KAAKotJ,iBAAiB/mJ,IA+CzBqyI,QAAQh5I,UAAU2hK,UAAY,SAASh7J,EAAQi7J,GAE9Cj7J,EAASA,GAAUrG,KAAKmkF,mBAExB,IAAI/jB,EAAQ,EAAgBpgE,KAAKomB,MAAM6zG,kBAAkB/zE,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAEpF,OAAOA,GAAQ3mD,GAAsC,MAA5BrG,KAAK29D,KAAK5Q,SAASC,MACzC3mD,GAAUrG,KAAKomB,MAAM03G,YAAYz3H,GAExB,MAAT+5D,GAEHpgE,KAAKqkF,kBAAkBjkB,IASzBs4E,QAAQh5I,UAAU6hK,eAAiB,SAASl7J,GAE3CrG,KAAKwhK,aAAY,GAAM,EAAOn7J,IAQ/BqyI,QAAQh5I,UAAU+hK,YAAc,SAASp7J,GAExCrG,KAAKwhK,aAAY,GAAO,EAAMn7J,IAkB/BqyI,QAAQh5I,UAAU8hK,YAAc,SAASrwD,EAAUpjD,EAAO1nD,GAEzDA,EAASA,GAAUrG,KAAKmkF,mBAExB,IAAI5vD,EAAS2xB,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAExC,OAAmC,MAA5BhtD,KAAK29D,KAAK5Q,SAASC,KACW,GAAlChtD,KAAKomB,MAAMwnC,cAAcZ,IAAchtD,KAAKomB,MAAMuvE,SAAS3oC,IAASmkD,IAClEnxG,KAAKomB,MAAMjX,OAAOnP,KAAKomB,MAAM2vE,UAAU/oC,KAC1ChtD,KAAKomB,MAAMjX,OAAO69C,IAASe,MAG1BqS,EAAQpgE,KAAKomB,MAAM6zG,kBAAkB1lG,EAAQluB,GAEpC,MAAT+5D,GAEHpgE,KAAKqkF,kBAAkBjkB,IAgBzBs4E,QAAQh5I,UAAUsuJ,mBAAqB,SAAShhG,EAAMhH,GAErD,IAAIsjC,EAAatpF,KAAK+tJ,eAAe/gG,GAEjChtD,KAAKouJ,cAAcpoG,GAElBsjC,EAEHtpF,KAAKygK,oBAAoBzzG,GAIzBhtD,KAAKugK,iBAAiBvzG,GAGds8B,GAA0C,GAA5BtpF,KAAKsgK,qBAE5BtgK,KAAKotJ,iBAAiBpgG,IAgBxB0rF,QAAQh5I,UAAUihK,oBAAsB,SAASvgG,EAAOpa,GAEnDhmD,KAAKouJ,cAAcpoG,GAEtBhmD,KAAKwgK,kBAAkBpgG,GAIvBpgE,KAAKqkF,kBAAkBjkB,IAmBzBs4E,QAAQh5I,UAAUgiK,cAAgB,SAAS5wH,GAE1C,IAAIjuC,EAAS,KAEb,GAAa,MAATiuC,EAEH,GAAI9wC,KAAKomB,MAAMjX,OAAO2hC,EAAMkc,MAC5B,CACC,IAAI9oD,EAAS4sC,EAAMi4F,yBAAwB,GACvC3kI,EAAS0sC,EAAMi4F,yBAAwB,GACvC/yC,EAAMh2F,KAAKi2F,gBAAgBnlD,EAAMkc,MAEjCyoE,EAAYz1H,KAAK29D,KAAK8lF,aAAa3yG,EAAe,MAAPklD,EAAeA,EAAI2P,OAAS,KAAMzhG,EAAQE,GACzFvB,EAAS7C,KAAK2hK,kBAAkB7wH,EAAO2kF,QAIvC5yH,EAAS7C,KAAK4hK,oBAAoB9wH,GAIpC,OAAOjuC,GAYR61I,QAAQh5I,UAAUkiK,oBAAsB,SAAS9wH,GAEhD,OAAO,IAAIotG,gBAAgBptG,IAY5B4nG,QAAQh5I,UAAUiiK,kBAAoB,SAAS7wH,EAAO2kF,GAErD,IAAI5yH,EAAS,KAmBb,OAZCA,EALG4yH,GAAamc,YAAYW,MAC5B9c,GAAamc,YAAYc,gBACzBjd,GAAamc,YAAYe,YACzBld,GAAamc,YAAYgB,YAEhB5yI,KAAK6hK,uBAAuB/wH,GAE7B2kF,GAAamc,YAAYiB,kBAChCpd,GAAamc,YAAYuD,cAEjBn1I,KAAK8hK,yBAAyBhxH,GAI9B,IAAIwtG,cAAcxtG,GAGrBjuC,GAYR61I,QAAQh5I,UAAUoiK,yBAA2B,SAAShxH,GAErD,OAAO,IAAI2tG,qBAAqB3tG,IAYjC4nG,QAAQh5I,UAAUmiK,uBAAyB,SAAS/wH,GAEnD,OAAO,IAAI0tG,mBAAmB1tG,IAkB/B4nG,QAAQh5I,UAAUywF,iBAAmB,SAASrgD,GAElB,MAAvB9vC,KAAK64I,iBAER74I,KAAK64I,eAAiB,IAGvB74I,KAAK64I,eAAe9nI,KAAK++B,IAY1B4oG,QAAQh5I,UAAUqxF,oBAAsB,SAASjhD,GAEhD,GAA2B,MAAvB9vC,KAAK64I,eAER,IAAK,IAAI3vI,EAAI,EAAGA,EAAIlJ,KAAK64I,eAAej4I,OAAQsI,IAE/C,GAAIlJ,KAAK64I,eAAe3vI,IAAM4mC,EAC9B,CACC9vC,KAAK64I,eAAepvI,OAAOP,EAAG,GAC9B,QAiBJwvI,QAAQh5I,UAAUqiK,iBAAmB,SAASp8E,EAAID,GAEjD,GAAiB,MAAbC,EAAGpO,QAA+B,MAAboO,EAAGnO,OAC5B,CACC,IAAIxd,EAAK9T,QAAQ2Y,aAAa7+D,KAAK+9D,UAAW4nB,EAAG/N,OAAQ+N,EAAG7N,QAE5D6N,EAAGpO,OAASvd,EAAGhb,EAAIh/C,KAAKksF,MACxBvG,EAAGnO,OAASxd,EAAGpP,EAAI5qD,KAAKmsF,MAGJ,MAAhBxG,EAAGzN,WAAqBl4E,KAAK4rF,aAAelG,GAAWl+B,QAAQwyB,aAElE2L,EAAG70C,MAAQ9wC,KAAK29D,KAAK5Q,SAAS/sD,KAAKyqF,UAAUzwB,EAAGhb,EAAGgb,EAAGpP,EAAG,KAAM,KAAM,MAAM,SAAS9Z,GAEnF,OAAsB,MAAfA,EAAMoc,OAAiBpc,EAAMoc,MAAMu8C,iBAAmBwE,iBAAiBvuG,UAAU+pG,iBACf,KAAxEvjD,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYskB,qBAAsB,MAC3C,MAApBr9B,EAAMoc,MAAMqvC,MAAgBzrD,EAAMoc,MAAMqvC,MAAQ1yC,YAAYC,UAKjE,OAAO67B,GAQR+yD,QAAQh5I,UAAUsiK,sBAAwB,SAASh8G,GAElD,IAAIhH,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GAIvBgU,EAAK9T,QAAQ2Y,aAAa7+D,KAAK+9D,UAAW/e,EAAG4L,GAEjD,OAAO5qD,KAAK29D,KAAK5Q,SAAS/sD,KAAKyqF,UAAUzwB,EAAGhb,EAAGgb,EAAGpP,KAQnD8tF,QAAQh5I,UAAUuiK,eAAiB,SAASv8E,EAASC,EAAIr+B,GAExD,IAAI46G,EAAa16G,QAAQ6wB,aAAasN,EAAGlO,YACrC50E,GAAS,EAkDb,OA/CI8iF,EAAGlO,YAAcz3E,KAAKmiK,UAEzBt/J,GAAS,EAIT7C,KAAKmiK,UAAYx8E,EAAGlO,WAMG,MAApBz3E,KAAK+2E,aAAuB2O,GAAWl+B,QAAQwyB,YAElDxyB,QAAQgyB,uBAAuBx5E,KAAK+2E,YAAa,KAAM/2E,KAAKoiK,kBAAmBpiK,KAAKqiK,iBACpFriK,KAAKoiK,kBAAoB,KACzBpiK,KAAKqiK,gBAAkB,KACvBriK,KAAK+2E,YAAc,MAEVn2B,SAASgB,OAA6B,MAApB5hD,KAAK+2E,aAAuB4O,EAAGjO,aAAe13E,KAAK+2E,aAItEn2B,SAAS+B,UAAY+iC,GAAWl+B,QAAQuyB,YAAemoF,GAAe16G,QAAQszB,WAAW6K,EAAGlO,cAEpGz3E,KAAK+2E,YAAc4O,EAAGjO,YAEtB13E,KAAKoiK,kBAAoBl8G,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEpDhmD,KAAK85E,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,EAAKhmD,KAAKgiK,sBAAsBh8G,QAE1FhmD,KAAKqiK,gBAAkBn8G,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAElDhmD,KAAK85E,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,EAAKhmD,KAAKgiK,sBAAsBh8G,QAGxFwB,QAAQ4xB,oBAAoBp5E,KAAK+2E,YAAa,KAAM/2E,KAAKoiK,kBAAmBpiK,KAAKqiK,kBAfjFx/J,GAAS,EAoBN7C,KAAKsiK,wBAAwB58E,EAASC,EAAIr+B,KAE7CzkD,GAAS,IAIL2kD,QAAQ2wB,eAAen4E,KAAKmiK,YAAcz8E,GAAWl+B,QAAQwyB,YAAuC,GAAzBh6E,KAAKmiK,UAAU7nF,SAM3FoL,GAAWl+B,QAAQyyB,UAAYj6E,KAAK4rF,YAEvC5rF,KAAK4rF,aAAc,EAEXlG,GAAWl+B,QAAQuyB,YAAe/5E,KAAK4rF,aAOtC/oF,MAAc+9C,SAASqB,OAASyjC,GAAWl+B,QAAQwyB,aAC5Dh6E,KAAK4rF,aAAe5rF,KAAK6rF,gBAAkBq2E,GAC1Cx8E,GAAWl+B,QAAQuyB,YAAc/5E,KAAK4rF,aACtClG,GAAWl+B,QAAQyyB,WAAaj6E,KAAK4rF,eAEtC/oF,GAAS,IAVT7C,KAAK4rF,aAAc,EACnB5rF,KAAK6rF,eAAiBq2E,GAYlBr/J,GAAU6iF,GAAWl+B,QAAQuyB,aAEjC/5E,KAAKuiK,WAAa58E,EAAG/N,OACrB53E,KAAKwiK,WAAa78E,EAAG7N,QAGfj1E,IAQR61I,QAAQh5I,UAAU4iK,wBAA0B,SAAS58E,EAASC,EAAIr+B,GAEjE,IAAIzkD,GAAS,EACTq/J,EAAa16G,QAAQ6wB,aAAasN,EAAGlO,YAazC,OAVIz3E,KAAKyiK,mBAAqBP,GAAcx8E,GAAWl+B,QAAQwyB,YAE9Dh6E,KAAKyiK,kBAAoB/8E,GAAWl+B,QAAQyyB,SAC5Cp3E,GAAS,GAED+9C,SAASqB,QAAUigH,GAAcx8E,GAAWl+B,QAAQyyB,WAE5Dj6E,KAAKyiK,mBAAoB,GAGnB5/J,GAgBR61I,QAAQh5I,UAAUgjK,qBAAuB,SAASh9E,EAASC,GAE1D,IAAIzhF,EAASyhF,EAAGjO,YACZ55E,EAA2B,MAAnBoG,EAAOyrD,SAAoBzrD,EAAOyrD,SAASxmD,cAAgB,GACnEw5J,GAAan7G,QAAQ6wB,aAAasN,EAAGlO,aAAejwB,QAAQ2zB,kBAAkBwK,EAAGlO,YAErF,OAAOiO,GAAWl+B,QAAQuyB,YAAc4oF,IAAsB,UAAR7kK,GAA4B,UAARA,GAChE,SAARA,GAAkC,YAAfoG,EAAOyS,MAAqC,SAAfzS,EAAOyS,MACzC,UAAfzS,EAAOyS,MAAmC,UAAfzS,EAAOyS,MAAmC,QAAfzS,EAAOyS,OAa/D+hI,QAAQh5I,UAAUkjK,cAAgB,SAAS9xH,GAE1C,OAAOA,GAiBR4nG,QAAQh5I,UAAUo6E,eAAiB,SAAS4L,EAASC,EAAIr+B,GAExD,GAAItnD,KAAK0iK,qBAAqBh9E,EAASC,GAEX,MAAvB3lF,KAAK2sI,gBAER3sI,KAAK2sI,eAAejmD,WAJtB,CAuBA,GAbc,MAAVp/B,IAEHA,EAAStnD,MAIV2lF,EAAK3lF,KAAK+hK,iBAAiBp8E,EAAID,IAOzB1lF,KAAK0vI,wBAA0BloF,QAAQ2wB,eAAewN,EAAGlO,aAAiBz3E,KAAKwmJ,kBACpF5lG,SAAS+B,WAAa6E,QAAQkzB,aAAaiL,EAAGlO,aAAejwB,QAAQszB,WAAW6K,EAAGlO,aACpF,CACC,IAAIorF,GAAc,IAAIpjK,MAAOK,UAG7B,IAAM8gD,SAASM,WAAawkC,GAAWl+B,QAAQuyB,YAAgBn5B,SAASM,WAAawkC,GAAWl+B,QAAQyyB,WAAaj6E,KAAK8iK,gBAEzH,GAA2B,MAAvB9iK,KAAK+iK,gBAA0B/iK,KAAK+iK,gBAAkBp9E,EAAGlO,YAC5DorF,EAAc7iK,KAAK4mJ,cAAgB5mJ,KAAKymJ,kBACxCvmJ,KAAKk3D,IAAIp3D,KAAKgjK,WAAar9E,EAAG/N,QAAU53E,KAAK0mJ,oBAC7CxmJ,KAAKk3D,IAAIp3D,KAAK2mJ,WAAahhE,EAAG7N,QAAU93E,KAAK0mJ,oBAC7C1mJ,KAAKijK,mBAAqB,EAC3B,CACCjjK,KAAKijK,qBACL,IAAIC,GAAmB,EAEvB,GAAIx9E,GAAWl+B,QAAQyyB,UAEtB,GAAI0L,EAAGzN,WAAal4E,KAAKmjK,eAAuC,MAAtBnjK,KAAKmjK,cAC/C,CACCnjK,KAAK4mJ,cAAgB,EACrB,IAAI55F,EAAOhtD,KAAKmjK,cAChBnjK,KAAKmjK,cAAgB,KAOjBviH,SAASM,WAEZykC,EAAGjO,YAAYe,UAAU,cAG1Bz4E,KAAK65E,SAAS8L,EAAGlO,WAAYzqB,GAC7Bk2G,GAAmB,QAKpBljK,KAAK8iK,iBAAkB,EACvB9iK,KAAK4mJ,cAAgB,EAItB,IAAKhmG,SAASM,WAAagiH,EAG1B,YADA17G,QAAQ8vB,QAAQqO,EAAGlO,iBAIW,MAAvBz3E,KAAK+iK,gBAA0B/iK,KAAK+iK,gBAAkBp9E,EAAGlO,aAEjEz3E,KAAKmjK,cAAgBx9E,EAAGzN,UACxBl4E,KAAKgjK,WAAar9E,EAAG/N,OACrB53E,KAAK2mJ,WAAahhE,EAAG7N,OACrB93E,KAAK4mJ,cAAgBic,EACrB7iK,KAAK+iK,eAAiBp9E,EAAGlO,WACzBz3E,KAAKijK,mBAAqB,QAGvB,IAAKjjK,KAAK4rF,aAAelG,GAAWl+B,QAAQyyB,WAAaj6E,KAAK8iK,gBACnE,CACC9iK,KAAK8iK,iBAAkB,EACnB91G,EAAOhtD,KAAKmjK,cAChBnjK,KAAKmjK,cAAgB,KACrBnjK,KAAK4rF,aAAc,EAGnB,IAAIw3E,EAAiB,MAARp2G,IAAmBxF,QAAQkzB,aAAaiL,EAAGlO,aAAejwB,QAAQszB,WAAW6K,EAAGlO,eAC3F72B,SAASgB,OAAShB,SAASc,OAY7B,YAVI0hH,GAASljK,KAAKk3D,IAAIp3D,KAAKgjK,WAAar9E,EAAG/N,QAAU53E,KAAK0mJ,oBACzDxmJ,KAAKk3D,IAAIp3D,KAAK2mJ,WAAahhE,EAAG7N,QAAU93E,KAAK0mJ,mBAE7C1mJ,KAAK65E,SAAS8L,EAAGlO,WAAYzqB,GAI7BxF,QAAQ8vB,QAAQqO,EAAGlO,cAOtB,IAAKz3E,KAAKiiK,eAAev8E,EAASC,EAAIr+B,GACtC,CAKC,GAHAq+B,EAAG70C,MAAQ9wC,KAAK4iK,cAAcj9E,EAAG54B,YACjC/sD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm2B,iBAAkB,YAAa+H,EAAS,QAASC,IAErF/kC,SAASY,OAASZ,SAASc,OAASd,SAASgB,OAAShB,SAASI,SAClEJ,SAASE,OAASF,SAASyB,QAAWsjC,EAAGlO,WAAWrzE,QAAUpE,KAAK+9D,UACrE,CACC,GAAI2nB,GAAWl+B,QAAQwyB,YAAch6E,KAAK4rF,aAAe5rF,KAAKosF,aAAe5kC,QAAQwzB,kBAAkB2K,EAAGlO,UAEzGz3E,KAAKqsF,qBAAqB1G,EAAG3N,YAAa2N,EAAG1N,YAAaj4E,KAAKssF,iBAE3D,GAAI5G,GAAWl+B,QAAQyyB,UAAYj6E,KAAKgpJ,kBAAoBhpJ,KAAKipJ,4BACtC,GAA7BjpJ,KAAK+9D,UAAUI,YAA+C,GAA5Bn+D,KAAK+9D,UAAUzV,WACpD,CACC,IAAI9gB,EAAIxnC,KAAK29D,KAAKxQ,MACd5H,EAAKvlD,KAAK29D,KAAKkG,UACnB7jE,KAAK29D,KAAKmzB,aAAavrC,EAAGvG,EAAIh/C,KAAK+9D,UAAUI,WAAa32B,EAAG+d,EAAGqF,EAAI5qD,KAAK+9D,UAAUzV,UAAY9gB,GAC/FxnC,KAAK+9D,UAAUI,WAAa,EAC5Bn+D,KAAK+9D,UAAUzV,UAAY,EAG5B,GAA2B,MAAvBtoD,KAAK64I,eACT,CACC,IAAIhlI,EAAO,CAACyzC,EAAQq+B,GAGfA,EAAGlO,WAAWW,iBAElBuN,EAAGlO,WAAW/c,aAAc,GAG7B,IAAK,IAAIxxD,EAAI,EAAGA,EAAIlJ,KAAK64I,eAAej4I,OAAQsI,IAChD,CACC,IAAI0B,EAAI5K,KAAK64I,eAAe3vI,GAExBw8E,GAAWl+B,QAAQuyB,WAEtBnvE,EAAE46E,UAAUzkF,MAAM6J,EAAGiJ,GAEb6xE,GAAWl+B,QAAQwyB,WAE3BpvE,EAAEsgF,UAAUnqF,MAAM6J,EAAGiJ,GAEb6xE,GAAWl+B,QAAQyyB,UAE3BrvE,EAAEwgF,QAAQrqF,MAAM6J,EAAGiJ,IAMlB6xE,GAAWl+B,QAAQyyB,UAEtBj6E,KAAK4tJ,MAAMjoE,GAKb,IAAKn+B,QAAQkzB,aAAaiL,EAAGlO,aAAejwB,QAAQszB,WAAW6K,EAAGlO,cACjEiO,GAAWl+B,QAAQuyB,YAAc/5E,KAAK6mJ,oBAAsB7mJ,KAAK+mJ,qBAClE,CACC/mJ,KAAK+mJ,sBAAuB,EAC5B/mJ,KAAKinJ,cAAgBthE,EAAG3N,YACxBh4E,KAAKknJ,cAAgBvhE,EAAG1N,YAExB,IAAIn+D,EAAU,WAET9Z,KAAKgnJ,iBAERhnJ,KAAKquJ,WAAW1oE,GAGjB3lF,KAAK+mJ,sBAAuB,EAC5B/mJ,KAAKgnJ,iBAAkB,GAGpBhnJ,KAAKqjK,kBAER50J,OAAOob,aAAa7pB,KAAKqjK,kBAG1BrjK,KAAKqjK,iBAAmB50J,OAAOkM,WAAWurC,QAAQ1jD,KAAKxC,KAAM8Z,GAAU9Z,KAAK8mJ,iBAC5E9mJ,KAAKgnJ,iBAAkB,OAEfthE,GAAWl+B,QAAQyyB,UAE3Bj6E,KAAK+mJ,sBAAuB,EAC5B/mJ,KAAKgnJ,iBAAkB,GAEfhnJ,KAAKgnJ,kBAEbhnJ,KAAKgnJ,gBACJ9mJ,KAAKk3D,IAAIp3D,KAAKinJ,cAAgBthE,EAAG3N,aAAeh4E,KAAK0yH,WACrDxyH,KAAKk3D,IAAIp3D,KAAKknJ,cAAgBvhE,EAAG1N,aAAej4E,KAAK0yH,WAInDhtC,GAAWl+B,QAAQuyB,YAAc/5E,KAAKykI,cAAgBzkI,KAAKsmJ,WAAWva,cAAcpmD,EAAGlO,aAE1Fz3E,KAAK2kI,aAAa3kI,KAAKusI,4BAGxBvsI,KAAKsjK,kBAAkB59E,EAASC,EAAIr+B,MAStCoxF,QAAQh5I,UAAU4jK,kBAAoB,SAAS59E,EAASC,EAAIr+B,GAGvDo+B,GAAWl+B,QAAQuyB,YAAcvyB,QAAQkzB,aAAaiL,EAAGlO,aAE5DkO,EAAGrO,SAAQ,IAuCbohE,QAAQh5I,UAAUkmJ,iBAAmB,SAAS5/F,EAAKgH,GAGlDhtD,KAAK4mJ,cAAgB,EACrB5mJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQo2B,QAAS,QAAS53B,EAAK,OAAQgH,KAQzE0rF,QAAQh5I,UAAUgmB,QAAU,WAEtB1lB,KAAKk1B,YAETl1B,KAAKk1B,WAAY,EAEU,MAAvBl1B,KAAK2sI,gBAER3sI,KAAK2sI,eAAejnH,UAGa,MAA9B1lB,KAAKwxI,uBAERxxI,KAAKwxI,sBAAsB9rH,UAGD,MAAvB1lB,KAAKgsJ,gBAERhsJ,KAAKgsJ,eAAetmI,UAGQ,MAAzB1lB,KAAK6lJ,kBAER7lJ,KAAK6lJ,iBAAiBngI,UAGO,MAA1B1lB,KAAK6rJ,mBAER7rJ,KAAK6rJ,kBAAkBnmI,UAGC,MAArB1lB,KAAK+rF,cAER/rF,KAAK+rF,aAAarmE,UAGI,MAAnB1lB,KAAKsmJ,YAERtmJ,KAAKsmJ,WAAW5gI,UAGA,MAAb1lB,KAAK29D,MAER39D,KAAK29D,KAAKj4C,UAGO,MAAd1lB,KAAKomB,OAAkD,MAAjCpmB,KAAKs5I,2BAE9Bt5I,KAAKomB,MAAMoyD,eAAex4E,KAAKs5I,0BAC/Bt5I,KAAKs5I,yBAA2B,MAGjCt5I,KAAK+9D,UAAY,OAInBpd,WAAW+3F,QAA6B,qBAAZA,QAA0BA,aAAUn4I,EAyEhEk5I,cAAc/5I,UAAY,IAAIo3E,cAC9B2iE,cAAc/5I,UAAUqyB,YAAc0nH,cAOtCA,cAAc/5I,UAAUyoF,MAAQ,KAOhCsxD,cAAc/5I,UAAUg6I,QAAU,KASlCD,cAAc/5I,UAAUsiE,MAAQnY,YAAYsY,YAS5Cs3E,cAAc/5I,UAAU+lD,cAAgBoE,YAAYwY,aAQpDo3E,cAAc/5I,UAAU00D,OAAS,KAOjCqlF,cAAc/5I,UAAU+uD,OAAS,KAQjCgrF,cAAc/5I,UAAUynJ,eAAiB,GAmCzC1N,cAAc/5I,UAAUsxI,UAAY,SAASlgG,GAE5C,IAAI3hC,EAAS2hC,EAAM6sB,KAAKvR,MAAM8W,WAAW/zD,OAAO2hC,EAAMkc,MAClDxlB,EAAIsJ,EAAM6sB,KAAKxQ,MACf6M,EAAK,KAELxT,EAAIxmD,KAAKmoF,MAAMriC,MACf/+C,EAAI/G,KAAKmoF,MAAMxiC,OAEnB,GAAIx2C,EACJ,CACC,IAAIqtD,EAAM1rB,EAAM6qB,eAEhB,GAAIa,EAAI57D,OAAS,GAAK,EAErBo5D,EAAKwC,EAAIt8D,KAAKC,MAAMq8D,EAAI57D,OAAS,QAGlC,CACC,IAAI2pD,EAAMiS,EAAI57D,OAAS,EACnBupG,EAAK3tC,EAAIjS,EAAI,GACboP,EAAK6C,EAAIjS,GACbyP,EAAK,IAAIrP,QAAQw/C,EAAGnrD,GAAK2a,EAAG3a,EAAImrD,EAAGnrD,GAAK,EACvCmrD,EAAGv/C,GAAK+O,EAAG/O,EAAIu/C,EAAGv/C,GAAK,SAKzBoP,EAAK,IAAIrP,QAEL3qD,KAAKgiE,OAASnY,YAAYyrB,WAE7Btb,EAAGhb,EAAIlO,EAAMkO,EAELh/C,KAAKgiE,OAASnY,YAAYqY,aAElClI,EAAGhb,EAAIlO,EAAMkO,EAAIlO,EAAMgV,MAAQ,EAI/BkU,EAAGhb,EAAIlO,EAAMkO,EAAIlO,EAAMgV,MAGpB9lD,KAAKylD,eAAiBoE,YAAY0rB,UAErCvb,EAAGpP,EAAI9Z,EAAM8Z,EAEL5qD,KAAKylD,eAAiBoE,YAAYuY,aAE1CpI,EAAGpP,EAAI9Z,EAAM8Z,EAAI9Z,EAAM6U,OAAS,EAIhCqU,EAAGpP,EAAI9Z,EAAM8Z,EAAI9Z,EAAM6U,OAIzB,OAAO,IAAIkF,YAAY3qD,KAAKm8D,MAAMrC,EAAGhb,GAAKwH,EAAIxmD,KAAKmnJ,eAAiBnnJ,KAAKo0D,OAAOpV,GAAKxX,GACpFtnC,KAAKm8D,MAAMrC,EAAGpP,GAAK7jD,EAAI/G,KAAKmnJ,eAAiBnnJ,KAAKo0D,OAAOxJ,GAAKpjB,GAAIgf,EAAIhf,EAAGzgC,EAAIygC,IAS/EiyG,cAAc/5I,UAAU8B,SAAW,WAElC,OAAOxB,KAAK05I,SAGb/4F,WAAW84F,cAAyC,qBAAlBA,cAAgCA,mBAAgBl5I,EAyElFo5I,UAAUj6I,UAAUwE,OAAS,KAO7By1I,UAAUj6I,UAAU2mG,QAAU,KAO9BszC,UAAUj6I,UAAU6jK,gBAAkB15G,YAAYke,sBAOlD4xE,UAAUj6I,UAAUgqF,SAAU,EAO9BiwD,UAAUj6I,UAAU8jK,cAAe,EAOnC7pB,UAAUj6I,UAAU6kE,OAAS,GAO7Bo1E,UAAUj6I,UAAU+jK,UAAY,EAOhC9pB,UAAUj6I,UAAUorJ,eAAgB,EAQpCnR,UAAUj6I,UAAUgkK,aAAc,EAOlC/pB,UAAUj6I,UAAUikK,WAAa,KAOjChqB,UAAUj6I,UAAU+sG,SAAW,KAkB/BktC,UAAUj6I,UAAUkkK,WAAY,EAUhCjqB,UAAUj6I,UAAUmkK,gBAA2C,GAAzB5oJ,SAASkmC,aAO/Cw4F,UAAUj6I,UAAUsgJ,YAAc,SAASjiF,GAE1C,IAAI3R,EAAQ,IAAIssF,QAAQ36E,EAAW/9D,KAAKkE,OAAOg/D,WAAYljE,KAAKujK,gBAAiBvjK,KAAKkE,OAAOkoJ,iBAI7F,OAHAhgG,EAAM4jF,gBAAiB,EACvB5jF,EAAMggC,YAAa,EAEZhgC,GAQRutF,UAAUj6I,UAAUglB,KAAO,SAASq5C,GAEnC/9D,KAAKqmG,QAAUrmG,KAAKggJ,YAAYjiF,GAGhC,IAAI+lG,EAA2B9jK,KAAKqmG,QAAQnV,kBAU5C,GATAlxF,KAAKqmG,QAAQnV,kBAAoBhrC,QAAQ1jD,KAAKxC,MAAM,SAASqsD,GAEvDrsD,KAAK4jK,WAA6B,MAAhB5jK,KAAKqmG,SAE3By9D,EAAyB/iK,MAAMf,KAAKqmG,QAASrlG,cAK3C4/C,SAASyB,OACb,CACC,IAAInvC,EAAOlT,KAAKqmG,QAAQv5C,UAAU46E,YAAYjxG,WAC9CvjB,EAAKglB,aAAa,kBAAmB,iBACrChlB,EAAKglB,aAAa,kBAAmB,iBAItCl4B,KAAKqmG,QAAQykD,cAAgB9qJ,KAAK8qJ,cAClC9qJ,KAAKqmG,QAAQhc,YAAW,GAExBrqF,KAAKyxI,cAAgBvrF,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEnDhmD,KAAK4jK,WAAc5jK,KAAKmvB,QAE5BnvB,KAAKoR,YAKPpR,KAAKkE,OAAOg/D,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKyxI,eACxDzxI,KAAKqmG,QAAQlW,iBAAiBnwF,MAG9B,IAAI29D,EAAO39D,KAAKkE,OAAO4oD,UACvB6Q,EAAKpW,YAAYC,QAAQk4B,MAAO1/E,KAAKyxI,eACrC9zE,EAAKpW,YAAYC,QAAQm4B,UAAW3/E,KAAKyxI,eACzC9zE,EAAKpW,YAAYC,QAAQo4B,oBAAqB5/E,KAAKyxI,eACnD9zE,EAAKpW,YAAYC,QAAQs4B,KAAM9/E,KAAKyxI,eACpC9zE,EAAKpW,YAAYC,QAAQq4B,GAAI7/E,KAAKyxI,eAGlCjqF,QAAQD,YAAYvnD,KAAKkE,OAAO65D,UAAW,SAAU/9D,KAAKyxI,eAE1DzxI,KAAK87I,WAAa51F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAEzCtnD,KAAK0jK,aAER1jK,KAAKyxI,cAAc1wI,MAAMf,KAAMgB,cAGjChB,KAAKkE,OAAOqjD,YAAYC,QAAQw1B,IAAKh9E,KAAK87I,YAG1C97I,KAAKk8I,eAAiBh2F,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAEjDtnD,KAAKqmG,QAAQ8yC,cAAcn5I,KAAKkE,OAAOkoJ,iBACvCpsJ,KAAKqmG,QAAQk3C,aAEdv9I,KAAKkE,OAAOqjD,YAAYC,QAAQ+1B,QAASv9E,KAAKk8I,gBAG9Cl8I,KAAK88D,OAAS,IAAIjS,YAAY,EAAG,EAAG,EAAG,GACvC7qD,KAAK+jK,gBAAkB,IAAI91D,iBAAiBjuG,KAAK88D,OAAQ,KACxDjT,YAAYqhB,cAAerhB,YAAYshB,qBACxCnrE,KAAK+jK,gBAAgBtgG,QAAUzjE,KAAKqmG,QAAQ5iC,QAExCzjE,KAAK6jK,kBAER7jK,KAAK+jK,gBAAgBp9D,cAAgB,WAEpC,OAAO,IAIT3mG,KAAK+jK,gBAAgBr/I,KAAK1kB,KAAKqmG,QAAQv5C,UAAU24C,kBAMjD,IAAI3rF,EAAUosC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEzC,IAAIgG,EAAIxE,QAAQkwB,UAAU1xB,GAEtBg+G,EAAW99G,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE1ChmD,KAAKqmG,QAAQvsB,eAAetyB,QAAQwyB,WAAY,IAAIpD,aAAa5wB,OAG9Di+G,EAAY/9G,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE3CwB,QAAQgyB,uBAAuBxtB,EAAG,KAAMg4G,EAAUC,GAClDjkK,KAAKqmG,QAAQvsB,eAAetyB,QAAQyyB,SAAU,IAAIrD,aAAa5wB,OAGhEwB,QAAQ4xB,oBAAoBptB,EAAG,KAAMg4G,EAAUC,GAC/CjkK,KAAKqmG,QAAQvsB,eAAetyB,QAAQuyB,WAAY,IAAInD,aAAa5wB,OAGlEwB,QAAQ4xB,oBAAoBp5E,KAAK+jK,gBAAgB7wJ,KAAM4G,GAGvD9Z,KAAKkkK,MAAQlkK,KAAKmkK,cAEdnkK,KAAK6jK,kBAER7jK,KAAKkkK,MAAMv9D,cAAgB,WAE1B,OAAO,IAIT3mG,KAAKkkK,MAAMx/I,KAAK1kB,KAAKqmG,QAAQv5C,UAAU24C,kBAEnCzlG,KAAK0pF,UAER1pF,KAAKkkK,MAAMhxJ,KAAK0U,MAAM6mC,OAAS,eAGhCjH,QAAQ4xB,oBAAoBp5E,KAAKkkK,MAAMhxJ,KAAM4G,GAE7C9Z,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAAW7rC,KAAiB,aAAI,GAAK,OACrEA,KAAKkkK,MAAMhxJ,KAAK0U,MAAMikB,QAAU7rC,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAChE7rC,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAM6mC,OAAS,OAEzCzuD,KAAKoR,QAAO,IASbuoI,UAAUj6I,UAAUyuD,UAAY,WAE/B,OAAOnuD,KAAK0pF,SAabiwD,UAAUj6I,UAAU2qF,WAAa,SAAS/sF,GAEzC0C,KAAK0pF,QAAUpsF,GAahBq8I,UAAUj6I,UAAU0kK,eAAiB,SAAS9mK,GAE7C0C,KAAKkkK,MAAMhxJ,KAAK0U,MAAMygC,WAAa,EAAU,UAAY,UAQ1DsxF,UAAUj6I,UAAU69I,QAAU,WAE7Bv9I,KAAKoR,QAAO,IAQbuoI,UAAUj6I,UAAUykK,YAAc,WAEjC,GAAuB,MAAnBnkK,KAAK2jK,WACT,CACC,IAAIO,EAAQ,IAAI50D,aAAa,IAAIzkD,YAAY,EAAG,EAAG7qD,KAAK2jK,WAAW79G,MAAO9lD,KAAK2jK,WAAWh+G,QAAS3lD,KAAK2jK,WAAW/uJ,KAGnH,OAFAsvJ,EAAMzgG,QAAUzjE,KAAKqmG,QAAQ5iC,QAEtBygG,EAIHA,EAAQ,IAAIj2D,iBAAiB,IAAIpjD,YAAY,EAAG,EAAG7qD,KAAKyjK,UAAWzjK,KAAKyjK,WAC3E55G,YAAY8hB,yBAA0B9hB,YAAY+hB,4BAGnD,OAFAs4F,EAAMzgG,QAAUzjE,KAAKqmG,QAAQ5iC,QAEtBygG,GASTvqB,UAAUj6I,UAAU2kK,uBAAyB,WAE5C,OAAO,IAAIx5G,YAAY,EAAG,EAAG7qD,KAAKkE,OAAO65D,UAAU8nC,YAAa7lG,KAAKkE,OAAO65D,UAAUxV,eAQvFoxF,UAAUj6I,UAAU4kK,iBAAmB,SAASn3G,GAE/C,OAAO,MAQRwsF,UAAUj6I,UAAU6kK,qBAAuB,WAE1C,OAAOvkK,KAAKkE,OAAO0gE,kBAQpB+0E,UAAUj6I,UAAU0R,OAAS,SAASooI,GAErC,GAAmB,MAAfx5I,KAAKkE,QAA2C,MAAzBlE,KAAKkE,OAAO65D,WACtB,MAAhB/9D,KAAKqmG,SAA6C,MAA1BrmG,KAAKqmG,QAAQtoC,UACtC,CACC,IAAIymG,EAAcxkK,KAAKkE,OAAOy5D,KAAKxQ,MAC/Bs3G,EAAoBzkK,KAAKukK,uBACzBG,EAAsB,IAAI75G,YAAY45G,EAAkBzlH,EAAIwlH,EAAcxkK,KAAKkE,OAAOgoF,MACxFu4E,EAAkB75G,EAAI45G,EAAcxkK,KAAKkE,OAAOioF,MAAOs4E,EAAkB3+G,MAAQ0+G,EACjFC,EAAkB9+G,OAAS6+G,GAEzBG,EAAuB,IAAI95G,YAAY,EAAG,EAC7C7qD,KAAKkE,OAAO65D,UAAUnX,YAAc49G,EACpCxkK,KAAKkE,OAAO65D,UAAUpX,aAAe69G,GAElCI,EAAQF,EAAoBlgJ,QAChCogJ,EAAMp+J,IAAIm+J,GAGV,IAAIlkH,EAAOzgD,KAAKqkK,yBACZQ,EAAgB3kK,KAAKwD,IAAI+8C,EAAKqF,MAAQ0+G,EAAaI,EAAM9+G,OACzDg/G,EAAiB5kK,KAAKwD,IAAI+8C,EAAKkF,OAAS6+G,EAAaI,EAAMj/G,QAE3Dq+D,EAAiB9jH,KAAKwD,IAAI,EAAG1D,KAAKqmG,QAAQtoC,UAAUnX,YAAc5mD,KAAKukE,QACvE4hE,EAAkBjmI,KAAKwD,IAAI,EAAG1D,KAAKqmG,QAAQtoC,UAAUpX,aAAe3mD,KAAKukE,QAEzEwgG,EAAe7kK,KAAKyD,IAAIqgH,EAAiB6gD,EAAe1+B,EAAkB2+B,GAC1E33G,EAAS9sD,MAAM0kK,GAAiB/kK,KAAKysG,SAAWvsG,KAAKwD,IAAI1D,KAAKysG,SAAUs4D,GAE5E,GAAI53G,EAAQ,EACZ,CACKntD,KAAKqmG,QAAQv5C,UAAUK,OAASA,IAEnCntD,KAAKqmG,QAAQv5C,UAAUK,MAAQA,EAC/BqsF,GAAa,GAGd,IAAIwrB,EAAUhlK,KAAKqmG,QAAQv5C,UAEvBk4G,EAAQlmD,aAAe9+G,KAAKkE,OAAO4oD,UAAUgyD,aAEhDkmD,EAAQlkB,eAAe9gJ,KAAKkE,OAAO4oD,UAAUgyD,aAG9C,IAAI9yD,EAAIhsD,KAAKkE,OAAOy5D,KAAKkG,UACrBvL,EAAKtM,EAAEhN,EAAIh/C,KAAKkE,OAAOgoF,MACvB3zB,EAAKvM,EAAEpB,EAAI5qD,KAAKkE,OAAOioF,MAEvBS,EAAM5sF,KAAKskK,iBAAiBn3G,GAErB,MAAPy/B,IAEHt0B,GAAMs0B,EAAI5tC,EACVuZ,GAAMq0B,EAAIhiC,GAGP85G,EAAoB1lH,EAAI,IAE3BsZ,GAAUosG,EAAoB1lH,GAE3B0lH,EAAoB95G,EAAI,IAE3B2N,GAAUmsG,EAAoB95G,GAG3Bo6G,EAAQnhG,UAAU7kB,GAAKsZ,GAAM0sG,EAAQnhG,UAAUjZ,GAAK2N,IAEvDysG,EAAQnhG,UAAU7kB,EAAIsZ,EACtB0sG,EAAQnhG,UAAUjZ,EAAI2N,EACtBihF,GAAa,GAId,IAAIpX,EAAK4iC,EAAQnhG,UACjB1W,EAAQntD,KAAKkE,OAAO4oD,UAAUK,MAC9B,IAAI83G,EAAS93G,EAAQ63G,EAAQ73G,MACzB+3G,EAAS,EAAMF,EAAQ73G,MACvB4Q,EAAY/9D,KAAKkE,OAAO65D,UAG5B/9D,KAAK88D,OAAS,IAAIjS,aAChBu3E,EAAGpjF,EAAIgN,EAAEhN,EAAIh/C,KAAKkE,OAAOgoF,OAASg5E,GAClC9iC,EAAGx3E,EAAIoB,EAAEpB,EAAI5qD,KAAKkE,OAAOioF,OAAS+4E,EAClCnnG,EAAUnX,YAAcq+G,EACxBlnG,EAAUpX,aAAes+G,GAG3BjlK,KAAK88D,OAAO9d,GAAKh/C,KAAKkE,OAAO65D,UAAUI,WAAa6mG,EAAQ73G,MAAQA,EACpEntD,KAAK88D,OAAOlS,GAAK5qD,KAAKkE,OAAO65D,UAAUzV,UAAY08G,EAAQ73G,MAAQA,EAEnE,IAAItsD,EAAIb,KAAK+jK,gBAAgBjnG,OAEzBj8D,EAAEm+C,GAAKh/C,KAAK88D,OAAO9d,GAAKn+C,EAAE+pD,GAAK5qD,KAAK88D,OAAOlS,GAAK/pD,EAAEilD,OAAS9lD,KAAK88D,OAAOhX,OAASjlD,EAAE8kD,QAAU3lD,KAAK88D,OAAOnX,SAE3G3lD,KAAK+jK,gBAAgBjnG,OAAS98D,KAAK88D,OACnC98D,KAAK+jK,gBAAgBv2G,UAIlB3sD,EAAIb,KAAKkkK,MAAMpnG,OAAnB,IACInR,EAAK,IAAId,YAAY7qD,KAAK88D,OAAO9d,EAAIh/C,KAAK88D,OAAOhX,MAAQjlD,EAAEilD,MAAQ,EACrE9lD,KAAK88D,OAAOlS,EAAI5qD,KAAK88D,OAAOnX,OAAS9kD,EAAE8kD,OAAS,EAAG9kD,EAAEilD,MAAOjlD,EAAE8kD,QAE5D9kD,EAAEm+C,GAAK2M,EAAG3M,GAAKn+C,EAAE+pD,GAAKe,EAAGf,GAAK/pD,EAAEilD,OAAS6F,EAAG7F,OAASjlD,EAAE8kD,QAAUgG,EAAGhG,SAEvE3lD,KAAKkkK,MAAMpnG,OAASnR,EAGoB,UAApC3rD,KAAKkkK,MAAMhxJ,KAAK0U,MAAMygC,YAEzBroD,KAAKkkK,MAAM12G,UAITgsF,GAEHx5I,KAAKqmG,QAAQ1oC,KAAK67E,gBAWtBG,UAAUj6I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEhD,GAAI3lF,KAAK0pF,SAAW1pF,KAAKwjK,aACzB,CACC,IAAI1kE,EAAQt3C,QAAQ6wB,aAAasN,EAAGlO,YAAuC,EAAxBz3E,KAAKkE,OAAOwuH,UAC3D5oH,EAAO9J,KAAKkE,OAAOihK,yBAA2BvkH,SAASE,OAASg+C,EAAM,GACxE,IAAIj0C,YAAY86B,EAAG3N,YAAc8mB,EAAKnZ,EAAG1N,YAAc6mB,EAAK,EAAIA,EAAK,EAAIA,GAAO,KAClF9+F,KAAK+iE,KAAO4iB,EAAGhO,SAAS33E,KAAKkkK,QAAkB,MAAPp6J,GAAeo8C,QAAQ8W,WAAW9P,MAAM4P,OAAQhzD,GACxF9J,KAAKinF,OAAStB,EAAG/N,OACjB53E,KAAKknF,OAASvB,EAAG7N,OACjB93E,KAAKmvB,QAAS,EAEVnvB,KAAKkE,OAAO4jJ,yBAA2B5hG,QAAQ6I,cAAc/uD,KAAKkE,OAAO65D,YAE5E/9D,KAAKy9G,IAAMz9G,KAAKkE,OAAO65D,UAAUI,WACjCn+D,KAAK09G,IAAM19G,KAAKkE,OAAO65D,UAAUzV,YAIjCtoD,KAAKy9G,IAAM,EACXz9G,KAAK09G,IAAM,GAIb/3B,EAAGrO,WASJqiE,UAAUj6I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEhD,GAAI3lF,KAAKmvB,OACT,CACCnvB,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAAW7rC,KAAiB,aAAI,GAAK,OACrEA,KAAKkkK,MAAMhxJ,KAAK0U,MAAMikB,QAAU7rC,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAEhE,IAAIwuC,EAAQr6E,KAAKolK,qBAAqBz/E,GAClC92C,EAAKwrC,EAAMr7B,EACXjQ,EAAKsrC,EAAMzvB,EACXkS,EAAS,KAEb,GAAK98D,KAAK+iE,KAeV,CAEC,IAAIhF,EAAY/9D,KAAKkE,OAAO65D,UACxBsnG,EAAYtnG,EAAUnX,YAAcmX,EAAUpX,aAClD5X,EAAKF,EAAKw2H,EACVvoG,EAAS,IAAIjS,YAAY7qD,KAAK88D,OAAO9d,EACpCh/C,KAAK88D,OAAOlS,EACZ1qD,KAAKwD,IAAI,EAAG1D,KAAK88D,OAAOhX,MAAQjX,GAChC3uC,KAAKwD,IAAI,EAAG1D,KAAK88D,OAAOnX,OAAS5W,IAClC/uC,KAAK+jK,gBAAgBjnG,OAASA,EAC9B98D,KAAK+jK,gBAAgBv2G,aAxBtB,CAEC,IAAIL,EAAQntD,KAAKqmG,QAAQv5C,UAAUK,MACnC2P,EAAS,IAAIjS,YAAY7qD,KAAK88D,OAAO9d,EAAInQ,EACxC7uC,KAAK88D,OAAOlS,EAAI7b,EAAI/uC,KAAK88D,OAAOhX,MAAO9lD,KAAK88D,OAAOnX,QACpD3lD,KAAK+jK,gBAAgBjnG,OAASA,EAC9B98D,KAAK+jK,gBAAgBv2G,SACrB3e,GAAMse,EACNte,GAAM7uC,KAAKkE,OAAO4oD,UAAUK,MAC5Bpe,GAAMoe,EACNpe,GAAM/uC,KAAKkE,OAAO4oD,UAAUK,MAC5BntD,KAAKkE,OAAOqsF,UAAU1hD,EAAK7uC,KAAKy9G,KAAM1uE,EAAK/uC,KAAK09G,KAiBjD,IAAI78G,EAAIb,KAAKkkK,MAAMpnG,OACnB98D,KAAKkkK,MAAMpnG,OAAS,IAAIjS,YACvBiS,EAAO9d,EAAI8d,EAAOhX,MAAQjlD,EAAEilD,MAAQ,EACpCgX,EAAOlS,EAAIkS,EAAOnX,OAAS9kD,EAAE8kD,OAAS,EACtC9kD,EAAEilD,MAAOjlD,EAAE8kD,QAG4B,UAApC3lD,KAAKkkK,MAAMhxJ,KAAK0U,MAAMygC,YAEzBroD,KAAKkkK,MAAM12G,SAGZm4B,EAAGrO,YA0BLqiE,UAAUj6I,UAAU0lK,qBAAuB,SAASz/E,GAEnD,OAAO,IAAIh7B,QAAQg7B,EAAG/N,OAAS53E,KAAKinF,OAAQtB,EAAG7N,OAAS93E,KAAKknF,SAQ9DyyD,UAAUj6I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAE9C,GAAI3lF,KAAKmvB,OACT,CACC,IAAIkrD,EAAQr6E,KAAKolK,qBAAqBz/E,GAClC92C,EAAKwrC,EAAMr7B,EACXjQ,EAAKsrC,EAAMzvB,EAEf,GAAI1qD,KAAKk3D,IAAIvoB,GAAM,GAAK3uC,KAAKk3D,IAAIroB,GAAM,EACvC,CACC,GAAK/uC,KAAK+iE,KAeV,CAEC,IAAIvc,EAAIxmD,KAAK+jK,gBAAgBjnG,OAAOhX,MAChCqH,EAAQntD,KAAKkE,OAAO4oD,UAAUK,MAClCntD,KAAKkE,OAAO84I,OAAO98I,KAAKwD,IAAI1D,KAAKysG,SAAUt/C,EAASte,EAAKse,EAAS3G,IAAI,QAftE,IAAKxmD,KAAKkE,OAAO4jJ,0BACf5hG,QAAQ6I,cAAc/uD,KAAKkE,OAAO65D,WACpC,CACC/9D,KAAKkE,OAAOqsF,SAAS,EAAG,GACxB1hD,GAAM7uC,KAAKqmG,QAAQv5C,UAAUK,MAC7Bpe,GAAM/uC,KAAKqmG,QAAQv5C,UAAUK,MAC7B,IAAInB,EAAIhsD,KAAKkE,OAAO4oD,UAAU+W,UAC9B7jE,KAAKkE,OAAO4oD,UAAUgkC,aAAa9kC,EAAEhN,EAAInQ,EAAImd,EAAEpB,EAAI7b,GAWrD/uC,KAAKoR,SACLu0E,EAAGrO,UAIJt3E,KAAKoD,MAAQ,KACbpD,KAAKmvB,QAAS,IAShBwqH,UAAUj6I,UAAUgmB,QAAU,WAEV,MAAf1lB,KAAKkE,SAERlE,KAAKkE,OAAOs0E,eAAex4E,KAAK87I,YAChC97I,KAAKkE,OAAOs0E,eAAex4E,KAAKk8I,gBAChCl8I,KAAKkE,OAAOg/D,WAAWsV,eAAex4E,KAAKyxI,eAC3CzxI,KAAKkE,OAAO4oD,UAAU0rB,eAAex4E,KAAKyxI,eAC1CjqF,QAAQgxB,eAAex4E,KAAKkE,OAAO65D,UAAW,SAAU/9D,KAAKyxI,eAC7DzxI,KAAKkE,OAAS,MAGK,MAAhBlE,KAAKqmG,UAERrmG,KAAKqmG,QAAQtV,oBAAoB/wF,MACjCA,KAAKqmG,QAAQ3gF,UACb1lB,KAAKqmG,QAAU,MAGY,MAAxBrmG,KAAK+jK,kBAER/jK,KAAK+jK,gBAAgBr+I,UACrB1lB,KAAK+jK,gBAAkB,MAGN,MAAd/jK,KAAKkkK,QAERlkK,KAAKkkK,MAAMx+I,UACX1lB,KAAKkkK,MAAQ,OAIfvjH,WAAWg5F,UAAiC,qBAAdA,UAA4BA,eAAYp5I,EAyEtEq5I,eAAel6I,UAAUiX,KAAO,KAQhCijI,eAAel6I,UAAUq2B,KAAO,KAQhC6jH,eAAel6I,UAAUpC,MAAQ,KAQjCs8I,eAAel6I,UAAUwE,OAAS,KAQlC01I,eAAel6I,UAAUiE,IAAM,KAQ/Bi2I,eAAel6I,UAAUgE,IAAM,KAS/Bk2I,eAAel6I,UAAUm6I,eAAiB,KAQ1CD,eAAel6I,UAAUs6I,uBAAwB,EASjDJ,eAAel6I,UAAUo6I,WAAa,KAQtCF,eAAel6I,UAAUq6I,UAAY,KAiBrCH,eAAel6I,UAAU6xC,MAAQ,SAAS6a,EAAOiO,EAAMn2D,EAAQE,EAAQy1J,EAAWC,GAEjF,IAAIr7J,EAAQ,GAEZ,IAAKuB,KAAKkE,QAAUlE,KAAKslK,cAAcl5G,EAAOloD,EAAQm2D,KACnDr6D,KAAKkE,QAAUlE,KAAKslK,cAAcl5G,EAAOhoD,EAAQi2D,MAE5B,MAAnBr6D,KAAK85I,aACN95I,KAAKkE,SAAuB,GAAZlE,KAAK0D,KAAam2J,GAAa75J,KAAK0D,OACpD1D,KAAKkE,SAAuB,GAAZlE,KAAK0D,KAAao2J,GAAY95J,KAAK0D,QAErDjF,GAASuB,KAAK85I,WAAa,MAGD,MAAvB95I,KAAK65I,gBAA4C,MAAlB75I,KAAK+5I,WAAqB/5I,KAAK65I,eAAej5I,OAAS,GAC1F,CACC,IAAIq5J,EAAUj6J,KAAKulK,eAAen5G,EAAOiO,EAAMn2D,EAAQE,GAElD61J,IAEJx7J,GAASuB,KAAK+5I,UAAY,MAK7B,OAAQt7I,EAAMmC,OAAS,EAAKnC,EAAQ,MASrCm7I,eAAel6I,UAAU6lK,eAAiB,SAASn5G,EAAOiO,EAAMn2D,EAAQE,GAOvE,IALA,IAAIohK,EAAcp5G,EAAMhmC,MAAMskB,SAASxmC,GACnCuhK,EAAcr5G,EAAMhmC,MAAMskB,SAAStmC,GACnC61J,GAAWj6J,KAAKg6I,sBAChBopB,EAAQpjK,KAAK65I,eAERrsH,EAAI,EAAGA,EAAI41I,EAAMxiK,OAAQ4sB,IAClC,CACC,GAAIxtB,KAAKkE,QACRlE,KAAK0lK,UAAUt5G,EAAOq5G,EAAarC,EAAM51I,IAC1C,CACCysI,EAAUj6J,KAAKg6I,sBACf,MAEI,IAAKh6I,KAAKkE,QACdlE,KAAK0lK,UAAUt5G,EAAOo5G,EAAapC,EAAM51I,IAC1C,CACCysI,EAAUj6J,KAAKg6I,sBACf,OAIF,OAAOigB,GAURrgB,eAAel6I,UAAU4lK,cAAgB,SAASl5G,EAAOgO,EAAUC,GAElE,IAAI/8D,EAAQ8uD,EAAMhmC,MAAMskB,SAAS0vB,GAEjC,OAAOp6D,KAAK0lK,UAAUt5G,EAAO9uD,EAAO0C,KAAK2W,KAAM3W,KAAK+1B,KAAM/1B,KAAK1C,QAQhEs8I,eAAel6I,UAAUgmK,UAAY,SAASt5G,EAAO9uD,EAAOqZ,EAAMof,EAAM4vI,GAEvE,OAAa,MAATroK,IAEE+C,MAAM/C,EAAMugC,UAMTvgC,GAASqZ,EAJTuvC,QAAQwJ,OAAOpyD,EAAOqZ,EAAMof,EAAM4vI,KAW5ChlH,WAAWi5F,eAA2C,qBAAnBA,eAAiCA,oBAAiBr5I,EA6DrF05I,gBAAgBv6I,UAAY,IAAIo3E,cAChCmjE,gBAAgBv6I,UAAUqyB,YAAckoH,gBAOxCA,gBAAgBv6I,UAAU0sD,MAAQ,KAQlC6tF,gBAAgBv6I,UAAUkmK,UAAW,EAOrC3rB,gBAAgBv6I,UAAUgqF,SAAU,EAOpCuwD,gBAAgBv6I,UAAU+xI,cAAgB,KAO1CwI,gBAAgBv6I,UAAU06I,YAAc,KAQxCH,gBAAgBv6I,UAAUyuD,UAAY,WAErC,OAAOnuD,KAAK0pF,SAabuwD,gBAAgBv6I,UAAU2qF,WAAa,SAASX,GAE/C1pF,KAAK0pF,QAAUA,GAUhBuwD,gBAAgBv6I,UAAUmmK,WAAa,WAEtC,OAAO7lK,KAAK4lK,UAQb3rB,gBAAgBv6I,UAAUomK,YAAc,SAASxoK,GAEhD0C,KAAK4lK,SAAWtoK,GAQjB28I,gBAAgBv6I,UAAU4xG,SAAW,WAEpC,OAAOtxG,KAAKosD,OAQb6tF,gBAAgBv6I,UAAUyxF,SAAW,SAAS/kC,GAE7C,GAAkB,MAAdpsD,KAAKosD,MACT,CACC,IAAIhmC,EAAQpmB,KAAKosD,MAAM8W,WACvB98C,EAAMoyD,eAAex4E,KAAKk6I,aAC1Bl6I,KAAKosD,MAAMosB,eAAex4E,KAAKo6I,aAKhC,GAFAp6I,KAAKosD,MAAQA,EAEK,MAAdpsD,KAAKosD,MACT,CACKhmC,EAAQpmB,KAAKosD,MAAM8W,WACvB98C,EAAMmhC,YAAYC,QAAQ23B,YAAan/E,KAAKk6I,aAC5Cl6I,KAAKosD,MAAM7E,YAAYC,QAAQ44B,WAAYpgF,KAAKo6I,eASlDH,gBAAgBv6I,UAAUqmK,UAAY,SAAS1/J,GAE9C,OAAO,MAaR4zI,gBAAgBv6I,UAAUy6I,WAAa,SAAS3qD,GAQ/C,IANA,IAAIpvB,EAAQpgE,KAAKgmK,mBAAmBx2E,EAAanjC,SAC7CjmC,EAAQpmB,KAAKsxG,WAAWpuC,WAGxBvzC,EAAM,GAEDzmB,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCymB,EAAMA,EAAI3wB,OAAOonB,EAAMo2G,eAAep8D,EAAMl3D,KAM7C,GAHAk3D,EAAQzwC,EAGJ3vB,KAAK6lK,aACT,CACCl2I,EAAMvJ,EAAM65G,WAAW7/D,GAEvB,MAAOzwC,EAAI/uB,OAAS,EAEnBw/D,EAAQA,EAAMphE,OAAO2wB,GACrBA,EAAMvJ,EAAM65G,WAAWtwG,GAIzB3vB,KAAKimK,sBAAsB7lG,IAQ5B65E,gBAAgBv6I,UAAUumK,sBAAwB,SAAS7lG,GAK1D,IAAI8lG,EAAShgH,QAAQia,UAAUC,GAAO,GACtC8lG,EAASA,EAAOlnK,OAAOknK,EAAO57J,QAAQ67J,WACtCnmK,KAAKomK,YAAYF,IAalBjsB,gBAAgBv6I,UAAU26I,WAAa,SAASj6E,EAAOpa,GAEtD,GAAa,MAAToa,GAAwB,MAAPpa,EAQpB,IANA,IAAI/T,EAAQiU,QAAQ2Y,aAAa7+D,KAAKsxG,WAAWvzC,UAChDvW,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IACzC5/B,EAAQpmB,KAAKsxG,WAAWpuC,WAInBh6D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI7C,EAAS+f,EAAM2vE,UAAU31B,EAAMl3D,IAEnC,GAAIg9C,QAAQ18C,QAAQ42D,EAAO/5D,GAAU,EACrC,CACC,IAAI6qG,EAASlxG,KAAK+lK,UAAU1/J,GAEd,MAAV6qG,GAEHA,EAAOyK,SAASv7C,EAAMl3D,GAAI+oC,EAAM+M,EAAG/M,EAAM2Y,MAY9CqvF,gBAAgBv6I,UAAUsmK,mBAAqB,SAAS35G,GAKvD,IAHA,IAAI+J,EAAO,IAAIxN,aACX/lD,EAAS,GAEJqG,EAAI,EAAGA,EAAImjD,EAAQzrD,OAAQsI,IACpC,CACC,IAAI63B,EAASsrB,EAAQnjD,GAErB,GAAI63B,aAAkBs3F,aAErB,MAAO,GAMP,IAFA,IAAIj4D,EAAQpgE,KAAKqmK,kBAAkBtlI,GAE1BvT,EAAI,EAAGA,EAAI4yC,EAAMx/D,OAAQ4sB,IAEjB,MAAZ4yC,EAAM5yC,IAAe4oC,EAAK/2D,IAAI+gE,EAAM5yC,MAEvC4oC,EAAKvN,IAAIuX,EAAM5yC,IAAI,GACnB3qB,EAAOkO,KAAKqvD,EAAM5yC,KAMtB,OAAO3qB,GASRo3I,gBAAgBv6I,UAAU2mK,kBAAoB,SAAStlI,GAEtD,IAAI3a,EAAQpmB,KAAKsxG,WAAWpuC,WAE5B,OAAIniC,aAAkB6rB,cAEd,CAAC7rB,EAAOhuB,MAAOguB,EAAO+nB,SAAU1iC,EAAM2vE,UAAUh1D,EAAOhuB,QAEtDguB,aAAkB2rB,kBAAoB3rB,aAAkB0rB,iBAEzD,CAAC1rB,EAAOisB,KAAM5mC,EAAM2vE,UAAUh1D,EAAOisB,OAEpCjsB,aAAkB03F,iBAAmB13F,aAAkB8rB,cAExD,CAAC9rB,EAAOisB,MAGT,IASRitF,gBAAgBv6I,UAAU0mK,YAAc,SAAShmG,GAEhD,GAAIA,EAAMx/D,OAAS,EACnB,CAEC,IAAIwlB,EAAQpmB,KAAKsxG,WAAWpuC,WAE5B98C,EAAMk7C,cACN,IAIC,IAFA,IAAIxjD,EAAO,KAEF5U,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE7Bk3D,EAAMl3D,IAAMkd,EAAM+8C,WAAa/C,EAAMl3D,IAAM4U,GAE1C9d,KAAKsmK,cAActmK,KAAK+lK,UAAU3lG,EAAMl3D,IAAKk3D,EAAMl3D,MAEtD4U,EAAOsiD,EAAMl3D,IAKhBlJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQg4B,aAAc,QAASpf,IAEjE,QAECh6C,EAAMo7C,eAUTy4E,gBAAgBv6I,UAAU4mK,cAAgB,SAASp1D,EAAQ7qG,GAE1D,IAAIxD,GAAS,EAQb,OANc,MAAVquG,GAA4B,MAAV7qG,IAErB6qG,EAAOz9C,QAAQptD,GACfxD,GAAS,GAGHA,GAQRo3I,gBAAgBv6I,UAAUgmB,QAAU,WAEnC1lB,KAAKmxF,SAAS,OAGfxwC,WAAWs5F,gBAA6C,qBAApBA,gBAAkCA,qBAAkB15I,EAkDxF+5I,kBAAkB56I,UAAY,IAAIo3E,cAClCwjE,kBAAkB56I,UAAUqyB,YAAcuoH,kBAO1CA,kBAAkB56I,UAAU0sD,MAAQ,KAOpCkuF,kBAAkB56I,UAAUgqF,SAAU,EAOtC4wD,kBAAkB56I,UAAUukG,YAAa,EAQzCq2C,kBAAkB56I,UAAU66I,YAAa,EAOzCD,kBAAkB56I,UAAU86I,eAAgB,EAO5CF,kBAAkB56I,UAAU+6I,WAAa,KAOzCH,kBAAkB56I,UAAU2nD,cAAgB,KAQ5CizF,kBAAkB56I,UAAUyuD,UAAY,WAEvC,OAAOnuD,KAAK0pF,SAab4wD,kBAAkB56I,UAAU2qF,WAAa,SAAS/sF,GAEjD0C,KAAK0pF,QAAUpsF,GAQhBg9I,kBAAkB56I,UAAUs7G,aAAe,WAE1C,OAAOh7G,KAAKikG,YAQbq2C,kBAAkB56I,UAAU6mK,cAAgB,SAASjpK,GAEpD0C,KAAKikG,WAAa3mG,GAQnBg9I,kBAAkB56I,UAAUg7I,aAAe,WAE1C,OAAO16I,KAAKu6I,YAQbD,kBAAkB56I,UAAU8mK,cAAgB,SAASlpK,GAEpD0C,KAAKu6I,WAAaj9I,GAQnBg9I,kBAAkB56I,UAAUk7I,gBAAkB,WAE7C,OAAO56I,KAAKw6I,eAQbF,kBAAkB56I,UAAU+mK,iBAAmB,SAASnpK,GAEvD0C,KAAKw6I,cAAgBl9I,GAQtBg9I,kBAAkB56I,UAAU4xG,SAAW,WAEtC,OAAOtxG,KAAKosD,OAQbkuF,kBAAkB56I,UAAUyxF,SAAW,SAAS/kC,GAE7B,MAAdpsD,KAAKosD,QAERpsD,KAAKosD,MAAMosB,eAAex4E,KAAKy6I,YAC/Bz6I,KAAKosD,MAAMosB,eAAex4E,KAAKqnD,gBAGhCrnD,KAAKosD,MAAQA,EAEK,MAAdpsD,KAAKosD,QAERpsD,KAAKosD,MAAM7E,YAAYC,QAAQ04B,UAAWlgF,KAAKy6I,YAC/Cz6I,KAAKosD,MAAM7E,YAAYC,QAAQ+4B,cAAevgF,KAAKqnD,iBASrDizF,kBAAkB56I,UAAUgnK,kBAAoB,SAASzY,GAExD,OAAQjuJ,KAAKsxG,WAAW+N,WAAW4uC,IASpC3T,kBAAkB56I,UAAUinK,iBAAmB,SAAS35G,GAEvD,GAAIhtD,KAAKosD,MAAMizD,WAAWryD,GAC1B,CACC,IAAIplC,EAAQ5nB,KAAKosD,MAAMyvD,aAAa7uD,GAEpC,OAAmE,GAA5D9G,QAAQxb,SAAS9iB,EAAOiiC,YAAY+T,iBAAkB,GAG9D,OAAQ59D,KAAKg7G,gBAYds/B,kBAAkB56I,UAAUi7I,WAAa,SAASv6E,GAEjD,GAAa,MAATA,EACJ,CACC,IAAIh6C,EAAQpmB,KAAKsxG,WAAWpuC,WAE5B98C,EAAMk7C,cACN,IAEC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAE5BlJ,KAAK0mK,kBAAkBtmG,EAAMl3D,KAEjClJ,KAAK4mK,cAAcxmG,EAAMl3D,IAI5B,QAECkd,EAAMo7C,eAeT84E,kBAAkB56I,UAAUknK,cAAgB,SAAS3Y,GAQpD,IANA,IAAI7nI,EAAQpmB,KAAKsxG,WAAWpuC,WACxB78D,EAAS+f,EAAM2vE,UAAUk4D,GACzBtgG,EAAavnC,EAAMwnC,cAAcvnD,GACjC2vF,EAAM,KAGD9sF,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWxnD,EAAQ6C,GAErC,GAAI6J,GAASk7I,IAAajuJ,KAAK0mK,kBAAkB3zJ,KAEhDijF,EAAM5vE,EAAM62F,YAAYlqG,GAEb,MAAPijF,GAEH,MAMH,GAAW,MAAPA,EACJ,CACC,IAAI6wE,EAA8B,MAAVxgK,EAAkBrG,KAAK2mK,iBAAiBtgK,GAAUrG,KAAKikG,WAC/EjkG,KAAK8mK,eAAe7Y,EAAUj4D,EAAIlwC,MAAOkwC,EAAIrwC,OAAQkhH,KAcvDvsB,kBAAkB56I,UAAUm7I,aAAe,SAASz6E,GAEnD,GAAa,MAATA,EACJ,CACC,IAAIh6C,EAAQpmB,KAAKsxG,WAAWpuC,WAE5B98C,EAAMk7C,cACN,IAGC,IAAK,IAAIp4D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,IAAKlJ,KAAK0mK,kBAAkBtmG,EAAMl3D,IAClC,CACC,IAAI8sF,EAAM5vE,EAAM62F,YAAY78C,EAAMl3D,IAElC,GAAW,MAAP8sF,EACJ,CACC,IAAIv1C,EAAO,IAAIoK,YAAY,EAAG,EAAGmrC,EAAIlwC,MAAOkwC,EAAIrwC,QAC5C3W,EAAMoxB,EAAMl3D,GACZwrB,EAAUsa,EAEd,MAAkB,MAAXta,EACP,CACCsa,EAAMta,EACNA,EAAUtO,EAAM2vE,UAAUrhE,GAC1B,IAAI/E,EAAO3vB,KAAKosD,MAAMizD,WAAW3qF,GAC/B10B,KAAKosD,MAAM0zD,aAAaprF,GACxB,IAAIm2B,YACNpK,EAAKqF,OAASn2B,EAAIm2B,MAClBrF,EAAKkF,QAAUh2B,EAAIg2B,OAGpB,IAAIkhH,EAA+B,MAAXnyI,EAAmB10B,KAAK2mK,iBAAiBjyI,GAAW10B,KAAKikG,WACjFjkG,KAAK8mK,eAAe93H,EAAKyR,EAAKqF,MAAOrF,EAAKkF,OAAQkhH,KAKtD,QAECzgJ,EAAMo7C,eAgBT84E,kBAAkB56I,UAAUonK,eAAiB,SAAS7Y,EAAUznG,EAAGz/C,EAAG8/J,GAErE,IAAIzgJ,EAAQpmB,KAAKsxG,WAAWpuC,WAE5B98C,EAAMk7C,cACN,IAEC,IAAI2iC,EAAajkG,KAAK2mK,iBAAiB1Y,GAEvC,IAAKjuJ,KAAK0mK,kBAAkBzY,GAC5B,CACC,IAAIj4D,EAAM5vE,EAAM62F,YAAYgxC,GAEjB,MAAPj4D,IAEE6wE,GAAoB7wE,EAAIrwC,QAAU5+C,IAAQ8/J,GAAoB7wE,EAAIlwC,OAASU,KAE/EwvC,EAAMA,EAAIxxE,QAENqiJ,EAEH7wE,EAAIrwC,OAAS5+C,EAIbivF,EAAIlwC,MAAQU,EAGbpgC,EAAMk3F,YAAY2wC,EAAUj4D,IAK/B,IAAIrmE,EAAO3vB,KAAKosD,MAAMizD,WAAW4uC,GAC/BjuJ,KAAKosD,MAAM0zD,aAAamuC,GACxB,IAAIpjG,YACNrE,GAAK72B,EAAIm2B,MACT/+C,GAAK4oB,EAAIg2B,OAIT,IAFA,IAAIgI,EAAavnC,EAAMwnC,cAAcqgG,GAE5B/kJ,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWogG,EAAU/kJ,GACvClJ,KAAK8mK,eAAe/zJ,EAAOyzC,EAAGz/C,EAAGk9F,IAGnC,QAEC79E,EAAMo7C,cASR84E,kBAAkB56I,UAAUgmB,QAAU,WAErC1lB,KAAKmxF,SAAS,OAGfxwC,WAAW25F,kBAAiD,qBAAtBA,kBAAoCA,uBAAoB/5I,EAmG9FyjE,sBAAsBtkE,UAAUi+D,KAAO,KAOvCqG,sBAAsBtkE,UAAUw7I,UAAY,KAO5Cl3E,sBAAsBtkE,UAAUu7I,UAAY,KAO5Cj3E,sBAAsBtkE,UAAU07I,SAAW,KAO3Cp3E,sBAAsBtkE,UAAUgmB,QAAU,WAEzC1lB,KAAK29D,KAAK69E,SAASx7I,KAAKo7I,UACxBp7I,KAAK29D,KAAKujC,UAAUlhG,KAAKk7I,WACzBl7I,KAAK29D,KAAKg+E,eAAe37I,KAAKi7I,WAC9Bj7I,KAAK29D,KAAKq9E,kBAAoBh7I,KAAK+6I,qBACnC/6I,KAAK29D,KAAKvR,MAAMmB,aAAaokF,cAAgB3xI,KAAKq7I,kBAGnD16F,WAAWqjB,sBAAyD,qBAA1BA,sBAAwCA,2BAAwBzjE,EA+B1Gg1F,mBAAmB71F,UAAU0sD,MAAQ,KAOrCmpC,mBAAmB71F,UAAUk8I,OAAS,KAOtCrmD,mBAAmB71F,UAAUuzD,MAAQ,EAOrCsiC,mBAAmB71F,UAAUgkF,QAAU,WAEtC,OAAqB,GAAd1jF,KAAKizD,OAMbsiC,mBAAmB71F,UAAUk2F,UAAY,SAAS9kD,EAAOjC,EAAIE,EAAIvoC,EAAK66I,GAErE76I,EAAc,MAAPA,GAAeA,EACtB66I,EAAgC,MAAhBA,GAAwBA,EAExC,IAAIhnE,EAAQr6E,KAAK47I,OAAOv8I,IAAIyxC,EAAMkc,MAyBlC,OAvBa,MAATqtB,GAGHA,EAAQ,CAACpoC,MAAO,IAAI0Y,QAAQ9b,EAAIE,GAAK+B,MAAOA,GAC5C9wC,KAAK47I,OAAO/yF,IAAI/X,EAAMkc,KAAMqtB,GAC5Br6E,KAAKizD,SAEGzsD,GAER6zE,EAAMpoC,MAAM+M,GAAKnQ,EACjBwrC,EAAMpoC,MAAM2Y,GAAK7b,IAIjBsrC,EAAMpoC,MAAM+M,EAAInQ,EAChBwrC,EAAMpoC,MAAM2Y,EAAI7b,GAGbsyG,GAEHrhJ,KAAK+mK,SAASj2H,GAGRupC,EAAMpoC,OAMdsjD,mBAAmB71F,UAAU2pC,KAAO,SAAS6f,GAE5ClpD,KAAK47I,OAAO3yF,MAAM/C,QAAQ1jD,KAAKxC,MAAM,SAAS3C,EAAKg9E,GAElDr6E,KAAKgnK,eAAe3sF,EAAMvpC,MAAOupC,EAAMpoC,MAAM+M,EAAGq7B,EAAMpoC,MAAM2Y,OAG7D5qD,KAAK47I,OAAO3yF,MAAM/C,QAAQ1jD,KAAKxC,MAAM,SAAS3C,EAAKg9E,GAElDr6E,KAAKinK,gBAAgB5sF,EAAMvpC,MAAOupC,EAAMpoC,MAAM+M,EAAGq7B,EAAMpoC,MAAM2Y,EAAG1B,QAOlEqsC,mBAAmB71F,UAAUsnK,eAAiB,SAASl2H,EAAOjC,EAAIE,GAEjE,GAAa,MAAT+B,EACJ,CACC,IAAI1qB,EAAQpmB,KAAKosD,MAAM8W,WAEvB,GAAI98C,EAAMuvE,SAAS7kD,EAAMkc,MACzB,CACClc,EAAM6sB,KAAKwkF,gBAAgBrxG,GAC3B,IAAIklD,EAAM5vE,EAAM62F,YAAYnsE,EAAMkc,MAKvB,GAANne,GAAiB,GAANE,GAAmB,MAAPinD,GAAiBA,EAAIE,UAA2C,MAA/Bl2F,KAAK47I,OAAOv8I,IAAIyxC,EAAMkc,QAElFlc,EAAMkO,GAAKnQ,EACXiC,EAAM8Z,GAAK7b,GAMV,IAFA,IAAI4e,EAAavnC,EAAMwnC,cAAc9c,EAAMkc,MAElC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKgnK,eAAel2H,EAAM6sB,KAAK5Q,SAAS3mC,EAAMynC,WAAW/c,EAAMkc,KAAM9jD,IAAK2lC,EAAIE,KAQpFwmD,mBAAmB71F,UAAUunK,gBAAkB,SAASn2H,EAAOjC,EAAIE,EAAIma,GAEtE,GAAa,MAATpY,EACJ,CACC,IAAI1qB,EAAQpmB,KAAKosD,MAAM8W,WAInB98C,EAAMjX,OAAO2hC,EAAMkc,OAEtBlc,EAAM6sB,KAAKwkF,gBAAgBrxG,GAG5B,IAAIklD,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBnlD,EAAMkc,MACvCq1F,EAASvxG,EAAM6sB,KAAK5Q,SAAS3mC,EAAM2vE,UAAUjlD,EAAMkc,OAG5C,GAANne,GAAiB,GAANE,GAAmB,MAAPinD,IAAeA,EAAIE,WAC9C9vE,EAAMuvE,SAAS7kD,EAAMkc,OAAoB,MAAVq1F,IAC/Bj8H,EAAMuvE,SAAS0sD,EAAOr1F,OAAwC,MAA/BhtD,KAAK47I,OAAOv8I,IAAIyxC,EAAMkc,QAErDlc,EAAMkO,GAAKnQ,EACXiC,EAAM8Z,GAAK7b,GAGZ/uC,KAAKosD,MAAMmB,aAAaC,OAAO1c,GAGhB,MAAXoY,GAEHA,EAAQpY,GAKN,IAFA,IAAI6c,EAAavnC,EAAMwnC,cAAc9c,EAAMkc,MAElC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKinK,gBAAgBjnK,KAAKosD,MAAMuR,KAAK5Q,SAAS3mC,EAAMynC,WAAW/c,EAAMkc,KAAM9jD,IAAK2lC,EAAIE,EAAIma,KAQ9FqsC,mBAAmB71F,UAAUqnK,SAAW,SAASj2H,GAKhD,IAHA,IAAI1qB,EAAQpmB,KAAKosD,MAAM8W,WACnBg5C,EAAY91F,EAAM+1F,aAAarrE,EAAMkc,MAEhC9jD,EAAI,EAAGA,EAAIgzG,EAAWhzG,IAC/B,CACC,IAAIs+B,EAAIsJ,EAAM6sB,KAAK5Q,SAAS3mC,EAAMg2F,UAAUtrE,EAAMkc,KAAM9jD,IAE/C,MAALs+B,GAEHxnC,KAAK41F,UAAUpuD,EAAG,EAAG,KAKxBmZ,WAAW40C,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBh1F,EAsCjG4rG,uBAAuBzsG,UAAUuyC,MAAQ,KAQzCk6D,uBAAuBzsG,UAAUwsG,UAAY,KAO7CC,uBAAuBzsG,UAAU5B,KAAO,KAOxCquG,uBAAuBzsG,UAAUmvC,GAAK,KAOtCs9D,uBAAuBzsG,UAAUqvC,GAAK,KAGtC4R,WAAWwrD,uBAA2D,qBAA3BA,uBAAyCA,4BAAyB5rG,EAqF7Gs7I,eAAen8I,UAAU0sD,MAAQ,KAYjCyvF,eAAen8I,UAAUwnK,SAAYtmH,SAAc,MAAI,GAAK,GAO5Di7F,eAAen8I,UAAUgqF,SAAU,EAQnCmyD,eAAen8I,UAAUynK,kBAAmB,EAO5CtrB,eAAen8I,UAAU0nK,cAAe,EAOxCvrB,eAAen8I,UAAU2nK,aAAc,EAQvCxrB,eAAen8I,UAAUsqF,eAAgB,EAOzC6xD,eAAen8I,UAAU8kG,MAAQ,KAOjCq3C,eAAen8I,UAAU4nK,UAAY,KAOrCzrB,eAAen8I,UAAU6nK,UAAY,KAQrC1rB,eAAen8I,UAAU8nK,cAAe,EAOxC3rB,eAAen8I,UAAU+nK,eAAgB,EAOzC5rB,eAAen8I,UAAUizJ,uBAAwB,EAQjD9W,eAAen8I,UAAUgoK,oBAAqB,EAQ9C7rB,eAAen8I,UAAUioK,eAAgB,EAQzC9rB,eAAen8I,UAAUkoK,cAAe,EAQxC/rB,eAAen8I,UAAU2mF,YAAc,EAOvCw1D,eAAen8I,UAAUmoK,aAAe,QASxChsB,eAAen8I,UAAUooK,aAAc,EAOvCjsB,eAAen8I,UAAUwtD,MAAQ,KAOjC2uF,eAAen8I,UAAUqoK,WAAY,EAOrClsB,eAAen8I,UAAUsoK,iBAAkB,EAQ3CnsB,eAAen8I,UAAUuoK,eAAiB,EAO1CpsB,eAAen8I,UAAUyuD,UAAY,WAEpC,OAAOnuD,KAAK0pF,SAQbmyD,eAAen8I,UAAU2qF,WAAa,SAAS/sF,GAE9C0C,KAAK0pF,QAAUpsF,GAQhBu+I,eAAen8I,UAAUwoK,eAAiB,WAEzC,OAAOloK,KAAKonK,cAYbvrB,eAAen8I,UAAUyoK,gBAAkB,SAAS7qK,GAEnD0C,KAAKonK,aAAe9pK,GAQrBu+I,eAAen8I,UAAU0oK,cAAgB,WAExC,OAAOpoK,KAAKqnK,aAQbxrB,eAAen8I,UAAU2oK,eAAiB,SAAS/qK,GAElD0C,KAAKqnK,YAAc/pK,GAQpBu+I,eAAen8I,UAAU4oK,gBAAkB,WAE1C,OAAOtoK,KAAKynK,eAQb5rB,eAAen8I,UAAU6oK,iBAAmB,SAASjrK,GAEpD0C,KAAKynK,cAAgBnqK,GAQtBu+I,eAAen8I,UAAU8oK,wBAA0B,WAElD,OAAOxoK,KAAK2yJ,uBAQb9W,eAAen8I,UAAU+oK,yBAA2B,SAASnrK,GAE5D0C,KAAK2yJ,sBAAwBr1J,GAQ9Bu+I,eAAen8I,UAAUgpK,uBAAyB,SAAS/iF,GAE1D,OAAOA,EAAGzN,WAQX2jE,eAAen8I,UAAUipK,mBAAqB,SAAS37G,EAAM24B,GAE5D,OAAO3lF,KAAKosD,MAAM2hG,eAAe/gG,IAsBlC6uF,eAAen8I,UAAU4jK,kBAAoB,SAAS59E,EAASC,GAE9DA,EAAGrO,WAUJukE,eAAen8I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAErD,IAAKA,EAAGtO,cAAgBr3E,KAAKmuD,aAAenuD,KAAKosD,MAAM+B,aACrC,MAAjBw3B,EAAG54B,aAAuBvF,QAAQwzB,kBAAkB2K,EAAGlO,YACxD,CACC,IAAIzqB,EAAOhtD,KAAK0oK,uBAAuB/iF,GASvC,GARA3lF,KAAK4oK,iBAAmB5oK,KAAK2oK,mBAAmB37G,EAAM24B,GACtD3lF,KAAKgtD,KAAO,KAERhtD,KAAKsoK,oBAAsBtoK,KAAK4oK,kBAEnC5oK,KAAKosD,MAAM4hG,mBAAmBhhG,EAAM24B,EAAGlO,YAGpCz3E,KAAKooK,gBACT,CACC,IAAIhiJ,EAAQpmB,KAAKosD,MAAMhmC,MACnB4vE,EAAM5vE,EAAM62F,YAAYjwD,GAExBhtD,KAAKosD,MAAMqwD,cAAczvD,MAAY5mC,EAAMjX,OAAO69C,IAAShtD,KAAKosD,MAAMk0G,oBAAsB,GAChF,MAAdtqE,EAAI2P,QAAkB3P,EAAI2P,OAAO/kG,OAAS,GAAuC,MAAjCwlB,EAAMi2F,YAAYrvD,GAAM,IACvC,MAAlC5mC,EAAMi2F,YAAYrvD,GAAM,IAAmBhtD,KAAKosD,MAAMu+F,oBACrD3qJ,KAAKosD,MAAMmtG,aAAa5zE,EAAGlO,aAAez3E,KAAKosD,MAAMwvG,oBAEtD57J,KAAKiL,MAAM+hD,EAAM24B,EAAG/N,OAAQ+N,EAAG7N,QAEvB93E,KAAK4oK,mBAEb5oK,KAAKgtD,KAAOA,GAGbhtD,KAAK6oK,gBAAiB,EACtB7oK,KAAKsjK,kBAAkB97G,QAAQuyB,WAAY4L,MAU9Ck2D,eAAen8I,UAAUssF,eAAiB,WAEzC,IAAI3lF,EAASrG,KAAKosD,MAAM+3B,mBACpB/9D,EAAQpmB,KAAKosD,MAAM8W,WAEnB3uC,EAAS2xB,QAAQ1jD,KAAKxC,MAAM,SAASgtD,GAExC,OAAyC,MAAlChtD,KAAKosD,MAAMuR,KAAK5Q,SAASC,IAC/B5mC,EAAMuvE,SAAS3oC,IACY,MAA3B5mC,EAAM62F,YAAYjwD,KACjB5mC,EAAM62F,YAAYjwD,GAAMkpC,YAG3B,OAAOl2F,KAAKosD,MAAMuR,KAAKwnF,cAAc/+H,EAAM6zG,kBAAkB1lG,EAAQluB,KAetEw1I,eAAen8I,UAAU+jF,SAAW,SAASqlF,GAE5C,OAAK9oK,KAAK4oK,kBAAoB5oK,KAAKosD,MAAMqwD,cAAcqsD,GAE/C,CAACA,GAID9oK,KAAKosD,MAAMmwG,gBAAgBv8J,KAAKosD,MAAMy3B,sBAU/Cg4D,eAAen8I,UAAU08I,iBAAmB,SAASh8E,GAEpD,IAAItD,EAAS98D,KAAKw5D,eAAe4G,GAEjC,GAAc,MAAVtD,EACJ,CAKC,GAHAA,EAAOhX,MAAQ5lD,KAAKwD,IAAI,EAAGo5D,EAAOhX,MAAQ,GAC1CgX,EAAOnX,OAASzlD,KAAKwD,IAAI,EAAGo5D,EAAOnX,OAAS,GAExCmX,EAAOhX,MAAQ9lD,KAAKqmF,YACxB,CACC,IAAIx3C,EAAK7uC,KAAKqmF,YAAcvpB,EAAOhX,MACnCgX,EAAO9d,GAAKnQ,EAAK,EACjBiuB,EAAOhX,MAAQ9lD,KAAKqmF,iBAIpBvpB,EAAO9d,EAAI9+C,KAAKm8D,MAAMS,EAAO9d,GAC7B8d,EAAOhX,MAAQ5lD,KAAKD,KAAK68D,EAAOhX,OAGxB9lD,KAAKosD,MAAMuR,KAAKkG,UACjB7jE,KAAKosD,MAAMuR,KAAKxQ,MAExB,GAAI2P,EAAOnX,OAAS3lD,KAAKqmF,YACzB,CACC,IAAIt3C,EAAK/uC,KAAKqmF,YAAcvpB,EAAOnX,OACnCmX,EAAOlS,GAAK7b,EAAK,EACjB+tB,EAAOnX,OAAS3lD,KAAKqmF,iBAIrBvpB,EAAOlS,EAAI1qD,KAAKm8D,MAAMS,EAAOlS,GAC7BkS,EAAOnX,OAASzlD,KAAKD,KAAK68D,EAAOnX,QAInC,OAAOmX,GAgBR++E,eAAen8I,UAAU85D,eAAiB,SAAS4G,GAElD,IAAIv9D,EAAS,KAEb,GAAa,MAATu9D,GAAiBA,EAAMx/D,OAAS,EAInC,IAFA,IAAIwlB,EAAQpmB,KAAKosD,MAAM8W,WAEdh6D,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjC,GAAIkd,EAAMuvE,SAASv1B,EAAMl3D,KAAOkd,EAAMjX,OAAOixD,EAAMl3D,IACnD,CACC,IAAI4nC,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASqT,EAAMl3D,IAE3C,GAAa,MAAT4nC,EACJ,CACC,IAAI+vD,EAAO/vD,EAEP1qB,EAAMuvE,SAASv1B,EAAMl3D,KAAsB,MAAf4nC,EAAMoc,OAA4C,MAA3Bpc,EAAMoc,MAAM84C,cAElEnF,EAAO/vD,EAAMoc,MAAM84C,aAGN,MAAVnjG,EAEHA,EAASgoD,YAAYoB,cAAc40C,GAInCh+F,EAAO2D,IAAIq6F,IAOhB,OAAOh+F,GAQRg5I,eAAen8I,UAAUqpK,mBAAqB,SAASjsG,GAEtD,IAAI5P,EAAQ,IAAI+gD,iBAAiBnxC,EAAQ,KAAM98D,KAAK6nK,cA4BpD,OA3BA36G,EAAMw3C,UAAW,EAEb1kG,KAAK8nK,aAER56G,EAAMuW,QAAU5Z,YAAYue,mBAC5Blb,EAAMxoC,KAAK1kB,KAAKosD,MAAM2R,aAOtB7Q,EAAMuW,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAClD7Z,YAAYoe,YAAcpe,YAAY6Z,YACvCxW,EAAMxoC,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAChCv4C,EAAMm+B,eAAgB,EAGlBzqC,SAASe,SAEZuL,EAAM05C,mBAAqB,WAE1B,OAAO,KAKH15C,GAQR2uF,eAAen8I,UAAUuL,MAAQ,SAAS+hD,EAAMhO,EAAG4L,GAElD5qD,KAAKgtD,KAAOA,EACZhtD,KAAKsgD,MAAQ4F,QAAQ2Y,aAAa7+D,KAAKosD,MAAM2R,UAAW/e,EAAG4L,GAC3D5qD,KAAKogE,MAAQpgE,KAAKyjF,SAASzjF,KAAKgtD,MAChChtD,KAAK88D,OAAS98D,KAAKosD,MAAMU,UAAUkkF,UAAUhxI,KAAKogE,OAClDpgE,KAAKm8I,QAAUn8I,KAAKo8I,iBAAiBp8I,KAAKogE,OAC1CpgE,KAAKk1J,SAAW,IAAItsG,aACpB5oD,KAAKgpK,SAAU,EACfhpK,KAAKipK,UAAY,EAEjB,IAAK,IAAI//J,EAAI,EAAGA,EAAIlJ,KAAKogE,MAAMx/D,OAAQsI,IAEtClJ,KAAKipK,WAAajpK,KAAKkpK,UAAUlpK,KAAKogE,MAAMl3D,GAAIlJ,KAAKk1J,UAGtD,GAAIl1J,KAAKgqF,cACT,CACChqF,KAAKwkG,MAAQ,IAAI1Y,QAAQ9rF,KAAKosD,MAAOpsD,KAAKgsF,kBAC1C,IAAI3lF,EAASrG,KAAKosD,MAAMhmC,MAAM2vE,UAAU/oC,GACpCm8G,EAASnpK,KAAKosD,MAAMhmC,MAAMwnC,cAAcvnD,GAAU,EAEtDrG,KAAKwkG,MAAMG,eAAiBz+C,QAAQ1jD,KAAKxC,MAAM,SAAS8wC,GAEvD,IAAIr2B,EAAIza,KAAKosD,MAAMhmC,MAAM2vE,UAAUjlD,EAAMkc,MAEzC,OAAShtD,KAAKgpK,SAAWhpK,KAAKopK,aAAat4H,EAAMkc,OAC/Clc,EAAMkc,OAAShtD,KAAKoE,QAAUiC,KAAY8iK,IAC3B,MAAfnpK,KAAKoE,QAAkBpE,KAAKosD,MAAMhmC,MAAMwnC,cACzC5tD,KAAKoE,SAAW,IAAMqW,IAAMza,KAAKoE,QAAUiC,QAU/Cw1I,eAAen8I,UAAUwpK,UAAY,SAASl8G,EAAMoJ,GAEnD,IAAItlB,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASC,GACjCiG,EAAQ,EAEZ,GAAa,MAATniB,GAAmC,MAAlBslB,EAAK/2D,IAAI2tD,GAC9B,CACCoJ,EAAKvN,IAAImE,EAAMlc,GACfmiB,IAIA,IAFA,IAAItF,EAAa3tD,KAAKosD,MAAMhmC,MAAMwnC,cAAcZ,GAEvC9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/B+pD,GAASjzD,KAAKkpK,UAAUlpK,KAAKosD,MAAMhmC,MAAMynC,WAAWb,EAAM9jD,GAAIktD,GAIhE,OAAOnD,GAQR4oF,eAAen8I,UAAU0pK,aAAe,SAASp8G,GAEhD,OAAkC,MAA3BhtD,KAAKk1J,SAAS71J,IAAI2tD,IAS1B6uF,eAAen8I,UAAU2pK,kBAAoB,SAAS1jF,GAErD,OAAsB,MAAd3lF,KAAKwkG,OAAiBxkG,KAAKwkG,MAAM7X,kBAAkBhH,EAAGlO,aAS/DokE,eAAen8I,UAAUotF,KAAO,SAASw8E,GAExC,IAAIn8G,EAASntD,KAAc,UAAIA,KAAKosD,MAAMuR,KAAKxQ,MAAQ,EAKvD,OAHAm8G,EAAOtqH,EAAIh/C,KAAKosD,MAAM0gC,KAAKw8E,EAAOtqH,EAAImO,GAASA,EAC/Cm8G,EAAO1+G,EAAI5qD,KAAKosD,MAAM0gC,KAAKw8E,EAAO1+G,EAAIuC,GAASA,EAExCm8G,GASRztB,eAAen8I,UAAUg2F,SAAW,SAAS/P,GAE5C,IAAI1zC,EAAQiU,QAAQ2Y,aAAa7+D,KAAKosD,MAAM2R,UAAW4nB,EAAG/N,OAAQ+N,EAAG7N,QACjEtwC,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MAExB,OAAO,IAAIxC,QAAQ3qD,KAAKupK,aAAat3H,EAAM+M,EAAIh/C,KAAKsgD,MAAMtB,GAAKxX,GAAKA,EACnExnC,KAAKupK,aAAat3H,EAAM2Y,EAAI5qD,KAAKsgD,MAAMsK,GAAKpjB,GAAKA,IAQnDq0G,eAAen8I,UAAUs8I,WAAa,SAASr2D,KAO/Ck2D,eAAen8I,UAAU8pK,WAAa,aAOtC3tB,eAAen8I,UAAU6pK,YAAc,SAAS3oK,GAE/C,OAAOV,KAAKm8D,MAAe,EAATz7D,GAAc,GASjCi7I,eAAen8I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAErD,IAAIv5B,EAAQpsD,KAAKosD,MAEjB,IAAKu5B,EAAGtO,cAAgBjrB,EAAMw/B,aAA4B,MAAb5rF,KAAKgtD,MACnC,MAAdhtD,KAAKsgD,OAAgC,MAAftgD,KAAK88D,OAC5B,CAEC,GAAItV,QAAQwzB,kBAAkB2K,EAAGlO,YAGhC,YADAz3E,KAAK4qF,QAIN,IAAIvQ,EAAQr6E,KAAK01F,SAAS/P,GACtB92C,EAAKwrC,EAAMr7B,EACXjQ,EAAKsrC,EAAMzvB,EACXk0C,EAAM1yC,EAAMsmE,UAEhB,GAAkB,MAAd1yH,KAAKktD,OAAiBltD,KAAKypK,mBAAqBvpK,KAAKk3D,IAAIvoB,GAAMiwD,GAAO5+F,KAAKk3D,IAAIroB,GAAM+vD,EACzF,CAEuB,MAAlB9+F,KAAKwsF,YAERxsF,KAAKwsF,UAAY,IAAIP,gBAAgBjsF,KAAKosD,MACzCvC,YAAY0gB,kBAAmB,IAGjC,IAAI/lD,EAAQ4nC,EAAMmtG,aAAa5zE,EAAGlO,aAAerrB,EAAMwvG,oBAAsB57J,KAAKkoK,iBAC9Ej+E,EAAc79B,EAAMqgC,mBAAmB9G,EAAGlO,YAC1CiV,GAAY,EAChB1sF,KAAKgpK,QAAUxkJ,EAOf,IAAIpgB,EAAS,KACT4oD,EAAO24B,EAAGzN,UAEV9rB,EAAMmgC,iBAAmBvsF,KAAKmnK,mBAGjC/iK,EAASgoD,EAAM8a,cAAclnE,KAAKogE,MAAOulB,EAAGlO,WAAYzqB,EAAMxoC,IAG/D,IAAIssB,EAAQsb,EAAMU,UAAUC,SAAS3oD,GACjCooF,GAAY,EAEhB,GAAa,MAAT17C,GAAkBsb,EAAMhmC,MAAM2vE,UAAU/1F,KAAKgtD,OAAS5oD,IAAUogB,GAcnE,GAFAxkB,KAAKoE,OAAS,KAEVpE,KAAK2nK,eAAyB,MAAR36G,GAAqC,GAArBhtD,KAAKogE,MAAMx/D,QACpDwrD,EAAM8W,WAAWyyB,SAAS3oC,IAASZ,EAAMitG,kBAAkBrsG,KAE3Dlc,EAAQsb,EAAMU,UAAUC,SAASC,GAEpB,MAATlc,GACJ,CACC,IAAIryC,EAAQ2tD,EAAM4mG,uBAAuB,KAAMhzJ,KAAKgtD,KAAMA,GACtD4G,EAAkB,MAATn1D,EACZorD,YAAY2gB,YACZ3gB,YAAYygB,6BACbtqE,KAAK0pK,kBAAkB91G,GACvB44B,GAAY,QAxBPxsF,KAAKoE,QAAUA,IAElBpE,KAAKoE,OAASA,EACdpE,KAAK0pK,kBAAkB7/G,YAAY0gB,oBAGpCiiB,GAAY,EAmDhB,GA5Ba,MAAT17C,GAAiB07C,EAEpBxsF,KAAKwsF,UAAUA,UAAU17C,GAIzB9wC,KAAKwsF,UAAU9F,OAMZ1mF,KAAKypK,mBAAqBjlJ,GAE7BxkB,KAAK2pK,mBACL3pK,KAAKypK,mBAAoB,GAEjBzpK,KAAKioK,gBAAkBjoK,KAAKipK,YAAcjpK,KAAKypK,mBAAqB7oH,SAASyB,QAErFriD,KAAKs8I,0BAA0Bt8I,KAAKogE,OAAO,GAC3CpgE,KAAKypK,mBAAoB,EACzBzpK,KAAKq8I,iBAAkB,GAEdr8I,KAAKq8I,iBAAiC,MAAdr8I,KAAKktD,QAEtCltD,KAAKktD,MAAQltD,KAAK+oK,mBAAmB/oK,KAAK88D,SAGzB,MAAd98D,KAAKwkG,OAAiBxkG,KAAKqpK,kBAAkB1jF,GAEhDtL,EAAQr6E,KAAKwkG,MAAM7qB,KAAK35E,KAAK88D,OAAQ,IAAInS,QAAQ9b,EAAIE,GAAKk7C,EAAazlE,GACvEkoE,GAAY,EACZ79C,EAAKwrC,EAAMr7B,EACXjQ,EAAKsrC,EAAMzvB,OAEP,GAAIq/B,EACT,CACC,IAAI2a,EAAMx4C,EAAMU,UAAU+W,UACtB1W,EAAQf,EAAMU,UAAUK,MAExBmL,EAAKt4D,KAAK88D,OAAO9d,GAAKoN,EAAM0gC,KAAK9sF,KAAK88D,OAAO9d,EAAImO,EAAQy3C,EAAI5lD,GAAK4lD,EAAI5lD,GAAKmO,EAC3EoL,EAAKv4D,KAAK88D,OAAOlS,GAAKwB,EAAM0gC,KAAK9sF,KAAK88D,OAAOlS,EAAIuC,EAAQy3C,EAAIh6C,GAAKg6C,EAAIh6C,GAAKuC,EAC3E9lD,EAAIrH,KAAK8sF,KAAK,IAAIniC,QAAQ9b,EAAIE,IAElCF,EAAKxnC,EAAE23C,EAAIsZ,EACXvpB,EAAK1nC,EAAEujD,EAAI2N,EAGM,MAAdv4D,KAAKwkG,OAAiB9X,GAEzB1sF,KAAKwkG,MAAM9d,OAIRt6B,EAAMotG,mBAAmB7zE,EAAGlO,cAE3Bv3E,KAAKk3D,IAAIvoB,GAAM3uC,KAAKk3D,IAAIroB,GAE3BA,EAAK,EAILF,EAAK,GAIP7uC,KAAKsnK,UAAYz4H,EACjB7uC,KAAKunK,UAAYx4H,EACjB/uC,KAAK+7I,gBAGN/7I,KAAKg8I,WAAWr2D,GAChB3lF,KAAKsjK,kBAAkB97G,QAAQwyB,WAAY2L,GAK3Cn+B,QAAQ8vB,QAAQqO,EAAGlO,iBAEf,IAAKz3E,KAAKooK,iBAAmBpoK,KAAKkoK,mBAAqBloK,KAAKwnK,eAAiB7hF,EAAGtO,eAClE,MAAjBsO,EAAG54B,YAAwC,MAAlB44B,EAAG9O,eAAyBzqB,EAAMw/B,YAC7D,CACC,IAAIn9B,EAASrC,EAAM0uG,uBAAuBn1E,GAE5B,MAAVl3B,GAAkBrC,EAAM+B,aAAe/B,EAAMqwD,cAAc92B,EAAGzN,aAIhEzpB,EAFGrC,EAAM8W,WAAW/zD,OAAOw2E,EAAGzN,WAErBruB,YAAYigB,oBAIZjgB,YAAYggB,uBAMT,MAAVpb,GAAoC,MAAlBk3B,EAAG9O,aAExB8O,EAAG9O,YAAYm0B,UAAUv8C,KAU5BotF,eAAen8I,UAAUq8I,cAAgB,SAAS6tB,GAE7C5pK,KAAKq8I,kBAAoButB,EAEV,MAAd5pK,KAAKogE,OAERpgE,KAAK6pK,kBAAkB7pK,KAAKsnK,UAAYtnK,KAAKosD,MAAM8/B,MAClDlsF,KAAKunK,UAAYvnK,KAAKosD,MAAM+/B,OAK9BnsF,KAAK8pK,sBASPjuB,eAAen8I,UAAUoqK,mBAAqB,WAE3B,MAAd9pK,KAAKktD,QAERltD,KAAKktD,MAAM4P,OAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMr8D,KAAKm8I,QAAQn9F,EAAIh/C,KAAKsnK,UAAYtnK,KAAKosD,MAAM8/B,OAC1FhsF,KAAKm8D,MAAMr8D,KAAKm8I,QAAQvxF,EAAI5qD,KAAKunK,UAAYvnK,KAAKosD,MAAM+/B,OAAQnsF,KAAKm8I,QAAQr2F,MAAO9lD,KAAKm8I,QAAQx2F,QACnG3lD,KAAKktD,MAAMM,WASbquF,eAAen8I,UAAUmqK,kBAAoB,SAASh7H,EAAIE,GAEzD,IAAIqoD,EAAS,GAEQ,MAAjBp3F,KAAKk1J,UAERl1J,KAAKk1J,SAASjsG,MAAM/C,QAAQ1jD,KAAKxC,MAAM,SAAS3C,EAAKyzC,GAGpD,IAAIi5H,EAAYj5H,EAAMtsB,QAItB,GAHA4yE,EAAOrmF,KAAK,CAAC+/B,EAAOi5H,IAGD,MAAfj5H,EAAMoc,QAEgC,MAArCpc,EAAMoc,MAAM88G,wBAEfl5H,EAAMoc,MAAM88G,sBAAwBl5H,EAAMoc,MAAMm+B,eAGjDv6C,EAAMoc,MAAMm+B,eAAgB,EAEV,MAAdv6C,EAAMj/B,MAAmC,MAAnBi/B,EAAMj/B,KAAKqB,MACrC,CACC,IAAIA,EAAO49B,EAAMj/B,KAAKqB,KAEC,MAAnBA,EAAKuqB,YAAoD,MAA9BvqB,EAAKuqB,WAAWA,YACP,iBAAvCvqB,EAAKuqB,WAAWA,WAAWkyB,SAE3Bz8C,EAAKuqB,WAAWA,WAAWvF,aAAa,iBAAkB,QAE1B,MAAxBhlB,EAAK8yD,gBAEb9yD,EAAKglB,aAAa,iBAAkB,QAIpChlB,EAAK0U,MAAMyjE,cAAgB,OAM1BrrF,KAAKosD,MAAMhmC,MAAMuvE,SAAS7kD,EAAMkc,QAEnClc,EAAMkO,GAAKnQ,EACXiC,EAAM8Z,GAAK7b,EAGN/uC,KAAKgpK,UAETl4H,EAAM6sB,KAAKvR,MAAMmB,aAAaC,OAAO1c,GAAO,GAI5CA,EAAM6sB,KAAKygF,WAAWttG,EAAMkc,MAC5Blc,EAAM23F,SAAU,GAII,MAAjB33F,EAAM+0F,SAAyC,MAAtB/0F,EAAM+0F,QAAQ3yH,OAE1C49B,EAAM+0F,QAAQ3yH,KAAK0U,MAAMygC,WAAa,eAS1C,IAFA,IAAI7gB,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MAEfjkD,EAAI,EAAGA,EAAIkuF,EAAOx2F,OAAQsI,IACnC,CACC,IAAI4nC,EAAQsmD,EAAOluF,GAAG,GAEtB,GAAIlJ,KAAKosD,MAAMhmC,MAAMjX,OAAO2hC,EAAMkc,MAClC,CACC,IAAII,EAAWptD,KAAKosD,MAAM6pC,gBAAgBnlD,EAAMkc,MAC5C24C,EAAS,GAEb,GAAgB,MAAZv4C,GAAuC,MAAnBA,EAASu4C,OAEhC,IAAK,IAAIn4E,EAAI,EAAGA,EAAI4/B,EAASu4C,OAAO/kG,OAAQ4sB,IAEjB,MAAtB4/B,EAASu4C,OAAOn4E,IAEnBm4E,EAAO50F,KAAK,IAAI45C,QACfyC,EAASu4C,OAAOn4E,GAAGwxB,EAAInQ,EAAKrH,EAC5B4lB,EAASu4C,OAAOn4E,GAAGo9B,EAAI7b,EAAKvH,IAKhC,IAAItjC,EAAS4sC,EAAM43F,mBACftkI,EAAS0sC,EAAM63F,mBACfnsE,EAAM46B,EAAOluF,GAAG,GAAGyyD,eAEvB,GAAc,MAAVz3D,GAAmBlE,KAAKopK,aAAallK,EAAO8oD,MAQ/Clc,EAAM6sB,KAAKulF,yBAAyBpyG,EAAO5sC,GAAQ,EAClDlE,KAAKosD,MAAM+2F,wBAAwBryG,EAAO5sC,GAAQ,QARpD,CACC,IAAI+lK,EAAMztG,EAAI,GACd1rB,EAAMg4F,yBAAyB,IAAIn+E,QAAQs/G,EAAIjrH,EAAInQ,EAAIo7H,EAAIr/G,EAAI7b,IAAK,GACpE7qC,EAAS,KAQV,GAAc,MAAVE,GAAmBpE,KAAKopK,aAAahlK,EAAO4oD,MAQ/Clc,EAAM6sB,KAAKulF,yBAAyBpyG,EAAO1sC,GAAQ,EAClDpE,KAAKosD,MAAM+2F,wBAAwBryG,EAAO1sC,GAAQ,QARpD,CACC,IAAI8lK,EAAM1tG,EAAIA,EAAI57D,OAAS,GAC3BkwC,EAAMg4F,yBAAyB,IAAIn+E,QAAQu/G,EAAIlrH,EAAInQ,EAAIq7H,EAAIt/G,EAAI7b,IAAK,GACpE3qC,EAAS,KAQV0sC,EAAM6sB,KAAKglF,aAAa7xG,EAAO60D,EAAQzhG,EAAQE,GAC/C0sC,EAAM6sB,KAAKilF,6BAA6B9xG,EAAO5sC,EAAQE,GACvD0sC,EAAM23F,SAAU,EAGXzoI,KAAKgpK,SAETl4H,EAAM6sB,KAAKvR,MAAMmB,aAAaC,OAAO1c,GAAO,IAK/C9wC,KAAKosD,MAAMuR,KAAK0gF,WAChBr+I,KAAKmqK,cAAc/yE,GACnBp3F,KAAKoqK,mBAAmBhzE,IAQzBykD,eAAen8I,UAAUyqK,cAAgB,SAAS/yE,GAEjD,IAAK,IAAIluF,EAAI,EAAGA,EAAIkuF,EAAOx2F,OAAQsI,IACnC,CACC,IAAI4Q,EAAU9Z,KAAKosD,MAAMolF,sBAAsBmpB,WAAWvjE,EAAOluF,GAAG,GAAG8jD,MAExD,MAAXlzC,GAEHA,EAAQ0zC,QAAO,KAUlBquF,eAAen8I,UAAU0qK,mBAAqB,SAAShzE,GAEtD,IAAK,IAAIluF,EAAI,EAAGA,EAAIkuF,EAAOx2F,OAAQsI,IAElCkuF,EAAOluF,GAAG,GAAGqgI,SAASnyC,EAAOluF,GAAG,KASlC2yI,eAAen8I,UAAUiqK,iBAAmB,WAEtB,MAAjB3pK,KAAKk1J,WAERl1J,KAAKk1J,SAASjsG,MAAM/C,QAAQ1jD,KAAKxC,MAAM,SAAS3C,EAAKyzC,GAGpD,GAAmB,MAAfA,EAAMoc,OAAsD,MAArCpc,EAAMoc,MAAM88G,wBAEtCl5H,EAAMoc,MAAMm+B,cAAgBv6C,EAAMoc,MAAM88G,sBACxCl5H,EAAMoc,MAAM88G,sBAAwB,KAGpCl5H,EAAMoc,MAAM4P,OAAS,KAEH,MAAdhsB,EAAMj/B,MAAmC,MAAnBi/B,EAAMj/B,KAAKqB,MACrC,CACC,IAAIA,EAAO49B,EAAMj/B,KAAKqB,KAEC,MAAnBA,EAAKuqB,YAAoD,MAA9BvqB,EAAKuqB,WAAWA,YACP,iBAAvCvqB,EAAKuqB,WAAWA,WAAWkyB,SAE3Bz8C,EAAKuqB,WAAWA,WAAWvF,aAAa,iBAAkB,OAE1B,MAAxBhlB,EAAK8yD,gBAEb9yD,EAAK6qB,gBAAgB,kBAIrB7qB,EAAK0U,MAAMyjE,cAAgB,GAMT,MAAjBv6C,EAAM+0F,SAAyC,MAAtB/0F,EAAM+0F,QAAQ3yH,OAE1C49B,EAAM+0F,QAAQ3yH,KAAK0U,MAAMygC,WAAa,IAIvCvX,EAAM6sB,KAAKygF,WAAWttG,EAAMkc,UAI7BhtD,KAAKosD,MAAMuR,KAAK0gF,aASlBxC,eAAen8I,UAAU48I,0BAA4B,SAASl8E,EAAOlY,GAEpE,IAAK,IAAIh/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI8jD,EAAOoT,EAAMl3D,GAEb4Q,EAAU9Z,KAAKosD,MAAMolF,sBAAsBmpB,WAAW3tG,GAE3C,MAAXlzC,IAEHA,EAAQuwJ,kBAAkBniH,GAEtBA,GAEHpuC,EAAQ0zC,YAeZquF,eAAen8I,UAAUgqK,kBAAoB,SAAS91G,GAE/B,MAAlB5zD,KAAKwsF,WAERxsF,KAAKwsF,UAAUk9E,kBAAkB91G,IASnCioF,eAAen8I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAEnD,IAAKA,EAAGtO,aAOP,GALIr3E,KAAKq8I,iBAERr8I,KAAK2pK,mBAGW,MAAb3pK,KAAKgtD,MAA8B,MAAdhtD,KAAKsgD,OAAgC,MAAdtgD,KAAKktD,QAAiBltD,KAAKq8I,iBACxD,MAAlBr8I,KAAKsnK,WAAuC,MAAlBtnK,KAAKunK,UA4BvBvnK,KAAKsoK,mBAAqBtoK,KAAK4oK,kBAAiC,MAAb5oK,KAAKgtD,MAEhEhtD,KAAKsqK,cAAc3kF,OA7BpB,CACC,IAAIv5B,EAAQpsD,KAAKosD,MACbY,EAAO24B,EAAGzN,UAEd,GAAIl4E,KAAK2nK,eAAgC,MAAf3nK,KAAKoE,QAA0B,MAAR4oD,GAAgBZ,EAAM8W,WAAWyyB,SAAS3oC,IAC1FZ,EAAMitG,kBAAkBrsG,IAASZ,EAAMutG,YAAY,KAAM35J,KAAKgtD,KAAMA,GAEpEZ,EAAMy/F,kBAAkBlrB,QAAQ3gI,KAAKgtD,KAAMA,EAAM24B,EAAGlO,gBAGrD,CACC,IAAIjzD,EAAQ4nC,EAAMmtG,aAAa5zE,EAAGlO,aAAerrB,EAAMwvG,oBAAsB57J,KAAKkoK,iBAC9E/6G,EAAQf,EAAMU,UAAUK,MACxBte,EAAK7uC,KAAKupK,YAAYvpK,KAAKsnK,UAAYn6G,GACvCpe,EAAK/uC,KAAKupK,YAAYvpK,KAAKunK,UAAYp6G,GACvC/oD,EAASpE,KAAKoE,OAEdgoD,EAAM4xG,kBAAoB5xG,EAAMwzG,cAAcx7J,EAAQpE,KAAKogE,MAAOulB,EAAGlO,YAExErrB,EAAMkoG,UAAUlwJ,EAAQpE,KAAKogE,MAAO,KAAMvxB,EAAIE,GAI9C/uC,KAAKqoH,UAAUroH,KAAKogE,MAAOvxB,EAAIE,EAAIvqB,EAAOxkB,KAAKoE,OAAQuhF,EAAGlO,aAW1Dz3E,KAAK6oK,gBAER7oK,KAAKsjK,kBAAkB97G,QAAQyyB,SAAU0L,GAG1C3lF,KAAK4qF,SAQNixD,eAAen8I,UAAU4qK,cAAgB,SAAS3kF,GAE5C3lF,KAAKosD,MAAM2hG,eAAe/tJ,KAAKgtD,OAAUhtD,KAAKosD,MAAMy5F,iBAAiB1tE,eAAewN,IAExF3lF,KAAKosD,MAAM4hG,mBAAmBhuJ,KAAKgtD,KAAM24B,EAAGlO,aAS9CokE,eAAen8I,UAAUkrF,MAAQ,WAE5B5qF,KAAKq8I,kBAERr8I,KAAK2pK,mBACL3pK,KAAKs8I,0BAA0Bt8I,KAAKogE,OAAO,IAG5CpgE,KAAKuqK,gBACLvqK,KAAKwpK,aAELxpK,KAAK4oK,kBAAmB,EACxB5oK,KAAKypK,kBAAoB,KACzBzpK,KAAKq8I,gBAAkB,KACvBr8I,KAAK6oK,gBAAiB,EACtB7oK,KAAKsnK,UAAY,KACjBtnK,KAAKunK,UAAY,KACjBvnK,KAAKipK,UAAY,KACjBjpK,KAAKgpK,SAAU,EACfhpK,KAAKk1J,SAAW,KAChBl1J,KAAKwqK,OAAS,KACdxqK,KAAKoE,OAAS,KACdpE,KAAKsgD,MAAQ,KACbtgD,KAAKogE,MAAQ,KACbpgE,KAAKgtD,KAAO,MASb6uF,eAAen8I,UAAU+qK,4BAA8B,SAASpkK,EAAQ+5D,EAAOpa,GAE9E,GAAIhmD,KAAKosD,MAAM8W,WAAWyyB,SAAStvF,GACnC,CACC,IAAIg8I,EAASriJ,KAAKosD,MAAMU,UAAUC,SAAS1mD,GAE3C,GAAc,MAAVg8I,EACJ,CACC,IAAIroF,EAAK9T,QAAQ2Y,aAAa7+D,KAAKosD,MAAM2R,UACxCvW,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IACzC6X,EAAQ3X,QAAQqQ,UAAUrQ,QAAQxb,SAAS23G,EAAOz6H,MAAOiiC,YAAYiR,iBAAmB,GAE5F,GAAa,GAAT+C,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAChBnE,EAAK,IAAI/O,QAAQ03F,EAAOr3F,aAAcq3F,EAAOp3F,cACjD+O,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKgC,GAG5C,OAAQxT,QAAQ6W,SAASslF,EAAQroF,EAAGhb,EAAGgb,EAAGpP,IAI5C,OAAO,GAQRixF,eAAen8I,UAAU2oH,UAAY,SAASjoD,EAAOvxB,EAAIE,EAAIvqB,EAAOpgB,EAAQ4hD,GAEvExhC,IAEH47C,EAAQpgE,KAAKosD,MAAMsvG,kBAAkBt7F,IAItC,IAAI/5D,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/1F,KAAKgtD,MAEpC,MAAV5oD,GAAkBpE,KAAKwoK,2BAC1BxoK,KAAKyqK,4BAA4BpkK,EAAQ+5D,EAAOpa,KAEhD5hD,EAASpE,KAAKosD,MAAM+3B,oBAIrB3/D,EAAQA,IAAUxkB,KAAKosD,MAAMmvG,aAAan3J,GAAUpE,KAAKosD,MAAM+3B,oBAE/DnkF,KAAKosD,MAAM8W,WAAW5B,cACtB,IAEC,IAAI4+D,EAAU,GAGd,IAAK17G,GAAmB,MAAVpgB,GAAkBpE,KAAK0nK,mBACrC,CAIC,IAFA,IAAItxG,EAAO,IAAIxN,aAEN1/C,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAEjCktD,EAAKvN,IAAIuX,EAAMl3D,IAAI,GAIpB,IAASA,EAAI,EAAGA,EAAIk3D,EAAMx/D,OAAQsI,IAClC,CACC,IAAI20H,EAAM79H,KAAKosD,MAAMhmC,MAAM2vE,UAAU31B,EAAMl3D,IAEhC,MAAP20H,GAAgBznE,EAAK/2D,IAAIw+H,KAE5BznE,EAAKvN,IAAIg1E,GAAK,GACdqC,EAAQnvH,KAAK8sH,KAOhBz9D,EAAQpgE,KAAKosD,MAAMi8D,UAAUjoD,EAAOvxB,EAAK7uC,KAAKosD,MAAM8/B,MAAQlsF,KAAKosD,MAAMuR,KAAKxQ,MAC1Epe,EAAK/uC,KAAKosD,MAAM+/B,MAAQnsF,KAAKosD,MAAMuR,KAAKxQ,MAAO3oC,EAAOpgB,EAAQ4hD,GAGhE,IAAI+d,EAAO,GAEX,IAAS76D,EAAI,EAAGA,EAAIg3H,EAAQt/H,OAAQsI,IAE/BlJ,KAAK0qK,mBAAmBxqC,EAAQh3H,KAEnC66D,EAAKhzD,KAAKmvH,EAAQh3H,IAIpBlJ,KAAKosD,MAAMw3B,YAAY7f,GAAM,GAE9B,QAEC/jE,KAAKosD,MAAM8W,WAAW1B,YAInBh9C,GAEHxkB,KAAKosD,MAAMi4B,kBAAkBjkB,GAG1BpgE,KAAKsoK,mBAAqBtoK,KAAK4nK,cAElC5nK,KAAKosD,MAAM0sG,oBAAoB14F,EAAM,KASvCy7E,eAAen8I,UAAUgrK,mBAAqB,SAASrkK,GAEtD,IAAIyqC,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAAS1mD,GAErC,GAAa,MAATyqC,IAAkB9wC,KAAKosD,MAAMhmC,MAAMjX,OAAO2hC,EAAMkc,OAAShtD,KAAKosD,MAAMhmC,MAAMuvE,SAAS7kD,EAAMkc,QAC5FhtD,KAAKosD,MAAM8vG,gBAAgBprH,EAAMkc,OAAuD,GAA9ChtD,KAAKosD,MAAMhmC,MAAMwnC,cAAc9c,EAAMkc,MAChF,CACC,IAAIsvC,EAASp2C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAY2kB,kBAAmB3kB,YAAYC,MAClFyyC,EAAOr2C,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYqkB,gBAAiBrkB,YAAYC,MAElF,OAAOwyC,GAAUzyC,YAAYC,MAAQyyC,GAAQ1yC,YAAYC,KAG1D,OAAO,GAQR+xF,eAAen8I,UAAU6qK,cAAgB,WAGtB,MAAdvqK,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,MAGI,MAAdltD,KAAKwkG,QAERxkG,KAAKwkG,MAAM9+E,UACX1lB,KAAKwkG,MAAQ,MAIQ,MAAlBxkG,KAAKwsF,YAERxsF,KAAKwsF,UAAU9mE,UACf1lB,KAAKwsF,UAAY,OASnBqvD,eAAen8I,UAAUgmB,QAAU,WAElC1lB,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/BA,KAAKosD,MAAMosB,eAAex4E,KAAK87I,YAEL,MAAtB97I,KAAKi8I,gBAERj8I,KAAKosD,MAAMosB,eAAex4E,KAAKi8I,eAC/Bj8I,KAAKi8I,cAAgB,MAGK,MAAvBj8I,KAAKk8I,iBAERl8I,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKk8I,gBAC1Cl8I,KAAKk8I,eAAiB,MAGvBl8I,KAAKuqK,gBACLvqK,KAAKwpK,cAGN7oH,WAAWk7F,eAA2C,qBAAnBA,eAAiCA,oBAAiBt7I,EA2HrFg8I,iBAAiB78I,UAAY,IAAIo3E,cACjCylE,iBAAiB78I,UAAUqyB,YAAcwqH,iBAOzCA,iBAAiB78I,UAAU0sD,MAAQ,KAQnCmwF,iBAAiB78I,UAAUirK,yBAA0B,EAOrDpuB,iBAAiB78I,UAAUkrK,iBAAkB,EAQ7CruB,iBAAiB78I,UAAUmrK,YAAa,EAOxCtuB,iBAAiB78I,UAAUorK,gBAAiB,EAQ5CvuB,iBAAiB78I,UAAUqrK,SAAU,EAOrCxuB,iBAAiB78I,UAAUwsJ,gBAAiB,EAO5C3P,iBAAiB78I,UAAUsrK,cAAe,EAO1CzuB,iBAAiB78I,UAAUq9I,SAAW,EAOtCR,iBAAiB78I,UAAU+sG,SAAW,IAOtC8vC,iBAAiB78I,UAAUmvC,GAAK,KAOhC0tG,iBAAiB78I,UAAUqvC,GAAK,KAOhCwtG,iBAAiB78I,UAAUunF,OAAS,EAOpCs1D,iBAAiB78I,UAAUwnF,OAAS,EAOpCq1D,iBAAiB78I,UAAUgrF,SAAW,WAErC,OAAO1qF,KAAKmvB,QAA+B,MAArBnvB,KAAK68I,cAQ5BN,iBAAiB78I,UAAUurK,iBAAmB,WAE7C,OAAOjrK,KAAKksJ,gBAQb3P,iBAAiB78I,UAAUwrK,kBAAoB,SAAS5tK,GAEvD0C,KAAKksJ,eAAiB5uJ,GAQvBi/I,iBAAiB78I,UAAUk9I,eAAiB,WAE3C,OAAO58I,KAAKgrK,cAQbzuB,iBAAiB78I,UAAUyrK,gBAAkB,SAAS7tK,GAErD0C,KAAKgrK,aAAe1tK,GAUrBi/I,iBAAiB78I,UAAU0rK,iBAAmB,SAASzlF,GAEtD,IAAI3/B,EAAM2/B,EAAGlO,WAEb,OAAQz3E,KAAK2qK,yBAA4C,MAAjBhlF,EAAG54B,YACzCvF,QAAQ2zB,kBAAkBn1B,IAAUwB,QAAQg0B,cAAcx1B,IAC1DwB,QAAQi0B,YAAYz1B,IAAUhmD,KAAK4qK,iBAAmBpjH,QAAQ2wB,eAAenyB,IAUhFu2F,iBAAiB78I,UAAU+8I,oBAAsB,SAAS92D,GAEzD,OAAO3lF,KAAK6qK,YAAcrjH,QAAQwzB,kBAAkB2K,EAAGlO,aASxD8kE,iBAAiB78I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEvD3lF,KAAK88I,eAAiBn3D,GAEjBA,EAAGtO,cAAgBr3E,KAAKirK,qBAAuBjrK,KAAKmvB,QAAUnvB,KAAKorK,iBAAiBzlF,KAExF3lF,KAAKiL,MAAM06E,GACX3lF,KAAKqrK,sBAAsB1lF,KAS7B42D,iBAAiB78I,UAAUuL,MAAQ,SAAS06E,GAE3C3lF,KAAKy9G,KAAOz9G,KAAKosD,MAAM2R,UAAUI,WACjCn+D,KAAK09G,KAAO19G,KAAKosD,MAAM2R,UAAUzV,UAGjCtoD,KAAKinF,OAAStB,EAAG/N,OACjB53E,KAAKknF,OAASvB,EAAG7N,OACjB93E,KAAK6uC,GAAK,KACV7uC,KAAK+uC,GAAK,KAEV/uC,KAAKsuJ,gBAAiB,GA+BvB/R,iBAAiB78I,UAAU2rK,sBAAwB,SAAS1lF,GAE3DA,EAAGrO,WAQJilE,iBAAiB78I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAKvD,GAHA3lF,KAAK6uC,GAAK82C,EAAG/N,OAAS53E,KAAKinF,OAC3BjnF,KAAK+uC,GAAK42C,EAAG7N,OAAS93E,KAAKknF,OAEvBlnF,KAAKmvB,OAEJnvB,KAAK8qK,iBAGJ9qK,KAAK+qK,UAER/qK,KAAK6uC,GAAK7uC,KAAKosD,MAAM0gC,KAAK9sF,KAAK6uC,IAC/B7uC,KAAK+uC,GAAK/uC,KAAKosD,MAAM0gC,KAAK9sF,KAAK+uC,KAGhC/uC,KAAKosD,MAAMmkC,SAASvwF,KAAK6uC,GAAK7uC,KAAKy9G,IAAKz9G,KAAK+uC,GAAK/uC,KAAK09G,MAGxD19G,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw1B,IAAK,QAAS2I,SAEnD,GAAI3lF,KAAKsuJ,eACd,CACC,IAAI3+H,EAAM3vB,KAAKmvB,OAIfnvB,KAAKmvB,OAASjvB,KAAKk3D,IAAIp3D,KAAK6uC,IAAM7uC,KAAKosD,MAAMsmE,WAAaxyH,KAAKk3D,IAAIp3D,KAAK+uC,IAAM/uC,KAAKosD,MAAMsmE,WAEpF/iG,GAAO3vB,KAAKmvB,QAEhBnvB,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu1B,UAAW,QAAS4I,KAI3D3lF,KAAKmvB,QAAUnvB,KAAKsuJ,iBAEvB3oE,EAAGrO,WAULilE,iBAAiB78I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAErD,GAAI3lF,KAAKmvB,OACT,CACC,GAAe,MAAXnvB,KAAK6uC,IAAyB,MAAX7uC,KAAK+uC,GAC5B,CAEC,IAAK/uC,KAAKosD,MAAM07F,0BAA4B5hG,QAAQ6I,cAAc/uD,KAAKosD,MAAM2R,WAC7E,CACC,IAAI5Q,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7BnB,EAAIhsD,KAAKosD,MAAMU,UAAU+W,UAC7B7jE,KAAKosD,MAAMmkC,SAAS,EAAG,GACvBvwF,KAAKuwF,SAASvkC,EAAEhN,EAAIh/C,KAAK6uC,GAAKse,EAAOnB,EAAEpB,EAAI5qD,KAAK+uC,GAAKoe,GAGtDw4B,EAAGrO,UAGJt3E,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy1B,QAAS,QAAS0I,IAG5D3lF,KAAK4qF,SASN2xD,iBAAiB78I,UAAUkrF,MAAQ,WAElC5qF,KAAKsuJ,gBAAiB,EACtBtuJ,KAAK88I,eAAiB,KACtB98I,KAAKmvB,QAAS,EACdnvB,KAAK6uC,GAAK,KACV7uC,KAAK+uC,GAAK,MAQXwtG,iBAAiB78I,UAAU6wF,SAAW,SAAS1hD,EAAIE,GAElD/uC,KAAKosD,MAAMU,UAAUgkC,aAAajiD,EAAIE,IAQvCwtG,iBAAiB78I,UAAUgmB,QAAU,WAEpC1lB,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/BA,KAAKosD,MAAMosB,eAAex4E,KAAKw8I,qBAC/Bx8I,KAAKosD,MAAMosB,eAAex4E,KAAK08I,gBAC/Bl1F,QAAQgxB,eAAev9D,SAAU,UAAWjb,KAAKowF,kBAGlDzvC,WAAW47F,iBAA+C,qBAArBA,iBAAmCA,sBAAmBh8I,EAsC3F08I,mBAAmBv9I,UAAY,IAAIguF,YACnCuvD,mBAAmBv9I,UAAUqyB,YAAckrH,mBAO3CA,mBAAmBv9I,UAAU0sD,MAAQ,KAQrC6wF,mBAAmBv9I,UAAU4rK,eAAgB,EAQ7CruB,mBAAmBv9I,UAAU6rK,4BAA6B,EAO1DtuB,mBAAmBv9I,UAAU8rK,SAAW,KAOxCvuB,mBAAmBv9I,UAAU+rK,SAAW,KAOxCxuB,mBAAmBv9I,UAAUgsK,QAAU,KAOvCzuB,mBAAmBv9I,UAAUisK,QAAU,KAOvC1uB,mBAAmBv9I,UAAUglB,KAAO,WAGnCgpE,YAAYhuF,UAAUglB,KAAK3jB,MAAMf,MAIjCwnD,QAAQ4xB,oBAAoBp5E,KAAK4iE,IAAK1c,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEjEhmD,KAAKosD,MAAMugF,eAAejmD,YAU5Bu2D,mBAAmBv9I,UAAUksK,gBAAkB,SAASjmF,GAEvD,OAAO3lF,KAAKsrK,eASbruB,mBAAmBv9I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAErD3lF,KAAKmuD,cAAgB3G,QAAQwzB,kBAAkB2K,EAAGlO,cAGrDz3E,KAAK6tF,WACL7tF,KAAKwrK,SAAW7lF,EAAG3N,YACnBh4E,KAAKyrK,SAAW9lF,EAAG1N,YACnBj4E,KAAK0rK,QAAUlkH,QAAQu0B,aAAa4J,EAAGlO,YAAYi0F,QACnD1rK,KAAK2rK,QAAUnkH,QAAQu0B,aAAa4J,EAAGlO,YAAYk0F,QACnD3rK,KAAK6rK,aAAe7rK,KAAKm4E,eAAewN,GACxC3lF,KAAKk9I,aAAc,IASrBD,mBAAmBv9I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAGrD3lF,KAAKk9I,aAA+B,MAAhBl9I,KAAK0rK,SAAmC,MAAhB1rK,KAAK2rK,UAEhDzrK,KAAKk3D,IAAI5P,QAAQu0B,aAAa4J,EAAGlO,YAAYi0F,QAAU1rK,KAAK0rK,SAAW1rK,KAAKosD,MAAMsmE,WACrFxyH,KAAKk3D,IAAI5P,QAAQu0B,aAAa4J,EAAGlO,YAAYk0F,QAAU3rK,KAAK2rK,SAAW3rK,KAAKosD,MAAMsmE,aAElF1yH,KAAKk9I,aAAc,IAWtBD,mBAAmBv9I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAEvD,GAAI3lF,KAAK6rK,cAAgB7rK,KAAKk9I,aAAgC,MAAjBl9I,KAAKwrK,UAAqC,MAAjBxrK,KAAKyrK,SAC3E,CACC,IAAIz+G,EAAOhtD,KAAK8rK,qBAAqBnmF,GAGjC3lF,KAAKosD,MAAM+B,aAAenuD,KAAK4rK,gBAAgBjmF,IAC1C,MAAR34B,IAAiBhtD,KAAKosD,MAAM2hG,eAAe/gG,GAE3ChtD,KAAKosD,MAAMghG,iBAAiBpgG,GAEpBhtD,KAAKurK,4BAAsC,MAARv+G,GAE3ChtD,KAAKosD,MAAM2E,iBAIZ/wD,KAAKosD,MAAMugF,eAAejmD,OAI1B,IAAI9nB,EAAS1Y,QAAQuY,kBACrBz+D,KAAKumD,MAAMo/B,EAAG/N,OAAShZ,EAAO5f,EAAI,EAAG2mC,EAAG7N,OAASlZ,EAAOhU,EAAI,EAAGoC,EAAM24B,EAAGlO,YACxEkO,EAAGrO,UAGJt3E,KAAK6rK,cAAe,EACpB7rK,KAAKk9I,aAAc,GAQpBD,mBAAmBv9I,UAAUosK,qBAAuB,SAASnmF,GAE5D,OAAOA,EAAGzN,WAQX+kE,mBAAmBv9I,UAAUgmB,QAAU,WAEtC1lB,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/BA,KAAKosD,MAAMosB,eAAex4E,KAAK08I,gBAG/BhvD,YAAYhuF,UAAUgmB,QAAQ3kB,MAAMf,OAGrC2gD,WAAWs8F,mBAAmD,qBAAvBA,mBAAqCA,wBAAqB18I,EAgEjG2lD,QAAQ/6C,OAAOgyI,aAAcrmE,eAO7BqmE,aAAaz9I,UAAU0sD,MAAQ,KAO/B+wF,aAAaz9I,UAAUgqF,SAAU,EAUjCyzD,aAAaz9I,UAAU89D,QAAU3T,YAAY8d,gBAO7Cw1E,aAAaz9I,UAAUqsK,gBAAiB,EAOxC5uB,aAAaz9I,UAAU09I,WAAa,KAOpCD,aAAaz9I,UAAU29I,aAAe,KAOtCF,aAAaz9I,UAAU8uJ,aAAe,KAOtCrR,aAAaz9I,UAAUssK,WAAa,KAOpC7uB,aAAaz9I,UAAU+uJ,YAAc,KAYrCtR,aAAaz9I,UAAU2qF,WAAa,SAASX,GAE5C1pF,KAAK0pF,QAAUA,GAShByzD,aAAaz9I,UAAUyuD,UAAY,WAElC,OAAOnuD,KAAK0pF,SAQbyzD,aAAaz9I,UAAUusK,WAAa,SAASzuG,GAE5Cx9D,KAAKw9D,QAAUA,GAQhB2/E,aAAaz9I,UAAUwsK,WAAa,WAEnC,OAAOlsK,KAAKw9D,SAQb2/E,aAAaz9I,UAAUysK,kBAAoB,SAASziF,GAEnD1pF,KAAK+rK,eAAiBriF,GAQvByzD,aAAaz9I,UAAU0sK,iBAAmB,WAEzC,OAAOpsK,KAAK+rK,gBAQb5uB,aAAaz9I,UAAU2sK,cAAgB,WAEtC,OAA0B,MAAnBrsK,KAAKgsK,YAQb7uB,aAAaz9I,UAAU4sK,cAAgB,WAEtC,OAAOtsK,KAAKgsK,YAQb7uB,aAAaz9I,UAAU6sK,eAAiB,WAEvC,OAAOvsK,KAAKyuJ,aAQbtR,aAAaz9I,UAAUkrF,MAAQ,WAE9B5qF,KAAKgsK,WAAa,KAEM,MAApBhsK,KAAKyuJ,cAERzuJ,KAAKyuJ,YAAc,KACnBzuJ,KAAKwsK,WAcPrvB,aAAaz9I,UAAU+vC,QAAU,SAASk2C,GAEzC,IAAI70C,EAAQ,KAQZ,OANI9wC,KAAKmuD,cAERrd,EAAQ9wC,KAAK+sD,SAAS44B,GACtB3lF,KAAKysK,gBAAgB37H,EAAO60C,IAGtB70C,GAQRqsG,aAAaz9I,UAAU+sK,gBAAkB,SAAS37H,EAAO60C,EAAI/xB,GAE5D,IAAIqmG,EAAoB,MAATnpH,GAAiB9wC,KAAK0sK,aAAa57H,GAClD8iB,EAAkB,MAATA,EAAiBA,EAAQ5zD,KAAK2sK,eAAehnF,EAAGlO,WAAY3mC,EAAOmpH,GAI3Ej6J,KAAKgsK,WAFF/R,EAEenpH,EAIA,KAGfA,GAAS9wC,KAAKyuJ,aAAe76F,GAAS5zD,KAAKwuJ,eAE9CxuJ,KAAKwuJ,aAAe56F,EAEP,MAAT9iB,GAAsC,MAArB9wC,KAAKwuJ,cAEzBxuJ,KAAKyuJ,YAAc39G,EACnB9wC,KAAK0uJ,QAEuB,MAApB1uJ,KAAKyuJ,cAEbzuJ,KAAKyuJ,YAAc,KACnBzuJ,KAAKwsK,YAURrvB,aAAaz9I,UAAUktK,SAAW,SAAS5/G,EAAM4G,GAEhD,IAAI9iB,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAASC,GAE7B,MAATlc,IAEH9wC,KAAKwuJ,aAAyB,MAAT56F,EAAiBA,EAAQ5zD,KAAKo9I,WACnDp9I,KAAKyuJ,YAAc39G,EACnB9wC,KAAK0uJ,SASPvR,aAAaz9I,UAAUgvJ,KAAO,WAE7B1uJ,KAAKwsF,UAAUk9E,kBAAkB1pK,KAAKwuJ,cACtCxuJ,KAAKwsF,UAAUA,UAAUxsF,KAAKyuJ,aAC9BzuJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ42B,KAAM,QAASp+E,KAAKyuJ,eAQ9DtR,aAAaz9I,UAAU8sK,OAAS,WAE/BxsK,KAAK0uJ,QAUNvR,aAAaz9I,UAAUgtK,aAAe,SAAS57H,GAE9C,OAAO,GASRqsG,aAAaz9I,UAAUitK,eAAiB,SAAS3mH,EAAKlV,EAAOmpH,GAE5D,OAAO,EAAYj6J,KAAKo9I,WAAap9I,KAAKq9I,cAS3CF,aAAaz9I,UAAUqtD,SAAW,SAAS44B,GAE1C,IAAIhoB,EAAO39D,KAAKosD,MAAMU,UAClBE,EAAOhtD,KAAKk4E,QAAQyN,GACpB70C,EAAQ9wC,KAAK6sK,eAAelvG,EAAK5Q,SAASC,IAE9C,OAAiB,MAATlc,GAAiB9wC,KAAKg9D,WAAWlsB,EAAO60C,GAAO70C,EAAQ,MAShEqsG,aAAaz9I,UAAUw4E,QAAU,SAASyN,GAEzC,OAAOA,EAAGzN,WASXilE,aAAaz9I,UAAUmtK,eAAiB,SAAS/7H,GAEhD,OAAOA,GAURqsG,aAAaz9I,UAAUs9D,WAAa,SAASlsB,EAAO60C,GAEnD,OAAI3lF,KAAK+rK,gBAED7lH,QAAQqX,kBAAkBzsB,EAAO60C,EAAG3N,YAAa2N,EAAG1N,YAC1Dj4E,KAAKw9D,QAAS3T,YAAY+d,iBAC1B/d,YAAYge,mBAWfs1E,aAAaz9I,UAAUgmB,QAAU,WAEhC1lB,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAK29I,cACzC39I,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAK29I,cAC1C39I,KAAKwsF,UAAU9mE,WAGhBi7B,WAAWw8F,aAAuC,qBAAjBA,aAA+BA,kBAAe58I,EAwD/E2lD,QAAQ/6C,OAAOmyI,wBAAyBxmE,eAOxCwmE,wBAAwB59I,UAAU0sD,MAAQ,KAO1CkxF,wBAAwB59I,UAAUgqF,SAAU,EAO5C4zD,wBAAwB59I,UAAUw8I,eAAiB,KAOnDoB,wBAAwB59I,UAAUotK,YAAc,IAOhDxvB,wBAAwB59I,UAAU6tB,SAAW,KAO7C+vH,wBAAwB59I,UAAUyuD,UAAY,WAE7C,OAAOnuD,KAAK0pF,SAQb4zD,wBAAwB59I,UAAU2qF,WAAa,SAAS/sF,GAEvD0C,KAAK0pF,QAAUpsF,GAQhBggJ,wBAAwB59I,UAAUi7J,WAAa,SAAS3tG,GAEvD,OAAOhtD,KAAKutB,SAASluB,IAAI2tD,IAQ1BswF,wBAAwB59I,UAAUkrF,MAAQ,WAEzC5qF,KAAKutB,SAAS07B,OAAM,SAAS5rD,EAAKyc,GAEjCA,EAAQ8wE,MAAM7pF,MAAM+Y,OAStBwjI,wBAAwB59I,UAAU69I,QAAU,WAG3C,IAAIwvB,EAAc/sK,KAAKutB,SACvBvtB,KAAKutB,SAAW,IAAIq7B,aAKpB,IAFA,IAAIj5B,EAAM3vB,KAAKosD,MAAMy3B,oBAEZ36E,EAAI,EAAGA,EAAIymB,EAAI/uB,OAAQsI,IAChC,CACC,IAAI4nC,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASp9B,EAAIzmB,IAEzC,GAAa,MAAT4nC,EACJ,CACC,IAAIh3B,EAAUizJ,EAAY1jK,OAAOsmB,EAAIzmB,IAEtB,MAAX4Q,IAECA,EAAQg3B,OAASA,GAEpBh3B,EAAQ4L,UACR5L,EAAU,MAED9Z,KAAKgtK,gBAAgBlzJ,KAEP,MAAnBA,EAAQyjI,SAEXzjI,EAAQyjI,UAGTzjI,EAAQ0zC,WAIK,MAAX1zC,IAEHA,EAAU9Z,KAAKosD,MAAMs1G,cAAc5wH,GACnC9wC,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQu4B,IAAK,QAASjvC,KAGzC,MAAXh3B,GAEH9Z,KAAKutB,SAASs7B,IAAIl5B,EAAIzmB,GAAI4Q,IAM7BizJ,EAAY9jH,MAAM/C,QAAQ1jD,KAAKxC,MAAM,SAAS3C,EAAKyc,GAElD9Z,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw4B,OAAQ,QAASlmE,EAAQg3B,QAClEh3B,EAAQ4L,eASV43H,wBAAwB59I,UAAUstK,gBAAkB,SAASlzJ,GAE5D,OAAwB,MAAjBA,EAAQ1W,OAQhBk6I,wBAAwB59I,UAAU+xI,cAAgB,SAAS3gG,GAE1D,IAAIh3B,EAAU9Z,KAAKutB,SAASlkB,OAAOynC,EAAMkc,MAEzC,GAAe,MAAXlzC,EACJ,CAEC,IAAI1W,EAAQ0W,EAAQ1W,MAChB47C,EAAIllC,EAAQmtE,OACZr8B,EAAI9wC,EAAQotE,OAEhBptE,EAAQ4L,UACR5L,EAAU9Z,KAAKosD,MAAMs1G,cAAc5wH,GAEpB,MAAXh3B,IAEH9Z,KAAKutB,SAASs7B,IAAI/X,EAAMkc,KAAMlzC,GAEjB,MAAT1W,GAAsB,MAAL47C,GAAkB,MAAL4L,GAEjC9wC,EAAQ7O,MAAM+zC,EAAG4L,EAAGxnD,MAWxBk6I,wBAAwB59I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAE9D,GAAI3lF,KAAKosD,MAAM+B,aAAenuD,KAAKmuD,YACnC,CACC,IAAIt6C,EAAO,CAACyzC,EAAQq+B,GAEpB3lF,KAAKutB,SAAS07B,OAAM,SAAS5rD,EAAKyc,GAEjCA,EAAQ0rE,UAAUzkF,MAAM+Y,EAASjG,QAUpCypI,wBAAwB59I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAE9D,GAAI3lF,KAAKosD,MAAM+B,aAAenuD,KAAKmuD,YACnC,CACC,IAAIt6C,EAAO,CAACyzC,EAAQq+B,GAEpB3lF,KAAKutB,SAAS07B,OAAM,SAAS5rD,EAAKyc,GAEjCA,EAAQoxE,UAAUnqF,MAAM+Y,EAASjG,QAUpCypI,wBAAwB59I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAE5D,GAAI3lF,KAAKosD,MAAM+B,aAAenuD,KAAKmuD,YACnC,CACC,IAAIt6C,EAAO,CAACyzC,EAAQq+B,GAEpB3lF,KAAKutB,SAAS07B,OAAM,SAAS5rD,EAAKyc,GAEjCA,EAAQsxE,QAAQrqF,MAAM+Y,EAASjG,QAUlCypI,wBAAwB59I,UAAUgmB,QAAU,WAE3C1lB,KAAKosD,MAAM2kC,oBAAoB/wF,MAEJ,MAAvBA,KAAKk8I,iBAERl8I,KAAKosD,MAAMoxF,oBAAoBhlE,eAAex4E,KAAKk8I,gBACnDl8I,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKk8I,gBAC1Cl8I,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAKk8I,gBACzCl8I,KAAKk8I,eAAiB,OAIxBv7F,WAAW28F,wBAA6D,qBAA5BA,wBAA0CA,6BAA0B/8I,EAyLhH2lD,QAAQ/6C,OAAOsyI,oBAAqB3mE,eAOpC2mE,oBAAoB/9I,UAAU0sD,MAAQ,KAStCqxF,oBAAoB/9I,UAAU2tF,eAAgB,EAU9CowD,oBAAoB/9I,UAAUutK,eAAgB,EAS9CxvB,oBAAoB/9I,UAAUwtK,cAAe,EAQ7CzvB,oBAAoB/9I,UAAUytK,aAAe,KAQ7C1vB,oBAAoB/9I,UAAU0tK,oBAAqB,EAOnD3vB,oBAAoB/9I,UAAUgqF,SAAU,EAOxC+zD,oBAAoB/9I,UAAUypF,QAAS,EAYvCs0D,oBAAoB/9I,UAAU2tK,cAAe,EAO7C5vB,oBAAoB/9I,UAAU6uJ,OAAS,KAQvC9Q,oBAAoB/9I,UAAU4tK,kBAAoB,KAOlD7vB,oBAAoB/9I,UAAUjB,MAAQ,KAQtCg/I,oBAAoB/9I,UAAU6tK,kBAAmB,EASjD9vB,oBAAoB/9I,UAAU8tK,iBAAkB,EAQhD/vB,oBAAoB/9I,UAAU4gD,MAAQ,KAUtCm9F,oBAAoB/9I,UAAU+tK,kBAAoB,IAAI9iH,QAAQ,EAAGd,YAAYyd,yBAQ7Em2E,oBAAoB/9I,UAAUuuD,UAAY,KAO1CwvF,oBAAoB/9I,UAAUuxF,cAAgB,KAO9CwsD,oBAAoB/9I,UAAUguK,aAAe,KAQ7CjwB,oBAAoB/9I,UAAUiuK,iBAAmB,EASjDlwB,oBAAoB/9I,UAAUkuK,gBAAkBhtH,SAASuB,OASzDs7F,oBAAoB/9I,UAAUmuK,gBAAiB,EAQ/CpwB,oBAAoB/9I,UAAUy+I,aAAc,EAO5CV,oBAAoB/9I,UAAU+uD,OAAS,KAQvCgvF,oBAAoB/9I,UAAUouK,oBAAqB,EAQnDrwB,oBAAoB/9I,UAAUyuD,UAAY,WAEzC,OAAOnuD,KAAK0pF,SAab+zD,oBAAoB/9I,UAAU2qF,WAAa,SAASX,GAEnD1pF,KAAK0pF,QAAUA,GAiBhB+zD,oBAAoB/9I,UAAUquK,eAAiB,SAAS1zG,EAAMn2D,EAAQE,EAAQ4hD,EAAKgnC,GAElF,OAAOhtF,KAAK8tK,oBAAsB5pK,GAAUE,GAY7Cq5I,oBAAoB/9I,UAAUsuK,eAAiB,SAAShoH,GAEvD,OAAOhmD,KAAKqtK,cAQb5vB,oBAAoB/9I,UAAUuuK,gBAAkB,SAAS3wK,GAExD0C,KAAKqtK,aAAe/vK,GAQrBmgJ,oBAAoB/9I,UAAUsuI,YAAc,WAG3C,IAAI9gF,EAASltD,KAAKm+I,aAAiC,MAAlBn+I,KAAKiuD,UACrCjuD,KAAKosD,MAAMmB,aAAaygF,YAAYhuI,KAAKiuD,WACzC,IAAIw2C,WAAW,GAAI56C,YAAY4gB,eAShC,OARAvd,EAAMuW,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAClD7Z,YAAYoe,YAAcpe,YAAY6Z,YACvCxW,EAAMC,MAAQntD,KAAKosD,MAAMuR,KAAKxQ,MAC9BD,EAAMm+B,eAAgB,EACtBn+B,EAAMw3C,UAAW,EACjBx3C,EAAMxoC,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAChCj+C,QAAQiyB,oBAAoBvsB,EAAMh6C,KAAMlT,KAAKosD,MAAO,MAE7Cc,GAURuwF,oBAAoB/9I,UAAUglB,KAAO,WAEpC1kB,KAAKosD,MAAM+jC,iBAAiBnwF,MAC5BA,KAAKuuJ,OAASvuJ,KAAK4tG,eACnB5tG,KAAKstK,kBAAoB,IAAI5vB,oBAAoB19I,KAAKosD,OAGtDpsD,KAAKixF,cAAgB/qC,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAE1B,MAAlBtnD,KAAKkuK,YAERluK,KAAKkuK,UAAYluK,KAAKosD,MAAMU,UAAUC,SAAS/sD,KAAKkuK,UAAUlhH,OAGzC,MAAlBhtD,KAAKkuK,WAERluK,KAAKmuK,YAAYnuK,KAAKouK,MAAOpuK,KAAKkuK,WAClCluK,KAAKstK,kBAAkB1iF,SAEE,MAAjB5qF,KAAK8oD,UAAoE,MAAhD9oD,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAK8oD,SAASkE,OAExEhtD,KAAK4qF,WAIP5qF,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQt/E,KAAKixF,eACvDjxF,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQk4B,MAAO1/E,KAAKixF,eACrDjxF,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQm4B,UAAW3/E,KAAKixF,eACzDjxF,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQo4B,oBAAqB5/E,KAAKixF,eAGnEjxF,KAAK0tK,aAAexnH,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAE/CtnD,KAAK4qF,WAGN5qF,KAAKosD,MAAM7E,YAAYC,QAAQi6B,cAAezhF,KAAK0tK,cACnD1tK,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQs4B,KAAM9/E,KAAK0tK,cACpD1tK,KAAKosD,MAAMU,UAAUvF,YAAYC,QAAQq4B,GAAI7/E,KAAK0tK,eASnDjwB,oBAAoB/9I,UAAU2uK,kBAAoB,SAASrhH,GAE1D,OAAO,GAQRywF,oBAAoB/9I,UAAUkuG,aAAe,WAE5C,IAAI2gD,EAAS,IAAIpR,aAAan9I,KAAKosD,OAsGnC,OArGAmiG,EAAOwd,gBAAiB,EAIxBxd,EAAOr2E,QAAUhyB,QAAQ1jD,KAAKxC,MAAM,SAAS2lF,GAE5C,IAAI34B,EAAOmwF,aAAaz9I,UAAUw4E,QAAQn3E,MAAMwtJ,EAAQvtJ,WAUxD,GATAhB,KAAKvB,MAAQ,KAGD,MAARuuD,GAAqC,MAArBhtD,KAAK6pF,eAExB78B,EAAOhtD,KAAKosD,MAAMq+B,UAAUzqF,KAAK6pF,aAAa7qC,EAAGh/C,KAAK6pF,aAAaj/B,IAIxD,MAARoC,IAAiBhtD,KAAKosD,MAAMitG,kBAAkBrsG,GAClD,CACC,IAAI3mD,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/oC,GAEzChtD,KAAKosD,MAAM8W,WAAWyyB,SAAStvF,IAAWrG,KAAKosD,MAAMitG,kBAAkBhzJ,KAE1E2mD,EAAO3mD,GA0CT,OAtCKrG,KAAKosD,MAAMizD,WAAWryD,IAA8B,MAArBhtD,KAAK6pF,cACxC7pF,KAAKosD,MAAM0zG,oBAAoB9yG,EAAMhtD,KAAK6pF,aAAa7qC,EAAGh/C,KAAK6pF,aAAaj/B,KAC3E5qD,KAAKquK,kBAAkBrhH,MAExBA,EAAO,MAGI,MAARA,EAEChtD,KAAKsuK,eAEa,MAAjBtuK,KAAK8oD,WAER9oD,KAAKvB,MAAQuB,KAAKuuK,mBAAmBvuK,KAAK8oD,SAASkE,KAAMA,GAEvC,MAAdhtD,KAAKvB,OAAsC,GAArBuB,KAAKvB,MAAMmC,SAEpCosD,EAAO,KAGHhtD,KAAKguK,eAAeroF,EAAGlO,cAE1Bz3E,KAAKvB,MAAQ,QAKPuB,KAAK4+J,cAAc5xG,EAAM24B,KAElC34B,EAAO,OAGAhtD,KAAKsuK,gBAAmBtuK,KAAKguK,eAAeroF,EAAGlO,aACrDz3E,KAAKosD,MAAMu+F,qBAEb3qJ,KAAKvB,MAAQ,IAGPuuD,KAIRuhG,EAAOme,aAAexmH,QAAQ1jD,KAAKxC,MAAM,SAAS8wC,GAEjD,OAAI9wC,KAAKsuK,eAEa,MAAdtuK,KAAKvB,MAIL0+I,aAAaz9I,UAAUgtK,aAAa3rK,MAAMwtJ,EAAQvtJ,cAM3DutJ,EAAOoe,eAAiBzmH,QAAQ1jD,KAAKxC,MAAM,SAASgmD,EAAKlV,EAAOmpH,GAE/D,OAA6B,MAArBj6J,KAAKmtK,cAAwBntK,KAAKsuK,eACzCnxB,aAAaz9I,UAAUitK,eAAe5rK,MAAMwtJ,EAAQvtJ,WACpD,QAKFutJ,EAAOvxF,WAAa9W,QAAQ1jD,KAAKxC,MAAM,SAAS8wC,EAAOkV,GAEtD,QAAyB,MAArBhmD,KAAKmtK,eAAwBntK,KAAKsuK,iBAK/BnxB,aAAaz9I,UAAUs9D,WAAWj8D,MAAMwtJ,EAAQvtJ,cAGjDutJ,GAQR9Q,oBAAoB/9I,UAAUuL,MAAQ,SAAS6lC,EAAOkO,EAAG4L,EAAGqD,GAE3DjuD,KAAK8oD,SAAWhY,EAChB9wC,KAAKsgD,MAAQ,IAAIqK,QAAQ3L,EAAG4L,GAC5B5qD,KAAKiuD,UAA0B,MAAbA,EAAqBA,EAAYjuD,KAAK2uJ,gBAAgB,MAGxE3uJ,KAAKuuJ,OAAOC,aAAexuJ,KAAKuuJ,OAAOnR,WACvCp9I,KAAKuuJ,OAAOE,YAAc39G,EAC1B9wC,KAAKuuJ,OAAOG,OAEZ1uJ,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy6B,MAAO,QAASjiF,KAAK8oD,YAS/D20F,oBAAoB/9I,UAAU4uK,aAAe,WAE5C,OAAqB,MAAdtuK,KAAKsgD,OAA+B,MAAdtgD,KAAKktD,OAanCuwF,oBAAoB/9I,UAAUk/J,cAAgB,SAAS5xG,EAAM24B,GAE5D,OAAO3lF,KAAKosD,MAAMwyG,cAAc5xG,IAcjCywF,oBAAoB/9I,UAAUm/J,cAAgB,SAAS7xG,GAEtD,OAAO,GAeRywF,oBAAoB/9I,UAAU6uK,mBAAqB,SAASrqK,EAAQE,GAEnE,OAAKpE,KAAK6+J,cAAcz6J,GAKjBpE,KAAKosD,MAAM4mG,uBAAuB,KAAM9uJ,EAAQE,GAH/C,IAgBTq5I,oBAAoB/9I,UAAU8uK,gBAAkB,SAAS19H,GAExD,OAAO9wC,KAAKmtK,cAab1vB,oBAAoB/9I,UAAU+uK,0BAA4B,SAAS39H,GAElE,OAAkB,MAAdA,EAAMj/B,MAAgBi/B,EAAMj/B,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,WAK5D/9D,KAAKitK,eAabxvB,oBAAoB/9I,UAAUgvK,YAAc,SAAS59H,GAEpD,IAAIq3C,EAAQnoF,KAAKwuK,gBAAgB19H,GAEjC,GAAa,MAATq3C,GAA0B,MAATr3C,EACrB,CACC9wC,KAAKkuK,UAAYp9H,EACjB,IAAIs9H,EAAQ,GAMRtxG,EAAS,IAAIjS,YAAY,EAAG,EAAGs9B,EAAMriC,MAAOqiC,EAAMxiC,QAClD8gB,EAAO,IAAI6oC,aAAaxyC,EAAQqrB,EAAMvzE,IAAK,KAAM,KAAM,GAC3D6xD,EAAKkzC,qBAAsB,EAEvB35G,KAAKyuK,0BAA0B39H,IAElC21B,EAAKhD,QAAU5Z,YAAYue,mBAC3B3B,EAAK/hD,KAAK1kB,KAAKosD,MAAM2R,aAIrB0I,EAAKhD,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACjD7Z,YAAY6Z,YAAc7Z,YAAYoe,YACvCxB,EAAK/hD,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAG3BzlG,KAAKktK,cAA6C,MAA7BzmG,EAAKvzD,KAAKy+C,iBAElC8U,EAAKvzD,KAAKujB,WAAW6B,aAAamuC,EAAKvzD,KAAMuzD,EAAKvzD,KAAKujB,WAAWgH,aAIpEgpC,EAAKvzD,KAAK0U,MAAM6mC,OAAS5E,YAAYsgB,eAGrC,IAAIpd,EAAW7G,QAAQ1jD,KAAKxC,MAAM,WAEjC,OAA6B,MAArBA,KAAK2uK,aAAwB3uK,KAAK2uK,aAAe79H,KAItD00C,EAAYt/B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEtCwB,QAAQ6vB,WAAWrxB,KAEvBhmD,KAAKymE,KAAOA,EACZzmE,KAAKosD,MAAM0tB,eAAetyB,QAAQuyB,WACjC,IAAInD,aAAa5wB,EAAK+G,UASzB,OALAvF,QAAQiyB,oBAAoBhT,EAAKvzD,KAAMlT,KAAKosD,MAAOW,EAAUy4B,GAE7D4oF,EAAMr9J,KAAK01D,GACXzmE,KAAKmuK,YAAYC,EAAOpuK,KAAKkuK,WAEtBE,EAGR,OAAO,MAYR3wB,oBAAoB/9I,UAAUyuK,YAAc,SAASC,EAAOt9H,GAE3D,GAAa,MAATs9H,GAA6B,MAAZA,EAAM,IAAuB,MAATt9H,EACzC,CACC,IAAIrD,EAAMztC,KAAK4uK,gBAAgBR,EAAM,GAAIt9H,GACzCs9H,EAAM,GAAGtxG,OAAO9d,EAAIvR,EAAIuR,EACxBovH,EAAM,GAAGtxG,OAAOlS,EAAInd,EAAImd,EACxBwjH,EAAM,GAAG5gH,WAaXiwF,oBAAoB/9I,UAAUkvK,gBAAkB,SAASnoG,EAAM31B,GAE9D,IAAIqc,EAAQntD,KAAKosD,MAAMU,UAAUK,MAC7BuM,EAAK5oB,EAAMka,aACXyS,EAAK3sB,EAAMma,aAEf,GAAIjrD,KAAKosD,MAAMizD,WAAWvuE,EAAMkc,MAChC,CACC,IAAIvM,EAAOzgD,KAAKosD,MAAM0zD,aAAahvE,EAAMkc,MAEzC0M,EAAoB,GAAdjZ,EAAKqF,MAAchV,EAAMkO,EAAIyB,EAAKqF,MAAQqH,EAAQ,EAAIuM,EAC5D+D,EAAqB,GAAfhd,EAAKkF,OAAe7U,EAAM8Z,EAAInK,EAAKkF,OAASwH,EAAQ,EAAIsQ,EAE9D,IAAII,EAAQ3X,QAAQqQ,UAAUrQ,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,iBAAmB,GAE3F,GAAa,GAAT+C,EACJ,CACC,IAAIrG,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GACfokE,EAAK,IAAIt3E,QAAQ7Z,EAAMka,aAAcla,EAAMma,cAC3C+O,EAAK9T,QAAQ6T,gBAAgB,IAAIpP,QAAQ+O,EAAI+D,GAAKjG,EAAKE,EAAKuqE,GAChEvoE,EAAKM,EAAGhb,EACRye,EAAKzD,EAAGpP,GAIV,OAAO,IAAID,QAAQ+O,EAAK+M,EAAK3J,OAAOhX,MAAQ,EAC1C2X,EAAKgJ,EAAK3J,OAAOnX,OAAS,IAQ7B83F,oBAAoB/9I,UAAUmvK,aAAe,WAE5C,GAAkB,MAAd7uK,KAAKouK,MACT,CACC,IAAK,IAAIllK,EAAI,EAAGA,EAAIlJ,KAAKouK,MAAMxtK,OAAQsI,IAEtClJ,KAAKouK,MAAMllK,GAAGwc,UAGf1lB,KAAKouK,MAAQ,KACbpuK,KAAKymE,KAAO,KACZzmE,KAAK8uK,aAAe,KACpB9uK,KAAKkuK,UAAY,OAanBzwB,oBAAoB/9I,UAAUqvK,aAAe,SAASppF,GAErD,OAAgD,MAAvC3lF,KAAKstK,kBAAkB1vB,cAAoE,MAA5C59I,KAAKstK,kBAAkB0B,mBAC5D,MAAjBhvK,KAAK8oD,UAAkC,MAAd9oD,KAAKvB,QAAgC,MAAduB,KAAKouK,OAAgC,MAAdpuK,KAAKouK,OAChE,MAAbpuK,KAAKymE,OAQPg3E,oBAAoB/9I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAI1D,GAFA3lF,KAAK2tK,mBAED3tK,KAAKmuD,aAAenuD,KAAKosD,MAAM+B,cAAgBw3B,EAAGtO,eACpDr3E,KAAKsuK,gBAAkBtuK,KAAK+uK,aAAappF,GAC3C,CA8BC,GA7BgD,MAA5C3lF,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,cACgB,MAAvC59I,KAAKstK,kBAAkBzjF,cAEvB7pF,KAAKivK,iBAAmBjvK,KAAKstK,kBAAkB0B,kBAC/ChvK,KAAK8oD,SAAW9oD,KAAKstK,kBAAkB1vB,aACvC59I,KAAKsgD,MAAQtgD,KAAKstK,kBAAkBzjF,aAAarlE,SAKjDxkB,KAAKsgD,MAAQ,IAAIqK,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aAG7Cj4E,KAAKiuD,UAAYjuD,KAAK2uJ,gBAAgBhpE,GACtC3lF,KAAK2tK,iBAAmB,EAEpB3tK,KAAKutK,kBAAkC,MAAdvtK,KAAKktD,QAEjCltD,KAAKkvK,UAAY,KACjBlvK,KAAKktD,MAAQltD,KAAKguI,cAEI,MAAlBhuI,KAAKiuD,WAERjuD,KAAKktD,MAAMnsD,MAAMf,KAAKiuD,YAKH,MAAjBjuD,KAAK8oD,UAAsC,MAAlB9oD,KAAKiuD,UAClC,CACC,IAAI+L,EAAKh6D,KAAKosD,MAAM2zG,iBAAiBp6E,EAAGlO,YACxCz3E,KAAKiuD,UAAUjB,KAAKI,SAAS40E,iBAAiBhoE,GAAI,GAGnDh6D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQy6B,MAAO,QAASjiF,KAAK8oD,WAE9D68B,EAAGrO,UAGJt3E,KAAK8uK,aAAe9uK,KAAKymE,KACzBzmE,KAAKymE,KAAO,MAUbg3E,oBAAoB/9I,UAAUyvK,yBAA2B,SAASr+H,GAEjE,OAAQ9wC,KAAKosD,MAAMqwD,cAAc3rE,EAAMkc,OAoBxCywF,oBAAoB/9I,UAAUivJ,gBAAkB,SAAShpE,GAExD,OAAO,MASR83D,oBAAoB/9I,UAAU0vK,sBAAwB,SAASzpF,GAE9D,IAAIvxB,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtC/X,EAAM2/B,EAAGlO,WAETwE,EAAUz0B,QAAQqwB,WAAW7xB,GAC7Bk2B,EAAU10B,QAAQuwB,WAAW/xB,GAE7B3C,EAAMpoC,SAAS2nC,gBACf9T,GAAQrgC,OAAO8vD,aAAelb,EAAI8a,aAAe9a,EAAIgsH,YAAc,GACnErgI,GAAOvgC,OAAO+vD,aAAenb,EAAIiF,YAAejF,EAAIisH,WAAa,GAEjEC,EAAQvvK,KAAK6pF,aAAa7qC,EAAIh/C,KAAKosD,MAAM2R,UAAUI,WAAa/J,EAAOpV,EAAIlQ,EAC3E0gI,EAAQxvK,KAAK6pF,aAAaj/B,EAAI5qD,KAAKosD,MAAM2R,UAAUzV,UAAY8L,EAAOxJ,EAAI5b,EAE9E,OAAOhvC,KAAK6tK,iBAAmBrmH,QAAQi0B,YAAYkK,EAAGlO,cACpDkO,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,QAClC1F,QAAQm0B,UAAUgK,EAAGlO,aAAgC,MAAjBkO,EAAG54B,YACxC/sD,KAAKuuJ,OAAO/hE,UAAUijF,cAAcxzF,EAASC,KAC3CqzF,GAAStzF,GAAWuzF,GAAStzF,IAA6B,MAAjByJ,EAAG54B,YAC9C/sD,KAAKuuJ,OAAO/hE,UAAUijF,cAAcF,EAAOC,KAS7C/xB,oBAAoB/9I,UAAUgwK,mBAAqB,SAAS/pF,EAAI1zC,GAK/D,GAHAjyC,KAAKstK,kBAAkBl8J,OAAOu0E,EAAkB,MAAd3lF,KAAKsgD,OAAe,EAAsB,MAAdtgD,KAAKsgD,OAClEqlC,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,OAAU,KAAOjb,GAET,MAAvCjyC,KAAKstK,kBAAkB1vB,cAAoE,MAA5C59I,KAAKstK,kBAAkB0B,kBAI5C,MAAzBhvK,KAAKuuJ,OAAO/hE,WAAoD,MAA/BxsF,KAAKuuJ,OAAO/hE,UAAU17C,OAC1D9wC,KAAKuuJ,OAAO/hE,UAAU17C,MAAMkc,MAAQhtD,KAAKstK,kBAAkB1vB,aAAa5wF,KAG9B,eAAtChtD,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,SAE/Bt8F,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAS,cACrCt8F,KAAKuuJ,OAAO/hE,UAAUwxD,WAKvBh+I,KAAKuuJ,OAAOqe,SAAS5sK,KAAKstK,kBAAkB1vB,aAAa5wF,KAAM,eAI3C,MAAjBhtD,KAAK8oD,WAER9oD,KAAKvB,MAAQuB,KAAKuuK,mBAAmBvuK,KAAK8oD,SAASkE,KAAMhtD,KAAKstK,kBAAkB1vB,aAAa5wF,MAE3E,MAAdhtD,KAAKvB,MAERuB,KAAK2uK,aAAe3uK,KAAKstK,kBAAkB1vB,aAI3C59I,KAAKstK,kBAAkB1iF,aAK1B,CACK5qF,KAAKosD,MAAMqtG,sBAAsB9zE,EAAGlO,aAEvCz3E,KAAKuuJ,OAAO3jE,QACZ5qF,KAAK2uK,aAAe,OAIpB3uK,KAAKuuJ,OAAO9+G,QAAQk2C,GACpB3lF,KAAK2uK,aAAe3uK,KAAKuuJ,OAAO+d,gBAEP,MAArBtsK,KAAK2uK,cAAyB3uK,KAAK2vK,cAAc3vK,KAAK2uK,aAAa3hH,QAEtEhtD,KAAK2uK,aAAe,OAItB,IAAItoE,EAAUrmG,KAAKovK,sBAAsBzpF,GAEzC,GAAyB,MAArB3lF,KAAK2uK,cAAwBtoE,EACjC,CAGK1gB,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,SAErCjb,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,cAGxC,IAAIxc,EAAaz7D,KAAKosD,MAAMyqG,qBAAqB5kH,EAAOjyC,KAAK2uK,aAAchpF,GAC3E3lF,KAAKstK,kBAAkBsC,SAASjqF,EAAI3lF,KAAK2uK,cAAc,GACvD3uK,KAAKstK,kBAAkB0B,kBAAoBvzG,EAC3Cz7D,KAAKstK,kBAAkBzjF,aAAe53C,EAGvC,GAAIjyC,KAAK6tK,gBAEqB,MAAzB7tK,KAAKuuJ,OAAO/hE,WAAoD,MAA/BxsF,KAAKuuJ,OAAO/hE,UAAUt/B,MAC3D,CACC,IAAI1lB,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MAEwB,MAA5CntD,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,cAEvB59I,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAASzyC,YAAY2f,wBACjDxpE,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMq5C,YAAc18C,YAAY4f,8BAAgCjiC,EAAIA,EAC1FxnC,KAAKuuJ,OAAO/hE,UAAUwxD,WAEdh+I,KAAKuuJ,OAAO8d,kBAIhBrsK,KAAKuuJ,OAAO+d,iBAAmB3mF,EAAG54B,YAErC/sD,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAS,cACrCt8F,KAAK2uK,aAAe,MAIpB3uK,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAASzyC,YAAYyf,oBAGlDtpE,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMq5C,YAAc18C,YAAY6f,sBAAwBliC,EAAIA,EAClFxnC,KAAKuuJ,OAAO/hE,UAAUwxD,cAY3BP,oBAAoB/9I,UAAUiwK,cAAgB,SAAS3iH,GAEtD,OAAO,GAQRywF,oBAAoB/9I,UAAUmwK,gBAAkB,SAAS59H,GAExD,IAAIkb,EAAQntD,KAAKosD,MAAMU,UAAUgY,WAC7Bvf,EAAKvlD,KAAKosD,MAAMU,UAAUgX,eAE9B7xB,EAAM+M,EAAI/M,EAAM+M,EAAImO,EAAQ5H,EAAGvG,EAC/B/M,EAAM2Y,EAAI3Y,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,GAShC6yF,oBAAoB/9I,UAAUowK,cAAgB,SAASnqF,EAAI1zC,GAE1D,IAAKuV,QAAQm0B,UAAUgK,EAAGlO,aAAgC,MAAjBz3E,KAAK8oD,SAC9C,CACC,IAAIg2C,EAAM9+F,KAAKosD,MAAMygC,SAAW7sF,KAAKosD,MAAMuR,KAAKxQ,MAAQ,EACpDx9B,EAAgC,MAAzB3vB,KAAKivK,iBAA4BjvK,KAAKsgD,MAChD,IAAIqK,QAAQ3qD,KAAK8oD,SAASkC,aAAchrD,KAAK8oD,SAASmC,cAEnD/qD,KAAKk3D,IAAIznC,EAAIqvB,EAAI2mC,EAAG3N,aAAe8mB,IAEtC7sD,EAAM+M,EAAIrvB,EAAIqvB,GAGX9+C,KAAKk3D,IAAIznC,EAAIi7B,EAAI+6B,EAAG1N,aAAe6mB,IAEtC7sD,EAAM2Y,EAAIj7B,EAAIi7B,KAWjB6yF,oBAAoB/9I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAE1D,GAAKA,EAAGtO,eAAiBr3E,KAAKwtK,iBAAiC,MAAdxtK,KAAKsgD,OAAkBtgD,KAAKosD,MAAMw/B,YAgQlF5rF,KAAKstK,kBAAkB1iF,YA/PxB,CAEM5qF,KAAKmuD,aAAoC,MAArBnuD,KAAK2uK,eAE7B3uK,KAAK6uK,eACL7uK,KAAK2uK,aAAe,MAGrB,IAAIhxG,EAAO39D,KAAKosD,MAAMU,UAClBK,EAAQwQ,EAAKxQ,MACb5H,EAAKoY,EAAKkG,UACV5xB,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aAoB3C,GAnBAj4E,KAAKvB,MAAQ,KAETuB,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,cAEpCxlC,EAAQ,IAAI0Y,SAAS3qD,KAAKosD,MAAM0gC,KAAK76C,EAAM+M,EAAImO,EAAQ5H,EAAGvG,GAAKuG,EAAGvG,GAAKmO,GACrEntD,KAAKosD,MAAM0gC,KAAK76C,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,GAAKrF,EAAGqF,GAAKuC,IAGrDntD,KAAK8vK,cAAcnqF,EAAI1zC,GACvBjyC,KAAK6pF,aAAe53C,GAED,MAAdjyC,KAAKsgD,OAAkBtgD,KAAKmuD,aAAenuD,KAAKosD,MAAM+B,eAC3C,MAAdnuD,KAAKktD,OAA+B,MAAdltD,KAAKsgD,OAC5BpgD,KAAKk3D,IAAIuuB,EAAG3N,YAAch4E,KAAKsgD,MAAMtB,GAAKh/C,KAAKosD,MAAMsmE,WACrDxyH,KAAKk3D,IAAIuuB,EAAG1N,YAAcj4E,KAAKsgD,MAAMsK,GAAK5qD,KAAKosD,MAAMsmE,YAErD1yH,KAAK0vK,mBAAmB/pF,EAAI1zC,GAGX,MAAdjyC,KAAKsgD,MACT,CACC,IAAImb,EAAa,KACb/mC,EAAUud,EAGkC,MAA5CjyC,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,cACgB,MAAvC59I,KAAKstK,kBAAkBzjF,cAEvBpuB,EAAaz7D,KAAKstK,kBAAkB0B,kBACpCt6I,EAAU10B,KAAKstK,kBAAkBzjF,aAAarlE,SAErB,MAAjBxkB,KAAK8oD,WAAqB9oD,KAAKosD,MAAMqtG,sBAAsB9zE,EAAGlO,aACtEjwB,QAAQi0B,YAAYkK,EAAGlO,cAEnBv3E,KAAKk3D,IAAIp3D,KAAK8oD,SAASkC,aAAe/Y,EAAM+M,GAC/C9+C,KAAKk3D,IAAIp3D,KAAK8oD,SAASmC,aAAehZ,EAAM2Y,GAE5C3Y,EAAM+M,EAAIh/C,KAAK8oD,SAASkC,aAIxB/Y,EAAM2Y,EAAI5qD,KAAK8oD,SAASmC,cAI1B,IAAI8kH,EAAM/vK,KAAKsgD,MAGf,GAAyB,MAArBtgD,KAAK8uK,aACT,CACC,IAAItoH,EAAIxmD,KAAK8uK,aAAahyG,OAAOhX,MAC7B/+C,EAAI/G,KAAK8uK,aAAahyG,OAAOnX,OAEjC,GAAyB,MAArB3lD,KAAK2uK,cAAwB3uK,KAAKotK,mBACtC,CACC,IAAI3/H,EAAMztC,KAAK4uK,gBAAgB5uK,KAAK8uK,aAAc9uK,KAAK2uK,cACvD3uK,KAAK8uK,aAAahyG,OAAO9d,EAAIvR,EAAIuR,EACjCh/C,KAAK8uK,aAAahyG,OAAOlS,EAAInd,EAAImd,MAGlC,CACC,IAAIkS,EAAS,IAAIjS,YAAY86B,EAAG3N,YAAch4E,KAAKytK,kBAAkBzuH,EACpE2mC,EAAG1N,YAAcj4E,KAAKytK,kBAAkB7iH,EAAGpE,EAAGz/C,GAC/C/G,KAAK8uK,aAAahyG,OAASA,EAG5B98D,KAAK8uK,aAAathH,SAInB,GAAsB,MAAlBxtD,KAAKiuD,UAERjuD,KAAKwiJ,gBAAgB9tH,EAAS+mC,GAC9B/mC,EAAU10B,KAAKiuD,UAAU0N,eAAe37D,KAAKiuD,UAAU0N,eAAe/6D,OAAS,GAC/EmvK,EAAM/vK,KAAKiuD,UAAU0N,eAAe,OAGrC,CACC,GAAyB,MAArB37D,KAAK2uK,cAEwC,MAA5C3uK,KAAKstK,kBAAkB0B,kBAC3B,CACC,IAAIr/I,EAAM3vB,KAAKgwK,wBAAwBhwK,KAAK2uK,aAAchpF,GAE/C,MAAPh2D,IAEH+E,EAAU/E,GAMb,GAA6B,MAAzB3vB,KAAKivK,kBAA6C,MAAjBjvK,KAAK8oD,SAC1C,CACC,IAAIhnD,EAA0B,MAAlB9B,KAAKkvK,WAAqBlvK,KAAKkvK,UAAUtuK,OAAS,EAC5DZ,KAAKkvK,UAAU,GAAKx6I,EAClB/E,EAAM3vB,KAAKiwK,wBAAwBjwK,KAAK8oD,SAAUhnD,EAAM6jF,GAEjD,MAAPh2D,IAEHogJ,EAAMpgJ,IAST,GAAyB,MAArB3vB,KAAK2uK,cAAwB3uK,KAAK4tK,gBACtC,CACKj+I,EAAMogJ,EAEV,GAAsB,MAAlB/vK,KAAKiuD,WAAqBjuD,KAAKiuD,UAAU0N,eAAe/6D,QAAU,EACtE,CACC,IAAIi+H,EAAO7+H,KAAKiuD,UAAU0N,eAAe37D,KAAKiuD,UAAU0N,eAAe/6D,OAAS,GAEpE,MAARi+H,IAEHlvG,EAAMkvG,GAIR,IAAIhwF,EAAKna,EAAQsqB,EAAIrvB,EAAIqvB,EACrBjQ,EAAKra,EAAQk2B,EAAIj7B,EAAIi7B,EAErB92C,EAAM5T,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAEnC,GAAW,GAAPj7B,EAEH,OAID9T,KAAKkwK,cAAgBx7I,EAAQlQ,QAC7BkQ,EAAQsqB,GAAU,EAALnQ,EAAS/6B,EACtB4gB,EAAQk2B,GAAU,EAAL7b,EAASj7B,OAItB9T,KAAKkwK,cAAgB,KAItB,GAAkB,MAAdlwK,KAAKktD,MACT,CACKre,EAAK3uC,KAAKk3D,IAAIuuB,EAAG3N,YAAch4E,KAAKsgD,MAAMtB,GAC1CjQ,EAAK7uC,KAAKk3D,IAAIuuB,EAAG1N,YAAcj4E,KAAKsgD,MAAMsK,IAE1C/b,EAAK7uC,KAAKosD,MAAMsmE,WAAa3jF,EAAK/uC,KAAKosD,MAAMsmE,aAEhD1yH,KAAKktD,MAAQltD,KAAKguI,cAEI,MAAlBhuI,KAAKiuD,WAERjuD,KAAKktD,MAAMnsD,MAAMf,KAAKiuD,WAIvBjuD,KAAK0vK,mBAAmB/pF,EAAI1zC,IAK9B,GAAkB,MAAdjyC,KAAKktD,MACT,CACC,GAAsB,MAAlBltD,KAAKiuD,UAERjuD,KAAKktD,MAAMy4C,OAAS3lG,KAAKiuD,UAAU0N,mBAGpC,CACC,IAAIa,EAAM,CAACuzG,GAEW,MAAlB/vK,KAAKkvK,YAER1yG,EAAMA,EAAIx9D,OAAOgB,KAAKkvK,YAGvB1yG,EAAIzrD,KAAK2jB,GACT10B,KAAKktD,MAAMy4C,OAASnpC,EAGrBx8D,KAAKmwK,cAIa,MAAfnwK,KAAKyuD,SAERzuD,KAAKosD,MAAM2R,UAAUn2C,MAAM6mC,OAASzuD,KAAKyuD,QAG1CjH,QAAQ8vB,QAAQqO,EAAGlO,YACnBkO,EAAGrO,eAEMt3E,KAAKmuD,aAAgBnuD,KAAKosD,MAAM+B,YAIjCnuD,KAAK8oD,UAAY9oD,KAAK2uK,cAAkC,MAAlB3uK,KAAKiuD,WAEnDjuD,KAAK6uK,eAGoB,MAArB7uK,KAAK2uK,cAAsC,MAAd3uK,KAAKvB,OAA6D,MAA5CuB,KAAKstK,kBAAkB0B,oBAE7EhvK,KAAKouK,MAAQpuK,KAAK0uK,YAAY1uK,KAAK2uK,cAEjB,MAAd3uK,KAAKouK,QAERpuK,KAAK2uK,aAAa3jE,UAAUnhD,YAAYsgB,gBACxCwb,EAAGrO,YAILt3E,KAAK8oD,SAAW9oD,KAAK2uK,cAEb3uK,KAAK8oD,UAAY9oD,KAAK2uK,cAAqC,MAArB3uK,KAAK2uK,cAAsC,MAAd3uK,KAAKouK,OAC/EpuK,KAAKosD,MAAMw/B,aAGZjG,EAAGrO,UAxBHt3E,KAAKstK,kBAAkB1iF,QA2BxB,IAAK5qF,KAAKosD,MAAMw/B,aAAoC,MAArB5rF,KAAK2uK,cAAsC,MAAd3uK,KAAKouK,MACjE,CAIC,IAHA,IAAIgC,GAAW,EACXhsK,EAASuhF,EAAGjO,YAEPxuE,EAAI,EAAGA,EAAIlJ,KAAKouK,MAAMxtK,SAAWwvK,EAAUlnK,IAEnDknK,EAAWhsK,GAAUpE,KAAKouK,MAAMllK,GAAGgK,MAAQ9O,EAAOqyB,YAAcz2B,KAAKouK,MAAMllK,GAAGgK,KAG1Ek9J,GAEJpwK,KAAKqwK,YAAYrwK,KAAK2uK,aAAc3uK,KAAKouK,MAAOzoF,MAepD83D,oBAAoB/9I,UAAU8iJ,gBAAkB,SAAS9tH,EAAS+mC,GAGpC,MAAzBz7D,KAAKivK,kBAA2D,MAA/BjvK,KAAKivK,iBAAiBh9H,QAE1DjyC,KAAKiuD,UAAUrmC,MAAMiiC,YAAY0jB,cAAgBvtE,KAAKivK,iBAAiBh9H,MAAM+M,EAC7Eh/C,KAAKiuD,UAAUrmC,MAAMiiC,YAAY2jB,cAAgBxtE,KAAKivK,iBAAiBh9H,MAAM2Y,GAG5D,MAAd6Q,GAA0C,MAApBA,EAAWxpB,OAEpCjyC,KAAKiuD,UAAUrmC,MAAMiiC,YAAY+jB,eAAiBnS,EAAWxpB,MAAM+M,EACnEh/C,KAAKiuD,UAAUrmC,MAAMiiC,YAAYgkB,eAAiBpS,EAAWxpB,MAAM2Y,WAI5D5qD,KAAKiuD,UAAUrmC,MAAMiiC,YAAY+jB,sBACjC5tE,KAAKiuD,UAAUrmC,MAAMiiC,YAAYgkB,gBAGzC7tE,KAAKiuD,UAAU0N,eAAiB,CAAC,KAA4B,MAArB37D,KAAK2uK,aAAwB,KAAOj6I,GAC5E10B,KAAKosD,MAAMuR,KAAKulF,yBAAyBljJ,KAAKiuD,UAAWjuD,KAAK8oD,UAAU,EAAM9oD,KAAKivK,kBAE1D,MAArBjvK,KAAK2uK,eAEU,MAAdlzG,IAEHA,EAAaz7D,KAAKosD,MAAM+2F,wBAAwBnjJ,KAAKiuD,UAAWjuD,KAAK8oD,UAAU,IAGhF9oD,KAAKiuD,UAAU66E,yBAAyB,MAAM,GAC9C9oI,KAAKosD,MAAMuR,KAAKulF,yBAAyBljJ,KAAKiuD,UAAWjuD,KAAK2uK,cAAc,EAAOlzG,IAIpF,IAAI60G,EAAa,KAEjB,GAAsB,MAAlBtwK,KAAKkvK,UACT,CACCoB,EAAa,GAEb,IAAK,IAAIpnK,EAAI,EAAGA,EAAIlJ,KAAKkvK,UAAUtuK,OAAQsI,IAC3C,CACC,IAAI8wD,EAAKh6D,KAAKkvK,UAAUhmK,GAAGsb,QAC3BxkB,KAAK6vK,gBAAgB71G,GACrBs2G,EAAWpnK,GAAK8wD,GAIlBh6D,KAAKosD,MAAMuR,KAAKglF,aAAa3iJ,KAAKiuD,UAAWqiH,EAAYtwK,KAAK8oD,SAAU9oD,KAAK2uK,cAC7E3uK,KAAKosD,MAAMuR,KAAKilF,6BAA6B5iJ,KAAKiuD,UAAWjuD,KAAK8oD,SAAU9oD,KAAK2uK,eAalFlxB,oBAAoB/9I,UAAUswK,wBAA0B,SAASl/H,EAAO60C,GAEvE,IAAI9iF,EAAS,KACT86D,EAAO7sB,EAAM6sB,KACb4yG,EAAkB5yG,EAAK0mF,qBAAqBvzG,GAEhD,GAAuB,MAAnBy/H,EACJ,CACC,IAAIzuK,EAA0B,MAAlB9B,KAAKkvK,WAAqBlvK,KAAKkvK,UAAUtuK,OAAS,EAC5DZ,KAAKkvK,UAAUlvK,KAAKkvK,UAAUtuK,OAAS,GACvC,IAAI+pD,QAAQ3qD,KAAK8oD,SAASkC,aAAchrD,KAAK8oD,SAASmC,cACpDt7B,EAAM4gJ,EAAgB5yG,EAAKkrE,mBAAmB/3F,GACjD9wC,KAAKiuD,UAAWnsD,GAAM,GAEZ,MAAP6tB,IAEH9sB,EAAS8sB,QAKV9sB,EAAS,IAAI8nD,QAAQ7Z,EAAMka,aAAcla,EAAMma,cAGhD,OAAOpoD,GAeR46I,oBAAoB/9I,UAAUuwK,wBAA0B,SAASn/H,EAAOhvC,EAAM6jF,GAE7E,IAAI9iF,EAAS,KACT86D,EAAO7sB,EAAM6sB,KACb6yG,EAAkB7yG,EAAK0mF,qBAAqBvzG,GAC5ChwC,EAAI,IAAI6pD,QAAQ7Z,EAAMka,aAAcla,EAAMma,cAE9C,GAAuB,MAAnBulH,EACJ,CACC,IAAI72E,EAAQzzC,QAAQxb,SAASoG,EAAMlpB,MAAOiiC,YAAYiR,eAAgB,GAClEnE,GAAOgjC,GAASz5F,KAAKu2D,GAAK,KAEjB,GAATkjC,IAEH73F,EAAOokD,QAAQ6T,gBAAgB,IAAIpP,QAAQ7oD,EAAKk9C,EAAGl9C,EAAK8oD,GAAI1qD,KAAKs3D,IAAIb,GAAMz2D,KAAKw3D,IAAIf,GAAM71D,IAG3F,IAAI6uB,EAAM6gJ,EAAgB7yG,EAAKkrE,mBAAmB/3F,GAAQA,EAAOhvC,GAAM,GAE5D,MAAP6tB,IAEU,GAATgqE,IAEHhqE,EAAMu2B,QAAQ6T,gBAAgB,IAAIpP,QAAQh7B,EAAIqvB,EAAGrvB,EAAIi7B,GAAI1qD,KAAKs3D,KAAKb,GAAMz2D,KAAKw3D,KAAKf,GAAM71D,IAG1F+B,EAAS8sB,QAKV9sB,EAAS/B,EAGV,OAAO+B,GAgBR46I,oBAAoB/9I,UAAU2wK,YAAc,SAASv/H,EAAOs9H,EAAOzoF,KAanE83D,oBAAoB/9I,UAAU+wK,YAAc,SAAS9qF,GAEpD,OAAwB,MAAjBA,EAAG54B,YAQX0wF,oBAAoB/9I,UAAUgxK,oBAAsB,SAAS/qF,GAE5D,IAAI1zC,EAAQiU,QAAQ2Y,aAAa7+D,KAAKosD,MAAM2R,UAAW4nB,EAAG/N,OAAQ+N,EAAG7N,QACjEjpC,EAAK3uC,KAAKk3D,IAAInlB,EAAM+M,EAAIh/C,KAAKsgD,MAAMtB,GACnCjQ,EAAK7uC,KAAKk3D,IAAInlB,EAAM2Y,EAAI5qD,KAAKsgD,MAAMsK,GACnC6sG,EAA6B,MAAlBz3J,KAAKkvK,WAAsBlvK,KAAK2tK,iBAAmB,IAC/D9+H,EAAK7uC,KAAKosD,MAAMsmE,WAAa3jF,EAAK/uC,KAAKosD,MAAMsmE,WAEhD,GAAI+kC,EACJ,CACuB,MAAlBz3J,KAAKkvK,YAERlvK,KAAKkvK,UAAY,IAGlB,IAAI/hH,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MACxBlb,EAAQ,IAAI0Y,QAAQ3qD,KAAKosD,MAAM0gC,KAAKnH,EAAG3N,YAAc7qB,GAASA,EAChEntD,KAAKosD,MAAM0gC,KAAKnH,EAAG1N,YAAc9qB,GAASA,GAC5CntD,KAAKkvK,UAAUn+J,KAAKkhC,KAWtBwrG,oBAAoB/9I,UAAUixK,iBAAmB,SAAS3xD,EAAIC,GAE7D,OAAc,MAAND,GAAoB,MAANC,GAA0B,MAAZD,EAAG/sE,OAA6B,MAAZgtE,EAAGhtE,QACzD+sE,EAAG/sE,MAAM6Y,OAAOm0D,EAAGhtE,QAAU+sE,EAAGnwE,IAAMowE,EAAGpwE,IAAMmwE,EAAGjwE,IAAMkwE,EAAGlwE,IAC5DiwE,EAAG9S,WAAa+S,EAAG/S,WAQrBuxC,oBAAoB/9I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAExD,IAAKA,EAAGtO,cAAgBr3E,KAAKsuK,eAC7B,CACC,GAAItuK,KAAKutK,mBAAqBvtK,KAAKywK,YAAY9qF,GAK9C,OAHA3lF,KAAK0wK,oBAAoB/qF,QACzBA,EAAGrO,UAKJ,IAAI0nC,EAAKh/G,KAAKivK,iBACVhwD,EAAKj/G,KAAKstK,kBAAkB0B,kBAE5B9qK,EAA2B,MAAjBlE,KAAK8oD,SAAoB9oD,KAAK8oD,SAASkE,KAAO,KACxD5oD,EAAS,KAEmC,MAA5CpE,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,eAEvBx5I,EAASpE,KAAKstK,kBAAkB1vB,aAAa5wF,MAGhC,MAAV5oD,GAAuC,MAArBpE,KAAK2uK,eAE1BvqK,EAASpE,KAAK2uK,aAAa3hH,MAIV,MAAdhtD,KAAKvB,OAA4B,MAAVyF,GAA4B,MAAVE,GAC5CF,GAAUE,IAAUpE,KAAK2wK,iBAAiB3xD,EAAIC,IAOzB,MAAjBj/G,KAAK8oD,UAA8C,MAA1B9oD,KAAKuuJ,OAAOyd,YACxChsK,KAAK8oD,SAASkE,MAAQhtD,KAAKuuJ,OAAOyd,WAAWh/G,MAE7ChtD,KAAKosD,MAAM4hG,mBAAmBhuJ,KAAKuuJ,OAAOrqJ,OAAQyhF,EAAGlO,YAKpC,MAAdz3E,KAAKvB,OAAiBuB,KAAKvB,MAAMmC,OAAS,GAE7CZ,KAAKosD,MAAMstG,gBAAgB15J,KAAKvB,QAfjCuB,KAAK2gI,QAAQz8H,EAAQE,EAAQuhF,EAAGlO,WAAYkO,EAAGzN,WAoBhDl4E,KAAK6uK,eACLlpF,EAAGrO,UAGc,MAAdt3E,KAAKsgD,OAERtgD,KAAK4qF,SASP6yD,oBAAoB/9I,UAAUkrF,MAAQ,WAEnB,MAAd5qF,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,MAIK,MAAfltD,KAAKyuD,QAA0C,MAAxBzuD,KAAKosD,MAAM2R,YAErC/9D,KAAKosD,MAAM2R,UAAUn2C,MAAM6mC,OAAS,IAGrCzuD,KAAK6uK,eACL7uK,KAAKuuJ,OAAO3jE,QACZ5qF,KAAKstK,kBAAkB1iF,QACvB5qF,KAAKkwK,cAAgB,KACrBlwK,KAAK6pF,aAAe,KACpB7pF,KAAKiuD,UAAY,KACjBjuD,KAAK8oD,SAAW,KAChB9oD,KAAKvB,MAAQ,KACbuB,KAAKivK,iBAAmB,KACxBjvK,KAAK2tK,iBAAmB,EACxB3tK,KAAKsgD,MAAQ,KAEbtgD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ06B,SAS1Cu7D,oBAAoB/9I,UAAUywK,YAAc,WAE3CnwK,KAAK+7I,cAA4B,MAAd/7I,KAAKvB,OACxBuB,KAAKktD,MAAMM,UAcZiwF,oBAAoB/9I,UAAUq8I,cAAgB,SAASqnB,GAEtDpjK,KAAKktD,MAAMq5C,YAAcvmG,KAAKm1G,aAAaiuD,GAC3CpjK,KAAKktD,MAAMovC,OAASt8F,KAAK4wK,aAAaxN,IAcvC3lB,oBAAoB/9I,UAAUkxK,aAAe,SAASxN,GAErD,OAAO,EAAUv5G,YAAY2gB,YAAc3gB,YAAY4gB,eAcxDgzE,oBAAoB/9I,UAAUy1G,aAAe,SAASiuD,GAErD,OAAO,EAAU,EAAI,GAiBtB3lB,oBAAoB/9I,UAAUihI,QAAU,SAASz8H,EAAQE,EAAQ4hD,EAAKgnC,GAErE,GAAc,MAAV5oF,GAAkBpE,KAAKguK,eAAehoH,IAAQhmD,KAAKosD,MAAMu+F,mBAC7D,CAGC,IAAIvkI,EAAQpmB,KAAKosD,MAAM8W,WACnB2tG,GAAmB,EACnBx2G,EAAO,KAEXj0C,EAAMk7C,cACN,IAEC,GAAc,MAAVp9D,GAA4B,MAAVE,IAAmBpE,KAAKosD,MAAMqtG,sBAAsBzzG,IAAQhmD,KAAKguK,eAAehoH,KAErG5hD,EAASpE,KAAK8wK,mBAAmB9qH,EAAK9hD,GAExB,MAAVE,GACJ,CAMC,GALA4oF,EAAahtF,KAAKosD,MAAM8a,cAAc,CAAC9iE,GAAS4hD,EAAKgnC,GACrD6jF,GAAmB,EAID,MAAd7jF,GAAuBhtF,KAAKosD,MAAM8W,WAAW/zD,OAAO69E,GAavDA,EAAahtF,KAAKosD,MAAM+3B,uBAZzB,CACC,IAAIu6B,EAAS1+G,KAAKosD,MAAMU,UAAUC,SAASigC,GAE3C,GAAc,MAAV0xB,EACJ,CACC,IAAI/uF,EAAMvJ,EAAM62F,YAAY74G,GAC5BurB,EAAIqvB,GAAK0/D,EAAO9/C,OAAO5f,EACvBrvB,EAAIi7B,GAAK8zD,EAAO9/C,OAAOhU,GAQzB5qD,KAAKosD,MAAM69E,QAAQ7lI,EAAQ4oF,GAI7B,IAAI3mF,EAASrG,KAAKosD,MAAM+3B,mBAEV,MAAVjgF,GAA4B,MAAVE,GACrBgiB,EAAM2vE,UAAU7xF,IAAWkiB,EAAM2vE,UAAU3xF,IAC3CgiB,EAAM2vE,UAAU3vE,EAAM2vE,UAAU7xF,KAAYkiB,EAAM+8C,YAElD98D,EAAS+f,EAAM2vE,UAAU7xF,GAED,MAAnBA,EAAOkpD,UAAoBlpD,EAAOkpD,SAAS8oC,UAC3B,MAAnB9xF,EAAOgpD,UAAoBhpD,EAAOgpD,SAAS8oC,WAE5C7vF,EAAS+f,EAAM2vE,UAAU1vF,KAM3B,IAAI/I,EAAQ,KACRsqB,EAAQ,KAUZ,GARsB,MAAlB5nB,KAAKiuD,YAER3wD,EAAQ0C,KAAKiuD,UAAUjB,KAAK1vD,MAC5BsqB,EAAQ5nB,KAAKiuD,UAAUjB,KAAKplC,OAG7ByyC,EAAOr6D,KAAKo+H,WAAW/3H,EAAQ,KAAM/I,EAAO4G,EAAQE,EAAQwjB,GAEhD,MAARyyC,EACJ,CAECr6D,KAAKosD,MAAM2qG,wBAAwB18F,EAAMn2D,GAAQ,EAAMlE,KAAKivK,kBAC5DjvK,KAAKosD,MAAM2qG,wBAAwB18F,EAAMj2D,GAAQ,EAAOpE,KAAKstK,kBAAkB0B,mBAGzD,MAAlBhvK,KAAKiuD,WAER7nC,EAAMk3F,YAAYjjD,EAAMr6D,KAAKiuD,UAAUjB,KAAKI,UAGzC/mD,EAAS+f,EAAM2vE,UAAU7xF,GAG7B,GAAIlE,KAAK+tK,eAAe1zG,EAAMn2D,EAAQE,EAAQ4hD,EAAKgnC,GACnD,CAEKr9D,EAAMzrB,EAEV,MAAqB,MAAdyrB,EAAItpB,QAAkC,MAAhBspB,EAAIy9B,UAChCz9B,EAAIy9B,SAAS8oC,UAAYvmE,EAAItpB,QAAUg0D,EAAKh0D,OAE5CspB,EAAM3vB,KAAKosD,MAAMhmC,MAAM2vE,UAAUpmE,GAGvB,MAAPA,GAA6B,MAAdA,EAAItpB,QAAkBspB,EAAItpB,QAAUg0D,EAAKh0D,QAE3D+f,EAAM5f,IAAIH,EAAQg0D,EAAM1qC,EAAItpB,OAAOs4G,SAAShvF,IAK9C,IAAIqmE,EAAM5vE,EAAM62F,YAAY5iD,GAW5B,GATW,MAAP27B,IAEHA,EAAM,IAAImnB,WACVnnB,EAAIE,UAAW,EAEf9vE,EAAMk3F,YAAYjjD,EAAM27B,IAIH,MAAlBh2F,KAAKkvK,WAAqBlvK,KAAKkvK,UAAUtuK,OAAS,EACtD,CACC,IAAI4mC,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MACpB5H,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UACzBmyB,EAAI2P,OAAS,GAEb,IAAK,IAAIz8F,EAAI,EAAGA,EAAIlJ,KAAKkvK,UAAUtuK,OAAQsI,IAC3C,CACC,IAAI8wD,EAAKh6D,KAAKkvK,UAAUhmK,GACxB8sF,EAAI2P,OAAO50F,KAAK,IAAI45C,QAAQqP,EAAGhb,EAAIxX,EAAI+d,EAAGvG,EAAGgb,EAAGpP,EAAIpjB,EAAI+d,EAAGqF,KAI7D,GAAc,MAAVxmD,EACJ,CACC,IAAI4nD,EAAIhsD,KAAKosD,MAAMuR,KAAKkG,UACpBr8B,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MACpB6M,EAA4B,MAAtBh6D,KAAKkwK,cACb,IAAIvlH,QAAQ3qD,KAAKkwK,cAAclxH,EAAIxX,EAAIwkB,EAAEhN,EAAGh/C,KAAKkwK,cAActlH,EAAIpjB,EAAIwkB,EAAEpB,GAC1E,IAAID,QAAQ3qD,KAAK6pF,aAAa7qC,EAAIxX,EAAIwkB,EAAEhN,EAAGh/C,KAAK6pF,aAAaj/B,EAAIpjB,EAAIwkB,EAAEpB,GACxEoP,EAAGhb,GAAKh/C,KAAKosD,MAAM8/B,MAAQlsF,KAAKosD,MAAMuR,KAAKxQ,MAC3C6M,EAAGpP,GAAK5qD,KAAKosD,MAAM+/B,MAAQnsF,KAAKosD,MAAMuR,KAAKxQ,MAC3C6oC,EAAIgsC,iBAAiBhoE,GAAI,GAG1Bh6D,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQw2B,QAAS,OAAQ3jB,EAAM,WAAYj2D,EAC3E,QAAS4hD,EAAK,SAAUgnC,EAAY,mBAAoB6jF,KAG3D,MAAO5kK,GAEN64C,MAAMzb,OACNyb,MAAMsB,MAAMn6C,EAAEojD,SAEf,QAECjpC,EAAMo7C,YAGHxhE,KAAKmpF,QAERnpF,KAAKwhK,YAAYnnG,EAAM,EAAqBj2D,EAAS,QAWxDq5I,oBAAoB/9I,UAAU8hK,YAAc,SAASnnG,EAAMj2D,GAE1DpE,KAAKosD,MAAMghG,iBAAiB/yF,IAU7BojF,oBAAoB/9I,UAAU0+H,WAAa,SAAS/3H,EAAQsK,EAAIrT,EAAO4G,EAAQE,EAAQwjB,GAEtF,GAA0B,MAAtB5nB,KAAKqtF,cAER,OAAOrtF,KAAKosD,MAAMgyE,WAAW/3H,EAAQsK,EAAIrT,EAAO4G,EAAQE,EAAQwjB,GAIhE,IAAIyyC,EAAOr6D,KAAKkzJ,WAAW51J,EAAO4G,EAAQE,EAAQwjB,GAGlD,OAFAyyC,EAAOr6D,KAAKosD,MAAM+mG,QAAQ94F,EAAMh0D,EAAQnC,EAAQE,GAEzCi2D,GAgBTojF,oBAAoB/9I,UAAUoxK,mBAAqB,SAAS9qH,EAAK9hD,GAGhE,IAAI8xF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB/xF,GAErC,MAAc,MAAP8xF,GAAeA,EAAIE,SAEzBhyF,EAASlE,KAAKosD,MAAM8W,WAAW6yB,UAAU7xF,GACzC8xF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgB/xF,GAGlC,IAAIsgB,EAAQxkB,KAAKosD,MAAM+zE,UAAUj8H,GAC7B8xF,EAAMh2F,KAAKosD,MAAM8W,WAAW+5C,YAAYz4F,GAE5C,GAAW,MAAPwxE,EACJ,CACC,IAAIhqC,EAAIhsD,KAAKosD,MAAMuR,KAAKkG,UACpBr8B,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MACpBlb,EAAQ,IAAI0Y,QAAQ3qD,KAAK6pF,aAAa7qC,EAAIxX,EAAIwkB,EAAEhN,EAAGh/C,KAAK6pF,aAAaj/B,EAAIpjB,EAAIwkB,EAAEpB,GACnForC,EAAIh3C,EAAI9+C,KAAKm8D,MAAMpqB,EAAM+M,EAAIg3C,EAAIlwC,MAAQ,EAAI9lD,KAAKosD,MAAM8/B,MAAQ1kD,GAChEwuD,EAAIprC,EAAI1qD,KAAKm8D,MAAMpqB,EAAM2Y,EAAIorC,EAAIrwC,OAAS,EAAI3lD,KAAKosD,MAAM+/B,MAAQ3kD,GAGjE,IAAIs3D,EAAM9+F,KAAK+wK,wBAEf,GAAIjyE,EAAM,EACV,CACC,IAAIjoB,EAAc72E,KAAKosD,MAAMuR,KAAK5Q,SAAS7oD,GAE3C,GAAmB,MAAf2yE,EACJ,CACC,IAAI73B,EAAI63B,EAAY73B,EAAIxX,EAAIwkB,EAAEhN,EAC1B4L,EAAIisB,EAAYjsB,EAAIpjB,EAAIwkB,EAAEpB,EAE1B1qD,KAAKk3D,IAAIpY,EAAIg3C,EAAIh3C,IAAM8/C,IAE1B9I,EAAIh3C,EAAI9+C,KAAKm8D,MAAMrd,IAGhB9+C,KAAKk3D,IAAIxM,EAAIorC,EAAIprC,IAAMk0C,IAE1B9I,EAAIprC,EAAI1qD,KAAKm8D,MAAMzR,MAMvB,OAAOpmC,GAQRi5H,oBAAoB/9I,UAAUqxK,sBAAwB,SAAS/qH,GAE9D,OAAQhmD,KAAKosD,MAAMm+B,gBAAmBvqF,KAAKosD,MAAMygC,SAAW,EAAI7sF,KAAKosD,MAAMsmE,WAkB5E+qB,oBAAoB/9I,UAAUwzJ,WAAa,SAAS51J,EAAO4G,EAAQE,EAAQwjB,GAE1E,IAAIyyC,EAAO,KAQX,GAL0B,MAAtBr6D,KAAKqtF,gBAERhzB,EAAOr6D,KAAKqtF,cAAcnpF,EAAQE,EAAQwjB,IAG/B,MAARyyC,EACJ,CACCA,EAAO,IAAIs+D,OAAOr7H,GAAS,IAC3B+8D,EAAK4mE,SAAQ,GACb5mE,EAAKkH,SAAS35C,GAEd,IAAIouE,EAAM,IAAImnB,WACdnnB,EAAIE,UAAW,EACf77B,EAAKijD,YAAYtnB,GAGlB,OAAO37B,GAURojF,oBAAoB/9I,UAAUgmB,QAAU,WAEvC1lB,KAAKosD,MAAM2kC,oBAAoB/wF,MAEb,MAAdA,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,MAGK,MAAfltD,KAAKuuJ,SAERvuJ,KAAKuuJ,OAAO7oI,UACZ1lB,KAAKuuJ,OAAS,MAGe,MAA1BvuJ,KAAKstK,oBAERttK,KAAKstK,kBAAkB5nJ,UACvB1lB,KAAKstK,kBAAoB,MAGA,MAAtBttK,KAAKixF,gBAERjxF,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKixF,eAC1CjxF,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAKixF,eACzCjxF,KAAKixF,cAAgB,MAGG,MAArBjxF,KAAK0tK,eAER1tK,KAAKosD,MAAMosB,eAAex4E,KAAK0tK,cAC/B1tK,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAK0tK,cACzC1tK,KAAK0tK,aAAe,MAGK,MAAtB1tK,KAAKi8I,gBAERj8I,KAAKosD,MAAMosB,eAAex4E,KAAKi8I,eAC/Bj8I,KAAKi8I,cAAgB,OAIvBt7F,WAAW88F,oBAAqD,qBAAxBA,oBAAsCA,yBAAsBl9I,EAqDpGm9I,oBAAoBh+I,UAAUsxK,WAAa,IAAI9rF,QAAQtkC,SAASsD,cAAgB,aAAc,EAAG,GAOjGw5F,oBAAoBh+I,UAAU0sD,MAAQ,KAOtCsxF,oBAAoBh+I,UAAUgqF,SAAU,EAOxCg0D,oBAAoBh+I,UAAUy/I,eAAiBt1F,YAAYyf,oBAQ3Do0E,oBAAoBh+I,UAAUyuD,UAAY,WAEzC,OAAOnuD,KAAK0pF,SAabg0D,oBAAoBh+I,UAAU2qF,WAAa,SAASX,GAEnD1pF,KAAK0pF,QAAUA,GAQhBg0D,oBAAoBh+I,UAAUkrF,MAAQ,WAErC,GAAuB,MAAnB5qF,KAAKixK,WACT,CACC,IAAK,IAAI/nK,EAAI,EAAGA,EAAIlJ,KAAKixK,WAAWrwK,OAAQsI,IAE3ClJ,KAAKixK,WAAW/nK,GAAGwc,UAGpB1lB,KAAKixK,WAAa,KAGQ,MAAvBjxK,KAAKkxK,iBAERlxK,KAAKkxK,eAAexrJ,UACpB1lB,KAAKkxK,eAAiB,MAGvBlxK,KAAKgvK,kBAAoB,KACzBhvK,KAAKmxK,iBAAmB,KACxBnxK,KAAK6pF,aAAe,KACpB7pF,KAAK49I,aAAe,KACpB59I,KAAKoxK,YAAc,MAapB1zB,oBAAoBh+I,UAAUm9J,aAAe,SAASl3E,GAErD,OAAO3lF,KAAKosD,MAAMywG,gBAQnBnf,oBAAoBh+I,UAAU2xK,sBAAwB,SAASvgI,EAAO2qB,EAAYxpB,GAEjF,OAAOjyC,KAAKgxK,YASbtzB,oBAAoBh+I,UAAUuiK,eAAiB,SAASt8E,EAAIzhF,GAE3D,OAAO,GAQRw5I,oBAAoBh+I,UAAUilG,eAAiB,SAAS7zD,EAAO5sC,GAE9D,OAAO,GAQRw5I,oBAAoBh+I,UAAUmvK,aAAe,WAE5C,GAAuB,MAAnB7uK,KAAKixK,WACT,CACC,IAAK,IAAI/nK,EAAI,EAAGA,EAAIlJ,KAAKixK,WAAWrwK,OAAQsI,IAE3ClJ,KAAKixK,WAAW/nK,GAAGwc,UAGpB1lB,KAAKixK,WAAa,KAClBjxK,KAAKoxK,YAAc,OASrB1zB,oBAAoBh+I,UAAU4xK,sBAAwB,WAE1B,MAAvBtxK,KAAKkxK,iBAERlxK,KAAKkxK,eAAexrJ,UACpB1lB,KAAKkxK,eAAiB,OAUxBxzB,oBAAoBh+I,UAAU6xK,iBAAmB,SAAS5rF,GAEzD,OAAOn+B,QAAQi0B,YAAYkK,EAAGlO,aAQ/BimE,oBAAoBh+I,UAAU8xK,gBAAkB,SAAS7rF,EAAI1zC,GAE5D,IAAI+a,EAAO24B,EAAGzN,UASd,GANY,MAARlrB,GAAyB,MAAT/a,GAAkB0zC,EAAG3N,aAAe/lC,EAAM+M,GAAK2mC,EAAG1N,aAAehmC,EAAM2Y,IAE1FoC,EAAOhtD,KAAKosD,MAAMq+B,UAAUx4C,EAAM+M,EAAG/M,EAAM2Y,IAIhC,MAARoC,IAAiBhtD,KAAKosD,MAAMitG,kBAAkBrsG,GAClD,CACC,IAAI3mD,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/oC,GAEzChtD,KAAKosD,MAAM8W,WAAWyyB,SAAStvF,IAAWrG,KAAKosD,MAAMitG,kBAAkBhzJ,KAE1E2mD,EAAO3mD,GAIT,OAAQrG,KAAKosD,MAAMmvG,aAAavuG,GAAS,KAAOA,GASjD0wF,oBAAoBh+I,UAAU0R,OAAS,SAASu0E,EAAIzhF,EAAQutK,EAAcx/H,GAEzE,GAAIjyC,KAAKmuD,cAAgBnuD,KAAKiiK,eAAet8E,GAC7C,CAE+B,MAA1B3lF,KAAK0xK,mBAAqD,MAAxB1xK,KAAKosD,MAAM2R,YAEhD/9D,KAAK0xK,kBAAoBxrH,QAAQ1jD,KAAKxC,MAAM,WAE3CA,KAAK4qF,WAGNpjC,QAAQD,YAAYvnD,KAAKosD,MAAM2R,UAAW,aAAc/9D,KAAK29I,eAG9D,IAAI7+C,EAAM9+F,KAAK68J,aAAal3E,GACxB3mC,EAAc,MAAT/M,EAAiBA,EAAM+M,EAAI2mC,EAAG3N,YACnCptB,EAAc,MAAT3Y,EAAiBA,EAAM2Y,EAAI+6B,EAAG1N,YACnC05F,EAAO,IAAI9mH,YAAY7L,EAAI8/C,EAAKl0C,EAAIk0C,EAAK,EAAIA,EAAK,EAAIA,GACtD8yE,EAAQ,IAAI/mH,YAAY86B,EAAG3N,YAAc8mB,EAAKnZ,EAAG1N,YAAc6mB,EAAK,EAAIA,EAAK,EAAIA,GACjFhuD,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAKwxK,gBAAgB7rF,EAAI1zC,IAGzDjyC,KAAKuxK,iBAAiB5rF,IAAiC,MAAzB3lF,KAAKmxK,kBAAiD,MAArBnxK,KAAK49I,cAC9D,MAAT9sG,GAAmB9wC,KAAKosD,MAAM8W,WAAWyyB,SAAS31F,KAAK49I,aAAa5wF,OACpE9G,QAAQ8W,WAAWh9D,KAAKmxK,iBAAkBS,IAAY9gI,GAAS9wC,KAAK49I,eAErE59I,KAAKmxK,iBAAmB,KACxBnxK,KAAK49I,aAAe,KACpB59I,KAAK4vK,SAASjqF,EAAI70C,EAAO5sC,IAG1BlE,KAAKgvK,kBAAoB,KACzBhvK,KAAK6pF,aAAe,KACpB,IAAIgoF,EAAY,KAEhB,GAAuB,MAAnB7xK,KAAKixK,YAA0C,MAApBjxK,KAAK2rG,cACzB,MAAT76D,GAAiB9wC,KAAK49I,cAAgB9sG,GAKvC,IAHA,IAAI4oB,EAAKk4G,EAAM5mH,aACXyS,EAAKm0G,EAAM3mH,aAEN/hD,EAAI,EAAGA,EAAIlJ,KAAKixK,WAAWrwK,OAAQsI,IAC5C,CACC,IAAI2lC,EAAK6qB,EAAK15D,KAAKixK,WAAW/nK,GAAG4zD,OAAO9R,aACpCjc,EAAK0uB,EAAKz9D,KAAKixK,WAAW/nK,GAAG4zD,OAAO7R,aACpCt7B,EAAMkf,EAAKA,EAAKE,EAAKA,EAEzB,IAAK/uC,KAAKg9D,WAAWh9D,KAAKixK,WAAW/nK,GAAI0oK,EAAO1tK,EAAQutK,IAA2B,MAATx/H,GACzEjyC,KAAKg9D,WAAWh9D,KAAKixK,WAAW/nK,GAAIyoK,EAAMztK,EAAQutK,MACpC,MAAbI,GAAqBliJ,EAAMkiJ,GAC7B,CACC7xK,KAAKgvK,kBAAoBhvK,KAAK2rG,YAAYziG,GAC1ClJ,KAAK6pF,aAAe7pF,KAAKoxK,YAAYloK,GACrC2oK,EAAYliJ,EAERA,EAAM3vB,KAAKixK,WAAW/nK,GAAG4zD,OAAOt4C,QAKpC,GAJAmL,EAAIi8B,KAAK/B,YAAY8f,eAAiB,GACtCh6C,EAAIm2B,OAAS,EACbn2B,EAAIg2B,QAAU,EAEa,MAAvB3lD,KAAKkxK,eACT,CACC,IAAIY,EAAK9xK,KAAK+xK,uBACdD,EAAGruG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAC9C7Z,YAAY6Z,YAAc7Z,YAAYoe,YACxC6pG,EAAGzmF,eAAgB,EAEnBymF,EAAGptJ,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAC7BzlG,KAAKkxK,eAAiBY,EAEtB,IAAI/kH,EAAW7G,QAAQ1jD,KAAKxC,MAAM,WAEjC,OAA6B,MAArBA,KAAK49I,aAAwB59I,KAAK49I,aAAe9sG,KAG1D0W,QAAQiyB,oBAAoBq4F,EAAG5+J,KAAMlT,KAAKosD,MAAOW,GAGlD/sD,KAAKkxK,eAAep0G,OAASntC,EAC7B3vB,KAAKkxK,eAAe1jH,UAKO,MAA1BxtD,KAAKgvK,mBAERhvK,KAAKsxK,6BAKNtxK,KAAKgvK,kBAAoB,KACzBhvK,KAAK49I,aAAe,KACpB59I,KAAK6pF,aAAe,MAWtB6zD,oBAAoBh+I,UAAU8tD,OAAS,WAEtC,GAAyB,MAArBxtD,KAAK49I,cAA4C,MAApB59I,KAAK2rG,aAA0C,MAAnB3rG,KAAKixK,WAClE,CACC,IAAIngI,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAAS/sD,KAAK49I,aAAa5wF,MACvDhtD,KAAK49I,aAAe9sG,EACpB9wC,KAAKmxK,iBAAmB,IAAItmH,YAAY/Z,EAAMkO,EAAGlO,EAAM8Z,EAAG9Z,EAAMgV,MAAOhV,EAAM6U,QAE7E,IAAK,IAAIz8C,EAAI,EAAGA,EAAIlJ,KAAK2rG,YAAY/qG,OAAQsI,IAC7C,CACC,IAAI8oK,EAAKhyK,KAAKosD,MAAMi3F,mBAAmBvyG,EAAO9wC,KAAK2rG,YAAYziG,IAC3Dy9D,EAAM3mE,KAAKqxK,sBAAsBvgI,EAAO9wC,KAAK2rG,YAAYziG,GAAI8oK,GAE7Dl1G,EAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAM21G,EAAGhzH,EAAI2nB,EAAI7gB,MAAQ,GAC1D5lD,KAAKm8D,MAAM21G,EAAGpnH,EAAI+b,EAAIhhB,OAAS,GAAIghB,EAAI7gB,MAAO6gB,EAAIhhB,QACnD3lD,KAAKixK,WAAW/nK,GAAG4zD,OAASA,EAC5B98D,KAAKixK,WAAW/nK,GAAGskD,SACnBxtD,KAAKmxK,iBAAiB3qK,IAAIxG,KAAKixK,WAAW/nK,GAAG4zD,QAC7C98D,KAAKoxK,YAAYloK,GAAK8oK,KAYzBt0B,oBAAoBh+I,UAAUkwK,SAAW,SAASjqF,EAAI70C,EAAO5sC,GAO5D,GALAlE,KAAK2rG,YAAwB,MAAT76D,IAAkB9wC,KAAK2kG,eAAe7zD,EAAO5sC,IAChElE,KAAKosD,MAAMitG,kBAAkBvoH,EAAMkc,MAAWhtD,KAAKmuD,aAClDnuD,KAAKosD,MAAM0qG,4BAA4BhmH,EAAO5sC,IAAiB,GAAM,KAG/C,MAApBlE,KAAK2rG,YACT,CAIC,GAHA3rG,KAAK49I,aAAe9sG,EACpB9wC,KAAKmxK,iBAAmB,IAAItmH,YAAY/Z,EAAMkO,EAAGlO,EAAM8Z,EAAG9Z,EAAMgV,MAAOhV,EAAM6U,QAEtD,MAAnB3lD,KAAKixK,WACT,CACC,IAAK,IAAI/nK,EAAI,EAAGA,EAAIlJ,KAAKixK,WAAWrwK,OAAQsI,IAE3ClJ,KAAKixK,WAAW/nK,GAAGwc,UAGpB1lB,KAAKixK,WAAa,KAClBjxK,KAAKoxK,YAAc,KAGpBpxK,KAAKoxK,YAAc,GACnBpxK,KAAKixK,WAAa,GAElB,IAAS/nK,EAAI,EAAGA,EAAIlJ,KAAK2rG,YAAY/qG,OAAQsI,IAC7C,CACC,IAAI8oK,EAAKhyK,KAAKosD,MAAMi3F,mBAAmBvyG,EAAO9wC,KAAK2rG,YAAYziG,IAC3Dy9D,EAAM3mE,KAAKqxK,sBAAsBvgI,EAAO9wC,KAAK2rG,YAAYziG,GAAI8oK,GAE7Dp9J,EAAM+xD,EAAI/xD,IACVkoD,EAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAM21G,EAAGhzH,EAAI2nB,EAAI7gB,MAAQ,GAC1D5lD,KAAKm8D,MAAM21G,EAAGpnH,EAAI+b,EAAIhhB,OAAS,GAAIghB,EAAI7gB,MAAO6gB,EAAIhhB,QAC/C8gB,EAAO,IAAI6oC,aAAaxyC,EAAQloD,GACpC6xD,EAAKhD,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAChD7Z,YAAYqe,kBAAoBre,YAAY6Z,YAC9C+C,EAAKkzC,qBAAsB,EAC3BlzC,EAAK/hD,KAAK1kB,KAAKosD,MAAMU,UAAUs4F,qBAG3BxkG,SAASM,WAAsC,GAAzBjmC,SAASkmC,eAElCqG,QAAQD,YAAYkf,EAAKvzD,KAAM,aAAa,SAAS8yC,GAIpD,OAFAwB,QAAQ8vB,QAAQtxB,IAET,KAKwB,MAA7BygB,EAAKvzD,KAAKy+C,iBAEb8U,EAAKvzD,KAAKujB,WAAW6B,aAAamuC,EAAKvzD,KAAMuzD,EAAKvzD,KAAKujB,WAAWgH,YAGnE,IAAIsvB,EAAW7G,QAAQ1jD,KAAKxC,MAAM,WAEjC,OAA6B,MAArBA,KAAK49I,aAAwB59I,KAAK49I,aAAe9sG,KAG1D21B,EAAKjZ,SAELhG,QAAQiyB,oBAAoBhT,EAAKvzD,KAAMlT,KAAKosD,MAAOW,GACnD/sD,KAAKmxK,iBAAiB3qK,IAAIigE,EAAK3J,QAC/B98D,KAAKixK,WAAWlgK,KAAK01D,GACrBzmE,KAAKoxK,YAAYrgK,KAAKihK,GAGvBhyK,KAAKmxK,iBAAiBvlH,KAAK5rD,KAAK68J,aAAal3E,SAI7C3lF,KAAK6uK,eACL7uK,KAAKsxK,yBAWP5zB,oBAAoBh+I,UAAUqyK,qBAAuB,WAEpD,IAAID,EAAK,IAAI7jE,iBAAiB,KAAMjuG,KAAKm/I,eAAgBn/I,KAAKm/I,eAAgBt1F,YAAY6f,uBAG1F,OAFAooG,EAAGpkH,QAAU7D,YAAY+f,kBAElBkoG,GAQRp0B,oBAAoBh+I,UAAUs9D,WAAa,SAASyJ,EAAMmrG,EAAO1tK,EAAQutK,GAExE,OAAOvrH,QAAQ8W,WAAWyJ,EAAK3J,OAAQ80G,IAQxCl0B,oBAAoBh+I,UAAUgmB,QAAU,WAEvC1lB,KAAK4qF,QAEoB,MAArB5qF,KAAK29I,eAER39I,KAAKosD,MAAMhmC,MAAMoyD,eAAex4E,KAAK29I,cACrC39I,KAAKosD,MAAMuR,KAAK6a,eAAex4E,KAAK29I,cACpC39I,KAAKosD,MAAMosB,eAAex4E,KAAK29I,cAC/B39I,KAAK29I,aAAe,MAGS,MAA1B39I,KAAK0xK,mBAAqD,MAAxB1xK,KAAKosD,MAAM2R,YAEhDvW,QAAQgxB,eAAex4E,KAAKosD,MAAM2R,UAAW,aAAc/9D,KAAK0xK,mBAChE1xK,KAAK0xK,kBAAoB,OAI3B/wH,WAAW+8F,oBAAqD,qBAAxBA,oBAAsCA,yBAAsBn9I,EAuFpGs9I,aAAan+I,UAAUuyK,eAAiB,GAOxCp0B,aAAan+I,UAAUgqF,SAAU,EAOjCm0D,aAAan+I,UAAUkjE,IAAM,KAO7Bi7E,aAAan+I,UAAUwyK,UAAY,KAOnCr0B,aAAan+I,UAAU01H,SAAW,EAOlCyoB,aAAan+I,UAAUyyK,SAAW,EAOlCt0B,aAAan+I,UAAUwuD,SAAU,EAQjC2vF,aAAan+I,UAAUyuD,UAAY,WAElC,OAAOnuD,KAAK0pF,SASbm0D,aAAan+I,UAAU2qF,WAAa,SAASX,GAE5C1pF,KAAK0pF,QAAUA,GAShBm0D,aAAan+I,UAAUq+I,uBAAyB,SAASp4D,GAExD,OAAOn+B,QAAQm0B,UAAUgK,EAAGlO,aAU7BomE,aAAan+I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEnD,IAAKA,EAAGtO,cAAgBr3E,KAAKmuD,aAAenuD,KAAKosD,MAAM+B,aACrC,MAAjBw3B,EAAG54B,aAAuBvF,QAAQwzB,kBAAkB2K,EAAGlO,YACxD,CACC,IAAIrjB,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtCa,EAAS1Y,QAAQuY,gBAAgBz+D,KAAKosD,MAAM2R,WAChDa,EAAO5f,GAAKoV,EAAOpV,EACnB4f,EAAOhU,GAAKwJ,EAAOxJ,EACnB5qD,KAAKiL,MAAM06E,EAAG/N,OAAShZ,EAAO5f,EAAG2mC,EAAG7N,OAASlZ,EAAOhU,GAOpD+6B,EAAGrO,SAAQ,KASbumE,aAAan+I,UAAUuL,MAAQ,SAAS+zC,EAAG4L,GAE1C5qD,KAAKsgD,MAAQ,IAAIqK,QAAQ3L,EAAG4L,GAE5B,IAAImT,EAAY/9D,KAAKosD,MAAM2R,UAE3B,SAASq0G,EAAiBpsH,GAEzB,IAAI2/B,EAAK,IAAI/O,aAAa5wB,GACtBgU,EAAK9T,QAAQ2Y,aAAad,EAAW4nB,EAAG/N,OAAQ+N,EAAG7N,QAKvD,OAHA6N,EAAGpO,OAASvd,EAAGhb,EACf2mC,EAAGnO,OAASxd,EAAGpP,EAER+6B,EAGR3lF,KAAKmnF,YAAcjhC,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE9ChmD,KAAKkrF,UAAUlrF,KAAKosD,MAAOgmH,EAAiBpsH,OAG7ChmD,KAAKulF,YAAcr/B,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAE9ChmD,KAAKorF,QAAQprF,KAAKosD,MAAOgmH,EAAiBpsH,OAIvCpF,SAASqB,OAEZuF,QAAQ4xB,oBAAoBn+D,SAAU,KAAMjb,KAAKmnF,YAAannF,KAAKulF,cASrEs4D,aAAan+I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEnD,IAAKA,EAAGtO,cAA8B,MAAdr3E,KAAKsgD,MAC7B,CACC,IAAIse,EAAS1Y,QAAQuY,gBAAgBz+D,KAAKosD,MAAM2R,WAC5C3J,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WAC1Ca,EAAO5f,GAAKoV,EAAOpV,EACnB4f,EAAOhU,GAAKwJ,EAAOxJ,EACnB,IAAI5L,EAAI2mC,EAAG/N,OAAShZ,EAAO5f,EACvB4L,EAAI+6B,EAAG7N,OAASlZ,EAAOhU,EACvB/b,EAAK7uC,KAAKsgD,MAAMtB,EAAIA,EACpBjQ,EAAK/uC,KAAKsgD,MAAMsK,EAAIA,EACpBk0C,EAAM9+F,KAAKosD,MAAMsmE,WAEL,MAAZ1yH,KAAK4iE,KAAe1iE,KAAKk3D,IAAIvoB,GAAMiwD,GAAQ5+F,KAAKk3D,IAAIroB,GAAM+vD,KAE7C,MAAZ9+F,KAAK4iE,MAER5iE,KAAK4iE,IAAM5iE,KAAKguI,eAKjB9nF,QAAQ6K,iBAER/wD,KAAKoR,OAAO4tC,EAAG4L,GACf+6B,EAAGrO,aAUNumE,aAAan+I,UAAUsuI,YAAc,WAEd,MAAlBhuI,KAAKkyK,YAERlyK,KAAKkyK,UAAYj3J,SAAS9b,cAAc,OACxCa,KAAKkyK,UAAUjtF,UAAY,eAC3B/+B,QAAQ+G,WAAWjtD,KAAKkyK,UAAWlyK,KAAKiyK,iBAGzCjyK,KAAKosD,MAAM2R,UAAUrlC,YAAY14B,KAAKkyK,WACtC,IAAIrvK,EAAS7C,KAAKkyK,UAOlB,OALItxH,SAASyB,UAAYzB,SAASE,OAAS7lC,SAASkmC,cAAgB,KAAOnhD,KAAKkuD,UAE/EluD,KAAKkyK,UAAY,MAGXrvK,GAQRg7I,aAAan+I,UAAUgrF,SAAW,SAASpjC,EAAQq+B,GAElD,OAAmB,MAAZ3lF,KAAK4iE,KAAyC,QAA1B5iE,KAAK4iE,IAAIh7C,MAAMikB,SAS3CgyG,aAAan+I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAEjD,IAAIx2D,EAASnvB,KAAK0qF,WAClB1qF,KAAK4qF,QAEDz7D,IAEHnvB,KAAKyzD,QAAQkyB,EAAGlO,YAChBkO,EAAGrO,YAULumE,aAAan+I,UAAU+zD,QAAU,SAASzN,GAEzC,IAAIkF,EAAO,IAAIL,YAAY7qD,KAAKg/C,EAAGh/C,KAAK4qD,EAAG5qD,KAAK8lD,MAAO9lD,KAAK2lD,QAC5D3lD,KAAKosD,MAAMs0G,aAAax1G,EAAMlF,IAQ/B63F,aAAan+I,UAAUkrF,MAAQ,WAE9B,GAAgB,MAAZ5qF,KAAK4iE,IAER,GAAIhiB,SAASyB,UAAYzB,SAASE,OAAS7lC,SAASkmC,cAAgB,KAAOnhD,KAAKkuD,QAChF,CACC,IAAI6V,EAAO/jE,KAAK4iE,IAChB1c,QAAQ2I,iBAAiBkV,EAAKn8C,MAAO,aAAc,mBACnDm8C,EAAKn8C,MAAMyjE,cAAgB,OAC3BtnB,EAAKn8C,MAAM8lC,QAAU,EAElBj/C,OAAOkM,YAAW,WAEhBopD,EAAKttC,WAAWgC,YAAYsrC,KAC1B,UAIP/jE,KAAK4iE,IAAInsC,WAAWgC,YAAYz4B,KAAK4iE,KAIvCpb,QAAQgyB,uBAAuBv+D,SAAU,KAAMjb,KAAKmnF,YAAannF,KAAKulF,aACtEvlF,KAAKmnF,YAAc,KACnBnnF,KAAKulF,YAAc,KAEnBvlF,KAAKo1H,SAAW,EAChBp1H,KAAKmyK,SAAW,EAChBnyK,KAAKsgD,MAAQ,KACbtgD,KAAK4iE,IAAM,MAQZi7E,aAAan+I,UAAU0R,OAAS,SAAS4tC,EAAG4L,GAE3C5qD,KAAKo1H,SAAWp2E,EAChBh/C,KAAKmyK,SAAWvnH,EAEhB5qD,KAAKg+I,WAQNH,aAAan+I,UAAUs+I,QAAU,WAEhC,GAAgB,MAAZh+I,KAAK4iE,IACT,CACC,IAAI5jB,EAAIh/C,KAAKo1H,SAAWp1H,KAAKosD,MAAM8/B,MAC/BthC,EAAI5qD,KAAKmyK,SAAWnyK,KAAKosD,MAAM+/B,MAEnCnsF,KAAKg/C,EAAI9+C,KAAKyD,IAAI3D,KAAKsgD,MAAMtB,EAAGA,GAChCh/C,KAAK4qD,EAAI1qD,KAAKyD,IAAI3D,KAAKsgD,MAAMsK,EAAGA,GAChC5qD,KAAK8lD,MAAQ5lD,KAAKwD,IAAI1D,KAAKsgD,MAAMtB,EAAGA,GAAKh/C,KAAKg/C,EAC9Ch/C,KAAK2lD,OAAUzlD,KAAKwD,IAAI1D,KAAKsgD,MAAMsK,EAAGA,GAAK5qD,KAAK4qD,EAEhD,IAAI/b,EAAM+R,SAAe,OAAI5gD,KAAKosD,MAAM8/B,MAAQ,EAC5Cn9C,EAAM6R,SAAe,OAAI5gD,KAAKosD,MAAM+/B,MAAQ,EAEhDnsF,KAAK4iE,IAAIh7C,MAAMknB,KAAQ9uC,KAAKg/C,EAAInQ,EAAM,KACtC7uC,KAAK4iE,IAAIh7C,MAAMonB,IAAOhvC,KAAK4qD,EAAI7b,EAAM,KACrC/uC,KAAK4iE,IAAIh7C,MAAMk+B,MAAQ5lD,KAAKwD,IAAI,EAAG1D,KAAK8lD,OAAS,KACjD9lD,KAAK4iE,IAAIh7C,MAAM+9B,OAASzlD,KAAKwD,IAAI,EAAG1D,KAAK2lD,QAAU,OAWrDk4F,aAAan+I,UAAUgmB,QAAU,WAE3B1lB,KAAKk1B,YAETl1B,KAAKk1B,WAAY,EACjBl1B,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/BA,KAAKosD,MAAMosB,eAAex4E,KAAK89I,wBAC/B99I,KAAKosD,MAAMosB,eAAex4E,KAAK87I,YAC/B97I,KAAK4qF,QAEiB,MAAlB5qF,KAAKkyK,YAERlyK,KAAKkyK,UAAY,QAKpBvxH,WAAWk9F,aAAuC,qBAAjBA,aAA+BA,kBAAet9I,EAiC/E09I,SAASv+I,UAAU+uD,OAAS,UAO5BwvF,SAASv+I,UAAUyoF,MAAQ,KAO3B81D,SAASv+I,UAAU2yK,YAAa,EAOhCp0B,SAASv+I,UAAU4yK,YAAc,SAASx1G,KAO1CmhF,SAASv+I,UAAU6yK,YAAc,SAASz1G,EAAQ9C,EAAI2rB,KAOtDs4D,SAASv+I,UAAU+zD,QAAU,aAO7BwqF,SAASv+I,UAAU8yK,UAAY,SAASn1K,GAEvC2C,KAAKosD,MAAMiV,cAAchkE,EAAK2C,KAAK8wC,MAAMlpB,MAAMvqB,GAAM,CAAC2C,KAAK8wC,MAAMkc,QAQlEixF,SAASv+I,UAAU+yK,aAAe,SAAS9sF,GAE1C,IAAIx4B,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MACxB5H,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UACrB7J,EAAK,IAAIrP,QAAQg7B,EAAG3N,YAAc7qB,EAAQ5H,EAAGvG,EAAG2mC,EAAG1N,YAAc9qB,EAAQ5H,EAAGqF,GAG9D,MAAd5qD,KAAKktD,OAAsC,MAArBltD,KAAKktD,MAAM4P,SAEpC9C,EAAGhb,GAAKh/C,KAAKktD,MAAM4P,OAAOhX,MAAQqH,EAAQ,EAC1C6M,EAAGpP,GAAK5qD,KAAKktD,MAAM4P,OAAOnX,OAASwH,EAAQ,GAI5C,IAAIktC,GAAUn0C,QAAQqQ,UAAUv2D,KAAKorG,eACjC9Q,GAAUp0C,QAAQqQ,UAAUv2D,KAAK0yK,oBAAsBr4E,EAC3DrgC,EAAKh6D,KAAK2yK,UAAU3yK,KAAK05F,YAAY15F,KAAK4yK,UAAU5yK,KAAK05F,YAAY1/B,EAAIqgC,GACvEr6F,KAAKqyK,aAAeryK,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,aAAc6iB,IACrEt6F,KAAKuyK,YAAYvyK,KAAK8wC,MAAMs4F,iBAAkBpvE,EAAI2rB,GAClD3lF,KAAKozH,kBACLpzH,KAAKwtD,UASNywF,SAASv+I,UAAU0zH,gBAAkB,WAEb,MAAnBpzH,KAAK8wC,MAAMj/B,MAEd7R,KAAK8wC,MAAMj/B,KAAK9Q,MAAMf,KAAK8wC,OAGJ,MAApB9wC,KAAK8wC,MAAMoc,OAEdltD,KAAK8wC,MAAMoc,MAAMnsD,MAAMf,KAAK8wC,OAG7B9wC,KAAKosD,MAAMmB,aAAaC,OAAOxtD,KAAK8wC,OAAO,IAQ5CmtG,SAASv+I,UAAU0rG,YAAc,WAEhC,OAAwB,MAApBprG,KAAK8wC,MAAMoc,MAEPltD,KAAK8wC,MAAMoc,MAAMk+C,cAGlB,GASR6yC,SAASv+I,UAAUgzK,iBAAmB,WAErC,OAAwB,MAApB1yK,KAAK8wC,MAAMoc,MAEPltD,KAAK8wC,MAAMoc,MAAMs8C,mBAGlB,GAQRy0C,SAASv+I,UAAUglB,KAAO,WAEzB,IAAI4qB,EAAOtvC,KAAK6yK,iBAEE,MAAd7yK,KAAKmoF,OAERnoF,KAAKktD,MAAQ,IAAIoiD,aAAa,IAAIzkD,YAAY,EAAG,EAAG7qD,KAAKmoF,MAAMriC,MAAO9lD,KAAKmoF,MAAMxiC,QAAS3lD,KAAKmoF,MAAMvzE,KACrG5U,KAAKktD,MAAMysD,qBAAsB,GAIjC35G,KAAKktD,MAAQltD,KAAKguI,YAAY1+F,GAG/BtvC,KAAK8yK,UAAUxjI,IAQhB2uG,SAASv+I,UAAUsuI,YAAc,SAAS1+F,GAEzC,IAAIwtB,EAAS,IAAIjS,YAAY,EAAG,EAAGhB,YAAYuhB,YAAavhB,YAAYuhB,aAExE,OAAO,IAAI6iC,iBAAiBnxC,EAAQjT,YAAYyhB,iBAAkBzhB,YAAY0hB,qBAQ/E0yE,SAASv+I,UAAUozK,UAAY,SAASxjI,GAEnCA,GAAQtvC,KAAKktD,MAAMy5C,iBAEtB3mG,KAAKktD,MAAMuW,QAAU5Z,YAAYue,mBACjCpoE,KAAKktD,MAAMxoC,KAAK1kB,KAAKosD,MAAM2R,aAI3B/9D,KAAKktD,MAAMuW,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAAe7Z,YAAYqe,kBAAoBre,YAAY6Z,YAEhG,MAAf1jE,KAAKyuD,QAERzuD,KAAKktD,MAAMxoC,KAAK1kB,KAAKosD,MAAMU,UAAU24C,mBAIvCj+C,QAAQiyB,oBAAoBz5E,KAAKktD,MAAMh6C,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,OAC9D9wC,KAAKktD,MAAMh6C,KAAK0U,MAAM6mC,OAASzuD,KAAKyuD,QAQrCwvF,SAASv+I,UAAU8tD,OAAS,WAE3B,GAAkB,MAAdxtD,KAAKktD,OAAqC,MAApBltD,KAAK8wC,MAAMoc,MACrC,CACC,IAAI8M,EAAKh6D,KAAKsyK,YAAYtyK,KAAK8wC,MAAMs4F,kBAErC,GAAU,MAANpvE,EACJ,CACC,IAAI6D,EAAQ3X,QAAQqQ,UAAUv2D,KAAK0yK,oBACnC14G,EAAKh6D,KAAK05F,YAAY15F,KAAK2yK,UAAU34G,GAAK6D,GAE1C,IAAI1Q,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MACxB5H,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UACzB7jE,KAAKktD,MAAM4P,OAAO9d,EAAI9+C,KAAKC,OAAO65D,EAAGhb,EAAIuG,EAAGvG,GAAKmO,EAAQntD,KAAKktD,MAAM4P,OAAOhX,MAAQ,GACnF9lD,KAAKktD,MAAM4P,OAAOlS,EAAI1qD,KAAKC,OAAO65D,EAAGpP,EAAIrF,EAAGqF,GAAKuC,EAAQntD,KAAKktD,MAAM4P,OAAOnX,OAAS,GAGpF3lD,KAAKktD,MAAMM,YAWdywF,SAASv+I,UAAUmzK,eAAiB,WAEnC,OAA0B,MAAnB7yK,KAAK8wC,MAAMj/B,MAAgB7R,KAAK8wC,MAAMj/B,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,WAQjFkgF,SAASv+I,UAAUg6F,YAAc,SAAS1/B,EAAI6D,GAE7C,IAAIf,EAAS98D,KAAK8wC,MAAMo4F,gBACpBxvE,EAAK,IAAI/O,QAAQmS,EAAO9R,aAAc8R,EAAO7R,cAC7CuM,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEnB,OAAO3X,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKgC,IAQ9CukF,SAASv+I,UAAUizK,UAAY,SAAS34G,GAEvC,GAAwB,MAApBh6D,KAAK8wC,MAAMoc,MACf,CACC,IAAI4P,EAAS98D,KAAK8wC,MAAMo4F,gBAEpBlpI,KAAK8wC,MAAMoc,MAAM8O,QAEpBhC,EAAGhb,EAAI,EAAI8d,EAAO9d,EAAI8d,EAAOhX,MAAQkU,EAAGhb,GAGrCh/C,KAAK8wC,MAAMoc,MAAM+O,QAEpBjC,EAAGpP,EAAI,EAAIkS,EAAOlS,EAAIkS,EAAOnX,OAASqU,EAAGpP,GAI3C,OAAOoP,GASRikF,SAASv+I,UAAUkzK,UAAY,SAAS54G,EAAImvG,GAQ3C,OANKA,IAEJnvG,EAAGhb,EAAIh/C,KAAKosD,MAAM0gC,KAAK9yB,EAAGhb,GAC1Bgb,EAAGpP,EAAI5qD,KAAKosD,MAAM0gC,KAAK9yB,EAAGpP,IAGpBoP,GAQRikF,SAASv+I,UAAUuoD,WAAa,SAASC,GAEtB,MAAdloD,KAAKktD,OAAoC,MAAnBltD,KAAKktD,MAAMh6C,OAEpClT,KAAKktD,MAAMh6C,KAAK0U,MAAMikB,QAAU,EAAY,GAAK,SASnDoyG,SAASv+I,UAAUkrF,MAAQ,WAE1B5qF,KAAKioD,YAAW,GAChBjoD,KAAK8wC,MAAMlpB,MAAQ5nB,KAAKosD,MAAMyvD,aAAa77G,KAAK8wC,MAAMkc,MACtDhtD,KAAKozH,mBAQN6qB,SAASv+I,UAAUgmB,QAAU,WAEV,MAAd1lB,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,OAIfvM,WAAWs9F,SAA+B,qBAAbA,SAA2BA,cAAW19I,EAsDnE29I,gBAAgBx+I,UAAU0sD,MAAQ,KAOlC8xF,gBAAgBx+I,UAAUoxC,MAAQ,KAQlCotG,gBAAgBx+I,UAAUqzK,aAAc,EAOxC70B,gBAAgBx+I,UAAU0D,MAAQ,KAQlC86I,gBAAgBx+I,UAAUylK,wBAAyB,EAOnDjnB,gBAAgBx+I,UAAUszK,YAAc,KAOxC90B,gBAAgBx+I,UAAUgzH,UAAY,EAOtCwrB,gBAAgBx+I,UAAUsoK,iBAAkB,EAQ5C9pB,gBAAgBx+I,UAAUuzK,wBAAyB,EAQnD/0B,gBAAgBx+I,UAAUwzK,gBAAiB,EAO3Ch1B,gBAAgBx+I,UAAUyzK,eAAiB,YAQ3Cj1B,gBAAgBx+I,UAAUy+I,aAAc,EAQxCD,gBAAgBx+I,UAAU0zK,cAAe,EAQzCl1B,gBAAgBx+I,UAAU2zK,0BAA2B,EAOrDn1B,gBAAgBx+I,UAAU4zK,wBAA0B,GAQpDp1B,gBAAgBx+I,UAAU6zK,iBAAmB,EAQ7Cr1B,gBAAgBx+I,UAAU8zK,eAAiB,EAO3Ct1B,gBAAgBx+I,UAAUglB,KAAO,WAmBhC,GAjBA1kB,KAAKosD,MAAQpsD,KAAK8wC,MAAM6sB,KAAKvR,MAC7BpsD,KAAKyzK,gBAAkBzzK,KAAK0zK,mBAAmB1zK,KAAK8wC,OACpD9wC,KAAK88D,OAAS,IAAIjS,YAAY7qD,KAAKyzK,gBAAgBz0H,EAAGh/C,KAAKyzK,gBAAgB7oH,EAAG5qD,KAAKyzK,gBAAgB3tH,MAAO9lD,KAAKyzK,gBAAgB9tH,QAC/H3lD,KAAK+jK,gBAAkB/jK,KAAK2zK,qBAAqB3zK,KAAK88D,QAEtD98D,KAAK+jK,gBAAgBtgG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAAe7Z,YAAYoe,YAAcpe,YAAY6Z,YACvH1jE,KAAK+jK,gBAAgB14E,eAAgB,EACrCrrF,KAAK+jK,gBAAgBtqG,SAAWzkC,OAAOh1B,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KACvF96D,KAAK+jK,gBAAgBr/I,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAC/Cj+C,QAAQiyB,oBAAoBz5E,KAAK+jK,gBAAgB7wJ,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,OAEpE9wC,KAAKosD,MAAMqwD,cAAcz8G,KAAK8wC,MAAMkc,OAEvChtD,KAAK+jK,gBAAgB/4D,UAAUnhD,YAAYggB,uBAIxCgyE,eAAen8I,UAAUwnK,UAAY,GAAKlnK,KAAKosD,MAAMk0G,oBAAsBzkB,eAAen8I,UAAUwnK,SACxG,CACC,IAAIlgF,EAAYhnF,KAAKosD,MAAMypG,gBAAgB71J,KAAK8wC,MAAMkc,MAGtD,GAFAhtD,KAAK4zK,OAAS,GAEV5sF,GAAchnF,KAAKosD,MAAMiwG,eAAer8J,KAAK8wC,MAAMkc,OACtDhtD,KAAK8wC,MAAMgV,OAAS,GAAK9lD,KAAK8wC,MAAM6U,QAAU,EAC/C,CACC,IAAIz8C,EAAI,EAEJ89E,IAEEhnF,KAAK+yK,cAET/yK,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,YAAaj7J,MAC/ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,WAAYj7J,MAC9ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,YAAaj7J,MAC/ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,WAAYj7J,MAC9ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,WAAYj7J,MAC9ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,YAAaj7J,MAC/ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,WAAYj7J,OAG/ClJ,KAAK4zK,OAAO7iK,KAAK/Q,KAAKmkK,YAAY,YAAaj7J,OAGhD,IAAI8sF,EAAMh2F,KAAKosD,MAAMhmC,MAAM62F,YAAYj9G,KAAK8wC,MAAMkc,MAEvC,MAAPgpC,GAAgBA,EAAIE,UAAal2F,KAAKosD,MAAMizD,WAAWr/G,KAAK8wC,MAAMkc,QACrEhtD,KAAKosD,MAAMiwG,eAAer8J,KAAK8wC,MAAMkc,QAGrChtD,KAAK6zK,WAAa7zK,KAAKmkK,YAAYt6G,YAAYkgB,oBAAqBviB,QAAQ60B,aAAcxyB,YAAYwhB,kBAAmBxhB,YAAY2hB,wBACrIxrE,KAAK4zK,OAAO7iK,KAAK/Q,KAAK6zK,kBAGf7zK,KAAKosD,MAAMqwD,cAAcz8G,KAAK8wC,MAAMkc,QAAUhtD,KAAKosD,MAAMypG,gBAAgB71J,KAAK8wC,MAAMkc,OAC5FhtD,KAAK8wC,MAAMgV,MAAQ,GAAK9lD,KAAK8wC,MAAM6U,OAAS,IAE5C3lD,KAAK6zK,WAAa7zK,KAAKmkK,YAAYt6G,YAAYggB,sBAC9CriB,QAAQ60B,aAAc,KAAMxyB,YAAY2hB,wBACzCxrE,KAAK4zK,OAAO7iK,KAAK/Q,KAAK6zK,aAKpB7zK,KAAK8zK,4BAER9zK,KAAK+zK,cAAgB/zK,KAAKmkK,YAAYnkK,KAAKmzK,eAAgB3rH,QAAQ80B,gBAClEzyB,YAAYuhB,YAAc,EAAGvhB,YAAYyhB,kBAC1CtrE,KAAK4zK,OAAO7iK,KAAK/Q,KAAK+zK,gBAGvB/zK,KAAKg0K,cAAgBh0K,KAAKi0K,sBAC1Bj0K,KAAKwtD,SAEDxtD,KAAKqzK,0BAERrzK,KAAKk0K,mBASPh2B,gBAAgBx+I,UAAUo0K,wBAA0B,WAEnD,OAAO9zK,KAAKosD,MAAM+B,aAAenuD,KAAKgoK,iBAAmBhoK,KAAKosD,MAAMkwG,gBAAgBt8J,KAAK8wC,MAAMkc,QAC7F6uF,eAAen8I,UAAUwnK,UAAY,GAAKlnK,KAAKosD,MAAMk0G,oBAAsBzkB,eAAen8I,UAAUwnK,WACrGlnK,KAAK8wC,MAAMgV,OAAS,GAAK9lD,KAAK8wC,MAAM6U,QAAU,GAQhDu4F,gBAAgBx+I,UAAU85J,mBAAqB,SAAS7zE,GAEvD,OAAOn+B,QAAQi0B,YAAYkK,EAAGlO,aAA6D,SAA9Cz3E,KAAK8wC,MAAMlpB,MAAMiiC,YAAYuoB,eAQ3E8rE,gBAAgBx+I,UAAUy0K,gBAAkB,SAASrjI,EAAO60C,GAE3D,OAAO,GAQRu4D,gBAAgBx+I,UAAUu0K,oBAAsB,WAE/C,OAAO,MAQR/1B,gBAAgBx+I,UAAUw0K,gBAAkB,WAE3C,IAAItiK,EAAW5R,KAAKosD,MAAM8uE,cAAcl7H,KAAK8wC,MAAMkc,MAEnD,GAAIp7C,EAAShR,OAAS,IAErBZ,KAAKo0K,UAAYp0K,KAAKosD,MAAMuR,KAAKqzE,UAAUp/H,GAErB,MAAlB5R,KAAKo0K,WACT,CACC,IAAI5sI,EAAIxnC,KAAK8wC,MAAM6sB,KAAKxQ,MACpBnB,EAAIhsD,KAAK8wC,MAAM6sB,KAAKkG,UAExB7jE,KAAKo0K,UAAUp1H,GAAKh/C,KAAK8wC,MAAMkO,EAC/Bh/C,KAAKo0K,UAAUxpH,GAAK5qD,KAAK8wC,MAAM8Z,EAC/B5qD,KAAKo0K,UAAUp1H,GAAKxX,EACpBxnC,KAAKo0K,UAAUxpH,GAAKpjB,EACpBxnC,KAAKo0K,UAAUtuH,OAASte,EACxBxnC,KAAKo0K,UAAUzuH,QAAUne,EACzBxnC,KAAK62D,GAAK72D,KAAK8wC,MAAMkO,EAAIxX,EAAIwkB,EAAEhN,EAC/Bh/C,KAAK82D,GAAK92D,KAAK8wC,MAAM8Z,EAAIpjB,EAAIwkB,EAAEpB,IAWlCszF,gBAAgBx+I,UAAUg0K,mBAAqB,SAAS5iI,GAEvD,OAAO,IAAI+Z,YAAY3qD,KAAKm8D,MAAMvrB,EAAMkO,GAAI9+C,KAAKm8D,MAAMvrB,EAAM8Z,GAAI1qD,KAAKm8D,MAAMvrB,EAAMgV,OAAQ5lD,KAAKm8D,MAAMvrB,EAAM6U,UAQ5Gu4F,gBAAgBx+I,UAAU20K,2BAA6B,SAASv3G,GAE/D,OAAO98D,KAAK2zK,qBAAqB72G,IAQlCohF,gBAAgBx+I,UAAUi0K,qBAAuB,SAAS72G,GAEzD,IAAI5P,EAAQ,IAAI+gD,iBAAiBnxC,EAAQ,KAAM98D,KAAKs0K,qBAIpD,OAHApnH,EAAMq5C,YAAcvmG,KAAKu0K,0BACzBrnH,EAAMw3C,SAAW1kG,KAAKw0K,oBAEftnH,GAQRgxF,gBAAgBx+I,UAAU40K,kBAAoB,WAE7C,OAAOzqH,YAAY8gB,wBAQpBuzE,gBAAgBx+I,UAAU60K,wBAA0B,WAEnD,OAAO1qH,YAAY+gB,8BAQpBszE,gBAAgBx+I,UAAU80K,kBAAoB,WAE7C,OAAO3qH,YAAYihB,yBASpBozE,gBAAgBx+I,UAAUykK,YAAc,SAAS11G,EAAQrrD,EAAOq9C,EAAMu3C,GAErEv3C,EAAOA,GAAQoJ,YAAYuhB,YAE3B,IAAItO,EAAS,IAAIjS,YAAY,EAAG,EAAGpK,EAAMA,GACrCyjH,EAAQlkK,KAAKy0K,iBAAiB33G,EAAQ15D,EAAO40F,GA4BjD,OA1BIksE,EAAMv9D,iBAAsC,MAAnB3mG,KAAK8wC,MAAMj/B,MAAgB7R,KAAK8wC,MAAMj/B,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,WAErGmmG,EAAMpnG,OAAOnX,QAAU,EACvBu+G,EAAMpnG,OAAOhX,OAAS,EACtBo+G,EAAMzgG,QAAU5Z,YAAYue,mBAC5B87F,EAAMx/I,KAAK1kB,KAAKosD,MAAM2R,aAItBmmG,EAAMzgG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACjD7Z,YAAYqe,kBAAoBre,YAAY6Z,YAC9CwgG,EAAMx/I,KAAK1kB,KAAKosD,MAAMU,UAAU24C,mBAGjCj+C,QAAQiyB,oBAAoByqF,EAAMhxJ,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,OAErD9wC,KAAKosD,MAAM+B,aAEd+1G,EAAMl5D,UAAUv8C,GAGZzuD,KAAK00K,eAAetxK,KAExB8gK,EAAMh8G,SAAU,GAGVg8G,GASRhmB,gBAAgBx+I,UAAUg1K,eAAiB,SAAStxK,GAEnD,OAAO,GAUR86I,gBAAgBx+I,UAAU+0K,iBAAmB,SAAS33G,EAAQ15D,EAAO40F,GAEpE,GAAwB,MAApBh4F,KAAKgzK,YACT,CACCl2G,EAAS,IAAIjS,YAAYiS,EAAO9d,EAAG8d,EAAOlS,EAAG5qD,KAAKgzK,YAAYltH,MAAO9lD,KAAKgzK,YAAYrtH,QACtF,IAAIuH,EAAQ,IAAIoiD,aAAaxyC,EAAQ98D,KAAKgzK,YAAYp+J,KAKtD,OAFAs4C,EAAMysD,qBAAsB,EAErBzsD,EAEH,OAAI9pD,GAASokD,QAAQ80B,gBAElB,IAAI4xB,UAAUpxC,EAAQk7B,GAAanuC,YAAYyhB,iBAAkBzhB,YAAY0hB,oBAI7E,IAAI0iC,iBAAiBnxC,EAAQk7B,GAAanuC,YAAYyhB,iBAAkBzhB,YAAY0hB,qBAU7F2yE,gBAAgBx+I,UAAUi1K,YAAc,SAASznH,EAAOlO,EAAG4L,GAE7C,MAATsC,IAEHA,EAAM4P,OAAO9d,EAAI9+C,KAAKC,MAAM6+C,EAAIkO,EAAM4P,OAAOhX,MAAQ,GACrDoH,EAAM4P,OAAOlS,EAAI1qD,KAAKC,MAAMyqD,EAAIsC,EAAM4P,OAAOnX,OAAS,GAGpC,MAAduH,EAAMh6C,MAA4C,QAA5Bg6C,EAAMh6C,KAAK0U,MAAMikB,SAE1CqhB,EAAMM,WAWT0wF,gBAAgBx+I,UAAUk1K,kBAAoB,SAASjvF,GAGtD,IAAImZ,EAAQt3C,QAAQ6wB,aAAasN,EAAGlO,YAAgC,EAAjBz3E,KAAK0yH,UACpD5oH,EAAO9J,KAAKmlK,yBAA2BvkH,SAASE,OAASg+C,EAAM,GAClE,IAAIj0C,YAAY86B,EAAG3N,YAAc8mB,EAAKnZ,EAAG1N,YAAc6mB,EAAK,EAAIA,EAAK,EAAIA,GAAO,KAEjF,SAAS+1E,EAAW3nH,GAEnB,OAAgB,MAATA,IAAkBy4B,EAAGhO,SAASzqB,IAAkB,MAAPpjD,GAAeo8C,QAAQ8W,WAAW9P,EAAM4P,OAAQhzD,IACnE,QAA5BojD,EAAMh6C,KAAK0U,MAAMikB,SAAoD,UAA/BqhB,EAAMh6C,KAAK0U,MAAMygC,YAGzD,GAA0B,MAAtBroD,KAAKg0K,eAAyBh0K,KAAK80K,oBAAoBnvF,GAG1D,IAAK,IAAIz8E,EAAIlJ,KAAKg0K,cAAcpzK,OAAS,EAAGsI,GAAK,EAAGA,IAEnD,GAAI2rK,EAAW70K,KAAKg0K,cAAc9qK,GAAGgkD,OAGpC,OAAO1F,QAAQ+0B,cAAgBrzE,EAKlC,GAAI2rK,EAAW70K,KAAK+zK,eAEnB,OAAOvsH,QAAQ80B,gBAEX,GAAIu4F,EAAW70K,KAAK6zK,YAExB,OAAOrsH,QAAQ60B,aAGhB,GAAmB,MAAfr8E,KAAK4zK,OAER,IAAS1qK,EAAI,EAAGA,EAAIlJ,KAAK4zK,OAAOhzK,OAAQsI,IAEvC,GAAI2rK,EAAW70K,KAAK4zK,OAAO1qK,IAE1B,OAAOA,EAKV,OAAO,MASRg1I,gBAAgBx+I,UAAUo1K,oBAAsB,SAASnvF,GAExD,OAAO,GAURu4D,gBAAgBx+I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEtD,IAAImZ,EAAQt3C,QAAQ6wB,aAAasN,EAAGlO,YAAgC,EAAjBz3E,KAAK0yH,UAExD,IAAK/sC,EAAGtO,cAAgBr3E,KAAKosD,MAAM+B,cAAgB2wC,EAAM,GAAKnZ,EAAG54B,YAAc/sD,KAAK8wC,OACpF,CACC,IAAIikI,EAAS/0K,KAAK40K,kBAAkBjvF,GAEtB,MAAVovF,IAEH/0K,KAAKiL,MAAM06E,EAAG3N,YAAa2N,EAAG1N,YAAa88F,GAC3CpvF,EAAGrO,aAWN4mE,gBAAgBx+I,UAAUs1K,oBAAsB,WAE/C,OAA2B,MAApBh1K,KAAK8wC,MAAMoc,OAA0C,MAAzBltD,KAAK8wC,MAAMoc,MAAMqvC,MAA2C,MAA3Bv8F,KAAK8wC,MAAMoc,MAAMovC,QAQtF4hD,gBAAgBx+I,UAAUuL,MAAQ,SAAS+zC,EAAG4L,EAAGxnD,GAEhD,GAA4B,MAAxBpD,KAAK+jK,gBACT,CACC/jK,KAAKypK,kBAAoBzpK,KAAKm+I,aAAkE,GAAnDn+I,KAAKosD,MAAMhmC,MAAMwnC,cAAc5tD,KAAK8wC,MAAMkc,MACvFhtD,KAAKk9I,aAAc,EACnBl9I,KAAKi1K,aAAe,EACpBj1K,KAAKk1K,aAAe,EACpBl1K,KAAKoD,MAAQA,EACbpD,KAAKinF,OAASjoC,EACdh/C,KAAKknF,OAASt8B,EAGd,IAAIxkC,EAAQpmB,KAAK8wC,MAAM6sB,KAAKvR,MAAMhmC,MAC9B/f,EAAS+f,EAAM2vE,UAAU/1F,KAAK8wC,MAAMkc,MA8BxC,GA5BIhtD,KAAK8wC,MAAM6sB,KAAKmhD,aAAez4G,IAAW+f,EAAMuvE,SAAStvF,IAAW+f,EAAMjX,OAAO9I,MAEpFrG,KAAKszJ,YAActzJ,KAAK8wC,MAAM6sB,KAAKvR,MAAMuR,KAAK5Q,SAAS1mD,IAIxDrG,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAAWzoC,GAASokD,QAAQ80B,gBAAmB,SAAW,OAGrFt8E,KAAKypK,oBAAqBzpK,KAAKg1K,wBAEnCh1K,KAAKm1K,QAAUn1K,KAAK2zK,qBAAqB3zK,KAAK88D,QAExClc,SAASyB,QAAyE,GAA/DrtB,OAAOh1B,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,MAC5D,MAAnB96D,KAAK8wC,MAAMj/B,MAAgB7R,KAAK8wC,MAAMj/B,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,WAOzE/9D,KAAKm1K,QAAQ1xG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACxD7Z,YAAYoe,YAAcpe,YAAY6Z,YACxC1jE,KAAKm1K,QAAQzwJ,KAAK1kB,KAAKosD,MAAMuR,KAAK8nC,oBAPlCzlG,KAAKm1K,QAAQ1xG,QAAU5Z,YAAYue,mBACnCpoE,KAAKm1K,QAAQzwJ,KAAK1kB,KAAKosD,MAAM2R,aAW3B/9D,KAAKypK,kBACT,CACCzpK,KAAKo1K,aAEDhyK,GAASokD,QAAQ80B,gBAEpBt8E,KAAK+zK,cAAc7gK,KAAK0U,MAAMikB,QAAU,GAEhCzoC,GAASokD,QAAQ60B,aAEzBr8E,KAAK6zK,WAAW3gK,KAAK0U,MAAMikB,QAAU,GAEd,MAAf7rC,KAAK4zK,QAAwC,MAAtB5zK,KAAK4zK,OAAOxwK,GAE3CpD,KAAK4zK,OAAOxwK,GAAO8P,KAAK0U,MAAMikB,QAAU,GAEhCzoC,GAASokD,QAAQ+0B,eAAuC,MAAtBv8E,KAAKg0K,eAE/Ch0K,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBn5E,GAAO6kD,YAAW,GAI9D,IAAI8F,EAAQ/tD,KAAKosD,MAAM4B,SAAShuD,KAAK8wC,MAAMkc,MAC3ChtD,KAAKq1K,aAAe,GAEpB,IAAK,IAAInsK,EAAI,EAAGA,EAAI6kD,EAAMntD,OAAQsI,IAClC,CACC,IAAI4Q,EAAU9Z,KAAKosD,MAAMolF,sBAAsBmpB,WAAW5sG,EAAM7kD,IAEjD,MAAX4Q,GAEH9Z,KAAKq1K,aAAatkK,KAAK+I,OAY5BokI,gBAAgBx+I,UAAU2qK,kBAAoB,SAASniH,GAEtD,GAAmB,MAAfloD,KAAK4zK,OAER,IAAK,IAAI1qK,EAAI,EAAGA,EAAIlJ,KAAK4zK,OAAOhzK,OAAQsI,IAEvClJ,KAAK4zK,OAAO1qK,GAAGgK,KAAK0U,MAAMikB,QAAU,EAAY,GAAK,OAIvD,GAA0B,MAAtB7rC,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE9ClJ,KAAKg0K,cAAc9qK,GAAG++C,WAAWC,IAYpCg2F,gBAAgBx+I,UAAU01K,WAAa,WAEtCp1K,KAAKqqK,mBAAkB,IAUxBnsB,gBAAgBx+I,UAAU41K,eAAiB,SAAS3vF,GAE/C3lF,KAAKk9I,aAA8B,MAAfl9I,KAAKinF,QAAiC,MAAfjnF,KAAKknF,SAE/C1/B,QAAQ6wB,aAAasN,EAAGlO,aAC3Bv3E,KAAKk3D,IAAIuuB,EAAG3N,YAAch4E,KAAKinF,QAAUjnF,KAAKosD,MAAMsmE,WACpDxyH,KAAKk3D,IAAIuuB,EAAG1N,YAAcj4E,KAAKknF,QAAUlnF,KAAKosD,MAAMsmE,aAEpD1yH,KAAKk9I,aAAc,IAUtBgB,gBAAgBx+I,UAAUs8I,WAAa,SAASr2D,KAOhDu4D,gBAAgBx+I,UAAU8pK,WAAa,aAOvCtrB,gBAAgBx+I,UAAU61K,WAAa,SAASx+G,GAE/C,OAAO72D,KAAKm8D,MAAc,GAARtF,GAAc,IAQjCmnF,gBAAgBx+I,UAAU6pK,YAAc,SAAS3oK,GAEhD,OAAOV,KAAKm8D,MAAMz7D,IAQnBs9I,gBAAgBx+I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEjDA,EAAGtO,cAA8B,MAAdr3E,KAAKoD,MAkCnBpD,KAAKosD,MAAMw/B,aAA6C,MAA9B5rF,KAAK40K,kBAAkBjvF,IAE1DA,EAAGrO,SAAQ,IAjCXt3E,KAAKs1K,eAAe3vF,GAEf3lF,KAAKk9I,cAELl9I,KAAKoD,OAASokD,QAAQ+0B,cAEC,MAAtBv8E,KAAKg0K,gBAERh0K,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBv8E,KAAKoD,OAAOqvK,aAAa9sF,GACpE3lF,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBv8E,KAAKoD,OAAO+rB,QAAS,GAGzDnvB,KAAKoD,OAASokD,QAAQ60B,aAE9Br8E,KAAKw1K,UAAU7vF,GAEP3lF,KAAKoD,OAASokD,QAAQ80B,gBAE9Bt8E,KAAKy1K,aAAa9vF,GAIlB3lF,KAAK01K,aAAa/vF,GAGnB3lF,KAAKg8I,WAAWr2D,IAGjBA,EAAGrO,YAcL4mE,gBAAgBx+I,UAAU81K,UAAY,SAAS7vF,GAE9C,IAAI1zC,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aACvC1yB,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UACrB1W,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MAExBntD,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,cAEpCxlC,EAAM+M,GAAKh/C,KAAKosD,MAAM0gC,KAAK76C,EAAM+M,EAAImO,EAAQ5H,EAAGvG,GAAKuG,EAAGvG,GAAKmO,EAC7Dlb,EAAM2Y,GAAK5qD,KAAKosD,MAAM0gC,KAAK76C,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,GAAKrF,EAAGqF,GAAKuC,GAG9D,IAAI/pD,EAA+B,MAAtBpD,KAAK+zK,cAAyB/zK,KAAK4zK,OAAOhzK,OAAS,EAAIZ,KAAK4zK,OAAOhzK,OAAS,EACzFZ,KAAK20K,YAAY30K,KAAK4zK,OAAOxwK,GAAQ6uC,EAAM+M,EAAG/M,EAAM2Y,IAQrDszF,gBAAgBx+I,UAAU+1K,aAAe,SAAS9vF,GAEjD,IAAI1zC,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aACvCppC,EAAK7uC,KAAK8wC,MAAMkO,EAAIh/C,KAAK8wC,MAAMgV,MAAQ,EAAI7T,EAAM+M,EACjDjQ,EAAK/uC,KAAK8wC,MAAM8Z,EAAI5qD,KAAK8wC,MAAM6U,OAAS,EAAI1T,EAAM2Y,EAStD,GARA5qD,KAAK21K,aAAsB,GAAN9mI,EAAgC,IAArB3uC,KAAK01K,KAAK7mI,EAAKF,GAAY3uC,KAAKu2D,GAAK,GAAO1nB,EAAK,EAAK,IAAM,EAExFF,EAAK,IAER7uC,KAAK21K,cAAgB,KAIlB31K,KAAKkzK,gBAAkBlzK,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,YAC5D,CACK5oC,EAAKoD,EAAM+M,EAAIh/C,KAAK8wC,MAAMka,aAC1Bjc,EAAKkD,EAAM2Y,EAAI5qD,KAAK8wC,MAAMma,aAD9B,IAEI2Q,EAAqD,EAA9C17D,KAAKk3D,IAAIl3D,KAAKg4D,KAAKrpB,EAAKA,EAAKE,EAAKA,GAAM,IAC/C8mI,EAAS31K,KAAKwD,IAAI,EAAG,EAAIxD,KAAKyD,IAAI,EAAGzD,KAAKwD,IAAI,EAAGxD,KAAKm8D,MAAM,GAAKn8D,KAAKk3D,IAAIwE,OAE9E57D,KAAK21K,aAAez1K,KAAKm8D,MAAMr8D,KAAK21K,aAAeE,GAAUA,OAI7D71K,KAAK21K,aAAe31K,KAAKu1K,WAAWv1K,KAAK21K,cAG1C31K,KAAK+jK,gBAAgBtqG,SAAWz5D,KAAK21K,aACrC31K,KAAK+jK,gBAAgBv2G,SAEjBxtD,KAAKypK,mBAERzpK,KAAKmqK,iBASPjsB,gBAAgBx+I,UAAUg2K,aAAe,SAAS/vF,GAEjD,IAAIs8C,EAAK,IAAIt3E,QAAQ3qD,KAAK8wC,MAAMka,aAAchrD,KAAK8wC,MAAMma,cACrD4S,EAAQ3X,QAAQqQ,UAAUv2D,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC1E7oB,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aACvC1yB,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UACrB1W,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MACxBqK,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAEhBhvB,EAAKoD,EAAM+M,EAAIh/C,KAAKinF,OACpBl4C,EAAKkD,EAAM2Y,EAAI5qD,KAAKknF,OAGpB5uB,EAAKd,EAAM3oB,EAAK6oB,EAAM3oB,EACtBwpB,EAAKb,EAAM7oB,EAAK2oB,EAAMzoB,EAE1BF,EAAKypB,EACLvpB,EAAKwpB,EAEL,IAAIy9B,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MAOhD,GANAhtD,KAAK81K,eAAiB91K,KAAK4kK,MAAM5uE,EAAKnnD,EAAKse,EAAOpe,EAAKoe,EAAOntD,KAAKoD,MAClEpD,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,YAAa,EAC9C,IAAI9sB,QAAQ,EAAG,GAAI3qD,KAAKw5J,mBAAmB7zE,GAC3C3lF,KAAKm0K,gBAAgBn0K,KAAK8wC,MAAO60C,KAG7BqQ,EAAIE,SACT,CACC,IAAIxyF,EAAM1D,KAAKosD,MAAMmqG,wBAWrB,GARW,MAAP7yJ,GAAmC,MAApB1D,KAAKszJ,cAEvB5vJ,EAAMmnD,YAAYoB,cAAcvoD,GAEhCA,EAAIs7C,IAAMh/C,KAAKszJ,YAAYt0G,EAAIuG,EAAGvG,EAAImO,GAASA,EAC/CzpD,EAAIknD,IAAM5qD,KAAKszJ,YAAY1oG,EAAIrF,EAAGqF,EAAIuC,GAASA,GAG5CntD,KAAKosD,MAAMsqG,iBAAiB12J,KAAK8wC,MAAMkc,MAC3C,CACC,IAAIr9B,EAAM3vB,KAAKosD,MAAMkqG,uBAAuBt2J,KAAK8wC,MAAMkc,MAEvD,GAAW,MAAPr9B,EACJ,CACC,IAAIgnI,EAAU32J,KAAKosD,MAAMwqG,WAAW52J,KAAK8wC,MAAMkc,MAE3C2pG,EAAU,IAEbhnI,EAAMk7B,YAAYoB,cAAct8B,GAEhCA,EAAIqvB,GAAKrvB,EAAIm2B,MAAQ6wG,EACrBhnI,EAAIi7B,GAAKj7B,EAAIg2B,OAASgxG,EACtBhnI,EAAIm2B,OAAS,EAAIn2B,EAAIm2B,MAAQ6wG,EAC7BhnI,EAAIg2B,QAAU,EAAIh2B,EAAIg2B,OAASgxG,GAGrB,MAAPjzJ,EAEHA,EAAMisB,GAINjsB,EAAMmnD,YAAYoB,cAAcvoD,GAChCA,EAAI6nD,UAAU57B,KAKN,MAAPjsB,IAEC1D,KAAK81K,eAAe92H,EAAIt7C,EAAIs7C,IAE/Bh/C,KAAK81K,eAAehwH,OAASpiD,EAAIs7C,EAAIh/C,KAAK81K,eAAe92H,EACzDh/C,KAAK81K,eAAe92H,EAAIt7C,EAAIs7C,GAGzBh/C,KAAK81K,eAAelrH,EAAIlnD,EAAIknD,IAE/B5qD,KAAK81K,eAAenwH,QAAUjiD,EAAIknD,EAAI5qD,KAAK81K,eAAelrH,EAC1D5qD,KAAK81K,eAAelrH,EAAIlnD,EAAIknD,GAGzB5qD,KAAK81K,eAAe92H,EAAIh/C,KAAK81K,eAAehwH,MAAQpiD,EAAIs7C,EAAIt7C,EAAIoiD,QAEnE9lD,KAAK81K,eAAehwH,OAAS9lD,KAAK81K,eAAe92H,EAChDh/C,KAAK81K,eAAehwH,MAAQpiD,EAAIs7C,EAAIt7C,EAAIoiD,OAGtC9lD,KAAK81K,eAAelrH,EAAI5qD,KAAK81K,eAAenwH,OAASjiD,EAAIknD,EAAIlnD,EAAIiiD,SAEpE3lD,KAAK81K,eAAenwH,QAAU3lD,KAAK81K,eAAelrH,EACjD5qD,KAAK81K,eAAenwH,OAASjiD,EAAIknD,EAAIlnD,EAAIiiD,SAK7C3lD,KAAK88D,OAAS,IAAIjS,aAAkC,MAApB7qD,KAAKszJ,YAAuBtzJ,KAAKszJ,YAAYt0G,EAAIuG,EAAGvG,EAAImO,GACtFntD,KAAK81K,eAAgB,EAAI3oH,GAA6B,MAApBntD,KAAKszJ,YAAuBtzJ,KAAKszJ,YAAY1oG,EAAIrF,EAAGqF,EAAIuC,GAC1FntD,KAAK81K,eAAgB,EAAI3oH,EAAOntD,KAAK81K,eAAehwH,MAAQqH,EAAOntD,KAAK81K,eAAenwH,OAASwH,GAE9F6oC,EAAIE,UAAgC,MAApBl2F,KAAKszJ,cAExBtzJ,KAAK88D,OAAO9d,GAAKh/C,KAAK8wC,MAAMkO,EAAIh/C,KAAKszJ,YAAYt0G,EACjDh/C,KAAK88D,OAAOlS,GAAK5qD,KAAK8wC,MAAM8Z,EAAI5qD,KAAKszJ,YAAY1oG,GAGlD4M,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEf,IAAIohD,EAAK,IAAIt0D,QAAQ3qD,KAAK88D,OAAO9R,aAAchrD,KAAK88D,OAAO7R,cAKvDi/D,GAHAr7E,EAAKowE,EAAGjgE,EAAIijF,EAAGjjF,EACfjQ,EAAKkwE,EAAGr0D,EAAIq3E,EAAGr3E,EAET4M,EAAM3oB,EAAK6oB,EAAM3oB,GACvBk7E,EAAMvyD,EAAM7oB,EAAK2oB,EAAMzoB,EAEvBgnI,EAAM7rD,EAAMr7E,EACZmnI,EAAM/rD,EAAMl7E,EAEZknI,EAAMj2K,KAAK88D,OAAO9d,EAAIh/C,KAAK8wC,MAAMkO,EACjCk3H,EAAMl2K,KAAK88D,OAAOlS,EAAI5qD,KAAK8wC,MAAM8Z,EAEjCurH,EAAM3+G,EAAMy+G,EAAMv+G,EAAMw+G,EACxBE,EAAM1+G,EAAMu+G,EAAMz+G,EAAM0+G,EAE5Bl2K,KAAK88D,OAAO9d,GAAK+2H,EACjB/1K,KAAK88D,OAAOlS,GAAKorH,EAGjBh2K,KAAK81K,eAAe92H,EAAIh/C,KAAKupK,YAAYvpK,KAAK81K,eAAe92H,EAAI+2H,EAAM5oH,GACvEntD,KAAK81K,eAAelrH,EAAI5qD,KAAKupK,YAAYvpK,KAAK81K,eAAelrH,EAAIorH,EAAM7oH,GACvEntD,KAAK81K,eAAehwH,MAAQ9lD,KAAKupK,YAAYvpK,KAAK81K,eAAehwH,OACjE9lD,KAAK81K,eAAenwH,OAAS3lD,KAAKupK,YAAYvpK,KAAK81K,eAAenwH,QAG7D3lD,KAAKosD,MAAMqzD,gBAAgBz/G,KAAK8wC,MAAMkc,OAAiB,GAAP+oH,GAAmB,GAAPC,GAOhEh2K,KAAKi1K,aAAe,EACpBj1K,KAAKk1K,aAAe,IANpBl1K,KAAKi1K,aAAej1K,KAAK8wC,MAAMkO,EAAIh/C,KAAK88D,OAAO9d,EAAIm3H,EACnDn2K,KAAKk1K,aAAel1K,KAAK8wC,MAAM8Z,EAAI5qD,KAAK88D,OAAOlS,EAAIwrH,GAQhDp2K,KAAKypK,mBAERzpK,KAAK6pK,kBAAkBlkF,GAGJ,MAAhB3lF,KAAKm1K,SAERn1K,KAAKmwK,eASPjyB,gBAAgBx+I,UAAUmqK,kBAAoB,SAASlkF,GAGtD,IAAIx4B,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MACxB5H,EAAKvlD,KAAKosD,MAAMuR,KAAKkG,UAGrBkmG,EAAY/pK,KAAK8wC,MAAMtsB,QAG3BxkB,KAAK8wC,MAAMkO,EAAIh/C,KAAK88D,OAAO9d,EAC3Bh/C,KAAK8wC,MAAM8Z,EAAI5qD,KAAK88D,OAAOlS,EAC3B5qD,KAAK8wC,MAAM8tB,OAAS,IAAIjU,QAAQ3qD,KAAK8wC,MAAMkO,EAAImO,EAAQ5H,EAAGvG,EAAGh/C,KAAK8wC,MAAM8Z,EAAIuC,EAAQ5H,EAAGqF,GACvF5qD,KAAK8wC,MAAMgV,MAAQ9lD,KAAK88D,OAAOhX,MAC/B9lD,KAAK8wC,MAAM6U,OAAS3lD,KAAK88D,OAAOnX,OAGhC3lD,KAAK8wC,MAAM4nE,cAAgB,KAG3B,IAAI9rB,EAAM5sF,KAAK8wC,MAAMozF,eACrBt3C,EAAM,IAAIjiC,QAAQiiC,EAAI5tC,EAAG4tC,EAAIhiC,GAG7B5qD,KAAK8wC,MAAMozF,eAAellF,EAAI,EAC9Bh/C,KAAK8wC,MAAMozF,eAAet5E,EAAI,EAC9B,IAAIorC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MAEhD,GAAW,MAAPgpC,EACJ,CACC,IAAI5hC,EAAS4hC,EAAI5hC,QAAUp0D,KAAKsgJ,YAElB,MAAVlsF,GAAmB4hC,EAAIE,WAE1Bl2F,KAAK8wC,MAAMozF,eAAellF,EAAIh/C,KAAK8wC,MAAM6sB,KAAKxQ,MAAQiH,EAAOpV,EAC7Dh/C,KAAK8wC,MAAMozF,eAAet5E,EAAI5qD,KAAK8wC,MAAM6sB,KAAKxQ,MAAQiH,EAAOxJ,GAG9D5qD,KAAK8wC,MAAM6sB,KAAK8kF,wBAAwBziJ,KAAK8wC,OAI9C9wC,KAAK8wC,MAAM6sB,KAAKvR,MAAMmB,aAAaC,OAAOxtD,KAAK8wC,OAAO,GAGtD9wC,KAAK8wC,MAAM6sB,KAAKygF,WAAWp+I,KAAK8wC,MAAMkc,MACtChtD,KAAK8wC,MAAM23F,SAAU,EACrBzoI,KAAK8wC,MAAM6sB,KAAK0gF,WAChBr+I,KAAKmqK,gBAGqB,MAAtBnqK,KAAK8wC,MAAM+0F,SAA8C,MAA3B7lI,KAAK8wC,MAAM+0F,QAAQ3yH,OAEpDlT,KAAK8wC,MAAM+0F,QAAQ3yH,KAAK0U,MAAMygC,WAAa,UAI5CroD,KAAK8wC,MAAMy4F,SAASwgC,IAQrB7rB,gBAAgBx+I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAEpD,GAAkB,MAAd3lF,KAAKoD,OAA+B,MAAdpD,KAAK8wC,MAC/B,CACC,IAAImB,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,aACvC70E,EAAQpD,KAAKoD,MACjBpD,KAAKoD,MAAQ,KAEbpD,KAAKosD,MAAM8W,WAAW5B,cACtB,IAEC,GAAIl+D,GAASokD,QAAQ+0B,cAEM,MAAtBv8E,KAAKg0K,gBAERh0K,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBn5E,GAAO+rB,QAAS,EAC3DnvB,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBn5E,GAAOqwD,gBAG/C,GAAIrwD,GAASokD,QAAQ80B,gBAEzB,GAAyB,MAArBt8E,KAAK21K,aACT,CACC,IAAIt7F,EAAQr6E,KAAK21K,cAAgB31K,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,GAEpE,GAATuf,GAEHr6E,KAAKq2K,WAAWr2K,KAAK8wC,MAAMkc,KAAMqtB,QAKlCr6E,KAAKs2K,kBAIP,CACC,IAAIrsF,EAAcjqF,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,YAC/C5Z,EAAQ3X,QAAQqQ,UAAUv2D,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC1EtD,EAAMt3D,KAAKs3D,KAAKqG,GAChBnG,EAAMx3D,KAAKw3D,KAAKmG,GAEhBhvB,EAAKoD,EAAM+M,EAAIh/C,KAAKinF,OACpBl4C,EAAKkD,EAAM2Y,EAAI5qD,KAAKknF,OAGpB5uB,EAAKd,EAAM3oB,EAAK6oB,EAAM3oB,EACtBwpB,EAAKb,EAAM7oB,EAAK2oB,EAAMzoB,EAE1BF,EAAKypB,EACLvpB,EAAKwpB,EAEL,IAAI/wB,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MACpBsoC,EAAUz1F,KAAKu1J,kBAAkBv1J,KAAK8wC,MAAO60C,GACjD3lF,KAAK2xJ,WAAW3xJ,KAAK8wC,MAAMkc,KAAMhtD,KAAKupK,YAAY16H,EAAKrH,GAAIxnC,KAAKupK,YAAYx6H,EAAKvH,GAChFpkC,EAAO6mF,EAAajqF,KAAKw5J,mBAAmB7zE,GAAK8P,IAGpD,QAECz1F,KAAKosD,MAAM8W,WAAW1B,YAGvBmkB,EAAGrO,UACHt3E,KAAK4qF,UASPszD,gBAAgBx+I,UAAU61J,kBAAoB,SAASzkH,EAAO60C,GAE7D,OAAO3lF,KAAKosD,MAAMmpG,kBAAkBv1J,KAAK8wC,QAU1CotG,gBAAgBx+I,UAAU42K,YAAc,aAYxCp4B,gBAAgBx+I,UAAU22K,WAAa,SAASrpH,EAAM+J,EAAO1wD,GAE5D,GAAa,GAAT0wD,EACJ,CACC,IAAI3wC,EAAQpmB,KAAKosD,MAAM8W,WAEvB,GAAI98C,EAAMuvE,SAAS3oC,IAAS5mC,EAAMjX,OAAO69C,GACzC,CACC,IAAK5mC,EAAMjX,OAAO69C,GAClB,CACC,IAAIlc,EAAQ9wC,KAAKosD,MAAMuR,KAAK5Q,SAASC,GACjCplC,EAAkB,MAATkpB,EAAiBA,EAAMlpB,MAAQ5nB,KAAKosD,MAAMyvD,aAAa7uD,GAEpE,GAAa,MAATplC,EACJ,CACC,IAAIu7F,GAASv7F,EAAMiiC,YAAYiR,iBAAmB,GAAK/D,EACvD/2D,KAAKosD,MAAMiV,cAAcxX,YAAYiR,eAAgBqoD,EAAO,CAACn2D,KAI/D,IAAIgpC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBjpC,GAErC,GAAW,MAAPgpC,EACJ,CACC,IAAIG,EAAOn2F,KAAKosD,MAAM6pC,gBAAgB5vF,GAStC,GAPY,MAAR8vF,GAAiB/vE,EAAMjX,OAAO9I,KAEjC2vF,EAAMA,EAAIxxE,QACVwxE,EAAI4D,OAAO7iC,EAAO,IAAIpM,QAAQwrC,EAAKrwC,MAAQ,EAAGqwC,EAAKxwC,OAAS,IAC5Dv/B,EAAMk3F,YAAYtwD,EAAMgpC,IAGpB5vE,EAAMuvE,SAAS3oC,KAAUgpC,EAAIE,UAAa9vE,EAAMjX,OAAO69C,GAK3D,IAFA,IAAIW,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKq2K,WAAWjwJ,EAAMynC,WAAWb,EAAM9jD,GAAI6tD,EAAO/J,OAaxDkxF,gBAAgBx+I,UAAUkrF,MAAQ,WAmBjC,GAjBmB,MAAf5qF,KAAK4zK,QAAgC,MAAd5zK,KAAKoD,OAA4C,MAA3BpD,KAAK4zK,OAAO5zK,KAAKoD,QACnB,QAA9CpD,KAAK4zK,OAAO5zK,KAAKoD,OAAO8P,KAAK0U,MAAMikB,UAEnC7rC,KAAK4zK,OAAO5zK,KAAKoD,OAAO8P,KAAK0U,MAAMikB,QAAU,IAG9C7rC,KAAK21K,aAAe,KACpB31K,KAAKk9I,YAAc,KACnBl9I,KAAKoD,MAAQ,KAGO,MAAhBpD,KAAKm1K,UAERn1K,KAAKm1K,QAAQzvJ,UACb1lB,KAAKm1K,QAAU,MAGZn1K,KAAKypK,mBAAoC,MAAfzpK,KAAK4zK,OACnC,CACC,IAAK,IAAI1qK,EAAI,EAAGA,EAAIlJ,KAAK4zK,OAAOhzK,OAAQsI,IAEjB,MAAlBlJ,KAAK4zK,OAAO1qK,KAEflJ,KAAK4zK,OAAO1qK,GAAGgK,KAAK0U,MAAMikB,QAAU,IAKZ,MAAtB7rC,KAAK8wC,MAAM+0F,SAA8C,MAA3B7lI,KAAK8wC,MAAM+0F,QAAQ3yH,OAEpDlT,KAAK8wC,MAAM+0F,QAAQ3yH,KAAK0U,MAAMygC,WAAa,IAI7C,GAA0B,MAAtBroD,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE1ClJ,KAAKg0K,cAAc9qK,GAAGimB,QAEzBnvB,KAAKg0K,cAAc9qK,GAAGimB,QAAS,EAC/BnvB,KAAKg0K,cAAc9qK,GAAG0hF,SAItB5qF,KAAKg0K,cAAc9qK,GAAG++C,YAAW,GAMR,MAAxBjoD,KAAK+jK,kBAER/jK,KAAK+jK,gBAAgB7wJ,KAAK0U,MAAMikB,QAAU,SAC1C7rC,KAAKyzK,gBAAkBzzK,KAAK0zK,mBAAmB1zK,KAAK8wC,OACpD9wC,KAAK88D,OAAS,IAAIjS,YAAY7qD,KAAKyzK,gBAAgBz0H,EAAGh/C,KAAKyzK,gBAAgB7oH,EAC1E5qD,KAAKyzK,gBAAgB3tH,MAAO9lD,KAAKyzK,gBAAgB9tH,QAClD3lD,KAAKmwK,eAGNnwK,KAAKwpK,aACLxpK,KAAKmqK,gBACLnqK,KAAKq1K,aAAe,KACpBr1K,KAAK81K,eAAiB,KACtB91K,KAAKypK,kBAAoB,MAS1BvrB,gBAAgBx+I,UAAUiyJ,WAAa,SAAS3kG,EAAMne,EAAIE,EAAI3rC,EAAO6mF,EAAassF,EAAa9gF,GAE9F,IAAIO,EAAMh2F,KAAKosD,MAAMhmC,MAAM62F,YAAYjwD,GAEvC,GAAW,MAAPgpC,EAEH,GAAI5yF,GAASokD,QAAQ60B,aACrB,CACC,IAAIlvB,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MAC5Bte,EAAK3uC,KAAKm8D,OAAOr8D,KAAK6zK,WAAW/2G,OAAO9R,aAAehrD,KAAKinF,QAAU95B,GACtEpe,EAAK7uC,KAAKm8D,OAAOr8D,KAAK6zK,WAAW/2G,OAAO7R,aAAejrD,KAAKknF,QAAU/5B,GAEtE6oC,EAAMA,EAAIxxE,QAEQ,MAAdwxE,EAAI5hC,OAEP4hC,EAAI5hC,OAAS,IAAIzJ,QAAQ9b,EAAIE,IAI7BinD,EAAI5hC,OAAOpV,GAAKnQ,EAChBmnD,EAAI5hC,OAAOxJ,GAAK7b,GAGjB/uC,KAAKosD,MAAMhmC,MAAMk3F,YAAYtwD,EAAMgpC,QAE/B,GAA2B,MAAvBh2F,KAAK81K,eACd,CACK3oH,EAAQntD,KAAKosD,MAAMuR,KAAKxQ,MAEH,GAArBntD,KAAKi1K,cAA0C,GAArBj1K,KAAKk1K,cAElCl1K,KAAKw2K,aAAaxpH,EAAM9sD,KAAKm8D,MAAMr8D,KAAKi1K,aAAe9nH,GAAQjtD,KAAKm8D,MAAMr8D,KAAKk1K,aAAe/nH,IAG/FntD,KAAKosD,MAAMulG,WAAW3kG,EAAMhtD,KAAK81K,eAAgBrgF,KAUpDyoD,gBAAgBx+I,UAAU82K,aAAe,SAASxpH,EAAMne,EAAIE,GAK3D,IAHA,IAAI3oB,EAAQpmB,KAAKosD,MAAM8W,WACnBvV,EAAavnC,EAAMwnC,cAAcZ,GAE5B9jD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAChC,CACC,IAAI6J,EAAQqT,EAAMynC,WAAWb,EAAM9jD,GAC/B8sF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBljF,GAE1B,MAAPijF,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAInyB,UAAUh1B,EAAIE,GAClB3oB,EAAMk3F,YAAYvqG,EAAOijF,MAwD5BkoD,gBAAgBx+I,UAAUklK,MAAQ,SAAS9nG,EAAQjuB,EAAIE,EAAI3rC,EAAO6mF,EAAa98B,EAAO5H,EAAIgxH,EAAaE,GAEtG,GAAIz2K,KAAK+yK,YACT,CACC,IAAI/zH,EAAI8d,EAAO9d,EAAI8d,EAAOhX,MAAQjX,EAC9B+b,EAAIkS,EAAOlS,EAAIkS,EAAOnX,OAAS5W,EAE/Bk7C,IAEHjrC,EAAIh/C,KAAKosD,MAAM0gC,KAAK9tC,EAAImO,GAASA,EACjCvC,EAAI5qD,KAAKosD,MAAM0gC,KAAKliC,EAAIuC,GAASA,GAGlC,IAAIjC,EAAO,IAAIL,YAAYiS,EAAO9d,EAAG8d,EAAOlS,EAAG,EAAG,GAGlD,OAFAM,EAAK1kD,IAAI,IAAIqkD,YAAY7L,EAAG4L,EAAG,EAAG,IAE3BM,EAIP,IAAI0gD,EAAK9uC,EAAOhX,MACZ+lD,EAAK/uC,EAAOnX,OACZ7W,EAAOguB,EAAO9d,EAAIuG,EAAGvG,EAAImO,EACzBqH,EAAQ1lB,EAAO88D,EACf58D,EAAM8tB,EAAOlS,EAAIrF,EAAGqF,EAAIuC,EACxBuH,EAAS1lB,EAAM68D,EAEfnyC,EAAK5qB,EAAO88D,EAAK,EACjBnuC,EAAKzuB,EAAM68D,EAAK,EAEhBzoG,EAAQ,GAEXsxD,GAAkB3lB,EAEdk7C,IAEHv1B,EAAS10D,KAAKosD,MAAM0gC,KAAKp4B,EAASvH,GAASA,IAGpC/pD,EAAQ,IAEhB4rC,GAAYD,EAERk7C,IAEHj7C,EAAMhvC,KAAKosD,MAAM0gC,KAAK99C,EAAMme,GAASA,IAI1B,GAAT/pD,GAAuB,GAATA,GAAuB,GAATA,GAE/B0rC,GAAQD,EAEJo7C,IAEHn7C,EAAO9uC,KAAKosD,MAAM0gC,KAAKh+C,EAAOqe,GAASA,IAGvB,GAAT/pD,GAAuB,GAATA,GAAuB,GAATA,IAEpCoxD,GAAS3lB,EAELo7C,IAEHz1B,EAAQx0D,KAAKosD,MAAM0gC,KAAKt4B,EAAQrH,GAASA,IAI3C,IAAIrH,EAAQ0O,EAAQ1lB,EAChB6W,EAAS+O,EAAS1lB,EAEtB,GAAIunI,EACJ,CACC,IAAIvgF,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MAEhD,GAAW,MAAPgpC,EACJ,CACC,IAAIoG,EAASpG,EAAIlwC,MAAQkwC,EAAIrwC,OAEjB,GAARviD,GAAqB,GAARA,GAAsB,GAATA,GAAuB,GAATA,EAE3C0iD,EAAQH,EAASy2C,EAIjBz2C,EAASG,EAAQs2C,EAGL,GAATh5F,IAEH0rC,EAAO0lB,EAAQ1O,EACf9W,EAAM0lB,EAAS/O,IAKlB,GAAI8wH,EACJ,CACC3wH,GAAUA,EAAQ8lD,EAClBjmD,GAAWA,EAASkmD,EAEpB,IAAI6qE,EAAMh9G,GAAM5qB,EAAOgX,EAAQ,GAC3B6wH,EAAMl5G,GAAMzuB,EAAM2W,EAAS,GAE/B7W,GAAQ4nI,EACR1nI,GAAO2nI,EACPniH,GAASkiH,EACThiH,GAAUiiH,EAIP7wH,EAAQ,IAEXhX,GAAQgX,EACRA,EAAQ5lD,KAAKk3D,IAAItR,IAIdH,EAAS,IAEZ3W,GAAO2W,EACPA,EAASzlD,KAAKk3D,IAAIzR,IAGnB,IAAI9iD,EAAS,IAAIgoD,YAAY/b,EAAOyW,EAAGvG,EAAImO,EAAOne,EAAMuW,EAAGqF,EAAIuC,EAAOrH,EAAOH,GAU7E,OARsB,MAAlB3lD,KAAKo0K,YAERvxK,EAAOijD,MAAQ5lD,KAAKwD,IAAIb,EAAOijD,MAAO9lD,KAAKo0K,UAAUp1H,EAAImO,EAAQntD,KAAKo0K,UAAUtuH,MAAQqH,EACvFjtD,KAAKwD,IAAI,EAAG1D,KAAK62D,GAAK1J,EAAQtqD,EAAOm8C,IACtCn8C,EAAO8iD,OAASzlD,KAAKwD,IAAIb,EAAO8iD,OAAQ3lD,KAAKo0K,UAAUxpH,EAAIuC,EAAQntD,KAAKo0K,UAAUzuH,OAASwH,EAC1FjtD,KAAKwD,IAAI,EAAG1D,KAAK82D,GAAK3J,EAAQtqD,EAAO+nD,KAGhC/nD,GASTq7I,gBAAgBx+I,UAAU8tD,OAAS,SAASopH,GAE3C52K,KAAKyzK,gBAAkBzzK,KAAK0zK,mBAAmB1zK,KAAK8wC,OACpD9wC,KAAK88D,OAAS,IAAIjS,YAAY7qD,KAAKyzK,gBAAgBz0H,EAAGh/C,KAAKyzK,gBAAgB7oH,EAAG5qD,KAAKyzK,gBAAgB3tH,MAAO9lD,KAAKyzK,gBAAgB9tH,QAC/H3lD,KAAKmwK,cAEAyG,GAEJ52K,KAAKmqK,iBAOPjsB,gBAAgBx+I,UAAUm3K,iBAAmB,WAG5C,IAAIh0K,EAAS,IAAI8nD,QAAQ,EAAG,GACxBm0C,EAAM9+F,KAAK0yH,UAYf,OAVmB,MAAf1yH,KAAK4zK,QAAkB5zK,KAAK4zK,OAAOhzK,OAAS,GAAuB,MAAlBZ,KAAK4zK,OAAO,KAC/D5zK,KAAK88D,OAAOhX,MAAQ,EAAI9lD,KAAK4zK,OAAO,GAAG92G,OAAOhX,MAAQ,EAAIg5C,GAC3D9+F,KAAK88D,OAAOnX,OAAS,EAAI3lD,KAAK4zK,OAAO,GAAG92G,OAAOnX,OAAS,EAAIm5C,KAE5DA,GAAO,EAEPj8F,EAAOm8C,EAAIh/C,KAAK4zK,OAAO,GAAG92G,OAAOhX,MAAQg5C,EACzCj8F,EAAO+nD,EAAI5qD,KAAK4zK,OAAO,GAAG92G,OAAOnX,OAASm5C,GAGpCj8F,GAqBRq7I,gBAAgBx+I,UAAUyqK,cAAgB,WAEzC,IAAIrrE,EAAM9+F,KAAK0yH,UACf1yH,KAAKuzK,iBAAmB,EACxBvzK,KAAKwzK,eAAiB,EACtB,IAAIhsI,EAAIxnC,KAAK88D,OAEb,GAAmB,MAAf98D,KAAK4zK,QAAkB5zK,KAAK4zK,OAAOhzK,OAAS,GAAuB,MAAlBZ,KAAK4zK,OAAO,GACjE,CACC,GAAkB,MAAd5zK,KAAKoD,OAAiBpD,KAAKozK,cAAgBpzK,KAAK4zK,OAAOhzK,QAAU,EACrE,CAEC,IAAI8lE,EAAU1mE,KAAK62K,mBACnB72K,KAAKuzK,iBAAmB7sG,EAAQ1nB,EAChCh/C,KAAKwzK,eAAiB9sG,EAAQ9b,EAED,GAAzB5qD,KAAKuzK,kBAAgD,GAAvBvzK,KAAKwzK,iBAEtChsI,EAAI,IAAIqjB,YAAYrjB,EAAEwX,EAAGxX,EAAEojB,EAAGpjB,EAAEse,MAAOte,EAAEme,QAEzCne,EAAEwX,GAAKh/C,KAAKuzK,iBAAmB,EAC/B/rI,EAAEse,OAAS9lD,KAAKuzK,iBAChB/rI,EAAEojB,GAAK5qD,KAAKwzK,eAAiB,EAC7BhsI,EAAEme,QAAU3lD,KAAKwzK,gBAGdxzK,KAAK4zK,OAAOhzK,QAAU,IAEpB4mC,EAAEse,MAAQ,EAAI9lD,KAAK4zK,OAAO,GAAG92G,OAAOhX,MAAQ,EAAIg5C,GACnDt3D,EAAEme,OAAS,EAAI3lD,KAAK4zK,OAAO,GAAG92G,OAAOnX,OAAS,EAAIm5C,GAEnD9+F,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,OACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,OACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,OACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,SAIpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,GACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,GACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,GACpC7rC,KAAK4zK,OAAO,GAAG1gK,KAAK0U,MAAMikB,QAAU,KAKvC,IAAIqyB,EAAI12B,EAAEwX,EAAIxX,EAAEse,MACZjlD,EAAI2mC,EAAEojB,EAAIpjB,EAAEme,OAEhB,GAAI3lD,KAAK+yK,YAER/yK,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI11G,EAAGr9D,OAGrC,CACC,IAAI64D,EAAKlyB,EAAEwX,EAAIxX,EAAEse,MAAQ,EACrB2X,EAAKj2B,EAAEojB,EAAIpjB,EAAEme,OAAS,EAE1B,GAAI3lD,KAAK4zK,OAAOhzK,QAAU,EAC1B,CACC,IAAIk2K,EAAM,CAAC,YAAa,WAAY,YAAa,WAAY,YAAa,WAAY,YAAa,YAE/Fj5G,EAAQ3X,QAAQqQ,UAAUv2D,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC1EtD,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEfk5G,EAAK72K,KAAKm8D,MAAc,EAARwB,EAAY39D,KAAKu2D,IAEjCwrE,EAAK,IAAIt3E,QAAQnjB,EAAEwjB,aAAcxjB,EAAEyjB,cACnC+O,EAAK9T,QAAQ6T,gBAAgB,IAAIpP,QAAQnjB,EAAEwX,EAAGxX,EAAEojB,GAAI4M,EAAKE,EAAKuqE,GAElEjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAI0a,EACPM,EAAGpP,EAAIpjB,EAAEojB,EACToP,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAIkf,EACPlE,EAAGpP,EAAIpjB,EAAEojB,EACToP,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAIxX,EAAEwX,EACTgb,EAAGpP,EAAI6S,EACPzD,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAIkf,EACPlE,EAAGpP,EAAI6S,EACPzD,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAIxX,EAAEwX,EACTgb,EAAGpP,EAAI/pD,EACPm5D,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAI0a,EACPM,EAAGpP,EAAI/pD,EACPm5D,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDo5D,EAAGhb,EAAIkf,EACPlE,EAAGpP,EAAI/pD,EACPm5D,EAAK9T,QAAQ6T,gBAAgBC,EAAIxC,EAAKE,EAAKuqE,GAE3CjiI,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI55G,EAAGhb,EAAGgb,EAAGpP,GAC1C5qD,KAAK4zK,OAAO,GAAG5oE,UAAU8rE,EAAI5wH,QAAQgZ,IAAI,EAAI63G,EAAID,EAAIl2K,UAErDZ,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAIl6G,EAAK15D,KAAK8wC,MAAMozF,eAAellF,EAAGye,EAAKz9D,KAAK8wC,MAAMozF,eAAet5E,QAE1F5qD,KAAK8wC,MAAMgV,OAAS,GAAK9lD,KAAK8wC,MAAM6U,QAAU,EAEtD3lD,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAIl6G,EAAK15D,KAAK8wC,MAAMozF,eAAellF,EAAGye,EAAKz9D,KAAK8wC,MAAMozF,eAAet5E,GAIlG5qD,KAAK20K,YAAY30K,KAAK4zK,OAAO,GAAI5zK,KAAK8wC,MAAMkO,EAAGh/C,KAAK8wC,MAAM8Z,IAK7D,GAA0B,MAAtB5qD,KAAK+zK,cACT,CACKl2G,EAAQ3X,QAAQqQ,UAAgC,MAArBv2D,KAAK21K,aAAwB31K,KAAK21K,aAAe31K,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC5HtD,EAAMt3D,KAAKs3D,IAAIqG,GACfnG,EAAMx3D,KAAKw3D,IAAImG,GAEfokE,EAAK,IAAIt3E,QAAQ3qD,KAAK8wC,MAAMka,aAAchrD,KAAK8wC,MAAMma,cACrD+O,EAAK9T,QAAQ6T,gBAAgB/5D,KAAKg3K,4BAA6Bx/G,EAAKE,EAAKuqE,GAE9C,MAA3BjiI,KAAK+zK,cAAc7gK,OAEtBlT,KAAK20K,YAAY30K,KAAK+zK,cAAe/5G,EAAGhb,EAAGgb,EAAGpP,GAG9C5qD,KAAK+zK,cAAc7gK,KAAK0U,MAAMygC,WAAcroD,KAAK8wC,MAAM6sB,KAAKvR,MAAMq4E,YAAe,SAAW,IAS9F,GAL4B,MAAxBzkI,KAAK+jK,kBAER/jK,KAAK+jK,gBAAgBtqG,SAAWzkC,OAAOh1B,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,MAG/D,MAArB96D,KAAKq1K,aAER,IAAK,IAAInsK,EAAI,EAAGA,EAAIlJ,KAAKq1K,aAAaz0K,OAAQsI,IAE7ClJ,KAAKq1K,aAAansK,GAAGskD,SAIvB,GAA0B,MAAtBxtD,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAC/C,CACC,IAAI66D,EAAO/jE,KAAKg0K,cAAc9qK,GAAGgkD,MAAMh6C,KAAK0U,MAAMikB,QAClD7rC,KAAKg0K,cAAc9qK,GAAGskD,SACtBxtD,KAAKg0K,cAAc9qK,GAAGgkD,MAAMh6C,KAAK0U,MAAMikB,QAAUk4B,EAGjD/jE,KAAKg0K,cAAc9qK,GAAGgkD,MAAMh6C,KAAK0U,MAAMygC,WAAcroD,KAAKosD,MAAMq4E,YAAe,SAAW,GAI5FzkI,KAAKi3K,yBAQN/4B,gBAAgBx+I,UAAUs3K,0BAA4B,WAErD,OAAO,IAAIrsH,QAAQ3qD,KAAK88D,OAAO9d,EAAIh/C,KAAK88D,OAAOhX,MAAQ,EAAG9lD,KAAK88D,OAAOlS,EAAI5qD,KAAKszK,yBAQhFp1B,gBAAgBx+I,UAAUu3K,sBAAwB,WAGjD,GAA4B,MAAxBj3K,KAAK+jK,gBAER,GAA4B,MAAxB/jK,KAAKk3K,gBACT,CACC,IAAI7wK,EAASrG,KAAKosD,MAAMhmC,MAAM2vE,UAAU/1F,KAAK8wC,MAAMkc,MAEnD,GAAIhtD,KAAKosD,MAAMhmC,MAAMuvE,SAAStvF,GAC9B,CACC,IAAIq4G,EAAS1+G,KAAKosD,MAAMuR,KAAK5Q,SAAS1mD,GAClCxF,EAAIb,KAAKk3K,gBAAgBp6G,OAEf,MAAV4hD,GAAmB79G,EAAEm+C,GAAK0/D,EAAO1/D,GAAKn+C,EAAE+pD,GAAK8zD,EAAO9zD,GACvD/pD,EAAEilD,OAAS44D,EAAO54D,OAASjlD,EAAE8kD,QAAU+4D,EAAO/4D,SAE9C3lD,KAAKk3K,gBAAgBp6G,OAAS4hD,EAC9B1+G,KAAKk3K,gBAAgB1pH,eAKtBxtD,KAAKk3K,gBAAgBxxJ,UACrB1lB,KAAKk3K,gBAAkB,UAGpB,GAAIl3K,KAAKizK,uBACd,CACK5sK,EAASrG,KAAKosD,MAAMhmC,MAAM2vE,UAAU/1F,KAAK8wC,MAAMkc,MAEnD,GAAIhtD,KAAKosD,MAAMhmC,MAAMuvE,SAAStvF,GAC9B,CACKq4G,EAAS1+G,KAAKosD,MAAMuR,KAAK5Q,SAAS1mD,GAExB,MAAVq4G,IAEH1+G,KAAKk3K,gBAAkBl3K,KAAKq0K,2BAA2B31D,GAEvD1+G,KAAKk3K,gBAAgBzzG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAAe7Z,YAAYoe,YAAcpe,YAAY6Z,YACvH1jE,KAAKk3K,gBAAgB7rF,eAAgB,EACrCrrF,KAAKk3K,gBAAgBz9G,SAAWzkC,OAAO0pF,EAAO92F,MAAMiiC,YAAYiR,iBAAmB,KACnF96D,KAAKk3K,gBAAgBxyJ,KAAK1kB,KAAKosD,MAAMU,UAAU24C,sBAYpDy4C,gBAAgBx+I,UAAUywK,YAAc,WAEnB,MAAhBnwK,KAAKm1K,UAERn1K,KAAKm1K,QAAQr4G,OAAS98D,KAAK88D,OAEvB98D,KAAKm1K,QAAQjiK,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,YAE9C/9D,KAAKm1K,QAAQr4G,OAAOhX,MAAQ5lD,KAAKwD,IAAI,EAAG1D,KAAKm1K,QAAQr4G,OAAOhX,MAAQ,GACpE9lD,KAAKm1K,QAAQr4G,OAAOnX,OAASzlD,KAAKwD,IAAI,EAAG1D,KAAKm1K,QAAQr4G,OAAOnX,OAAS,IAGvE3lD,KAAKm1K,QAAQ17G,SAAWzkC,OAAOh1B,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC/E96D,KAAKm1K,QAAQ3nH,UAGdxtD,KAAK+jK,gBAAgBjnG,OAAS98D,KAAK88D,OACnC98D,KAAK+jK,gBAAgBv2G,SAEO,MAAxBxtD,KAAKk3K,iBAERl3K,KAAKk3K,gBAAgB1pH,UASvB0wF,gBAAgBx+I,UAAUgmB,QAAU,WA6BnC,GA3B0B,MAAtB1lB,KAAKi8I,gBAERj8I,KAAK8wC,MAAM6sB,KAAKvR,MAAMosB,eAAex4E,KAAKi8I,eAC1Cj8I,KAAKi8I,cAAgB,MAGF,MAAhBj8I,KAAKm1K,UAERn1K,KAAKm1K,QAAQzvJ,UACb1lB,KAAKm1K,QAAU,MAGY,MAAxBn1K,KAAKk3K,kBAERl3K,KAAKk3K,gBAAgBxxJ,UACrB1lB,KAAKk3K,gBAAkB,MAGI,MAAxBl3K,KAAK+jK,kBAER/jK,KAAK+jK,gBAAgBr+I,UACrB1lB,KAAK+jK,gBAAkB,MAGxB/jK,KAAK6zK,WAAa,KAClB7zK,KAAKwpK,aAEc,MAAfxpK,KAAK4zK,OACT,CACC,IAAK,IAAI1qK,EAAI,EAAGA,EAAIlJ,KAAK4zK,OAAOhzK,OAAQsI,IAEvClJ,KAAK4zK,OAAO1qK,GAAGwc,UAGhB1lB,KAAK4zK,OAAS,KAGf,GAA0B,MAAtB5zK,KAAKg0K,cACT,CACC,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE9ClJ,KAAKg0K,cAAc9qK,GAAGwc,UAGvB1lB,KAAKg0K,cAAgB,OAIvBrzH,WAAWu9F,gBAA6C,qBAApBA,gBAAkCA,qBAAkB39I,EA2DxF+9I,cAAc5+I,UAAU0sD,MAAQ,KAOhCkyF,cAAc5+I,UAAUoxC,MAAQ,KAOhCwtG,cAAc5+I,UAAU6uJ,OAAS,KAQjCjQ,cAAc5+I,UAAU4tK,kBAAoB,KAO5ChvB,cAAc5+I,UAAUjB,MAAQ,KAOhC6/I,cAAc5+I,UAAUwtD,MAAQ,KAOhCoxF,cAAc5+I,UAAUy3K,MAAQ,KAOhC74B,cAAc5+I,UAAUm0K,WAAa,KAOrCv1B,cAAc5+I,UAAU0nK,cAAe,EAQvC9oB,cAAc5+I,UAAU66I,YAAa,EAQrC+D,cAAc5+I,UAAU03K,eAAgB,EAOxC94B,cAAc5+I,UAAU23K,uBAAwB,EAQhD/4B,cAAc5+I,UAAU43K,oBAAqB,EAS7Ch5B,cAAc5+I,UAAU63K,uBAAwB,EAShDj5B,cAAc5+I,UAAU83K,qBAAsB,EAQ9Cl5B,cAAc5+I,UAAU+3K,mBAAqB,GAQ7Cn5B,cAAc5+I,UAAUuzK,wBAAyB,EASjD30B,cAAc5+I,UAAUg4K,YAAa,EAQrCp5B,cAAc5+I,UAAUylK,wBAAyB,EAQjD7mB,cAAc5+I,UAAUi4K,iBAAkB,EAO1Cr5B,cAAc5+I,UAAUszK,YAAc,KAOtC10B,cAAc5+I,UAAUgzH,UAAY,EASpC4rB,cAAc5+I,UAAUmuK,gBAAiB,EAQzCvvB,cAAc5+I,UAAUk4K,mBAAoB,EAO5Ct5B,cAAc5+I,UAAUglB,KAAO,WAyB9B,GAvBA1kB,KAAKosD,MAAQpsD,KAAK8wC,MAAM6sB,KAAKvR,MAC7BpsD,KAAKuuJ,OAASvuJ,KAAK4tG,eACnB5tG,KAAKstK,kBAAoB,IAAI5vB,oBAAoB19I,KAAKosD,OAItDpsD,KAAK2lG,OAAS,GAId3lG,KAAK63K,UAAY73K,KAAK83K,mBAAmB93K,KAAK8wC,OAC9C9wC,KAAKktD,MAAQltD,KAAK2zK,qBAAqB3zK,KAAK63K,WAC5C73K,KAAKktD,MAAMuW,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACvD7Z,YAAYqe,kBAAoBre,YAAY6Z,YAC7C1jE,KAAKktD,MAAMxoC,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBACrCzlG,KAAKktD,MAAMm+B,eAAgB,EAC3BrrF,KAAKktD,MAAM89C,UAAUnhD,YAAYigB,qBACjCtiB,QAAQiyB,oBAAoBz5E,KAAKktD,MAAMh6C,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,OAG9D9wC,KAAK03K,WAAgC,MAAnB13K,KAAK8wC,MAAMj/B,MAC5B7R,KAAK8wC,MAAMj/B,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,WAE1C/9D,KAAK03K,WACV,CAEC,IAAI7gG,EAAc72E,KAAK8wC,MAAMi4F,yBAAwB,GAQrD,GANmB,MAAflyD,IAEH72E,KAAK03K,WAAiC,MAApB7gG,EAAYhlE,MAC7BglE,EAAYhlE,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,YAG5C/9D,KAAK03K,WACV,CAEC,IAAIK,EAAc/3K,KAAK8wC,MAAMi4F,yBAAwB,GAElC,MAAfgvC,IAEH/3K,KAAK03K,WAAiC,MAApBK,EAAYlmK,MAC9BkmK,EAAYlmK,KAAKqB,KAAKujB,YAAcz2B,KAAKosD,MAAM2R,YAMlD,GAAI/9D,KAAKizK,uBACT,CACC,IAAI5sK,EAASrG,KAAKosD,MAAMhmC,MAAM2vE,UAAU/1F,KAAK8wC,MAAMkc,MAEnD,GAAIhtD,KAAKosD,MAAMhmC,MAAMuvE,SAAStvF,GAC9B,CACC,IAAIq4G,EAAS1+G,KAAKosD,MAAMuR,KAAK5Q,SAAS1mD,GAExB,MAAVq4G,IAEH1+G,KAAKk3K,gBAAkBl3K,KAAKq0K,2BAA2B31D,GAEvD1+G,KAAKk3K,gBAAgBzzG,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAAe7Z,YAAYoe,YAAcpe,YAAY6Z,YACvH1jE,KAAKk3K,gBAAgB7rF,eAAgB,EACrCrrF,KAAKk3K,gBAAgBz9G,SAAWzkC,OAAO0pF,EAAO92F,MAAMiiC,YAAYiR,iBAAmB,KACnF96D,KAAKk3K,gBAAgBxyJ,KAAK1kB,KAAKosD,MAAMU,UAAU24C,qBAO9CzlG,KAAKosD,MAAMk0G,oBAAsBzkB,eAAen8I,UAAUwnK,UAC7DrrB,eAAen8I,UAAUwnK,UAAY,KAErClnK,KAAKm3K,MAAQn3K,KAAKg4K,cAEdh4K,KAAKi4K,0BAERj4K,KAAKk4K,aAAel4K,KAAKm4K,uBAK3Bn4K,KAAKkzD,MAAQ,IAAIvI,QAAQ3qD,KAAK8wC,MAAMozF,eAAellF,EAAGh/C,KAAK8wC,MAAMozF,eAAet5E,GAChF5qD,KAAK6zK,WAAa7zK,KAAKo4K,yBACvBp4K,KAAKq4K,SAASr4K,KAAK6zK,YACnB7zK,KAAK6zK,WAAW7oE,UAAUnhD,YAAYkgB,qBAEtC/pE,KAAKg0K,cAAgBh0K,KAAKi0K,sBAE1Bj0K,KAAKwtD,UAQN8wF,cAAc5+I,UAAUu0K,oBAAsB,WAE7C,OAAO,MAUR31B,cAAc5+I,UAAUu4K,sBAAwB,SAASjyH,GAExD,OAAOhmD,KAAKw3K,sBAAoE,MAA5Cx3K,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAC/DlzE,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAAerpB,YAAYC,MACL,GAAnD9pD,KAAK8wC,MAAMlpB,MAAMiiC,YAAY6lB,qBACwC,SAArExpB,QAAQxb,SAAS1qC,KAAK8wC,MAAMlpB,MAAOiiC,YAAYopB,YAAa,OAS/DqrE,cAAc5+I,UAAU44K,gBAAkB,SAAStyH,GAElD,OAAOwB,QAAQi0B,YAAYz1B,IAS5Bs4F,cAAc5+I,UAAU64K,mBAAqB,SAASvyH,GAErD,OAAOwB,QAAQi0B,YAAYz1B,IAQ5Bs4F,cAAc5+I,UAAUo4K,mBAAqB,SAAShnI,GAErD,OAAOA,EAAM6qB,gBAQd2iF,cAAc5+I,UAAU20K,2BAA6B,SAASv3G,GAE7D,IAAI5P,EAAQ,IAAI+gD,iBAAiBnxC,EAAQ,KAAM98D,KAAKs0K,qBAIpD,OAHApnH,EAAMq5C,YAAcvmG,KAAKu0K,0BACzBrnH,EAAMw3C,SAAW1kG,KAAKw0K,oBAEftnH,GAQRoxF,cAAc5+I,UAAUi0K,qBAAuB,SAAShuE,GAEvD,IAAIz4C,EAAQ,IAAIltD,KAAK8wC,MAAMoc,MAAMn7B,YAQjC,OAPAm7B,EAAMm5C,SAAU,EAChBn5C,EAAMnsD,MAAMf,KAAK8wC,OAEjBoc,EAAMw3C,SAAW1kG,KAAKw0K,oBACtBtnH,EAAMovC,OAASt8F,KAAKs0K,oBACpBpnH,EAAMi7C,UAAW,EAEVj7C,GAQRoxF,cAAc5+I,UAAU40K,kBAAoB,WAE3C,OAAOzqH,YAAY6gB,sBAQpB4zE,cAAc5+I,UAAU60K,wBAA0B,WAEjD,OAAO1qH,YAAYghB,4BAQpByzE,cAAc5+I,UAAU80K,kBAAoB,WAE3C,OAAO3qH,YAAYkhB,uBASpBuzE,cAAc5+I,UAAU2uK,kBAAoB,SAASrhH,GAEpD,OAAO,GAQRsxF,cAAc5+I,UAAU+qF,UAAY,SAASzrC,EAAG4L,GAE/C,OAAS5qD,KAAK6tK,eAA+C,KAA7B7tK,KAAKosD,MAAMq+B,UAAUzrC,EAAG4L,IAQzD0zF,cAAc5+I,UAAUkuG,aAAe,WAEtC,IAAI2gD,EAAS,IAAIpR,aAAan9I,KAAKosD,OAC/B3a,EAAOzxC,KA6DX,OAzDAuuJ,EAAOr2E,QAAU,SAASyN,GAEzB,IAAI34B,EAAOmwF,aAAaz9I,UAAUw4E,QAAQn3E,MAAMf,KAAMgB,WAStD,GANKgsD,GAAQvb,EAAKX,MAAMkc,MAAgB,MAARA,GAAsC,MAArBvb,EAAKo4C,eAErD78B,EAAOvb,EAAK2a,MAAMq+B,UAAUh5C,EAAKo4C,aAAa7qC,EAAGvN,EAAKo4C,aAAaj/B,IAIxD,MAARoC,IAAiBhtD,KAAKosD,MAAMitG,kBAAkBrsG,GAClD,CACC,IAAI3mD,EAASrG,KAAKosD,MAAM8W,WAAW6yB,UAAU/oC,GAEzChtD,KAAKosD,MAAM8W,WAAWyyB,SAAStvF,IAAWrG,KAAKosD,MAAMitG,kBAAkBhzJ,KAE1E2mD,EAAO3mD,GAIT,IAAI+f,EAAQqrB,EAAK2a,MAAM8W,WAgBvB,OAdKljE,KAAKosD,MAAMizD,WAAWryD,IAA8B,MAArBvb,EAAKo4C,cACxC7pF,KAAKosD,MAAM0zG,oBAAoB9yG,EAAMvb,EAAKo4C,aAAa7qC,EAAGvN,EAAKo4C,aAAaj/B,KAC1EnZ,EAAK48H,kBAAkBrhH,IAAWA,GAAQvb,EAAKX,MAAMkc,MAC9C,MAARA,IAAiBvb,EAAK2a,MAAMs+F,kBAAoBtkI,EAAMjX,OAAO69C,IAC9D5mC,EAAMk2F,WAAW7qE,EAAKX,MAAMkc,KAAMA,MAElCA,EAAO,MAGHhtD,KAAKosD,MAAMitG,kBAAkBrsG,KAEjCA,EAAO,MAGDA,GAIRuhG,EAAOme,aAAe,SAAS57H,GAE9B,IAAI1qB,EAAQqrB,EAAK2a,MAAM8W,WACnB28C,EAAQpuE,EAAK2a,MAAMuR,KAAK+lF,gBAAgB5yG,EAC3CW,EAAK2a,MAAMuR,KAAK5Q,SAAS3mC,EAAMi2F,YAAY5qE,EAAKX,MAAMkc,MACrDvb,EAAKkmC,YAAalmC,EAAKkmC,UACrB6gG,EAAsB,MAAT34D,EAAiBA,EAAM7yD,KAAO,KAC3C9oD,EAAUutC,EAAa,SAAIX,EAAMkc,KAAOwrH,EACxCp0K,EAAUqtC,EAAa,SAAI+mI,EAAY1nI,EAAMkc,KAKjD,OAFAvb,EAAKhzC,MAAQgzC,EAAK88H,mBAAmBrqK,EAAQE,GAExB,MAAdqtC,EAAKhzC,OAGN8vJ,GAeRjQ,cAAc5+I,UAAU6uK,mBAAqB,SAASrqK,EAAQE,GAE7D,OAAOpE,KAAKosD,MAAM4mG,uBAAuBhzJ,KAAK8wC,MAAMkc,KAAM9oD,EAAQE,IASlEk6I,cAAc5+I,UAAUs4K,YAAc,WAKtC,IAHA,IAAIhrH,EAAOhtD,KAAK8wC,MAAMkc,KAClBmqH,EAAQ,GAEHjuK,EAAI,EAAGA,EAAIlJ,KAAK63K,UAAUj3K,OAAQsI,IAE1C,GAAIlJ,KAAKy4K,gBAAgBvvK,GACzB,CACC,IAAIhF,EAAc,GAALgF,EACT9E,EAAS8E,GAAKlJ,KAAK63K,UAAUj3K,OAAS,EACtCw5D,EAAWl2D,GAAUE,GAErBg2D,GAAYp6D,KAAKosD,MAAMiyG,eAAerxG,KAExC9G,QAAQ1jD,KAAKxC,MAAM,SAASoD,GAE5B,IAAIs1K,EAAO14K,KAAK24K,kBAAkBv1K,GAClCpD,KAAKq4K,SAASK,EAAMxyH,QAAQ1jD,KAAKxC,KAAMkmD,QAAQ1jD,KAAKxC,MAAM,WAErDA,KAAKq3K,uBAERr3K,KAAK44K,YAAY54K,KAAK8wC,MAAO1tC,QAI3BpD,KAAK64K,gBAAgB3vK,IAExBwvK,EAAK1tE,UAAU,EAAanhD,YAAYmgB,uBAAyBngB,YAAYogB,oBAG9EktG,EAAMpmK,KAAK2nK,GAENt+G,IAEJp6D,KAAK2lG,OAAO50F,KAAK,IAAI45C,QAAQ,EAAE,IAC/B+tH,EAAKxlK,KAAK0U,MAAMygC,WAAa,YArB/B,CAuBIn/C,GAKP,OAAOiuK,GASP74B,cAAc5+I,UAAUy4K,mBAAqB,WAE7C,IAAInrH,EAAOhtD,KAAK8wC,MAAMkc,KAElBmqH,GADOn3K,KAAK63K,UAAU,GACd,IAEZ,GAAI73K,KAAKosD,MAAMiyG,eAAerxG,GAE7B,IAAK,IAAI9jD,EAAI,EAAGA,EAAIlJ,KAAK63K,UAAUj3K,OAAQsI,IAEzCg9C,QAAQ1jD,KAAKxC,MAAM,SAAS04K,GAE5B14K,KAAKq4K,SAASK,GACdA,EAAK1tE,UAAUnhD,YAAYqgB,4BAC3BitG,EAAMpmK,KAAK2nK,KAJZ,CAKI14K,KAAK24K,qBAIX,OAAOxB,GAQR74B,cAAc5+I,UAAUm5K,gBAAkB,SAASz1K,GAElD,OAAO,GAQRk7I,cAAc5+I,UAAU+4K,gBAAkB,SAASr1K,GAElD,IAAIc,EAASlE,KAAK8wC,MAAMi4F,yBAAwB,GAC5C3kI,EAASpE,KAAK8wC,MAAMi4F,yBAAwB,GAC5C/yC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MAC5CyoE,EAAoB,MAAPz/B,EAAeh2F,KAAKosD,MAAMuR,KAAK8lF,aAAazjJ,KAAK8wC,MAAOklD,EAAI2P,OAAQzhG,EAAQE,GAAU,KAEvG,OAAOqxH,GAAamc,YAAYC,gBAA2B,GAATzuI,GAAcA,GAASpD,KAAK63K,UAAUj3K,OAAS,GAYlG09I,cAAc5+I,UAAUi5K,kBAAoB,SAASv1K,GAEpD,GAAwB,MAApBpD,KAAKgzK,YACT,CACC,IAAI9lH,EAAQ,IAAIoiD,aAAa,IAAIzkD,YAAY,EAAG,EAAG7qD,KAAKgzK,YAAYltH,MAAO9lD,KAAKgzK,YAAYrtH,QAAS3lD,KAAKgzK,YAAYp+J,KAKtH,OAFAs4C,EAAMysD,qBAAsB,EAErBzsD,EAIP,IAAI1lB,EAAIqiB,YAAYuhB,YAOpB,OALIprE,KAAK03K,aAERlwI,GAAK,GAGC,IAAIymE,iBAAiB,IAAIpjD,YAAY,EAAG,EAAGrjB,EAAGA,GAAIqiB,YAAYyhB,iBAAkBzhB,YAAY0hB,qBASrG+yE,cAAc5+I,UAAU04K,uBAAyB,WAEhD,GAA6B,MAAzBp4K,KAAK84K,iBACT,CACC,IAAI5rH,EAAQ,IAAIoiD,aAAa,IAAIzkD,YAAY,EAAG,EAAG7qD,KAAK84K,iBAAiBhzH,MAAO9lD,KAAK84K,iBAAiBnzH,QAAS3lD,KAAK84K,iBAAiBlkK,KAKrI,OAFAs4C,EAAMysD,qBAAsB,EAErBzsD,EAIP,IAAI1lB,EAAIqiB,YAAYwhB,kBACpB,OAAO,IAAI4iC,iBAAiB,IAAIpjD,YAAY,EAAG,EAAGrjB,EAAGA,GAAIqiB,YAAY2hB,uBAAwB3hB,YAAY0hB,qBAa3G+yE,cAAc5+I,UAAU24K,SAAW,SAASK,EAAM7+F,GAE7C75E,KAAK03K,YAERgB,EAAKj1G,QAAU5Z,YAAYue,mBAC3BswG,EAAKh0J,KAAK1kB,KAAKosD,MAAM2R,aAIrB26G,EAAKj1G,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YACjD7Z,YAAYqe,kBAAoBre,YAAY6Z,YAC7Cg1G,EAAKh0J,KAAK1kB,KAAKosD,MAAMU,UAAU24C,mBAGhCj+C,QAAQiyB,oBAAoBi/F,EAAKxlK,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,MACtD,KAAM,KAAM,KAAM+oC,IAGhBj5B,SAASM,WAAsC,GAAzBjmC,SAASkmC,eAElCqG,QAAQD,YAAYmxH,EAAKxlK,KAAM,aAAa,SAAS8yC,GAIpD,OAFAwB,QAAQ8vB,QAAQtxB,IAET,KAILpF,SAAS+B,UAEZ+1H,EAAKxlK,KAAKglB,aAAa,iBAAkB,SAS3ComH,cAAc5+I,UAAUk1K,kBAAoB,SAASjvF,GAGpD,IAAImZ,EAAQt3C,QAAQ6wB,aAAasN,EAAGlO,YAAgC,EAAjBz3E,KAAK0yH,UACpD5oH,EAAO9J,KAAKmlK,yBAA2BvkH,SAASE,OAASg+C,EAAM,GAClE,IAAIj0C,YAAY86B,EAAG3N,YAAc8mB,EAAKnZ,EAAG1N,YAAc6mB,EAAK,EAAIA,EAAK,EAAIA,GAAO,KAC7E+yE,EAAY,KACZhvK,EAAS,KAEb,SAASgyK,EAAW3nH,GAEnB,GAAa,MAATA,GAA6C,QAA5BA,EAAMh6C,KAAK0U,MAAMikB,SAAoD,UAA/BqhB,EAAMh6C,KAAK0U,MAAMygC,aAC1Es9B,EAAGhO,SAASzqB,IAAkB,MAAPpjD,GAAeo8C,QAAQ8W,WAAW9P,EAAM4P,OAAQhzD,IACzE,CACC,IAAI+kC,EAAK82C,EAAG3N,YAAc9qB,EAAM4P,OAAO9R,aACnCjc,EAAK42C,EAAG1N,YAAc/qB,EAAM4P,OAAO7R,aACnCt7B,EAAMkf,EAAKA,EAAKE,EAAKA,EAEzB,GAAiB,MAAb8iI,GAAqBliJ,GAAOkiJ,EAI/B,OAFAA,EAAYliJ,GAEL,EAIT,OAAO,EAGR,GAA0B,MAAtB3vB,KAAKg0K,eAAyBh0K,KAAK80K,oBAAoBnvF,GAG1D,IAAK,IAAIz8E,EAAIlJ,KAAKg0K,cAAcpzK,OAAS,EAAGsI,GAAK,EAAGA,IAEnD,GAAI2rK,EAAW70K,KAAKg0K,cAAc9qK,GAAGgkD,OAGpC,OAAO1F,QAAQ+0B,cAAgBrzE,EAUlC,IALIy8E,EAAGhO,SAAS33E,KAAK8wC,MAAMj/B,OAASgjK,EAAW70K,KAAK6zK,eAEnDhxK,EAAS2kD,QAAQ60B,cAGA,MAAdr8E,KAAKm3K,MAER,IAASjuK,EAAI,EAAGA,EAAIlJ,KAAKm3K,MAAMv2K,OAAQsI,IAElC2rK,EAAW70K,KAAKm3K,MAAMjuK,MAEzBrG,EAASqG,GAKZ,GAAyB,MAArBlJ,KAAKk4K,cAAwBl4K,KAAK+4K,sBAAsBpzF,GAE3D,IAASz8E,EAAI,EAAGA,EAAIlJ,KAAKk4K,aAAat3K,OAAQsI,IAEzC2rK,EAAW70K,KAAKk4K,aAAahvK,MAEhCrG,EAAS2kD,QAAQg1B,eAAiBtzE,GAKrC,OAAOrG,GASRy7I,cAAc5+I,UAAUq5K,sBAAwB,SAASpzF,GAExD,OAAO,GASR24D,cAAc5+I,UAAUo1K,oBAAsB,SAASnvF,GAEtD,OAAO,GAYR24D,cAAc5+I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEpD,IAAIovF,EAAS/0K,KAAK40K,kBAAkBjvF,GAEpC,GAAkB,MAAd3lF,KAAKm3K,OAAuC,MAAtBn3K,KAAKm3K,MAAMpC,GACrC,CACC,IAAIl0K,EAAIb,KAAKm3K,MAAMpC,GAAQj4G,OAC3B98D,KAAK4yK,UAAY,IAAIjoH,QAAQ9pD,EAAEmqD,aAAcnqD,EAAEoqD,cAG5CjrD,KAAKu6I,YAAwB,MAAVw6B,GAAkB/0K,KAAKs4K,gBAAgB3yF,EAAGlO,aAEhEz3E,KAAKy3J,SAASz3J,KAAK8wC,MAAO60C,EAAGlO,YAC7BkO,EAAGrO,WAEe,MAAVy9F,IAAmBpvF,EAAGtO,cAAgBr3E,KAAKosD,MAAM+B,cAErDnuD,KAAKo3K,eAAiBp3K,KAAKu4K,mBAAmB5yF,EAAGlO,YAEpDz3E,KAAK44K,YAAY54K,KAAK8wC,MAAOikI,IAErBA,GAAUvtH,QAAQ60B,cAAgBr8E,KAAKosD,MAAMiwG,eAAe12E,EAAGzN,cAEnE68F,GAAUvtH,QAAQg1B,gBAErBt2B,QAAQ+G,WAAWjtD,KAAKk4K,aAAa1wH,QAAQg1B,eAAiBu4F,GAAQ7hK,KAAM,KAG7ElT,KAAKiL,MAAM06E,EAAG/N,OAAQ+N,EAAG7N,OAAQi9F,IAGlCpvF,EAAGrO,YASLgnE,cAAc5+I,UAAUuL,MAAQ,SAAS+zC,EAAG4L,EAAGxnD,GAS9C,GAPApD,KAAKinF,OAASjoC,EACdh/C,KAAKknF,OAASt8B,EAEd5qD,KAAK23E,SAA0B,MAAd33E,KAAKm3K,OAAkC,GAAT/zK,EAC/CpD,KAAKg5K,SAA0B,MAAdh5K,KAAKm3K,OAAyB/zK,GAASpD,KAAKm3K,MAAMv2K,OAAS,EAC5EZ,KAAKi5K,QAAU71K,GAASokD,QAAQ60B,aAE5Br8E,KAAK23E,UAAY33E,KAAKg5K,SAC1B,CACC,IAAIhsH,EAAOhtD,KAAK8wC,MAAMkc,KAClBoN,EAAWp6D,KAAKosD,MAAMhmC,MAAMi2F,YAAYrvD,EAAMhtD,KAAK23E,WAEtC,MAAZvd,GAAoBp6D,KAAKosD,MAAMgyG,uBAAuBpxG,EAAMhtD,KAAK23E,WACxD,MAAZvd,GAAoBp6D,KAAKosD,MAAM+qG,qBAAqBnqG,EAAMoN,EAAUp6D,KAAK23E,aAE1E33E,KAAKoD,MAAQA,QAKdpD,KAAKoD,MAAQA,EAId,GAAIpD,KAAKoD,OAASokD,QAAQ+0B,eAAiBv8E,KAAKoD,MAAQokD,QAAQg1B,gBAErC,MAAtBx8E,KAAKg0K,cAER,IAAK,IAAI9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE1CA,GAAKs+C,QAAQ+0B,cAAgBv8E,KAAKoD,OAErCpD,KAAKg0K,cAAc9qK,GAAG++C,YAAW,IAYtCq2F,cAAc5+I,UAAUw5K,kBAAoB,SAASjnI,EAAOmoB,GAE3D,OAAOp6D,KAAK8wC,MAAMtsB,SASnB85H,cAAc5+I,UAAUy5K,2BAA6B,WAEpD,OAAOn5K,KAAKosD,MAAMygC,SAAW7sF,KAAKosD,MAAMuR,KAAKxQ,MAAQ,GAQtDmxF,cAAc5+I,UAAUs8I,WAAa,SAASr2D,EAAI1zC,KAOlDqsG,cAAc5+I,UAAU8pK,WAAa,aAOrClrB,cAAc5+I,UAAU6pK,YAAc,SAAS3oK,GAE9C,OAAOV,KAAKm8D,MAAMz7D,IAQnB09I,cAAc5+I,UAAU05K,uBAAyB,SAASzzF,GAEzD,OAAO3lF,KAAK23K,kBAAoBnwH,QAAQm0B,UAAUgK,EAAGlO,aAQtD6mE,cAAc5+I,UAAUqgK,iBAAmB,SAASp6E,GAEnD,IAAIhoB,EAAO39D,KAAKosD,MAAMU,UAClBK,EAAQwQ,EAAKxQ,MACblb,EAAQ,IAAI0Y,QAAQ3qD,KAAKupK,YAAY5jF,EAAG3N,YAAc7qB,GAASA,EAClEntD,KAAKupK,YAAY5jF,EAAG1N,YAAc9qB,GAASA,GAExCg4C,EAAKnlG,KAAKm5K,6BACVt0E,GAAY,EACZG,GAAY,EAEhB,GAAIG,EAAK,GAAKnlG,KAAKo5K,uBAAuBzzF,GAC1C,CACC,SAAS0zF,EAAYr/G,GAEpB,GAAU,MAANA,EACJ,CACC,IAAIhb,EAAIgb,EAAGhb,EAEP9+C,KAAKk3D,IAAInlB,EAAM+M,EAAIA,GAAKmmD,IAE3BlzD,EAAM+M,EAAIA,EACV6lD,GAAY,GAGb,IAAIj6C,EAAIoP,EAAGpP,EAEP1qD,KAAKk3D,IAAInlB,EAAM2Y,EAAIA,GAAKu6C,IAE3BlzD,EAAM2Y,EAAIA,EACVo6C,GAAY,IAMf,SAASs0E,EAAel/G,GAEP,MAAZA,GAEHi/G,EAAY36K,KAAKsB,KAAM,IAAI2qD,QAAQgT,EAAK80E,kBAAkBr4E,GACxDuD,EAAKw0E,kBAAkB/3E,KAO3B,GAHAk/G,EAAe56K,KAAKsB,KAAMA,KAAK8wC,MAAMi4F,yBAAwB,IAC7DuwC,EAAe56K,KAAKsB,KAAMA,KAAK8wC,MAAMi4F,yBAAwB,IAE5B,MAA7B/oI,KAAK8wC,MAAM6qB,eAEd,IAAK,IAAIzyD,EAAI,EAAGA,EAAIlJ,KAAK8wC,MAAM6qB,eAAe/6D,OAAQsI,IAErDmwK,EAAY36K,KAAKsB,KAAMA,KAAK8wC,MAAM6qB,eAAezyD,IAKpD,GAAIlJ,KAAKosD,MAAMqgC,mBAAmB9G,EAAGlO,YACrC,CACC,IAAIlyB,EAAKoY,EAAKkG,UAETghC,IAEJ5yD,EAAM+M,GAAKh/C,KAAKosD,MAAM0gC,KAAK76C,EAAM+M,EAAImO,EAAQ5H,EAAGvG,GAAKuG,EAAGvG,GAAKmO,GAGzD63C,IAEJ/yD,EAAM2Y,GAAK5qD,KAAKosD,MAAM0gC,KAAK76C,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,GAAKrF,EAAGqF,GAAKuC,GAI/D,OAAOlb,GAQRqsG,cAAc5+I,UAAU65K,wBAA0B,SAAS5zF,GAI1D,GAFA3lF,KAAKstK,kBAAkBl8J,OAAOu0E,EAAI3lF,KAAK23E,UAAU,EAAMgO,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,OAAS,KAAOltD,KAAK6pF,cAEnE,MAAvC7pF,KAAKstK,kBAAkB1vB,cAAoE,MAA5C59I,KAAKstK,kBAAkB0B,kBAC1E,CAG8B,MAAzBhvK,KAAKuuJ,OAAO/hE,WAAoD,MAA/BxsF,KAAKuuJ,OAAO/hE,UAAU17C,OAC1D9wC,KAAKuuJ,OAAO/hE,UAAU17C,MAAMkc,MAAQhtD,KAAKstK,kBAAkB1vB,aAAa5wF,KAG9B,eAAtChtD,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,SAE/Bt8F,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAS,cACrCt8F,KAAKuuJ,OAAO/hE,UAAUwxD,WAKvBh+I,KAAKuuJ,OAAOqe,SAAS5sK,KAAKstK,kBAAkB1vB,aAAa5wF,KAAM,eAGhE,IAAI5mC,EAAQpmB,KAAKosD,MAAM8W,WACnB28C,EAAQ7/G,KAAKosD,MAAMuR,KAAK+lF,gBAAgB1jJ,KAAK8wC,MAC/C9wC,KAAKosD,MAAMuR,KAAK5Q,SAAS3mC,EAAMi2F,YAAYr8G,KAAK8wC,MAAMkc,MACtDhtD,KAAK23E,YAAa33E,KAAK23E,UACrB6gG,EAAsB,MAAT34D,EAAiBA,EAAM7yD,KAAO,KAC3C9oD,EAAUlE,KAAa,SAAIA,KAAKstK,kBAAkB1vB,aAAa5wF,KAAOwrH,EACtEp0K,EAAUpE,KAAa,SAAIw4K,EAAYx4K,KAAKstK,kBAAkB1vB,aAAa5wF,KAG/EhtD,KAAKvB,MAAQuB,KAAKuuK,mBAAmBrqK,EAAQE,GAC7C,IAAIvB,EAAS,KAWb,OATkB,MAAd7C,KAAKvB,MAERoE,EAAS7C,KAAKstK,kBAAkB1vB,aAIhC59I,KAAKstK,kBAAkB1iF,QAGjB/nF,EAEH,GAAK7C,KAAKosD,MAAMqtG,sBAAsB9zE,EAAGlO,YAgB7C,OAFAz3E,KAAKuuJ,OAAO3jE,QAEL,KAdP5qF,KAAKuuJ,OAAO9+G,QAAQk2C,GACpB,IAAI70C,EAAQ9wC,KAAKuuJ,OAAO+d,gBAOxB,OALa,MAATx7H,GAAiB9wC,KAAKosD,MAAMmvG,aAAazqH,EAAMkc,OAElDhtD,KAAKuuJ,OAAO3jE,QAGN5qF,KAAKuuJ,OAAO+d,iBAoBrBhuB,cAAc5+I,UAAU85K,iBAAmB,SAASx/G,EAAI2rB,GAEvD,IAAIv4B,EAAWptD,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MACjD24C,EAA6B,MAAnBv4C,EAASu4C,OAAkBv4C,EAASu4C,OAAOr7F,QAAU,KAC/D2nC,EAAQ,IAAI0Y,QAAQqP,EAAGhb,EAAGgb,EAAGpP,GAC7B/nD,EAAS,KAEb,GAAK7C,KAAK23E,UAAa33E,KAAKg5K,SAkGnBh5K,KAAKosD,MAAMm+F,sBAEnB5kD,EAAS,WAhGT,GAFA3lG,KAAK6+D,aAAa5sB,GAAO,GAEX,MAAV0zD,EAEHA,EAAS,CAAC1zD,OAGX,CAQC,GANIjyC,KAAKoD,OAASokD,QAAQg1B,gBAEzBmpB,EAAOl8F,OAAO+9C,QAAQg1B,eAAiBx8E,KAAKoD,MAAO,EAAG6uC,IAIlDjyC,KAAK23E,WAAa33E,KAAKg5K,SAC5B,CACC,IAAK,IAAI9vK,EAAI,EAAGA,EAAIlJ,KAAKm3K,MAAMv2K,OAAQsI,IAEtC,GAAIA,GAAKlJ,KAAKoD,MACd,CACC,IAAIs1K,EAAO14K,KAAKm3K,MAAMjuK,GAEV,MAARwvK,GAAgBxyH,QAAQ6W,SAAS27G,EAAK57G,OAAQ9C,EAAGhb,EAAGgb,EAAGpP,KAEtD5qD,KAAKoD,OAASokD,QAAQg1B,eAEzBmpB,EAAOl8F,OAAO+9C,QAAQg1B,eAAiBx8E,KAAKoD,MAAO,GAInDuiG,EAAOl8F,OAAOzJ,KAAKoD,MAAQ,EAAG,GAG/BP,EAAS8iG,GAMZ,GAAc,MAAV9iG,GAAkB7C,KAAKu3K,wBAAgC,MAAN5xF,IAAen+B,QAAQm0B,UAAUgK,EAAGlO,aACzF,CACC,IAAIqnB,EAAM9+F,KAAKosD,MAAMsmE,UAAY1yH,KAAKosD,MAAMsmE,UACxCt7D,EAAMp3D,KAAK8wC,MAAM6qB,eAAerxD,QACpC8sD,EAAIp3D,KAAKoD,OAAS42D,EAGlB,IAAIplD,EAAM5U,KAAK8wC,MAAMi4F,yBAAwB,GAE7C,GAAW,MAAPn0H,EACJ,CACC,IAAI9T,EAAId,KAAKosD,MAAM+2F,wBAAwBnjJ,KAAK8wC,MAAOl8B,GAAK,GAGnD,MAAL9T,GAAsD,MAAzCd,KAAKosD,MAAMi3F,mBAAmBzuI,EAAK9T,KAEnDs2D,EAAI,GAAK,IAAIzM,QAAQ/1C,EAAI+oD,KAAK80E,kBAAkB79H,GAAMA,EAAI+oD,KAAKw0E,kBAAkBv9H,KAInF,IAAI40G,EAAMxpH,KAAK8wC,MAAMi4F,yBAAwB,GAE7C,GAAW,MAAPvf,EACJ,CACK1oH,EAAId,KAAKosD,MAAM+2F,wBAAwBnjJ,KAAK8wC,MAAO04E,GAAK,GAGnD,MAAL1oH,GAAsD,MAAzCd,KAAKosD,MAAMi3F,mBAAmB75B,EAAK1oH,KAEnDs2D,EAAIA,EAAIx2D,OAAS,GAAK,IAAI+pD,QAAQ6+D,EAAI7rD,KAAK80E,kBAAkBjpB,GAAMA,EAAI7rD,KAAKw0E,kBAAkB3oB,KAIhG,SAASiwD,EAAYlvH,EAAK56B,GAErB46B,EAAM,GAAKA,EAAM6M,EAAIx2D,OAAS,GACjCslD,QAAQ2V,YAAYzE,EAAI7M,EAAM,GAAGvL,EAAGoY,EAAI7M,EAAM,GAAGK,EAChDwM,EAAI7M,EAAM,GAAGvL,EAAGoY,EAAI7M,EAAM,GAAGK,EAAGj7B,EAAIqvB,EAAGrvB,EAAIi7B,GAAKk0C,IAEjD6G,EAAOl8F,OAAO8gD,EAAM,EAAG,GACvB1nD,EAAS8iG,GAKX8zE,EAAYz5K,KAAKoD,MAAO42D,IAKZ,MAAVn3D,GAAkB7C,KAAKoD,MAAQokD,QAAQg1B,iBAE1CmpB,EAAO3lG,KAAKoD,MAAQ,GAAK6uC,GAS5B,OAAkB,MAAVpvC,EAAkBA,EAAS8iG,GASpC24C,cAAc5+I,UAAU0vK,sBAAwB,SAASzpF,GAExD,IAAIvxB,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtC/X,EAAM2/B,EAAGlO,WAETwE,EAAUz0B,QAAQqwB,WAAW7xB,GAC7Bk2B,EAAU10B,QAAQuwB,WAAW/xB,GAE7B3C,EAAMpoC,SAAS2nC,gBACf9T,GAAQrgC,OAAO8vD,aAAelb,EAAI8a,aAAe9a,EAAIgsH,YAAc,GACnErgI,GAAOvgC,OAAO+vD,aAAenb,EAAIiF,YAAejF,EAAIisH,WAAa,GAEjEC,EAAQvvK,KAAK6pF,aAAa7qC,EAAIh/C,KAAKosD,MAAM2R,UAAUI,WAAa/J,EAAOpV,EAAIlQ,EAC3E0gI,EAAQxvK,KAAK6pF,aAAaj/B,EAAI5qD,KAAKosD,MAAM2R,UAAUzV,UAAY8L,EAAOxJ,EAAI5b,EAE9E,OAAOhvC,KAAK6tK,iBAAmBrmH,QAAQi0B,YAAYkK,EAAGlO,cACpDkO,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,QAClC1F,QAAQm0B,UAAUgK,EAAGlO,aAAgC,MAAjBkO,EAAG54B,YACxC/sD,KAAKuuJ,OAAO/hE,UAAUijF,cAAcxzF,EAASC,KAC3CqzF,GAAStzF,GAAWuzF,GAAStzF,IAA6B,MAAjByJ,EAAG54B,YAC9C/sD,KAAKuuJ,OAAO/hE,UAAUijF,cAAcF,EAAOC,KAQ7ClxB,cAAc5+I,UAAUg6K,mBAAqB,SAASr/G,EAAMpoB,EAAOg3F,EAAetjD,EAAI0gB,GAGrF,IAAIxvB,EAAe72E,KAAa,SAAIipI,EAAgBjpI,KAAK8wC,MAAMi4F,yBAAwB,GACnFgvC,EAAe/3K,KAAa,SAAIipI,EAAgBjpI,KAAK8wC,MAAMi4F,yBAAwB,GAEnFkmC,EAAmBjvK,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMwc,GAAa,GACzE8iG,EAAmB35K,KAAKosD,MAAM+2F,wBAAwB9oF,EAAM09G,GAAa,GAEzEt8G,EAAaz7D,KAAKstK,kBAAkB0B,kBAwBxC,GAtBkB,MAAdvzG,GAAsB4qC,IAEJ,MAAjB4iC,GAICtjD,EAAGhO,SAAS33E,KAAKuuJ,OAAO/hE,UAAUt/B,SAErCjb,EAAQ,IAAI0Y,QAAQg7B,EAAG3N,YAAa2N,EAAG1N,cAGxCxc,EAAaz7D,KAAKosD,MAAMyqG,qBAAqB5kH,EAAOg3F,EAAetjD,GACnE3lF,KAAKstK,kBAAkBsC,SAASjqF,EAAIsjD,EAAejpI,KAAK23E,UACxD33E,KAAKstK,kBAAkB0B,kBAAoBvzG,EAC3Cz7D,KAAKstK,kBAAkBzjF,aAAe53C,GAItCwpB,EAAa,IAAI0wC,wBAIfnsG,KAAK6tK,gBAA2C,MAAzB7tK,KAAKuuJ,OAAO/hE,WAAoD,MAA/BxsF,KAAKuuJ,OAAO/hE,UAAUt/B,MAClF,CACC,IAAI1lB,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MAEwB,MAA5CntD,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,cAEvB59I,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAS,EAAYzyC,YAAY2f,wBAA0B,cACvFxpE,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMq5C,YAAc18C,YAAY4f,8BAAgCjiC,EAAIA,EAC1FxnC,KAAKuuJ,OAAO/hE,UAAUwxD,WAEdh+I,KAAKuuJ,OAAO8d,kBAEpBrsK,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAUt8F,KAAKuuJ,OAAO+d,iBAAmB3mF,EAAG54B,WACvElD,YAAYyf,oBAAsB,cACnCtpE,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMq5C,YAAc18C,YAAY6f,sBAAwBliC,EAAIA,EAClFxnC,KAAKuuJ,OAAO/hE,UAAUwxD,WAIpBh+I,KAAK23E,SAERs3F,EAAmBxzG,EAEXz7D,KAAKg5K,WAEbW,EAAmBl+G,IAGhBz7D,KAAK23E,UAAY33E,KAAKg5K,YAEP,MAAdv9G,GAA0C,MAApBA,EAAWxpB,OAEpCooB,EAAKzyC,MAAO5nB,KAAa,SAAI6pD,YAAY0jB,aAAe1jB,YAAY+jB,eAAiBnS,EAAWxpB,MAAM+M,EACtGqb,EAAKzyC,MAAO5nB,KAAa,SAAI6pD,YAAY2jB,aAAe3jB,YAAYgkB,eAAiBpS,EAAWxpB,MAAM2Y,WAI/FyP,EAAKzyC,MAAO5nB,KAAa,SAAI6pD,YAAY0jB,aAAe1jB,YAAY+jB,sBACpEvT,EAAKzyC,MAAO5nB,KAAa,SAAI6pD,YAAY2jB,aAAe3jB,YAAYgkB,iBAI7ExT,EAAK2uE,wBAAwBnyD,GAAa,GAC1Cxc,EAAK2uE,wBAAwB+uC,GAAa,GAErC/3K,KAAK23E,UAA2B,MAAfd,GAErBxc,EAAKsD,KAAKulF,yBAAyB7oF,EAAMwc,GAAa,EAAMo4F,GAGxDjvK,KAAKg5K,UAA2B,MAAfjB,GAErB19G,EAAKsD,KAAKulF,yBAAyB7oF,EAAM09G,GAAa,EAAO4B,IAGzD35K,KAAK23E,UAAY33E,KAAKg5K,WAA8B,MAAjB/vC,IAEvC5uE,EAAKyuE,yBAAyB72F,EAAOjyC,KAAK23E,UAEN,MAAhC33E,KAAKuuJ,OAAOge,mBAEfvsK,KAAKvB,MAASuB,KAAKosD,MAAwB,mBAAI,KAAO,KAIxDiO,EAAKsD,KAAKglF,aAAatoF,EAAMr6D,KAAK2lG,OAAQ9uB,EAAakhG,GACvD19G,EAAKsD,KAAKilF,6BAA6BvoF,EAAMwc,EAAakhG,IAQ3Dz5B,cAAc5+I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEpD,GAAkB,MAAd3lF,KAAKoD,OAAgC,MAAfpD,KAAKuuJ,OAC/B,CAiBC,GAhBAvuJ,KAAK6pF,aAAe7pF,KAAK+/J,iBAAiBp6E,GAC1C3lF,KAAKvB,MAAQ,MAGRuB,KAAKosD,MAAMqtG,sBAAsB9zE,EAAGlO,aAAejwB,QAAQi0B,YAAYkK,EAAGlO,aAAiC,MAAlBz3E,KAAK4yK,YAE9F1yK,KAAKk3D,IAAIp3D,KAAK4yK,UAAU5zH,EAAIh/C,KAAK6pF,aAAa7qC,GAAK9+C,KAAKk3D,IAAIp3D,KAAK4yK,UAAUhoH,EAAI5qD,KAAK6pF,aAAaj/B,GAEpG5qD,KAAK6pF,aAAa7qC,EAAIh/C,KAAK4yK,UAAU5zH,EAIrCh/C,KAAK6pF,aAAaj/B,EAAI5qD,KAAK4yK,UAAUhoH,GAInC5qD,KAAKoD,OAASokD,QAAQ+0B,eAAiBv8E,KAAKoD,MAAQokD,QAAQg1B,eAErC,MAAtBx8E,KAAKg0K,eAERh0K,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBv8E,KAAKoD,OAAOqvK,aAAa9sF,QAGjE,GAAI3lF,KAAKi5K,QAEbj5K,KAAKkzD,MAAMlU,EAAIh/C,KAAK6pF,aAAa7qC,EACjCh/C,KAAKkzD,MAAMtI,EAAI5qD,KAAK6pF,aAAaj/B,MAGlC,CACC5qD,KAAK2lG,OAAS3lG,KAAKw5K,iBAAiBx5K,KAAK6pF,aAAclE,GACvD,IAAIsjD,EAAiBjpI,KAAK23E,UAAY33E,KAAKg5K,SAAYh5K,KAAKu5K,wBAAwB5zF,GAAM,KAE1F,GAAgD,MAA5C3lF,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,cACgB,MAAvC59I,KAAKstK,kBAAkBzjF,aAEvB7pF,KAAK6pF,aAAe7pF,KAAKstK,kBAAkBzjF,aAAarlE,aAEpD,GAAIxkB,KAAK6tK,eACd,CAEC,IAAIxnE,KAAWrmG,KAAK23E,WAAY33E,KAAKg5K,WAAYh5K,KAAKovK,sBAAsBzpF,GAExE0gB,EAEH4iC,EAAgBjpI,KAAKuuJ,OAAO/hE,UAAU17C,MAEb,MAAjBm4F,GAAyBA,GAAiBtjD,EAAG54B,YAA6C,MAA/B/sD,KAAKuuJ,OAAO/hE,UAAUt/B,QAEzFltD,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,OAAS,cACrCt8F,KAAKuuJ,OAAO/hE,UAAUwxD,UACtB/U,EAAgB,MAIG,MAAjBA,GAAyBjpI,KAAKosD,MAAMmvG,aAAatyB,EAAcj8E,QAElEi8E,EAAgB,KAChBjpI,KAAKuuJ,OAAO3jE,SAGb,IAAIpmE,EAAQxkB,KAAKk5K,kBAAkBl5K,KAAK6pF,aAAgC,MAAjBo/C,EAAyBA,EAAcj8E,KAAO,MACrGhtD,KAAK05K,mBAAmBl1J,EAAOxkB,KAAK6pF,aAAco/C,EAAetjD,EAAI0gB,GAIrE,IAAIzyC,EAAuB,MAAd5zD,KAAKvB,MAAiBuB,KAAKuuJ,OAAOnR,WAAap9I,KAAKuuJ,OAAOlR,aACxEr9I,KAAK45K,gBAAgBhmH,GACrB5zD,KAAK63K,UAAYrzJ,EAAMm3C,eACvB37D,KAAKmvB,QAAS,EAMfnvB,KAAKg8I,WAAWr2D,EAAI3lF,KAAK6pF,cACzB7pF,KAAKmwK,cACL3oH,QAAQ8vB,QAAQqO,EAAGlO,YACnBkO,EAAGrO,eAGK12B,SAASE,OAAuC,MAA9B9gD,KAAK40K,kBAAkBjvF,IAEjDA,EAAGrO,SAAQ,IAUbgnE,cAAc5+I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAGlD,GAAkB,MAAd3lF,KAAKoD,OAAgC,MAAfpD,KAAKuuJ,OAC/B,CACC,IAAIl0F,EAAOr6D,KAAK8wC,MAAMkc,KAClB5pD,EAAQpD,KAAKoD,MAIjB,GAHApD,KAAKoD,MAAQ,KAGTuiF,EAAG/N,QAAU53E,KAAKinF,QAAUtB,EAAG7N,QAAU93E,KAAKknF,OAClD,CACC,IAAI1iE,GAASxkB,KAAKosD,MAAMqtG,sBAAsB9zE,EAAGlO,aAAez3E,KAAKosD,MAAMmtG,aAAa5zE,EAAGlO,aAC1Fz3E,KAAKonK,cAAgBpnK,KAAKosD,MAAMwvG,mBAIjC,GAAkB,MAAd57J,KAAKvB,MAEJuB,KAAKvB,MAAMmC,OAAS,GAEvBZ,KAAKosD,MAAMstG,gBAAgB15J,KAAKvB,YAG7B,GAAI2E,GAASokD,QAAQ+0B,eAAiBn5E,EAAQokD,QAAQg1B,gBAE1D,GAA0B,MAAtBx8E,KAAKg0K,cACT,CACC,IAAI5tJ,EAAQpmB,KAAKosD,MAAM8W,WAEvB98C,EAAMk7C,cACN,IAECthE,KAAKg0K,cAAcxsH,QAAQ+0B,cAAgBn5E,GAAOqwD,UAEnD,QAECrtC,EAAMo7C,mBAIJ,GAAIxhE,KAAKi5K,QAEbj5K,KAAKw1K,UAAUx1K,KAAK8wC,MAAO9wC,KAAKkzD,MAAMlU,EAAGh/C,KAAKkzD,MAAMtI,QAEhD,GAAI5qD,KAAK23E,UAAY33E,KAAKg5K,SAC/B,CACC,IAAI5+G,EAAW,KAgBf,GAdgD,MAA5Cp6D,KAAKstK,kBAAkB0B,mBACa,MAAvChvK,KAAKstK,kBAAkB1vB,eAEvBxjF,EAAWp6D,KAAKstK,kBAAkB1vB,aAAa5wF,MAGhC,MAAZoN,GAAoBp6D,KAAKuuJ,OAAO8d,iBAA4C,MAAzBrsK,KAAKuuJ,OAAO/hE,WACnC,MAA/BxsF,KAAKuuJ,OAAO/hE,UAAUt/B,OACgB,eAAtCltD,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,QACU,SAAtCt8F,KAAKuuJ,OAAO/hE,UAAUt/B,MAAMovC,SAE5BliC,EAAWp6D,KAAKuuJ,OAAOyd,WAAWh/G,MAGnB,MAAZoN,EACJ,CACKh0C,EAAQpmB,KAAKosD,MAAM8W,WAAvB,IACI78D,EAAS+f,EAAM2vE,UAAU17B,GAE7Bj0C,EAAMk7C,cACN,IAGC,GAAI98C,EACJ,CACC,IAAIwxE,EAAM5vE,EAAM62F,YAAY5iD,GACxB71C,EAAQxkB,KAAKosD,MAAM+zE,UAAU9lE,GACjCj0C,EAAM5f,IAAIH,EAAQme,EAAO4B,EAAMwnC,cAAcvnD,IAElC,MAAP2vF,IAEHA,EAAMA,EAAIxxE,QACV4B,EAAMk3F,YAAY94F,EAAOwxE,IAG1B,IAAI6pB,EAAQz5F,EAAMi2F,YAAYhiD,GAAOr6D,KAAK23E,UAC1C33E,KAAKosD,MAAM4qG,YAAYxyI,EAAOq7F,GAAQ7/G,KAAK23E,UAE3Ctd,EAAO71C,EAGR61C,EAAOr6D,KAAK2gI,QAAQtmE,EAAMD,EAAUp6D,KAAK23E,SAAUnzD,EAAOmhE,GAE3D,QAECv/D,EAAMo7C,kBAGH,GAAIxhE,KAAKosD,MAAM6pG,uBACpB,CACC,IAAIj8F,EAAKh6D,KAAK63K,UAAW73K,KAAa,SAAI,EAAIA,KAAK63K,UAAUj3K,OAAS,GACtEo5D,EAAGhb,EAAIh/C,KAAKupK,YAAYvvG,EAAGhb,EAAIh/C,KAAKosD,MAAMuR,KAAKxQ,MAAQntD,KAAKosD,MAAMuR,KAAKkG,UAAU7kB,GACjFgb,EAAGpP,EAAI5qD,KAAKupK,YAAYvvG,EAAGpP,EAAI5qD,KAAKosD,MAAMuR,KAAKxQ,MAAQntD,KAAKosD,MAAMuR,KAAKkG,UAAUjZ,GAEjF,IAAI8zD,EAAS1+G,KAAKosD,MAAMU,UAAUC,SAChC/sD,KAAKosD,MAAM8W,WAAW6yB,UAAU17B,IAEpB,MAAVqkD,IAEH1kD,EAAGhb,GAAK0/D,EAAO9/C,OAAO5f,EACtBgb,EAAGpP,GAAK8zD,EAAO9/C,OAAOhU,GAGvBoP,EAAGhb,GAAKh/C,KAAKosD,MAAM8/B,MAAQlsF,KAAKosD,MAAMuR,KAAKxQ,MAC3C6M,EAAGpP,GAAK5qD,KAAKosD,MAAM+/B,MAAQnsF,KAAKosD,MAAMuR,KAAKxQ,MAG3CkN,EAAOr6D,KAAK65K,oBAAoBx/G,EAAML,EAAIh6D,KAAK23E,SAAUnzD,SAGlDxkB,KAAKmvB,OAEbkrC,EAAOr6D,KAAK85K,aAAaz/G,EAAMr6D,KAAK2lG,OAAQnhF,IAI5CxkB,KAAKosD,MAAMU,UAAUsxF,WAAWp+I,KAAK8wC,MAAMkc,MAC3ChtD,KAAKosD,MAAMU,UAAUuxF,SAASr+I,KAAK8wC,MAAMkc,OAMxB,MAAfhtD,KAAKuuJ,SAERvuJ,KAAK4qF,QAGDvwB,GAAQr6D,KAAK8wC,MAAMkc,MAEtBhtD,KAAKosD,MAAMghG,iBAAiB/yF,IAI9BsrB,EAAGrO,YASLgnE,cAAc5+I,UAAUkrF,MAAQ,WAiB/B,GAfI5qF,KAAKmvB,QAERnvB,KAAKu9I,UAGNv9I,KAAKvB,MAAQ,KACbuB,KAAKoD,MAAQ,KACbpD,KAAKkzD,MAAQ,KACblzD,KAAK2lG,OAAS,KACd3lG,KAAK4yK,UAAY,KACjB5yK,KAAKi5K,SAAU,EACfj5K,KAAK23E,UAAW,EAChB33E,KAAKg5K,UAAW,EAChBh5K,KAAKmvB,QAAS,EAEVnvB,KAAKm+I,aAA8B,MAAfn+I,KAAK4zK,OAE5B,IAAK,IAAI1qK,EAAI,EAAGA,EAAIlJ,KAAK4zK,OAAOhzK,OAAQsI,IAEjB,MAAlBlJ,KAAK4zK,OAAO1qK,KAEflJ,KAAK4zK,OAAO1qK,GAAGgK,KAAK0U,MAAMikB,QAAU,IAevC,GAVmB,MAAf7rC,KAAKuuJ,QAERvuJ,KAAKuuJ,OAAO3jE,QAGiB,MAA1B5qF,KAAKstK,mBAERttK,KAAKstK,kBAAkB1iF,QAGE,MAAtB5qF,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE9ClJ,KAAKg0K,cAAc9qK,GAAG0hF,QAIxB5qF,KAAK45K,gBAAgB/vH,YAAY6gB,sBACjC1qE,KAAKwpK,aACLxpK,KAAKwtD,UAQN8wF,cAAc5+I,UAAUk6K,gBAAkB,SAAShmH,GAEhC,MAAd5zD,KAAKktD,QAERltD,KAAKktD,MAAMovC,OAAS1oC,IAiBtB0qF,cAAc5+I,UAAUm/D,aAAe,SAAS5sB,EAAOg4C,GAEtD,IAAI98B,EAAQntD,KAAKosD,MAAMU,UAAUgY,WAC7Bvf,EAAKvlD,KAAKosD,MAAMU,UAAUgX,eAE1BmmB,IAEHh4C,EAAM+M,EAAIh/C,KAAKosD,MAAM0gC,KAAK76C,EAAM+M,GAChC/M,EAAM2Y,EAAI5qD,KAAKosD,MAAM0gC,KAAK76C,EAAM2Y,IAGjC3Y,EAAM+M,EAAI9+C,KAAKm8D,MAAMpqB,EAAM+M,EAAImO,EAAQ5H,EAAGvG,GAC1C/M,EAAM2Y,EAAI1qD,KAAKm8D,MAAMpqB,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,GAE1C,IAAI8zD,EAAS1+G,KAAKosD,MAAMU,UAAUC,SACjC/sD,KAAKosD,MAAM8W,WAAW6yB,UAAU/1F,KAAK8wC,MAAMkc,OAQ5C,OANc,MAAV0xD,IAEHzsE,EAAM+M,GAAK0/D,EAAO9/C,OAAO5f,EACzB/M,EAAM2Y,GAAK8zD,EAAO9/C,OAAOhU,GAGnB3Y,GAcRqsG,cAAc5+I,UAAU81K,UAAY,SAASvnH,EAAWjP,EAAG4L,GAE1D,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WACnB9V,EAAWhnC,EAAM62F,YAAYhvD,EAAUjB,MAE3C,GAAgB,MAAZI,EACJ,CACC,IAAID,EAAQntD,KAAKosD,MAAMU,UAAUK,MAGjC,GAFAC,EAAWA,EAAS5oC,QAEhB4oC,EAAS8oC,SACb,CAEC,IAAIl8B,EAAKh6D,KAAKosD,MAAMU,UAAU43F,iBAAiBz2F,EAAWjP,EAAG4L,GAC7DwC,EAASpO,EAAI9+C,KAAKm8D,MAAa,IAAPrC,EAAGhb,GAAa,IACxCoO,EAASxC,EAAI1qD,KAAKm8D,MAAMrC,EAAGpP,GAI3BwC,EAASgH,OAAS,IAAIzJ,QAAQ,EAAG,GAC7BqP,EAAKh6D,KAAKosD,MAAMuR,KAAK7R,SAASmC,EAAWb,GAC7CA,EAASgH,OAAS,IAAIzJ,QAAQzqD,KAAKm8D,OAAOrd,EAAIgb,EAAGhb,GAAKmO,GAAQjtD,KAAKm8D,OAAOzR,EAAIoP,EAAGpP,GAAKuC,QAGvF,CACC,IAAIw4C,EAAS13C,EAAU0N,eACnBwuC,EAAKxE,EAAO,GACZuE,EAAKvE,EAAOA,EAAO/kG,OAAS,GAEhC,GAAU,MAANupG,GAAoB,MAAND,EAClB,CACC,IAAIxwC,EAAKywC,EAAGnrD,GAAKkrD,EAAGlrD,EAAImrD,EAAGnrD,GAAK,EAC5Bye,EAAK0sC,EAAGv/C,GAAKs/C,EAAGt/C,EAAIu/C,EAAGv/C,GAAK,EAEhCwC,EAASgH,OAAS,IAAIzJ,QAAQzqD,KAAKm8D,OAAOrd,EAAI0a,GAAMvM,GAAQjtD,KAAKm8D,OAAOzR,EAAI6S,GAAMtQ,IAClFC,EAASpO,EAAI,EACboO,EAASxC,EAAI,GAIfxkC,EAAMk3F,YAAYrvD,EAAUjB,KAAMI,KAoBpCkxF,cAAc5+I,UAAUihI,QAAU,SAAStmE,EAAMD,EAAUud,EAAUoiG,EAASp0F,GAE7E,IAAIv/D,EAAQpmB,KAAKosD,MAAM8W,WACV98C,EAAM2vE,UAAU17B,GAE7Bj0C,EAAMk7C,cACN,IAEC,IAAI7F,EAAaz7D,KAAKstK,kBAAkB0B,kBAEtB,MAAdvzG,IAEHA,EAAa,IAAI0wC,wBAGlBnsG,KAAKosD,MAAM4qG,YAAY38F,EAAMD,EAAUud,EAAUlc,GAElD,QAECr1C,EAAMo7C,YAGP,OAAOnH,GAQRikF,cAAc5+I,UAAUm6K,oBAAsB,SAASx/G,EAAMpoB,EAAO0lC,EAAUnzD,GAE7E,IAAI4B,EAAQpmB,KAAKosD,MAAM8W,WAEvB98C,EAAMk7C,cACN,IAEC,GAAI98C,EACJ,CACC,IAAIne,EAAS+f,EAAM2vE,UAAU17B,GACzBD,EAAWh0C,EAAMi2F,YAAYhiD,GAAOsd,GACxCtd,EAAOr6D,KAAKosD,MAAM+zE,UAAU9lE,GAC5Bj0C,EAAM5f,IAAIH,EAAQg0D,EAAMj0C,EAAMwnC,cAAcvnD,IAC5C+f,EAAM43G,YAAY3jE,EAAMD,GAAWud,GAGpC,IAAIqe,EAAM5vE,EAAM62F,YAAY5iD,GAEjB,MAAP27B,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAIgsC,iBAAiB/vF,EAAO0lC,GAC5BvxD,EAAMk3F,YAAYjjD,EAAM27B,GACxBh2F,KAAKosD,MAAM4qG,YAAY38F,EAAM,KAAMsd,EAAU,IAAIw0B,yBAGnD,QAEC/lF,EAAMo7C,YAGP,OAAOnH,GAQRikF,cAAc5+I,UAAUo6K,aAAe,SAASz/G,EAAMsrC,EAAQnhF,GAE7D,IAAI4B,EAAQpmB,KAAKosD,MAAM8W,WACvB98C,EAAMk7C,cACN,IAEC,GAAI98C,EACJ,CACC,IAAIne,EAAS+f,EAAM2vE,UAAU17B,GACzBn2D,EAASkiB,EAAMi2F,YAAYhiD,GAAM,GACjCj2D,EAASgiB,EAAMi2F,YAAYhiD,GAAM,GACrCA,EAAOr6D,KAAKosD,MAAM+zE,UAAU9lE,GAC5Bj0C,EAAM5f,IAAIH,EAAQg0D,EAAMj0C,EAAMwnC,cAAcvnD,IAC5C+f,EAAM43G,YAAY3jE,EAAMn2D,GAAQ,GAChCkiB,EAAM43G,YAAY3jE,EAAMj2D,GAAQ,GAGjC,IAAI4xF,EAAM5vE,EAAM62F,YAAY5iD,GAEjB,MAAP27B,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAI2P,OAASA,EAEbv/E,EAAMk3F,YAAYjjD,EAAM27B,IAG1B,QAEC5vE,EAAMo7C,YAGP,OAAOnH,GAQRikF,cAAc5+I,UAAU+3J,SAAW,SAAS3mH,EAAOkV,GAElD,IAAIgU,EAAK9T,QAAQ2Y,aAAa7+D,KAAKosD,MAAM2R,UAAWvW,QAAQqwB,WAAW7xB,GACrEwB,QAAQuwB,WAAW/xB,IACjBikC,EAAcjqF,KAAKosD,MAAMqgC,mBAAmBzmC,GAChDhmD,KAAK6+D,aAAa7E,EAAIiwB,GACtBjqF,KAAKg6K,WAAWlpI,EAAOkpB,EAAGhb,EAAGgb,EAAGpP,GAChCpD,QAAQ8vB,QAAQtxB,IAQjBs4F,cAAc5+I,UAAUs6K,WAAa,SAASlpI,EAAOkO,EAAG4L,GAEvD,IAAIorC,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBnlD,EAAMkc,MACvCgN,EAAK,IAAIrP,QAAQ3L,EAAG4L,GAExB,GAAW,MAAPorC,EACJ,CACCA,EAAMA,EAAIxxE,QACV,IAAIwnC,EAAIhsD,KAAKosD,MAAMuR,KAAKkG,UACpBr8B,EAAIxnC,KAAKosD,MAAMuR,KAAKxQ,MACpBiH,EAAS,IAAIzJ,QAAQqB,EAAEhN,EAAIxX,EAAGwkB,EAAEpB,EAAIpjB,GAEpCnhC,EAASrG,KAAKosD,MAAMhmC,MAAM2vE,UAAU/1F,KAAK8wC,MAAMkc,MAEnD,GAAIhtD,KAAKosD,MAAMhmC,MAAMuvE,SAAStvF,GAC9B,CACC,IAAIg8I,EAASriJ,KAAKosD,MAAMuR,KAAK5Q,SAAS1mD,GACtC+tD,EAAS,IAAIzJ,QAAQ03F,EAAOrjG,EAAGqjG,EAAOz3F,GAGvC,IAAIxnD,EAAQ8iD,QAAQwV,mBAAmB5qB,EAAOkpB,EAAGhb,EAAIxX,EAAI4sB,EAAOpV,EAAGgb,EAAGpP,EAAIpjB,EAAI4sB,EAAOxJ,GAEnE,MAAdorC,EAAI2P,OAEP3P,EAAI2P,OAAS,CAAC3rC,GAIdg8B,EAAI2P,OAAOl8F,OAAOrG,EAAO,EAAG42D,GAG7Bh6D,KAAKosD,MAAM8W,WAAWo6C,YAAYxsE,EAAMkc,KAAMgpC,GAC9Ch2F,KAAKu9I,UACLv9I,KAAKwtD,WASP8wF,cAAc5+I,UAAUk5K,YAAc,SAAS9nI,EAAO1tC,GAErD,GAAIA,EAAQ,GAAKA,EAAQpD,KAAK63K,UAAUj3K,OAAS,EACjD,CACC,IAAIo1F,EAAMh2F,KAAKosD,MAAM6pC,gBAAgBj2F,KAAK8wC,MAAMkc,MAErC,MAAPgpC,GAA6B,MAAdA,EAAI2P,SAEtB3P,EAAMA,EAAIxxE,QACVwxE,EAAI2P,OAAOl8F,OAAOrG,EAAQ,EAAG,GAC7BpD,KAAKosD,MAAM8W,WAAWo6C,YAAYxsE,EAAMkc,KAAMgpC,GAC9Ch2F,KAAKu9I,UACLv9I,KAAKwtD,YAUR8wF,cAAc5+I,UAAUu6K,mBAAqB,SAAS72K,GAErD,IAAIu0E,EAAoB,GAATv0E,EACX4pD,EAAOhtD,KAAK8wC,MAAMkc,KAClBoN,EAAWp6D,KAAKosD,MAAM8W,WAAWm5C,YAAYrvD,EAAM2qB,GACnD/jB,EAAQ/J,YAAYyhB,iBAYxB,OAViB,MAAZlR,IAAqBp6D,KAAKosD,MAAM+qG,qBAAqBnqG,EAAMoN,EAAUud,IAC5D,MAAZvd,IAAqBp6D,KAAKosD,MAAMgyG,uBAAuBpxG,EAAM2qB,GAE9D/jB,EAAQ/J,YAAY6hB,wBAEA,MAAZtR,GAAoBp6D,KAAKosD,MAAM+qG,qBAAqBnqG,EAAMoN,EAAUud,KAE5E/jB,EAAQ/J,YAAY4hB,0BAGd7X,GAQR0qF,cAAc5+I,UAAU8tD,OAAS,SAASopH,GAEzC52K,KAAK63K,UAAY73K,KAAK8wC,MAAM6qB,eAAerxD,QAC3C,IAAI81C,EAAIpgD,KAAKosD,MAAM8W,WAAW+5C,YAAYj9G,KAAK8wC,MAAMkc,MACjDwP,EAAMpc,EAAEulD,OAEZ,GAAkB,MAAd3lG,KAAKm3K,OAAiBn3K,KAAKm3K,MAAMv2K,OAAS,GAElC,MAAP47D,EACJ,CACoB,MAAfx8D,KAAK2lG,SAER3lG,KAAK2lG,OAAS,IAGf,IAAK,IAAIz8F,EAAI,EAAGA,EAAIlJ,KAAKm3K,MAAMv2K,OAAS,EAAGsI,IAErB,MAAjBlJ,KAAKm3K,MAAMjuK,IAAmC,MAArBlJ,KAAK63K,UAAU3uK,KAE3ClJ,KAAK2lG,OAAOz8F,EAAI,GAAKszD,EAAItzD,EAAI,IAMjClJ,KAAKmwK,cAEAyG,GAEJ52K,KAAKmqK,iBASP7rB,cAAc5+I,UAAUyqK,cAAgB,WAEvC,IAAIn9G,EAAOhtD,KAAK8wC,MAAMkc,KAGlBnsD,EAAIb,KAAK6zK,WAAW/2G,OACxB98D,KAAKkzD,MAAQ,IAAIvI,QAAQ3qD,KAAK8wC,MAAMozF,eAAellF,EAAGh/C,KAAK8wC,MAAMozF,eAAet5E,GAChF5qD,KAAK6zK,WAAW/2G,OAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMr8D,KAAKkzD,MAAMlU,EAAIn+C,EAAEilD,MAAQ,GAC5E5lD,KAAKm8D,MAAMr8D,KAAKkzD,MAAMtI,EAAI/pD,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QAGrD,IAAIkC,EAAM7nD,KAAKosD,MAAM6iF,SAASjiF,GAG9B,GAFAhtD,KAAK6zK,WAAW3rH,QAAkB,MAAPL,GAAeA,EAAIjnD,OAAS,GAAKZ,KAAKosD,MAAMiwG,eAAervG,GAEpE,MAAdhtD,KAAKm3K,OAAiBn3K,KAAKm3K,MAAMv2K,OAAS,EAC9C,CACC,IAAIqH,EAAIjI,KAAK63K,UAAUj3K,OAAS,EAE5BupG,EAAKnqG,KAAK63K,UAAU,GACpBhhH,EAAKszC,EAAGnrD,EACR8X,EAAKqzC,EAAGv/C,EAEZ/pD,EAAIb,KAAKm3K,MAAM,GAAGr6G,OAClB98D,KAAKm3K,MAAM,GAAGr6G,OAAS,IAAIjS,YAAY3qD,KAAKC,MAAM02D,EAAKh2D,EAAEilD,MAAQ,GAC/D5lD,KAAKC,MAAM22D,EAAKj2D,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QAC5C3lD,KAAKm3K,MAAM,GAAG56E,KAAOv8F,KAAKi6K,mBAAmB,GAC7Cj6K,KAAKm3K,MAAM,GAAG3pH,SAEVxtD,KAAK43K,mBAER53K,KAAKk6K,iBAAiBl6K,KAAKm3K,MAAM,GAAGr6G,QAGrC,IAAIotC,EAAKlqG,KAAK63K,UAAU5vK,GACpBkyK,EAAKjwE,EAAGlrD,EACRo7H,EAAKlwE,EAAGt/C,EAERyvH,EAAKr6K,KAAKm3K,MAAMv2K,OAAS,EAC7BC,EAAIb,KAAKm3K,MAAMkD,GAAIv9G,OACnB98D,KAAKm3K,MAAMkD,GAAIv9G,OAAS,IAAIjS,YAAY3qD,KAAKC,MAAMg6K,EAAKt5K,EAAEilD,MAAQ,GAChE5lD,KAAKC,MAAMi6K,EAAKv5K,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QAC5C3lD,KAAKm3K,MAAMkD,GAAI99E,KAAOv8F,KAAKi6K,mBAAmBI,GAC9Cr6K,KAAKm3K,MAAMkD,GAAI7sH,SAEXxtD,KAAK43K,mBAER53K,KAAKk6K,iBAAiBl6K,KAAKm3K,MAAMkD,GAAIv9G,QAGtC98D,KAAKs6K,iBAAiBnwE,EAAID,GAG3B,GAAsB,MAAlBlqG,KAAK63K,WAA0C,MAArB73K,KAAKk4K,cAAwBl4K,KAAKk4K,aAAat3K,OAAS,EAIrF,IAFA,IAAIkd,EAAO9d,KAAK63K,UAAU,GAEjB3uK,EAAI,EAAGA,EAAIlJ,KAAKk4K,aAAat3K,OAAQsI,IAE7C,GAA4B,MAAxBlJ,KAAKk4K,aAAahvK,IAAuC,MAAzBlJ,KAAK63K,UAAU3uK,EAAI,GACvD,CACC,IAAI8wD,EAAKh6D,KAAK63K,UAAU3uK,EAAI,GAExB81C,GADAn+C,EAAIb,KAAKk4K,aAAahvK,GAClB4U,EAAKkhC,GAAKgb,EAAGhb,EAAIlhC,EAAKkhC,GAAK,GAC/B4L,EAAI9sC,EAAK8sC,GAAKoP,EAAGpP,EAAI9sC,EAAK8sC,GAAK,EACnC/pD,EAAEi8D,OAAS,IAAIjS,YAAY3qD,KAAKC,MAAM6+C,EAAIn+C,EAAEi8D,OAAOhX,MAAQ,GACzD5lD,KAAKC,MAAMyqD,EAAI/pD,EAAEi8D,OAAOnX,OAAS,GAAI9kD,EAAEi8D,OAAOhX,MAAOjlD,EAAEi8D,OAAOnX,QAChE9kD,EAAE2sD,SACFtH,QAAQ+G,WAAWpsD,EAAEqS,KAAMlT,KAAKy3K,oBAChC35J,EAAOk8C,EAEHh6D,KAAK43K,mBAER53K,KAAKk6K,iBAAiBr5K,EAAEi8D,QAW5B,GALuB,MAAnB98D,KAAK6zK,YAER7zK,KAAK6zK,WAAWrmH,SAGS,MAAtBxtD,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE9ClJ,KAAKg0K,cAAc9qK,GAAGskD,UAUzB8wF,cAAc5+I,UAAU2qK,kBAAoB,SAASniH,GAEpD,GAAkB,MAAdloD,KAAKm3K,MAER,IAAK,IAAIjuK,EAAI,EAAGA,EAAIlJ,KAAKm3K,MAAMv2K,OAAQsI,IAEtClJ,KAAKm3K,MAAMjuK,GAAGgK,KAAK0U,MAAMikB,QAAU,EAAY,GAAK,OAItD,GAAyB,MAArB7rC,KAAKk4K,aAER,IAAShvK,EAAI,EAAGA,EAAIlJ,KAAKk4K,aAAat3K,OAAQsI,IAE7ClJ,KAAKk4K,aAAahvK,GAAGgK,KAAK0U,MAAMikB,QAAU,EAAY,GAAK,OAS7D,GALuB,MAAnB7rC,KAAK6zK,aAER7zK,KAAK6zK,WAAW3gK,KAAK0U,MAAMikB,QAAU,EAAY,GAAK,QAG7B,MAAtB7rC,KAAKg0K,cAER,IAAS9qK,EAAI,EAAGA,EAAIlJ,KAAKg0K,cAAcpzK,OAAQsI,IAE9ClJ,KAAKg0K,cAAc9qK,GAAG++C,WAAWC,IAepCo2F,cAAc5+I,UAAU46K,iBAAmB,SAASnwE,EAAID,GAEvD,IAAK,IAAIhhG,EAAI,EAAGA,EAAIlJ,KAAKm3K,MAAMv2K,OAAS,EAAGsI,IAE1C,GAAqB,MAAjBlJ,KAAKm3K,MAAMjuK,GAEd,GAAyB,MAArBlJ,KAAK63K,UAAU3uK,GACnB,CACC,IAAI81C,EAAIh/C,KAAK63K,UAAU3uK,GAAG81C,EACtB4L,EAAI5qD,KAAK63K,UAAU3uK,GAAG0hD,EAEtB/pD,EAAIb,KAAKm3K,MAAMjuK,GAAG4zD,OACtB98D,KAAKm3K,MAAMjuK,GAAGgK,KAAK0U,MAAMygC,WAAa,UACtCroD,KAAKm3K,MAAMjuK,GAAG4zD,OAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMrd,EAAIn+C,EAAEilD,MAAQ,GAC9D5lD,KAAKm8D,MAAMzR,EAAI/pD,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QAEvC3lD,KAAK43K,kBAER53K,KAAKk6K,iBAAiBl6K,KAAKm3K,MAAMjuK,GAAG4zD,QAER,MAApB98D,KAAKgzK,aAAuBhzK,KAAK6zK,WAAW3rH,SAAWhC,QAAQ8W,WAAWh9D,KAAKm3K,MAAMjuK,GAAG4zD,OAAQ98D,KAAK6zK,WAAW/2G,UAExHtW,EAAIqD,YAAYuhB,YAAc,EAC9BrkE,EAAI8iD,YAAYuhB,YAAc,EAC9BprE,KAAKm3K,MAAMjuK,GAAG4zD,OAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMrd,EAAIwH,EAAI,GAAItmD,KAAKm8D,MAAMzR,EAAI7jD,EAAI,GAAIy/C,EAAGz/C,IAGzF/G,KAAKm3K,MAAMjuK,GAAGskD,cAIdxtD,KAAKm3K,MAAMjuK,GAAGwc,UACd1lB,KAAKm3K,MAAMjuK,GAAK,MAYpBo1I,cAAc5+I,UAAUw6K,iBAAmB,SAASr5K,GAEnD,GAAuB,MAAnBb,KAAK6zK,WACT,CACC,IAAIloH,EAAK3rD,KAAK6zK,WAAW/2G,OAErB5W,QAAQ8W,WAAWn8D,EAAG8qD,KAErB9qD,EAAEoqD,aAAeU,EAAGV,aAEvBU,EAAGf,EAAI/pD,EAAE+pD,EAAI/pD,EAAE8kD,OAIfgG,EAAGf,EAAI/pD,EAAE+pD,EAAIe,EAAGhG,UAWpB24F,cAAc5+I,UAAUywK,YAAc,WAErC,GAAInwK,KAAKi5K,QACT,CACC,IAAIp4K,EAAIb,KAAK6zK,WAAW/2G,OACpBA,EAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMr8D,KAAKkzD,MAAMlU,EAAIn+C,EAAEilD,MAAQ,GAC/D5lD,KAAKm8D,MAAMr8D,KAAKkzD,MAAMtI,EAAI/pD,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QACtD3lD,KAAK6zK,WAAW/2G,OAASA,EACzB98D,KAAK6zK,WAAWrmH,cAEM,MAAdxtD,KAAKktD,QAEbltD,KAAKktD,MAAMnsD,MAAMf,KAAK8wC,OACtB9wC,KAAKktD,MAAMy4C,OAAS3lG,KAAK63K,UACzB73K,KAAKktD,MAAMC,MAAQntD,KAAK8wC,MAAM6sB,KAAKxQ,MACnCntD,KAAKktD,MAAMw3C,SAAW1kG,KAAKw0K,oBAC3Bx0K,KAAKktD,MAAMovC,OAASt8F,KAAKs0K,oBACzBt0K,KAAKktD,MAAMq5C,YAAcvmG,KAAKu0K,0BAA4Bv0K,KAAKktD,MAAMC,MAAQntD,KAAKktD,MAAMC,MACxFntD,KAAKktD,MAAMi7C,UAAW,EACtBnoG,KAAKktD,MAAMM,UAGgB,MAAxBxtD,KAAKk3K,iBAERl3K,KAAKk3K,gBAAgB1pH,UASvB8wF,cAAc5+I,UAAU69I,QAAU,WAEjCv9I,KAAK63K,UAAY73K,KAAK83K,mBAAmB93K,KAAK8wC,OAC9C9wC,KAAK2lG,OAAS,GAEI,MAAd3lG,KAAKktD,QAERltD,KAAKktD,MAAMy4C,OAAS3lG,KAAK63K,WAGR,MAAd73K,KAAKm3K,QAERn3K,KAAKu6K,aAAav6K,KAAKm3K,OACvBn3K,KAAKm3K,MAAQn3K,KAAKg4K,eAGM,MAArBh4K,KAAKk4K,eAERl4K,KAAKu6K,aAAav6K,KAAKk4K,cACvBl4K,KAAKk4K,aAAel4K,KAAKm4K,sBAGA,MAAtBn4K,KAAKg0K,gBAERh0K,KAAKu6K,aAAav6K,KAAKg0K,eACvBh0K,KAAKg0K,cAAgBh0K,KAAKi0K,uBAIJ,MAAnBj0K,KAAK6zK,YAA8C,MAAxB7zK,KAAK6zK,WAAW3gK,MAAmD,MAAnClT,KAAK6zK,WAAW3gK,KAAKujB,YAEnFz2B,KAAK6zK,WAAW3gK,KAAKujB,WAAWiC,YAAY14B,KAAK6zK,WAAW3gK,OAS9DorI,cAAc5+I,UAAU66K,aAAe,SAASpD,GAE/C,GAAa,MAATA,EAEH,IAAK,IAAIjuK,EAAI,EAAGA,EAAIiuK,EAAMv2K,OAAQsI,IAEjB,MAAZiuK,EAAMjuK,IAETiuK,EAAMjuK,GAAGwc,WAab44H,cAAc5+I,UAAUgmB,QAAU,WAEP,MAAtB1lB,KAAKi8I,gBAERj8I,KAAK8wC,MAAM6sB,KAAKvR,MAAMosB,eAAex4E,KAAKi8I,eAC1Cj8I,KAAKi8I,cAAgB,MAGH,MAAfj8I,KAAKuuJ,SAERvuJ,KAAKuuJ,OAAO7oI,UACZ1lB,KAAKuuJ,OAAS,MAGG,MAAdvuJ,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,MAGc,MAAxBltD,KAAKk3K,kBAERl3K,KAAKk3K,gBAAgBxxJ,UACrB1lB,KAAKk3K,gBAAkB,MAGD,MAAnBl3K,KAAK6zK,aAER7zK,KAAK6zK,WAAWnuJ,UAChB1lB,KAAK6zK,WAAa,MAGW,MAA1B7zK,KAAKstK,oBAERttK,KAAKstK,kBAAkB5nJ,UACvB1lB,KAAKstK,kBAAoB,MAG1BttK,KAAKu6K,aAAav6K,KAAKk4K,cACvBl4K,KAAKk4K,aAAe,KAEpBl4K,KAAKu6K,aAAav6K,KAAKg0K,eACvBh0K,KAAKg0K,cAAgB,KAErBh0K,KAAKu6K,aAAav6K,KAAKm3K,OACvBn3K,KAAKm3K,MAAQ,KAEbn3K,KAAKwpK,cAGN7oH,WAAW29F,cAAyC,qBAAlBA,cAAgCA,mBAAgB/9I,EA8BlF2lD,QAAQ/6C,OAAOqzI,mBAAoBF,eAMnCE,mBAAmB9+I,UAAU86K,aAAc,EAU3Ch8B,mBAAmB9+I,UAAU+6K,+BACN,QAArB75H,SAASwD,SAAsB,yBAA2B,GAO3Do6F,mBAAmB9+I,UAAUs4K,YAAc,WAE3C,IAAIb,EAAQ,GAGRuB,EAAO14K,KAAK24K,kBAAkB,GAuBlC,OAtBA34K,KAAKq4K,SAASK,GACdA,EAAK1tE,UAAUnhD,YAAYmgB,wBAC3BmtG,EAAMpmK,KAAK2nK,GAGXvB,EAAMpmK,KAAK/Q,KAAK06K,kBAAkBx0H,QAAQ1jD,KAAKxC,MAAM,SAASgmD,IAExDwB,QAAQ6vB,WAAWrxB,IAAQhmD,KAAKw6K,cAEpCx6K,KAAKosD,MAAMwlG,SAAS5xJ,KAAK8wC,MAAMkc,KAAMhH,GACrCwB,QAAQ8vB,QAAQtxB,SAIlBhmD,KAAK2lG,OAAO50F,KAAK,IAAI45C,QAAQ,EAAE,IAG/B+tH,EAAO14K,KAAK24K,kBAAkB,GAC9B34K,KAAKq4K,SAASK,GACdA,EAAK1tE,UAAUnhD,YAAYmgB,wBAC3BmtG,EAAMpmK,KAAK2nK,GAEJvB,GASR34B,mBAAmB9+I,UAAUg7K,kBAAoB,SAASC,GAEzD,IAAIjC,EAAO14K,KAAK24K,oBAUhB,OATA34K,KAAKq4K,SAASK,EAAMiC,GAEpBjC,EAAK1tE,UAAUhrG,KAAK46K,oBAEf56K,KAAKosD,MAAMiyG,eAAer+J,KAAK8wC,MAAMkc,QAEzC0rH,EAAKxlK,KAAK0U,MAAMikB,QAAU,QAGpB6sI,GAQRl6B,mBAAmB9+I,UAAUk7K,iBAAmB,WAE/C,OAAQ56K,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAAe0+D,YAAYgB,aAC/D5yI,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAAerpB,YAAYssB,wBACtDn2E,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAAe0+D,YAAYc,gBAC1D1yI,KAAK8wC,MAAMlpB,MAAMiiC,YAAYqpB,aAAerpB,YAAYksB,kBACxD/1E,KAAK8wC,MAAMlpB,MAAMiiC,YAAYkoB,cAAgBloB,YAAYgsB,eACzD,aAAe,cAQjB2oE,mBAAmB9+I,UAAUk7J,kBAAoB,SAAS1nJ,GAEzD,IAAIwnJ,EAAM,KASV,OAPkB,MAAd16J,KAAKm3K,OAAkC,MAAjBn3K,KAAKm3K,MAAM,IAAejkK,GAAQlT,KAAKm3K,MAAM,GAAGjkK,MACzEA,EAAKujB,YAAcz2B,KAAKm3K,MAAM,GAAGjkK,OAEjCwnJ,EAAM16J,KAAKy6K,+BACX/f,EAAMj3G,YAAYpkD,IAAIq7J,IAAQA,GAGxBA,GAcRlc,mBAAmB9+I,UAAUm/D,aAAe,SAAS5sB,EAAOg4C,GAE3D,IAAI98B,EAAQntD,KAAKosD,MAAMU,UAAUgY,WAC7Bvf,EAAKvlD,KAAKosD,MAAMU,UAAUgX,eAC1BlF,EAAS5+D,KAAK8wC,MAAM8tB,OAWxB,OATIqrB,IAEHh4C,EAAM+M,EAAIh/C,KAAKosD,MAAM0gC,KAAK76C,EAAM+M,GAChC/M,EAAM2Y,EAAI5qD,KAAKosD,MAAM0gC,KAAK76C,EAAM2Y,IAGjC3Y,EAAM+M,EAAI9+C,KAAKm8D,MAAMpqB,EAAM+M,EAAImO,EAAQ5H,EAAGvG,EAAI4f,EAAO5f,GACrD/M,EAAM2Y,EAAI1qD,KAAKm8D,MAAMpqB,EAAM2Y,EAAIuC,EAAQ5H,EAAGqF,EAAIgU,EAAOhU,GAE9C3Y,GAaRusG,mBAAmB9+I,UAAU46K,iBAAmB,SAASnwE,EAAID,GAE5D,IAAI9pD,EAAIpgD,KAAKosD,MAAM8W,WAAW+5C,YAAYj9G,KAAK8wC,MAAMkc,MACjDwP,EAAMx8D,KAAK8wC,MAAM6qB,eACjB3B,EAAK,KAGLwC,EAAI57D,OAAS,GAEhBupG,EAAK3tC,EAAI,GACT0tC,EAAK1tC,EAAIA,EAAI57D,OAAS,IAEF,MAAZw/C,EAAEulD,QAAkBvlD,EAAEulD,OAAO/kG,OAAS,IAE9Co5D,EAAKwC,EAAI,IAKTxC,EAFS,MAANA,EAEE,IAAIrP,QAAQw/C,EAAGnrD,GAAKkrD,EAAGlrD,EAAImrD,EAAGnrD,GAAK,EAAGmrD,EAAGv/C,GAAKs/C,EAAGt/C,EAAIu/C,EAAGv/C,GAAK,GAI7D,IAAID,QAAQ3qD,KAAKosD,MAAMU,UAAUK,OAAS6M,EAAGhb,EAAIh/C,KAAKosD,MAAMU,UAAU+W,UAAU7kB,EAAIh/C,KAAK8wC,MAAM8tB,OAAO5f,GACzGh/C,KAAKosD,MAAMU,UAAUK,OAAS6M,EAAGpP,EAAI5qD,KAAKosD,MAAMU,UAAU+W,UAAUjZ,EAAI5qD,KAAK8wC,MAAM8tB,OAAOhU,IAK7F,IAAI/pD,EAAIb,KAAKm3K,MAAM,GAAGr6G,OAClBtW,EAAI3lD,EAAEilD,MACN/+C,EAAIlG,EAAE8kD,OACNmX,EAAS,IAAIjS,YAAY3qD,KAAKm8D,MAAMrC,EAAGhb,EAAIwH,EAAI,GAAItmD,KAAKm8D,MAAMrC,EAAGpP,EAAI7jD,EAAI,GAAIy/C,EAAGz/C,GAEhF/G,KAAK43K,kBAER53K,KAAKk6K,iBAAiBp9G,GAEM,MAApB98D,KAAKgzK,aAAuBhzK,KAAK6zK,WAAW3rH,SAAWhC,QAAQ8W,WAAWF,EAAQ98D,KAAK6zK,WAAW/2G,UAE1GtW,EAAIqD,YAAYuhB,YAAc,EAC9BrkE,EAAI8iD,YAAYuhB,YAAc,EAC9BtO,EAAS,IAAIjS,YAAY3qD,KAAKC,MAAM65D,EAAGhb,EAAIwH,EAAI,GAAItmD,KAAKC,MAAM65D,EAAGpP,EAAI7jD,EAAI,GAAIy/C,EAAGz/C,IAGjF/G,KAAKm3K,MAAM,GAAGr6G,OAASA,EACvB98D,KAAKm3K,MAAM,GAAG3pH,SAEVxtD,KAAK43K,mBAER53K,KAAKk6K,iBAAiBl6K,KAAKm3K,MAAM,GAAGr6G,SAItCnc,WAAW69F,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBj+I,EAcjG2lD,QAAQ/6C,OAAOszI,qBAAsBD,oBAOrCC,qBAAqB/+I,UAAUm7K,iBAAmB,WAEjD,IAAIr+G,EAAMx8D,KAAK8wC,MAAM6qB,eAErB,GAAW,MAAPa,EACJ,CAEC,IAAIsiC,EAAM5+F,KAAKwD,IAAI,EAAG1D,KAAKosD,MAAMuR,KAAKxQ,OAEtC,GAAkB,GAAdqP,EAAI57D,QAA8B,GAAd47D,EAAI57D,SAC1BV,KAAKk3D,IAAIoF,EAAI,GAAGxd,EAAIwd,EAAI,GAAGxd,GAAK8/C,GAAO5+F,KAAKk3D,IAAIoF,EAAI,GAAGxd,EAAIwd,EAAI,GAAGxd,GAAK8/C,GACxE5+F,KAAKk3D,IAAIoF,EAAI,GAAG5R,EAAI4R,EAAI,GAAG5R,GAAKk0C,GAAO5+F,KAAKk3D,IAAIoF,EAAI,GAAG5R,EAAI4R,EAAI,GAAG5R,GAAKk0C,GACxE,CACC,IAAIplC,EAAK8C,EAAI,GAAGxd,GAAKwd,EAAIA,EAAI57D,OAAS,GAAGo+C,EAAIwd,EAAI,GAAGxd,GAAK,EACrDye,EAAKjB,EAAI,GAAG5R,GAAK4R,EAAIA,EAAI57D,OAAS,GAAGgqD,EAAI4R,EAAI,GAAG5R,GAAK,EAEzD4R,EAAM,CAACA,EAAI,GAAI,IAAI7R,QAAQ+O,EAAI+D,GAAK,IAAI9S,QAAQ+O,EAAI+D,GAAKjB,EAAIA,EAAI57D,OAAS,KAI5E,OAAO47D,GAQRiiF,qBAAqB/+I,UAAU85K,iBAAmB,SAASvnI,GAE1D,GAAIjyC,KAAK23E,UAAY33E,KAAKg5K,SAEzB,OAAOx6B,mBAAmB9+I,UAAU85K,iBAAiBz4K,MAAMf,KAAMgB,WAIjE,IAAIw7D,EAAMx8D,KAAK66K,mBACX/8J,EAAO9d,KAAK6+D,aAAarC,EAAI,GAAGh4C,SAAS,GAC7CytB,EAAQjyC,KAAK6+D,aAAa5sB,EAAMztB,SAAS,GAGzC,IAFA,IAAI3hB,EAAS,GAEJqG,EAAI,EAAGA,EAAIszD,EAAI57D,OAAQsI,IAChC,CACC,IAAI8wD,EAAKh6D,KAAK6+D,aAAarC,EAAItzD,GAAGsb,SAAS,GAEvCtb,GAAKlJ,KAAKoD,QAEoB,GAA7BlD,KAAKm8D,MAAMv+C,EAAKkhC,EAAIgb,EAAGhb,KAE1BlhC,EAAKkhC,EAAI/M,EAAM+M,EACfgb,EAAGhb,EAAI/M,EAAM+M,GAGmB,GAA7B9+C,KAAKm8D,MAAMv+C,EAAK8sC,EAAIoP,EAAGpP,KAEzB9sC,EAAK8sC,EAAI3Y,EAAM2Y,EACfoP,EAAGpP,EAAI3Y,EAAM2Y,IAIZ1hD,EAAIszD,EAAI57D,OAAS,GAEpBiC,EAAOkO,KAAKipD,GAGbl8C,EAAOk8C,EAIR,GAAqB,GAAjBn3D,EAAOjC,OACX,CACC,IAAIsD,EAASlE,KAAK8wC,MAAMi4F,yBAAwB,GAC5C3kI,EAASpE,KAAK8wC,MAAMi4F,yBAAwB,GAC5C57E,EAAQntD,KAAK8wC,MAAM6sB,KAAKmH,WACxBvf,EAAKvlD,KAAK8wC,MAAM6sB,KAAKmG,eAErB9kB,EAAIn8C,EAAO,GAAGm8C,EAAImO,EAAQ5H,EAAGvG,EAC7B4L,EAAI/nD,EAAO,GAAG+nD,EAAIuC,EAAQ5H,EAAGqF,GAElB,MAAV1mD,GAAkBgiD,QAAQ6W,SAAS74D,EAAQ86C,EAAG4L,IACvC,MAAVxmD,GAAkB8hD,QAAQ6W,SAAS34D,EAAQ46C,EAAG4L,MAE/C/nD,EAAS,CAACovC,EAAOA,IAInB,OAAOpvC,GAST47I,qBAAqB/+I,UAAUg6K,mBAAqB,SAASr/G,EAAMpoB,EAAOg3F,EAAetjD,GAKxF,GAHA24D,cAAc5+I,UAAUg6K,mBAAmB34K,MAAMf,KAAMgB,YAGlDhB,KAAK23E,WAAa33E,KAAKg5K,SAC5B,CACC/mI,EAAQjyC,KAAK6+D,aAAa5sB,EAAMztB,SAAS,GAOzC,IANA,IAAIg4C,EAAMnC,EAAKsB,eACXsuG,EAAMztG,EAAI,GACVs+G,EAAMt+G,EAAI,GAEV35D,EAAS,GAEJqG,EAAI,EAAGA,EAAIszD,EAAI57D,OAAQsI,IAChC,CACC,IAAI6mK,EAAMvzG,EAAItzD,GAGoB,GAA7BhJ,KAAKm8D,MAAM4tG,EAAIjrH,EAAI87H,EAAI97H,IAAwC,GAA7B9+C,KAAKm8D,MAAMy+G,EAAI97H,EAAI+wH,EAAI/wH,IAC/B,GAA7B9+C,KAAKm8D,MAAM4tG,EAAIr/G,EAAIkwH,EAAIlwH,IAAwC,GAA7B1qD,KAAKm8D,MAAMy+G,EAAIlwH,EAAImlH,EAAInlH,IAE1D/nD,EAAOkO,KAAK/Q,KAAK6+D,aAAai8G,EAAIt2J,SAAS,IAG5CylJ,EAAM6Q,EACNA,EAAM/K,EAGP,IAAI7rK,EAASlE,KAAK8wC,MAAMi4F,yBAAwB,GAC5C3kI,EAASpE,KAAK8wC,MAAMi4F,yBAAwB,GAC5CgyC,EAAO/6K,KAAK8wC,MAAM6qB,eAGtB,GAAqB,GAAjB94D,EAAOjC,QAAgE,GAAhDV,KAAKm8D,MAAMG,EAAI,GAAGxd,EAAIwd,EAAIA,EAAI57D,OAAS,GAAGo+C,IACpB,GAAhD9+C,KAAKm8D,MAAMG,EAAI,GAAG5R,EAAI4R,EAAIA,EAAI57D,OAAS,GAAGgqD,IAKtC,GAAkB,GAAd4R,EAAI57D,QAAgC,GAAjBiC,EAAOjC,QAAyB,MAAVsD,GAA4B,MAAVE,GAC1D,MAAR22K,GAAmE,GAAnD76K,KAAKm8D,MAAM0+G,EAAK,GAAG/7H,EAAI+7H,EAAKA,EAAKn6K,OAAS,GAAGo+C,GAC/D,CACC,IAAI2e,EAAO39D,KAAKosD,MAAMU,UAClBK,EAAQwQ,EAAKmH,WACbvf,EAAKoY,EAAKmG,eAEVhN,EAAK6G,EAAKw0E,kBAAkBjuI,GAAUipD,EAAQ5H,EAAGqF,EAGjDia,EAAK7kE,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMn2D,GAAQ,GAE1D,GAAU,MAAN2gE,EACJ,CACC,IAAI7K,EAAKh6D,KAAKosD,MAAMi3F,mBAAmBn/I,EAAQ2gE,GAErC,MAAN7K,IAEHh6D,KAAK6+D,aAAa7E,GAAI,GACtBlD,EAAKkD,EAAGpP,GAIV,IAAIynF,EAAK10E,EAAKw0E,kBAAkB/tI,GAAU+oD,EAAQ5H,EAAGqF,EAGjDk5F,EAAK9jJ,KAAKosD,MAAM+2F,wBAAwB9oF,EAAMj2D,GAAQ,GAE1D,GAAI0/I,EACJ,CACK9pF,EAAKh6D,KAAKosD,MAAMi3F,mBAAmBj/I,EAAQ0/I,GAErC,MAAN9pF,IAEHh6D,KAAK6+D,aAAa7E,GAAI,GACtBq4E,EAAKr4E,EAAGpP,GAIV/nD,EAAS,CAAC,IAAI8nD,QAAQ1Y,EAAM+M,EAAG8X,GAAK,IAAInM,QAAQ1Y,EAAM+M,EAAGqzF,UA1CzDxvI,EAAS,CAACovC,EAAOA,GA6ClBjyC,KAAK2lG,OAAS9iG,EAGdw3D,EAAKsD,KAAK+kF,0BAA0BroF,EAAMn2D,EAAQE,GAClDi2D,EAAKsD,KAAKglF,aAAatoF,EAAMr6D,KAAK2lG,OAAQzhG,EAAQE,GAClDi2D,EAAKsD,KAAKilF,6BAA6BvoF,EAAMn2D,EAAQE,KAOvDq6I,qBAAqB/+I,UAAUihI,QAAU,SAAStmE,EAAMD,EAAUud,EAAUoiG,EAASp0F,GAEpF,IAAIv/D,EAAQpmB,KAAKosD,MAAM8W,WACnB8yB,EAAM5vE,EAAM62F,YAAY5iD,GACxBx3D,EAAS,KAGb,GAAW,MAAPmzF,GAA6B,MAAdA,EAAI2P,QAAkB3P,EAAI2P,OAAO/kG,OAAS,EAC7D,CACC,IAAI47D,EAAMx8D,KAAK63K,UACX5N,EAAMztG,EAAI,GACVs+G,EAAMt+G,EAAI,GACd35D,EAAS,GAET,IAAK,IAAIqG,EAAI,EAAGA,EAAIszD,EAAI57D,OAAQsI,IAChC,CACC,IAAI6mK,EAAMvzG,EAAItzD,GAGoB,GAA7BhJ,KAAKm8D,MAAM4tG,EAAIjrH,EAAI87H,EAAI97H,IAAwC,GAA7B9+C,KAAKm8D,MAAMy+G,EAAI97H,EAAI+wH,EAAI/wH,IAC/B,GAA7B9+C,KAAKm8D,MAAM4tG,EAAIr/G,EAAIkwH,EAAIlwH,IAAwC,GAA7B1qD,KAAKm8D,MAAMy+G,EAAIlwH,EAAImlH,EAAInlH,IAE1D/nD,EAAOkO,KAAK/Q,KAAK6+D,aAAai8G,EAAIt2J,SAAS,IAG5CylJ,EAAM6Q,EACNA,EAAM/K,GAIR3pJ,EAAMk7C,cACN,IAEC,GAAc,MAAVz+D,EACJ,CACKmzF,EAAM5vE,EAAM62F,YAAY5iD,GAEjB,MAAP27B,IAEHA,EAAMA,EAAIxxE,QACVwxE,EAAI2P,OAAS9iG,EAEbujB,EAAMk3F,YAAYjjD,EAAM27B,IAI1B37B,EAAOikF,cAAc5+I,UAAUihI,QAAQ5/H,MAAMf,KAAMgB,WAEpD,QAEColB,EAAMo7C,YAGP,OAAOnH,GAQRokF,qBAAqB/+I,UAAUk7J,kBAAoB,SAAS1nJ,GAE3D,OAAO,MAQRurI,qBAAqB/+I,UAAUuL,MAAQ,SAAS+zC,EAAG4L,EAAGxnD,GAErDk7I,cAAc5+I,UAAUuL,MAAMlK,MAAMf,KAAMgB,WAExB,MAAdhB,KAAKm3K,OAAsC,MAArBn3K,KAAKm3K,MAAM/zK,IACnCpD,KAAK23E,UAAa33E,KAAKg5K,UAExB9yH,QAAQ+G,WAAWjtD,KAAKm3K,MAAM/zK,GAAO8P,KAAM,MAS7CurI,qBAAqB/+I,UAAUs4K,YAAc,WAE5C,IAAIb,EAAQ,GAGRuB,EAAO14K,KAAK24K,kBAAkB,GAClC34K,KAAKq4K,SAASK,GACdA,EAAK1tE,UAAUnhD,YAAYmgB,wBAC3BmtG,EAAMpmK,KAAK2nK,GAEX,IAAIl8G,EAAMx8D,KAAK66K,mBAGf,GAAI76K,KAAKosD,MAAMiyG,eAAer+J,KAAK8wC,MAAMkc,MACzC,CACoB,MAAfhtD,KAAK2lG,SAER3lG,KAAK2lG,OAAS,IAGf,IAAK,IAAIz8F,EAAI,EAAGA,EAAIszD,EAAI57D,OAAS,EAAGsI,IACpC,CACCwvK,EAAO14K,KAAK06K,oBACZvD,EAAMpmK,KAAK2nK,GACX,IAAIz0E,EAAoD,GAAvC/jG,KAAKm8D,MAAMG,EAAItzD,GAAG81C,EAAIwd,EAAItzD,EAAI,GAAG81C,GAGP,GAAvC9+C,KAAKm8D,MAAMG,EAAItzD,GAAG0hD,EAAI4R,EAAItzD,EAAI,GAAG0hD,IAAW1hD,EAAIszD,EAAI57D,OAAS,IAEhEqjG,EAAoD,GAAvC/jG,KAAKm8D,MAAMG,EAAItzD,GAAG81C,EAAIwd,EAAItzD,EAAI,GAAG81C,IAG/C05H,EAAK1tE,UAAU,EAAe,aAAe,cAC7ChrG,KAAK2lG,OAAO50F,KAAK,IAAI45C,QAAQ,EAAE,KAK7B+tH,EAAO14K,KAAK24K,kBAAkBn8G,EAAI57D,QAKtC,OAJAZ,KAAKq4K,SAASK,GACdA,EAAK1tE,UAAUnhD,YAAYmgB,wBAC3BmtG,EAAMpmK,KAAK2nK,GAEJvB,GAQR14B,qBAAqB/+I,UAAU8tD,OAAS,WAEvCxtD,KAAKu9I,UACLe,cAAc5+I,UAAU8tD,OAAOzsD,MAAMf,KAAMgB,YAQ5Cy9I,qBAAqB/+I,UAAU46K,iBAAmB,SAASnwE,EAAID,GAE9D,GAAIlqG,KAAKosD,MAAMiyG,eAAer+J,KAAK8wC,MAAMkc,MACzC,CACC,IAAIwP,EAAMx8D,KAAK66K,mBAEf,GAAW,MAAPr+G,GAAeA,EAAI57D,OAAS,EAChC,CACC,IAAIo6K,GAAW,EAGf,GAAkB,GAAdx+G,EAAI57D,QAAkD,GAAnCV,KAAKm8D,MAAMG,EAAI,GAAGxd,EAAIwd,EAAI,GAAGxd,IAA8C,GAAnC9+C,KAAKm8D,MAAMG,EAAI,GAAG5R,EAAI4R,EAAI,GAAG5R,GAI3F,GAFAowH,GAAW,EAEyC,GAAhD96K,KAAKm8D,MAAMG,EAAI,GAAG5R,EAAI4R,EAAIA,EAAI57D,OAAS,GAAGgqD,GAC9C,CACC,IAAI8O,EAAK8C,EAAI,GAAGxd,GAAKwd,EAAIA,EAAI57D,OAAS,GAAGo+C,EAAIwd,EAAI,GAAGxd,GAAK,EACzDwd,EAAI,GAAK,IAAI7R,QAAQ+O,EAAI8C,EAAI,GAAG5R,GAChC4R,EAAI,GAAK,IAAI7R,QAAQ+O,EAAI8C,EAAI,GAAG5R,OAGjC,CACC,IAAI6S,EAAKjB,EAAI,GAAG5R,GAAK4R,EAAIA,EAAI57D,OAAS,GAAGgqD,EAAI4R,EAAI,GAAG5R,GAAK,EACzD4R,EAAI,GAAK,IAAI7R,QAAQ6R,EAAI,GAAGxd,EAAGye,GAC/BjB,EAAI,GAAK,IAAI7R,QAAQ6R,EAAI,GAAGxd,EAAGye,GAIjC,IAAK,IAAIv0D,EAAI,EAAGA,EAAIszD,EAAI57D,OAAS,EAAGsI,IAEnC,GAAyB,MAArBlJ,KAAKm3K,MAAMjuK,EAAI,GACnB,CACMihG,EAAK3tC,EAAItzD,GACTghG,EAAK1tC,EAAItzD,EAAI,GADjB,IAEI8wD,EAAK,IAAIrP,QAAQw/C,EAAGnrD,GAAKkrD,EAAGlrD,EAAImrD,EAAGnrD,GAAK,EAAGmrD,EAAGv/C,GAAKs/C,EAAGt/C,EAAIu/C,EAAGv/C,GAAK,GAClE/pD,EAAIb,KAAKm3K,MAAMjuK,EAAI,GAAG4zD,OAC1B98D,KAAKm3K,MAAMjuK,EAAI,GAAG4zD,OAAS,IAAIjS,YAAY3qD,KAAKC,MAAM65D,EAAGhb,EAAIn+C,EAAEilD,MAAQ,GACrE5lD,KAAKC,MAAM65D,EAAGpP,EAAI/pD,EAAE8kD,OAAS,GAAI9kD,EAAEilD,MAAOjlD,EAAE8kD,QAC9C3lD,KAAKm3K,MAAMjuK,EAAI,GAAGskD,SAEdxtD,KAAK43K,mBAET53K,KAAKk6K,iBAAiBl6K,KAAKm3K,MAAMjuK,EAAI,GAAG4zD,QAKvCk+G,IAEH90H,QAAQ+G,WAAWjtD,KAAKm3K,MAAM,GAAGjkK,KAAMlT,KAAKy3K,oBAC5CvxH,QAAQ+G,WAAWjtD,KAAKm3K,MAAM,GAAGjkK,KAAMlT,KAAKy3K,wBAMhD92H,WAAW89F,qBAAuD,qBAAzBA,qBAAuCA,0BAAuBl+I,EA0GvGm+I,aAAah/I,UAAU0sD,MAAQ,KAQ/BsyF,aAAah/I,UAAU0E,OAAS,KAOhCs6I,aAAah/I,UAAUi/I,WAAa,KAOpCD,aAAah/I,UAAUk/I,UAAY,KAOnCF,aAAah/I,UAAUm/I,YAAc,KAOrCH,aAAah/I,UAAUo/I,iBAAmB,KAO1CJ,aAAah/I,UAAUgqF,SAAU,EAQjCg1D,aAAah/I,UAAUyuD,UAAY,WAElC,OAAOnuD,KAAK0pF,SAYbg1D,aAAah/I,UAAU2qF,WAAa,SAASX,GAE5C1pF,KAAK0pF,QAAUA,GAchBg1D,aAAah/I,UAAUu7K,QAAU,SAASC,EAAMpzH,GAE/C9nD,KAAK2+I,WAAWu8B,GAAQpzH,GAczB42F,aAAah/I,UAAUy7K,aAAe,SAASD,EAAMpzH,GAEpD9nD,KAAK4+I,UAAUs8B,GAAQpzH,GAcxB42F,aAAah/I,UAAU07K,eAAiB,SAASF,EAAMpzH,GAEtD9nD,KAAK6+I,YAAYq8B,GAAQpzH,GAc1B42F,aAAah/I,UAAU27K,oBAAsB,SAASH,EAAMpzH,GAE3D9nD,KAAK8+I,iBAAiBo8B,GAAQpzH,GAY/B42F,aAAah/I,UAAU87E,cAAgB,SAASx1B,GAE/C,OAAOwB,QAAQg0B,cAAcx1B,IAa9B04F,aAAah/I,UAAU47K,YAAc,SAASt1H,GAE7C,OAAW,MAAPA,GAAgBwB,QAAQm0B,UAAU31B,GA0B/B,KAxBFhmD,KAAKw7E,cAAcx1B,GAElBwB,QAAQi0B,YAAYz1B,GAEhBhmD,KAAK8+I,iBAAiB94F,EAAIwlF,SAI1BxrI,KAAK6+I,YAAY74F,EAAIwlF,SAKzBhkF,QAAQi0B,YAAYz1B,GAEhBhmD,KAAK4+I,UAAU54F,EAAIwlF,SAInBxrI,KAAK2+I,WAAW34F,EAAIwlF,UAoB/BkT,aAAah/I,UAAU67K,aAAe,SAASv1H,GAE9C,IAAI9hD,EAASsjD,QAAQkwB,UAAU1xB,GAI/B,SAAK9hD,GAAUlE,KAAKoE,QAAUF,EAAOuyB,YAAcz2B,KAAKoE,QAC7B,MAAzBpE,KAAKosD,MAAMk6F,YAAsBtmJ,KAAKosD,MAAMk6F,WAAWva,cAAc/lF,KAMhEE,QAAQ4J,eAAe9vD,KAAKosD,MAAM2R,UAAW75D,IAerDw6I,aAAah/I,UAAUs/I,QAAU,SAASh5F,GAEzC,GAAIhmD,KAAK2sF,kBAAkB3mC,GAG1B,GAAmB,IAAfA,EAAIwlF,QAEPxrI,KAAKs/I,OAAOt5F,QAIR,IAAKhmD,KAAKiiK,eAAej8G,GAC9B,CACC,IAAI1iD,EAAgBtD,KAAKs7K,YAAYt1H,GAEhB,MAAjB1iD,IAEHA,EAAc0iD,GACdwB,QAAQ8vB,QAAQtxB,MAmBpB04F,aAAah/I,UAAUitF,kBAAoB,SAAS3mC,GAEnD,OAAQhmD,KAAKosD,MAAM+B,cAAgB3G,QAAQ6vB,WAAWrxB,IACrDhmD,KAAKu7K,aAAav1H,IAAQhmD,KAAKmuD,aAajCuwF,aAAah/I,UAAUuiK,eAAiB,SAASj8G,GAEhD,OAAOhmD,KAAKosD,MAAMq4E,aAenBia,aAAah/I,UAAU4/I,OAAS,SAASt5F,GAEpChmD,KAAKosD,MAAM+uG,mBAEdn7J,KAAKosD,MAAMkzF,OAAOt5F,IAWpB04F,aAAah/I,UAAUgmB,QAAU,WAEb,MAAf1lB,KAAKoE,QAAyC,MAAvBpE,KAAK++I,iBAE/Bv3F,QAAQgxB,eAAex4E,KAAKoE,OAAQ,UAAWpE,KAAK++I,gBACpD/+I,KAAK++I,eAAiB,MAGvB/+I,KAAKoE,OAAS,MAGfu8C,WAAW+9F,aAAuC,qBAAjBA,aAA+BA,kBAAen+I,EA6C/E0+I,iBAAiBv/I,UAAUmnF,OAAS,MAOpCo4D,iBAAiBv/I,UAAU0sD,MAAQ,KAOnC6yF,iBAAiBv/I,UAAUuqB,MAAQ,KAOnCg1H,iBAAiBv/I,UAAU87K,mBAAoB,EAQ/Cv8B,iBAAiBv/I,UAAU+7K,aAAc,EAOzCx8B,iBAAiBv/I,UAAUw1B,WAAY,EAOvC+pH,iBAAiBv/I,UAAUgqF,SAAU,EAQrCu1D,iBAAiBv/I,UAAUyuD,UAAY,WAEtC,OAAOnuD,KAAK0pF,SASbu1D,iBAAiBv/I,UAAU2qF,WAAa,SAASX,GAEhD1pF,KAAK0pF,QAAUA,GAQhBu1D,iBAAiBv/I,UAAUwiJ,cAAgB,WAE1C,OAAOliJ,KAAKy7K,aAQbx8B,iBAAiBv/I,UAAUg8K,eAAiB,SAASp+K,GAEpD0C,KAAKy7K,YAAcn+K,GAQpB2hJ,iBAAiBv/I,UAAUglB,KAAO,WAEZ,MAAjBzJ,SAASgzB,OAEZjuC,KAAK4iE,IAAM3nD,SAAS9b,cAAc,OAClCa,KAAK4iE,IAAIqiB,UAAY,YACrBjlF,KAAK4iE,IAAIh7C,MAAMygC,WAAa,SAE5BptC,SAASgzB,KAAKvV,YAAY14B,KAAK4iE,KAE/Bpb,QAAQ4xB,oBAAoBp5E,KAAK4iE,IAAK1c,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAEjEhmD,KAAK4sI,oBAURqS,iBAAiBv/I,UAAUi8K,iBAAmB,SAASh2F,GAEtD,OAAOA,EAAG54B,YAUXkyF,iBAAiBv/I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,GAEvD3lF,KAAK4qF,MAAMjF,GAAI,GACf3lF,KAAK4sI,eAQNqS,iBAAiBv/I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEvD,GAAIA,EAAG/N,QAAU53E,KAAKs3F,OAAS3R,EAAG7N,QAAU93E,KAAKu3F,MACjD,CACCv3F,KAAK4qF,MAAMjF,GAAI,GACf,IAAI70C,EAAQ9wC,KAAK27K,iBAAiBh2F,IAE9B3lF,KAAKkiJ,iBAAmBpxG,GAAS9wC,KAAK8wC,OAAU60C,EAAGjO,aAAe13E,KAAKkT,QACxElT,KAAK47K,aAAyB,MAAT9qI,GAAiB9wC,KAAK47K,cAC5Cj2F,EAAGhO,SAAS7mC,EAAMoc,SAAWy4B,EAAGhO,SAAS7mC,EAAMj/B,UAEhD7R,KAAK4sI,cAIP5sI,KAAKs3F,MAAQ3R,EAAG/N,OAChB53E,KAAKu3F,MAAQ5R,EAAG7N,QASjBmnE,iBAAiBv/I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,GAErD3lF,KAAK4qF,MAAMjF,GAAI,GACf3lF,KAAK4sI,eASNqS,iBAAiBv/I,UAAUm8K,WAAa,WAEpB,MAAf77K,KAAK4vF,SAERnhF,OAAOob,aAAa7pB,KAAK4vF,QACzB5vF,KAAK4vF,OAAS,OAShBqvD,iBAAiBv/I,UAAUkrF,MAAQ,SAASjF,EAAIm2F,EAAShrI,GAExD,KAAK9wC,KAAKw7K,mBAAqBh0H,QAAQ6wB,aAAasN,EAAGlO,eAEtDz3E,KAAK67K,aACL/qI,EAAkB,MAATA,EAAiBA,EAAQ9wC,KAAK27K,iBAAiBh2F,GAEpDm2F,GAAW97K,KAAKmuD,aAAwB,MAATrd,IAA8B,MAAZ9wC,KAAK4iE,KAC5B,UAA7B5iE,KAAK4iE,IAAIh7C,MAAMygC,aAChB,CACC,IAAIn1C,EAAOyyE,EAAGjO,YACV14B,EAAI2mC,EAAG/N,OACPhtB,EAAI+6B,EAAG7N,OACP8jG,EAAcj2F,EAAGhO,SAAS7mC,EAAMoc,QAAUy4B,EAAGhO,SAAS7mC,EAAMj/B,MAEhE7R,KAAK4vF,OAASnhF,OAAOkM,WAAWurC,QAAQ1jD,KAAKxC,MAAM,WAElD,IAAKA,KAAKosD,MAAMq4E,cAAgBzkI,KAAKosD,MAAMy5F,iBAAiBj4D,kBAAoB5tF,KAAKosD,MAAMw/B,YAC3F,CAIC,IAAI8uE,EAAM16J,KAAKosD,MAAMquG,WAAW3pH,EAAO59B,EAAM8rC,EAAG4L,GAChD5qD,KAAKqpC,KAAKqxH,EAAK17G,EAAG4L,GAClB5qD,KAAK8wC,MAAQA,EACb9wC,KAAKkT,KAAOA,EACZlT,KAAK47K,YAAcA,MAEjB57K,KAAKiqB,SAUZg1H,iBAAiBv/I,UAAUgnF,KAAO,WAEjC1mF,KAAK67K,aACL77K,KAAK4sI,eAQNqS,iBAAiBv/I,UAAUktI,YAAc,WAExB,MAAZ5sI,KAAK4iE,MAER5iE,KAAK4iE,IAAIh7C,MAAMygC,WAAa,SAC5BroD,KAAK4iE,IAAIrlC,UAAY,KAUvB0hH,iBAAiBv/I,UAAU2pC,KAAO,SAASqxH,EAAK17G,EAAG4L,GAElD,IAAK5qD,KAAKk1B,WAAoB,MAAPwlI,GAAeA,EAAI95J,OAAS,EACnD,CAEiB,MAAZZ,KAAK4iE,KAER5iE,KAAK0kB,OAGN,IAAIk6C,EAAS1Y,QAAQuY,kBAErBz+D,KAAK4iE,IAAIh7C,MAAMi/D,OAAS7mF,KAAK6mF,OAC7B7mF,KAAK4iE,IAAIh7C,MAAMknB,KAAQkQ,EAAI4f,EAAO5f,EAAK,KACvCh/C,KAAK4iE,IAAIh7C,MAAMonB,IAAO4b,EAAIf,YAAYyd,wBACrC1I,EAAOhU,EAAK,KAER1E,QAAQwJ,OAAOgrG,IAMnB16J,KAAK4iE,IAAIrlC,UAAY,GACrBv9B,KAAK4iE,IAAIlqC,YAAYgiI,IALrB16J,KAAK4iE,IAAIrlC,UAAYm9H,EAAIzwJ,QAAQ,MAAO,QAQzCjK,KAAK4iE,IAAIh7C,MAAMygC,WAAa,GAC5BnC,QAAQ8N,IAAIh0D,KAAK4iE,OASnBq8E,iBAAiBv/I,UAAUgmB,QAAU,WAE/B1lB,KAAKk1B,YAETl1B,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/BwnD,QAAQ0yB,QAAQl6E,KAAK4iE,KAEL,MAAZ5iE,KAAK4iE,KAAsC,MAAvB5iE,KAAK4iE,IAAInsC,YAEhCz2B,KAAK4iE,IAAInsC,WAAWgC,YAAYz4B,KAAK4iE,KAGtC5iE,KAAKk1B,WAAY,EACjBl1B,KAAK4iE,IAAM,OAIbjiB,WAAWs+F,iBAA+C,qBAArBA,iBAAmCA,sBAAmB1+I,EAoG3F2lD,QAAQ/6C,OAAO+zI,cAAe/B,cAO9B+B,cAAcx/I,UAAU8lF,UAAY,SAASl+B,EAAQq+B,KAQrDu5D,cAAcx/I,UAAUwrF,UAAY,SAAS5jC,EAAQq+B,GAEhD3lF,KAAKmuD,aAERnuD,KAAKyvC,QAAQk2C,IASfu5D,cAAcx/I,UAAU0rF,QAAU,SAAS9jC,EAAQq+B,KASnDu5D,cAAcx/I,UAAUgmB,QAAU,WAE5B1lB,KAAKk1B,YAETl1B,KAAKk1B,WAAY,EAEjBl1B,KAAKosD,MAAM2kC,oBAAoB/wF,MAC/Bm9I,aAAaz9I,UAAUgmB,QAAQ3kB,MAAMf,QAIvC2gD,WAAWu+F,cAAyC,qBAAlBA,cAAgCA,mBAAgB3+I,EAwElF0rF,gBAAgBvsF,UAAUq8K,WAAY,EAOtC9vF,gBAAgBvsF,UAAU0sD,OAAQ,EAOlC6/B,gBAAgBvsF,UAAUoxC,MAAQ,KAQlCm7C,gBAAgBvsF,UAAUgrG,QAAU,EAQpCze,gBAAgBvsF,UAAUi+I,aAAe,KAWzC1xD,gBAAgBvsF,UAAUgqK,kBAAoB,SAAS91G,GAEtD5zD,KAAKm/I,eAAiBvrF,EAEJ,MAAd5zD,KAAKktD,QAERltD,KAAKktD,MAAMovC,OAAS1oC,IAStBq4B,gBAAgBvsF,UAAUs8K,cAAgB,WAEzCh8K,KAAKktD,MAAQltD,KAAKguI,cAClBhuI,KAAKg+I,UAEAh+I,KAAK+7K,WAAa/7K,KAAKktD,MAAMh6C,KAAKujB,WAAWgH,YAAcz9B,KAAKktD,MAAMh6C,MAE1ElT,KAAKktD,MAAMh6C,KAAKujB,WAAW6B,aAAat4B,KAAKktD,MAAMh6C,KAAMlT,KAAKktD,MAAMh6C,KAAKujB,WAAWgH,aAStFwuD,gBAAgBvsF,UAAUsuI,YAAc,WAEvC,IAAI9gF,EAAQltD,KAAKosD,MAAMmB,aAAaygF,YAAYhuI,KAAK8wC,OAuBrD,OArBAoc,EAAM+4C,mBAAqBjmG,KAAKosD,MAAMsmE,UACtCxlE,EAAMy4C,OAAS3lG,KAAK8wC,MAAM6qB,eAC1BzO,EAAMnsD,MAAMf,KAAK8wC,OACjBoc,EAAMovC,OAASt8F,KAAKm/I,eACpBjyF,EAAMQ,QAAU1tD,KAAK0tD,QACrBR,EAAMw3C,SAAW1kG,KAAKu4F,OACtBrrC,EAAMi7C,UAAW,EAEjBj7C,EAAMuW,QAAWzjE,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAAe7Z,YAAYoe,YAAcpe,YAAY6Z,YACxGxW,EAAMxoC,KAAK1kB,KAAKosD,MAAMU,UAAU24C,kBAChCj+C,QAAQiyB,oBAAoBvsB,EAAMh6C,KAAMlT,KAAKosD,MAAOpsD,KAAK8wC,OAErD9wC,KAAKosD,MAAMqX,SAAW5Z,YAAY6Z,YAErCxW,EAAMm+B,eAAgB,EAItBn+B,EAAMg5C,iBAAmB,SAGnBh5C,GAQR++B,gBAAgBvsF,UAAUu8K,eAAiB,SAASnrI,GAEnD,OAAO9wC,KAAKs4F,aAQbrM,gBAAgBvsF,UAAUs+I,QAAU,WAEjB,MAAdh+I,KAAK8wC,OAA+B,MAAd9wC,KAAKktD,QAE9BltD,KAAKktD,MAAMC,MAAQntD,KAAK8wC,MAAM6sB,KAAKxQ,MAE/BntD,KAAKosD,MAAMhmC,MAAMjX,OAAOnP,KAAK8wC,MAAMkc,OAEtChtD,KAAKktD,MAAMq5C,YAAcvmG,KAAKi8K,iBAC9Bj8K,KAAKktD,MAAMy4C,OAAS3lG,KAAK8wC,MAAM6qB,eAC/B37D,KAAKktD,MAAMm5C,SAAU,IAIrBrmG,KAAKktD,MAAM4P,OAAS,IAAIjS,YAAY7qD,KAAK8wC,MAAMkO,EAAIh/C,KAAK0qG,QAAS1qG,KAAK8wC,MAAM8Z,EAAI5qD,KAAK0qG,QACnF1qG,KAAK8wC,MAAMgV,MAAQ,EAAI9lD,KAAK0qG,QAAS1qG,KAAK8wC,MAAM6U,OAAS,EAAI3lD,KAAK0qG,SACpE1qG,KAAKktD,MAAMuM,SAAWzkC,OAAOh1B,KAAK8wC,MAAMlpB,MAAMiiC,YAAYiR,iBAAmB,KAC7E96D,KAAKktD,MAAMq5C,YAAcvmG,KAAKi8K,iBAAmBj8K,KAAK8wC,MAAM6sB,KAAKxQ,MACjEntD,KAAKktD,MAAMm5C,SAAU,GAIE,MAApBrmG,KAAK8wC,MAAMoc,OAEdltD,KAAKktD,MAAM89C,UAAUhrG,KAAK8wC,MAAMoc,MAAM+9C,cAKnCrqD,SAASM,WAAsC,GAAzBjmC,SAASkmC,gBAET,eAArBnhD,KAAKktD,MAAMovC,QAKdt8F,KAAKktD,MAAMovC,OAAS,QACpBt8F,KAAKktD,MAAMQ,QAAU,GAIrB1tD,KAAKktD,MAAMQ,QAAU1tD,KAAK0tD,SAI5B1tD,KAAKktD,MAAMM,WASby+B,gBAAgBvsF,UAAUgnF,KAAO,WAEhC1mF,KAAKwsF,UAAU,OAQhBP,gBAAgBvsF,UAAU8sF,UAAY,SAAS17C,GAE1C9wC,KAAK8wC,OAASA,IAEC,MAAd9wC,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,MAGdltD,KAAK8wC,MAAQA,EAEK,MAAd9wC,KAAK8wC,OAER9wC,KAAKg8K,kBAUR/vF,gBAAgBvsF,UAAU+vK,cAAgB,SAASzwH,EAAG4L,GAErD,IAAI9gD,GAAM,EAGV,GAAkB,MAAd9J,KAAKktD,OAA8C,MAA7BjyC,SAASswE,mBAA6B3qC,SAASM,UACzE,CACC,IAAIiG,EAAMlsC,SAASswE,iBAAiBvsC,EAAG4L,GAEvC,MAAc,MAAPzD,EACP,CACC,GAAIA,GAAOnnD,KAAKktD,MAAMh6C,KACtB,CACCpJ,GAAM,EACN,MAGDq9C,EAAMA,EAAI1wB,YAIZ,OAAO3sB,GAQRmiF,gBAAgBvsF,UAAUgmB,QAAU,WAEnC1lB,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAK29I,cACzC39I,KAAKosD,MAAMU,UAAU0rB,eAAex4E,KAAKo/I,gBACzCp/I,KAAKosD,MAAM8W,WAAWsV,eAAex4E,KAAKo/I,gBAExB,MAAdp/I,KAAKktD,QAERltD,KAAKktD,MAAMxnC,UACX1lB,KAAKktD,MAAQ,OAIfvM,WAAWsrC,gBAA6C,qBAApBA,gBAAkCA,qBAAkB1rF,EAyExF8+I,oBAAoB3/I,UAAU4zD,OAAS,KAOvC+rF,oBAAoB3/I,UAAUoa,QAAU,KAgBxCulI,oBAAoB3/I,UAAUw8K,WAAa,SAAUhB,EAAM3nH,EAAQsyE,GAElE,IAAIsa,EAAaj6F,QAAQ1jD,KAAKxC,MAAM,WAEnCA,KAAKszD,OAAOG,QAAQF,MAIjBsyE,EAEH7lI,KAAK8Z,QAAQshK,eAAeF,EAAM/6B,GAMlCngJ,KAAK8Z,QAAQmhK,QAAQC,EAAM/6B,IAW7Bd,oBAAoB3/I,UAAUgmB,QAAU,WAEvC1lB,KAAK8Z,QAAQ4L,UACb1lB,KAAK8Z,QAAU,MAGhB6mC,WAAW0+F,oBAAqD,qBAAxBA,oBAAsCA,yBAAsB9+I,EA4CpGi/I,mBAAmB9/I,UAAUwkD,cAAgB,KAS7Cs7F,mBAAmB9/I,UAAUgN,OAAS,KAsGtC8yI,mBAAmB9/I,UAAUy8K,WAAa,SAAS7oH,EAAQm6B,EAAMzgC,EAAMhH,GAEtE,GAAmB,MAAfhmD,KAAK0M,OACT,CACC,IAAI0vK,EAAap8K,KAAKq8K,iBAAiB/oH,EAAQtG,EAAMhH,GACjDz8C,EAAOvJ,KAAK0M,OAAO+wB,WAEvBz9B,KAAKs8K,SAAShpH,EAAQm6B,EAAMzgC,EAAMhH,EAAKo2H,EAAY7yK,EAAM,QAmB3Di2I,mBAAmB9/I,UAAU48K,SAAW,SAAShpH,EAAQm6B,EAAMzgC,EAAMhH,EAAKo2H,EAAY7yK,EAAMlD,GAE3F,IAAImoF,GAAe,EAEnB,MAAe,MAARjlF,EACP,CACC,GAAqB,OAAjBA,EAAKomD,SACT,CACC,IAAI4sH,EAAYhzK,EAAKg7B,aAAa,MAElC,GAAiB,MAAbg4I,GAAqBH,EAAWG,GACpC,CACC,IAAIC,EAAKjzK,EAAKg7B,aAAa,MAC3Bi4I,EAAK/4H,YAAYpkD,IAAIm9K,IAAOA,EAC5B,IAAI10H,EAAQ5B,QAAQgJ,KAAKhJ,QAAQsL,eAAejoD,IAC5CgqD,EAAShqD,EAAKg7B,aAAa,UAC3BkiC,EAAOl9D,EAAKg7B,aAAa,QACzBivD,EAAUjqF,EAAKg7B,aAAa,WAC5Bk4I,EAAclzK,EAAKg7B,aAAa,cAChCmlD,EAAyB,MAAf+yF,GAAuBL,EAAWK,GAE5CjuF,IAEHf,EAAKe,aAAanoF,GAClBmoF,GAAe,GAGJ,MAAR/nB,GAAgBzmE,KAAKkkD,gBAExBuiB,EAAOzmE,KAAKkkD,cAAgBuiB,GAG7B,IAAIkuB,EAAM30F,KAAK08K,UAAUjvF,EAAMn6B,EAAQkpH,EAAI/1G,EAAM3e,EAAOyL,EAAQvG,EAAM3mD,EAAQmtF,EAAS9J,GACvF1pF,KAAKs8K,SAAShpH,EAAQm6B,EAAMzgC,EAAMhH,EAAKo2H,EAAY7yK,EAAKk0B,WAAYk3D,QAG5C,aAAjBprF,EAAKomD,WAEb6+B,GAAe,GAGhBjlF,EAAOA,EAAKovB,cAyBd6mH,mBAAmB9/I,UAAUg9K,UAAY,SAASjvF,EAAMn6B,EAAQzL,EAAK4e,EAAM3e,EAAOyL,EAAQvG,EAAM3mD,EAAQmtF,EAAS9J,GAEhH,IAAIq8C,EAAe,SAAS//E,GAEN,mBAAX,GAET8B,EAAMppD,KAAK40D,EAAQA,EAAQtG,EAAMhH,GAGpB,MAAVuN,GAEHD,EAAOG,QAAQF,EAAQvG,EAAMhH,IAI/B,OAAOynC,EAAKN,QAAQtlC,EAAK4e,EAAMs/D,EAAc1/H,EAAQmtF,EAAS9J,IAQ/D81D,mBAAmB9/I,UAAU28K,iBAAmB,SAAS/oH,EAAQtG,EAAMhH,GAGtE,IAAI5/B,EAAQktC,EAAOlH,MAAM8W,WACrBvV,EAAavnC,EAAMwnC,cAAcZ,GAGjCovH,EAAa,GACjBA,EAAW,UAAoB,MAARpvH,EACvBovH,EAAW,UAAY9oH,EAAOlH,MAAMk0G,oBAAsB,EAC1D8b,EAAW,WAAah2J,EAAM+8C,WAC7B/8C,EAAM2vE,UAAUziC,EAAOlH,MAAM+3B,oBAC9Bi4F,EAAW,QAAkB,MAARpvH,EAErB,IAAI2vH,EAAiB,MAAR3vH,GAAoD,GAApCsG,EAAOlH,MAAMk0G,oBAC1C8b,EAAW,YAAcO,GAAUhvH,EAAa,EAChDyuH,EAAW,cAAgBO,GAAUrpH,EAAOlH,MAAMyoG,eAAe7nG,GAAM,GACvEovH,EAAW,eAAiBO,GAAUrpH,EAAOlH,MAAMyoG,eAAe7nG,GAAM,GACxEovH,EAAW,aAAeO,GAAUrpH,EAAOlH,MAAMkrG,YAAYtqG,GAC7DovH,EAAW,kBAAoBA,EAAW,cAA8B,GAAdzuH,EAC1DyuH,EAAW,YAAcO,GAAUrpH,EAAOlH,MAAMizD,WAAWryD,GAK3D,IAFA,IAAI4vH,EAAY58K,KAAK0M,OAAO42C,qBAAqB,aAExCp6C,EAAE,EAAGA,EAAE0zK,EAAUh8K,OAAQsI,IAClC,CACC,IAAI4+C,EAAQ5B,QAAQgJ,KAAKhJ,QAAQsL,eAAeorH,EAAU1zK,KACtDpL,EAAO8+K,EAAU1zK,GAAGq7B,aAAa,QAEzB,MAARzmC,GAAiC,mBAAX,IAEzBs+K,EAAWt+K,GAAQgqD,EAAMwL,EAAQtG,EAAMhH,IAIzC,OAAOo2H,GAGRz7H,WAAW6+F,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBj/I,EA0DjGk/I,iBAAiB//I,UAAU4zD,OAAS,KAOpCmsF,iBAAiB//I,UAAUugJ,QAAU,KAOrCR,iBAAiB//I,UAAUi+I,aAAe,KAS1C8B,iBAAiB//I,UAAUgrG,QAAU,EAQrC+0C,iBAAiB//I,UAAUioK,eAAgB,EAa3CloB,iBAAiB//I,UAAUglB,KAAO,SAASq5C,GAEzB,MAAbA,IAEH/9D,KAAKigJ,QAAU,IAAIr6D,UAAU7nB,GAI7B/9D,KAAKigJ,QAAQ14F,YAAYC,QAAQi2B,OAAQv3B,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAE5E,IAAI8B,EAAQ9B,EAAIoxB,YAAY,YAI3Bp3E,KAAKszD,OAAOupH,eAFA,MAAT/0H,EAE0B5B,QAAQ1jD,KAAKxC,MAAM,WAE/C8nD,EAAM/mD,MAAMf,KAAMgB,WAClBhB,KAAKigJ,QAAQ1xD,eAKe,SAK/BvuF,KAAK29I,aAAez3F,QAAQ1jD,KAAKxC,MAAM,WAElB,MAAhBA,KAAKigJ,SAERjgJ,KAAKigJ,QAAQ1xD,WAAU,MAIzBvuF,KAAKszD,OAAOlH,MAAM7E,YAAYC,QAAQw6B,aAAchiF,KAAK29I,cACzD39I,KAAKszD,OAAO/L,YAAYC,QAAQu6B,OAAQ/hF,KAAK29I,gBAiB/C8B,iBAAiB//I,UAAUytF,QAAU,SAAS/nC,EAAOqhB,EAAMlT,EAAQupH,GAElE,IAAI/2C,EAAe7/E,QAAQ1jD,KAAKxC,MAAM,WAEvB,MAAVuzD,GAAkBA,EAAO3yD,OAAS,GAErCZ,KAAKszD,OAAOG,QAAQF,MAItB,OAAOvzD,KAAKigJ,QAAQ9yD,QAAQ/nC,EAAOqhB,EAAMs/D,EAAc+2C,IAaxDr9B,iBAAiB//I,UAAU8uF,aAAe,SAAS/nB,GAElDA,EAAOA,GAAQ7lB,SAASsD,cAAgB,iBACxClkD,KAAKigJ,QAAQzxD,aAAa/nB,IAS3Bg5E,iBAAiB//I,UAAUupF,SAAW,WAErC,OAAOjpF,KAAKigJ,QAAQh3D,YAarBw2D,iBAAiB//I,UAAUouF,eAAiB,SAAS1oC,GAEpD,OAAOplD,KAAKigJ,QAAQnyD,eAAe1oC,IAgBpCq6F,iBAAiB//I,UAAUq9K,gBAAkB,SAAS1zF,EAAOjkC,EAAOmO,GAEnE,IAAIwyE,EAAe7/E,QAAQ1jD,KAAKxC,MAAM,WAErCA,KAAKszD,OAAOG,QAAQF,MAGrBvzD,KAAKopF,UAAUC,EAAOjkC,EAAO2gF,IAe9B0Z,iBAAiB//I,UAAU0pF,UAAY,SAASC,EAAOjkC,EAAO9nD,GAE7D,OAAO0C,KAAKigJ,QAAQ72D,UAAUC,EAAOjkC,EAAO9nD,IAoB7CmiJ,iBAAiB//I,UAAU0uF,QAAU,SAAShpC,EAAOqhB,EAAMx6B,EAAM6wI,EAASh1H,GAEzE,IAAIi+E,EAAe7/E,QAAQ1jD,KAAKxC,MAAM,WAErCA,KAAKszD,OAAO0pH,QAAQ/wI,GAEP,MAAT6b,GAEHA,EAAM9nD,KAAKszD,WAIb,OAAOtzD,KAAKigJ,QAAQlyD,cAAc3oC,EAAOqhB,EAAMs/D,EAAc+2C,IAwB9Dr9B,iBAAiB//I,UAAUu9K,aAAe,SAAS73H,EAAOqhB,EAAMy2G,EAAOJ,EAASz3J,EAAQm6B,GAIvF,IAAIz2B,EAAUm9B,QAAQ1jD,KAAKxC,MAAM,WAEhC,MAAqB,mBAAX,EAEFk9K,IAEU,MAATA,EAEDl9K,KAAKszD,OAAOlH,MAAM+zE,UAAU+8C,GAG7B,QAKJn3C,EAAe7/E,QAAQ1jD,KAAKxC,MAAM,SAASgmD,EAAKgH,GAE7B,mBAAZ,EAET3nC,EAAOrlB,KAAKszD,OAAQvqC,IAAWi9B,EAAKgH,GAIpChtD,KAAK2rF,KAAK5iE,IAAWi9B,EAAKgH,GAG3BhtD,KAAKigJ,QAAQ1xD,YACb/mC,QAAQ8vB,QAAQtxB,MAGb2gB,EAAM3mE,KAAKigJ,QAAQ7xD,QAAQhpC,EAAOqhB,EAAMs/D,EAAc+2C,EAAS,KAAMt9H,GAIrE+lC,EAAc,SAASn5B,EAAOpG,EAAKgH,GAEtC+4E,EAAa//E,EAAKgH,IAKnB,OAFAhtD,KAAKm9K,mBAAmBx2G,EAAK4e,GAEtB5e,GAgBR84E,iBAAiB//I,UAAUisF,KAAO,SAASmwB,EAAQ91D,EAAK5hD,GAEvD,IAAIgoD,EAAQpsD,KAAKszD,OAAOlH,MACpBhmC,EAAQgmC,EAAM8W,WAElB,GAAc,MAAV9+D,IACHgiB,EAAMjX,OAAO/K,IACZpE,KAAK2nK,eACLv7G,EAAMitG,kBAAkBj1J,GAYzBpE,KAAK2gI,QAAQ7kB,EAAQ91D,EAAK5hD,OAX3B,CACC,MAAiB,MAAVA,IACLgoD,EAAMuzG,kBAAkBv7J,EAAQ,CAAC03G,GAAS91D,GAE3C5hD,EAASgiB,EAAM2vE,UAAU3xF,GAG1BpE,KAAKqlB,OAAOy2F,EAAQ91D,EAAK5hD,KAoB3Bq7I,iBAAiB//I,UAAU2lB,OAAS,SAASy2F,EAAQ91D,EAAK5hD,GAEzD,IAAIgoD,EAAQpsD,KAAKszD,OAAOlH,MAExB,GAAIA,EAAM2vG,cAAcjgD,GACxB,CACC,IAAI98D,EAAIwI,QAAQqwB,WAAW7xB,GACvB4E,EAAIpD,QAAQuwB,WAAW/xB,GACvBgU,EAAK9T,QAAQ2Y,aAAazS,EAAM2R,UAAW/e,EAAG4L,GAGlD,OAAIwB,EAAM4xG,kBACT5xG,EAAMwzG,cAAcx7J,EAAQ,CAAC03G,GAAS91D,GAE/BoG,EAAMkoG,UAAUlwJ,EAAQ,CAAC03G,GAAS,KAAM9hD,EAAGhb,EAAGgb,EAAGpP,GAIjD5qD,KAAKszD,OAAO8pH,UAAUh5K,EAAQ03G,EAAQ9hD,EAAGhb,EAAGgb,EAAGpP,GAIxD,OAAO,MAYR60F,iBAAiB//I,UAAUihI,QAAU,SAAS7kB,EAAQ91D,EAAK9hD,GAE1D,IAAIkoD,EAAQpsD,KAAKszD,OAAOlH,MACpBhmC,EAAQgmC,EAAM8W,WAElB,GAAc,MAAVh/D,GACHkoD,EAAMitG,kBAAkBv9C,IACxB1vD,EAAMutG,YAAY,KAAMz1J,EAAQ43G,GACjC,CACC,IAAIzhD,EAAO,KAEXj0C,EAAMk7C,cACN,IAEC,IAAI00B,EAAM5vE,EAAM62F,YAAY/4G,GACxBk8C,EAAIh6B,EAAM62F,YAAYnB,GAAQt3F,QAIlC47B,EAAEpB,EAAIg3C,EAAIh3C,GAAKg3C,EAAIlwC,MAAQ1F,EAAE0F,OAAS,EACtC1F,EAAEwK,EAAIorC,EAAIprC,GAAKorC,EAAIrwC,OAASvF,EAAEuF,QAAU,EAExC,IAAItiD,EAAOrD,KAAK0qG,QAAUt+C,EAAMygC,SAC5BjxB,EAAkD,GAA3Cx1C,EAAMk4G,qBAAqBp6H,GAAQ,GAE1ClE,KAAKszD,OAAO+pH,eAEfj9H,EAAEpB,IAAMoB,EAAE0F,MAAQkwC,EAAIlwC,OAAS,EAAIziD,EAAOu4D,EAI1Cxb,EAAEwK,IAAMxK,EAAEuF,OAASqwC,EAAIrwC,QAAU,EAAItiD,EAAOu4D,EAG7CkgD,EAAOwB,YAAYl9D,GAInB,IAAI/5C,EAAS+f,EAAM2vE,UAAU7xF,GAQ7B,GAPAkoD,EAAM69E,QAAQnuB,EAAQz1G,GACtB+lD,EAAM0nG,eAAeh4C,GAIrBzhD,EAAOr6D,KAAKszD,OAAO4/F,WAAWhvJ,EAAQ43G,GAEP,MAA3B11F,EAAM62F,YAAY5iD,GACtB,CACC,IAAIijH,EAAe,IAAIngE,WACvBmgE,EAAapnF,UAAW,EAExB9vE,EAAMk3F,YAAYjjD,EAAMijH,GAGzBlxH,EAAM+mG,QAAQ94F,EAAMh0D,EAAQnC,EAAQ43G,GAErC,QAEC11F,EAAMo7C,YAGPpV,EAAMi4B,kBAAkB,CAACy3B,EAAQzhD,IACjCjO,EAAM0sG,oBAAoBh9C,KAe5B2jC,iBAAiB//I,UAAUy9K,mBAAqB,SAAUx2G,EAAK4e,GAE9D,IAAIg4F,EAAStiK,SAAS9b,cAAc,OACpCo+K,EAAOrlJ,aAAa,MAAOyuC,EAAIpiC,aAAa,QAG5C,IAAIi5I,EAASt3H,QAAQ1jD,KAAKxC,MAAM,SAASgmD,GAOxCu3H,EAAO31J,MAAMk+B,MAAS,EAAI6gB,EAAIxS,YAAe,KAC7CopH,EAAO31J,MAAM+9B,OAAU,EAAIghB,EAAIz4B,aAAgB,KAE/CgY,QAAQ0gB,cAAcD,EAAK3mE,KAAKszD,OAAOlH,MAAOm5B,EAC7Cg4F,GACD/1H,QAAQgxB,eAAe+kG,EAAQ,OAAQC,MAGpC58H,SAASE,MAEZ08H,IAIAh2H,QAAQD,YAAYg2H,EAAQ,OAAQC,IAYtC/9B,iBAAiB//I,UAAUgmB,QAAU,WAEX,MAArB1lB,KAAK29I,eAER39I,KAAKszD,OAAOlH,MAAMosB,eAAe,WAAYx4E,KAAK29I,cAClD39I,KAAKszD,OAAOklB,eAAe,SAAUx4E,KAAK29I,cAC1C39I,KAAK29I,aAAe,MAGD,MAAhB39I,KAAKigJ,UAERjgJ,KAAKigJ,QAAQv6H,UACb1lB,KAAKigJ,QAAU,OAIjBt/F,WAAW8+F,iBAA+C,qBAArBA,iBAAmCA,sBAAmBl/I,EA+YvFmjD,gBAEHD,YAAYj9C,IAAIo6C,SAASoD,SAAW,qBAIpCpD,SAASqC,eAAelyC,KAAK6vC,SAASoD,SAAW,qBAMlD07F,SAAShgJ,UAAY,IAAIo3E,cACzB4oE,SAAShgJ,UAAUqyB,YAAc2tH,SAajCA,SAAShgJ,UAAU+9K,gBAAwC,QAArB78H,SAASwD,SAAsB,UAAY,GASjFs7F,SAAShgJ,UAAUg+K,kBAA0C,QAArB98H,SAASwD,SAAsB,YAAc,GASrFs7F,SAAShgJ,UAAUi+K,oBAA4C,QAArB/8H,SAASwD,SAAsB,cAAgB,GASzFs7F,SAAShgJ,UAAUk+K,mBAA2C,QAArBh9H,SAASwD,SAAsB,aAAe,GASvFs7F,SAAShgJ,UAAUm+K,cAAsC,QAArBj9H,SAASwD,SAAsB,QAAU,GAS7Es7F,SAAShgJ,UAAUo+K,aAAqC,QAArBl9H,SAASwD,SAAsB,OAAS,GAS3Es7F,SAAShgJ,UAAUq+K,gBAAwC,QAArBn9H,SAASwD,SAAsB,UAAY,GAQjFs7F,SAAShgJ,UAAU2mG,QAAU,KAQ7Bq5C,SAAShgJ,UAAU0sD,MAAQ,KAS3BszF,SAAShgJ,UAAU6jK,gBAAkB,KAQrC7jB,SAAShgJ,UAAUugJ,QAAU,KAQ7BP,SAAShgJ,UAAU61D,OAAS,KAQ5BmqF,SAAShgJ,UAAUogJ,aAAe,KAOlCJ,SAAShgJ,UAAUqgJ,YAAc,KAQjCL,SAAShgJ,UAAUygJ,WAAa,KAehCT,SAAShgJ,UAAUigJ,QAAU,KAwB7BD,SAAShgJ,UAAUs+K,eAAiB,OAUpCt+B,SAAShgJ,UAAUu+K,kBAAmB,EAQtCv+B,SAAShgJ,UAAU86E,oBAAqB,EAaxCklE,SAAShgJ,UAAUm9K,eAAiB,KAUpCn9B,SAAShgJ,UAAUw+K,iBAAkB,EASrCx+B,SAAShgJ,UAAUy+K,UAAY,KAQ/Bz+B,SAAShgJ,UAAU0+K,YAAc,KAQjC1+B,SAAShgJ,UAAU2+K,iBAAmB,KAQtC3+B,SAAShgJ,UAAU4+K,aAAe,KASlC5+B,SAAShgJ,UAAU6+K,gBAAkB,KAYrC7+B,SAAShgJ,UAAU8+K,SAAW,KAO9B9+B,SAAShgJ,UAAUsyD,SAAW,QAQ9B0tF,SAAShgJ,UAAU++K,kBAAoB,MAQvC/+B,SAAShgJ,UAAUg/K,gBAAiB,EAQpCh/B,SAAShgJ,UAAUi/K,QAAU,KAQ7Bj/B,SAAShgJ,UAAUk/K,SAAW,KAc9Bl/B,SAAShgJ,UAAU29K,gBAAiB,EAgBpC39B,SAAShgJ,UAAUm/K,eAAgB,EASnCn/B,SAAShgJ,UAAUo/K,gBAAkB,EAcrCp/B,SAAShgJ,UAAUq/K,mBAAoB,EAUvCr/B,SAAShgJ,UAAUs/K,iBAAkB,EAarCt/B,SAAShgJ,UAAUmgJ,qBAAuB,KAU1CH,SAAShgJ,UAAUu/K,oBAAsB,EAQzCv/B,SAAShgJ,UAAU2gJ,mBAAqB,YAWxCX,SAAShgJ,UAAUw/K,MAAQ,KAO3Bx/B,SAAShgJ,UAAUy/K,iBAAmB,KAQtCz/B,SAAShgJ,UAAU0/K,SAAW,GAO9B1/B,SAAShgJ,UAAU2/K,KAAO,KAO1B3/B,SAAShgJ,UAAU4/K,gBAAkB,KAUrC5/B,SAAShgJ,UAAU6/K,QAAU,KAQ7B7/B,SAAShgJ,UAAU8/K,UAAY,IAQ/B9/B,SAAShgJ,UAAU+/K,WAAa,IAQhC//B,SAAShgJ,UAAUggL,gBAAkB,IASrChgC,SAAShgJ,UAAUigL,iBAAmB,KAUtCjgC,SAAShgJ,UAAUkgL,sBAAuB,EAQ1ClgC,SAAShgJ,UAAUmgL,YAAa,EAOhCngC,SAAShgJ,UAAUgzB,UAAW,EAO9BgtH,SAAShgJ,UAAUogL,WAAa,WAE/B,OAAO9/K,KAAK0yB,UAQbgtH,SAAShgJ,UAAUqgL,YAAc,SAAUziL,GAE1C0C,KAAK0yB,SAAWp1B,GA8DjBoiJ,SAAShgJ,UAAUkgJ,WAAa,WAE/B5/I,KAAK08K,UAAU,QAAQ,SAASppH,GAE/BA,EAAO4hC,UAGRl1F,KAAK08K,UAAU,SAAS,SAASppH,GAEhC,IAAI6hH,EAAU,IAAI1xC,eAAenwE,EAAOlH,MAAO,GAC/C+oH,EAAQ7/H,UAGTt1C,KAAK08K,UAAU,QAAQ,SAASppH,GAE/BpN,QAAQ7c,KAAKiqB,EAAOlH,MAAO,KAAM,GAAI,OAGtCpsD,KAAK08K,UAAU,eAAe,SAASppH,GAEtC,IAAIqB,EAAMrB,EAAO0sH,cAEjB,GAAW,MAAPrrH,GAAe/T,SAASmC,SAE3BuQ,EAAOG,QAAQ,YAGhB,CACC,IAAIvgD,EAAOgzC,QAAQ+c,WAAW3P,EAAOlH,MAAO,GACxCqE,EAAMvK,QAAQ6L,OAAO7+C,EAAM,MAE/BgzC,QAAQuP,OAAOd,EAAKrB,EAAOmrH,kBAAoB,IAC9CttB,mBAAmB1gG,GAAMx1C,SAAU,cAItCjb,KAAK08K,UAAU,WAAW,SAASppH,GAElCA,EAAOlH,MAAMmxF,aAGdv9I,KAAK08K,UAAU,OAAO,SAASppH,GAE1BA,EAAOlH,MAAM+B,aAEhBk1B,YAAYM,IAAIrwB,EAAOlH,UAIzBpsD,KAAK08K,UAAU,QAAQ,SAASppH,GAE3BA,EAAOlH,MAAM+B,aAEhBk1B,YAAYh9B,KAAKiN,EAAOlH,UAI1BpsD,KAAK08K,UAAU,SAAS,SAASppH,GAE5BA,EAAOlH,MAAM+B,aAEhBk1B,YAAYY,MAAM3wB,EAAOlH,UAI3BpsD,KAAK08K,UAAU,UAAU,SAASppH,GAE7BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMw3B,iBAIf5jF,KAAK08K,UAAU,SAAS,SAASppH,GAE5BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMghG,iBAAiB95F,EAAO6+F,iBAIvCnyJ,KAAK08K,UAAU,WAAW,SAASppH,GAE9BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMi4B,kBAAkB/wB,EAAOlH,MAAMmmG,mBAI9CvyJ,KAAK08K,UAAU,oBAAoB,SAASppH,GAEvCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMumG,2BAIf3yJ,KAAK08K,UAAU,QAAQ,SAASppH,GAE3BA,EAAOlH,MAAM+B,aAEhBmF,EAAO07B,UAIThvF,KAAK08K,UAAU,QAAQ,SAASppH,GAE3BA,EAAOlH,MAAM+B,aAEhBmF,EAAO27B,UAITjvF,KAAK08K,UAAU,UAAU,SAASppH,GAEjCA,EAAOlH,MAAMwrG,YAGd53J,KAAK08K,UAAU,WAAW,SAASppH,GAElCA,EAAOlH,MAAMyrG,aAGd73J,KAAK08K,UAAU,cAAc,SAASppH,GAErCA,EAAOlH,MAAM0rG,gBAGd93J,KAAK08K,UAAU,OAAO,SAASppH,GAE9BA,EAAOlH,MAAM4H,SAGdh0D,KAAK08K,UAAU,kBAAkB,SAASppH,EAAQtG,GAEjDsG,EAAO2sH,eAAejzH,MAGvBhtD,KAAK08K,UAAU,aAAa,SAASppH,GAEhCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMi1G,eAIfrhK,KAAK08K,UAAU,cAAc,SAASppH,GAEjCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM2E,oBAIf/wD,KAAK08K,UAAU,kBAAkB,SAASppH,GAErCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMm1G,oBAIfvhK,KAAK08K,UAAU,eAAe,SAASppH,GAElCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMq1G,iBAIfzhK,KAAK08K,UAAU,QAAQ,SAASppH,EAAQtG,GAEnCsG,EAAOlH,MAAM+B,aAChBmF,EAAOlH,MAAMmhG,eAAevgG,IAE5BsG,EAAOlH,MAAMihG,mBAAmBrgG,MAIlChtD,KAAK08K,UAAU,UAAU,SAASppH,EAAQtG,GAErCsG,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM4lG,YAAW,MAI1BhyJ,KAAK08K,UAAU,WAAW,SAASppH,EAAQtG,GAEtCsG,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM4lG,YAAW,MAI1BhyJ,KAAK08K,UAAU,cAAc,SAASppH,EAAQtG,GAE7CsG,EAAOlH,MAAMirG,WAAWrqG,MAGzBhtD,KAAK08K,UAAU,aAAa,SAASppH,GAEpCA,EAAOlH,MAAMmrG,eAGdv3J,KAAK08K,UAAU,QAAQ,SAASppH,GAE/BA,EAAOlH,MAAMwgG,UAGd5sJ,KAAK08K,UAAU,kBAAkB,SAASppH,GAErCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM00G,wBAIf9gK,KAAK08K,UAAU,cAAc,SAASppH,GAEjCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMw0G,oBAIf5gK,KAAK08K,UAAU,gBAAgB,SAASppH,GAEnCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM20G,sBAIf/gK,KAAK08K,UAAU,eAAe,SAASppH,GAElCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM40G,qBAIfhhK,KAAK08K,UAAU,YAAY,SAASppH,GAE/BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM+jF,WAAU,MAIzBnwI,KAAK08K,UAAU,eAAe,SAASppH,GAEtC,GAAIA,EAAOlH,MAAM+B,YACjB,CACC,IAAIiS,EAAQ9M,EAAOlH,MAAMulD,mBACzBr+C,EAAOlH,MAAM+jF,WAAU,GAAM,EAAO/vE,OAItCpgE,KAAK08K,UAAU,UAAU,SAASppH,GAE7BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAM+jF,WAAU,MAIzBnwI,KAAK08K,UAAU,aAAa,SAASppH,GAEpC,GAAIA,EAAOlH,MAAM+B,YACjB,CACC,IAAIiS,EAAQ9M,EAAOlH,MAAMulD,mBACzBr+C,EAAOlH,MAAM+jF,WAAU,GAAO,EAAO/vE,OAIvCpgE,KAAK08K,UAAU,QAAQ,SAASppH,GAE3BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMolG,qBACZ3nG,YAAYsoB,gBACZtoB,YAAY6pB,cAIf1zE,KAAK08K,UAAU,UAAU,SAASppH,GAE7BA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMolG,qBACZ3nG,YAAYsoB,gBACZtoB,YAAY8pB,gBAIf3zE,KAAK08K,UAAU,aAAa,SAASppH,GAEhCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMolG,qBACZ3nG,YAAYsoB,gBACZtoB,YAAY+pB,mBAIf5zE,KAAK08K,UAAU,kBAAkB,SAASppH,GAErCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAYyrB,eAItCt1E,KAAK08K,UAAU,oBAAoB,SAASppH,GAEvCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAYqY,iBAItCliE,KAAK08K,UAAU,mBAAmB,SAASppH,GAEtCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAYsY,gBAItCniE,KAAK08K,UAAU,iBAAiB,SAASppH,GAEpCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAY0rB,cAItCv1E,KAAK08K,UAAU,oBAAoB,SAASppH,GAEvCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAYuY,iBAItCpiE,KAAK08K,UAAU,oBAAoB,SAASppH,GAEvCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMqlG,WAAW5nG,YAAYwY,iBAItCriE,KAAK08K,UAAU,iBAAiB,SAASppH,GAGxCA,EAAOlH,MAAMiV,cACZxX,YAAY8kB,YACZ9kB,YAAYyrB,eAGdt1E,KAAK08K,UAAU,mBAAmB,SAASppH,GAEtCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMiV,cACZxX,YAAY8kB,YACZ9kB,YAAYqY,iBAIfliE,KAAK08K,UAAU,kBAAkB,SAASppH,GAErCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMiV,cACZxX,YAAY8kB,YACZ9kB,YAAYsY,gBAIfniE,KAAK08K,UAAU,gBAAgB,SAASppH,GAEnCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMiV,cACZxX,YAAY+kB,qBACZ/kB,YAAY0rB,cAIfv1E,KAAK08K,UAAU,mBAAmB,SAASppH,GAEtCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMiV,cACZxX,YAAY+kB,qBACZ/kB,YAAYuY,iBAIfpiE,KAAK08K,UAAU,mBAAmB,SAASppH,GAEtCA,EAAOlH,MAAM+B,aAEhBmF,EAAOlH,MAAMiV,cACZxX,YAAY+kB,qBACZ/kB,YAAYwY,iBAIfriE,KAAK08K,UAAU,QAAQ,SAASppH,GAE/B,IAAI5+B,EAAuC,IAA7B4+B,EAAOlH,MAAMU,UAAUK,MACjCA,EAAQjlD,WAAWg+C,QAAQqgB,OAC9B9iB,YAAYpkD,IAAIi0D,EAAOmqH,kBACvBnqH,EAAOmqH,gBACP/oJ,IAAU,IAENr0B,MAAM8sD,IAEVmG,EAAOlH,MAAMU,UAAU0uF,SAASruF,MAIlCntD,KAAK08K,UAAU,eAAe,SAASppH,GAElB,MAAhBA,EAAO4rH,MAEV5rH,EAAO4rH,MAAMj3H,YAAYqL,EAAO4rH,MAAMl3H,aAItCsL,EAAO4sH,eAITlgL,KAAK08K,UAAU,cAAc,SAASppH,GAElB,MAAfA,EAAO+rH,KAEV/rH,EAAO+rH,KAAKp3H,YAAYqL,EAAO+rH,KAAKr3H,aAIpCsL,EAAO6sH,cAITngL,KAAK08K,UAAU,iBAAiB,SAASppH,GAElB,MAAlBA,EAAO+yC,QAEV/yC,EAAO8sH,cAIP9sH,EAAO+yC,QAAQp+C,YAAYqL,EAAO+yC,QAAQr+C,gBAI5ChoD,KAAK08K,UAAU,iBAAiB,SAASppH,GAExCxO,MAAMmD,YAAYnD,MAAMkD,iBAmB1B03F,SAAShgJ,UAAU0gJ,UAAY,SAAUltI,GAExC,GAAY,MAARA,EACJ,CAGC,IAAImtK,EAAM,IAAIn8G,QAAQhxD,EAAKquB,eAC3B8+I,EAAIC,OAAOptK,EAAMlT,MAIjBA,KAAKugL,iBAUP7gC,SAAShgJ,UAAU8gL,eAAiB,WAEnCvlK,SAASwlK,OACR,+DAQF/gC,SAAShgJ,UAAU6gL,aAAe,WAEjCvgL,KAAKi1F,cAAe,IAAIx1F,MAAOK,UAC/BE,KAAK+/I,YAAYvvI,QACjBxQ,KAAKg1F,eAAiB,EACtBh1F,KAAK+/K,aAAY,IAyBlBrgC,SAAShgJ,UAAUg9K,UAAY,SAAUgE,EAAY54H,GAEpD9nD,KAAK2/I,QAAQ+gC,GAAc54H,GAmB5B43F,SAAShgJ,UAAU+zD,QAAU,SAAUitH,EAAY1zH,EAAMhH,GAExD,IAAIuN,EAASvzD,KAAK2/I,QAAQ+gC,GAE1B,GAAc,MAAVntH,EAEH,IAIC,IAAI1/C,EAAO7S,UACX6S,EAAK,GAAK7T,KAGVuzD,EAAOxyD,MAAMf,KAAM6T,GAEpB,MAAO5H,GAKN,MAHAi6C,QAAQznD,MAAM,kBAAoBiiL,EACjC,KAAOz0K,EAAEojD,QAAS,KAAK,GAElBpjD,OAKPi6C,QAAQznD,MAAM,sBAAsBiiL,EAAY,KAAK,IASvDhhC,SAAShgJ,UAAUihL,YAAc,SAAU7iL,EAAM8iL,GAEhD5gL,KAAKm+K,UAAUrgL,GAAQ8iL,GAQxBlhC,SAAShgJ,UAAUmhL,YAAc,SAAU/iL,GAE1C,OAAOkC,KAAKm+K,UAAUrgL,IASvB4hJ,SAAShgJ,UAAUsgJ,YAAc,WAEhC,IAAI5zF,EAAQ,IAAIssF,QAAQ,KAAM,KAAM14I,KAAKujK,iBA6CzC,OA1CAn3G,EAAM0yG,aAAY,GAClB1yG,EAAM2yG,YAAW,GAKjB/+J,KAAK8gL,uBAAuB10H,GAG5BpsD,KAAK+gL,mBAAmB30H,GAGxBpsD,KAAKghL,oBAAoB50H,GAGzBpsD,KAAKihL,qBAAqB70H,GAK1BpsD,KAAKkhL,qBAAqB90H,GAI1BA,EAAMy5F,iBAAiBx4D,cACtBnnC,QAAQ1jD,KAAKxC,MAAM,SAASytF,EAAMzgC,EAAMhH,GAEvC,OAAOhmD,KAAKmhL,gBAAgB1zF,EAAMzgC,EAAMhH,MAK1CoG,EAAMy/F,kBAAkBx+D,cACvBnnC,QAAQ1jD,KAAKxC,MAAM,SAASkE,EAAQE,GAEnC,OAAOpE,KAAKkzJ,WAAWhvJ,EAAQE,MAIjCpE,KAAKohL,sBAAsBh1H,GAC3BpsD,KAAKqhL,oBAAoBj1H,GAElBA,GAQRszF,SAAShgJ,UAAU0hL,sBAAwB,SAAUh1H,GAEpD,IAAIk1H,EAAc,IAAIhnC,kBAAkBluF,GAAO,GAY/C,OAVAk1H,EAAYtmE,aAAe90D,QAAQ1jD,KAAKxC,MAAM,WAE7C,OAAOA,KAAKq9K,kBAGbiE,EAAYnzH,UAAYjI,QAAQ1jD,KAAKxC,MAAM,WAE1C,OAAOA,KAAK++K,qBAGNuC,GASR5hC,SAAShgJ,UAAU2hL,oBAAsB,SAAUj1H,GAElD,IAAIm1H,EAAY,IAAItnC,gBAAgB7tF,GAEhC3a,EAAOzxC,KAyCX,OAxCAuhL,EAAUxb,UAAY,SAAS/4G,GAE9B,IAAIkkD,EAAS,KACT9qF,EAAQqrB,EAAK2a,MAAM8W,WAkCvB,OAhC6B,MAAzB98C,EAAM2vE,UAAU/oC,KAKfvb,EAAKutI,iBACR5yH,EAAMizD,WAAWryD,IAEU,MAAvBvb,EAAK+vI,iBAER/vI,EAAK+vI,eAAiB/vI,EAAKgwI,wBAG5BvwE,EAASz/D,EAAK+vI,gBAMN/vI,EAAKotI,gBACZzyH,EAAMkrG,YAAYtqG,IACuB,MAA1C5mC,EAAM2vE,UAAU3vE,EAAM2vE,UAAU/oC,OAEN,MAAtBvb,EAAKiwI,gBAERjwI,EAAKiwI,cAAgBjwI,EAAKkwI,uBAG3BzwE,EAASz/D,EAAKiwI,gBAITxwE,GAGDqwE,GAQR7hC,SAAShgJ,UAAUkiL,kBAAoB,SAAU7jH,GAEpB,MAAxB/9D,KAAKosD,MAAM2R,YAId/9D,KAAKosD,MAAM1nC,KAAKq5C,GAIhB/9D,KAAK6hL,WAAa,IAAIhkC,aAAa79I,KAAKosD,OAGpCpsD,KAAKw6E,oBAERhzB,QAAQgzB,mBAAmBzc,GAIxBnd,SAASM,WAEZ,IAAIikC,aAAapnB,KAWpB2hF,SAAShgJ,UAAUohL,uBAAyB,SAAU10H,GAGrDA,EAAM7E,YAAYC,QAAQw6B,aACzB97B,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAEnC,IAAIgH,EAAOhH,EAAIoxB,YAAY,QAEf,MAARpqB,GACHZ,EAAM+B,aACiB,MAAvBnuD,KAAKg+K,iBAELh+K,KAAKyzD,QAAQzzD,KAAKg+K,eAAgBhxH,GAClChH,EAAIsxB,gBAWRooE,SAAShgJ,UAAUqhL,mBAAqB,SAAU30H,GAEjD,IAAItc,EAAWoW,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAElD,IAAIqpC,EAAOrpC,EAAIoxB,YAAY,QAC3Bp3E,KAAK+/I,YAAYxwD,qBAAqBF,MAGvCjjC,EAAM8W,WAAW3b,YAAYC,QAAQ43B,KAAMtvC,GAC3Csc,EAAMU,UAAUvF,YAAYC,QAAQ43B,KAAMtvC,GAG1C,IAAIoqG,EAAc,SAAS5yF,EAAQtB,GAElC,IAAIqG,EAAUrG,EAAIoxB,YAAY,QAAQ/qB,QACtCD,EAAMi4B,kBAAkBj4B,EAAMigG,4BAA4BhgG,KAG3DrsD,KAAK+/I,YAAYx4F,YAAYC,QAAQ43B,KAAM86D,GAC3Cl6I,KAAK+/I,YAAYx4F,YAAYC,QAAQ63B,KAAM66D,IAQ5CwF,SAAShgJ,UAAUshL,oBAAsB,SAAU50H,GAElD,IAAItc,EAAWoW,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAE1CtnD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ62B,UAG1CjyB,EAAMU,UAAUvF,YAAYC,QAAQs4B,KAAMhwC,GAC1Csc,EAAMU,UAAUvF,YAAYC,QAAQq4B,GAAI/vC,IAUzC4vG,SAAShgJ,UAAUuhL,qBAAuB,SAAU70H,GAEnD,IAAItc,EAAWoW,QAAQ1jD,KAAKxC,MAAM,SAASsnD,EAAQtB,GAGlDhmD,KAAK+/K,aAAY,GAIM,GAAnB//K,KAAK6/K,YAERzzH,EAAM4tG,gBAMP,IAFA,IAAI3tG,EAAUrG,EAAIoxB,YAAY,QAAQ/qB,QAE7BnjD,EAAI,EAAGA,EAAImjD,EAAQzrD,OAAQsI,IACpC,CACC,IAAI63B,EAASsrB,EAAQnjD,GAErB,GAAI63B,aAAkBs3F,cACpBt3F,aAAkB4rB,eACnB5rB,EAAOisB,MAAQhtD,KAAKosD,MAAMhmC,MAAM4rE,MAC/BjxD,aAAkB23F,uBACnB33F,EAAOisB,MAAQhtD,KAAKosD,MAAMhmC,MAAM4rE,KACjC,CACChyF,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ62B,OACzC,WAKHjyB,EAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQxvC,IAS9C4vG,SAAShgJ,UAAUwhL,qBAAuB,SAAU90H,GAEnD,IAAI3a,EAAOzxC,KACP8hL,EACJ,CACCt8F,UAAW,SAASl+B,EAAQq+B,GAEA,MAAvBl0C,EAAKorI,gBACPl3F,EAAGxN,mBACH1mC,EAAKysI,iBACW,MAAjBv4F,EAAG54B,aAEHtb,EAAK2a,MAAM2E,iBACXtf,EAAKorI,eAAel3F,EAAGlO,WAAYkO,EAAGzN,WAItCl4E,KAAK0qF,UAAW,EAChB/E,EAAGrO,YAIL4T,UAAW,SAAS5jC,EAAQq+B,GAEvB3lF,KAAK0qF,UAER/E,EAAGrO,WAIL8T,QAAS,SAAS9jC,EAAQq+B,GAErB3lF,KAAK0qF,WAER1qF,KAAK0qF,UAAW,EAChB/E,EAAGrO,aAKNlrB,EAAM+jC,iBAAiB2xF,IASxBpiC,SAAShgJ,UAAUiiL,oBAAsB,WAExC,IAAII,EAAK/hL,KAAKosD,MAAMygC,SAChBqkB,EAAS,IAAIpB,cAAc9vG,KAAKosD,OAAQpsD,KAAKq9K,eAC/Cr9K,KAAK8+K,gBAAiB,EAAEiD,EAAI,EAAEA,GAQhC,OALA7wE,EAAOwL,gBAAkB,SAAS1vD,GAEjC,OAAQkkD,EAAO9kD,MAAMizD,WAAWryD,IAG1BkkD,GASRwuC,SAAShgJ,UAAU+hL,qBAAuB,WAEzC,OAAO,IAAIzxE,oBAAoBhwG,KAAKosD,MAAOpsD,KAAKq9K,iBAQjD39B,SAAShgJ,UAAUwgJ,cAAgB,WAElC,OAAO,IAAIT,iBAAiB,KAAMz/I,OAQnC0/I,SAAShgJ,UAAUsiL,oBAAsB,SAAUjkH,GAElD/9D,KAAKigJ,QAAQv7H,KAAKq5C,GAGdnd,SAASM,WAEZ,IAAIikC,aAAapnB,IAiBnB2hF,SAAShgJ,UAAUuiL,mBAAqB,SAAUlkH,GAE9B,MAAf/9D,KAAKu1D,SAERv1D,KAAKu1D,OAASwI,EAId/9D,KAAKunD,YAAYC,QAAQg3B,KAAMt4B,QAAQ1jD,KAAKxC,MAAM,WAEjD,IAAIkiL,GAAS,IAAIziL,MAAO0iL,iBACxBniL,KAAKoiL,WAAW3+H,YAAYpkD,IAAIW,KAAK09K,oBACpC19K,KAAK09K,mBAAmB,KAAKwE,OAK/BliL,KAAKunD,YAAYC,QAAQ+2B,KAAMr4B,QAAQ1jD,KAAKxC,MAAM,WAEjDA,KAAKoiL,WAAW3+H,YAAYpkD,IAAIW,KAAK29K,sBACpC39K,KAAK29K,qBAAqB,KAAK39K,KAAKw+K,cAIlC59H,SAASM,WAEZ,IAAIikC,aAAapnB,KAepB2hF,SAAShgJ,UAAU0iL,UAAY,SAAU/yH,GAErB,MAAfrvD,KAAKu1D,QAA6B,MAAXlG,IAE1BrvD,KAAKu1D,OAAOh4B,UAAY8xB,IAc1BqwF,SAAShgJ,UAAU2iL,kBAAoB,SAAUtkH,GAEhD/9D,KAAKunD,YAAYC,QAAQ62B,KAAMn4B,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAE1DyW,EAAUxgC,UAAYv9B,KAAKsiL,eAIxB1hI,SAASM,WAEZ,IAAIikC,aAAapnB,IAiBnB2hF,SAAShgJ,UAAU6iL,WAAa,SAAUv1H,EAAMi3C,GAE/C,GAAY,MAARj3C,EACJ,CACC,IAAIkkD,EAAS,IAAIlB,oBAAoBhwG,KAAKosD,MAAO63C,GACjDiN,EAAOz9C,QAAQzG,KAUjB0yF,SAAShgJ,UAAU4iL,SAAW,WAE7B,IAAIl9H,EAAQ,GACRgH,EAAQpsD,KAAKosD,MACbY,EAAOZ,EAAMgrG,iBAEjB,MAAe,MAARpqG,GAEiC,MADpCZ,EAAM8W,WAAW6yB,UAClB3pC,EAAM8W,WAAW6yB,UAAU/oC,IAGzBZ,EAAMkrG,YAAYtqG,KAErB5H,EAAQ,MACRgH,EAAMohG,qBAAqBxgG,GAAQ5H,GAGpC4H,EAAOZ,EAAM8W,WAAW6yB,UAAU/oC,GAGnC,IAAI8B,EAAS9uD,KAAKwiL,eAElB,OAAO1zH,EAAS1J,GASjBs6F,SAAShgJ,UAAU8iL,aAAe,WAEjC,IAAIxwF,EAAOhyF,KAAKosD,MAAM8W,WAAWC,UACjC,OAAOnjE,KAAKosD,MAAMohG,qBAAqBx7D,IAQxC0tD,SAAShgJ,UAAUsvF,KAAO,WAEzBhvF,KAAK+/I,YAAY/wD,QAQlB0wD,SAAShgJ,UAAUuvF,KAAO,WAEzBjvF,KAAK+/I,YAAY9wD,QAUlBywD,SAAShgJ,UAAUyyJ,WAAa,WAE/B,IAAI5tF,EAAkC,MAAxBvkE,KAAKu+K,gBAClBv+K,KAAKu+K,gBACLv+K,KAAKosD,MAAMygC,SACZ,OAAO7sF,KAAKosD,MAAM+lG,WAAWnyJ,KAAKyiL,cAAel+G,IASlDm7E,SAAShgJ,UAAU+iL,YAAc,WAEhC,IAAIr8J,EAAQpmB,KAAKosD,MAAM8W,WAEvB,OAAO98C,EAAM+5G,UAAUngI,KAAKs+K,eA0B7B5+B,SAAShgJ,UAAU41C,KAAO,SAAUkpI,GAEnC,GAAgB,MAAZA,EACJ,CACC,IAAI/tH,EAAMvK,QAAQkE,KAAKo0H,GAAUzsH,SACjC/xD,KAAK0iL,eAAejyH,EAAI7N,iBACxB5iD,KAAKw+K,SAAWA,EAEhBx+K,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ+2B,KAAM,WAAYigG,MAU7D9+B,SAAShgJ,UAAUgjL,eAAiB,SAAUxvK,GAE7C,IAAImtK,EAAM,IAAIn8G,QAAQhxD,EAAKquB,eAC3B8+I,EAAIC,OAAOptK,EAAMlT,KAAKosD,MAAM8W,YAC5BljE,KAAKugL,gBAuBN7gC,SAAShgJ,UAAUw1F,KAAO,SAAUvgC,EAAK3C,GAMxC,GAHA2C,EAAMA,GAAO30D,KAAK2iL,aAGP,MAAPhuH,GAAeA,EAAI/zD,OAAS,EAChC,CACC,IAAI+Q,EAAO3R,KAAK4iL,gBAAgB5wH,GAChChyD,KAAK6iL,YAAYluH,EAAKhjD,GAGtB3R,KAAK+/K,aAAY,GAIlB//K,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQg3B,KAAM,MAAO7pB,KAyBvD+qF,SAAShgJ,UAAUmjL,YAAc,SAAUluH,EAAKhjD,GAE3C3R,KAAK0+K,iBAER/sK,EAAOw/I,mBAAmBx/I,IAG3Bu0C,QAAQnW,KAAK4kB,EAAK30D,KAAKy+K,kBAAkB,IAAI9sK,EAC5Cu0C,QAAQ1jD,KAAKxC,MAAM,SAASiqD,GAE3BjqD,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQ82B,KACxC,UAAWr0B,EAAK,MAAO0K,EAAK,OAAQhjD,SAuBxC+tI,SAAShgJ,UAAUkjL,gBAAkB,SAAU5wH,GAE9CA,EAAwB,MAAZA,EAAoBA,EAAWhyD,KAAKgyD,SAChD,IAAIiS,EAAM,IAAIC,QACVhxD,EAAO+wD,EAAIE,OAAOnkE,KAAKosD,MAAM8W,YAEjC,OAAOhd,QAAQ6L,OAAO7+C,EAAM8+C,IAU7B0tF,SAAShgJ,UAAUijL,WAAa,WAE/B,OAAO3iL,KAAK2+K,SAYbj/B,SAAShgJ,UAAUsgL,YAAc,WAEhC,OAAOhgL,KAAK4+K,UASbl/B,SAAShgJ,UAAUojL,WAAa,SAAUxiI,EAAOC,GAEhD,IAAI34B,EAAQ5nB,KAAKosD,MAAMggG,gBAAgBzlH,OAAO4Z,GAC9CvgD,KAAKosD,MAAMU,UAAUs/F,gBAAgBjkB,aACpC5nF,EAAQvgD,KAAKosD,MAAMggG,gBAAgBzlH,OAAO2Z,IAC3CtgD,KAAKosD,MAAMggG,gBAAgBjkB,aAAa7nF,EAAO14B,GAC/C5nB,KAAKosD,MAAMmxF,WAUZmC,SAAShgJ,UAAUugL,eAAiB,SAAUjzH,GAiB7C,GAfAA,EAAOA,GAAQhtD,KAAKosD,MAAMkhG,mBAKd,MAARtgG,IAEHA,EAAOhtD,KAAKosD,MAAMgrG,iBAEN,MAARpqG,IAEHA,EAAOhtD,KAAKosD,MAAM8W,WAAWC,YAInB,MAARnW,EACJ,CAGChtD,KAAKosD,MAAMu4E,aAAY,GAEvB,IAAIvwE,EAASlO,QAAQ4X,UAAU99D,KAAKosD,MAAM2R,WACtC/e,EAAIoV,EAAOpV,EAAE,GACb4L,EAAIwJ,EAAOxJ,EAGf,GAAuB,MAAnB5qD,KAAK67C,YAAuB77C,KAAK4/K,qBASrC,CACC,IAAI9iH,EAAS98D,KAAKosD,MAAM88E,cAAcl8E,GAExB,MAAV8P,IAEH9d,GAAK8d,EAAO9d,EAAE9+C,KAAKyD,IAAI,IAAKm5D,EAAOhX,OACnC8E,GAAKkS,EAAOlS,QAbb5L,EAAIh/C,KAAK67C,WAAW+7B,OACpBhtB,EAAI5qD,KAAK67C,WAAWi8B,OAkBrB93E,KAAKu/I,iBACL,IAAIrsI,EAAOlT,KAAK+iL,iBAAiB/1H,GAErB,MAAR95C,IAIHlT,KAAK67C,WAAa,IAAIgL,SAASpD,YAAYpkD,IAAIW,KAAK49K,qBACnD59K,KAAK49K,mBAAoB1qK,EAAM8rC,EAAG4L,EAAG5qD,KAAK0/K,gBAAiB1/K,KAAK2/K,kBAAkB,GACnF3/K,KAAK67C,WAAWoM,YAAW,MAU9By3F,SAAShgJ,UAAUsjL,oBAAsB,WAExC,OAA0B,MAAnBhjL,KAAK67C,YAWb6jG,SAAShgJ,UAAUqjL,iBAAmB,SAAU/1H,GAE/C,IAAI5mC,EAAQpmB,KAAKosD,MAAM8W,WACnB5lE,EAAQ8oB,EAAMskB,SAASsiB,GAE3B,GAAI9G,QAAQwJ,OAAOpyD,GACnB,CAGC,IAAI4lF,EAAO,IAAI8B,OAAO,cAGlBr0E,EAAKuyE,EAAKyF,QAAQ,KAAM37B,EAAK8vE,SACjCnsH,EAAGunB,aAAa,WAAY,QAE5B,IAAI89D,EAAM,KACNitF,EAAS,KACTC,EAAS,KACTC,EAAa,KACbC,EAAc,KAGdh9J,EAAMuvE,SAAS3oC,KAElBgpC,EAAM5vE,EAAM62F,YAAYjwD,GAEb,MAAPgpC,IAEHitF,EAAS//F,EAAKyF,QAAQ,MAAOqN,EAAIprC,GACjCs4H,EAAShgG,EAAKyF,QAAQ,OAAQqN,EAAIh3C,GAClCmkI,EAAajgG,EAAKyF,QAAQ,QAASqN,EAAIlwC,OACvCs9H,EAAclgG,EAAKyF,QAAQ,SAAUqN,EAAIrwC,UAa3C,IARA,IAAIh2B,EAAMvJ,EAAM8c,SAAS8pB,GACrBplC,EAAQs7D,EAAKyF,QAAQ,QAASh5D,GAAO,IAIrCxS,EAAQ7f,EAAM4yD,WACdmzH,EAAQ,GAEHn6K,EAAI,EAAGA,EAAIiU,EAAMvc,OAAQsI,IAClC,CAGC,IAAIlB,EAAMmV,EAAMjU,GAAG5L,MACnB+lL,EAAMn6K,GAAKg6E,EAAK6F,YAAY5rE,EAAMjU,GAAGymD,SAAU3nD,EACxB,SAArBmV,EAAMjU,GAAGymD,SAAuB,EAAI,GASvC,IAAI2zH,EAAap9H,QAAQ1jD,KAAKxC,MAAM,WAGnCA,KAAKu/I,iBAILn5H,EAAMk7C,cACN,IAEY,MAAP00B,IAEHA,EAAMA,EAAIxxE,QAEVwxE,EAAIh3C,EAAI92C,WAAWg7K,EAAO5lL,OAC1B04F,EAAIprC,EAAI1iD,WAAW+6K,EAAO3lL,OAC1B04F,EAAIlwC,MAAQ59C,WAAWi7K,EAAW7lL,OAClC04F,EAAIrwC,OAASz9C,WAAWk7K,EAAY9lL,OAEpC8oB,EAAMk3F,YAAYtwD,EAAMgpC,IAIrBpuE,EAAMtqB,MAAMsD,OAAS,EAExBwlB,EAAMm7C,SAASvU,EAAMplC,EAAMtqB,OAI3B8oB,EAAMm7C,SAASvU,EAAM,MAOtB,IAAK,IAAI9jD,EAAE,EAAGA,EAAEiU,EAAMvc,OAAQsI,IAC9B,CACC,IAAImmF,EAAO,IAAIqpC,sBACd1rE,EAAM7vC,EAAMjU,GAAGymD,SACf0zH,EAAMn6K,GAAG5L,OACV8oB,EAAMqtC,QAAQ47B,GAOXrvF,KAAKosD,MAAMshG,eAAe1gG,IAE7BhtD,KAAKosD,MAAM4nG,eAAehnG,GAG5B,QAEC5mC,EAAMo7C,gBAMJ+hH,EAAiBr9H,QAAQ1jD,KAAKxC,MAAM,WAGvCA,KAAKu/I,oBAKN,OAFAr8D,EAAKsF,WAAW86F,EAAYC,GAErBrgG,EAAK79B,MAGb,OAAO,MAQRq6F,SAAShgJ,UAAU6/I,eAAiB,WAEZ,MAAnBv/I,KAAK67C,aAER77C,KAAK67C,WAAWn2B,UAChB1lB,KAAK67C,WAAa,OA0BpB6jG,SAAShgJ,UAAUwgL,UAAY,WAE9B,GAAkB,MAAdlgL,KAAKk/K,MACT,CACC,IAAIt8G,EAAM3nD,SAAS9b,cAAc,OACjCyjE,EAAIh7C,MAAM8+C,QAAU,MACpB9D,EAAIh7C,MAAMksC,YAAc,OACxB,IAAItN,EAAIvrC,SAASgzB,KAAK2Y,YAClBwX,EAAM,IAAIvX,SACbpD,YAAYpkD,IAAIW,KAAK69K,gBACrB79K,KAAK69K,cACLj7G,EAAKpc,EAAI,IAAKxmD,KAAKo/K,SAAU,KAC9BhhH,EAAInX,aAAY,GAChBmX,EAAIlX,gBAAiB,EAKrB,IAAIY,EAAQ5B,QAAQ1jD,KAAKxC,MAAM,SAASsnD,GAEvCE,QAAQ0yB,QAAQtX,GAChBA,EAAIrlC,UAAY,GAChBv9B,KAAKwjL,YAAY5gH,MAGlB5iE,KAAKosD,MAAM8W,WAAW3b,YAAYC,QAAQ83B,OAAQx3B,GAClD9nD,KAAKosD,MAAMoxF,oBAAoBj2F,YAAYC,QAAQ83B,OAAQx3B,GAC3D9nD,KAAKosD,MAAM7E,YAAYC,QAAQ62B,KAAMv2B,GAGR,MAAzB9nD,KAAKm/K,kBAER/gH,EAAI8pB,SAASloF,KAAKm/K,kBAGnBn/K,KAAKk/K,MAAQ9gH,EACbp+D,KAAKwjL,YAAY5gH,GAGlB5iE,KAAKk/K,MAAMj3H,YAAW,IAQvBy3F,SAAShgJ,UAAU+jL,aAAe,SAAU7gH,GAE3C,GAAkB,MAAd5iE,KAAKk/K,MACT,CACKt8G,EAAM5iE,KAAKk/K,MAAMj5H,QACrBuB,QAAQ0yB,QAAQtX,GAChBA,EAAIrlC,UAAY,GAChBv9B,KAAKwjL,YAAY5gH,KAanB88E,SAAShgJ,UAAU8jL,YAAc,SAAU5gH,KAa3C88E,SAAShgJ,UAAUygL,SAAW,SAAUjB,GAEvC,GAAiB,MAAbl/K,KAAKq/K,KACT,CACC,IAAIqE,EAAQzoK,SAAS9b,cAAc,UACnCukL,EAAMxrJ,aAAa,MAAOurB,YAAYpkD,IAAI,YAAcW,KAAKu/K,SAC7DmE,EAAMxrJ,aAAa,SAAU,QAC7BwrJ,EAAMxrJ,aAAa,QAAS,QAC5BwrJ,EAAMxrJ,aAAa,cAAe,KAClCwrJ,EAAM97J,MAAM4lE,gBAAkB,QAE9B,IAAIhnC,EAAIvrC,SAASgzB,KAAK2Y,YAClB7/C,EAAKkU,SAASgzB,KAAK0Y,cAAgB1rC,SAAS2nC,gBAAgB+D,aAE5DyX,EAAM,IAAIvX,SAASpD,YAAYpkD,IAAIW,KAAK89K,eAAiB99K,KAAK89K,aACjE4F,GAAQl9H,EAAExmD,KAAKw/K,WAAW,GAAIz4K,EAAE/G,KAAKy/K,YAAY,EAAGz/K,KAAKw/K,UAAWx/K,KAAKy/K,YAa1E,GAZArhH,EAAItX,gBAAe,GACnBsX,EAAInX,aAAY,GAChBmX,EAAIlX,gBAAiB,EACrBkX,EAAIpX,cAAa,GAGW,MAAxBhnD,KAAKs/K,iBAERlhH,EAAI8pB,SAASloF,KAAKs/K,iBAIf1+H,SAASW,MACb,CACC,IAAIznC,EAAU,SAASwtC,GAEtB,IAAIvgD,EAAIq3D,EAAIwE,IAAI10B,aAChBw1I,EAAMxrJ,aAAa,SAAWnxB,EAAE,GAAI,OAGrCq3D,EAAI7W,YAAYC,QAAQC,WAAY3tC,GACpCskD,EAAI7W,YAAYC,QAAQE,SAAU5tC,GAClCskD,EAAI7W,YAAYC,QAAQG,UAAW7tC,GACnCskD,EAAI7W,YAAYC,QAAQ41B,KAAMtjE,GAG/B9Z,KAAKq/K,KAAOjhH,EAGbp+D,KAAKq/K,KAAKp3H,YAAW,IAStBy3F,SAAShgJ,UAAU0gL,YAAc,WAEhC,IAAIr3K,EAAyB,MAAhB/I,KAAKqmG,QAElB,GAAIt9F,EACJ,CACC,IAAI65D,EAAM3nD,SAAS9b,cAAc,OAEjCyjE,EAAIh7C,MAAMonC,SAAW,SACrB4T,EAAIh7C,MAAM44B,SAAW,WACrBoiB,EAAIh7C,MAAMk+B,MAAQ,OAClB8c,EAAIh7C,MAAM+9B,OAAS,OACnBid,EAAIh7C,MAAMknF,WAAa,QACvBlsC,EAAIh7C,MAAM6mC,OAAS,OAEU,GAAzBxzC,SAASkmC,eAEZyhB,EAAIh7C,MAAM2M,OAAS,wDAGpB,IAAI6pC,EAAM,IAAIvX,SACbpD,YAAYpkD,IAAIW,KAAK+9K,kBACrB/9K,KAAK+9K,gBACLn7G,EAAK,IAAK,IAAK,IAAK,KAAK,GAItByjC,EAAU,IAAIszC,UAAU35I,KAAKosD,MAAOwW,GACxCxE,EAAInX,aAAY,GAChBmX,EAAIpX,cAAa,GACjBoX,EAAIlX,gBAAiB,EAErBkX,EAAI7W,YAAYC,QAAQC,YAAY,WAEnC4+C,EAAQj1F,YAGTpR,KAAKqmG,QAAUjoC,EACfp+D,KAAKqmG,QAAQA,QAAUA,EAIxBrmG,KAAKqmG,QAAQp+C,YAAW,GACxBjoD,KAAKqmG,QAAQA,QAAQj1F,QAAO,IAe7BsuI,SAAShgJ,UAAUs9K,QAAU,SAAS2G,GAErB,UAAZA,GAEH3jL,KAAKosD,MAAM4/F,eAAe2e,yBAA0B,EACpD3qK,KAAKosD,MAAM80E,gBAAe,IAEN,WAAZyiD,GAER3jL,KAAKosD,MAAM4/F,eAAe2e,yBAA0B,EACpD3qK,KAAKosD,MAAM80E,gBAAe,IAEN,OAAZyiD,IAER3jL,KAAKosD,MAAM4/F,eAAe2e,yBAA0B,EACpD3qK,KAAKosD,MAAM80E,gBAAe,KAW5Bwe,SAAShgJ,UAAUyhL,gBAAkB,SAAU1zF,EAAMzgC,EAAMhH,GAE1DhmD,KAAK8/I,aAAaq8B,WAAWn8K,KAAMytF,EAAMzgC,EAAMhH,IAWhD05F,SAAShgJ,UAAUwzJ,WAAa,SAAUhvJ,EAAQE,GAGjD,IAAI6H,EAAI,KAER,GAAwB,MAApBjM,KAAKo+K,YACT,CACC,IAAIh4J,EAAQpmB,KAAKosD,MAAM8W,WACvBj3D,EAAIma,EAAM+5G,UAAUngI,KAAKo+K,iBAG1B,CACCnyK,EAAI,IAAI0sH,OAAO,IACf1sH,EAAEg1H,SAAQ,GAEV,IAAIjrC,EAAM,IAAImnB,WACdnnB,EAAIE,UAAW,EACfjqF,EAAEqxG,YAAYtnB,GAIf,IAAIpuE,EAAQ5nB,KAAKyjJ,eAOjB,OALa,MAAT77H,GAEH3b,EAAEs1D,SAAS35C,GAGL3b,GAURyzI,SAAShgJ,UAAU+jJ,aAAe,WAEjC,OAAOzjJ,KAAKq+K,kBAUb3+B,SAAShgJ,UAAUkkL,sBAAwB,SAAU52H,GAEpD,OAAqC,MAA7BhtD,KAAK6/I,sBACZ7/I,KAAK6/I,qBAAqBj/I,OAAS,GACnCZ,KAAKosD,MAAMizD,WAAWryD,GACtBhtD,KAAK6/I,qBAAqB7/I,KAAKi/K,sBAC9Bj/K,KAAK6/I,qBAAqBj/I,QAAU,MAUvC8+I,SAAShgJ,UAAUmkL,eAAiB,SAAU72H,GAE7C,GAA+B,MAA3BhtD,KAAKqgJ,mBACT,CACC,IAAI/iJ,EAAQ0C,KAAK4jL,sBAAsB52H,GAE1B,MAAT1vD,GAEH0vD,EAAKuU,SAASvU,EAAK9pB,WAAW,IAC7BljC,KAAKqgJ,mBAAmB,IAAI/iJ,KAWhCoiJ,SAAShgJ,UAAU09K,UAAY,SAAU/2K,EAAQy1G,EAAQ98D,EAAG4L,GAE3D,IAAIxkC,EAAQpmB,KAAKosD,MAAM8W,WAEvB,MAAiB,MAAV78D,IAAmBrG,KAAKosD,MAAMuzG,kBAAkBt5J,GAEtDA,EAAS+f,EAAM2vE,UAAU1vF,GAG1BA,EAAoB,MAAVA,EAAkBA,EAASrG,KAAKosD,MAAM+hG,cAAcnvG,EAAG4L,GACjE,IAAIuC,EAAQntD,KAAKosD,MAAMU,UAAUK,MAE7B6oC,EAAM5vE,EAAM62F,YAAYnB,GACxB3lB,EAAO/vE,EAAM62F,YAAY52G,GAE7B,GAAIrG,KAAKosD,MAAMizD,WAAWvD,KACxB97G,KAAKosD,MAAM6+F,gBAEZ5kJ,EAAS,SAEL,IAAc,MAAVA,GAAkBrG,KAAKi+K,iBAE/B,OAAO,KAEH,GAAc,MAAV53K,GAA0B,MAAR8vF,EAC3B,CAEC,IAAIrlD,EAAQ9wC,KAAKosD,MAAMU,UAAUC,SAAS1mD,GAE1C,GAAa,MAATyqC,GAKH,GAHAkO,GAAKlO,EAAM8tB,OAAO5f,EAAImO,EACtBvC,GAAK9Z,EAAM8tB,OAAOhU,EAAIuC,EAElBntD,KAAKosD,MAAM03H,oBACf,CACC,IAAIh+H,EAAQkwC,EAAIlwC,MACZH,EAASqwC,EAAIrwC,OACbh2B,EAAMmhB,EAAMkO,EAAElO,EAAMgV,MAEpB9G,EAAE8G,EAAQn2B,IAEbqvB,GAAKA,EAAE8G,EAAQn2B,GAGhBA,EAAMmhB,EAAM8Z,EAAE9Z,EAAM6U,OAEhBiF,EAAEjF,EAASh2B,IAEdi7B,GAAKA,EAAEjF,EAASh2B,SAIF,MAARwmE,IAERn3C,GAAKm3C,EAAKn3C,EAAEmO,EACZvC,GAAKurC,EAAKvrC,EAAEuC,IAId6oC,EAAMA,EAAIxxE,QACVwxE,EAAIh3C,EAAIh/C,KAAKosD,MAAM0gC,KAAK9tC,EAAImO,EAC3BntD,KAAKosD,MAAMU,UAAU+W,UAAU7kB,EAC/Bh/C,KAAKosD,MAAMygC,SAAS,GACrBmJ,EAAIprC,EAAI5qD,KAAKosD,MAAM0gC,KAAKliC,EAAIuC,EAC3BntD,KAAKosD,MAAMU,UAAU+W,UAAUjZ,EAC/B5qD,KAAKosD,MAAMygC,SAAS,GACrBivB,EAAOwB,YAAYtnB,GAEL,MAAV3vF,IAEHA,EAASrG,KAAKosD,MAAM+3B,oBAGrBnkF,KAAK6jL,eAAe/nE,GACpB97G,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQi3B,kBACvC,SAAUq9B,EAAQ,SAAUz1G,IAE9B+f,EAAMk7C,cACN,IAECw6C,EAAS97G,KAAKosD,MAAM69E,QAAQnuB,EAAQz1G,GAEtB,MAAVy1G,IAEH97G,KAAKosD,MAAM0nG,eAAeh4C,GAE1B97G,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQk3B,WAAY,SAAUo9B,KAGjE,QAEC11F,EAAMo7C,YAUP,OAPc,MAAVs6C,IAEH97G,KAAKosD,MAAMghG,iBAAiBtxC,GAC5B97G,KAAKosD,MAAM0sG,oBAAoBh9C,GAC/B97G,KAAKy4E,UAAU,IAAI9B,cAAcnvB,QAAQm3B,iBAAkB,SAAUm9B,KAG/DA,GAUR4jC,SAAShgJ,UAAUgmB,QAAU,WAEvB1lB,KAAKk1B,YAETl1B,KAAKk1B,WAAY,EAEC,MAAdl1B,KAAKk/K,OAERl/K,KAAKk/K,MAAMx5J,UAGQ,MAAhB1lB,KAAKqmG,SAERrmG,KAAKqmG,QAAQ3gF,UAGS,MAAnB1lB,KAAK67C,YAER77C,KAAK67C,WAAWn2B,UAGM,MAAnB1lB,KAAKmgJ,YAERngJ,KAAKmgJ,WAAWz6H,UAGM,MAAnB1lB,KAAK6hL,YAER7hL,KAAK6hL,WAAWn8J,UAGG,MAAhB1lB,KAAKigJ,SAERjgJ,KAAKigJ,QAAQv6H,UAGI,MAAd1lB,KAAKosD,OAERpsD,KAAKosD,MAAM1mC,UAGZ1lB,KAAKu1D,OAAS,KACdv1D,KAAKm+K,UAAY,OAInBx9H,WAAW++F,SAA+B,qBAAbA,SAA2BA,cAAWn/I,EAMnE,IAAIwjL,gBACJ,CAuCCC,OAAQ,GAORC,QAAS,GAYTC,SAAU,SAASC,GAElB,GAAa,MAATA,EACJ,CACC,IAAIrmL,EAAOqmL,EAAMjtG,UACjB6sG,gBAAgBC,OAAOlmL,GAAQqmL,EAE/B,IAAIC,EAAYl+H,QAAQyC,gBAAgBw7H,EAAMvD,SAAS7uJ,aAEnDqyJ,GAAatmL,GAEhBimL,gBAAgBM,SAASD,EAAWtmL,GAItC,OAAOqmL,GAQRE,SAAU,SAASD,EAAWE,GAE7BP,gBAAgBE,QAAQG,GAAaE,GAatCC,SAAU,SAAS77H,GAElB,IAAIy7H,EAAQ,KAEZ,GAAY,MAARz7H,EACJ,CACC,IAAI5qD,EAAOooD,QAAQyC,gBAAgBD,GAC/B/4B,EAAMo0J,gBAAgBE,QAAQnmL,GAWlC,GATW,MAAP6xB,IAEH7xB,EAAO6xB,GAGRw0J,EAAQJ,gBAAgBC,OAAOlmL,GAIlB,MAATqmL,EAEH,IAECA,EAAQ,IAAIK,cAAc,IAAI97H,GAC9Bq7H,gBAAgBG,SAASC,GAE1B,MAAOl4K,KAOT,OAAOk4K,IAwHT,SAASjgH,QAAQjpD,GAEhBjb,KAAKib,SAAWA,GAAYirC,QAAQiK,oBACpCnwD,KAAKykL,QAAU,GAmsBhB,SAASD,cAAc5D,EAAU7rJ,EAAS2vJ,EAAQ3kD,GAUjD,IAAK,IAAI72H,KARTlJ,KAAK4gL,SAAWA,EAEhB5gL,KAAK+0B,QAAsB,MAAXA,EAAmBA,EAAU,GAC7C/0B,KAAK0kL,OAAoB,MAAVA,EAAkBA,EAAS,GAC1C1kL,KAAK+/H,QAAsB,MAAXA,EAAmBA,EAAU,GAE7C//H,KAAKmmK,QAAU,IAAI9nK,OAEL2B,KAAK+/H,QAElB//H,KAAKmmK,QAAQnmK,KAAK+/H,QAAQ72H,IAAMA,EAr0BlCy3C,WAAWojI,gBAA6C,qBAApBA,gBAAkCA,qBAAkBxjL,EA8HxF2jE,QAAQxkE,UAAUub,SAAW,KAO7BipD,QAAQxkE,UAAU+kL,QAAU,KAO5BvgH,QAAQxkE,UAAUilL,SAAW,KAO7BzgH,QAAQxkE,UAAUklL,gBAAiB,EAanC1gH,QAAQxkE,UAAUmlL,UAAY,SAASl0K,EAAIhJ,GAI1C,OAFA3H,KAAKykL,QAAQ9zK,GAAMhJ,EAEZA,GAWRu8D,QAAQxkE,UAAUolL,UAAY,SAASn0K,GAEtC,IAAIhJ,EAAM,KAEV,GAAU,MAANgJ,IAEHhJ,EAAM3H,KAAKykL,QAAQ9zK,GAER,MAAPhJ,IAEHA,EAAM3H,KAAKsgE,OAAO3vD,GAEP,MAAPhJ,IACJ,CACC,IAAIuL,EAAOlT,KAAK89F,eAAentF,GAEnB,MAARuC,IAEHvL,EAAM3H,KAAKsgL,OAAOptK,IAMtB,OAAOvL,GAuBRu8D,QAAQxkE,UAAU4gE,OAAS,SAAS3vD,GAEnC,OAAO,MAYRuzD,QAAQxkE,UAAUo+F,eAAiB,SAASntF,GAI3C,OAFA3Q,KAAK+kL,iBAEE/kL,KAAK2kL,SAASh0K,IAYtBuzD,QAAQxkE,UAAUqlL,eAAiB,WAEb,MAAjB/kL,KAAK2kL,WAER3kL,KAAK2kL,SAAW,IAAItmL,OAEiB,MAAjC2B,KAAKib,SAAS2nC,iBAEjB5iD,KAAKglL,WAAWhlL,KAAKib,SAAS2nC,mBAUjCshB,QAAQxkE,UAAUslL,WAAa,SAAS9xK,GAEvC,GAAIA,EAAK2qB,UAAYgsB,YAAY0F,iBACjC,CACC,IAAI5+C,EAAKuC,EAAKqxB,aAAa,MAE3B,GAAU,MAAN5zB,EAEH,GAAyB,MAArB3Q,KAAK2kL,SAASh0K,GAEjB3Q,KAAK2kL,SAASh0K,GAAMuC,OAEhB,GAAIlT,KAAK2kL,SAASh0K,IAAOuC,EAE7B,MAAM,IAAI+xK,MAAMt0K,EAAK,kBAKxBuC,EAAOA,EAAKuqB,WAEZ,MAAe,MAARvqB,EAENlT,KAAKglL,WAAW9xK,GAChBA,EAAOA,EAAKylB,aAiBdurC,QAAQxkE,UAAUo9H,MAAQ,SAASn1H,GAElC,IAAIgJ,EAAK,KAuBT,OArBW,MAAPhJ,IAEHgJ,EAAK3Q,KAAKklL,UAAUv9K,GAEV,MAANgJ,GAAchJ,aAAegxH,SAEhChoH,EAAKhJ,EAAIm1H,QAEC,MAANnsH,IAGHA,EAAK8vD,WAAW13D,OAAOpB,GAEN,GAAbgJ,EAAG/P,SAEN+P,EAAK,WAMFA,GAwBRuzD,QAAQxkE,UAAUwlL,UAAY,SAASv9K,GAEtC,OAAO,MAaRu8D,QAAQxkE,UAAUykE,OAAS,SAASx8D,GAEnC,IAAIuL,EAAO,KAEX,GAAW,MAAPvL,GAAkC,MAAnBA,EAAIoqB,YACvB,CACC,IAAIkyC,EAAM8/G,gBAAgBQ,SAAS58K,EAAIoqB,aAE5B,MAAPkyC,EAEH/wD,EAAO+wD,EAAIE,OAAOnkE,KAAM2H,GAIpBu+C,QAAQwJ,OAAO/nD,GAElBuL,EAAOgzC,QAAQ8J,WAAWhwD,KAAKib,SAAUtT,GAAK,GAI3Cm9C,MAAMr0C,KAAK,gCAAkCy1C,QAAQyC,gBAAgBhhD,EAAIoqB,cAK/E,OAAO7e,GAmBRgxD,QAAQxkE,UAAU4gL,OAAS,SAASptK,EAAMiyK,GAEzCnlL,KAAK+kL,iBACL,IAAIp9K,EAAM,KAEV,GAAY,MAARuL,GAAgBA,EAAK2qB,UAAYgsB,YAAY0F,iBACjD,CACC,IAAI7G,EAAO,KAEX,IAECA,EAAOj6C,OAAOyE,EAAKy8C,UAEpB,MAAOr2C,IAKP,IAAI+mK,EAAM0D,gBAAgBQ,SAAS77H,GAExB,MAAP23H,EAEH14K,EAAM04K,EAAIC,OAAOtgL,KAAMkT,EAAMiyK,IAI7Bx9K,EAAMuL,EAAKw7B,WAAU,GACrB/mC,EAAIo2B,gBAAgB,OAItB,OAAOp2B,GAuBRu8D,QAAQxkE,UAAU0lL,WAAa,SAASp4H,EAAM95C,EAAMktH,GAInD,GAFAltH,EAAKwlB,YAAY14B,KAAKmkE,OAAOnX,IAEN,MAAnBozE,GAA2BA,EAI9B,IAFA,IAAIzyE,EAAaX,EAAKY,gBAEb1kD,EAAI,EAAGA,EAAIykD,EAAYzkD,IAE/BlJ,KAAKolL,WAAWp4H,EAAKa,WAAW3kD,GAAIgK,IAYvCgxD,QAAQxkE,UAAU2lL,YAAc,SAASlB,GAExC,OAAa,MAATA,GAA8C,mBAAtBA,EAAiB,aAErCA,EAAMkB,eAuBfnhH,QAAQxkE,UAAU4lL,WAAa,SAASpyK,EAAMqyK,GAE7CA,EAA0C,MAArBA,GAA6BA,EAClD,IAAIv4H,EAAO,KAEX,GAAY,MAAR95C,GAAgBA,EAAK2qB,UAAYgsB,YAAY0F,iBACjD,CAIC,IAAIi2H,EAAUzB,gBAAgBQ,SAASrxK,EAAKy8C,UAK5C,IAAK3vD,KAAKqlL,YAAYG,GACtB,CACC,IAAIzyK,EAAQG,EAAKuqB,WAEjB,MAAgB,MAAT1qB,IAAkB/S,KAAKqlL,YAAYG,GAEzCA,EAAUzB,gBAAgBQ,SAASxxK,EAAM48C,UACzC58C,EAAQA,EAAM4lB,YAIX34B,KAAKqlL,YAAYG,KAErBA,EAAUzB,gBAAgBQ,SAAS5rD,SAGpC3rE,EAAOw4H,EAAQlF,OAAOtgL,KAAMkT,GAExBqyK,GAEHvlL,KAAKylL,gBAAgBz4H,GAIvB,OAAOA,GAQRkX,QAAQxkE,UAAU+lL,gBAAkB,SAASz4H,GAE5C,IAAI3mD,EAAS2mD,EAAK3mD,OACdnC,EAAS8oD,EAAKqvD,aAAY,GAC1Bj4G,EAAS4oD,EAAKqvD,aAAY,GAO9B,GAJArvD,EAAKgxE,YAAY,MAAM,GACvBhxE,EAAKgxE,YAAY,MAAM,GACvBhxE,EAAK3mD,OAAS,KAEA,MAAVA,EACJ,CACC,GAAIA,GAAU2mD,EAEb,MAAM,IAAIi4H,MAAM5+K,EAAOsK,GAAK,oBAI5BtK,EAAOgf,OAAO2nC,GAIF,MAAV9oD,GAEHA,EAAOk6H,WAAWpxE,GAAM,GAGX,MAAV5oD,GAEHA,EAAOg6H,WAAWpxE,GAAM,IAiB1BkX,QAAQxkE,UAAUw4B,aAAe,SAAShlB,EAAMm5F,EAAW/uG,GAEzC,MAAb+uG,GAA8B,MAAT/uG,GAExB4V,EAAKglB,aAAam0E,EAAW/uG,IAI/BqjD,WAAWujB,QAA6B,qBAAZA,QAA0BA,aAAU3jE,EA+NhEikL,cAAc94E,WAAY,EAO1B84E,cAAc9kL,UAAUkhL,SAAW,KAQnC4D,cAAc9kL,UAAUq1B,QAAU,KASlCyvJ,cAAc9kL,UAAUglL,OAAS,KAOjCF,cAAc9kL,UAAUqgI,QAAU,KAOlCykD,cAAc9kL,UAAUymK,QAAU,KAWlCqe,cAAc9kL,UAAUw3E,QAAU,WAEjC,OAAOhxB,QAAQyC,gBAAgB3oD,KAAK4gL,SAAS7uJ,cAQ9CyyJ,cAAc9kL,UAAUgmL,cAAgB,WAEvC,OAAO,IAAI1lL,KAAK4gL,SAAS7uJ,aAW1ByyJ,cAAc9kL,UAAUimL,aAAe,SAASC,GAE/C,GAAqB,MAAjBA,EACJ,CACC,IAAIC,EAAS7lL,KAAKmmK,QAAQyf,GAEZ,MAAVC,IAEHD,EAAgBC,GAIlB,OAAOD,GAWRpB,cAAc9kL,UAAUomL,iBAAmB,SAASC,GAEnD,GAAiB,MAAbA,EACJ,CACC,IAAIF,EAAS7lL,KAAK+/H,QAAQgmD,GAEZ,MAAVF,IAEHE,EAAYF,GAId,OAAOE,GAkBRvB,cAAc9kL,UAAUsmL,WAAa,SAASr+K,EAAKouB,EAAMz4B,EAAOi4C,GAE/D,OAAOxf,GAAQyyB,iBAAiBC,YAC/BvC,QAAQ18C,QAAQxJ,KAAK+0B,QAASgB,IAAS,GAkBzCyuJ,cAAc9kL,UAAUumL,YAAc,SAASt+K,EAAKouB,EAAMz4B,EAAOi4C,GAEhE,OAAO2Q,QAAQ18C,QAAQxJ,KAAK0kL,OAAQ3uJ,IAAS,GA6C9CyuJ,cAAc9kL,UAAUykE,OAAS,SAASF,EAAKt8D,GAE9C,IAAIuL,EAAO+wD,EAAIhpD,SAAS9b,cAAca,KAAKk3E,WAK3C,OAHAvvE,EAAM3H,KAAKkmL,aAAajiH,EAAKt8D,EAAKuL,GAClClT,KAAKmmL,aAAaliH,EAAKt8D,EAAKuL,GAErBlT,KAAKomL,YAAYniH,EAAKt8D,EAAKuL,IAenCsxK,cAAc9kL,UAAUymL,aAAe,SAASliH,EAAKt8D,EAAKuL,GAItD,IAAK,IAAIhK,KAFZ+6D,EAAI/rC,aAAahlB,EAAM,KAAM+wD,EAAI64D,MAAMn1H,IAEtBA,EACd,CACF,IAAI7J,EAAOoL,EACP5L,EAAQqK,EAAI7J,GAEA,MAATR,GAAkB0C,KAAKgmL,WAAWr+K,EAAK7J,EAAMR,GAAO,KAEnD4oD,QAAQ+Y,UAAUnhE,KAErBA,EAAO,MAGRkC,KAAKqmL,YAAYpiH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,MAoB9CsxK,cAAc9kL,UAAU2mL,YAAc,SAASpiH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAErE,GAAa,MAAT5V,EACJ,CACC,GAAI0C,KAAKimL,YAAYt+K,EAAK7J,EAAMR,GAAO,GACvC,CACC,IAAIqyB,EAAMs0C,EAAI64D,MAAMx/H,GAEpB,GAAW,MAAPqyB,EAIA,YAFAm1B,MAAMr0C,KAAK,mCACVzQ,KAAKk3E,UAAY,IAAMp5E,EAAO,IAAMR,GAItCA,EAAQqyB,EAGZ,IAAI86B,EAAezqD,KAAK4gL,SAAS9iL,IAIrB,MAARA,GAAgBmmE,EAAI2gH,gBAAkBn6H,GAAgBntD,KAEzDQ,EAAOkC,KAAK8lL,iBAAiBhoL,GAC7BkC,KAAKsmL,eAAeriH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,MAW9CsxK,cAAc9kL,UAAU4mL,eAAiB,SAASriH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAEnD,iBAAX,EAETlT,KAAKumL,wBAAwBtiH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAIpDlT,KAAKwmL,sBAAsBviH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,IASpDsxK,cAAc9kL,UAAU6mL,wBAA0B,SAAStiH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAIjF,GAFA5V,EAAQ0C,KAAKymL,sBAAsBxiH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAE9C,MAARpV,EACJ,CACC,IAAIiV,EAAQkxD,EAAIhpD,SAAS9b,cAAc,OAElB,mBAAX,EAEN4T,EAAM2lB,YAAYurC,EAAIhpD,SAASC,eAAe5d,IAI9C2mE,EAAI/rC,aAAanlB,EAAO,QAASzV,GAGrC4V,EAAKwlB,YAAY3lB,OAEQ,mBAAX,GAEXkxD,EAAI/rC,aAAahlB,EAAMpV,EAAMR,IASlCknL,cAAc9kL,UAAU8mL,sBAAwB,SAASviH,EAAKt8D,EAAK7J,EAAMR,EAAO4V,GAE/E,IAAIH,EAAQkxD,EAAIE,OAAO7mE,GAEV,MAATyV,GAES,MAARjV,GAEAiV,EAAMmlB,aAAa,KAAMp6B,GAG1BoV,EAAKwlB,YAAY3lB,IAIpB+xC,MAAMr0C,KAAK,qCAAuCzQ,KAAKk3E,UAAY,IAAMp5E,EAAO,KAAOR,IAiBzFknL,cAAc9kL,UAAU+mL,sBAAwB,SAASxiH,EAAKt8D,EAAK7J,EAAMR,GAUxE,OAPI0C,KAAK0mL,mBAAmBziH,EAAKt8D,EAAK7J,EAAMR,KAI3CA,EAAkB,GAATA,EAAiB,IAAM,KAG1BA,GAeRknL,cAAc9kL,UAAUgnL,mBAAqB,SAASziH,EAAKt8D,EAAK7J,EAAMR,GAErE,MAAgC,oBAAjBA,EAAY,SAA8B,GAATA,GAA0B,GAATA,IAelEknL,cAAc9kL,UAAUinL,wBAA0B,SAAStG,EAAKtqJ,EAAMpuB,GAErE,IAAIrK,EAAQy4B,EAAKz4B,MAYjB,OAVI0C,KAAK4mL,mBAAmBvG,EAAKtqJ,EAAMpuB,KAEtCrK,EAAQ4K,WAAW5K,IAEf+C,MAAM/C,IAAW6K,SAAS7K,KAE7BA,EAAQ,IAIHA,GAcRknL,cAAc9kL,UAAUknL,mBAAqB,SAASvG,EAAKtqJ,EAAMpuB,GAGhE,IAAI9E,EAAU8E,EAAIoqB,aAAeorF,aAClB,KAAbpnF,EAAKj4B,MAA4B,KAAbi4B,EAAKj4B,MACb,SAAbi4B,EAAKj4B,MAAgC,UAAbi4B,EAAKj4B,OAC5B6J,EAAIoqB,aAAe44B,UACN,KAAb50B,EAAKj4B,MAA4B,KAAbi4B,EAAKj4B,OAC1BooD,QAAQ8Y,UAAUjpC,EAAKz4B,OAExB,OAAOuF,GAiBR2hL,cAAc9kL,UAAUwmL,aAAe,SAASjiH,EAAKt8D,EAAKuL,GAEzD,OAAOvL,GAkBR68K,cAAc9kL,UAAU0mL,YAAc,SAASniH,EAAKt8D,EAAKuL,GAExD,OAAOA,GAyDRsxK,cAAc9kL,UAAU4gL,OAAS,SAASD,EAAKntK,EAAMiyK,GAEpD,IAAIx0K,EAAKuC,EAAKqxB,aAAa,MACvB58B,EAAM04K,EAAIoE,QAAQ9zK,GAenB,OAbQ,MAAPhJ,IAEHA,EAAMw9K,GAAQnlL,KAAK0lL,gBAET,MAAN/0K,GAEH0vK,EAAIwE,UAAUl0K,EAAIhJ,IAIpBuL,EAAOlT,KAAK6mL,aAAaxG,EAAKntK,EAAMvL,GACpC3H,KAAK8mL,WAAWzG,EAAKntK,EAAMvL,GAEjB3H,KAAK+mL,YAAY1G,EAAKntK,EAAMvL,IAcvC68K,cAAc9kL,UAAUonL,WAAa,SAASzG,EAAKntK,EAAMvL,GAE5C,MAARuL,IAEHlT,KAAKgnL,iBAAiB3G,EAAKntK,EAAMvL,GACjC3H,KAAKinL,eAAe5G,EAAKntK,EAAMvL,KAejC68K,cAAc9kL,UAAUsnL,iBAAmB,SAAS3G,EAAKntK,EAAMvL,GAE9D,IAAIwV,EAAQjK,EAAKg9C,WAEjB,GAAa,MAAT/yC,EAEH,IAAK,IAAIjU,EAAI,EAAGA,EAAIiU,EAAMvc,OAAQsI,IAEjClJ,KAAKknL,gBAAgB7G,EAAKljK,EAAMjU,GAAIvB,IAiBvC68K,cAAc9kL,UAAUynL,mBAAqB,SAAS9G,EAAKtqJ,EAAMpuB,GAEhE,MAAwB,MAAjBouB,EAAK45B,UAAqC,MAAjB55B,EAAK45B,UActC60H,cAAc9kL,UAAUwnL,gBAAkB,SAAS7G,EAAKtqJ,EAAMpuB,GAE7D,IAAK3H,KAAKmnL,mBAAmB9G,EAAKtqJ,EAAMpuB,GACxC,CACC,IAAI7J,EAAOi4B,EAAK45B,SAMZryD,EAAQ0C,KAAK2mL,wBAAwBtG,EAAKtqJ,EAAMpuB,GAChDo+K,EAAY/lL,KAAK2lL,aAAa7nL,GAElC,GAAIkC,KAAKimL,YAAYt+K,EAAKo+K,EAAWzoL,GAAO,GAC5C,CACC,IAAIqyB,EAAM0wJ,EAAIyE,UAAUxnL,GAExB,GAAW,MAAPqyB,EAIA,YAFAm1B,MAAMr0C,KAAK,uCACVzQ,KAAKk3E,UAAY,IAAMp5E,EAAO,IAAMR,GAItCA,EAAQqyB,EAGP3vB,KAAKgmL,WAAWr+K,EAAK7J,EAAMR,GAAO,KAGtCqK,EAAI7J,GAAQR,KAgBfknL,cAAc9kL,UAAUunL,eAAiB,SAAS5G,EAAKntK,EAAMvL,GAE5D,IAAIoL,EAAQG,EAAKuqB,WAEjB,MAAgB,MAAT1qB,EACP,CACC,IAAI4c,EAAM5c,EAAM4lB,YAEZ5lB,EAAM8qB,UAAYgsB,YAAY0F,kBAChCvvD,KAAKonL,eAAe/G,EAAKttK,EAAOpL,IAEjC3H,KAAKqnL,YAAYhH,EAAKttK,EAAOpL,GAG9BoL,EAAQ4c,IAeV60J,cAAc9kL,UAAU2nL,YAAc,SAAShH,EAAKttK,EAAOpL,GAE1D,IAAIo+K,EAAY/lL,KAAK2lL,aAAa5yK,EAAMwxB,aAAa,OAErD,GAAiB,MAAbwhJ,IAAsB/lL,KAAKgmL,WAAWr+K,EAAKo+K,EAAWhzK,GAAO,GACjE,CACC,IAAI6tK,EAAW5gL,KAAKsnL,iBAAiB3/K,EAAKo+K,EAAWhzK,GACjDzV,EAAQ,KAEU,OAAlByV,EAAM48C,UAETryD,EAAQyV,EAAMwxB,aAAa,SAEd,MAATjnC,GAAiBknL,cAAc94E,YAElCpuG,EAAQ4oD,QAAQgJ,KAAKhJ,QAAQsL,eAAez+C,MAK7CzV,EAAQ+iL,EAAIC,OAAOvtK,EAAO6tK,GAG3B,IAEC5gL,KAAKunL,eAAe5/K,EAAKo+K,EAAWzoL,EAAOsjL,GAE5C,MAAO30K,GAEN,MAAM,IAAIg5K,MAAMh5K,EAAEojD,QAAU,QAAUt8C,EAAM48C,aAe/C60H,cAAc9kL,UAAU4nL,iBAAmB,SAAS3/K,EAAKo+K,EAAWhzK,GAEnE,IAAI6tK,EAAWj5K,EAAIo+K,GAQhB,OALInF,aAAoB5+K,OAAS4+K,EAAShgL,OAAS,IAE/CggL,EAAW,MAGRA,GAaX4D,cAAc9kL,UAAU6nL,eAAiB,SAAS5/K,EAAKo+K,EAAWzoL,EAAOsjL,GAE3D,MAATtjL,GAAiBA,GAASsjL,IAEZ,MAAbmF,GAAqBA,EAAUnlL,OAAS,EAE3C+G,EAAIo+K,GAAazoL,EAIjBqK,EAAIoJ,KAAKzT,KAmBZknL,cAAc9kL,UAAU0nL,eAAiB,SAAS/G,EAAKntK,EAAMiyK,GAE5D,GAAqB,WAAjBjyK,EAAKy8C,SACT,CACC,IAAI7xD,EAAOoV,EAAKqxB,aAAa,QAE7B,GAAY,MAARzmC,EAEH,IAEC,IAAI2yD,EAAMvK,QAAQkE,KAAKtsD,GAAM4kF,qBAElB,MAAPjyB,GAEH4vH,EAAIC,OAAO7vH,EAAK00H,GAGlB,MAAOl5K,IAMR,OAAO,EAGR,OAAO,GAqBRu4K,cAAc9kL,UAAUmnL,aAAe,SAASxG,EAAKntK,EAAMvL,GAE1D,OAAOuL,GAiBRsxK,cAAc9kL,UAAUqnL,YAAc,SAAS1G,EAAKntK,EAAMvL,GAEzD,OAAOA,GAGRg5C,WAAW6jI,cAAyC,qBAAlBA,cAAgCA,mBAAgBjkL,EAMlFwjL,gBAAgBG,SAAS,WAyCxB,IAAIC,EAAQ,IAAIK,cAAc,IAAI7rD,OACjC,CAAC,WAAY,QAAS,WAAY,eAClC,CAAC,SAAU,SAAU,WA2ItB,OApIAwrD,EAAMkB,YAAc,WAEnB,OAAO,GAMRlB,EAAMyC,mBAAqB,SAASvG,EAAKtqJ,EAAMpuB,GAE9C,MAAyB,UAAlBouB,EAAK45B,UAAwB60H,cAAc9kL,UAAUknL,mBAAmB7lL,MAAMf,KAAMgB,YAQ5FmjL,EAAM6B,WAAa,SAASr+K,EAAKouB,EAAMz4B,EAAOkqL,GAE7C,OAAOhD,cAAc9kL,UAAUsmL,WAAWjlL,MAAMf,KAAMgB,YACpDwmL,GAAmB,SAARzxJ,GACZz4B,EAAMugC,UAAYgsB,YAAY0F,kBAShC40H,EAAMiC,YAAc,SAASniH,EAAKt8D,EAAKuL,GAEtC,GAAiB,MAAbvL,EAAIrK,OAAiBqK,EAAIrK,MAAMugC,UAAYgsB,YAAY0F,iBAC3D,CAIC,IAAI5/B,EAAMzc,EACVA,EAAOgzC,QAAQ8J,WAAWiU,EAAIhpD,SAAUtT,EAAIrK,OAAO,GACnD4V,EAAKwlB,YAAY/I,GAIjB,IAAIhf,EAAKgf,EAAI4U,aAAa,MAC1BrxB,EAAKglB,aAAa,KAAMvnB,GACxBgf,EAAIoO,gBAAgB,MAGrB,OAAO7qB,GASRixK,EAAM0C,aAAe,SAASxG,EAAKntK,EAAMvL,GAExC,IAAI67F,EAAQtwF,EAAKw7B,WAAU,GACvB01I,EAAYpkL,KAAKk3E,UAErB,GAAIhkE,EAAKy8C,UAAYy0H,EACrB,CAGC,IAAIz0J,EAAMzc,EAAKowC,qBAAqB8gI,GAAW,GAEpC,MAAPz0J,GAAeA,EAAI8G,YAAcvjB,GAEpCgzC,QAAQwL,iBAAiB/hC,GAAK,GAC9Bu2B,QAAQwL,iBAAiB/hC,GAAK,GAC9BA,EAAI8G,WAAWgC,YAAY9I,GAC3B6zE,EAAQ7zE,GAIR6zE,EAAQ,KAIT77F,EAAIrK,MAAQ4V,EAAKw7B,WAAU,GAC3B,IAAI/9B,EAAKhJ,EAAIrK,MAAMinC,aAAa,MAEtB,MAAN5zB,IAEHhJ,EAAIo1H,MAAMpsH,GACVhJ,EAAIrK,MAAMygC,gBAAgB,YAM3Bp2B,EAAIo1H,MAAM7pH,EAAKqxB,aAAa,OAK7B,GAAa,MAATi/D,EAEH,IAAK,IAAIt6F,EAAI,EAAGA,EAAIlJ,KAAK0kL,OAAO9jL,OAAQsI,IACxC,CACC,IAAI6sB,EAAO/1B,KAAK0kL,OAAOx7K,GACnBuf,EAAM+6E,EAAMj/D,aAAaxO,GAE7B,GAAW,MAAPtN,EACJ,CACC+6E,EAAMzlE,gBAAgBhI,GACtB,IAAI34B,EAASijL,EAAIoE,QAAQh8J,IAAQ43J,EAAI//G,OAAO73C,GAE5C,GAAc,MAAVrrB,EACJ,CAEC,IAAIoxD,EAAU6xH,EAAIviF,eAAer1E,GAEjC,GAAe,MAAX+lC,EACJ,CACC,IAAIg3H,EAAUzB,gBAAgBC,OAAOx1H,EAAQmB,WAAa3vD,KAC1D5C,EAASooL,EAAQlF,OAAOD,EAAK7xH,IAI/B7mD,EAAIouB,GAAQ34B,GAKf,OAAOomG,GAID2gF,EAtLiB,IA0LzBxjI,WAAW8mI,YAAqC,qBAAhBA,YAA8BA,iBAAclnL,EAM5EwjL,gBAAgBG,SAAS,WASxB,IAAIC,EAAQ,IAAIK,cAAc,IAAIvsD,cAgElC,OAvDAksD,EAAMgC,aAAe,SAASliH,EAAKt8D,EAAKuL,GAEvC,IAAIw0K,EAAWzjH,EAAIhpD,SAAS9b,cAAc,QAC1C8kE,EAAImhH,WAAWz9K,EAAIw7D,UAAWukH,GAC9Bx0K,EAAKwlB,YAAYgvJ,IAQlBvD,EAAMkD,YAAc,SAAShH,EAAKttK,EAAOpL,GAElB,QAAlBoL,EAAM48C,SAET3vD,KAAK2nL,WAAWtH,EAAKttK,EAAOpL,GAI5B68K,cAAc9kL,UAAU2nL,YAAYtmL,MAAMf,KAAMgB,YAUlDmjL,EAAMwD,WAAa,SAAStH,EAAKruF,EAAM5rE,GAEtC,IAAIwhK,EAAW,KACXj4J,EAAMqiE,EAAKv0D,WAEf,MAAc,MAAP9N,EACP,CACC,IAAIq9B,EAAOqzH,EAAIiF,WAAW31J,GAEd,MAARq9B,GAAoC,MAApBA,EAAK+oC,cAExB6xF,EAAW56H,GAGZr9B,EAAMA,EAAIgJ,YAIK,MAAZivJ,GAEHxhK,EAAMgyG,QAAQwvD,IAKTzD,EAzEiB,IA6EzBxjI,WAAWknI,aAAuC,qBAAjBA,aAA+BA,kBAAetnL,EAM/EwjL,gBAAgBG,SAAS,WAexB,IAAIC,EAAQ,IAAIK,cAAc,IAAInsD,aACjC,CAAC,QAAS,WAAY,SA4DvB,OArDA8rD,EAAMiC,YAAc,SAASniH,EAAKt8D,EAAKuL,GAItC,OAFA+wD,EAAImhH,WAAWz9K,EAAIqqF,KAAM9+E,GAElBA,GASRixK,EAAM0C,aAAe,SAASxG,EAAKntK,EAAMvL,GAExC,GAAuB,MAAnBuL,EAAKuqB,YACRvqB,EAAKuqB,WAAWI,UAAYgsB,YAAY0F,iBACzC,CAECr8C,EAAOA,EAAKw7B,WAAU,GAEtB,IAAI/e,EAAMzc,EAAKuqB,WACf91B,EAAIqqF,KAAOquF,EAAIiF,WAAW31J,GAAK,GAE/B,IAAIkvG,EAAOlvG,EAAIgJ,YACfhJ,EAAI8G,WAAWgC,YAAY9I,GAC3BA,EAAMkvG,EAEN,MAAc,MAAPlvG,EAENkvG,EAAOlvG,EAAIgJ,YACX0nJ,EAAIiF,WAAW31J,GACfA,EAAI8G,WAAWgC,YAAY9I,GAC3BA,EAAMkvG,EAIR,OAAO3rH,GAQRixK,EAAM4C,YAAc,SAAS1G,EAAKntK,EAAMvL,GAIvC,OAFAA,EAAImhD,SAAWnhD,EAAIqqF,KAEZrqF,GAIDw8K,EA5EiB,IAgFzBxjI,WAAWmnI,kBAAiD,qBAAtBA,kBAAoCA,uBAAoBvnL,EAM9FwjL,gBAAgBG,SAAS,WAoBxB,IAAIC,EAAQ,IAAIK,cAAc,IAAI53H,cACjC,CAAC,QAAS,QAAS,iBACnB,CAAC,SAAU,aA2IZ,OAjIAu3H,EAAM8B,YAAc,SAASt+K,EAAKouB,EAAMz4B,EAAOkqL,GAE9C,QAAY,SAARzxJ,GAAqByxJ,IAAW7/K,EAAIye,MAAM22C,SAASp1D,EAAImhD,YAKpD5C,QAAQ18C,QAAQxJ,KAAK0kL,OAAQ3uJ,IAAS,GAQ5CouJ,EAAM6B,WAAa,SAASr+K,EAAKouB,EAAMz4B,EAAOi4C,GAE7C,OAAOivI,cAAc9kL,UAAUsmL,WAAWjlL,MAAMf,KAAMgB,YACpDu0C,GAAkB,MAATj4C,IAA0B,YAARy4B,GACpB,UAARA,KAAsBpuB,EAAIye,MAAM22C,SAASz/D,IAS7C6mL,EAAMiC,YAAc,SAASniH,EAAKt8D,EAAKuL,GAiBtC,OAfIlT,KAAKimL,YAAYt+K,EAAK,QAASA,EAAIoL,OAAO,GAG7CG,EAAKglB,aAAa,QAAS+rC,EAAI64D,MAAMn1H,EAAIoL,QASzCkxD,EAAImhH,WAAWz9K,EAAIoL,MAAOG,GAGpBA,GASRixK,EAAM0C,aAAe,SAASxG,EAAKntK,EAAMvL,GAExC,GAAuB,MAAnBuL,EAAKuqB,YACRvqB,EAAKuqB,WAAWI,UAAYgsB,YAAY0F,iBACzC,CAECr8C,EAAOA,EAAKw7B,WAAU,GAEtB,IAAI/e,EAAMzc,EAAKuqB,WACf91B,EAAIoL,MAAQstK,EAAIiF,WAAW31J,GAAK,GAEhC,IAAIkvG,EAAOlvG,EAAIgJ,YACfhJ,EAAI8G,WAAWgC,YAAY9I,GAC3BA,EAAMkvG,EAEN,MAAc,MAAPlvG,EACP,CAGC,GAFAkvG,EAAOlvG,EAAIgJ,YAEPhJ,EAAIkO,UAAYgsB,YAAY0F,iBAChC,CAMC,IAAI5+C,EAAKgf,EAAI4U,aAAa,MAEJ,MAAlB87I,EAAI//G,OAAO3vD,IAEd0vK,EAAIiF,WAAW31J,GAIjBA,EAAI8G,WAAWgC,YAAY9I,GAC3BA,EAAMkvG,OAIR,CACC,IAAIkpD,EAAW70K,EAAKqxB,aAAa,SACjC58B,EAAIoL,MAAQstK,EAAIyE,UAAUiD,GAG3B,OAAO70K,GAQRixK,EAAM4C,YAAc,SAAS1G,EAAKntK,EAAMvL,GAmBvC,OAbuB,MAAbA,EAAIoL,QAEoB,MAApBpL,EAAIoL,MAAM1M,QAAkC,MAAhBsB,EAAImhD,UAChCnhD,EAAIoL,MAAM1M,QAAUsB,EAAImhD,WAExBnhD,EAAImhD,SAAWnhD,EAAIoL,MAAM1M,QAG7BsB,EAAIoL,MAAM1M,OAASsB,EAAImhD,SACvBnhD,EAAImhD,SAAWnhD,EAAItB,OACnBsB,EAAI2wH,cAAgB3wH,EAAIvE,OAG3BuE,GAIDw8K,EAjKiB,IAqKzBxjI,WAAWqnI,mBAAmD,qBAAvBA,mBAAqCA,wBAAqBznL,EAMjGwjL,gBAAgBG,SAAS,WAmBxB,IAAIC,EAAQ,IAAIK,cAAc,IAAI93H,iBACjC,CAAC,QAAS,YAAa,CAAC,OAAQ,aAejC,OARAy3H,EAAM4C,YAAc,SAAS1G,EAAKntK,EAAMvL,GAIvC,OAFAA,EAAImhD,SAAWnhD,EAAIyyD,SAEZzyD,GAIDw8K,EAnCiB,IAuCzBxjI,WAAWsnI,sBAAyD,qBAA1BA,sBAAwCA,2BAAwB1nL,EAiC1G,IAAI2nL,qBAAuB,SAASvgL,EAAK+1C,GAExC,IAAIymI,EAAQ,IAAIK,cAAc78K,EAAM,CAAC,QAAS,YAAa,CAAC,SAqB5D,OAdAw8K,EAAM4C,YAAc,SAAS1G,EAAKntK,EAAMvL,GAWvC,OAPIu+C,QAAQwJ,OAAO/nD,EAAIqlD,QAEtBrlD,EAAIqlD,KAAOqzH,EAAIiF,WAAW39K,EAAIqlD,MAAM,IAGrCrlD,EAAImhD,SAAWnhD,EAAI+1C,GAEZ/1C,GAGDw8K,GAIRJ,gBAAgBG,SAASgE,qBAAqB,IAAIv7H,cAAiB,UACnEo3H,gBAAgBG,SAASgE,qBAAqB,IAAIr7H,cAAiB,UACnEk3H,gBAAgBG,SAASgE,qBAAqB,IAAIz7H,iBAAoB,aACtEs3H,gBAAgBG,SAASgE,qBAAqB,IAAI3vD,iBAAoB,cACtEwrD,gBAAgBG,SAASgE,qBAAqB,IAAIzvD,gBAAmB,YACrEsrD,gBAAgBG,SAASgE,qBAAqB,IAAIxvD,sBAAyB,UAE3E/3E,WAAWunI,qBAAuD,qBAAzBA,qBAAuCA,0BAAuB3nL,EAMvGwjL,gBAAgBG,SAAS,WAmBxB,OAAO,IAAIM,cAAc,IAAI9rC,QAC5B,CAAC,iBAAkB,iBAAkB,OAAQ,YAC7C,eAAgB,SAAU,cArBH,IAyBzB/3F,WAAWwnI,aAAuC,qBAAjBA,aAA+BA,kBAAe5nL,EAM/EwjL,gBAAgBG,SAAS,WAYxB,IAAIC,EAAQ,IAAIK,cAAc,IAAIjsC,aAkLlC,OAzKA4rC,EAAMhgH,OAAS,SAASF,EAAKtG,GAE5B,OAAO39D,KAAKolL,WAAWnhH,EAAKtG,EAC3BA,EAAKvR,MAAM8W,WAAWC,YAuBxBghH,EAAMiB,WAAa,SAASnhH,EAAKtG,EAAM3Q,GAEtC,IAAI5mC,EAAQu3C,EAAKvR,MAAM8W,WACnBpyB,EAAQ6sB,EAAK5Q,SAASC,GACtB3mD,EAAS+f,EAAM2vE,UAAU/oC,GAE7B,GAAc,MAAV3mD,GAA2B,MAATyqC,EACtB,CACC,IAAI6c,EAAavnC,EAAMwnC,cAAcZ,GACjCgpC,EAAMr4B,EAAKvR,MAAM6pC,gBAAgBjpC,GACjClvD,EAAO,KAuBX,GArBIuI,GAAU+f,EAAM+8C,UAEnBrlE,EAAO,QAEW,MAAVuI,EAERvI,EAAO,QAECsoB,EAAMjX,OAAO69C,GAErBlvD,EAAO,OAEC6vD,EAAa,GAAY,MAAPqoC,EAE1Bl4F,EAAO,QAECsoB,EAAMuvE,SAAS3oC,KAEvBlvD,EAAO,UAGI,MAARA,EACJ,CACC,IAAIoV,EAAO+wD,EAAIhpD,SAAS9b,cAAcrB,GAClC+pD,EAAM8V,EAAKvR,MAAM6iF,SAASjiF,GAY9B,GAVW,MAAPnF,IAEH30C,EAAKglB,aAAa,QAASylC,EAAKvR,MAAM6iF,SAASjiF,IAE3C2Q,EAAKvR,MAAMgjF,YAAYpiF,IAE1B95C,EAAKglB,aAAa,QAAQ,IAId,MAAV7xB,EACJ,CACC,IAAIy2D,EAASa,EAAKiH,iBAEJ,MAAV9H,IAEH5pD,EAAKglB,aAAa,IAAKh4B,KAAKm8D,MAAMS,EAAO9d,IACzC9rC,EAAKglB,aAAa,IAAKh4B,KAAKm8D,MAAMS,EAAOlS,IACzC13C,EAAKglB,aAAa,QAASh4B,KAAKm8D,MAAMS,EAAOhX,QAC7C5yC,EAAKglB,aAAa,SAAUh4B,KAAKm8D,MAAMS,EAAOnX,UAG/CzyC,EAAKglB,aAAa,QAASylC,EAAKxQ,YAE5B,GAAa,MAATrc,GAAwB,MAAPklD,EAC1B,CAEI,IAAK,IAAI9sF,KAAK4nC,EAAMlpB,MACpB,CACC,IAAItqB,EAAQwzC,EAAMlpB,MAAM1e,GAGH,mBAAX,GACK,iBAAX,IAEH5L,EAAQ+6I,gBAAgBnhE,QAAQ55E,IAGpB,MAATA,GACc,mBAAX,GACQ,iBAAX,GAEN4V,EAAKglB,aAAahvB,EAAG5L,GAIvB,IAAI85D,EAAMtmB,EAAM6qB,eAGhB,GAAW,MAAPvE,GAAeA,EAAIx2D,OAAS,EAChC,CACC,IAAI47D,EAAMt8D,KAAKm8D,MAAMjF,EAAI,GAAGpY,GAAK,IAAM9+C,KAAKm8D,MAAMjF,EAAI,GAAGxM,GAEzD,IAAS1hD,EAAE,EAAGA,EAAEkuD,EAAIx2D,OAAQsI,IAE3BszD,GAAO,IAAMt8D,KAAKm8D,MAAMjF,EAAIluD,GAAG81C,GAAK,IACnC9+C,KAAKm8D,MAAMjF,EAAIluD,GAAG0hD,GAGpB13C,EAAKglB,aAAa,SAAUskC,QAM5BtpD,EAAKglB,aAAa,IAAKh4B,KAAKm8D,MAAMvrB,EAAMkO,IACxC9rC,EAAKglB,aAAa,IAAKh4B,KAAKm8D,MAAMvrB,EAAM8Z,IACxC13C,EAAKglB,aAAa,QAASh4B,KAAKm8D,MAAMvrB,EAAMgV,QAC5C5yC,EAAKglB,aAAa,SAAUh4B,KAAKm8D,MAAMvrB,EAAM6U,SAG9C,IAAIyO,EAAStjB,EAAMozF,eAGL,MAAV9vE,IAEa,GAAZA,EAAOpV,GAEV9rC,EAAKglB,aAAa,KAAMh4B,KAAKm8D,MAAMjI,EAAOpV,IAG3B,GAAZoV,EAAOxJ,GAEV13C,EAAKglB,aAAa,KAAMh4B,KAAKm8D,MAAMjI,EAAOxJ,KAK7C,IAAS1hD,EAAE,EAAGA,EAAEykD,EAAYzkD,IAC5B,CACC,IAAIwtB,EAAY12B,KAAKolL,WAAWnhH,EAC9BtG,EAAMv3C,EAAMynC,WAAWb,EAAM9jD,IAEd,MAAbwtB,GAEHxjB,EAAKwlB,YAAYhC,KAMrB,OAAOxjB,GAIDixK,EA9LiB,IAkMzBxjI,WAAWynI,iBAA+C,qBAArBA,iBAAmCA,sBAAmB7nL,EAa3F,IAAI8nL,kBAAoBtE,gBAAgBG,SAAS,WAEhD,IAAIC,EAAQ,IAAIK,cAAc,IAAI5gD,cAgMlC,OAxLAugD,EAAMhgH,OAAS,SAASF,EAAKt8D,GAE5B,IAAIuL,EAAO+wD,EAAIhpD,SAAS9b,cAAca,KAAKk3E,WAE3C,IAAK,IAAIhuE,KAAKvB,EAAIg/B,OAClB,CACC,IAAI/e,EAAQjgB,EAAIg/B,OAAOz9B,GACnBo/K,EAAYrkH,EAAIhpD,SAAS9b,cAAc,OAE3C,GAAS,MAAL+J,EACJ,CAGC,IAAK,IAAIskB,KAFT86J,EAAUpwJ,aAAa,KAAMhvB,GAEf0e,EACd,CACC,IAAItqB,EAAQ0C,KAAKuoL,eAAe/6J,EAAG5F,EAAM4F,IAEzC,GAAa,MAATlwB,EACJ,CACC,IAAIw7E,EAAQ7U,EAAIhpD,SAAS9b,cAAc,OACvC25E,EAAM5gD,aAAa,QAAS56B,GAC5Bw7E,EAAM5gD,aAAa,KAAM1K,GACzB86J,EAAU5vJ,YAAYogD,IAIpBwvG,EAAUzmJ,WAAWjhC,OAAS,GAEjCsS,EAAKwlB,YAAY4vJ,IAKjB,OAAOp1K,GAQXixK,EAAMoE,eAAiB,SAASlrL,EAAKC,GAEpC,IAAIqZ,SAAa,EAWjB,MATY,YAARA,EAEHrZ,EAAQ+6I,gBAAgBnhE,QAAQ55E,GAEhB,UAARqZ,IAERrZ,EAAQ,MAGFA,GA4CR6mL,EAAM7D,OAAS,SAASD,EAAKntK,EAAMiyK,GAElC,IAAIx9K,EAAMw9K,GAAQ,IAAInlL,KAAK4gL,SAAS7uJ,YAChCphB,EAAKuC,EAAKqxB,aAAa,MAEjB,MAAN5zB,IAEH0vK,EAAIoE,QAAQ9zK,GAAMhJ,GAGnBuL,EAAOA,EAAKuqB,WAEZ,MAAe,MAARvqB,EACP,CACC,IAAKlT,KAAKonL,eAAe/G,EAAKntK,EAAMvL,IAAyB,OAAjBuL,EAAKy8C,SACjD,CACC,IAAI6sH,EAAKtpK,EAAKqxB,aAAa,MAE3B,GAAU,MAANi4I,EACJ,CACC,IAAIrxK,EAAS+H,EAAKqxB,aAAa,UAC3B3c,EAAmB,MAAVzc,EAAkB+6C,QAAQ1hC,MAAM7c,EAAIg/B,OAAOx7B,IAAW,KAEtD,MAATyc,IAEW,MAAVzc,GAEH25C,MAAMr0C,KAAK,wCACVtF,EAAS,wBAGXyc,EAAQ,IAAIvpB,QAGb,IAAIy6E,EAAQ5lE,EAAKuqB,WAEjB,MAAgB,MAATq7C,EACP,CACC,GAAIA,EAAMj7C,UAAYgsB,YAAY0F,iBAClC,CACE,IAAIlyD,EAAMy7E,EAAMv0C,aAAa,MAE7B,GAAsB,OAAlBu0C,EAAMnpB,SACV,CACC,IAAI99C,EAAOq0C,QAAQsL,eAAesnB,GAC9Bx7E,EAAQ,KAEA,MAARuU,GAAgBA,EAAKjR,OAAS,GAAKynL,kBAAkB38E,UAExDpuG,EAAQ4oD,QAAQgJ,KAAKr9C,IAIrBvU,EAAQw7E,EAAMv0C,aAAa,SAEvB2hB,QAAQ8Y,UAAU1hE,KAEtBA,EAAQ4K,WAAW5K,KAIP,MAATA,IAEHsqB,EAAMvqB,GAAOC,OAGY,UAAlBw7E,EAAMnpB,iBAEP/nC,EAAMvqB,GAIhBy7E,EAAQA,EAAMngD,YAGfhxB,EAAIwgI,aAAaq0C,EAAI50J,IAIvB1U,EAAOA,EAAKylB,YAGb,OAAOhxB,GAIDw8K,EAlMyC,IA6MjDkE,kBAAkB38E,WAAY,EAE9B/qD,WAAW0nI,kBAAiD,qBAAtBA,kBAAoCA,uBAAoB9nL,EAM9FwjL,gBAAgBG,SAAS,WAUxB,IAAIC,EAAQ,IAAIK,cAAc,IAAInlC,qBAuElC,OAhEA8kC,EAAMhgH,OAAS,SAASF,EAAKt8D,GAE5B,OAAO,MAmCRw8K,EAAM7D,OAAS,SAASD,EAAKntK,EAAMiyK,GAElC,GAAY,MAARA,EACJ,CACcA,EAAK7xH,OAClBpgD,EAAOA,EAAKuqB,WAEZ,MAAe,MAARvqB,EACP,CACC,IAAKlT,KAAKonL,eAAe/G,EAAKntK,EAAMiyK,IAClB,OAAjBjyK,EAAKy8C,SACN,CACC,IAAI6sH,EAAKtpK,EAAKqxB,aAAa,MACvBgvB,EAASrgD,EAAKqxB,aAAa,UAC3BshG,EAAU3yH,EAAKqxB,aAAa,WAEhC4gJ,EAAKjJ,WAAWM,EAAIjpH,EAAQsyE,GAG7B3yH,EAAOA,EAAKylB,aAId,OAAOwsJ,GAIDhB,EAjFiB,IAqFzBxjI,WAAW6nI,yBAA+D,qBAA7BA,yBAA2CA,8BAA2BjoL,EAcnH,IAAIkoL,sBAAwB1E,gBAAgBG,SAAS,WAEpD,IAAIC,EAAQ,IAAIK,cAAc,IAAI/kC,kBA8RlC,OAvRA0kC,EAAMhgH,OAAS,SAASF,EAAKt8D,GAE5B,OAAO,MA+FRw8K,EAAM7D,OAAS,SAASD,EAAKntK,EAAMiyK,GAElC,GAAY,MAARA,EACJ,CACC,IAAI7xH,EAAS6xH,EAAK7xH,OAClBpgD,EAAOA,EAAKuqB,WAEZ,MAAe,MAARvqB,EACP,CACC,GAAIA,EAAK2qB,UAAYgsB,YAAY0F,mBAE3BvvD,KAAKonL,eAAe/G,EAAKntK,EAAMiyK,GAEnC,GAAqB,aAAjBjyK,EAAKy8C,SAERw1H,EAAK32F,oBAED,GAAqB,MAAjBt7E,EAAKy8C,SAEbw1H,EAAKllC,QAAQxxD,gBAET,GAAqB,MAAjBv7E,EAAKy8C,SAEbw1H,EAAKllC,QAAQvxD,eAET,GAAqB,OAAjBx7E,EAAKy8C,SACd,CACC,IAAI6sH,EAAKtpK,EAAKqxB,aAAa,MAC3Bi4I,EAAK/4H,YAAYpkD,IAAIm9K,IAAOA,EAC5B,IAAI/1G,EAAOvzD,EAAKqxB,aAAa,QACzB6oD,EAAcl6E,EAAKqxB,aAAa,eAChCgvB,EAASrgD,EAAKqxB,aAAa,UAC3B0H,EAAO/4B,EAAKqxB,aAAa,QACzBq8I,EAAW1tK,EAAKqxB,aAAa,YAC7Bib,EAAwC,KAA/BtsC,EAAKqxB,aAAa,UAC3B1yB,EAAOq0C,QAAQsL,eAAet+C,GAC9Bi0C,EAAM,KAEV,GAAc,MAAVoM,EAEHpM,EAAMg+H,EAAKh4F,QAAQqvF,EAAI/1G,EAAMlT,EAAQ65B,QAEjC,GAAY,MAARnhD,EACT,CACC,IAAI6b,EAAS2gI,sBAA+B,UAAIviI,QAAQgJ,KAAKr9C,GAAQ,KACrEs1C,EAAMg+H,EAAK/2F,QAAQouF,EAAI/1G,EAAMx6B,EAAMmhD,EAAatlC,QAE5C,GAAgB,MAAZ84H,GAA6B,MAAR/uK,GAAgBA,EAAKjR,OAAS,EAC5D,CACC,IAAIosD,EAAOsG,EAAO6qH,UAAUyC,GACxBh5J,EAAQ1U,EAAKqxB,aAAa,SAElB,MAARyoB,GAAyB,MAATplC,IAEnBolC,EAAOsG,EAAOlH,MAAM+zE,UAAUnzE,GAC9BA,EAAKuU,SAAS35C,IAGf,IAAIi1J,EAAiB,KAET,MAARhrK,GAAgBA,EAAKjR,OAAS,GAAK6nL,sBAAsB/8E,YAE5DmxE,EAAiB32H,QAAQgJ,KAAKr9C,IAG/Bs1C,EAAMg+H,EAAKlI,aAAaT,EAAI/1G,EAAMzZ,EAAMogC,EAAayvF,EAAgBr9H,OAGtE,CACC,IAAI5tC,EAAWs0C,QAAQ6J,cAAc78C,GAErC,GAAItB,EAAShR,OAAS,EAErB,GAAY,MAAR6lE,EAIH,IAFA,IAAI4iB,EAAQ87F,EAAKr3F,eAAe0uF,GAEvBtzK,EAAE,EAAGA,EAAE0I,EAAShR,OAAQsI,IACjC,CACC,IAAI6J,EAAQnB,EAAS1I,GAErB,GAAsB,aAAlB6J,EAAM48C,SAETw1H,EAAK/7F,UAAUC,EAAO,YAElB,GAAsB,OAAlBt2E,EAAM48C,SACf,CACC,IAAI9H,EAAM90C,EAAMwxB,aAAa,MACzBmkJ,EAAM31K,EAAMwxB,aAAa,UAC7B4gJ,EAAKpI,gBAAgB1zF,EAAOxhC,EAAK6gI,QAKpC,CACC,IAAIv/F,EAAS,KACTpgF,EAAS,WAEZ,IAAI63K,EAAWttH,EAAO6qH,UAAUh1F,EAAO7rF,OAEvC,GAAgB,MAAZsjL,EACJ,CACC,IAAIp8J,EAAQo8J,EAASp8J,QACjBoD,EAAQuhE,EAAOllF,QAAQklF,EAAO79C,eAAe8pH,UAOjD,OALa,MAATxtI,GAEHpD,EAAM+8C,SAAS35C,GAGTpD,EAOR,OAHCsgC,MAAMr0C,KAAK,YAAYmwK,EAAS,cAG1B,MAGJj6G,EAAMw+G,EAAKlI,aAAaT,EAAI/1G,EAAM19D,EAAQ,KAAM,KAAMy2C,GAC1D2pC,EAASg8F,EAAKl8F,WAIdzhC,QAAQD,YAAY4hC,EAAQ,UAAU,WAErCg8F,EAAKllC,QAAQ9xD,WAAWxnB,GAAK,SAAS3gB,GAErC,IAAIgU,EAAK9T,QAAQ2Y,aAAavL,EAAOlH,MAAM2R,UAC1CvW,QAAQqwB,WAAW7xB,GAAMwB,QAAQuwB,WAAW/xB,IAE7C,OAAOsN,EAAO8pH,UAAU,KAAMt1H,IAASkS,EAAGhb,EAAGgb,EAAGpP,MAGjDu6H,EAAKllC,QAAQhzD,SAAU,KAIxB,IAAS/jF,EAAE,EAAGA,EAAE0I,EAAShR,OAAQsI,IACjC,CACK6J,EAAQnB,EAAS1I,GAErB,GAAsB,aAAlB6J,EAAM48C,SAETw1H,EAAK/7F,UAAUD,EAAQ,YAEnB,GAAsB,OAAlBp2E,EAAM48C,SACf,CACK9H,EAAM90C,EAAMwxB,aAAa,MAA7B,IACI5U,EAAM5c,EAAMwxB,aAAa,YACzB8G,EAAS85I,EAAK/7F,UAAUD,EAAQthC,EAAKl4B,GAAOixJ,GAChDv1I,EAAO+pH,UAAYriJ,EAAMwxB,aAAa,YAS3C,GAAW,MAAP4iB,EACJ,CACC,IAAIx2C,EAAKuC,EAAKqxB,aAAa,MAEjB,MAAN5zB,GAAcA,EAAG/P,OAAS,GAE7BumD,EAAIjvB,aAAa,KAAMvnB,IAO5BuC,EAAOA,EAAKylB,aAId,OAAOwsJ,GAIDhB,EAhS6C,IA+lBrD,OApTAsE,sBAAsB/8E,WAAY,EAElC/qD,WAAW8nI,sBAAyD,qBAA1BA,sBAAwCA,2BAAwBloL,EAM1GwjL,gBAAgBG,SAAS,WAaxB,IAAIC,EAAQ,IAAIK,cAAc,IAAIhlC,oBAkClC,OA3BA2kC,EAAMhgH,OAAS,SAASF,EAAKt8D,GAE5B,OAAO,MAQRw8K,EAAM7D,OAAS,SAASD,EAAKntK,EAAMiyK,GAElC,IAAIwD,EAAMz1K,EAAKowC,qBAAqB,WAAW,GAW/C,OATW,MAAPqlI,EAEH3oL,KAAKonL,eAAe/G,EAAKsI,EAAKxD,GAEd,MAARA,IAERA,EAAKz4K,OAASwG,GAGRiyK,GAIDhB,EA/CiB,IAmDzBxjI,WAAWioI,wBAA6D,qBAA5BA,wBAA0CA,6BAA0BroL,EAMhHwjL,gBAAgBG,SAAS,WAkBxB,IAAIC,EAAQ,IAAIK,cAAc,IAAI9kC,SACjC,CAAC,WAAY,eAAgB,iBAC7B,cAAe,iBAAkB,qBA0NlC,OAlKAykC,EAAM4C,YAAc,SAAS1G,EAAKntK,EAAMvL,GAGvC,IAAIy2K,EAAclrK,EAAKqxB,aAAa,eAEjB,MAAf65I,IAEHlrK,EAAK6qB,gBAAgB,eACrBp2B,EAAIy2K,YAAcz2K,EAAIw2K,UAAUC,IAIjC,IAAIE,EAAeprK,EAAKqxB,aAAa,gBAQrC,OANoB,MAAhB+5I,IAEHprK,EAAK6qB,gBAAgB,gBACrBp2B,EAAI22K,aAAe32K,EAAIw2K,UAAUG,IAG3B32K,GAQRw8K,EAAMkD,YAAc,SAAShH,EAAKttK,EAAOpL,GAExC,GAAsB,SAAlBoL,EAAM48C,SACV,CACC,IAAIk5H,EAAO91K,EAAMwxB,aAAa,MAE9B,GAAY,aAARskJ,EAGH,YADA7oL,KAAK8oL,gBAAgBzI,EAAKttK,EAAOpL,QAI9B,GAAsB,MAAlBoL,EAAM48C,SAGd,YADA3vD,KAAK+oL,SAAS1I,EAAKttK,EAAOpL,GAI3B68K,cAAc9kL,UAAU2nL,YAAYtmL,MAAMf,KAAMgB,YAQjDmjL,EAAM4E,SAAW,SAAS1I,EAAKntK,EAAMogD,GAEpC,IAAI3jC,EAAMzc,EAAKuqB,WACf,MAAc,MAAP9N,EACP,CACC,GAAoB,OAAhBA,EAAIggC,SACR,CACC,IAAI6sH,EAAK7sJ,EAAI4U,aAAa,MACtB4iB,EAAMx3B,EAAI4U,aAAa,WACvB3c,EAAQ+H,EAAI4U,aAAa,SACzBiqB,EAAU,KAEd,GAAW,MAAPrH,EAEHqH,EAAUvzC,SAAS6iF,eAAe32C,GAEnB,MAAXqH,GAA4B,MAAT5mC,IAEtB4mC,EAAQ5mC,MAAM+a,SAAW,IAAM/a,OAIjC,CACC,IAAIo3B,EAAI3pB,SAAS1F,EAAI4U,aAAa,MAC9BqmB,EAAIv1B,SAAS1F,EAAI4U,aAAa,MAC9BuhB,EAAQn2B,EAAI4U,aAAa,SACzBohB,EAASh2B,EAAI4U,aAAa,UAG9BiqB,EAAUvzC,SAAS9b,cAAc,OACjCqvD,EAAQ5mC,MAAM+a,QAAU/a,EAExB,IAAIw2C,EAAM,IAAIvX,SAASpD,YAAYpkD,IAAIm9K,IAAOA,EAC7ChuH,EAASxP,EAAG4L,EAAG9E,EAAOH,GAAQ,GAAO,GACtCyY,EAAInW,YAAW,GAIN,SAANu0H,EAEHlpH,EAAOsuH,kBAAkBpzH,GAEX,WAANguH,EAERlpH,EAAO0uH,oBAAoBxzH,GAEb,SAANguH,EAERlpH,EAAO+uH,kBAAkB7zH,GAEX,UAANguH,EAERlpH,EAAO2uH,mBAAmBzzH,GAEZ,OAANguH,GAERlpH,EAAO01H,gBAAgBx6H,OAGA,YAAhB7+B,EAAIggC,SAEZlM,YAAYj9C,IAAImpB,EAAI4U,aAAa,aAET,cAAhB5U,EAAIggC,UAEZ/O,SAASuC,KAAK,aAAcxzB,EAAI4U,aAAa,SAG9C5U,EAAMA,EAAIgJ,cASZwrJ,EAAM2E,gBAAkB,SAASzI,EAAKntK,EAAMogD,GAEnB,MAApBA,EAAO6qH,YAEV7qH,EAAO6qH,UAAY,IAIpB,IADA,IAAIvsK,EAAWs0C,QAAQ6J,cAAc78C,GAC5Bsa,EAAE,EAAGA,EAAE5b,EAAShR,OAAQ4sB,IACjC,CACC,IAAI1vB,EAAO8T,EAAS4b,GAAG+W,aAAa,MAChCxxB,EAAQnB,EAAS4b,GAAGiQ,WAExB,MAAgB,MAAT1qB,GAAmC,GAAlBA,EAAM8qB,SAE7B9qB,EAAQA,EAAM4lB,YAGF,MAAT5lB,IAOHugD,EAAO6qH,UAAUrgL,GAAQuiL,EAAIiF,WAAWvyK,MAMpCoxK,EA9OiB,IAkPzBxjI,WAAWsoI,cAAyC,qBAAlBA,cAAgCA,mBAAgB1oL,EAC3EogD,gB,qBCtzxFP,IAAIt+C,EAAW,EAAQ,QACnBqF,EAAW,EAAQ,QACnBwhL,EAAuB,EAAQ,QAEnChsL,EAAOC,QAAU,SAAUi3C,EAAG4K,GAE5B,GADA38C,EAAS+xC,GACL1sC,EAASs3C,IAAMA,EAAEjtB,cAAgBqiB,EAAG,OAAO4K,EAC/C,IAAImqI,EAAoBD,EAAqB3rL,EAAE62C,GAC3C15B,EAAUyuK,EAAkBzuK,QAEhC,OADAA,EAAQskC,GACDmqI,EAAkB1pI,U,qBCV3B,IAAIjiD,EAAS,EAAQ,QACjBqG,EAA8B,EAAQ,QAE1C3G,EAAOC,QAAU,SAAUE,EAAKC,GAC9B,IACEuG,EAA4BrG,EAAQH,EAAKC,GACzC,MAAOmB,GACPjB,EAAOH,GAAOC,EACd,OAAOA,I,mBCRXJ,EAAOC,QAAU,I,mBCAjBD,EAAOC,QAAU,SAAUwB,GACzB,IACE,QAASA,IACT,MAAOF,GACP,OAAO,K,qBCJX,IAAIgD,EAAO,EAAQ,QACfjE,EAAS,EAAQ,QAEjBiD,EAAY,SAAUi9C,GACxB,MAA0B,mBAAZA,EAAyBA,OAAWn9C,GAGpDrD,EAAOC,QAAU,SAAUi7B,EAAWzkB,GACpC,OAAO3S,UAAUJ,OAAS,EAAIH,EAAUgB,EAAK22B,KAAe33B,EAAUjD,EAAO46B,IACzE32B,EAAK22B,IAAc32B,EAAK22B,GAAWzkB,IAAWnW,EAAO46B,IAAc56B,EAAO46B,GAAWzkB,K,kCCR3F,IAAIgkC,EAA6B,GAAGtD,qBAChC/1C,EAA2BD,OAAOC,yBAGlCs5C,EAAct5C,IAA6Bq5C,EAA2Bj5C,KAAK,CAAEm5C,EAAG,GAAK,GAIzF16C,EAAQI,EAAIq6C,EAAc,SAA8BE,GACtD,IAAIvzC,EAAajG,EAAyB0B,KAAM83C,GAChD,QAASvzC,GAAcA,EAAWyJ,YAChC2pC,G,qBCZJ,IAAIt1C,EAAW,EAAQ,QACnB+mL,EAAqB,EAAQ,QAMjClsL,EAAOC,QAAUkB,OAAOk0C,iBAAmB,aAAe,GAAK,WAC7D,IAEIh9B,EAFA8zK,GAAiB,EACjB/nL,EAAO,GAEX,IACEiU,EAASlX,OAAOC,yBAAyBD,OAAOqB,UAAW,aAAa6Q,IACxEgF,EAAO7W,KAAK4C,EAAM,IAClB+nL,EAAiB/nL,aAAgBU,MACjC,MAAOvD,IACT,OAAO,SAAwBF,EAAGy1C,GAKhC,OAJA3xC,EAAS9D,GACT6qL,EAAmBp1I,GACfq1I,EAAgB9zK,EAAO7W,KAAKH,EAAGy1C,GAC9Bz1C,EAAEsW,UAAYm/B,EACZz1C,GAdoD,QAgBzDgC,I,qBCvBN,IAAInB,EAAiB,EAAQ,QAAuC7B,EAChEW,EAAM,EAAQ,QACdkD,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAEpClE,EAAOC,QAAU,SAAUmD,EAAI6E,EAAKT,GAC9BpE,IAAOpC,EAAIoC,EAAKoE,EAASpE,EAAKA,EAAGZ,UAAW2B,IAC9CjC,EAAekB,EAAIe,EAAe,CAAE4D,cAAc,EAAM3H,MAAO6H,M,qBCRnE,IAAIstC,EAAU,EAAQ,QAClB50C,EAAQ,EAAQ,SAEnBX,EAAOC,QAAU,SAAUE,EAAKC,GAC/B,OAAOO,EAAMR,KAASQ,EAAMR,QAAiBkD,IAAVjD,EAAsBA,EAAQ,MAChE,WAAY,IAAIyT,KAAK,CACtB8kB,QAAS,QACToW,KAAMwG,EAAU,OAAS,SACzB8D,UAAW,0C,qBCRb,IAAI1yC,EAA8B,EAAQ,QAE1C3G,EAAOC,QAAU,SAAUiH,EAAQ/G,EAAKC,EAAO2G,GACzCA,GAAWA,EAAQ+J,WAAY5J,EAAO/G,GAAOC,EAC5CuG,EAA4BO,EAAQ/G,EAAKC,K,sBCJhD,8BACE,OAAOgD,GAAMA,EAAGJ,MAAQA,MAAQI,GAIlCpD,EAAOC,QAELo0C,EAA2B,iBAAdC,YAA0BA,aACvCD,EAAuB,iBAAV9iC,QAAsBA,SACnC8iC,EAAqB,iBAARE,MAAoBA,OACjCF,EAAuB,iBAAV/zC,GAAsBA,IAEnCuN,SAAS,cAATA,K,2CCZF,IAAIvI,EAAO,EAAQ,QACfo0C,EAAgB,EAAQ,QACxBtrC,EAAW,EAAQ,QACnB/I,EAAW,EAAQ,QACnB+mL,EAAqB,EAAQ,QAE7Bv4K,EAAO,GAAGA,KAGV8kC,EAAe,SAAUhF,GAC3B,IAAI04I,EAAiB,GAAR14I,EACT24I,EAAoB,GAAR34I,EACZ44I,EAAkB,GAAR54I,EACV64I,EAAmB,GAAR74I,EACX84I,EAAwB,GAAR94I,EAChB+4I,EAAmB,GAAR/4I,GAAa84I,EAC5B,OAAO,SAAU5zI,EAAO8zI,EAAYlpL,EAAMmpL,GASxC,IARA,IAOIxsL,EAAOuF,EAPPtE,EAAI+M,EAASyqC,GACbtE,EAAOmF,EAAcr4C,GACrB+E,EAAgBd,EAAKqnL,EAAYlpL,EAAM,GACvCC,EAAS2B,EAASkvC,EAAK7wC,QACvBwC,EAAQ,EACR2F,EAAS+gL,GAAkBR,EAC3BllL,EAASmlL,EAASxgL,EAAOgtC,EAAOn1C,GAAU4oL,EAAYzgL,EAAOgtC,EAAO,QAAKx1C,EAEvEK,EAASwC,EAAOA,IAAS,IAAIwmL,GAAYxmL,KAASquC,KACtDn0C,EAAQm0C,EAAKruC,GACbP,EAASS,EAAchG,EAAO8F,EAAO7E,GACjCsyC,GACF,GAAI04I,EAAQnlL,EAAOhB,GAASP,OACvB,GAAIA,EAAQ,OAAQguC,GACvB,KAAK,EAAG,OAAO,EACf,KAAK,EAAG,OAAOvzC,EACf,KAAK,EAAG,OAAO8F,EACf,KAAK,EAAG2N,EAAKrS,KAAK0F,EAAQ9G,QACrB,GAAIosL,EAAU,OAAO,EAGhC,OAAOC,GAAiB,EAAIF,GAAWC,EAAWA,EAAWtlL,IAIjElH,EAAOC,QAAU,CAGfuW,QAASmiC,EAAa,GAGtB/sC,IAAK+sC,EAAa,GAGlBthB,OAAQshB,EAAa,GAGrB9K,KAAM8K,EAAa,GAGnB7pC,MAAO6pC,EAAa,GAGpBk0I,KAAMl0I,EAAa,GAGnBm0I,UAAWn0I,EAAa,K,qBC/D1B,IAAIh3C,EAAqB,EAAQ,QAC7BC,EAAc,EAAQ,QAI1B5B,EAAOC,QAAUkB,OAAO8N,MAAQ,SAAc5N,GAC5C,OAAOM,EAAmBN,EAAGO,K,mBCN/B5B,EAAOC,QAAU,SAAUmD,GACzB,MAAqB,kBAAPA,EAAyB,OAAPA,EAA4B,oBAAPA,I,qBCDvD,IAAIpC,EAAM,EAAQ,QACdoN,EAAW,EAAQ,QACnBmlC,EAAY,EAAQ,QACpBiG,EAA2B,EAAQ,QAEnC/B,EAAWlE,EAAU,YACrBkG,EAAkBt4C,OAAOqB,UAI7BxC,EAAOC,QAAUu5C,EAA2Br4C,OAAOi0C,eAAiB,SAAU/zC,GAE5E,OADAA,EAAI+M,EAAS/M,GACTL,EAAIK,EAAGo2C,GAAkBp2C,EAAEo2C,GACH,mBAAjBp2C,EAAEwzB,aAA6BxzB,aAAaA,EAAEwzB,YAChDxzB,EAAEwzB,YAAYryB,UACdnB,aAAaF,OAASs4C,EAAkB,O,qBCfnD,IAAIz3C,EAAQ,EAAQ,QAEpBhC,EAAOC,SAAW+B,GAAM,WACtB,SAASu2C,KAET,OADAA,EAAE/1C,UAAUqyB,YAAc,KACnB1zB,OAAOi0C,eAAe,IAAImD,KAASA,EAAE/1C,c,kCCJ9C,IAAI1B,EAAkB,EAAQ,QAC1Bi/C,EAAmB,EAAQ,QAC3B7L,EAAY,EAAQ,QACpBM,EAAsB,EAAQ,QAC9BC,EAAiB,EAAQ,QAEzBuL,EAAiB,iBACjBrL,EAAmBH,EAAoBnhC,IACvCuhC,EAAmBJ,EAAoBd,UAAUsM,GAYrDhgD,EAAOC,QAAUw0C,EAAe3vC,MAAO,SAAS,SAAU+vC,EAAUoL,GAClEtL,EAAiB7xC,KAAM,CACrB2W,KAAMumC,EACN94C,OAAQpG,EAAgB+zC,GACxB3uC,MAAO,EACP+5C,KAAMA,OAIP,WACD,IAAIrM,EAAQgB,EAAiB9xC,MACzBoE,EAAS0sC,EAAM1sC,OACf+4C,EAAOrM,EAAMqM,KACb/5C,EAAQ0tC,EAAM1tC,QAClB,OAAKgB,GAAUhB,GAASgB,EAAOxD,QAC7BkwC,EAAM1sC,YAAS7D,EACR,CAAEjD,WAAOiD,EAAWwB,MAAM,IAEvB,QAARo7C,EAAuB,CAAE7/C,MAAO8F,EAAOrB,MAAM,GACrC,UAARo7C,EAAyB,CAAE7/C,MAAO8G,EAAOhB,GAAQrB,MAAM,GACpD,CAAEzE,MAAO,CAAC8F,EAAOgB,EAAOhB,IAASrB,MAAM,KAC7C,UAKHqvC,EAAUgM,UAAYhM,EAAUpvC,MAGhCi7C,EAAiB,QACjBA,EAAiB,UACjBA,EAAiB,Y,qBCpDjB,IAAI19C,EAAW,EAAQ,QAEvBrC,EAAOC,QAAU,SAAUiH,EAAQwQ,EAAK3Q,GACtC,IAAK,IAAI5G,KAAOuX,EAAKrV,EAAS6E,EAAQ/G,EAAKuX,EAAIvX,GAAM4G,GACrD,OAAOG,I,qBCJT,IAAIxF,EAAwB,EAAQ,QAIpCA,EAAsB,kB,mBCJtB1B,EAAOC,QAAU,SAAUwB,GACzB,IACE,MAAO,CAAEF,OAAO,EAAOnB,MAAOqB,KAC9B,MAAOF,GACP,MAAO,CAAEA,OAAO,EAAMnB,MAAOmB,M,qBCJjC,IAAIG,EAAwB,EAAQ,QAIpCA,EAAsB,U,kCCHtB,IAgDIqrL,EAAUC,EAAsBC,EAAgBC,EAhDhDh4I,EAAI,EAAQ,QACZK,EAAU,EAAQ,QAClBj1C,EAAS,EAAQ,QACjB0D,EAAa,EAAQ,QACrBy9C,EAAgB,EAAQ,QACxBp/C,EAAW,EAAQ,QACnB8qL,EAAc,EAAQ,QACtB73I,EAAiB,EAAQ,QACzB83I,EAAa,EAAQ,QACrB5iL,EAAW,EAAQ,QACnBjH,EAAY,EAAQ,QACpB8pL,EAAa,EAAQ,QACrBppL,EAAU,EAAQ,QAClB2B,EAAU,EAAQ,QAClB0nL,EAA8B,EAAQ,QACtC5rI,EAAqB,EAAQ,QAC7BqB,EAAO,EAAQ,QAAqB1vC,IACpCk6K,EAAY,EAAQ,QACpB5rI,EAAiB,EAAQ,QACzB6rI,EAAmB,EAAQ,QAC3BC,EAA6B,EAAQ,QACrCC,EAAU,EAAQ,QAClBl5I,EAAsB,EAAQ,QAC9B1tC,EAAW,EAAQ,QACnB5C,EAAkB,EAAQ,QAC1Bw8C,EAAa,EAAQ,QAErB74C,EAAU3D,EAAgB,WAC1BypL,EAAU,UACV/4I,EAAmBJ,EAAoBryC,IACvCwyC,EAAmBH,EAAoBnhC,IACvCu6K,EAA0Bp5I,EAAoBd,UAAUi6I,GACxDE,EAAqBpsI,EACrBn+C,EAAYhD,EAAOgD,UACnBya,EAAWzd,EAAOyd,SAClBw0B,EAAUjyC,EAAOiyC,QACjBu7I,EAAS9pL,EAAW,SACpBgoL,EAAuByB,EAA2BptL,EAClD0tL,EAA8B/B,EAC9BtpI,EAA8B,WAApBz+C,EAAQsuC,GAClBy7I,KAAoBjwK,GAAYA,EAASgT,aAAezwB,EAAOguC,eAC/D2/I,EAAsB,qBACtBC,EAAoB,mBACpBC,EAAU,EACVC,EAAY,EACZC,EAAW,EACXC,EAAU,EACVC,EAAY,EAGZtnL,GAASH,EAAS6mL,GAAS,WAE7B,IAAIprI,EAAUsrI,EAAmBrwK,QAAQ,GACrCu2C,EAAQ,aACRy6H,GAAejsI,EAAQ1tB,YAAc,IAAIhtB,GAAW,SAAUpG,GAChEA,EAAKsyD,EAAOA,IAGd,SAAUrR,GAA2C,mBAAzB+rI,0BACrBl5I,GAAWgN,EAAQ,aACrBA,EAAQp3C,KAAK4oD,aAAkBy6H,GAIhB,KAAf9tI,MAGHguI,GAAsBznL,KAAWqmL,GAA4B,SAAUznL,GACzEgoL,EAAmBc,IAAI9oL,GAAU,UAAS,kBAIxC+oL,GAAa,SAAUxrL,GACzB,IAAI+H,EACJ,SAAOX,EAASpH,IAAkC,mBAAnB+H,EAAO/H,EAAG+H,QAAsBA,GAG7D8I,GAAS,SAAUsuC,EAAS3O,EAAOi7I,GACrC,IAAIj7I,EAAMk7I,SAAV,CACAl7I,EAAMk7I,UAAW,EACjB,IAAIC,EAAQn7I,EAAMo7I,UAClBzB,GAAU,WACR,IAAIntL,EAAQwzC,EAAMxzC,MACd6uL,EAAKr7I,EAAMA,OAASw6I,EACpBloL,EAAQ,EAEZ,MAAO6oL,EAAMrrL,OAASwC,EAAO,CAC3B,IAKIP,EAAQwF,EAAM+jL,EALdC,EAAWJ,EAAM7oL,KACjB0W,EAAUqyK,EAAKE,EAASF,GAAKE,EAASC,KACtC5xK,EAAU2xK,EAAS3xK,QACnBoP,EAASuiK,EAASviK,OAClBi2B,EAASssI,EAAStsI,OAEtB,IACMjmC,GACGqyK,IACCr7I,EAAMy7I,YAAcd,GAAWe,GAAkB/sI,EAAS3O,GAC9DA,EAAMy7I,UAAYf,IAEJ,IAAZ1xK,EAAkBjX,EAASvF,GAEzByiD,GAAQA,EAAOtY,QACnB5kC,EAASiX,EAAQxc,GACbyiD,IACFA,EAAOC,OACPosI,GAAS,IAGTvpL,IAAWwpL,EAAS5sI,QACtB31B,EAAOtpB,EAAU,yBACR6H,EAAOyjL,GAAWjpL,IAC3BwF,EAAK3J,KAAKmE,EAAQ6X,EAASoP,GACtBpP,EAAQ7X,IACVinB,EAAOxsB,GACd,MAAOmB,GACHshD,IAAWqsI,GAAQrsI,EAAOC,OAC9Bl2B,EAAOrrB,IAGXqyC,EAAMo7I,UAAY,GAClBp7I,EAAMk7I,UAAW,EACbD,IAAaj7I,EAAMy7I,WAAWE,GAAYhtI,EAAS3O,QAIvDtF,GAAgB,SAAU1tC,EAAM2hD,EAAS11B,GAC3C,IAAIpN,EAAO7C,EACPoxK,GACFvuK,EAAQ1B,EAASgT,YAAY,SAC7BtR,EAAM8iC,QAAUA,EAChB9iC,EAAMoN,OAASA,EACfpN,EAAM4uB,UAAUztC,GAAM,GAAO,GAC7BN,EAAOguC,cAAc7uB,IAChBA,EAAQ,CAAE8iC,QAASA,EAAS11B,OAAQA,IACvCjQ,EAAUtc,EAAO,KAAOM,IAAOgc,EAAQ6C,GAClC7e,IAASqtL,GAAqBT,EAAiB,8BAA+B3gK,IAGrF0iK,GAAc,SAAUhtI,EAAS3O,GACnCmP,EAAKvhD,KAAKlB,GAAQ,WAChB,IAEIqF,EAFAvF,EAAQwzC,EAAMxzC,MACdovL,EAAeC,GAAY77I,GAE/B,GAAI47I,IACF7pL,EAAS+nL,GAAQ,WACXhrI,EACFnQ,EAAQ9gB,KAAK,qBAAsBrxB,EAAOmiD,GACrCjU,GAAc2/I,EAAqB1rI,EAASniD,MAGrDwzC,EAAMy7I,UAAY3sI,GAAW+sI,GAAY77I,GAAS26I,EAAYD,EAC1D3oL,EAAOpE,OAAO,MAAMoE,EAAOvF,UAKjCqvL,GAAc,SAAU77I,GAC1B,OAAOA,EAAMy7I,YAAcf,IAAY16I,EAAMzqC,QAG3CmmL,GAAoB,SAAU/sI,EAAS3O,GACzCmP,EAAKvhD,KAAKlB,GAAQ,WACZoiD,EACFnQ,EAAQ9gB,KAAK,mBAAoB8wB,GAC5BjU,GAAc4/I,EAAmB3rI,EAAS3O,EAAMxzC,WAIvDkF,GAAO,SAAU9B,EAAI++C,EAAS3O,EAAO87I,GACvC,OAAO,SAAUtvL,GACfoD,EAAG++C,EAAS3O,EAAOxzC,EAAOsvL,KAI1BC,GAAiB,SAAUptI,EAAS3O,EAAOxzC,EAAOsvL,GAChD97I,EAAM/uC,OACV+uC,EAAM/uC,MAAO,EACT6qL,IAAQ97I,EAAQ87I,GACpB97I,EAAMxzC,MAAQA,EACdwzC,EAAMA,MAAQy6I,EACdp6K,GAAOsuC,EAAS3O,GAAO,KAGrBg8I,GAAkB,SAAUrtI,EAAS3O,EAAOxzC,EAAOsvL,GACrD,IAAI97I,EAAM/uC,KAAV,CACA+uC,EAAM/uC,MAAO,EACT6qL,IAAQ97I,EAAQ87I,GACpB,IACE,GAAIntI,IAAYniD,EAAO,MAAMkD,EAAU,oCACvC,IAAI6H,EAAOyjL,GAAWxuL,GAClB+K,EACFoiL,GAAU,WACR,IAAIsC,EAAU,CAAEhrL,MAAM,GACtB,IACEsG,EAAK3J,KAAKpB,EACRkF,GAAKsqL,GAAiBrtI,EAASstI,EAASj8I,GACxCtuC,GAAKqqL,GAAgBptI,EAASstI,EAASj8I,IAEzC,MAAOryC,GACPouL,GAAeptI,EAASstI,EAAStuL,EAAOqyC,QAI5CA,EAAMxzC,MAAQA,EACdwzC,EAAMA,MAAQw6I,EACdn6K,GAAOsuC,EAAS3O,GAAO,IAEzB,MAAOryC,GACPouL,GAAeptI,EAAS,CAAE19C,MAAM,GAAStD,EAAOqyC,MAKhD3sC,KAEF4mL,EAAqB,SAAiBiC,GACpCzC,EAAWvqL,KAAM+qL,EAAoBF,GACrCpqL,EAAUusL,GACV/C,EAASvrL,KAAKsB,MACd,IAAI8wC,EAAQgB,EAAiB9xC,MAC7B,IACEgtL,EAASxqL,GAAKsqL,GAAiB9sL,KAAM8wC,GAAQtuC,GAAKqqL,GAAgB7sL,KAAM8wC,IACxE,MAAOryC,GACPouL,GAAe7sL,KAAM8wC,EAAOryC,KAIhCwrL,EAAW,SAAiB+C,GAC1Bn7I,EAAiB7xC,KAAM,CACrB2W,KAAMk0K,EACN9oL,MAAM,EACNiqL,UAAU,EACV3lL,QAAQ,EACR6lL,UAAW,GACXK,WAAW,EACXz7I,MAAOu6I,EACP/tL,WAAOiD,KAGX0pL,EAASvqL,UAAY2qL,EAAYU,EAAmBrrL,UAAW,CAG7D2I,KAAM,SAAc4kL,EAAaC,GAC/B,IAAIp8I,EAAQg6I,EAAwB9qL,MAChCqsL,EAAWnD,EAAqBtqI,EAAmB5+C,KAAM+qL,IAO7D,OANAsB,EAASF,GAA2B,mBAAfc,GAA4BA,EACjDZ,EAASC,KAA4B,mBAAdY,GAA4BA,EACnDb,EAAStsI,OAASH,EAAUnQ,EAAQsQ,YAASx/C,EAC7CuwC,EAAMzqC,QAAS,EACfyqC,EAAMo7I,UAAUn7K,KAAKs7K,GACjBv7I,EAAMA,OAASu6I,GAASl6K,GAAOnR,KAAM8wC,GAAO,GACzCu7I,EAAS5sI,SAIlB,MAAS,SAAUytI,GACjB,OAAOltL,KAAKqI,UAAK9H,EAAW2sL,MAGhChD,EAAuB,WACrB,IAAIzqI,EAAU,IAAIwqI,EACdn5I,EAAQgB,EAAiB2N,GAC7Bz/C,KAAKy/C,QAAUA,EACfz/C,KAAK0a,QAAUlY,GAAKsqL,GAAiBrtI,EAAS3O,GAC9C9wC,KAAK8pB,OAAStnB,GAAKqqL,GAAgBptI,EAAS3O,IAE9C65I,EAA2BptL,EAAI2rL,EAAuB,SAAU90I,GAC9D,OAAOA,IAAM22I,GAAsB32I,IAAM+1I,EACrC,IAAID,EAAqB91I,GACzB62I,EAA4B72I,IAG7B3B,GAAmC,mBAAjBkM,IACrByrI,EAAazrI,EAAcj/C,UAAU2I,KAGrC9I,EAASo/C,EAAcj/C,UAAW,QAAQ,SAAcutL,EAAaC,GACnE,IAAIvsL,EAAOX,KACX,OAAO,IAAI+qL,GAAmB,SAAUrwK,EAASoP,GAC/CsgK,EAAW1rL,KAAKiC,EAAM+Z,EAASoP,MAC9BzhB,KAAK4kL,EAAaC,KAEpB,CAAEz1I,QAAQ,IAGQ,mBAAVuzI,GAAsB54I,EAAE,CAAE50C,QAAQ,EAAMwQ,YAAY,EAAMnJ,QAAQ,GAAQ,CAEnFsoL,MAAO,SAAep1I,GACpB,OAAO8G,EAAeksI,EAAoBC,EAAOjqL,MAAMvD,EAAQwD,iBAMvEoxC,EAAE,CAAE50C,QAAQ,EAAMg+C,MAAM,EAAM32C,OAAQV,IAAU,CAC9CqW,QAASuwK,IAGXv4I,EAAeu4I,EAAoBF,GAAS,GAAO,GACnDP,EAAWO,GAEXV,EAAiBjpL,EAAW2pL,GAG5Bz4I,EAAE,CAAEhuC,OAAQymL,EAASlmL,MAAM,EAAME,OAAQV,IAAU,CAGjD2lB,OAAQ,SAAgBo0C,GACtB,IAAIkvH,EAAalE,EAAqBlpL,MAEtC,OADAotL,EAAWtjK,OAAOprB,UAAK6B,EAAW29D,GAC3BkvH,EAAW3tI,WAItBrN,EAAE,CAAEhuC,OAAQymL,EAASlmL,MAAM,EAAME,OAAQ4tC,GAAWtuC,IAAU,CAG5DuW,QAAS,SAAiBskC,GACxB,OAAOH,EAAepM,GAAWzyC,OAASmqL,EAAiBY,EAAqB/qL,KAAMg/C,MAI1F5M,EAAE,CAAEhuC,OAAQymL,EAASlmL,MAAM,EAAME,OAAQ+mL,IAAuB,CAG9DC,IAAK,SAAa9oL,GAChB,IAAIqxC,EAAIp0C,KACJotL,EAAalE,EAAqB90I,GAClC15B,EAAU0yK,EAAW1yK,QACrBoP,EAASsjK,EAAWtjK,OACpBjnB,EAAS+nL,GAAQ,WACnB,IAAIyC,EAAkB5sL,EAAU2zC,EAAE15B,SAC9ByH,EAAS,GACTrH,EAAU,EACVwyK,EAAY,EAChBxqL,EAAQC,GAAU,SAAU08C,GAC1B,IAAIr8C,EAAQ0X,IACRyyK,GAAgB,EACpBprK,EAAOpR,UAAKxQ,GACZ+sL,IACAD,EAAgB3uL,KAAK01C,EAAGqL,GAASp3C,MAAK,SAAU/K,GAC1CiwL,IACJA,GAAgB,EAChBprK,EAAO/e,GAAS9F,IACdgwL,GAAa5yK,EAAQyH,MACtB2H,QAEHwjK,GAAa5yK,EAAQyH,MAGzB,OADItf,EAAOpE,OAAOqrB,EAAOjnB,EAAOvF,OACzB8vL,EAAW3tI,SAIpB+tI,KAAM,SAAczqL,GAClB,IAAIqxC,EAAIp0C,KACJotL,EAAalE,EAAqB90I,GAClCtqB,EAASsjK,EAAWtjK,OACpBjnB,EAAS+nL,GAAQ,WACnB,IAAIyC,EAAkB5sL,EAAU2zC,EAAE15B,SAClC5X,EAAQC,GAAU,SAAU08C,GAC1B4tI,EAAgB3uL,KAAK01C,EAAGqL,GAASp3C,KAAK+kL,EAAW1yK,QAASoP,SAI9D,OADIjnB,EAAOpE,OAAOqrB,EAAOjnB,EAAOvF,OACzB8vL,EAAW3tI,Y,qBC9WtB,IAAI7gD,EAAwB,EAAQ,QAGpCA,EAAsB,a,qBCHtB,IAAIV,EAAM,EAAQ,QACdmS,EAAU,EAAQ,QAClBgqC,EAAiC,EAAQ,QACzCr9C,EAAuB,EAAQ,QAEnCE,EAAOC,QAAU,SAAUiH,EAAQF,GAIjC,IAHA,IAAIiI,EAAOkE,EAAQnM,GACf9E,EAAiBpC,EAAqBO,EACtCe,EAA2B+7C,EAA+B98C,EACrD2L,EAAI,EAAGA,EAAIiD,EAAKvL,OAAQsI,IAAK,CACpC,IAAI7L,EAAM8O,EAAKjD,GACVhL,EAAIkG,EAAQ/G,IAAM+B,EAAegF,EAAQ/G,EAAKiB,EAAyB4F,EAAQ7G,O,qBCXxF,IAAI+D,EAAkB,EAAQ,QAC1BgwC,EAAY,EAAQ,QAEpB1vC,EAAWN,EAAgB,YAC3BmzC,EAAiBvyC,MAAMtC,UAG3BxC,EAAOC,QAAU,SAAUmD,GACzB,YAAcC,IAAPD,IAAqB8wC,EAAUpvC,QAAU1B,GAAMi0C,EAAe7yC,KAAcpB,K,qBCRrF,IAAI+B,EAAW,EAAQ,QACnB+mL,EAAqB,EAAQ,QAMjClsL,EAAOC,QAAUkB,OAAOk0C,iBAAmB,aAAe,GAAK,WAC7D,IAEIh9B,EAFA8zK,GAAiB,EACjB/nL,EAAO,GAEX,IACEiU,EAASlX,OAAOC,yBAAyBD,OAAOqB,UAAW,aAAa6Q,IACxEgF,EAAO7W,KAAK4C,EAAM,IAClB+nL,EAAiB/nL,aAAgBU,MACjC,MAAOvD,IACT,OAAO,SAAwBF,EAAGy1C,GAKhC,OAJA3xC,EAAS9D,GACT6qL,EAAmBp1I,GACfq1I,EAAgB9zK,EAAO7W,KAAKH,EAAGy1C,GAC9Bz1C,EAAEsW,UAAYm/B,EACZz1C,GAdoD,QAgBzDgC,I,qBCvBN,IAAIW,EAAa,EAAQ,QAEzBhE,EAAOC,QAAU+D,EAAW,WAAY,oB,qBCFxC,IAAItC,EAAwB,EAAQ,QAIpCA,EAAsB,gB,kCCHtB,IAAI6B,EAAY,EAAQ,QAEpBgtL,EAAoB,SAAUr5I,GAChC,IAAI15B,EAASoP,EACb9pB,KAAKy/C,QAAU,IAAIrL,GAAE,SAAUs5I,EAAWC,GACxC,QAAgBptL,IAAZma,QAAoCna,IAAXupB,EAAsB,MAAMtpB,UAAU,2BACnEka,EAAUgzK,EACV5jK,EAAS6jK,KAEX3tL,KAAK0a,QAAUja,EAAUia,GACzB1a,KAAK8pB,OAASrpB,EAAUqpB,IAI1B5sB,EAAOC,QAAQI,EAAI,SAAU62C,GAC3B,OAAO,IAAIq5I,EAAkBr5I,K,kCCf/B,IAAIzB,EAAoB,EAAQ,QAA+BA,kBAC3D5pC,EAAS,EAAQ,QACjB9L,EAA2B,EAAQ,QACnCu1C,EAAiB,EAAQ,QACzBpB,EAAY,EAAQ,QAEpB4B,EAAa,WAAc,OAAOhzC,MAEtC9C,EAAOC,QAAU,SAAUg2C,EAAqBD,EAAMpxC,GACpD,IAAIT,EAAgB6xC,EAAO,YAI3B,OAHAC,EAAoBzzC,UAAYqJ,EAAO4pC,EAAmB,CAAE7wC,KAAM7E,EAAyB,EAAG6E,KAC9F0wC,EAAeW,EAAqB9xC,GAAe,GAAO,GAC1D+vC,EAAU/vC,GAAiB2xC,EACpBG,I,qBCdT,IAAI0J,EAAa,EAAQ,QACrBz7C,EAAkB,EAAQ,QAE1BC,EAAgBD,EAAgB,eAEhC07C,EAAuE,aAAnDD,EAAW,WAAc,OAAO77C,UAArB,IAG/B+7C,EAAS,SAAUz8C,EAAIjD,GACzB,IACE,OAAOiD,EAAGjD,GACV,MAAOoB,MAIXvB,EAAOC,QAAU,SAAUmD,GACzB,IAAI/B,EAAGmT,EAAK7O,EACZ,YAActC,IAAPD,EAAmB,YAAqB,OAAPA,EAAc,OAEM,iBAAhDoR,EAAMqrC,EAAOx+C,EAAIF,OAAOiC,GAAKe,IAA8BqQ,EAEnEorC,EAAoBD,EAAWt+C,GAEH,WAA3BsE,EAASg6C,EAAWt+C,KAAsC,mBAAZA,EAAEy+C,OAAuB,YAAcn6C,I,qBCvB5F,IAAI3D,EAAQ,EAAQ,QAEpBhC,EAAOC,SAAW+B,GAAM,WACtB,SAASu2C,KAET,OADAA,EAAE/1C,UAAUqyB,YAAc,KACnB1zB,OAAOi0C,eAAe,IAAImD,KAASA,EAAE/1C,c,qBCL9C,IAAIjC,EAAS,EAAQ,QACjBC,EAAM,EAAQ,QAEdyO,EAAO1O,EAAO,QAElBP,EAAOC,QAAU,SAAUE,GACzB,OAAO8O,EAAK9O,KAAS8O,EAAK9O,GAAOK,EAAIL,M,qBCNvC,IAAIoD,EAAY,EAAQ,QAGxBvD,EAAOC,QAAU,SAAUuD,EAAIC,EAAMC,GAEnC,GADAH,EAAUC,QACGH,IAATI,EAAoB,OAAOD,EAC/B,OAAQE,GACN,KAAK,EAAG,OAAO,WACb,OAAOF,EAAGhC,KAAKiC,IAEjB,KAAK,EAAG,OAAO,SAAUrB,GACvB,OAAOoB,EAAGhC,KAAKiC,EAAMrB,IAEvB,KAAK,EAAG,OAAO,SAAUA,EAAGuB,GAC1B,OAAOH,EAAGhC,KAAKiC,EAAMrB,EAAGuB,IAE1B,KAAK,EAAG,OAAO,SAAUvB,EAAGuB,EAAGC,GAC7B,OAAOJ,EAAGhC,KAAKiC,EAAMrB,EAAGuB,EAAGC,IAG/B,OAAO,WACL,OAAOJ,EAAGK,MAAMJ,EAAMK,c,qBCrB1B7D,EAAQI,EAAI,EAAQ,S,mBCApB,IAAIiE,EAAW,GAAGA,SAElBtE,EAAOC,QAAU,SAAUmD,GACzB,OAAOkB,EAAS9C,KAAK4B,GAAIgK,MAAM,GAAI,K,qBCFrC,IAAIssC,EAAgB,EAAQ,QACxBV,EAAyB,EAAQ,QAErCh5C,EAAOC,QAAU,SAAUmD,GACzB,OAAOs2C,EAAcV,EAAuB51C,M,kCCJ9C,IAAI8xC,EAAI,EAAQ,QACZlzC,EAAQ,EAAQ,QAChBqJ,EAAU,EAAQ,QAClBb,EAAW,EAAQ,QACnB4D,EAAW,EAAQ,QACnB/I,EAAW,EAAQ,QACnBqrL,EAAiB,EAAQ,QACzBtE,EAAqB,EAAQ,QAC7BuE,EAA+B,EAAQ,QACvCzsL,EAAkB,EAAQ,QAE1B0sL,EAAuB1sL,EAAgB,sBACvC2sL,EAAmB,iBACnBC,EAAiC,iCAEjCC,GAAgC/uL,GAAM,WACxC,IAAI4+C,EAAQ,GAEZ,OADAA,EAAMgwI,IAAwB,EACvBhwI,EAAM9+C,SAAS,KAAO8+C,KAG3BowI,EAAkBL,EAA6B,UAE/CM,EAAqB,SAAU5vL,GACjC,IAAKmJ,EAASnJ,GAAI,OAAO,EACzB,IAAI6vL,EAAa7vL,EAAEuvL,GACnB,YAAsBvtL,IAAf6tL,IAA6BA,EAAa7lL,EAAQhK,IAGvD4F,GAAU8pL,IAAiCC,EAK/C97I,EAAE,CAAEhuC,OAAQ,QAAS4vC,OAAO,EAAMnvC,OAAQV,GAAU,CAClDnF,OAAQ,SAAgB+/B,GACtB,IAGI71B,EAAGu/G,EAAG7nH,EAAQkT,EAAKu6K,EAHnB9vL,EAAI+M,EAAStL,MACb+2C,EAAIuyI,EAAmB/qL,EAAG,GAC1B0J,EAAI,EAER,IAAKiB,GAAK,EAAGtI,EAASI,UAAUJ,OAAQsI,EAAItI,EAAQsI,IAElD,GADAmlL,GAAW,IAAPnlL,EAAW3K,EAAIyC,UAAUkI,GACzBilL,EAAmBE,GAAI,CAEzB,GADAv6K,EAAMvR,EAAS8rL,EAAEztL,QACbqH,EAAI6L,EAAMi6K,EAAkB,MAAMvtL,UAAUwtL,GAChD,IAAKvlE,EAAI,EAAGA,EAAI30G,EAAK20G,IAAKxgH,IAASwgH,KAAK4lE,GAAGT,EAAe72I,EAAG9uC,EAAGomL,EAAE5lE,QAC7D,CACL,GAAIxgH,GAAK8lL,EAAkB,MAAMvtL,UAAUwtL,GAC3CJ,EAAe72I,EAAG9uC,IAAKomL,GAI3B,OADAt3I,EAAEn2C,OAASqH,EACJ8uC,M,qBCrDX,IAAIv5C,EAAS,EAAQ,QAErBN,EAAOC,QAAUK,EAAOgd","file":"js/chunk-vendors.faa30563.js","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-using-statement\ndefineWellKnownSymbol('asyncDispose');\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var redefine = require('../internals/redefine');\n\nvar DatePrototype = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar nativeDateToString = DatePrototype[TO_STRING];\nvar getTime = DatePrototype.getTime;\n\n// `Date.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-date.prototype.tostring\nif (new Date(NaN) + '' != INVALID_DATE) {\n  redefine(DatePrototype, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? nativeDateToString.call(this) : INVALID_DATE;\n  });\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it, Constructor, name) {\n  if (!(it instanceof Constructor)) {\n    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');\n  } return it;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar classof = require('../internals/classof');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\n// `Object.prototype.toString` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.tostring\nmodule.exports = String(test) !== '[object z]' ? function toString() {\n  return '[object ' + classof(this) + ']';\n} : test.toString;\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","require('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.json.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR] = function () {\n    return this;\n  };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nmodule.exports = function (exec, SKIP_CLOSING) {\n  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var anObject = require('../internals/an-object');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/bind-context');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {\n  var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);\n  var iterator, iterFn, index, length, result, next, step;\n\n  if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = toLength(iterable.length); length > index; index++) {\n        result = AS_ENTRIES\n          ? boundFunction(anObject(step = iterable[index])[0], step[1])\n          : boundFunction(iterable[index]);\n        if (result && result instanceof Result) return result;\n      } return new Result(false);\n    }\n    iterator = iterFn.call(iterable);\n  }\n\n  next = iterator.next;\n  while (!(step = next.call(iterator)).done) {\n    result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);\n    if (typeof result == 'object' && result && result instanceof Result) return result;\n  } return new Result(false);\n};\n\niterate.stop = function (result) {\n  return new Result(true, result);\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","require('../../modules/es.symbol.iterator');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/web.dom-collections.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/wrapped-well-known-symbol');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar definePropertyModule = require('../internals/object-define-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n  var defineProperty = definePropertyModule.f;\n\n  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n    defineProperty(Constructor, SPECIES, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.split` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","var defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar METHOD_REQUIRED = toString !== ({}).toString;\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!has(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && METHOD_REQUIRED) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/*!\n * Vue.js v2.6.10\n * (c) 2014-2019 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Techinically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    return res && (\n      res.length === 0 ||\n      (res.length === 1 && res[0].isComment) // #9658\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a speical value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack becaues all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.10';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecesarry `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('../internals/global');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\nvar bind = require('../internals/bind-context');\nvar html = require('../internals/html');\nvar createElement = require('../internals/document-create-element');\nvar userAgent = require('../internals/user-agent');\n\nvar location = global.location;\nvar set = global.setImmediate;\nvar clear = global.clearImmediate;\nvar process = global.process;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function (id) {\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar listener = function (event) {\n  run(event.data);\n};\n\nvar post = function (id) {\n  // old engines have not location.origin\n  global.postMessage(id + '', location.protocol + '//' + location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set || !clear) {\n  set = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (classof(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = bind(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {\n    defer = post;\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: set,\n  clear: clear\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","var classof = require('../internals/classof');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","module.exports = require('../../es/symbol/iterator');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it) && it !== null) {\n    throw TypeError(\"Can't set \" + String(it) + ' as a prototype');\n  } return it;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","module.exports = {};\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = require('../internals/global');\n","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.github.io/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar create = require('../internals/object-create');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar UNSCOPABLES = wellKnownSymbol('unscopables');\nvar ArrayPrototype = Array.prototype;\n\n// Array.prototype[@@unscopables]\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n  createNonEnumerableProperty(ArrayPrototype, UNSCOPABLES, create(null));\n}\n\n// add a key to Array.prototype[@@unscopables]\nmodule.exports = function (key) {\n  ArrayPrototype[UNSCOPABLES][key] = true;\n};\n","var global = require('../internals/global');\n\nmodule.exports = function (a, b) {\n  var console = global.console;\n  if (console && console.error) {\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  }\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Chrome\\/(\\d+)/);\n  if (match) version = match[1];\n}\n\nmodule.exports = version && +version;\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","require('./es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && !CollectionPrototype[TO_STRING_TAG]) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","var global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.3.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var global = require('../internals/global');\nvar userAgent = require('../internals/user-agent');\n\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  version = match[0] + match[1];\n} else if (userAgent) {\n  match = userAgent.match(/Chrome\\/(\\d+)/);\n  if (match) version = match[1];\n}\n\nmodule.exports = version && +version;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar toObject = require('../internals/to-object');\nvar IndexedObject = require('../internals/indexed-object');\n\nvar nativeAssign = Object.assign;\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !nativeAssign || fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var symbol = Symbol();\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject(arguments[index++]);\n    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS || propertyIsEnumerable.call(S, key)) T[key] = S[key];\n    }\n  } return T;\n} : nativeAssign;\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.github.io/ecma262/#sec-isarray\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","module.exports = require(\"core-js-pure/features/symbol/iterator\");","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","module.exports = {};\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar nativeFunctionToString = require('../internals/function-to-string');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(nativeFunctionToString).split('toString');\n\nshared('inspectSource', function (it) {\n  return nativeFunctionToString.call(it);\n});\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);\n});\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","module.exports = true;\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-using-statement\ndefineWellKnownSymbol('dispose');\n","exports.f = Object.getOwnPropertySymbols;\n","module.exports = {};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","module.exports = {};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `ToObject` abstract operation\n// https://tc39.github.io/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return Object(requireObjectCoercible(argument));\n};\n","var anObject = require('../internals/an-object');\nvar defineProperties = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar PROTOTYPE = 'prototype';\nvar Empty = function () { /* empty */ };\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var length = enumBugKeys.length;\n  var lt = '<';\n  var script = 'script';\n  var gt = '>';\n  var js = 'java' + script + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  iframe.src = String(js);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];\n  return createDict();\n};\n\n// `Object.create` method\n// https://tc39.github.io/ecma262/#sec-object.create\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : defineProperties(result, Properties);\n};\n\nhiddenKeys[IE_PROTO] = true;\n","'use strict';\nvar $ = require('../internals/export');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {\n          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    INCORRECT_VALUES_NAME = true;\n    defaultIterator = function values() { return nativeIterator.call(this); };\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);\n  }\n  Iterators[NAME] = defaultIterator;\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        redefine(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  return methods;\n};\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","var setToStringTag = require('../internals/set-to-string-tag');\n\n// Math[@@toStringTag] property\n// https://tc39.github.io/ecma262/#sec-math-@@tostringtag\nsetToStringTag(Math, 'Math', true);\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/wrapped-well-known-symbol');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar JSON = global.JSON;\nvar nativeJSONStringify = JSON && JSON.stringify;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = NATIVE_SYMBOL && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nJSON && $({ target: 'JSON', stat: true, forced: !NATIVE_SYMBOL || fails(function () {\n  var symbol = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  return nativeJSONStringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || nativeJSONStringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || nativeJSONStringify(Object(symbol)) != '{}';\n}) }, {\n  stringify: function stringify(it) {\n    var args = [it];\n    var index = 1;\n    var replacer, $replacer;\n    while (arguments.length > index) args.push(arguments[index++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return nativeJSONStringify.apply(JSON, args);\n  }\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var global = require('../internals/global');\nvar nativeFunctionToString = require('../internals/function-to-string');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));\n","// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\ndefineWellKnownSymbol('replaceAll');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.search` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.species` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","var anObject = require('../internals/an-object');\n\n// call something on iterator step with safe closing on error\nmodule.exports = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (error) {\n    var returnMethod = iterator['return'];\n    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));\n    throw error;\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/wrapped-well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","exports.f = Object.getOwnPropertySymbols;\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof NativeConstructor) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return NativeConstructor.apply(this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || (path[TARGET] = {});\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && has(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty === typeof sourceProperty) continue;\n\n    // bind timers to global for call from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changs in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && typeof sourceProperty == 'function') resultProperty = bind(Function.call, sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    target[key] = resultProperty;\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!has(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      path[VIRTUAL_PROTOTYPE][key] = sourceProperty;\n      // export real prototype methods\n      if (options.real && targetPrototype && !targetPrototype[key]) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","var shared = require('../internals/shared');\n\nmodule.exports = shared('native-function-to-string', Function.toString);\n","module.exports = require(\"core-js-pure/features/symbol\");","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar classof = require('../internals/classof-raw');\nvar macrotask = require('../internals/task').set;\nvar userAgent = require('../internals/user-agent');\n\nvar MutationObserver = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar IS_NODE = classof(process) == 'process';\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');\nvar queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n\nvar flush, head, last, notify, toggle, node, promise, then;\n\n// modern engines have queueMicrotask method\nif (!queueMicrotask) {\n  flush = function () {\n    var parent, fn;\n    if (IS_NODE && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (error) {\n        if (head) notify();\n        else last = undefined;\n        throw error;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (IS_NODE) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {\n    toggle = true;\n    node = document.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise = Promise.resolve(undefined);\n    then = promise.then;\n    notify = function () {\n      then.call(promise, flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n}\n\nmodule.exports = queueMicrotask || function (fn) {\n  var task = { fn: fn, next: undefined };\n  if (last) last.next = task;\n  if (!head) {\n    head = task;\n    notify();\n  } last = task;\n};\n","module.exports = require('../../es/symbol');\n\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.dispose');\nrequire('../../modules/esnext.symbol.observable');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nvar Symbol = global.Symbol;\nvar store = shared('wks');\n\nmodule.exports = function (name) {\n  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]\n    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n","'use strict';\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\nvar returnThis = function () { return this; };\n\n// `%IteratorPrototype%` object\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nif (IteratorPrototype == undefined) IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nif (!IS_PURE && !has(IteratorPrototype, ITERATOR)) {\n  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperties\nmodule.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);\n  return O;\n};\n","module.exports = false;\n","module.exports = function () { /* empty */ };\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","var $ = require('../internals/export');\nvar assign = require('../internals/object-assign');\n\n// `Object.assign` method\n// https://tc39.github.io/ecma262/#sec-object.assign\n$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {\n  assign: assign\n});\n","(function (root, factory) {\nif (typeof define === 'function' && define.amd) {\ndefine([], factory);\n} else if (typeof module === 'object' && module.exports) {\nmodule.exports = factory();\n} else {\nroot.mxgraph = factory();\n}\n}(this, function () {\nreturn function (opts) {\nfor (var name in opts) { this[name] = opts[name]; }\nvar __mxOutput = {};\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\nvar mxClient =\n{\n\t/**\n\t * Class: mxClient\n\t *\n\t * Bootstrapping mechanism for the mxGraph thin client. The production version\n\t * of this file contains all code required to run the mxGraph thin client, as\n\t * well as global constants to identify the browser and operating system in\n\t * use. You may have to load chrome://global/content/contentAreaUtils.js in\n\t * your page to disable certain security restrictions in Mozilla.\n\t * \n\t * Variable: VERSION\n\t *\n\t * Contains the current version of the mxGraph library. The strings that\n\t * communicate versions of mxGraph use the following format.\n\t * \n\t * versionMajor.versionMinor.buildNumber.revisionNumber\n\t * \n\t * Current version is 4.0.5.\n\t */\n\tVERSION: '4.0.5',\n\n\t/**\n\t * Variable: IS_IE\n\t *\n\t * True if the current browser is Internet Explorer 10 or below. Use <mxClient.IS_IE11>\n\t * to detect IE 11.\n\t */\n\tIS_IE: navigator.userAgent.indexOf('MSIE') >= 0,\n\n\t/**\n\t * Variable: IS_IE6\n\t *\n\t * True if the current browser is Internet Explorer 6.x.\n\t */\n\tIS_IE6: navigator.userAgent.indexOf('MSIE 6') >= 0,\n\n\t/**\n\t * Variable: IS_IE11\n\t *\n\t * True if the current browser is Internet Explorer 11.x.\n\t */\n\tIS_IE11: !!navigator.userAgent.match(/Trident\\/7\\./),\n\n\t/**\n\t * Variable: IS_EDGE\n\t *\n\t * True if the current browser is Microsoft Edge.\n\t */\n\tIS_EDGE: !!navigator.userAgent.match(/Edge\\//),\n\n\t/**\n\t * Variable: IS_QUIRKS\n\t *\n\t * True if the current browser is Internet Explorer and it is in quirks mode.\n\t */\n\tIS_QUIRKS: navigator.userAgent.indexOf('MSIE') >= 0 && (document.documentMode == null || document.documentMode == 5),\n\n\t/**\n\t * Variable: IS_EM\n\t * \n\t * True if the browser is IE11 in enterprise mode (IE8 standards mode).\n\t */\n\tIS_EM: 'spellcheck' in document.createElement('textarea') && document.documentMode == 8,\n\n\t/**\n\t * Variable: VML_PREFIX\n\t * \n\t * Prefix for VML namespace in node names. Default is 'v'.\n\t */\n\tVML_PREFIX: 'v',\n\n\t/**\n\t * Variable: OFFICE_PREFIX\n\t * \n\t * Prefix for VML office namespace in node names. Default is 'o'.\n\t */\n\tOFFICE_PREFIX: 'o',\n\n\t/**\n\t * Variable: IS_NS\n\t *\n\t * True if the current browser is Netscape (including Firefox).\n\t */\n  \tIS_NS: navigator.userAgent.indexOf('Mozilla/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('MSIE') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\n\t/**\n\t * Variable: IS_OP\n\t *\n\t * True if the current browser is Opera.\n\t */\n  \tIS_OP: navigator.userAgent.indexOf('Opera/') >= 0 ||\n  \t\tnavigator.userAgent.indexOf('OPR/') >= 0,\n\n\t/**\n\t * Variable: IS_OT\n\t *\n\t * True if -o-transform is available as a CSS style, ie for Opera browsers\n\t * based on a Presto engine with version 2.5 or later.\n\t */\n  \tIS_OT: navigator.userAgent.indexOf('Presto/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.4.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.3.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.2.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/2.0.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Presto/1.') < 0,\n  \t\n\t/**\n\t * Variable: IS_SF\n\t *\n\t * True if the current browser is Safari.\n\t */\n  \tIS_SF: navigator.userAgent.indexOf('AppleWebKit/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Chrome/') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Edge/') < 0,\n  \t\n\t/**\n\t * Variable: IS_IOS\n\t * \n\t * Returns true if the user agent is an iPad, iPhone or iPod.\n\t */\n  \tIS_IOS: (navigator.userAgent.match(/(iPad|iPhone|iPod)/g) ? true : false),\n  \t\t\n\t/**\n\t * Variable: IS_GC\n\t *\n\t * True if the current browser is Google Chrome.\n\t */\n  \tIS_GC: navigator.userAgent.indexOf('Chrome/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Edge/') < 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEAPP\n\t *\n\t * True if the this is running inside a Chrome App.\n\t */\n  \tIS_CHROMEAPP: window.chrome != null && chrome.app != null && chrome.app.runtime != null,\n\n\t/**\n\t * Variable: IS_FF\n\t *\n\t * True if the current browser is Firefox.\n\t */\n  \tIS_FF: navigator.userAgent.indexOf('Firefox/') >= 0,\n  \t\n\t/**\n\t * Variable: IS_MT\n\t *\n\t * True if -moz-transform is available as a CSS style. This is the case\n\t * for all Firefox-based browsers newer than or equal 3, such as Camino,\n\t * Iceweasel, Seamonkey and Iceape.\n\t */\n  \tIS_MT: (navigator.userAgent.indexOf('Firefox/') >= 0 &&\n\t\tnavigator.userAgent.indexOf('Firefox/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Firefox/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceweasel/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/1.') < 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceweasel/2.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('SeaMonkey/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('SeaMonkey/1.') < 0) ||\n  \t\t(navigator.userAgent.indexOf('Iceape/') >= 0 &&\n  \t\tnavigator.userAgent.indexOf('Iceape/1.') < 0),\n\n\t/**\n\t * Variable: IS_VML\n\t *\n\t * True if the browser supports VML.\n\t */\n  \tIS_VML: navigator.appName.toUpperCase() == 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: IS_SVG\n\t *\n\t * True if the browser supports SVG.\n\t */\n  \tIS_SVG: navigator.appName.toUpperCase() != 'MICROSOFT INTERNET EXPLORER',\n\n\t/**\n\t * Variable: NO_FO\n\t *\n\t * True if foreignObject support is not available. This is the case for\n\t * Opera, older SVG-based browsers and all versions of IE.\n\t */\n  \tNO_FO: !document.createElementNS || document.createElementNS('http://www.w3.org/2000/svg',\n  \t\t'foreignObject') != '[object SVGForeignObjectElement]' || navigator.userAgent.indexOf('Opera/') >= 0,\n\n\t/**\n\t * Variable: IS_WIN\n\t *\n\t * True if the client is a Windows.\n\t */\n  \tIS_WIN: navigator.appVersion.indexOf('Win') > 0,\n\n\t/**\n\t * Variable: IS_MAC\n\t *\n\t * True if the client is a Mac.\n\t */\n  \tIS_MAC: navigator.appVersion.indexOf('Mac') > 0,\n\t\n\t/**\n\t * Variable: IS_CHROMEOS\n\t *\n\t * True if the client is a Chrome OS.\n\t */\n  \tIS_CHROMEOS: /\\bCrOS\\b/.test(navigator.userAgent),\n\n\t/**\n\t * Variable: IS_TOUCH\n\t * \n\t * True if this device supports touchstart/-move/-end events (Apple iOS,\n\t * Android, Chromebook and Chrome Browser on touch-enabled devices).\n\t */\n  \tIS_TOUCH: 'ontouchstart' in document.documentElement,\n\n\t/**\n\t * Variable: IS_POINTER\n\t * \n\t * True if this device supports Microsoft pointer events (always false on Macs).\n\t */\n  \tIS_POINTER: window.PointerEvent != null && !(navigator.appVersion.indexOf('Mac') > 0),\n\n\t/**\n\t * Variable: IS_LOCAL\n\t *\n\t * True if the documents location does not start with http:// or https://.\n\t */\n  \tIS_LOCAL: document.location.href.indexOf('http://') < 0 &&\n  \t\t\t  document.location.href.indexOf('https://') < 0,\n\n\t/**\n\t * Variable: defaultBundles\n\t * \n\t * Contains the base names of the default bundles if mxLoadResources is false.\n\t */\n  \tdefaultBundles: [],\n\n\t/**\n\t * Function: isBrowserSupported\n\t *\n\t * Returns true if the current browser is supported, that is, if\n\t * <mxClient.IS_VML> or <mxClient.IS_SVG> is true.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * if (!mxClient.isBrowserSupported())\n\t * {\n\t *   mxUtils.error('Browser is not supported!', 200, false);\n\t * }\n\t * (end)\n\t */\n\tisBrowserSupported: function()\n\t{\n\t\treturn mxClient.IS_VML || mxClient.IS_SVG;\n\t},\n\n\t/**\n\t * Function: link\n\t *\n\t * Adds a link node to the head of the document. Use this\n\t * to add a stylesheet to the page as follows:\n\t *\n\t * (code)\n\t * mxClient.link('stylesheet', filename);\n\t * (end)\n\t *\n\t * where filename is the (relative) URL of the stylesheet. The charset\n\t * is hardcoded to ISO-8859-1 and the type is text/css.\n\t * \n\t * Parameters:\n\t * \n\t * rel - String that represents the rel attribute of the link node.\n\t * href - String that represents the href attribute of the link node.\n\t * doc - Optional parent document of the link node.\n\t * id - unique id for the link element to check if it already exists\n\t */\n\tlink: function(rel, href, doc, id)\n\t{\n\t\tdoc = doc || document;\n\n\t\t// Workaround for Operation Aborted in IE6 if base tag is used in head\n\t\tif (mxClient.IS_IE6)\n\t\t{\n\t\t\tdoc.write('<link rel=\"' + rel + '\" href=\"' + href + '\" charset=\"UTF-8\" type=\"text/css\"/>');\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvar link = doc.createElement('link');\n\t\t\t\n\t\t\tlink.setAttribute('rel', rel);\n\t\t\tlink.setAttribute('href', href);\n\t\t\tlink.setAttribute('charset', 'UTF-8');\n\t\t\tlink.setAttribute('type', 'text/css');\n\t\t\t\n\t\t\tif (id)\n\t\t\t{\n\t\t\t\tlink.setAttribute('id', id);\n\t\t\t}\n\t\t\t\n\t\t\tvar head = doc.getElementsByTagName('head')[0];\n\t   \t\thead.appendChild(link);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: loadResources\n\t * \n\t * Helper method to load the default bundles if mxLoadResources is false.\n\t * \n\t * Parameters:\n\t * \n\t * fn - Function to call after all resources have been loaded.\n\t * lan - Optional string to pass to <mxResources.add>.\n\t */\n\tloadResources: function(fn, lan)\n\t{\n\t\tvar pending = mxClient.defaultBundles.length;\n\t\t\n\t\tfunction callback()\n\t\t{\n\t\t\tif (--pending == 0)\n\t\t\t{\n\t\t\t\tfn();\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < mxClient.defaultBundles.length; i++)\n\t\t{\n\t\t\tmxResources.add(mxClient.defaultBundles[i], lan, callback);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: include\n\t *\n\t * Dynamically adds a script node to the document header.\n\t * \n\t * In production environments, the includes are resolved in the mxClient.js\n\t * file to reduce the number of requests required for client startup. This\n\t * function should only be used in development environments, but not in\n\t * production systems.\n\t */\n\tinclude: function(src)\n\t{\n\t\tdocument.write('<script src=\"'+src+'\"></script>');\n\t}\n};\n\n/**\n * Variable: mxLoadResources\n * \n * Optional global config variable to toggle loading of the two resource files\n * in <mxGraph> and <mxEditor>. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient. If this is false, you can use <mxClient.loadResources>\n * with its callback to load the default bundles asynchronously.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadResources) == 'undefined')\n{\n\tmxLoadResources = true;\n}\n\n/**\n * Variable: mxForceIncludes\n * \n * Optional global config variable to force loading the JavaScript files in\n * development mode. Default is undefined. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadResources = true;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxForceIncludes) == 'undefined')\n{\n\tmxForceIncludes = false;\n}\n\n/**\n * Variable: mxResourceExtension\n * \n * Optional global config variable to specify the extension of resource files.\n * Default is true. NOTE: This is a global variable, not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxResourceExtension = '.txt';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxResourceExtension) == 'undefined')\n{\n\tmxResourceExtension = '.txt';\n}\n\n/**\n * Variable: mxLoadStylesheets\n * \n * Optional global config variable to toggle loading of the CSS files when\n * the library is initialized. Default is true. NOTE: This is a global variable,\n * not a variable of mxClient.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tvar mxLoadStylesheets = false;\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxLoadStylesheets) == 'undefined')\n{\n\tmxLoadStylesheets = true;\n}\n\n/**\n * Variable: basePath\n *\n * Basepath for all URLs in the core without trailing slash. Default is '.'.\n * Set mxBasePath prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxBasePath = '/path/to/core/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxBasePath) != 'undefined' && mxBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxBasePath.substring(mxBasePath.length - 1) == '/')\n\t{\n\t\tmxBasePath = mxBasePath.substring(0, mxBasePath.length - 1);\n\t}\n\n\tmxClient.basePath = mxBasePath;\n}\nelse\n{\n\tmxClient.basePath = '.';\n}\n\n/**\n * Variable: imageBasePath\n *\n * Basepath for all images URLs in the core without trailing slash. Default is\n * <mxClient.basePath> + '/images'. Set mxImageBasePath prior to loading the\n * mxClient library as follows to override this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxImageBasePath = '/path/to/image/directory';\n * </script>\n * <script type=\"text/javascript\" src=\"/path/to/core/directory/js/mxClient.js\"></script>\n * (end)\n * \n * When using a relative path, the path is relative to the URL of the page that\n * contains the assignment. Trailing slashes are automatically removed.\n */\nif (typeof(mxImageBasePath) != 'undefined' && mxImageBasePath.length > 0)\n{\n\t// Adds a trailing slash if required\n\tif (mxImageBasePath.substring(mxImageBasePath.length - 1) == '/')\n\t{\n\t\tmxImageBasePath = mxImageBasePath.substring(0, mxImageBasePath.length - 1);\n\t}\n\n\tmxClient.imageBasePath = mxImageBasePath;\n}\nelse\n{\n\tmxClient.imageBasePath = mxClient.basePath + '/images';\t\n}\n\n/**\n * Variable: language\n *\n * Defines the language of the client, eg. en for english, de for german etc.\n * The special value 'none' will disable all built-in internationalization and\n * resource loading. See <mxResources.getSpecialBundle> for handling identifiers\n * with and without a dash.\n * \n * Set mxLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguage = 'en';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * If internationalization is disabled, then the following variables should be\n * overridden to reflect the current language of the system. These variables are\n * cleared when i18n is disabled.\n * <mxEditor.askZoomResource>, <mxEditor.lastSavedResource>,\n * <mxEditor.currentFileResource>, <mxEditor.propertiesResource>,\n * <mxEditor.tasksResource>, <mxEditor.helpResource>, <mxEditor.outlineResource>,\n * <mxElbowEdgeHandler.doubleClickOrientationResource>, <mxUtils.errorResource>,\n * <mxUtils.closeResource>, <mxGraphSelectionModel.doneResource>,\n * <mxGraphSelectionModel.updatingSelectionResource>, <mxGraphView.doneResource>,\n * <mxGraphView.updatingDocumentResource>, <mxCellRenderer.collapseExpandResource>,\n * <mxGraph.containsValidationErrorsResource> and\n * <mxGraph.alreadyConnectedResource>.\n */\nif (typeof(mxLanguage) != 'undefined' && mxLanguage != null)\n{\n\tmxClient.language = mxLanguage;\n}\nelse\n{\n\tmxClient.language = (mxClient.IS_IE) ? navigator.userLanguage : navigator.language;\n}\n\n/**\n * Variable: defaultLanguage\n * \n * Defines the default language which is used in the common resource files. Any\n * resources for this language will only load the common resource file, but not\n * the language-specific resource file. Default is 'en'.\n * \n * Set mxDefaultLanguage prior to loading the mxClient library as follows to override\n * this setting:\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxDefaultLanguage = 'de';\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n */\nif (typeof(mxDefaultLanguage) != 'undefined' && mxDefaultLanguage != null)\n{\n\tmxClient.defaultLanguage = mxDefaultLanguage;\n}\nelse\n{\n\tmxClient.defaultLanguage = 'en';\n}\n\n// Adds all required stylesheets and namespaces\nif (mxLoadStylesheets)\n{\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css');\n}\n\n/**\n * Variable: languages\n *\n * Defines the optional array of all supported language extensions. The default\n * language does not have to be part of this list. See\n * <mxResources.isLanguageSupported>.\n *\n * (code)\n * <script type=\"text/javascript\">\n * \t\tmxLanguages = ['de', 'it', 'fr'];\n * </script>\n * <script type=\"text/javascript\" src=\"js/mxClient.js\"></script>\n * (end)\n * \n * This is used to avoid unnecessary requests to language files, ie. if a 404\n * will be returned.\n */\nif (typeof(mxLanguages) != 'undefined' && mxLanguages != null)\n{\n\tmxClient.languages = mxLanguages;\n}\n\n// Adds required namespaces, stylesheets and memory handling for older IE browsers\nif (mxClient.IS_VML)\n{\n\tif (mxClient.IS_SVG)\n\t{\n\t\tmxClient.IS_VML = false;\n\t}\n\telse\n\t{\n\t\t// Enables support for IE8 standards mode. Note that this requires all attributes for VML\n\t\t// elements to be set using direct notation, ie. node.attr = value. The use of setAttribute\n\t\t// is not possible.\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml', '#default#VML');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office', '#default#VML');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.namespaces.add(mxClient.VML_PREFIX, 'urn:schemas-microsoft-com:vml');\n\t\t\tdocument.namespaces.add(mxClient.OFFICE_PREFIX, 'urn:schemas-microsoft-com:office:office');\n\t\t}\n\n\t\t// Workaround for limited number of stylesheets in IE (does not work in standards mode)\n\t\tif (mxClient.IS_QUIRKS && document.styleSheets.length >= 30)\n\t\t{\n\t\t\t(function()\n\t\t\t{\n\t\t\t\tvar node = document.createElement('style');\n\t\t\t\tnode.type = 'text/css';\n\t\t\t\tnode.styleSheet.cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t        \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t        document.getElementsByTagName('head')[0].appendChild(node);\n\t\t\t})();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{behavior:url(#default#VML)}' +\n\t\t    \tmxClient.OFFICE_PREFIX + '\\\\:*{behavior:url(#default#VML)}';\n\t\t}\n\t    \n\t    if (mxLoadStylesheets)\n\t    {\n\t    \tmxClient.link('stylesheet', mxClient.basePath + '/css/explorer.css');\n\t    }\n\t}\n}\n\n// PREPROCESSOR-REMOVE-START\n// If script is loaded via CommonJS, do not write <script> tags to the page\n// for dependencies. These are already included in the build.\nif (mxForceIncludes || !(typeof module === 'object' && module.exports != null))\n{\n// PREPROCESSOR-REMOVE-END\n\tmxClient.include(mxClient.basePath+'/js/util/mxLog.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxObjectIdentity.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDictionary.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxResources.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPoint.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxRectangle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEffects.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUtils.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxConstants.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventObject.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMouseEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEventSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxEvent.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlRequest.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxClipboard.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxWindow.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxForm.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImage.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDivResizer.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxDragSource.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoableEdit.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUndoManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxUrlConverter.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPanningManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAutoSaveManager.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAnimation.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxMorphing.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageBundle.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxImageExport.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxAbstractCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxXmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxSvgCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxVmlCanvas2D.js');\n\tmxClient.include(mxClient.basePath+'/js/util/mxGuide.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencil.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxStencilRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxActor.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCloud.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRectangleShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxDoubleEllipse.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxRhombus.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxPolyline.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrow.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxArrowConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxText.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxTriangle.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxHexagon.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLine.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxImageShape.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxLabel.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxCylinder.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxConnector.js');\n\tmxClient.include(mxClient.basePath+'/js/shape/mxSwimlane.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxGraphLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxStackLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxPartitionLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompactTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxRadialTreeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxFastOrganicLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCircleLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxParallelEdgeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxCompositeLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/mxEdgeLabelLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphAbstractHierarchyCell.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyNode.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyEdge.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxGraphHierarchyModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/model/mxSwimlaneModel.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxHierarchicalLayoutStage.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMedianHybridCrossingReduction.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxMinimumCycleRemover.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxCoordinateAssignment.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/stage/mxSwimlaneOrdering.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxHierarchicalLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/layout/hierarchical/mxSwimlaneLayout.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGraphModel.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCell.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxGeometry.js');\n\tmxClient.include(mxClient.basePath+'/js/model/mxCellPath.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPerimeter.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxPrintPreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStylesheet.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellState.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphSelectionModel.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellRenderer.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxEdgeStyle.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxStyleRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraphView.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxGraph.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellOverlay.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxOutline.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxMultiplicity.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxLayoutManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxSwimlaneManager.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxTemporaryCellStates.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxCellStatePreview.js');\n\tmxClient.include(mxClient.basePath+'/js/view/mxConnectionConstraint.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxGraphHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPanningHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxPopupMenuHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellMarker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxSelectionCellsHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConnectionHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxConstraintHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxRubberband.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxHandle.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxVertexHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxElbowEdgeHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxEdgeSegmentHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxTooltipHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellTracker.js');\n\tmxClient.include(mxClient.basePath+'/js/handler/mxCellHighlight.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultKeyHandler.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultPopupMenu.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxDefaultToolbar.js');\n\tmxClient.include(mxClient.basePath+'/js/editor/mxEditor.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodecRegistry.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxObjectCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxCellCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxModelCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxRootChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxChildChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxTerminalChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGenericChangeCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxGraphViewCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxStylesheetCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultKeyHandlerCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultToolbarCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxDefaultPopupMenuCodec.js');\n\tmxClient.include(mxClient.basePath+'/js/io/mxEditorCodec.js');\n// PREPROCESSOR-REMOVE-START\n}\n// PREPROCESSOR-REMOVE-END\n\n__mxOutput.mxClient = typeof mxClient !== 'undefined' ? mxClient : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxLog =\n{\n\t/**\n\t * Class: mxLog\n\t * \n\t * A singleton class that implements a simple console.\n\t * \n\t * Variable: consoleName\n\t * \n\t * Specifies the name of the console window. Default is 'Console'.\n\t */\n\tconsoleName: 'Console',\n\t\n\t/**\n\t * Variable: TRACE\n\t * \n\t * Specified if the output for <enter> and <leave> should be visible in the\n\t * console. Default is false.\n\t */\n\tTRACE: false,\n\n\t/**\n\t * Variable: DEBUG\n\t * \n\t * Specifies if the output for <debug> should be visible in the console.\n\t * Default is true.\n\t */\n\tDEBUG: true,\n\n\t/**\n\t * Variable: WARN\n\t * \n\t * Specifies if the output for <warn> should be visible in the console.\n\t * Default is true.\n\t */\n\tWARN: true,\n\n\t/**\n\t * Variable: buffer\n\t * \n\t * Buffer for pre-initialized content.\n\t */\n\tbuffer: '',\n\t\n\t/**\n\t * Function: init\n\t *\n\t * Initializes the DOM node for the console. This requires document.body to\n\t * point to a non-null value. This is called from within <setVisible> if the\n\t * log has not yet been initialized.\n\t */\n\tinit: function()\n\t{\n\t\tif (mxLog.window == null && document.body != null)\n\t\t{\n\t\t\tvar title = mxLog.consoleName + ' - mxGraph ' + mxClient.VERSION;\n\n\t\t\t// Creates a table that maintains the layout\n\t\t\tvar table = document.createElement('table');\n\t\t\ttable.setAttribute('width', '100%');\n\t\t\ttable.setAttribute('height', '100%');\n\n\t\t\tvar tbody = document.createElement('tbody');\n\t\t\tvar tr = document.createElement('tr');\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t// Adds the actual console as a textarea\n\t\t\tmxLog.textarea = document.createElement('textarea');\n\t\t\tmxLog.textarea.setAttribute('wrap', 'off');\n\t\t\tmxLog.textarea.setAttribute('readOnly', 'true');\n\t\t\tmxLog.textarea.style.height = '100%';\n\t\t\tmxLog.textarea.style.resize = 'none';\n\t\t\tmxLog.textarea.value = mxLog.buffer;\n\n\t\t\t// Workaround for wrong width in standards mode\n\t\t\tif (mxClient.IS_NS && document.compatMode != 'BackCompat')\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '99%';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.width = '100%';\n\t\t\t}\n\t\t\t\n\t\t\ttd.appendChild(mxLog.textarea);\n\t\t\ttr.appendChild(td);\n\t\t\ttbody.appendChild(tr);\n\n\t\t\t// Creates the container div\n\t\t\ttr = document.createElement('tr');\n\t\t\tmxLog.td = document.createElement('td');\n\t\t\tmxLog.td.style.verticalAlign = 'top';\n\t\t\tmxLog.td.setAttribute('height', '30px');\n\t\t\t\n\t\t\ttr.appendChild(mxLog.td);\n\t\t\ttbody.appendChild(tr);\n\t\t\ttable.appendChild(tbody);\n\n\t\t\t// Adds various debugging buttons\n\t\t\tmxLog.addButton('Info', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.info();\n\t\t\t});\n\t\t\n\t\t\tmxLog.addButton('DOM', function (evt)\n\t\t\t{\n\t\t\t\tvar content = mxUtils.getInnerHtml(document.body);\n\t\t\t\tmxLog.debug(content);\n\t\t\t});\n\t\n\t\t\tmxLog.addButton('Trace', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.TRACE = !mxLog.TRACE;\n\t\t\t\t\n\t\t\t\tif (mxLog.TRACE)\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing enabled');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.debug('Tracing disabled');\n\t\t\t\t}\n\t\t\t});\t\n\n\t\t\tmxLog.addButton('Copy', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.copy(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\t\t\n\n\t\t\tmxLog.addButton('Show', function (evt)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tmxUtils.popup(mxLog.textarea.value);\n\t\t\t\t}\n\t\t\t\tcatch (err)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.alert(err);\n\t\t\t\t}\n\t\t\t});\t\n\t\t\t\n\t\t\tmxLog.addButton('Clear', function (evt)\n\t\t\t{\n\t\t\t\tmxLog.textarea.value = '';\n\t\t\t});\n\n\t\t\t// Cross-browser code to get window size\n\t\t\tvar h = 0;\n\t\t\tvar w = 0;\n\t\t\t\n\t\t\tif (typeof(window.innerWidth) === 'number')\n\t\t\t{\n\t\t\t\th = window.innerHeight;\n\t\t\t\tw = window.innerWidth;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\th = (document.documentElement.clientHeight || document.body.clientHeight);\n\t\t\t\tw = document.body.clientWidth;\n\t\t\t}\n\n\t\t\tmxLog.window = new mxWindow(title, table, Math.max(0, w - 320), Math.max(0, h - 210), 300, 160);\n\t\t\tmxLog.window.setMaximizable(true);\n\t\t\tmxLog.window.setScrollable(false);\n\t\t\tmxLog.window.setResizable(true);\n\t\t\tmxLog.window.setClosable(true);\n\t\t\tmxLog.window.destroyOnClose = false;\n\t\t\t\n\t\t\t// Workaround for ignored textarea height in various setups\n\t\t\tif (((mxClient.IS_NS || mxClient.IS_IE) && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_SF && document.compatMode != 'BackCompat') ||\n\t\t\t\tdocument.documentMode == 11)\n\t\t\t{\n\t\t\t\tvar elt = mxLog.window.getElement();\n\t\t\t\t\n\t\t\t\tvar resizeHandler = function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tmxLog.textarea.style.height = Math.max(0, elt.offsetHeight - 70) + 'px';\n\t\t\t\t}; \n\t\t\t\t\n\t\t\t\tmxLog.window.addListener(mxEvent.RESIZE_END, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.MAXIMIZE, resizeHandler);\n\t\t\t\tmxLog.window.addListener(mxEvent.NORMALIZE, resizeHandler);\n\n\t\t\t\tmxLog.textarea.style.height = '92px';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: info\n\t * \n\t * Writes the current navigator information to the console.\n\t */\n\tinfo: function()\n\t{\n\t\tmxLog.writeln(mxUtils.toString(navigator));\n\t},\n\t\t\t\n\t/**\n\t * Function: addButton\n\t * \n\t * Adds a button to the console using the given label and function.\n\t */\n\taddButton: function(lab, funct)\n\t{\n\t\tvar button = document.createElement('button');\n\t\tmxUtils.write(button, lab);\n\t\tmxEvent.addListener(button, 'click', funct);\n\t\tmxLog.td.appendChild(button);\n\t},\n\t\t\t\t\n\t/**\n\t * Function: isVisible\n\t * \n\t * Returns true if the console is visible.\n\t */\n\tisVisible: function()\n\t{\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\treturn mxLog.window.isVisible();\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\n\t/**\n\t * Function: show\n\t * \n\t * Shows the console.\n\t */\n\tshow: function()\n\t{\n\t\tmxLog.setVisible(true);\n\t},\n\n\t/**\n\t * Function: setVisible\n\t * \n\t * Shows or hides the console.\n\t */\n\tsetVisible: function(visible)\n\t{\n\t\tif (mxLog.window == null)\n\t\t{\n\t\t\tmxLog.init();\n\t\t}\n\n\t\tif (mxLog.window != null)\n\t\t{\n\t\t\tmxLog.window.setVisible(visible);\n\t\t}\n\t},\n\n\t/**\n\t * Function: enter\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and returns the current \n\t * time in milliseconds.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * var t0 = mxLog.enter('Hello');\n\t * // Do something\n\t * mxLog.leave('World!', t0);\n\t * (end)\n\t */\n\tenter: function(string)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tmxLog.writeln('Entering '+string);\n\t\t\t\n\t\t\treturn new Date().getTime();\n\t\t}\n\t},\n\n\t/**\n\t * Function: leave\n\t * \n\t * Writes the specified string to the console\n\t * if <TRACE> is true and computes the difference\n\t * between the current time and t0 in milliseconds.\n\t * See <enter> for an example.\n\t */\n\tleave: function(string, t0)\n\t{\n\t\tif (mxLog.TRACE)\n\t\t{\n\t\t\tvar dt = (t0 != 0) ? ' ('+(new Date().getTime() - t0)+' ms)' : '';\n\t\t\tmxLog.writeln('Leaving '+string+dt);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: debug\n\t * \n\t * Adds all arguments to the console if <DEBUG> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.debug('Hello, World!');\n\t * (end)\n\t */\n\tdebug: function()\n\t{\n\t\tif (mxLog.DEBUG)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: warn\n\t * \n\t * Adds all arguments to the console if <WARN> is enabled.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxLog.show();\n\t * mxLog.warn('Hello, World!');\n\t * (end)\n\t */\n\twarn: function()\n\t{\n\t\tif (mxLog.WARN)\n\t\t{\n\t\t\tmxLog.writeln.apply(this, arguments);\n\t\t}\n\t},\n\n\t/**\n\t * Function: write\n\t * \n\t * Adds the specified strings to the console.\n\t */\n\twrite: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (mxLog.textarea != null)\n\t\t{\n\t\t\tmxLog.textarea.value = mxLog.textarea.value + string;\n\n\t\t\t// Workaround for no update in Presto 2.5.22 (Opera 10.5)\n\t\t\tif (navigator.userAgent.indexOf('Presto/2.5') >= 0)\n\t\t\t{\n\t\t\t\tmxLog.textarea.style.visibility = 'hidden';\n\t\t\t\tmxLog.textarea.style.visibility = 'visible';\n\t\t\t}\n\t\t\t\n\t\t\tmxLog.textarea.scrollTop = mxLog.textarea.scrollHeight;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxLog.buffer += string;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Adds the specified strings to the console, appending a linefeed at the\n\t * end of each string.\n\t */\n\twriteln: function()\n\t{\n\t\tvar string = '';\n\t\t\n\t\tfor (var i = 0; i < arguments.length; i++)\n\t\t{\n\t\t\tstring += arguments[i];\n\t\t\t\n\t\t\tif (i < arguments.length - 1)\n\t\t\t{\n\t\t\t\tstring += ' ';\n\t\t\t}\n\t\t}\n\n\t\tmxLog.write(string + '\\n');\n\t}\n\t\n};\n\n__mxOutput.mxLog = typeof mxLog !== 'undefined' ? mxLog : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxObjectIdentity =\n{\n\t/**\n\t * Class: mxObjectIdentity\n\t * \n\t * Identity for JavaScript objects and functions. This is implemented using\n\t * a simple incrementing counter which is stored in each object under\n\t * <FIELD_NAME>.\n\t * \n\t * The identity for an object does not change during its lifecycle.\n\t * \n\t * Variable: FIELD_NAME\n\t * \n\t * Name of the field to be used to store the object ID. Default is\n\t * <code>mxObjectId</code>.\n\t */\n\tFIELD_NAME: 'mxObjectId',\n\n\t/**\n\t * Variable: counter\n\t * \n\t * Current counter.\n\t */\n\tcounter: 0,\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the ID for the given object or function or null if no object\n\t * is specified.\n\t */\n\tget: function(obj)\n\t{\n\t\tif (obj != null)\n\t\t{\n\t\t\tif (obj[mxObjectIdentity.FIELD_NAME] == null)\n\t\t\t{\n\t\t\t\tif (typeof obj === 'object')\n\t\t\t\t{\n\t\t\t\t\tvar ctor = mxUtils.getFunctionName(obj.constructor);\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = ctor + '#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t\telse if (typeof obj === 'function')\n\t\t\t\t{\n\t\t\t\t\tobj[mxObjectIdentity.FIELD_NAME] = 'Function#' + mxObjectIdentity.counter++;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: clear\n\t * \n\t * Deletes the ID from the given object or function.\n\t */\n\tclear: function(obj)\n\t{\n\t\tif (typeof(obj) === 'object' || typeof obj === 'function')\n\t\t{\n\t\t\tdelete obj[mxObjectIdentity.FIELD_NAME];\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxObjectIdentity = typeof mxObjectIdentity !== 'undefined' ? mxObjectIdentity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDictionary\n *\n * A wrapper class for an associative array with object keys. Note: This\n * implementation uses <mxObjectIdentitiy> to turn object keys into strings.\n * \n * Constructor: mxEventSource\n *\n * Constructs a new dictionary which allows object to be used as keys.\n */\nfunction mxDictionary()\n{\n\tthis.clear();\n};\n\n/**\n * Function: map\n *\n * Stores the (key, value) pairs in this dictionary.\n */\nmxDictionary.prototype.map = null;\n\n/**\n * Function: clear\n *\n * Clears the dictionary.\n */\nmxDictionary.prototype.clear = function()\n{\n\tthis.map = {};\n};\n\n/**\n * Function: get\n *\n * Returns the value for the given key.\n */\nmxDictionary.prototype.get = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\t\n\treturn this.map[id];\n};\n\n/**\n * Function: put\n *\n * Stores the value under the given key and returns the previous\n * value for that key.\n */\nmxDictionary.prototype.put = function(key, value)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tthis.map[id] = value;\n\t\n\treturn previous;\n};\n\n/**\n * Function: remove\n *\n * Removes the value for the given key and returns the value that\n * has been removed.\n */\nmxDictionary.prototype.remove = function(key)\n{\n\tvar id = mxObjectIdentity.get(key);\n\tvar previous = this.map[id];\n\tdelete this.map[id];\n\t\n\treturn previous;\n};\n\n/**\n * Function: getKeys\n *\n * Returns all keys as an array.\n */\nmxDictionary.prototype.getKeys = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(key);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getValues\n *\n * Returns all values as an array.\n */\nmxDictionary.prototype.getValues = function()\n{\n\tvar result = [];\n\t\n\tfor (var key in this.map)\n\t{\n\t\tresult.push(this.map[key]);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: visit\n *\n * Visits all entries in the dictionary using the given function with the\n * following signature: function(key, value) where key is a string and\n * value is an object.\n * \n * Parameters:\n * \n * visitor - A function that takes the key and value as arguments.\n */\nmxDictionary.prototype.visit = function(visitor)\n{\n\tfor (var key in this.map)\n\t{\n\t\tvisitor(key, this.map[key]);\n\t}\n};\n\n__mxOutput.mxDictionary = typeof mxDictionary !== 'undefined' ? mxDictionary : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\nvar mxResources =\n{\n\t/**\n\t * Class: mxResources\n\t * \n\t * Implements internationalization. You can provide any number of \n\t * resource files on the server using the following format for the \n\t * filename: name[-en].properties. The en stands for any lowercase \n\t * 2-character language shortcut (eg. de for german, fr for french).\n\t *\n\t * If the optional language extension is omitted, then the file is used as a \n\t * default resource which is loaded in all cases. If a properties file for a \n\t * specific language exists, then it is used to override the settings in the \n\t * default resource. All entries in the file are of the form key=value. The\n\t * values may then be accessed in code via <get>. Lines without \n\t * equal signs in the properties files are ignored.\n\t *\n\t * Resource files may either be added programmatically using\n\t * <add> or via a resource tag in the UI section of the \n\t * editor configuration file, eg:\n\t * \n\t * (code)\n\t * <mxEditor>\n\t *   <ui>\n\t *     <resource basename=\"examples/resources/mxWorkflow\"/>\n\t * (end)\n\t * \n\t * The above element will load examples/resources/mxWorkflow.properties as well\n\t * as the language specific file for the current language, if it exists.\n\t * \n\t * Values may contain placeholders of the form {1}...{n} where each placeholder\n\t * is replaced with the value of the corresponding array element in the params\n\t * argument passed to <mxResources.get>. The placeholder {1} maps to the first\n\t * element in the array (at index 0).\n\t * \n\t * See <mxClient.language> for more information on specifying the default\n\t * language or disabling all loading of resources.\n\t * \n\t * Lines that start with a # sign will be ignored.\n\t * \n\t * Special characters\n\t * \n\t * To use unicode characters, use the standard notation (eg. \\u8fd1) or %u as a\n\t * prefix (eg. %u20AC will display a Euro sign). For normal hex encoded strings,\n\t * use % as a prefix, eg. %F6 will display a \"o umlaut\" (&ouml;).\n\t * \n\t * See <resourcesEncoded> to disable this. If you disable this, make sure that\n\t * your files are UTF-8 encoded.\n\t * \n\t * Asynchronous loading\n\t * \n\t * By default, the core adds two resource files synchronously at load time.\n\t * To load these files asynchronously, set <mxLoadResources> to false\n\t * before loading mxClient.js and use <mxResources.loadResources> instead.\n\t * \n\t * Variable: resources\n\t * \n\t * Object that maps from keys to values.\n\t */\n\tresources: {},\n\n\t/**\n\t * Variable: extension\n\t * \n\t * Specifies the extension used for language files. Default is <mxResourceExtension>.\n\t */\n\textension: mxResourceExtension,\n\n\t/**\n\t * Variable: resourcesEncoded\n\t * \n\t * Specifies whether or not values in resource files are encoded with \\u or\n\t * percentage. Default is false.\n\t */\n\tresourcesEncoded: false,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the default file for a given basename should be loaded.\n\t * Default is true.\n\t */\n\tloadDefaultBundle: true,\n\n\t/**\n\t * Variable: loadDefaultBundle\n\t * \n\t * Specifies if the specific language file file for a given basename should\n\t * be loaded. Default is true.\n\t */\n\tloadSpecialBundle: true,\n\n\t/**\n\t * Function: isLanguageSupported\n\t * \n\t * Hook for subclassers to disable support for a given language. This\n\t * implementation returns true if lan is in <mxClient.languages>.\n\t * \n\t * Parameters:\n\t *\n\t * lan - The current language.\n\t */\n\tisLanguageSupported: function(lan)\n\t{\n\t\tif (mxClient.languages != null)\n\t\t{\n\t\t\treturn mxUtils.indexOf(mxClient.languages, lan) >= 0;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getDefaultBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + <extension> or null if\n\t * <loadDefaultBundle> is false.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The current language.\n\t */\n\tgetDefaultBundle: function(basename, lan)\n\t{\n\t\tif (mxResources.loadDefaultBundle || !mxResources.isLanguageSupported(lan))\n\t\t{\n\t\t\treturn basename + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: getSpecialBundle\n\t * \n\t * Hook for subclassers to return the URL for the special bundle. This\n\t * implementation returns basename + '_' + lan + <extension> or null if\n\t * <loadSpecialBundle> is false or lan equals <mxClient.defaultLanguage>.\n\t * \n\t * If <mxResources.languages> is not null and <mxClient.language> contains\n\t * a dash, then this method checks if <isLanguageSupported> returns true\n\t * for the full language (including the dash). If that returns false the\n\t * first part of the language (up to the dash) will be tried as an extension.\n\t * \n\t * If <mxResources.language> is null then the first part of the language is\n\t * used to maintain backwards compatibility.\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t */\n\tgetSpecialBundle: function(basename, lan)\n\t{\n\t\tif (mxClient.languages == null || !this.isLanguageSupported(lan))\n\t\t{\n\t\t\tvar dash = lan.indexOf('-');\n\t\t\t\n\t\t\tif (dash > 0)\n\t\t\t{\n\t\t\t\tlan = lan.substring(0, dash);\n\t\t\t}\n\t\t}\n\n\t\tif (mxResources.loadSpecialBundle && mxResources.isLanguageSupported(lan) && lan != mxClient.defaultLanguage)\n\t\t{\n\t\t\treturn basename + '_' + lan + mxResources.extension;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t},\n\n\t/**\n\t * Function: add\n\t * \n\t * Adds the default and current language properties file for the specified\n\t * basename. Existing keys are overridden as new files are added. If no\n\t * callback is used then the request is synchronous.\n\t *\n\t * Example:\n\t * \n\t * At application startup, additional resources may be \n\t * added using the following code:\n\t * \n\t * (code)\n\t * mxResources.add('resources/editor');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * basename - The basename for which the file should be loaded.\n\t * lan - The language for which the file should be loaded.\n\t * callback - Optional callback for asynchronous loading.\n\t */\n\tadd: function(basename, lan, callback)\n\t{\n\t\tlan = (lan != null) ? lan : ((mxClient.language != null) ?\n\t\t\tmxClient.language.toLowerCase() : mxConstants.NONE);\n\t\t\n\t\tif (lan != mxConstants.NONE)\n\t\t{\n\t\t\tvar defaultBundle = mxResources.getDefaultBundle(basename, lan);\n\t\t\tvar specialBundle = mxResources.getSpecialBundle(basename, lan);\n\t\t\t\n\t\t\tvar loadSpecialBundle = function()\n\t\t\t{\n\t\t\t\tif (specialBundle != null)\n\t\t\t\t{\n\t\t\t\t\tif (callback)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxUtils.get(specialBundle, function(req)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t}, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t   \t\tvar req = mxUtils.load(specialBundle);\n\t\t\t\t\t   \t\t\n\t\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t\t   \t\t{\n\t\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t\t   \t\t}\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\tcatch (e)\n\t\t\t\t   \t\t{\n\t\t\t\t   \t\t\t// ignore\n\t\t\t\t\t   \t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (callback != null)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (defaultBundle != null)\n\t\t\t{\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.get(defaultBundle, function(req)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxResources.parse(req.getText());\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t}, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tloadSpecialBundle();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t   \t\tvar req = mxUtils.load(defaultBundle);\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tif (req.isReady())\n\t\t\t\t   \t\t{\n\t\t\t\t \t   \t\tmxResources.parse(req.getText());\n\t\t\t\t   \t\t}\n\t\t\t\t   \t\t\n\t\t\t\t   \t\tloadSpecialBundle();\n\t\t\t\t  \t}\n\t\t\t\t  \tcatch (e)\n\t\t\t\t  \t{\n\t\t\t\t  \t\t// ignore\n\t\t\t\t  \t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Overlays the language specific file (_lan-extension)\n\t\t\t\tloadSpecialBundle();\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: parse\n\t * \n\t * Parses the key, value pairs in the specified\n\t * text and stores them as local resources.\n\t */\n\tparse: function(text)\n\t{\n\t\tif (text != null)\n\t\t{\n\t\t\tvar lines = text.split('\\n');\n\t\t\t\n\t\t\tfor (var i = 0; i < lines.length; i++)\n\t\t\t{\n\t\t\t\tif (lines[i].charAt(0) != '#')\n\t\t\t\t{\n\t\t\t\t\tvar index = lines[i].indexOf('=');\n\t\t\t\t\t\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar key = lines[i].substring(0, index);\n\t\t\t\t\t\tvar idx = lines[i].length;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (lines[i].charCodeAt(idx - 1) == 13)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tidx--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar value = lines[i].substring(index + 1, idx);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.resourcesEncoded)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalue = value.replace(/\\\\(?=u[a-fA-F\\d]{4})/g,\"%\");\n\t\t\t\t\t\t\tmxResources.resources[key] = unescape(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxResources.resources[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Returns the value for the specified resource key.\n\t *\n\t * Example:\n\t * To read the value for 'welomeMessage', use the following:\n\t * (code)\n\t * var result = mxResources.get('welcomeMessage') || '';\n\t * (end)\n\t *\n\t * This would require an entry of the following form in\n\t * one of the English language resource files:\n\t * (code)\n\t * welcomeMessage=Welcome to mxGraph!\n\t * (end)\n\t * \n\t * The part behind the || is the string value to be used if the given\n\t * resource is not available.\n\t * \n\t * Parameters:\n\t * \n\t * key - String that represents the key of the resource to be returned.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t * defaultValue - Optional string that specifies the default return value.\n\t */\n\tget: function(key, params, defaultValue)\n\t{\n\t\tvar value = mxResources.resources[key];\n\t\t\n\t\t// Applies the default value if no resource was found\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\t\n\t\t// Replaces the placeholders with the values in the array\n\t\tif (value != null && params != null)\n\t\t{\n\t\t\tvalue = mxResources.replacePlaceholders(value, params);\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: replacePlaceholders\n\t * \n\t * Replaces the given placeholders with the given parameters.\n\t * \n\t * Parameters:\n\t * \n\t * value - String that contains the placeholders.\n\t * params - Array of the values for the placeholders of the form {1}...{n}\n\t * to be replaced with in the resulting string.\n\t */\n\treplacePlaceholders: function(value, params)\n\t{\n\t\tvar result = [];\n\t\tvar index = null;\n\t\t\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tvar c = value.charAt(i);\n\n\t\t\tif (c == '{')\n\t\t\t{\n\t\t\t\tindex = '';\n\t\t\t}\n\t\t\telse if (index != null && \tc == '}')\n\t\t\t{\n\t\t\t\tindex = parseInt(index)-1;\n\t\t\t\t\n\t\t\t\tif (index >= 0 && index < params.length)\n\t\t\t\t{\n\t\t\t\t\tresult.push(params[index]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tindex = null;\n\t\t\t}\n\t\t\telse if (index != null)\n\t\t\t{\n\t\t\t\tindex += c;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\n\t/**\n\t * Function: loadResources\n\t * \n\t * Loads all required resources asynchronously. Use this to load the graph and\n\t * editor resources if <mxLoadResources> is false.\n\t * \n\t * Parameters:\n\t * \n\t * callback - Callback function for asynchronous loading.\n\t */\n\tloadResources: function(callback)\n\t{\n\t\tmxResources.add(mxClient.basePath+'/resources/editor', null, function()\n\t\t{\n\t\t\tmxResources.add(mxClient.basePath+'/resources/graph', null, callback);\n\t\t});\n\t}\n\n};\n\n__mxOutput.mxResources = typeof mxResources !== 'undefined' ? mxResources : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPoint\n *\n * Implements a 2-dimensional vector with double precision coordinates.\n * \n * Constructor: mxPoint\n *\n * Constructs a new point for the optional x and y coordinates. If no\n * coordinates are given, then the default values for <x> and <y> are used.\n */\nfunction mxPoint(x, y)\n{\n\tthis.x = (x != null) ? x : 0;\n\tthis.y = (y != null) ? y : 0;\n};\n\n/**\n * Variable: x\n *\n * Holds the x-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.x = null;\n\n/**\n * Variable: y\n *\n * Holds the y-coordinate of the point. Default is 0.\n */\nmxPoint.prototype.y = null;\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this point.\n */\nmxPoint.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxPoint.prototype.clone = function()\n{\n\t// Handles subclasses as well\n\treturn mxUtils.clone(this);\n};\n\n__mxOutput.mxPoint = typeof mxPoint !== 'undefined' ? mxPoint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangle\n *\n * Extends <mxPoint> to implement a 2-dimensional rectangle with double\n * precision coordinates.\n * \n * Constructor: mxRectangle\n *\n * Constructs a new rectangle for the optional parameters. If no parameters\n * are given then the respective default values are used.\n */\nfunction mxRectangle(x, y, width, height)\n{\n\tmxPoint.call(this, x, y);\n\n\tthis.width = (width != null) ? width : 0;\n\tthis.height = (height != null) ? height : 0;\n};\n\n/**\n * Extends mxPoint.\n */\nmxRectangle.prototype = new mxPoint();\nmxRectangle.prototype.constructor = mxRectangle;\n\n/**\n * Variable: width\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxRectangle.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxRectangle.prototype.height = null;\n\n/**\n * Function: setRect\n * \n * Sets this rectangle to the specified values\n */\nmxRectangle.prototype.setRect = function(x, y, w, h)\n{\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n};\n\n/**\n * Function: getCenterX\n * \n * Returns the x-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterX = function ()\n{\n\treturn this.x + this.width/2;\n};\n\n/**\n * Function: getCenterY\n * \n * Returns the y-coordinate of the center point.\n */\nmxRectangle.prototype.getCenterY = function ()\n{\n\treturn this.y + this.height/2;\n};\n\n/**\n * Function: add\n *\n * Adds the given rectangle to this rectangle.\n */\nmxRectangle.prototype.add = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar minX = Math.min(this.x, rect.x);\n\t\tvar minY = Math.min(this.y, rect.y);\n\t\tvar maxX = Math.max(this.x + this.width, rect.x + rect.width);\n\t\tvar maxY = Math.max(this.y + this.height, rect.y + rect.height);\n\t\t\n\t\tthis.x = minX;\n\t\tthis.y = minY;\n\t\tthis.width = maxX - minX;\n\t\tthis.height = maxY - minY;\n\t}\n};\n\n/**\n * Function: intersect\n * \n * Changes this rectangle to where it overlaps with the given rectangle.\n */\nmxRectangle.prototype.intersect = function(rect)\n{\n\tif (rect != null)\n\t{\n\t\tvar r1 = this.x + this.width;\n\t\tvar r2 = rect.x + rect.width;\n\t\t\n\t\tvar b1 = this.y + this.height;\n\t\tvar b2 = rect.y + rect.height;\n\t\t\n\t\tthis.x = Math.max(this.x, rect.x);\n\t\tthis.y = Math.max(this.y, rect.y);\n\t\tthis.width = Math.min(r1, r2) - this.x;\n\t\tthis.height = Math.min(b1, b2) - this.y;\n\t}\n};\n\n/**\n * Function: grow\n *\n * Grows the rectangle by the given amount, that is, this method subtracts\n * the given amount from the x- and y-coordinates and adds twice the amount\n * to the width and height.\n */\nmxRectangle.prototype.grow = function(amount)\n{\n\tthis.x -= amount;\n\tthis.y -= amount;\n\tthis.width += 2 * amount;\n\tthis.height += 2 * amount;\n};\n\n/**\n * Function: getPoint\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxRectangle.prototype.getPoint = function()\n{\n\treturn new mxPoint(this.x, this.y);\n};\n\n/**\n * Function: rotate90\n * \n * Rotates this rectangle by 90 degree around its center point.\n */\nmxRectangle.prototype.rotate90 = function()\n{\n\tvar t = (this.width - this.height) / 2;\n\tthis.x += t;\n\tthis.y -= t;\n\tvar tmp = this.width;\n\tthis.width = this.height;\n\tthis.height = tmp;\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this rectangle.\n */\nmxRectangle.prototype.equals = function(obj)\n{\n\treturn obj != null && obj.x == this.x && obj.y == this.y &&\n\t\tobj.width == this.width && obj.height == this.height;\n};\n\n/**\n * Function: fromRectangle\n * \n * Returns a new <mxRectangle> which is a copy of the given rectangle.\n */\nmxRectangle.fromRectangle = function(rect)\n{\n\treturn new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n};\n\n__mxOutput.mxRectangle = typeof mxRectangle !== 'undefined' ? mxRectangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEffects =\n{\n\n\t/**\n\t * Class: mxEffects\n\t * \n\t * Provides animation effects.\n\t */\n\n\t/**\n\t * Function: animateChanges\n\t * \n\t * Asynchronous animated move operation. See also: <mxMorphing>.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n\t * {\n\t *   var changes = evt.getProperty('edit').changes;\n\t * \n\t *   if (changes.length < 10)\n\t *   {\n\t *     mxEffects.animateChanges(graph, changes);\n\t *   }\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that received the changes.\n\t * changes - Array of changes to be animated.\n\t * done - Optional function argument that is invoked after the\n\t * last step of the animation.\n\t */\n\tanimateChanges: function(graph, changes, done)\n\t{\n\t\tvar maxStep = 10;\n\t\tvar step = 0;\n\n\t\tvar animate = function() \n\t\t{\n\t\t\tvar isRequired = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < changes.length; i++)\n\t\t\t{\n\t\t\t\tvar change = changes[i];\n\t\t\t\t\n\t\t\t\tif (change instanceof mxGeometryChange ||\n\t\t\t\t\tchange instanceof mxTerminalChange ||\n\t\t\t\t\tchange instanceof mxValueChange ||\n\t\t\t\t\tchange instanceof mxChildChange ||\n\t\t\t\t\tchange instanceof mxStyleChange)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.getView().getState(change.cell || change.child, false);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tisRequired = true;\n\t\t\t\t\t\n\t\t\t\t\t\tif (change.constructor != mxGeometryChange || graph.model.isEdge(change.cell))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxUtils.setOpacity(state.shape.node, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\t\n\n\t\t\t\t\t\t\tvar dx = (change.geometry.x - change.previous.x) * scale;\n\t\t\t\t\t\t\tvar dy = (change.geometry.y - change.previous.y) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar sx = (change.geometry.width - change.previous.width) * scale;\n\t\t\t\t\t\t\tvar sy = (change.geometry.height - change.previous.height) * scale;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (step == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x -= dx;\n\t\t\t\t\t\t\t\tstate.y -= dy;\n\t\t\t\t\t\t\t\tstate.width -= sx;\n\t\t\t\t\t\t\t\tstate.height -= sy;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate.x += dx / maxStep;\n\t\t\t\t\t\t\t\tstate.y += dy / maxStep;\n\t\t\t\t\t\t\t\tstate.width += sx / maxStep;\n\t\t\t\t\t\t\t\tstate.height += sy / maxStep;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgraph.cellRenderer.redraw(state);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Fades all connected edges and children\n\t\t\t\t\t\t\tmxEffects.cascadeOpacity(graph, change.cell, 100 * step / maxStep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (step < maxStep && isRequired)\n\t\t\t{\n\t\t\t\tstep++;\n\t\t\t\twindow.setTimeout(animate, delay);\n\t\t\t}\n\t\t\telse if (done != null)\n\t\t\t{\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar delay = 30;\n\t\tanimate();\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * Sets the opacity on the given cell and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells.\n\t * cell - <mxCell> to set the opacity for.\n\t * opacity - New value for the opacity in %.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\t// Fades all children\n\t\tvar childCount = graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar child = graph.model.getChildAt(cell, i);\n\t\t\tvar childState = graph.getView().getState(child);\n\t\t\t\n\t\t\tif (childState != null)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(childState.shape.node, opacity);\n\t\t\t\tmxEffects.cascadeOpacity(graph, child, opacity);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Fades all connected edges\n\t\tvar edges = graph.model.getEdges(cell);\n\t\t\n\t\tif (edges != null)\n\t\t{\n\t\t\tfor (var i=0; i<edges.length; i++)\n\t\t\t{\n\t\t\t\tvar edgeState = graph.getView().getState(edges[i]);\n\t\t\t\t\n\t\t\t\tif (edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmxUtils.setOpacity(edgeState.shape.node, opacity);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * Asynchronous fade-out operation.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tstep = step || 40;\n\t\tdelay = delay || 30;\n\t\t\n\t\tvar opacity = from || 100;\n\t\t\n\t\tmxUtils.setOpacity(node, opacity);\n\t\t\n\t\tif (isEnabled || isEnabled == null)\n\t\t{\n\t\t\tvar f = function()\n\t\t\t{\n\t\t\t    opacity = Math.max(opacity-step, 0);\n\t\t\t\tmxUtils.setOpacity(node, opacity);\n\t\t\t\t\n\t\t\t\tif (opacity > 0)\n\t\t\t\t{\n\t\t\t\t\twindow.setTimeout(f, delay);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\t\t\n\t\t\t\t\tif (remove && node.parentNode)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.setTimeout(f, delay);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\n\t\t\tif (remove && node.parentNode)\n\t\t\t{\n\t\t\t\tnode.parentNode.removeChild(node);\n\t\t\t}\n\t\t}\n\t}\n\n};\n\n__mxOutput.mxEffects = typeof mxEffects !== 'undefined' ? mxEffects : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxUtils =\n{\n\t/**\n\t * Class: mxUtils\n\t * \n\t * A singleton class that provides cross-browser helper methods.\n\t * This is a global functionality. To access the functions in this\n\t * class, use the global classname appended by the functionname.\n\t * You may have to load chrome://global/content/contentAreaUtils.js\n\t * to disable certain security restrictions in Mozilla for the <open>,\n\t * <save>, <saveAs> and <copy> function.\n\t * \n\t * For example, the following code displays an error message:\n\t * \n\t * (code)\n\t * mxUtils.error('Browser is not supported!', 200, false);\n\t * (end)\n\t * \n\t * Variable: errorResource\n\t * \n\t * Specifies the resource key for the title of the error window. If the\n\t * resource for this key does not exist then the value is used as\n\t * the title. Default is 'error'.\n\t */\n\terrorResource: (mxClient.language != 'none') ? 'error' : '',\n\t\n\t/**\n\t * Variable: closeResource\n\t * \n\t * Specifies the resource key for the label of the close button. If the\n\t * resource for this key does not exist then the value is used as\n\t * the label. Default is 'close'.\n\t */\n\tcloseResource: (mxClient.language != 'none') ? 'close' : '',\n\n\t/**\n\t * Variable: errorImage\n\t * \n\t * Defines the image used for error dialogs.\n\t */\n\terrorImage: mxClient.imageBasePath + '/error.gif',\n\t\n\t/**\n\t * Function: removeCursors\n\t * \n\t * Removes the cursors from the style of the given DOM node and its\n\t * descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the cursor style from.\n\t */\n\tremoveCursors: function(element)\n\t{\n\t\tif (element.style != null)\n\t\t{\n\t\t\telement.style.cursor = '';\n\t\t}\n\t\t\n\t\tvar children = element.childNodes;\n\t\t\n\t\tif (children != null)\n\t\t{\n\t        var childCount = children.length;\n\t        \n\t        for (var i = 0; i < childCount; i += 1)\n\t        {\n\t            mxUtils.removeCursors(children[i]);\n\t        }\n\t    }\n\t},\n\n\t/**\n\t * Function: getCurrentStyle\n\t * \n\t * Returns the current style of the specified element.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node whose current style should be returned.\n\t */\n\tgetCurrentStyle: function()\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 9))\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ? element.currentStyle : null;\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element)\n\t\t\t{\n\t\t\t\treturn (element != null) ?\n\t\t\t\t\twindow.getComputedStyle(element, '') :\n\t\t\t\t\tnull;\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: parseCssNumber\n\t * \n\t * Parses the given CSS numeric value adding handling for the values thin,\n\t * medium and thick (2, 4 and 6).\n\t */\n\tparseCssNumber: function(value)\n\t{\n\t\tif (value == 'thin')\n\t\t{\n\t\t\tvalue = '2';\n\t\t}\n\t\telse if (value == 'medium')\n\t\t{\n\t\t\tvalue = '4';\n\t\t}\n\t\telse if (value == 'thick')\n\t\t{\n\t\t\tvalue = '6';\n\t\t}\n\t\t\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: setPrefixedStyle\n\t * \n\t * Adds the given style with the standard name and an optional vendor prefix for the current\n\t * browser.\n\t * \n\t * (code)\n\t * mxUtils.setPrefixedStyle(node.style, 'transformOrigin', '0% 0%');\n\t * (end)\n\t */\n\tsetPrefixedStyle: function()\n\t{\n\t\tvar prefix = null;\n\t\t\n\t\tif (mxClient.IS_OT)\n\t\t{\n\t\t\tprefix = 'O';\n\t\t}\n\t\telse if (mxClient.IS_SF || mxClient.IS_GC)\n\t\t{\n\t\t\tprefix = 'Webkit';\n\t\t}\n\t\telse if (mxClient.IS_MT)\n\t\t{\n\t\t\tprefix = 'Moz';\n\t\t}\n\t\telse if (mxClient.IS_IE && document.documentMode >= 9 && document.documentMode < 10)\n\t\t{\n\t\t\tprefix = 'ms';\n\t\t}\n\n\t\treturn function(style, name, value)\n\t\t{\n\t\t\tstyle[name] = value;\n\t\t\t\n\t\t\tif (prefix != null && name.length > 0)\n\t\t\t{\n\t\t\t\tname = prefix + name.substring(0, 1).toUpperCase() + name.substring(1);\n\t\t\t\tstyle[name] = value;\n\t\t\t}\n\t\t};\n\t}(),\n\t\n\t/**\n\t * Function: hasScrollbars\n\t * \n\t * Returns true if the overflow CSS property of the given node is either\n\t * scroll or auto.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose style should be checked for scrollbars.\n\t */\n\thasScrollbars: function(node)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(node);\n\n\t\treturn style != null && (style.overflow == 'scroll' || style.overflow == 'auto');\n\t},\n\t\n\t/**\n\t * Function: bind\n\t * \n\t * Returns a wrapper function that locks the execution scope of the given\n\t * function to the specified scope. Inside funct, the \"this\" keyword\n\t * becomes a reference to that scope.\n\t */\n\tbind: function(scope, funct)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\treturn funct.apply(scope, arguments);\n\t\t};\n\t},\n\t\n\t/**\n\t * Function: eval\n\t * \n\t * Evaluates the given expression using eval and returns the JavaScript\n\t * object that represents the expression result. Supports evaluation of\n\t * expressions that define functions and returns the function object for\n\t * these expressions.\n\t * \n\t * Parameters:\n\t * \n\t * expr - A string that represents a JavaScript expression.\n\t */\n\teval: function(expr)\n\t{\n\t\tvar result = null;\n\n\t\tif (expr.indexOf('function') >= 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\teval('var _mxJavaScriptExpression='+expr);\n\t\t\t\tresult = _mxJavaScriptExpression;\n\t\t\t\t// TODO: Use delete here?\n\t\t\t\t_mxJavaScriptExpression = null;\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = eval(expr);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxLog.warn(e.message + ' while evaluating ' + expr);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNode\n\t * \n\t * Returns the first node where attr equals value.\n\t * This implementation does not use XPath.\n\t */\n\tfindNode: function(node, attr, value)\n\t{\n\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\tvar tmp = node.getAttribute(attr);\n\t\n\t\t\tif (tmp != null && tmp == value)\n\t\t\t{\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tvar result = mxUtils.findNode(node, attr, value);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: getFunctionName\n\t * \n\t * Returns the name for the given function.\n\t * \n\t * Parameters:\n\t * \n\t * f - JavaScript object that represents a function.\n\t */\n\tgetFunctionName: function(f)\n\t{\n\t\tvar str = null;\n\n\t\tif (f != null)\n\t\t{\n\t\t\tif (f.name != null)\n\t\t\t{\n\t\t\t\tstr = f.name;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstr = mxUtils.trim(f.toString());\n\t\t\t\t\n\t\t\t\tif (/^function\\s/.test(str))\n\t\t\t\t{\n\t\t\t\t\tstr = mxUtils.ltrim(str.substring(9));\n\t\t\t\t\tvar idx2 = str.indexOf('(');\n\t\t\t\t\t\n\t\t\t\t\tif (idx2 > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tstr = str.substring(0, idx2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn str;\n\t},\n\n\t/**\n\t * Function: indexOf\n\t * \n\t * Returns the index of obj in array or -1 if the array does not contain\n\t * the given object.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array to check for the given obj.\n\t * obj - Object to find in the given array.\n\t */\n\tindexOf: function(array, obj)\n\t{\n\t\tif (array != null && obj != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tif (array[i] == obj)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn -1;\n\t},\n\n\t/**\n\t * Function: forEach\n\t * \n\t * Calls the given function for each element of the given array and returns\n\t * the array.\n\t * \n\t * Parameters:\n\t * \n\t * array - Array that contains the elements.\n\t * fn - Function to be called for each object.\n\t */\n\tforEach: function(array, fn)\n\t{\n\t\tif (array != null && fn != null)\n\t\t{\n\t\t\tfor (var i = 0; i < array.length; i++)\n\t\t\t{\n\t\t\t\tfn(array[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn array;\n\t},\n\n\t/**\n\t * Function: remove\n\t * \n\t * Removes all occurrences of the given object in the given array or\n\t * object. If there are multiple occurrences of the object, be they\n\t * associative or as an array entry, all occurrences are removed from\n\t * the array or deleted from the object. By removing the object from\n\t * the array, all elements following the removed element are shifted\n\t * by one step towards the beginning of the array.\n\t * \n\t * The length of arrays is not modified inside this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to find in the given array.\n\t * array - Array to check for the given obj.\n\t */\n\tremove: function(obj, array)\n\t{\n\t\tvar result = null;\n\t\t\n\t\tif (typeof(array) == 'object')\n\t\t{\n\t\t\tvar index = mxUtils.indexOf(array, obj);\n\t\t\t\n\t\t\twhile (index >= 0)\n\t\t\t{\n\t\t\t\tarray.splice(index, 1);\n\t\t\t\tresult = obj;\n\t\t\t\tindex = mxUtils.indexOf(array, obj);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in array)\n\t\t{\n\t\t\tif (array[key] == obj)\n\t\t\t{\n\t\t\t\tdelete array[key];\n\t\t\t\tresult = obj;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNode\n\t * \n\t * Returns true if the given value is an XML node with the node name\n\t * and if the optional attribute has the specified value.\n\t * \n\t * This implementation assumes that the given value is a DOM node if the\n\t * nodeType property is numeric, that is, if isNaN returns false for\n\t * value.nodeType.\n\t * \n\t * Parameters:\n\t * \n\t * value - Object that should be examined as a node.\n\t * nodeName - String that specifies the node name.\n\t * attributeName - Optional attribute name to check.\n\t * attributeValue - Optional attribute value to check.\n\t */\n\t isNode: function(value, nodeName, attributeName, attributeValue)\n\t {\n\t \tif (value != null && !isNaN(value.nodeType) && (nodeName == null ||\n\t \t\tvalue.nodeName.toLowerCase() == nodeName.toLowerCase()))\n \t\t{\n \t\t\treturn attributeName == null ||\n \t\t\t\tvalue.getAttribute(attributeName) == attributeValue;\n \t\t}\n\t \t\n\t \treturn false;\n\t },\n\t\n\t/**\n\t * Function: isAncestorNode\n\t * \n\t * Returns true if the given ancestor is an ancestor of the\n\t * given DOM node in the DOM. This also returns true if the\n\t * child is the ancestor.\n\t * \n\t * Parameters:\n\t * \n\t * ancestor - DOM node that represents the ancestor.\n\t * child - DOM node that represents the child.\n\t */\n\t isAncestorNode: function(ancestor, child)\n\t {\n\t \tvar parent = child;\n\t \t\n\t \twhile (parent != null)\n\t \t{\n\t \t\tif (parent == ancestor)\n\t \t\t{\n\t \t\t\treturn true;\n\t \t\t}\n\n\t \t\tparent = parent.parentNode;\n\t \t}\n\t \t\n\t \treturn false;\n\t },\n\n\t/**\n\t * Function: getChildNodes\n\t * \n\t * Returns an array of child nodes that are of the given node type.\n\t * \n\t * Parameters:\n\t * \n\t * node - Parent DOM node to return the children from.\n\t * nodeType - Optional node type to return. Default is\n\t * <mxConstants.NODETYPE_ELEMENT>.\n\t */\n\tgetChildNodes: function(node, nodeType)\n\t{\n\t\tnodeType = nodeType || mxConstants.NODETYPE_ELEMENT;\n\t\t\n\t\tvar children = [];\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == nodeType)\n\t\t\t{\n\t\t\t\tchildren.push(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t\t\n\t\treturn children;\n\t},\n\n\t/**\n\t * Function: importNode\n\t * \n\t * Cross browser implementation for document.importNode. Uses document.importNode\n\t * in all browsers but IE, where the node is cloned by creating a new node and\n\t * copying all attributes and children into it using importNode, recursively.\n\t * \n\t * Parameters:\n\t * \n\t * doc - Document to import the node into.\n\t * node - Node to be imported.\n\t * allChildren - If all children should be imported.\n\t */\n\timportNode: function(doc, node, allChildren)\n\t{\n\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode < 10))\n\t\t{\n\t\t\tswitch (node.nodeType)\n\t\t\t{\n\t\t\t\tcase 1: /* element */\n\t\t\t\t{\n\t\t\t\t\tvar newNode = doc.createElement(node.nodeName);\n\t\t\t\t\t\n\t\t\t\t\tif (node.attributes && node.attributes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var i = 0; i < node.attributes.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewNode.setAttribute(node.attributes[i].nodeName,\n\t\t\t\t\t\t\t\tnode.getAttribute(node.attributes[i].nodeName));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (allChildren && node.childNodes && node.childNodes.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < node.childNodes.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnewNode.appendChild(mxUtils.importNode(doc, node.childNodes[i], allChildren));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn newNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 3: /* text */\n\t\t\t    case 4: /* cdata-section */\n\t\t\t    case 8: /* comment */\n\t\t\t    {\n\t\t\t      return doc.createTextNode(node.value);\n\t\t\t      break;\n\t\t\t    }\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn doc.importNode(node, allChildren);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createXmlDocument\n\t * \n\t * Returns a new, empty XML document.\n\t */\n\tcreateXmlDocument: function()\n\t{\n\t\tvar doc = null;\n\t\t\n\t\tif (document.implementation && document.implementation.createDocument)\n\t\t{\n\t\t\tdoc = document.implementation.createDocument('', '', null);\n\t\t}\n\t\telse if (window.ActiveXObject)\n\t\t{\n\t\t\tdoc = new ActiveXObject('Microsoft.XMLDOM');\n\t \t}\n\t \t\n\t \treturn doc;\n\t},\n\n\t/**\n\t * Function: parseXml\n\t * \n\t * Parses the specified XML string into a new XML document and returns the\n\t * new document.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var doc = mxUtils.parseXml(\n\t *   '<mxGraphModel><root><MyDiagram id=\"0\"><mxCell/></MyDiagram>'+\n\t *   '<MyLayer id=\"1\"><mxCell parent=\"0\" /></MyLayer><MyObject id=\"2\">'+\n\t *   '<mxCell style=\"strokeColor=blue;fillColor=red\" parent=\"1\" vertex=\"1\">'+\n\t *   '<mxGeometry x=\"10\" y=\"10\" width=\"80\" height=\"30\" as=\"geometry\"/>'+\n\t *   '</mxCell></MyObject></root></mxGraphModel>');\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * xml - String that contains the XML data.\n\t */\n\tparseXml: function()\n\t{\n\t\tif (window.DOMParser)\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\n\t\t\t\treturn parser.parseFromString(xml, 'text/xml');\n\t\t\t};\n\t\t}\n\t\telse // IE<=9\n\t\t{\n\t\t\treturn function(xml)\n\t\t\t{\n\t\t\t\tvar result = mxUtils.createXmlDocument();\n\t\t\t\tresult.async = false;\n\t\t\t\t// Workaround for parsing errors with SVG DTD\n\t\t\t\tresult.validateOnParse = false;\n\t\t\t\tresult.resolveExternals = false;\n\t\t\t\tresult.loadXML(xml);\n\t\t\t\t\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: clearSelection\n\t * \n\t * Clears the current selection in the page.\n\t */\n\tclearSelection: function()\n\t{\n\t\tif (document.selection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tdocument.selection.empty();\n\t\t\t};\n\t\t}\n\t\telse if (window.getSelection)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tif (window.getSelection().empty)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().empty();\n\t\t\t\t}\n\t\t\t\telse if (window.getSelection().removeAllRanges)\n\t\t\t\t{\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function() { };\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getPrettyXML\n\t * \n\t * Returns a pretty printed string that represents the XML tree for the\n\t * given node. This method should only be used to print XML for reading,\n\t * use <getXml> instead to obtain a string for processing.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * tab - Optional string that specifies the indentation for one level.\n\t * Default is two spaces.\n\t * indent - Optional string that represents the current indentation.\n\t * Default is an empty string.\n\t */\n\tgetPrettyXml: function(node, tab, indent)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\ttab = tab || '  ';\n\t\t\tindent = indent || '';\n\t\t\t\n\t\t\tif (node.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t\t{\n\t\t\t\tvar value =  mxUtils.trim(mxUtils.getTextContent(node));\n\t\t\t\t\n\t\t\t\tif (value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(indent + mxUtils.htmlEntities(value) + '\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(indent + '<' + node.nodeName);\n\t\t\t\t\n\t\t\t\t// Creates the string with the node attributes\n\t\t\t\t// and converts all HTML entities in the values\n\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\n\t\t\t\tif (attrs != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar val = mxUtils.htmlEntities(attrs[i].value);\n\t\t\t\t\t\tresult.push(' ' + attrs[i].nodeName + '=\"' + val + '\"');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Recursively creates the XML string for each\n\t\t\t\t// child nodes and appends it here with an\n\t\t\t\t// indentation\n\t\t\t\tvar tmp = node.firstChild;\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tresult.push('>\\n');\n\t\t\t\t\t\n\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(mxUtils.getPrettyXml(tmp, tab, indent + tab));\n\t\t\t\t\t\ttmp = tmp.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tresult.push(indent + '</'+node.nodeName + '>\\n');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult.push('/>\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join('');\n\t},\n\t\n\t/**\n\t * Function: removeWhitespace\n\t * \n\t * Removes the sibling text nodes for the given node that only consists\n\t * of tabs, newlines and spaces.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose siblings should be removed.\n\t * before - Optional boolean that specifies the direction of the traversal.\n\t */\n\tremoveWhitespace: function(node, before)\n\t{\n\t\tvar tmp = (before) ? node.previousSibling : node.nextSibling;\n\t\t\n\t\twhile (tmp != null && tmp.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tvar next = (before) ? tmp.previousSibling : tmp.nextSibling;\n\t\t\tvar text = mxUtils.getTextContent(tmp);\n\t\t\t\n\t\t\tif (mxUtils.trim(text).length == 0)\n\t\t\t{\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = next;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: htmlEntities\n\t * \n\t * Replaces characters (less than, greater than, newlines and quotes) with\n\t * their HTML entities in the given string and returns the result.\n\t * \n\t * Parameters:\n\t * \n\t * s - String that contains the characters to be converted.\n\t * newline - If newlines should be replaced. Default is true.\n\t */\n\thtmlEntities: function(s, newline)\n\t{\n\t\ts = String(s || '');\n\t\t\n\t\ts = s.replace(/&/g,'&amp;'); // 38 26\n\t\ts = s.replace(/\"/g,'&quot;'); // 34 22\n\t\ts = s.replace(/\\'/g,'&#39;'); // 39 27\n\t\ts = s.replace(/</g,'&lt;'); // 60 3C\n\t\ts = s.replace(/>/g,'&gt;'); // 62 3E\n\n\t\tif (newline == null || newline)\n\t\t{\n\t\t\ts = s.replace(/\\n/g, '&#xa;');\n\t\t}\n\t\t\n\t\treturn s;\n\t},\n\t\n\t/**\n\t * Function: isVml\n\t * \n\t * Returns true if the given node is in the VML namespace.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose tag urn should be checked.\n\t */\n\tisVml: function(node)\n\t{\n\t\treturn node != null && node.tagUrn == 'urn:schemas-microsoft-com:vml';\n\t},\n\n\t/**\n\t * Function: getXml\n\t * \n\t * Returns the XML content of the specified node. For Internet Explorer,\n\t * all \\r\\n\\t[\\t]* are removed from the XML string and the remaining \\r\\n\n\t * are replaced by \\n. All \\n are then replaced with linefeed, or &#xa; if\n\t * no linefeed is defined.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the XML for.\n\t * linefeed - Optional string that linefeeds are converted into. Default is\n\t * &#xa;\n\t */\n\tgetXml: function(node, linefeed)\n\t{\n\t\tvar xml = '';\n\n\t\tif (window.XMLSerializer != null)\n\t\t{\n\t\t\tvar xmlSerializer = new XMLSerializer();\n\t\t\txml = xmlSerializer.serializeToString(node);     \n\t\t}\n\t\telse if (node.xml != null)\n\t\t{\n\t\t\txml = node.xml.replace(/\\r\\n\\t[\\t]*/g, '').\n\t\t\t\treplace(/>\\r\\n/g, '>').\n\t\t\t\treplace(/\\r\\n/g, '\\n');\n\t\t}\n\n\t\t// Replaces linefeeds with HTML Entities.\n\t\tlinefeed = linefeed || '&#xa;';\n\t\txml = xml.replace(/\\n/g, linefeed);\n\t\t  \n\t\treturn xml;\n\t},\n\t\n\t/**\n\t * Function: extractTextWithWhitespace\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * elems - DOM nodes to return the text for.\n\t */\n\textractTextWithWhitespace: function(elems)\n\t{\n\t    // Known block elements for handling linefeeds (list is not complete)\n\t\tvar blocks = ['BLOCKQUOTE', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'OL', 'P', 'PRE', 'TABLE', 'UL'];\n\t\tvar ret = [];\n\t\t\n\t\tfunction doExtract(elts)\n\t\t{\n\t\t\t// Single break should be ignored\n\t\t\tif (elts.length == 1 && (elts[0].nodeName == 'BR' ||\n\t\t\t\telts[0].innerHTML == '\\n'))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t    for (var i = 0; i < elts.length; i++)\n\t\t    {\n\t\t        var elem = elts[i];\n\n\t\t\t\t// DIV with a br or linefeed forces a linefeed\n\t\t\t\tif (elem.nodeName == 'BR' || elem.innerHTML == '\\n' ||\n\t\t\t\t\t((elts.length == 1 || i == 0) && (elem.nodeName == 'DIV' &&\n\t\t\t\t\telem.innerHTML.toLowerCase() == '<br>')))\n\t\t    \t{\n\t    \t\t\tret.push('\\n');\n\t\t    \t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t        if (elem.nodeType === 3 || elem.nodeType === 4)\n\t\t\t        {\n\t\t\t        \tif (elem.nodeValue.length > 0)\n\t\t\t        \t{\n\t\t\t        \t\tret.push(elem.nodeValue);\n\t\t\t        \t}\n\t\t\t        }\n\t\t\t        else if (elem.nodeType !== 8 && elem.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoExtract(elem.childNodes);\n\t\t\t\t\t}\n\t\t\t        \n\t        \t\tif (i < elts.length - 1 && mxUtils.indexOf(blocks, elts[i + 1].nodeName) >= 0)\n\t        \t\t{\n\t        \t\t\tret.push('\\n');\t\t\n\t        \t\t}\n\t\t\t\t}\n\t\t    }\n\t\t};\n\t\t\n\t\tdoExtract(elems);\n\t    \n\t    return ret.join('');\n\t},\n\n\t/**\n\t * Function: replaceTrailingNewlines\n\t * \n\t * Replaces each trailing newline with the given pattern.\n\t */\n\treplaceTrailingNewlines: function(str, pattern)\n\t{\n\t\t// LATER: Check is this can be done with a regular expression\n\t\tvar postfix = '';\n\t\t\n\t\twhile (str.length > 0 && str.charAt(str.length - 1) == '\\n')\n\t\t{\n\t\t\tstr = str.substring(0, str.length - 1);\n\t\t\tpostfix += pattern;\n\t\t}\n\t\t\n\t\treturn str + postfix;\n\t},\n\n\t/**\n\t * Function: getTextContent\n\t * \n\t * Returns the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the text content for.\n\t */\n\tgetTextContent: function(node)\n\t{\n\t\t// Only IE10-\n\t\tif (mxClient.IS_IE && node.innerText !== undefined)\n\t\t{\n\t\t\treturn node.innerText;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn (node != null) ? node[(node.textContent === undefined) ? 'text' : 'textContent'] : '';\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setTextContent\n\t * \n\t * Sets the text content of the specified node.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the text content for.\n\t * text - String that represents the text content.\n\t */\n\tsetTextContent: function(node, text)\n\t{\n\t\tif (node.innerText !== undefined)\n\t\t{\n\t\t\tnode.innerText = text;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode[(node.textContent === undefined) ? 'text' : 'textContent'] = text;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getInnerHtml\n\t * \n\t * Returns the inner HTML for the given node as a string or an empty string\n\t * if no node was specified. The inner HTML is the text representing all\n\t * children of the node, but not the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the inner HTML for.\n\t */\n\tgetInnerHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\treturn node.innerHTML;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: getOuterHtml\n\t * \n\t * Returns the outer HTML for the given node as a string or an empty\n\t * string if no node was specified. The outer HTML is the text representing\n\t * all children of the node including the node itself.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to return the outer HTML for.\n\t */\n\tgetOuterHtml: function()\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tif (node.outerHTML != null)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn node.outerHTML;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = [];\n\t\t\t\t\t\ttmp.push('<'+node.nodeName);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar attrs = node.attributes;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (attrs != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar value = attrs[i].value;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (value != null && value.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.push(' ');\n\t\t\t\t\t\t\t\t\ttmp.push(attrs[i].nodeName);\n\t\t\t\t\t\t\t\t\ttmp.push('=\"');\n\t\t\t\t\t\t\t\t\ttmp.push(value);\n\t\t\t\t\t\t\t\t\ttmp.push('\"');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (node.innerHTML.length == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('/>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttmp.push('>');\n\t\t\t\t\t\t\ttmp.push(node.innerHTML);\n\t\t\t\t\t\t\ttmp.push('</'+node.nodeName+'>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn tmp.join('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(node)\n\t\t\t{\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tvar serializer = new XMLSerializer();\n\t\t\t\t\treturn serializer.serializeToString(node);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t}(),\n\t\n\t/**\n\t * Function: write\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twrite: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: writeln\n\t * \n\t * Creates a text node for the given string and appends it to the given\n\t * parent with an additional linefeed. Returns the text node.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text to be added.\n\t */\n\twriteln: function(parent, text)\n\t{\n\t\tvar doc = parent.ownerDocument;\n\t\tvar node = doc.createTextNode(text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(node);\n\t\t\tparent.appendChild(document.createElement('br'));\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t/**\n\t * Function: br\n\t * \n\t * Appends a linebreak to the given parent and returns the linebreak.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the linebreak to.\n\t */\n\tbr: function(parent, count)\n\t{\n\t\tcount = count || 1;\n\t\tvar br = null;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tif (parent != null)\n\t\t\t{\n\t\t\t\tbr = parent.ownerDocument.createElement('br');\n\t\t\t\tparent.appendChild(br);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn br;\n\t},\n\t\t\n\t/**\n\t * Function: button\n\t * \n\t * Returns a new button with the given level and function as an onclick\n\t * event handler.\n\t * \n\t * (code)\n\t * document.body.appendChild(mxUtils.button('Test', function(evt)\n\t * {\n\t *   alert('Hello, World!');\n\t * }));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * label - String that represents the label of the button.\n\t * funct - Function to be called if the button is pressed.\n\t * doc - Optional document to be used for creating the button. Default is the\n\t * current document.\n\t */\n\tbutton: function(label, funct, doc)\n\t{\n\t\tdoc = (doc != null) ? doc : document;\n\t\t\n\t\tvar button = doc.createElement('button');\n\t\tmxUtils.write(button, label);\n\n\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t{\n\t\t\tfunct(evt);\n\t\t});\n\t\t\n\t\treturn button;\n\t},\n\t\n\t/**\n\t * Function: para\n\t * \n\t * Appends a new paragraph with the given text to the specified parent and\n\t * returns the paragraph.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to append the text node to.\n\t * text - String representing the text for the new paragraph.\n\t */\n\tpara: function(parent, text)\n\t{\n\t\tvar p = document.createElement('p');\n\t\tmxUtils.write(p, text);\n\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(p);\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: addTransparentBackgroundFilter\n\t * \n\t * Adds a transparent background to the filter of the given node. This\n\t * background can be used in IE8 standards mode (native IE8 only) to pass\n\t * events through the node.\n\t */\n\taddTransparentBackgroundFilter: function(node)\n\t{\n\t\tnode.style.filter += 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src=\\'' +\n\t\t\tmxClient.imageBasePath + '/transparent.gif\\', sizingMethod=\\'scale\\')';\n\t},\n\n\t/**\n\t * Function: linkAction\n\t * \n\t * Adds a hyperlink to the specified parent that invokes action on the\n\t * specified editor.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> that will execute the action.\n\t * action - String that defines the name of the action to be executed.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkAction: function(parent, text, editor, action, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor.execute(action);\n\t\t}, pad);\n\t},\n\n\t/**\n\t * Function: linkInvoke\n\t * \n\t * Adds a hyperlink to the specified parent that invokes the specified\n\t * function on the editor passing along the specified argument. The\n\t * function name is the name of a function of the editor instance,\n\t * not an action name.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * editor - <mxEditor> instance to execute the function on.\n\t * functName - String that represents the name of the function.\n\t * arg - Object that represents the argument to the function.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlinkInvoke: function(parent, text, editor, functName, arg, pad)\n\t{\n\t\treturn mxUtils.link(parent, text, function()\n\t\t{\n\t\t\teditor[functName](arg);\n\t\t}, pad);\n\t},\n\t\n\t/**\n\t * Function: link\n\t * \n\t * Adds a hyperlink to the specified parent and invokes the given function\n\t * when the link is clicked.\n\t * \n\t * Parameters:\n\t * \n\t * parent - DOM node to contain the new link.\n\t * text - String that is used as the link label.\n\t * funct - Function to execute when the link is clicked.\n\t * pad - Optional left-padding for the link. Default is 0.\n\t */\n\tlink: function(parent, text, funct, pad)\n\t{\n\t\tvar a = document.createElement('span');\n\t\t\n\t\ta.style.color = 'blue';\n\t\ta.style.textDecoration = 'underline';\n\t\ta.style.cursor = 'pointer';\n\t\t\n\t\tif (pad != null)\n\t\t{\n\t\t\ta.style.paddingLeft = pad+'px';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(a, 'click', funct);\n\t\tmxUtils.write(a, text);\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tparent.appendChild(a);\n\t\t}\n\t\t\n\t\treturn a;\n\t},\n\n\t/**\n\t * Function: getDocumentSize\n\t * \n\t * Returns the client size for the current document as an <mxRectangle>.\n\t */\n\tgetDocumentSize: function()\n\t{\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\ttry\n\t\t{\n\t\t\treturn new mxRectangle(0, 0, b.clientWidth || d.clientWidth, Math.max(b.clientHeight || 0, d.clientHeight));\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\treturn new mxRectangle();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: fit\n\t * \n\t * Makes sure the given node is inside the visible area of the window. This\n\t * is done by setting the left and top in the style. \n\t */\n\tfit: function(node)\n\t{\n\t\tvar ds = mxUtils.getDocumentSize();\n\t\tvar left = parseInt(node.offsetLeft);\n\t\tvar width = parseInt(node.offsetWidth);\n\t\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(node.ownerDocument);\n\t\tvar sl = offset.x;\n\t\tvar st = offset.y;\n\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\tvar right = (sl) + ds.width;\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\tnode.style.left = Math.max(sl, right - width) + 'px';\n\t\t}\n\t\t\n\t\tvar top = parseInt(node.offsetTop);\n\t\tvar height = parseInt(node.offsetHeight);\n\t\t\n\t\tvar bottom = st + ds.height;\n\t\t\n\t\tif (top + height > bottom)\n\t\t{\n\t\t\tnode.style.top = Math.max(st, bottom - height) + 'px';\n\t\t}\n\t},\n\n\t/**\n\t * Function: load\n\t * \n\t * Loads the specified URL *synchronously* and returns the <mxXmlRequest>.\n\t * Throws an exception if the file cannot be loaded. See <mxUtils.get> for\n\t * an asynchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * try\n\t * {\n\t *   var req = mxUtils.load(filename);\n\t *   var root = req.getDocumentElement();\n\t *   // Process XML DOM...\n\t * }\n\t * catch (ex)\n\t * {\n\t *   mxUtils.alert('Cannot load '+filename+': '+ex);\n\t * }\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t */\n\tload: function(url)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET', false);\n\t\treq.send();\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: get\n\t * \n\t * Loads the specified URL *asynchronously* and invokes the given functions\n\t * depending on the request status. Returns the <mxXmlRequest> in use. Both\n\t * functions take the <mxXmlRequest> as the only parameter. See\n\t * <mxUtils.load> for a synchronous implementation.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *    var node = req.getDocumentElement();\n\t *    // Process XML DOM...\n\t * });\n\t * (end)\n\t * \n\t * So for example, to load a diagram into an existing graph model, the\n\t * following code is used.\n\t * \n\t * (code)\n\t * mxUtils.get(url, function(req)\n\t * {\n\t *   var node = req.getDocumentElement();\n\t *   var dec = new mxCodec(node.ownerDocument);\n\t *   dec.decode(node, graph.getModel());\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t * binary - Optional boolean parameter that specifies if the request is\n\t * binary.\n\t * timeout - Optional timeout in ms before calling ontimeout.\n\t * ontimeout - Optional function to execute on timeout.\n\t */\n\tget: function(url, onload, onerror, binary, timeout, ontimeout)\n\t{\n\t\tvar req = new mxXmlRequest(url, null, 'GET');\n\t\t\n\t\tif (binary != null)\n\t\t{\n\t\t\treq.setBinary(binary);\n\t\t}\n\t\t\n\t\treq.send(onload, onerror, timeout, ontimeout);\n\t\t\n\t\treturn req;\n\t},\n\n\t/**\n\t * Function: getAll\n\t * \n\t * Loads the URLs in the given array *asynchronously* and invokes the given function\n\t * if all requests returned with a valid 2xx status. The error handler is invoked\n\t * once on the first error or invalid response.\n\t *\n\t * Parameters:\n\t * \n\t * urls - Array of URLs to be loaded.\n\t * onload - Callback with array of <mxXmlRequests>.\n\t * onerror - Optional function to execute on error.\n\t */\n\tgetAll: function(urls, onload, onerror)\n\t{\n\t\tvar remain = urls.length;\n\t\tvar result = [];\n\t\tvar errors = 0;\n\t\tvar err = function()\n\t\t{\n\t\t\tif (errors == 0 && onerror != null)\n\t\t\t{\n\t\t\t\tonerror();\n\t\t\t}\n\n\t\t\terrors++;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < urls.length; i++)\n\t\t{\n\t\t\t(function(url, index)\n\t\t\t{\n\t\t\t\tmxUtils.get(url, function(req)\n\t\t\t\t{\n\t\t\t\t\tvar status = req.getStatus();\n\t\t\t\t\t\n\t\t\t\t\tif (status < 200 || status > 299)\n\t\t\t\t\t{\n\t\t\t\t\t\terr();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult[index] = req;\n\t\t\t\t\t\tremain--;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (remain == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonload(result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, err);\n\t\t\t})(urls[i], i);\n\t\t}\n\t\t\n\t\tif (remain == 0)\n\t\t{\n\t\t\tonload(result);\t\t\t\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: post\n\t * \n\t * Posts the specified params to the given URL *asynchronously* and invokes\n\t * the given functions depending on the request status. Returns the\n\t * <mxXmlRequest> in use. Both functions take the <mxXmlRequest> as the\n\t * only parameter. Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxUtils.post(url, 'key=value', function(req)\n\t * {\n\t * \tmxUtils.alert('Ready: '+req.isReady()+' Status: '+req.getStatus());\n\t *  // Process req.getDocumentElement() using DOM API if OK...\n\t * });\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the post request.\n\t * onload - Optional function to execute for a successful response.\n\t * onerror - Optional function to execute on error.\n\t */\n\tpost: function(url, params, onload, onerror)\n\t{\n\t\treturn new mxXmlRequest(url, params).send(onload, onerror);\n\t},\n\t\n\t/**\n\t * Function: submit\n\t * \n\t * Submits the given parameters to the specified URL using\n\t * <mxXmlRequest.simulate> and returns the <mxXmlRequest>.\n\t * Make sure to use encodeURIComponent for the parameter\n\t * values.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * params - Parameters for the form.\n\t * doc - Document to create the form in.\n\t * target - Target to send the form result to.\n\t */\n\tsubmit: function(url, params, doc, target)\n\t{\n\t\treturn new mxXmlRequest(url, params).simulate(doc, target);\n\t},\n\t\n\t/**\n\t * Function: loadInto\n\t * \n\t * Loads the specified URL *asynchronously* into the specified document,\n\t * invoking onload after the document has been loaded. This implementation\n\t * does not use <mxXmlRequest>, but the document.load method.\n\t * \n\t * Parameters:\n\t * \n\t * url - URL to get the data from.\n\t * doc - The document to load the URL into.\n\t * onload - Function to execute when the URL has been loaded.\n\t */\n\tloadInto: function(url, doc, onload)\n\t{\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tdoc.onreadystatechange = function ()\n\t\t\t{\n\t\t\t\tif (doc.readyState == 4)\n\t\t\t\t{\n\t\t\t\t\tonload();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.addEventListener('load', onload, false);\n\t\t}\n\t\t\n\t\tdoc.load(url);\n\t},\n\t\n\t/**\n\t * Function: getValue\n\t * \n\t * Returns the value for the given key in the given associative array or\n\t * the given default value if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null.\n\t */\n\tgetValue: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\t\t\t\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\t\n\t/**\n\t * Function: getNumber\n\t * \n\t * Returns the numeric value for the given key in the given associative\n\t * array or the given default value (or 0) if the value is null. The value\n\t * is converted to a numeric value using the Number function.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is 0.\n\t */\n\tgetNumber: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue || 0;\t\t\t\n\t\t}\n\t\t\n\t\treturn Number(value);\n\t},\n\t\n\t/**\n\t * Function: getColor\n\t * \n\t * Returns the color value for the given key in the given associative\n\t * array or the given default value if the value is null. If the value\n\t * is <mxConstants.NONE> then null is returned.\n\t * \n\t * Parameters:\n\t * \n\t * array - Associative array that contains the value for the key.\n\t * key - Key whose value should be returned.\n\t * defaultValue - Value to be returned if the value for the given\n\t * key is null. Default is null.\n\t */\n\tgetColor: function(array, key, defaultValue)\n\t{\n\t\tvar value = (array != null) ? array[key] : null;\n\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = defaultValue;\n\t\t}\n\t\telse if (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: clone\n\t * \n\t * Recursively clones the specified object ignoring all fieldnames in the\n\t * given array of transient fields. <mxObjectIdentity.FIELD_NAME> is always\n\t * ignored by this function.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to be cloned.\n\t * transients - Optional array of strings representing the fieldname to be\n\t * ignored.\n\t * shallow - Optional boolean argument to specify if a shallow clone should\n\t * be created, that is, one where all object references are not cloned or,\n\t * in other words, one where only atomic (strings, numbers) values are\n\t * cloned. Default is false.\n\t */\n\tclone: function(obj, transients, shallow)\n\t{\n\t\tshallow = (shallow != null) ? shallow : false;\n\t\tvar clone = null;\n\t\t\n\t\tif (obj != null && typeof(obj.constructor) == 'function')\n\t\t{\n\t\t\tclone = new obj.constructor();\n\t\t\t\n\t\t    for (var i in obj)\n\t\t    {\n\t\t    \tif (i != mxObjectIdentity.FIELD_NAME && (transients == null ||\n\t\t    \t\tmxUtils.indexOf(transients, i) < 0))\n\t\t    \t{\n\t\t\t    \tif (!shallow && typeof(obj[i]) == 'object')\n\t\t\t    \t{\n\t\t\t            clone[i] = mxUtils.clone(obj[i]);\n\t\t\t        }\n\t\t\t        else\n\t\t\t        {\n\t\t\t            clone[i] = obj[i];\n\t\t\t        }\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t    return clone;\n\t},\n\n\t/**\n\t * Function: equalPoints\n\t * \n\t * Compares all mxPoints in the given lists.\n\t * \n\t * Parameters:\n\t * \n\t * a - Array of <mxPoints> to be compared.\n\t * b - Array of <mxPoints> to be compared.\n\t */\n\tequalPoints: function(a, b)\n\t{\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var i = 0; i < a.length; i++)\n\t\t\t{\n\t\t\t\tif (a[i] == b[i] || (a[i] != null && !a[i].equals(b[i])))\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: equalEntries\n\t * \n\t * Returns true if all properties of the given objects are equal. Values\n\t * with NaN are equal to NaN and unequal to any other value.\n\t * \n\t * Parameters:\n\t * \n\t * a - First object to be compared.\n\t * b - Second object to be compared.\n\t */\n\tequalEntries: function(a, b)\n\t{\n\t\t// Counts keys in b to check if all values have been compared\n\t\tvar count = 0;\n\n\t\tif ((a == null && b != null) || (a != null && b == null) ||\n\t\t\t(a != null && b != null && a.length != b.length))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\telse if (a != null && b != null)\n\t\t{\n\t\t\tfor (var key in b)\n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var key in a)\n\t\t\t{\n\t\t\t\tcount--\n\t\t\t\t\n\t\t\t\tif ((!mxUtils.isNaN(a[key]) || !mxUtils.isNaN(b[key])) && a[key] != b[key])\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn count == 0;\n\t},\n\t\n\t/**\n\t * Function: removeDuplicates\n\t * \n\t * Removes all duplicates from the given array.\n\t */\n\tremoveDuplicates: function(arr)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < arr.length; i++)\n\t\t{\n\t\t\tif (!dict.get(arr[i]))\n\t\t\t{\n\t\t\t\tresult.push(arr[i]);\n\t\t\t\tdict.put(arr[i], true);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: isNaN\n\t *\n\t * Returns true if the given value is of type number and isNaN returns true.\n\t */\n\tisNaN: function(value)\n\t{\n\t\treturn typeof(value) == 'number' && isNaN(value);\n\t},\n\t\n\t/**\n\t * Function: extend\n\t *\n\t * Assigns a copy of the superclass prototype to the subclass prototype.\n\t * Note that this does not call the constructor of the superclass at this\n\t * point, the superclass constructor should be called explicitely in the\n\t * subclass constructor. Below is an example.\n\t * \n\t * (code)\n\t * MyGraph = function(container, model, renderHint, stylesheet)\n\t * {\n\t *   mxGraph.call(this, container, model, renderHint, stylesheet);\n\t * }\n\t * \n\t * mxUtils.extend(MyGraph, mxGraph);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * ctor - Constructor of the subclass.\n\t * superCtor - Constructor of the superclass.\n\t */\n\textend: function(ctor, superCtor)\n\t{\n\t\tvar f = function() {};\n\t\tf.prototype = superCtor.prototype;\n\t\t\n\t\tctor.prototype = new f();\n\t\tctor.prototype.constructor = ctor;\n\t},\n\n\t/**\n\t * Function: toString\n\t * \n\t * Returns a textual representation of the specified object.\n\t * \n\t * Parameters:\n\t * \n\t * obj - Object to return the string representation for.\n\t */\n\ttoString: function(obj)\n\t{\n\t    var output = '';\n\t    \n\t    for (var i in obj)\n\t    {\n\t    \ttry\n\t    \t{\n\t\t\t    if (obj[i] == null)\n\t\t\t    {\n\t\t            output += i + ' = [null]\\n';\n\t\t\t    }\n\t\t\t    else if (typeof(obj[i]) == 'function')\n\t\t\t    {\n\t\t            output += i + ' => [Function]\\n';\n\t\t        }\n\t\t        else if (typeof(obj[i]) == 'object')\n\t\t        {\n\t\t        \tvar ctor = mxUtils.getFunctionName(obj[i].constructor); \n\t\t            output += i + ' => [' + ctor + ']\\n';\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            output += i + ' = ' + obj[i] + '\\n';\n\t\t        }\n\t    \t}\n\t    \tcatch (e)\n\t    \t{\n\t    \t\toutput += i + '=' + e.message;\n\t    \t}\n\t    }\n\t    \n\t    return output;\n\t},\n\n\t/**\n\t * Function: toRadians\n\t * \n\t * Converts the given degree to radians.\n\t */\n\ttoRadians: function(deg)\n\t{\n\t\treturn Math.PI * deg / 180;\n\t},\n\n\t/**\n\t * Function: toDegree\n\t * \n\t * Converts the given radians to degree.\n\t */\n\ttoDegree: function(rad)\n\t{\n\t\treturn rad * 180 / Math.PI;\n\t},\n\t\n\t/**\n\t * Function: arcToCurves\n\t * \n\t * Converts the given arc to a series of curves.\n\t */\n\tarcToCurves: function(x0, y0, r1, r2, angle, largeArcFlag, sweepFlag, x, y)\n\t{\n\t\tx -= x0;\n\t\ty -= y0;\n\t\t\n        if (r1 === 0 || r2 === 0) \n        {\n        \treturn result;\n        }\n        \n        var fS = sweepFlag;\n        var psai = angle;\n        r1 = Math.abs(r1);\n        r2 = Math.abs(r2);\n        var ctx = -x / 2;\n        var cty = -y / 2;\n        var cpsi = Math.cos(psai * Math.PI / 180);\n        var spsi = Math.sin(psai * Math.PI / 180);\n        var rxd = cpsi * ctx + spsi * cty;\n        var ryd = -1 * spsi * ctx + cpsi * cty;\n        var rxdd = rxd * rxd;\n        var rydd = ryd * ryd;\n        var r1x = r1 * r1;\n        var r2y = r2 * r2;\n        var lamda = rxdd / r1x + rydd / r2y;\n        var sds;\n        \n        if (lamda > 1) \n        {\n        \tr1 = Math.sqrt(lamda) * r1;\n        \tr2 = Math.sqrt(lamda) * r2;\n        \tsds = 0;\n        }  \n        else\n        {\n        \tvar seif = 1;\n            \n        \tif (largeArcFlag === fS) \n        \t{\n        \t\tseif = -1;\n        \t}\n            \n        \tsds = seif * Math.sqrt((r1x * r2y - r1x * rydd - r2y * rxdd) / (r1x * rydd + r2y * rxdd));\n        }\n        \n        var txd = sds * r1 * ryd / r2;\n        var tyd = -1 * sds * r2 * rxd / r1;\n        var tx = cpsi * txd - spsi * tyd + x / 2;\n        var ty = spsi * txd + cpsi * tyd + y / 2;\n        var rad = Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1) - Math.atan2(0, 1);\n        var s1 = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        rad = Math.atan2((-ryd - tyd) / r2, (-rxd - txd) / r1) - Math.atan2((ryd - tyd) / r2, (rxd - txd) / r1);\n        var dr = (rad >= 0) ? rad : 2 * Math.PI + rad;\n        \n        if (fS == 0 && dr > 0) \n        {\n        \tdr -= 2 * Math.PI;\n        }\n        else if (fS != 0 && dr < 0) \n        {\n        \tdr += 2 * Math.PI;\n        }\n        \n        var sse = dr * 2 / Math.PI;\n        var seg = Math.ceil(sse < 0 ? -1 * sse : sse);\n        var segr = dr / seg;\n        var t = 8/3 * Math.sin(segr / 4) * Math.sin(segr / 4) / Math.sin(segr / 2);\n        var cpsir1 = cpsi * r1;\n        var cpsir2 = cpsi * r2;\n        var spsir1 = spsi * r1;\n        var spsir2 = spsi * r2;\n        var mc = Math.cos(s1);\n        var ms = Math.sin(s1);\n        var x2 = -t * (cpsir1 * ms + spsir2 * mc);\n        var y2 = -t * (spsir1 * ms - cpsir2 * mc);\n        var x3 = 0;\n        var y3 = 0;\n\n\t\tvar result = [];\n        \n        for (var n = 0; n < seg; ++n) \n        {\n            s1 += segr;\n            mc = Math.cos(s1);\n            ms = Math.sin(s1);\n            \n            x3 = cpsir1 * mc - spsir2 * ms + tx;\n            y3 = spsir1 * mc + cpsir2 * ms + ty;\n            var dx = -t * (cpsir1 * ms + spsir2 * mc);\n            var dy = -t * (spsir1 * ms - cpsir2 * mc);\n            \n            // CurveTo updates x0, y0 so need to restore it\n            var index = n * 6;\n            result[index] = Number(x2 + x0);\n            result[index + 1] = Number(y2 + y0);\n            result[index + 2] = Number(x3 - dx + x0);\n            result[index + 3] = Number(y3 - dy + y0);\n            result[index + 4] = Number(x3 + x0);\n            result[index + 5] = Number(y3 + y0);\n            \n\t\t\tx2 = x3 + dx;\n            y2 = y3 + dy;\n        }\n        \n        return result;\n\t},\n\n\t/**\n\t * Function: getBoundingBox\n\t * \n\t * Returns the bounding box for the rotated rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * rect - <mxRectangle> to be rotated.\n\t * angle - Number that represents the angle (in degrees).\n\t * cx - Optional <mxPoint> that represents the rotation center. If no\n\t * rotation center is given then the center of rect is used.\n\t */\n\tgetBoundingBox: function(rect, rotation, cx)\n\t{\n        var result = null;\n\n        if (rect != null && rotation != null && rotation != 0)\n        {\n            var rad = mxUtils.toRadians(rotation);\n            var cos = Math.cos(rad);\n            var sin = Math.sin(rad);\n\n            cx = (cx != null) ? cx : new mxPoint(rect.x + rect.width / 2, rect.y  + rect.height / 2);\n\n            var p1 = new mxPoint(rect.x, rect.y);\n            var p2 = new mxPoint(rect.x + rect.width, rect.y);\n            var p3 = new mxPoint(p2.x, rect.y + rect.height);\n            var p4 = new mxPoint(rect.x, p3.y);\n\n            p1 = mxUtils.getRotatedPoint(p1, cos, sin, cx);\n            p2 = mxUtils.getRotatedPoint(p2, cos, sin, cx);\n            p3 = mxUtils.getRotatedPoint(p3, cos, sin, cx);\n            p4 = mxUtils.getRotatedPoint(p4, cos, sin, cx);\n\n            result = new mxRectangle(p1.x, p1.y, 0, 0);\n            result.add(new mxRectangle(p2.x, p2.y, 0, 0));\n            result.add(new mxRectangle(p3.x, p3.y, 0, 0));\n            result.add(new mxRectangle(p4.x, p4.y, 0, 0));\n        }\n\n        return result;\n\t},\n\n\t/**\n\t * Function: getRotatedPoint\n\t * \n\t * Rotates the given point by the given cos and sin.\n\t */\n\tgetRotatedPoint: function(pt, cos, sin, c)\n\t{\n\t\tc = (c != null) ? c : new mxPoint();\n\t\tvar x = pt.x - c.x;\n\t\tvar y = pt.y - c.y;\n\n\t\tvar x1 = x * cos - y * sin;\n\t\tvar y1 = y * cos + x * sin;\n\n\t\treturn new mxPoint(x1 + c.x, y1 + c.y);\n\t},\n\t\n\t/**\n\t * Returns an integer mask of the port constraints of the given map\n\t * @param dict the style map to determine the port constraints for\n\t * @param defaultValue Default value to return if the key is undefined.\n\t * @return the mask of port constraint directions\n\t * \n\t * Parameters:\n\t * \n\t * terminal - <mxCelState> that represents the terminal.\n\t * edge - <mxCellState> that represents the edge.\n\t * source - Boolean that specifies if the terminal is the source terminal.\n\t * defaultValue - Default value to be returned.\n\t */\n\tgetPortConstraints: function(terminal, edge, source, defaultValue)\n\t{\n\t\tvar value = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT,\n\t\t\tmxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_SOURCE_PORT_CONSTRAINT :\n\t\t\t\tmxConstants.STYLE_TARGET_PORT_CONSTRAINT, null));\n\t\t\n\t\tif (value == null)\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar directions = value.toString();\n\t\t\tvar returnValue = mxConstants.DIRECTION_MASK_NONE;\n\t\t\tvar constraintRotationEnabled = mxUtils.getValue(terminal.style, mxConstants.STYLE_PORT_CONSTRAINT_ROTATION, 0);\n\t\t\tvar rotation = 0;\n\t\t\t\n\t\t\tif (constraintRotationEnabled == 1)\n\t\t\t{\n\t\t\t\trotation = mxUtils.getValue(terminal.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tvar quad = 0;\n\n\t\t\tif (rotation > 45)\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t\t\n\t\t\t\tif (rotation >= 135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (rotation < -45)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\tif (rotation <= -135)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_NORTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_WEST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_SOUTH) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (directions.indexOf(mxConstants.DIRECTION_EAST) >= 0)\n\t\t\t{\n\t\t\t\tswitch (quad)\n\t\t\t\t{\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\treturnValue |= mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: reversePortConstraints\n\t * \n\t * Reverse the port constraint bitmask. For example, north | east\n\t * becomes south | west\n\t */\n\treversePortConstraints: function(constraint)\n\t{\n\t\tvar result = 0;\n\t\t\n\t\tresult = (constraint & mxConstants.DIRECTION_MASK_WEST) << 3;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_NORTH) << 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_SOUTH) >> 1;\n\t\tresult |= (constraint & mxConstants.DIRECTION_MASK_EAST) >> 3;\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: findNearestSegment\n\t * \n\t * Finds the index of the nearest segment on the given cell state for\n\t * the specified coordinate pair.\n\t */\n\tfindNearestSegment: function(state, x, y)\n\t{\n\t\tvar index = -1;\n\t\t\n\t\tif (state.absolutePoints.length > 0)\n\t\t{\n\t\t\tvar last = state.absolutePoints[0];\n\t\t\tvar min = null;\n\t\t\t\n\t\t\tfor (var i = 1; i < state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tvar current = state.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(last.x, last.y,\n\t\t\t\t\tcurrent.x, current.y, x, y);\n\t\t\t\t\n\t\t\t\tif (min == null || dist < min)\n\t\t\t\t{\n\t\t\t\t\tmin = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t}\n\n\t\t\t\tlast = current;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn index;\n\t},\n\n\t/**\n\t * Function: getDirectedBounds\n\t * \n\t * Adds the given margins to the given rectangle and rotates and flips the\n\t * rectangle according to the respective styles in style.\n\t */\n\tgetDirectedBounds: function (rect, m, style, flipH, flipV)\n\t{\n\t\tvar d = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\tflipH = (flipH != null) ? flipH : mxUtils.getValue(style, mxConstants.STYLE_FLIPH, false);\n\t\tflipV = (flipV != null) ? flipV : mxUtils.getValue(style, mxConstants.STYLE_FLIPV, false);\n\n\t\tm.x = Math.round(Math.max(0, Math.min(rect.width, m.x)));\n\t\tm.y = Math.round(Math.max(0, Math.min(rect.height, m.y)));\n\t\tm.width = Math.round(Math.max(0, Math.min(rect.width, m.width)));\n\t\tm.height = Math.round(Math.max(0, Math.min(rect.height, m.height)));\n\t\t\n\t\tif ((flipV && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipH && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.width;\n\t\t\tm.width = tmp;\n\t\t}\n\t\t\t\n\t\tif ((flipH && (d == mxConstants.DIRECTION_SOUTH || d == mxConstants.DIRECTION_NORTH)) ||\n\t\t\t(flipV && (d == mxConstants.DIRECTION_EAST || d == mxConstants.DIRECTION_WEST)))\n\t\t{\n\t\t\tvar tmp = m.y;\n\t\t\tm.y = m.height;\n\t\t\tm.height = tmp;\n\t\t}\n\t\t\n\t\tvar m2 = mxRectangle.fromRectangle(m);\n\t\t\n\t\tif (d == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tm2.y = m.x;\n\t\t\tm2.x = m.height;\n\t\t\tm2.width = m.y;\n\t\t\tm2.height = m.width;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tm2.y = m.height;\n\t\t\tm2.x = m.width;\n\t\t\tm2.width = m.x;\n\t\t\tm2.height = m.y;\n\t\t}\n\t\telse if (d == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tm2.y = m.width;\n\t\t\tm2.x = m.y;\n\t\t\tm2.width = m.height;\n\t\t\tm2.height = m.x;\n\t\t}\n\t\t\n\t\treturn new mxRectangle(rect.x + m2.x, rect.y + m2.y, rect.width - m2.width - m2.x, rect.height - m2.height - m2.y);\n\t},\n\n\t/**\n\t * Function: getPerimeterPoint\n\t * \n\t * Returns the intersection between the polygon defined by the array of\n\t * points and the line between center and point.\n\t */\n\tgetPerimeterPoint: function (pts, center, point)\n\t{\n\t\tvar min = null;\n\t\t\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tvar pt = mxUtils.intersection(pts[i].x, pts[i].y, pts[i + 1].x, pts[i + 1].y,\n\t\t\t\tcenter.x, center.y, point.x, point.y);\n\t\t\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar dx = point.x - pt.x;\n\t\t\t\tvar dy = point.y - pt.y;\n\t\t\t\tvar ip = {p: pt, distSq: dy * dy + dx * dx};\n\t\t\t\t\n\t\t\t\tif (ip != null && (min == null || min.distSq > ip.distSq))\n\t\t\t\t{\n\t\t\t\t\tmin = ip;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (min != null) ? min.p : null;\n\t},\n\n\t/**\n\t * Function: rectangleIntersectsSegment\n\t * \n\t * Returns true if the given rectangle intersects the given segment.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the rectangle.\n\t * p1 - <mxPoint> that represents the first point of the segment.\n\t * p2 - <mxPoint> that represents the second point of the segment.\n\t */\n\trectangleIntersectsSegment: function(bounds, p1, p2)\n\t{\n\t\tvar top = bounds.y;\n\t\tvar left = bounds.x;\n\t\tvar bottom = top + bounds.height;\n\t\tvar right = left + bounds.width;\n\t\t\t\n\t\t// Find min and max X for the segment\n\t\tvar minX = p1.x;\n\t\tvar maxX = p2.x;\n\t\t\n\t\tif (p1.x > p2.x)\n\t\t{\n\t\t  minX = p2.x;\n\t\t  maxX = p1.x;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's x-projections\n\t\tif (maxX > right)\n\t\t{\n\t\t  maxX = right;\n\t\t}\n\t\t\n\t\tif (minX < left)\n\t\t{\n\t\t  minX = left;\n\t\t}\n\t\t\n\t\tif (minX > maxX) // If their projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\t// Find corresponding min and max Y for min and max X we found before\n\t\tvar minY = p1.y;\n\t\tvar maxY = p2.y;\n\t\tvar dx = p2.x - p1.x;\n\t\t\n\t\tif (Math.abs(dx) > 0.0000001)\n\t\t{\n\t\t  var a = (p2.y - p1.y) / dx;\n\t\t  var b = p1.y - a * p1.x;\n\t\t  minY = a * minX + b;\n\t\t  maxY = a * maxX + b;\n\t\t}\n\t\t\n\t\tif (minY > maxY)\n\t\t{\n\t\t  var tmp = maxY;\n\t\t  maxY = minY;\n\t\t  minY = tmp;\n\t\t}\n\t\t\n\t\t// Find the intersection of the segment's and rectangle's y-projections\n\t\tif (maxY > bottom)\n\t\t{\n\t\t  maxY = bottom;\n\t\t}\n\t\t\n\t\tif (minY < top)\n\t\t{\n\t\t  minY = top;\n\t\t}\n\t\t\n\t\tif (minY > maxY) // If Y-projections do not intersect return false\n\t\t{\n\t\t  return false;\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\t\n\t/**\n\t * Function: contains\n\t * \n\t * Returns true if the specified point (x, y) is contained in the given rectangle.\n\t * \n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the area.\n\t * x - X-coordinate of the point.\n\t * y - Y-coordinate of the point.\n\t */\n\tcontains: function(bounds, x, y)\n\t{\n\t\treturn (bounds.x <= x && bounds.x + bounds.width >= x &&\n\t\t\t\tbounds.y <= y && bounds.y + bounds.height >= y);\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersects: function(a, b)\n\t{\n\t\tvar tw = a.width;\n\t\tvar th = a.height;\n\t\tvar rw = b.width;\n\t\tvar rh = b.height;\n\t\t\n\t\tif (rw <= 0 || rh <= 0 || tw <= 0 || th <= 0)\n\t\t{\n\t\t    return false;\n\t\t}\n\t\t\n\t\tvar tx = a.x;\n\t\tvar ty = a.y;\n\t\tvar rx = b.x;\n\t\tvar ry = b.y;\n\t\t\n\t\trw += rx;\n\t\trh += ry;\n\t\ttw += tx;\n\t\tth += ty;\n\n\t\treturn ((rw < rx || rw > tx) &&\n\t\t\t(rh < ry || rh > ty) &&\n\t\t\t(tw < tx || tw > rx) &&\n\t\t\t(th < ty || th > ry));\n\t},\n\n\t/**\n\t * Function: intersects\n\t * \n\t * Returns true if the two rectangles intersect.\n\t * \n\t * Parameters:\n\t * \n\t * a - <mxRectangle> to be checked for intersection.\n\t * b - <mxRectangle> to be checked for intersection.\n\t */\n\tintersectsHotspot: function(state, x, y, hotspot, min, max)\n\t{\n\t\thotspot = (hotspot != null) ? hotspot : 1;\n\t\tmin = (min != null) ? min : 0;\n\t\tmax = (max != null) ? max : 0;\n\t\t\n\t\tif (hotspot > 0)\n\t\t{\n\t\t\tvar cx = state.getCenterX();\n\t\t\tvar cy = state.getCenterY();\n\t\t\tvar w = state.width;\n\t\t\tvar h = state.height;\n\t\t\t\n\t\t\tvar start = mxUtils.getValue(state.style, mxConstants.STYLE_STARTSIZE) * state.view.scale;\n\n\t\t\tif (start > 0)\n\t\t\t{\n\t\t\t\tif (mxUtils.getValue(state.style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tcy = state.y + start / 2;\n\t\t\t\t\th = start;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcx = state.x + start / 2;\n\t\t\t\t\tw = start;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tw = Math.max(min, w * hotspot);\n\t\t\th = Math.max(min, h * hotspot);\n\t\t\t\n\t\t\tif (max > 0)\n\t\t\t{\n\t\t\t\tw = Math.min(w, max);\n\t\t\t\th = Math.min(h, max);\n\t\t\t}\n\t\t\t\n\t\t\tvar rect = new mxRectangle(cx - w / 2, cy - h / 2, w, h);\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\treturn mxUtils.contains(rect, x, y);\t\t\t\n\t\t}\n\t\t\n\t\treturn true;\n\t},\n\n\t/**\n\t * Function: getOffset\n\t * \n\t * Returns the offset for the specified container as an <mxPoint>. The\n\t * offset is the distance from the top left corner of the container to the\n\t * top left corner of the document.\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to return the offset for.\n\t * scollOffset - Optional boolean to add the scroll offset of the document.\n\t * Default is false.\n\t */\n\tgetOffset: function(container, scrollOffset)\n\t{\n\t\tvar offsetLeft = 0;\n\t\tvar offsetTop = 0;\n\t\t\n\t\t// Ignores document scroll origin for fixed elements\n\t\tvar fixed = false;\n\t\tvar node = container;\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\n\t\twhile (node != null && node != b && node != d && !fixed)\n\t\t{\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tif (!scrollOffset && !fixed)\n\t\t{\n\t\t\tvar offset = mxUtils.getDocumentScrollOrigin(container.ownerDocument);\n\t\t\toffsetLeft += offset.x;\n\t\t\toffsetTop += offset.y;\n\t\t}\n\t\t\n\t\tvar r = container.getBoundingClientRect();\n\t\t\n\t\tif (r != null)\n\t\t{\n\t\t\toffsetLeft += r.left;\n\t\t\toffsetTop += r.top;\n\t\t}\n\t\t\n\t\treturn new mxPoint(offsetLeft, offsetTop);\n\t},\n\n\t/**\n\t * Function: getDocumentScrollOrigin\n\t * \n\t * Returns the scroll origin of the given document or the current document\n\t * if no document is given.\n\t */\n\tgetDocumentScrollOrigin: function(doc)\n\t{\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\treturn new mxPoint(doc.body.scrollLeft, doc.body.scrollTop);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar wnd = doc.defaultView || doc.parentWindow;\n\t\t\t\n\t\t\tvar x = (wnd != null && window.pageXOffset !== undefined) ? window.pageXOffset : (document.documentElement || document.body.parentNode || document.body).scrollLeft;\n\t\t\tvar y = (wnd != null && window.pageYOffset !== undefined) ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: getScrollOrigin\n\t * \n\t * Returns the top, left corner of the viewrect as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node whose scroll origin should be returned.\n\t * includeAncestors - Whether the scroll origin of the ancestors should be\n\t * included. Default is false.\n\t * includeDocument - Whether the scroll origin of the document should be\n\t * included. Default is true.\n\t */\n\tgetScrollOrigin: function(node, includeAncestors, includeDocument)\n\t{\n\t\tincludeAncestors = (includeAncestors != null) ? includeAncestors : false;\n\t\tincludeDocument = (includeDocument != null) ? includeDocument : true;\n\t\t\n\t\tvar doc = (node != null) ? node.ownerDocument : document;\n\t\tvar b = doc.body;\n\t\tvar d = doc.documentElement;\n\t\tvar result = new mxPoint();\n\t\tvar fixed = false;\n\n\t\twhile (node != null && node != b && node != d)\n\t\t{\n\t\t\tif (!isNaN(node.scrollLeft) && !isNaN(node.scrollTop))\n\t\t\t{\n\t\t\t\tresult.x += node.scrollLeft;\n\t\t\t\tresult.y += node.scrollTop;\n\t\t\t}\n\t\t\t\n\t\t\tvar style = mxUtils.getCurrentStyle(node);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tfixed = fixed || style.position == 'fixed';\n\t\t\t}\n\n\t\t\tnode = (includeAncestors) ? node.parentNode : null;\n\t\t}\n\n\t\tif (!fixed && includeDocument)\n\t\t{\n\t\t\tvar origin = mxUtils.getDocumentScrollOrigin(doc);\n\n\t\t\tresult.x += origin.x;\n\t\t\tresult.y += origin.y;\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: convertPoint\n\t * \n\t * Converts the specified point (x, y) using the offset of the specified\n\t * container and returns a new <mxPoint> with the result.\n\t * \n\t * (code)\n\t * var pt = mxUtils.convertPoint(graph.container,\n\t *   mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * container - DOM node to use for the offset.\n\t * x - X-coordinate of the point to be converted.\n\t * y - Y-coordinate of the point to be converted.\n\t */\n\tconvertPoint: function(container, x, y)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(container, false);\n\t\tvar offset = mxUtils.getOffset(container);\n\n\t\toffset.x -= origin.x;\n\t\toffset.y -= origin.y;\n\t\t\n\t\treturn new mxPoint(x - offset.x, y - offset.y);\n\t},\n\t\n\t/**\n\t * Function: ltrim\n\t * \n\t * Strips all whitespaces from the beginning of the string. Without the\n\t * second parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\tltrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"^[\" + chars + \"]+\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: rtrim\n\t * \n\t * Strips all whitespaces from the end of the string. Without the second\n\t * parameter, this will trim these characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\trtrim: function(str, chars)\n\t{\n\t\tchars = chars || \"\\\\s\";\n\t\t\n\t\treturn (str != null) ? str.replace(new RegExp(\"[\" + chars + \"]+$\", \"g\"), \"\") : null;\n\t},\n\t\n\t/**\n\t * Function: trim\n\t * \n\t * Strips all whitespaces from both end of the string.\n\t * Without the second parameter, Javascript function will trim these\n\t * characters:\n\t * \n\t * - \" \" (ASCII 32 (0x20)), an ordinary space\n\t * - \"\\t\" (ASCII 9 (0x09)), a tab\n\t * - \"\\n\" (ASCII 10 (0x0A)), a new line (line feed)\n\t * - \"\\r\" (ASCII 13 (0x0D)), a carriage return\n\t * - \"\\0\" (ASCII 0 (0x00)), the NUL-byte\n\t * - \"\\x0B\" (ASCII 11 (0x0B)), a vertical tab\n\t */\n\ttrim: function(str, chars)\n\t{\n\t\treturn mxUtils.ltrim(mxUtils.rtrim(str, chars), chars);\n\t},\n\t\n\t/**\n\t * Function: isNumeric\n\t * \n\t * Returns true if the specified value is numeric, that is, if it is not\n\t * null, not an empty string, not a HEX number and isNaN returns false.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisNumeric: function(n)\n\t{\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n) && (typeof(n) != 'string' || n.toLowerCase().indexOf('0x') < 0);\n\t},\n\n\t/**\n\t * Function: isInteger\n\t * \n\t * Returns true if the given value is an valid integer number.\n\t * \n\t * Parameters:\n\t * \n\t * n - String representing the possibly numeric value.\n\t */\n\tisInteger: function(n)\n\t{\n\t\treturn String(parseInt(n)) === String(n);\n\t},\n\n\t/**\n\t * Function: mod\n\t * \n\t * Returns the remainder of division of n by m. You should use this instead\n\t * of the built-in operation as the built-in operation does not properly\n\t * handle negative numbers.\n\t */\n\tmod: function(n, m)\n\t{\n\t\treturn ((n % m) + m) % m;\n\t},\n\n\t/**\n\t * Function: intersection\n\t * \n\t * Returns the intersection of two lines as an <mxPoint>.\n\t * \n\t * Parameters:\n\t * \n\t * x0 - X-coordinate of the first line's startpoint.\n\t * y0 - X-coordinate of the first line's startpoint.\n\t * x1 - X-coordinate of the first line's endpoint.\n\t * y1 - Y-coordinate of the first line's endpoint.\n\t * x2 - X-coordinate of the second line's startpoint.\n\t * y2 - Y-coordinate of the second line's startpoint.\n\t * x3 - X-coordinate of the second line's endpoint.\n\t * y3 - Y-coordinate of the second line's endpoint.\n\t */\n\tintersection: function (x0, y0, x1, y1, x2, y2, x3, y3)\n\t{\n\t\tvar denom = ((y3 - y2) * (x1 - x0)) - ((x3 - x2) * (y1 - y0));\n\t\tvar nume_a = ((x3 - x2) * (y0 - y2)) - ((y3 - y2) * (x0 - x2));\n\t\tvar nume_b = ((x1 - x0) * (y0 - y2)) - ((y1 - y0) * (x0 - x2));\n\n\t\tvar ua = nume_a / denom;\n\t\tvar ub = nume_b / denom;\n\t\t\n\t\tif(ua >= 0.0 && ua <= 1.0 && ub >= 0.0 && ub <= 1.0)\n\t\t{\n\t\t\t// Get the intersection point\n\t\t\tvar x = x0 + ua * (x1 - x0);\n\t\t\tvar y = y0 + ua * (y1 - y0);\n\t\t\t\n\t\t\treturn new mxPoint(x, y);\n\t\t}\n\t\t\n\t\t// No intersection\n\t\treturn null;\n\t},\n\t\n\t/**\n\t * Function: ptSegDistSq\n\t * \n\t * Returns the square distance between a segment and a point. To get the\n\t * distance between a point and a line (with infinite length) use\n\t * <mxUtils.ptLineDist>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\tptSegDistSq: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\n\t\tpx -= x1;\n\t\tpy -= y1;\n\n\t\tvar dotprod = px * x2 + py * y2;\n\t\tvar projlenSq;\n\n\t\tif (dotprod <= 0.0)\n\t\t{\n\t\t    projlenSq = 0.0;\n\t\t}\n\t\telse\n\t\t{\n\t\t    px = x2 - px;\n\t\t    py = y2 - py;\n\t\t    dotprod = px * x2 + py * y2;\n\n\t\t    if (dotprod <= 0.0)\n\t\t    {\n\t\t\t\tprojlenSq = 0.0;\n\t\t    }\n\t\t    else\n\t\t    {\n\t\t\t\tprojlenSq = dotprod * dotprod / (x2 * x2 + y2 * y2);\n\t\t    }\n\t\t}\n\n\t\tvar lenSq = px * px + py * py - projlenSq;\n\t\t\n\t\tif (lenSq < 0)\n\t\t{\n\t\t    lenSq = 0;\n\t\t}\n\t\t\n\t\treturn lenSq;\n    },\n\t\n\t/**\n\t * Function: ptLineDist\n\t * \n\t * Returns the distance between a line defined by two points and a point.\n\t * To get the distance between a point and a segment (with a specific\n\t * length) use <mxUtils.ptSeqDistSq>.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of point 1 of the line.\n\t * y1 - Y-coordinate of point 1 of the line.\n\t * x2 - X-coordinate of point 1 of the line.\n\t * y2 - Y-coordinate of point 1 of the line.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n    ptLineDist: function(x1, y1, x2, y2, px, py)\n    {\n\t\treturn Math.abs((y2 - y1) * px - (x2 - x1) * py + x2 * y1 - y2 * x1) /\n\t\t\tMath.sqrt((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n    },\n    \t\n\t/**\n\t * Function: relativeCcw\n\t * \n\t * Returns 1 if the given point on the right side of the segment, 0 if its\n\t * on the segment, and -1 if the point is on the left side of the segment.\n\t * \n\t * Parameters:\n\t * \n\t * x1 - X-coordinate of the startpoint of the segment.\n\t * y1 - Y-coordinate of the startpoint of the segment.\n\t * x2 - X-coordinate of the endpoint of the segment.\n\t * y2 - Y-coordinate of the endpoint of the segment.\n\t * px - X-coordinate of the point.\n\t * py - Y-coordinate of the point.\n\t */\n\trelativeCcw: function(x1, y1, x2, y2, px, py)\n    {\n\t\tx2 -= x1;\n\t\ty2 -= y1;\n\t\tpx -= x1;\n\t\tpy -= y1;\n\t\tvar ccw = px * y2 - py * x2;\n\t\t\n\t\tif (ccw == 0.0)\n\t\t{\n\t\t    ccw = px * x2 + py * y2;\n\t\t    \n\t\t    if (ccw > 0.0)\n\t\t    {\n\t\t\t\tpx -= x2;\n\t\t\t\tpy -= y2;\n\t\t\t\tccw = px * x2 + py * y2;\n\t\t\t\t\n\t\t\t\tif (ccw < 0.0)\n\t\t\t\t{\n\t\t\t\t    ccw = 0.0;\n\t\t\t\t}\n\t\t    }\n\t\t}\n\t\t\n\t\treturn (ccw < 0.0) ? -1 : ((ccw > 0.0) ? 1 : 0);\n    },\n    \n\t/**\n\t * Function: animateChanges\n\t * \n\t * See <mxEffects.animateChanges>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tanimateChanges: function(graph, changes)\n\t{\n\t\t// LATER: Deprecated, remove this function\n    \tmxEffects.animateChanges.apply(this, arguments);\n\t},\n    \n\t/**\n\t * Function: cascadeOpacity\n\t * \n\t * See <mxEffects.cascadeOpacity>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n    cascadeOpacity: function(graph, cell, opacity)\n\t{\n\t\tmxEffects.cascadeOpacity.apply(this, arguments);\n\t},\n\n\t/**\n\t * Function: fadeOut\n\t * \n\t * See <mxEffects.fadeOut>. This is for backwards compatibility and\n\t * will be removed later.\n\t */\n\tfadeOut: function(node, from, remove, step, delay, isEnabled)\n\t{\n\t\tmxEffects.fadeOut.apply(this, arguments);\n\t},\n\t\n\t/**\n\t * Function: setOpacity\n\t * \n\t * Sets the opacity of the specified DOM node to the given value in %.\n\t * \n\t * Parameters:\n\t * \n\t * node - DOM node to set the opacity for.\n\t * value - Opacity in %. Possible values are between 0 and 100.\n\t */\n\tsetOpacity: function(node, value)\n\t{\n\t\tif (mxUtils.isVml(node))\n\t\t{\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t    \t\t// TODO: Why is the division by 5 needed in VML?\n\t\t\t    node.style.filter = 'alpha(opacity=' + (value/5) + ')';\n\t    \t}\n\t\t}\n\t\telse if (mxClient.IS_IE && (typeof(document.documentMode) === 'undefined' || document.documentMode < 9))\n\t    {\n\t    \tif (value >= 100)\n\t    \t{\n\t    \t\tnode.style.filter = '';\n\t    \t}\n\t    \telse\n\t    \t{\n\t\t\t    node.style.filter = 'alpha(opacity=' + value + ')';\n\t    \t}\n\t\t}\n\t\telse\n\t\t{\n\t\t    node.style.opacity = (value / 100);\n\t\t}\n\t},\n\n\t/**\n\t * Function: createImage\n\t * \n\t * Creates and returns an image (IMG node) or VML image (v:image) in IE6 in\n\t * quirks mode.\n\t * \n\t * Parameters:\n\t * \n\t * src - URL that points to the image to be displayed.\n\t */\n\tcreateImage: function(src)\n\t{\n        var imageNode = null;\n        \n\t\tif (mxClient.IS_IE6 && document.compatMode != 'CSS1Compat')\n\t\t{\n        \timageNode = document.createElement(mxClient.VML_PREFIX + ':image');\n        \timageNode.setAttribute('src', src);\n        \timageNode.style.borderStyle = 'none';\n        }\n\t\telse\n\t\t{\n\t\t\timageNode = document.createElement('img');\n\t\t\timageNode.setAttribute('src', src);\n\t\t\timageNode.setAttribute('border', '0');\n\t\t}\n\t\t\n\t\treturn imageNode;\n\t},\n\n\t/**\n\t * Function: sortCells\n\t * \n\t * Sorts the given cells according to the order in the cell hierarchy.\n\t * Ascending is optional and defaults to true.\n\t */\n\tsortCells: function(cells, ascending)\n\t{\n\t\tascending = (ascending != null) ? ascending : true;\n\t\tvar lookup = new mxDictionary();\n\t\tcells.sort(function(o1, o2)\n\t\t{\n\t\t\tvar p1 = lookup.get(o1);\n\t\t\t\n\t\t\tif (p1 == null)\n\t\t\t{\n\t\t\t\tp1 = mxCellPath.create(o1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o1, p1);\n\t\t\t}\n\t\t\t\n\t\t\tvar p2 = lookup.get(o2);\n\t\t\t\n\t\t\tif (p2 == null)\n\t\t\t{\n\t\t\t\tp2 = mxCellPath.create(o2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\tlookup.put(o2, p2);\n\t\t\t}\n\t\t\t\n\t\t\tvar comp = mxCellPath.compare(p1, p2);\n\t\t\t\n\t\t\treturn (comp == 0) ? 0 : (((comp > 0) == ascending) ? 1 : -1);\n\t\t});\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: getStylename\n\t * \n\t * Returns the stylename in a style of the form [(stylename|key=value);] or\n\t * an empty string if the given style does not contain a stylename.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylename: function(style)\n\t{\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\tvar stylename = pairs[0];\n\t\t\t\n\t\t\tif (stylename.indexOf('=') < 0)\n\t\t\t{\n\t\t\t\treturn stylename;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn '';\n\t},\n\n\t/**\n\t * Function: getStylenames\n\t * \n\t * Returns the stylenames in a style of the form [(stylename|key=value);]\n\t * or an empty array if the given style does not contain any stylenames.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t */\n\tgetStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar pairs = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < pairs.length; i++)\n\t\t\t{\n\t\t\t\tif (pairs[i].indexOf('=') < 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(pairs[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: indexOfStylename\n\t * \n\t * Returns the index of the given stylename in the given style. This\n\t * returns -1 if the given stylename does not occur (as a stylename) in the\n\t * given style, otherwise it returns the index of the first character.\n\t */\n\tindexOfStylename: function(style, stylename)\n\t{\n\t\tif (style != null && stylename != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\tvar pos = 0;\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] == stylename)\n\t\t\t\t{\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpos += tokens[i].length + 1;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t},\n\t\n\t/**\n\t * Function: addStylename\n\t * \n\t * Adds the specified stylename to the given style if it does not already\n\t * contain the stylename.\n\t */\n\taddStylename: function(style, stylename)\n\t{\n\t\tif (mxUtils.indexOfStylename(style, stylename) < 0)\n\t\t{\n\t\t\tif (style == null)\n\t\t\t{\n\t\t\t\tstyle = '';\n\t\t\t}\n\t\t\telse if (style.length > 0 && style.charAt(style.length - 1) != ';')\n\t\t\t{\n\t\t\t\tstyle += ';';\n\t\t\t}\n\t\t\t\n\t\t\tstyle += stylename;\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: removeStylename\n\t * \n\t * Removes all occurrences of the specified stylename in the given style\n\t * and returns the updated style. Trailing semicolons are not preserved.\n\t */\n\tremoveStylename: function(style, stylename)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\tif (tokens[i] != stylename)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\t\n\t/**\n\t * Function: removeAllStylenames\n\t * \n\t * Removes all stylenames from the given style and returns the updated\n\t * style.\n\t */\n\tremoveAllStylenames: function(style)\n\t{\n\t\tvar result = [];\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvar tokens = style.split(';');\n\t\t\t\n\t\t\tfor (var i = 0; i < tokens.length; i++)\n\t\t\t{\n\t\t\t\t// Keeps the key, value assignments\n\t\t\t\tif (tokens[i].indexOf('=') >= 0)\n\t\t\t\t{\n\t\t\t\t\tresult.push(tokens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result.join(';');\n\t},\n\n\t/**\n\t * Function: setCellStyles\n\t * \n\t * Assigns the value for the given key in the styles of the given cells, or\n\t * removes the key from the styles if the value is null.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> to execute the transaction in.\n\t * cells - Array of <mxCells> to be updated.\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetCellStyles: function(model, cells, key, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyle(model.getStyle(cells[i]), key, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyle\n\t * \n\t * Adds or removes the given key, value pair to the style and returns the\n\t * new style. If value is null or zero length then the key is removed from\n\t * the style. This is for cell styles, not for CSS styles.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * value - New value for the given key.\n\t */\n\tsetStyle: function(style, key, value)\n\t{\n\t\tvar isValue = value != null && (typeof(value.length) == 'undefined' || value.length > 0);\n\t\t\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (isValue)\n\t\t\t{\n\t\t\t\tstyle = key + '=' + value + ';';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (style.substring(0, key.length + 1) == key + '=')\n\t\t\t{\n\t\t\t\tvar next = style.indexOf(';');\n\t\t\t\t\n\t\t\t\tif (isValue)\n\t\t\t\t{\n\t\t\t\t\tstyle = key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = (next < 0 || next == style.length - 1) ? '' : style.substring(next + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar index = style.indexOf(';' + key + '=');\n\t\t\t\t\n\t\t\t\tif (index < 0)\n\t\t\t\t{\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sep = (style.charAt(style.length - 1) == ';') ? '' : ';';\n\t\t\t\t\t\tstyle = style + sep + key + '=' + value + ';';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar next = style.indexOf(';', index + 1);\n\t\t\t\t\t\n\t\t\t\t\tif (isValue)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index + 1) + key + '=' + value + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle = style.substring(0, index) + ((next < 0) ? ';' : style.substring(next));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\n\t/**\n\t * Function: setCellStyleFlags\n\t * \n\t * Sets or toggles the flag bit for the given key in the cell's styles.\n\t * If value is null then the flag is toggled.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var cells = graph.getSelectionCells();\n\t * mxUtils.setCellStyleFlags(graph.model,\n\t * \t\t\tcells,\n\t * \t\t\tmxConstants.STYLE_FONTSTYLE,\n\t * \t\t\tmxConstants.FONT_BOLD);\n\t * (end)\n\t * \n\t * Toggles the bold font style.\n\t * \n\t * Parameters:\n\t * \n\t * model - <mxGraphModel> that contains the cells.\n\t * cells - Array of <mxCells> to change the style for.\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the flag.\n\t */\n\tsetCellStyleFlags: function(model, cells, key, flag, value)\n\t{\n\t\tif (cells != null && cells.length > 0)\n\t\t{\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (cells[i] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar style = mxUtils.setStyleFlag(\n\t\t\t\t\t\t\tmodel.getStyle(cells[i]),\n\t\t\t\t\t\t\tkey, flag, value);\n\t\t\t\t\t\tmodel.setStyle(cells[i], style);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: setStyleFlag\n\t * \n\t * Sets or removes the given key from the specified style and returns the\n\t * new style. If value is null then the flag is toggled.\n\t * \n\t * Parameters:\n\t * \n\t * style - String of the form [(stylename|key=value);].\n\t * key - Key of the style to be changed.\n\t * flag - Integer for the bit to be changed.\n\t * value - Optional boolean value for the given flag.\n\t */\n\tsetStyleFlag: function(style, key, flag, value)\n\t{\n\t\tif (style == null || style.length == 0)\n\t\t{\n\t\t\tif (value || value == null)\n\t\t\t{\n\t\t\t\tstyle = key+'='+flag;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle = key+'=0';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar index = style.indexOf(key+'=');\n\t\t\t\n\t\t\tif (index < 0)\n\t\t\t{\n\t\t\t\tvar sep = (style.charAt(style.length-1) == ';') ? '' : ';';\n\n\t\t\t\tif (value || value == null)\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=' + flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstyle = style + sep + key + '=0';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar cont = style.indexOf(';', index);\n\t\t\t\tvar tmp = '';\n\t\t\t\t\n\t\t\t\tif (cont < 0)\n\t\t\t\t{\n\t\t\t\t\ttmp  = style.substring(index+key.length+1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = style.substring(index+key.length+1, cont);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (value == null)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) ^ flag;\n\t\t\t\t}\n\t\t\t\telse if (value)\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) | flag;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttmp = parseInt(tmp) & ~flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstyle = style.substring(0, index) + key + '=' + tmp +\n\t\t\t\t\t((cont >= 0) ? style.substring(cont) : '');\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn style;\n\t},\n\t\n\t/**\n\t * Function: getAlignmentAsPoint\n\t * \n\t * Returns an <mxPoint> that represents the horizontal and vertical alignment\n\t * for numeric computations. X is -0.5 for center, -1 for right and 0 for\n\t * left alignment. Y is -0.5 for middle, -1 for bottom and 0 for top\n\t * alignment. Default values for missing arguments is top, left.\n\t */\n\tgetAlignmentAsPoint: function(align, valign)\n\t{\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// Horizontal alignment\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx = -0.5;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx = -1;\n\t\t}\n\n\t\t// Vertical alignment\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy = -0.5;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy = -1;\n\t\t}\n\t\t\n\t\treturn new mxPoint(dx, dy);\n\t},\n\t\n\t/**\n\t * Function: getSizeForString\n\t * \n\t * Returns an <mxRectangle> with the size (width and height in pixels) of\n\t * the given string. The string may contain HTML markup. Newlines should be\n\t * converted to <br> before calling this method. The caller is responsible\n\t * for sanitizing the HTML markup.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var label = graph.getLabel(cell).replace(/\\n/g, \"<br>\");\n\t * var size = graph.getSizeForString(label);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * text - String whose size should be returned.\n\t * fontSize - Integer that specifies the font size in pixels. Default is\n\t * <mxConstants.DEFAULT_FONTSIZE>.\n\t * fontFamily - String that specifies the name of the font family. Default\n\t * is <mxConstants.DEFAULT_FONTFAMILY>.\n\t * textWidth - Optional width for text wrapping.\n\t */\n\tgetSizeForString: function(text, fontSize, fontFamily, textWidth)\n\t{\n\t\tfontSize = (fontSize != null) ? fontSize : mxConstants.DEFAULT_FONTSIZE;\n\t\tfontFamily = (fontFamily != null) ? fontFamily : mxConstants.DEFAULT_FONTFAMILY;\n\t\tvar div = document.createElement('div');\n\t\t\n\t\t// Sets the font size and family\n\t\tdiv.style.fontFamily = fontFamily;\n\t\tdiv.style.fontSize = Math.round(fontSize) + 'px';\n\t\tdiv.style.lineHeight = Math.round(fontSize * mxConstants.LINE_HEIGHT) + 'px';\n\t\t\n\t\t// Disables block layout and outside wrapping and hides the div\n\t\tdiv.style.position = 'absolute';\n\t\tdiv.style.visibility = 'hidden';\n\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tdiv.style.zoom = '1';\n\t\t\n\t\tif (textWidth != null)\n\t\t{\n\t\t\tdiv.style.width = textWidth + 'px';\n\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\t// Adds the text and inserts into DOM for updating of size\n\t\tdiv.innerHTML = text;\n\t\tdocument.body.appendChild(div);\n\t\t\n\t\t// Gets the size and removes from DOM\n\t\tvar size = new mxRectangle(0, 0, div.offsetWidth, div.offsetHeight);\n\t\tdocument.body.removeChild(div);\n\t\t\n\t\treturn size;\n\t},\n\t\n\t/**\n\t * Function: getViewXml\n\t */\n\tgetViewXml: function(graph, scale, cells, x0, y0)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\tscale = (scale != null) ? scale : 1;\n\n\t\tif (cells == null)\n\t\t{\n\t\t\tvar model = graph.getModel();\n\t\t\tcells = [model.getRoot()];\n\t\t}\n\t\t\n\t\tvar view = graph.getView();\n\t\tvar result = null;\n\n\t\t// Disables events on the view\n\t\tvar eventsEnabled = view.isEventsEnabled();\n\t\tview.setEventsEnabled(false);\n\n\t\t// Workaround for label bounds not taken into account for image export.\n\t\t// Creates a temporary draw pane which is used for rendering the text.\n\t\t// Text rendering is required for finding the bounds of the labels.\n\t\tvar drawPane = view.drawPane;\n\t\tvar overlayPane = view.overlayPane;\n\n\t\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tview.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.drawPane);\n\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tview.drawPane = view.drawPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.drawPane);\n\t\t\t\n\t\t\t// Redirects cell overlays into temporary container\n\t\t\tview.overlayPane = view.overlayPane.cloneNode(false);\n\t\t\tview.canvas.appendChild(view.overlayPane);\n\t\t}\n\n\t\t// Resets the translation\n\t\tvar translate = view.getTranslate();\n\t\tview.translate = new mxPoint(x0, y0);\n\n\t\t// Creates the temporary cell states in the view\n\t\tvar temp = new mxTemporaryCellStates(graph.getView(), scale, cells);\n\n\t\ttry\n\t\t{\n\t\t\tvar enc = new mxCodec();\n\t\t\tresult = enc.encode(graph.getView());\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\ttemp.destroy();\n\t\t\tview.translate = translate;\n\t\t\tview.canvas.removeChild(view.drawPane);\n\t\t\tview.canvas.removeChild(view.overlayPane);\n\t\t\tview.drawPane = drawPane;\n\t\t\tview.overlayPane = overlayPane;\n\t\t\tview.setEventsEnabled(eventsEnabled);\n\t\t}\n\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getScaleForPageCount\n\t * \n\t * Returns the scale to be used for printing the graph with the given\n\t * bounds across the specifies number of pages with the given format. The\n\t * scale is always computed such that it given the given amount or fewer\n\t * pages in the print output. See <mxPrintPreview> for an example.\n\t * \n\t * Parameters:\n\t * \n\t * pageCount - Specifies the number of pages in the print output.\n\t * graph - <mxGraph> that should be printed.\n\t * pageFormat - Optional <mxRectangle> that specifies the page format.\n\t * Default is <mxConstants.PAGE_FORMAT_A4_PORTRAIT>.\n\t * border - The border along each side of every page.\n\t */\n\tgetScaleForPageCount: function(pageCount, graph, pageFormat, border)\n\t{\n\t\tif (pageCount < 1)\n\t\t{\n\t\t\t// We can't work with less than 1 page, return no scale\n\t\t\t// change\n\t\t\treturn 1;\n\t\t}\n\t\t\n\t\tpageFormat = (pageFormat != null) ? pageFormat : mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\t\tborder = (border != null) ? border : 0;\n\t\t\n\t\tvar availablePageWidth = pageFormat.width - (border * 2);\n\t\tvar availablePageHeight = pageFormat.height - (border * 2);\n\n\t\t// Work out the number of pages required if the\n\t\t// graph is not scaled.\n\t\tvar graphBounds = graph.getGraphBounds().clone();\n\t\tvar sc = graph.getView().getScale();\n\t\tgraphBounds.width /= sc;\n\t\tgraphBounds.height /= sc;\n\t\tvar graphWidth = graphBounds.width;\n\t\tvar graphHeight = graphBounds.height;\n\n\t\tvar scale = 1;\n\t\t\n\t\t// The ratio of the width/height for each printer page\n\t\tvar pageFormatAspectRatio = availablePageWidth / availablePageHeight;\n\t\t// The ratio of the width/height for the graph to be printer\n\t\tvar graphAspectRatio = graphWidth / graphHeight;\n\t\t\n\t\t// The ratio of horizontal pages / vertical pages for this \n\t\t// graph to maintain its aspect ratio on this page format\n\t\tvar pagesAspectRatio = graphAspectRatio / pageFormatAspectRatio;\n\t\t\n\t\t// Factor the square root of the page count up and down \n\t\t// by the pages aspect ratio to obtain a horizontal and \n\t\t// vertical page count that adds up to the page count\n\t\t// and has the correct aspect ratio\n\t\tvar pageRoot = Math.sqrt(pageCount);\n\t\tvar pagesAspectRatioSqrt = Math.sqrt(pagesAspectRatio);\n\t\tvar numRowPages = pageRoot * pagesAspectRatioSqrt;\n\t\tvar numColumnPages = pageRoot / pagesAspectRatioSqrt;\n\n\t\t// These value are rarely more than 2 rounding downs away from\n\t\t// a total that meets the page count. In cases of one being less \n\t\t// than 1 page, the other value can be too high and take more iterations \n\t\t// In this case, just change that value to be the page count, since \n\t\t// we know the other value is 1\n\t\tif (numRowPages < 1 && numColumnPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numColumnPages / pageCount;\n\t\t\tnumColumnPages = pageCount;\n\t\t\tnumRowPages /= scaleChange;\n\t\t}\n\t\t\n\t\tif (numColumnPages < 1 && numRowPages > pageCount)\n\t\t{\n\t\t\tvar scaleChange = numRowPages / pageCount;\n\t\t\tnumRowPages = pageCount;\n\t\t\tnumColumnPages /= scaleChange;\n\t\t}\t\t\n\n\t\tvar currentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\n\t\tvar numLoops = 0;\n\t\t\n\t\t// Iterate through while the rounded up number of pages comes to\n\t\t// a total greater than the required number\n\t\twhile (currentTotalPages > pageCount)\n\t\t{\n\t\t\t// Round down the page count (rows or columns) that is\n\t\t\t// closest to its next integer down in percentage terms.\n\t\t\t// i.e. Reduce the page total by reducing the total\n\t\t\t// page area by the least possible amount\n\n\t\t\tvar roundRowDownProportion = Math.floor(numRowPages) / numRowPages;\n\t\t\tvar roundColumnDownProportion = Math.floor(numColumnPages) / numColumnPages;\n\t\t\t\n\t\t\t// If the round down proportion is, work out the proportion to\n\t\t\t// round down to 1 page less\n\t\t\tif (roundRowDownProportion == 1)\n\t\t\t{\n\t\t\t\troundRowDownProportion = Math.floor(numRowPages-1) / numRowPages;\n\t\t\t}\n\t\t\tif (roundColumnDownProportion == 1)\n\t\t\t{\n\t\t\t\troundColumnDownProportion = Math.floor(numColumnPages-1) / numColumnPages;\n\t\t\t}\n\t\t\t\n\t\t\t// Check which rounding down is smaller, but in the case of very small roundings\n\t\t\t// try the other dimension instead\n\t\t\tvar scaleChange = 1;\n\t\t\t\n\t\t\t// Use the higher of the two values\n\t\t\tif (roundRowDownProportion > roundColumnDownProportion)\n\t\t\t{\n\t\t\t\tscaleChange = roundRowDownProportion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tscaleChange = roundColumnDownProportion;\n\t\t\t}\n\n\t\t\tnumRowPages = numRowPages * scaleChange;\n\t\t\tnumColumnPages = numColumnPages * scaleChange;\n\t\t\tcurrentTotalPages = Math.ceil(numRowPages) * Math.ceil(numColumnPages);\n\t\t\t\n\t\t\tnumLoops++;\n\t\t\t\n\t\t\tif (numLoops > 10)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Work out the scale from the number of row pages required\n\t\t// The column pages will give the same value\n\t\tvar posterWidth = availablePageWidth * numRowPages;\n\t\tscale = posterWidth / graphWidth;\n\t\t\n\t\t// Allow for rounding errors\n\t\treturn scale * 0.99999;\n\t},\n\t\n\t/**\n\t * Function: show\n\t * \n\t * Copies the styles and the markup from the graph's container into the\n\t * given document and removes all cursor styles. The document is returned.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * If you experience problems with missing stylesheets in IE then try adding\n\t * the domain to the trusted sites.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be copied.\n\t * doc - Document where the new graph is created.\n\t * x0 - X-coordinate of the graph view origin. Default is 0.\n\t * y0 - Y-coordinate of the graph view origin. Default is 0.\n\t * w - Optional width of the graph view.\n\t * h - Optional height of the graph view.\n\t */\n\tshow: function(graph, doc, x0, y0, w, h)\n\t{\n\t\tx0 = (x0 != null) ? x0 : 0;\n\t\ty0 = (y0 != null) ? y0 : 0;\n\t\t\n\t\tif (doc == null)\n\t\t{\n\t\t\tvar wnd = window.open();\n\t\t\tdoc = wnd.document;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.open();\n\t\t}\n\n\t\t// Workaround for missing print output in IE9 standards\n\t\tif (document.documentMode == 9)\n\t\t{\n\t\t\tdoc.writeln('<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=9\"><![endif]-->');\n\t\t}\n\t\t\n\t\tvar bounds = graph.getGraphBounds();\n\t\tvar dx = Math.ceil(x0 - bounds.x);\n\t\tvar dy = Math.ceil(y0 - bounds.y);\n\t\t\n\t\tif (w == null)\n\t\t{\n\t\t\tw = Math.ceil(bounds.width + x0) + Math.ceil(Math.ceil(bounds.x) - bounds.x);\n\t\t}\n\t\t\n\t\tif (h == null)\n\t\t{\n\t\t\th = Math.ceil(bounds.height + y0) + Math.ceil(Math.ceil(bounds.y) - bounds.y);\n\t\t}\n\t\t\n\t\t// Needs a special way of creating the page so that no click is required\n\t\t// to refresh the contents after the external CSS styles have been loaded.\n\t\t// To avoid a click or programmatic refresh, the styleSheets[].cssText\n\t\t// property is copied over from the original document.\n\t\tif (mxClient.IS_IE || document.documentMode == 11)\n\t\t{\n\t\t\tvar html = '<html><head>';\n\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\thtml += base[i].outerHTML;\n\t\t\t}\n\n\t\t\thtml += '<style>';\n\n\t\t\t// Copies the stylesheets without having to load them again\n\t\t\tfor (var i = 0; i < document.styleSheets.length; i++)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\thtml += document.styleSheets[i].cssText;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore security exception\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</style></head><body style=\"margin:0px;\">';\n\t\t\t\n\t\t\t// Copies the contents of the graph container\n\t\t\thtml += '<div style=\"position:absolute;overflow:hidden;width:' + w + 'px;height:' + h + 'px;\"><div style=\"position:relative;left:' + dx + 'px;top:' + dy + 'px;\">';\n\t\t\thtml += graph.container.innerHTML;\n\t\t\thtml += '</div></div></body><html>';\n\n\t\t\tdoc.writeln(html);\n\t\t\tdoc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdoc.writeln('<html><head>');\n\t\t\t\n\t\t\tvar base = document.getElementsByTagName('base');\n\t\t\t\n\t\t\tfor (var i = 0; i < base.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(base[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar links = document.getElementsByTagName('link');\n\t\t\t\n\t\t\tfor (var i = 0; i < links.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(links[i]));\n\t\t\t}\n\t\n\t\t\tvar styles = document.getElementsByTagName('style');\n\t\t\t\n\t\t\tfor (var i = 0; i < styles.length; i++)\n\t\t\t{\n\t\t\t\tdoc.writeln(mxUtils.getOuterHtml(styles[i]));\n\t\t\t}\n\n\t\t\tdoc.writeln('</head><body style=\"margin:0px;\"></body></html>');\n\t\t\tdoc.close();\n\n\t\t\tvar outer = doc.createElement('div');\n\t\t\touter.position = 'absolute';\n\t\t\touter.overflow = 'hidden';\n\t\t\touter.style.width = w + 'px';\n\t\t\touter.style.height = h + 'px';\n\n\t\t\t// Required for HTML labels if foreignObjects are disabled\n\t\t\tvar div = doc.createElement('div');\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.left = dx + 'px';\n\t\t\tdiv.style.top = dy + 'px';\n\n\t\t\tvar node = graph.container.firstChild;\n\t\t\tvar svg = null;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tvar clone = node.cloneNode(true);\n\t\t\t\t\n\t\t\t\tif (node == graph.view.drawPane.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\touter.appendChild(clone);\n\t\t\t\t\tsvg = clone;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdiv.appendChild(clone);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\n\t\t\tdoc.body.appendChild(outer);\n\t\t\t\n\t\t\tif (div.firstChild != null)\n\t\t\t{\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tif (svg != null)\n\t\t\t{\n\t\t\t\tsvg.style.minWidth = '';\n\t\t\t\tsvg.style.minHeight = '';\n\t\t\t\tsvg.firstChild.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxUtils.removeCursors(doc.body);\n\t\n\t\treturn doc;\n\t},\n\t\n\t/**\n\t * Function: printScreen\n\t * \n\t * Prints the specified graph using a new window and the built-in print\n\t * dialog.\n\t * \n\t * This function should be called from within the document with the graph.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to be printed.\n\t */\n\tprintScreen: function(graph)\n\t{\n\t\tvar wnd = window.open();\n\t\tvar bounds = graph.getGraphBounds();\n\t\tmxUtils.show(graph, wnd.document);\n\t\t\n\t\tvar print = function()\n\t\t{\n\t\t\twnd.focus();\n\t\t\twnd.print();\n\t\t\twnd.close();\n\t\t};\n\t\t\n\t\t// Workaround for Google Chrome which needs a bit of a\n\t\t// delay in order to render the SVG contents\n\t\tif (mxClient.IS_GC)\n\t\t{\n\t\t\twnd.setTimeout(print, 500);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tprint();\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: popup\n\t * \n\t * Shows the specified text content in a new <mxWindow> or a new browser\n\t * window if isInternalWindow is false.\n\t * \n\t * Parameters:\n\t * \n\t * content - String that specifies the text to be displayed.\n\t * isInternalWindow - Optional boolean indicating if an mxWindow should be\n\t * used instead of a new browser window. Default is false.\n\t */\n\tpopup: function(content, isInternalWindow)\n\t{\n\t   \tif (isInternalWindow)\n\t   \t{\n\t\t\tvar div = document.createElement('div');\n\t\t\t\n\t\t\tdiv.style.overflow = 'scroll';\n\t\t\tdiv.style.width = '636px';\n\t\t\tdiv.style.height = '460px';\n\t\t\t\n\t\t\tvar pre = document.createElement('pre');\n\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t\n\t\t\tdiv.appendChild(pre);\n\t\t\t\n\t\t\tvar w = document.body.clientWidth;\n\t\t\tvar h = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight)\n\t\t\tvar wnd = new mxWindow('Popup Window', div,\n\t\t\t\tw/2-320, h/2-240, 640, 480, false, true);\n\n\t\t\twnd.setClosable(true);\n\t\t\twnd.setVisible(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Wraps up the XML content in a textarea\n\t\t\tif (mxClient.IS_NS)\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t\twnd.document.writeln('<pre>'+mxUtils.htmlEntities(content)+'</pre');\n\t\t\t   \twnd.document.close();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t    var wnd = window.open();\n\t\t\t    var pre = wnd.document.createElement('pre');\n\t\t\t    pre.innerHTML = mxUtils.htmlEntities(content, false).\n\t\t\t    \treplace(/\\n/g,'<br>').replace(/ /g, '&nbsp;');\n\t\t\t   \twnd.document.body.appendChild(pre);\n\t\t\t}\n\t   \t}\n\t},\n\t\n\t/**\n\t * Function: alert\n\t * \n\t * Displayss the given alert in a new dialog. This implementation uses the\n\t * built-in alert function. This is used to display validation errors when\n\t * connections cannot be changed or created.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\talert: function(message)\n\t{\n\t\talert(message);\n\t},\n\t\n\t/**\n\t * Function: prompt\n\t * \n\t * Displays the given message in a prompt dialog. This implementation uses\n\t * the built-in prompt function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * defaultValue - Optional string specifying the default value.\n\t */\n\tprompt: function(message, defaultValue)\n\t{\n\t\treturn prompt(message, (defaultValue != null) ? defaultValue : '');\n\t},\n\t\n\t/**\n\t * Function: confirm\n\t * \n\t * Displays the given message in a confirm dialog. This implementation uses\n\t * the built-in confirm function.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t */\n\tconfirm: function(message)\n\t{\n\t\treturn confirm(message);\n\t},\n\n\t/**\n\t * Function: error\n\t * \n\t * Displays the given error message in a new <mxWindow> of the given width.\n\t * If close is true then an additional close button is added to the window.\n\t * The optional icon specifies the icon to be used for the window. Default\n\t * is <mxUtils.errorImage>.\n\t * \n\t * Parameters:\n\t * \n\t * message - String specifying the message to be displayed.\n\t * width - Integer specifying the width of the window.\n\t * close - Optional boolean indicating whether to add a close button.\n\t * icon - Optional icon for the window decoration.\n\t */\n\terror: function(message, width, close, icon)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '20px';\n\n\t\tvar img = document.createElement('img');\n\t\timg.setAttribute('src', icon || mxUtils.errorImage);\n\t\timg.setAttribute('valign', 'bottom');\n\t\timg.style.verticalAlign = 'middle';\n\t\tdiv.appendChild(img);\n\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tdiv.appendChild(document.createTextNode('\\u00a0')); // &nbsp;\n\t\tmxUtils.write(div, message);\n\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\tvar warn = new mxWindow(mxResources.get(mxUtils.errorResource) ||\n\t\t\tmxUtils.errorResource, div, (w-width)/2, h/4, width, null,\n\t\t\tfalse, true);\n\n\t\tif (close)\n\t\t{\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\tvar tmp = document.createElement('p');\n\t\t\tvar button = document.createElement('button');\n\n\t\t\tif (mxClient.IS_IE)\n\t\t\t{\n\t\t\t\tbutton.style.cssText = 'float:right';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbutton.setAttribute('style', 'float:right');\n\t\t\t}\n\n\t\t\tmxEvent.addListener(button, 'click', function(evt)\n\t\t\t{\n\t\t\t\twarn.destroy();\n\t\t\t});\n\n\t\t\tmxUtils.write(button, mxResources.get(mxUtils.closeResource) ||\n\t\t\t\tmxUtils.closeResource);\n\t\t\t\n\t\t\ttmp.appendChild(button);\n\t\t\tdiv.appendChild(tmp);\n\t\t\t\n\t\t\tmxUtils.br(div);\n\t\t\t\n\t\t\twarn.setClosable(true);\n\t\t}\n\t\t\n\t\twarn.setVisible(true);\n\t\t\n\t\treturn warn;\n\t},\n\n\t/**\n\t * Function: makeDraggable\n\t * \n\t * Configures the given DOM element to act as a drag source for the\n\t * specified graph. Returns a a new <mxDragSource>. If\n\t * <mxDragSource.guideEnabled> is enabled then the x and y arguments must\n\t * be used in funct to match the preview location.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * var funct = function(graph, evt, cell, x, y)\n\t * {\n\t *   if (graph.canImportCell(cell))\n\t *   {\n\t *     var parent = graph.getDefaultParent();\n\t *     var vertex = null;\n\t *     \n\t *     graph.getModel().beginUpdate();\n\t *     try\n\t *     {\n\t * \t     vertex = graph.insertVertex(parent, null, 'Hello', x, y, 80, 30);\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.getModel().endUpdate();\n\t *     }\n\t *\n\t *     graph.setSelectionCell(vertex);\n\t *   }\n\t * }\n\t * \n\t * var img = document.createElement('img');\n\t * img.setAttribute('src', 'editors/images/rectangle.gif');\n\t * img.style.position = 'absolute';\n\t * img.style.left = '0px';\n\t * img.style.top = '0px';\n\t * img.style.width = '16px';\n\t * img.style.height = '16px';\n\t * \n\t * var dragImage = img.cloneNode(true);\n\t * dragImage.style.width = '32px';\n\t * dragImage.style.height = '32px';\n\t * mxUtils.makeDraggable(img, graph, funct, dragImage);\n\t * document.body.appendChild(img);\n\t * (end)\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM element to make draggable.\n\t * graphF - <mxGraph> that acts as the drop target or a function that takes a\n\t * mouse event and returns the current <mxGraph>.\n\t * funct - Function to execute on a successful drop.\n\t * dragElement - Optional DOM node to be used for the drag preview.\n\t * dx - Optional horizontal offset between the cursor and the drag\n\t * preview.\n\t * dy - Optional vertical offset between the cursor and the drag\n\t * preview.\n\t * autoscroll - Optional boolean that specifies if autoscroll should be\n\t * used. Default is mxGraph.autoscroll.\n\t * scalePreview - Optional boolean that specifies if the preview element\n\t * should be scaled according to the graph scale. If this is true, then\n\t * the offsets will also be scaled. Default is false.\n\t * highlightDropTargets - Optional boolean that specifies if dropTargets\n\t * should be highlighted. Default is true.\n\t * getDropTarget - Optional function to return the drop target for a given\n\t * location (x, y). Default is mxGraph.getCellAt.\n\t */\n\tmakeDraggable: function(element, graphF, funct, dragElement, dx, dy, autoscroll,\n\t\t\tscalePreview, highlightDropTargets, getDropTarget)\n\t{\n\t\tvar dragSource = new mxDragSource(element, funct);\n\t\tdragSource.dragOffset = new mxPoint((dx != null) ? dx : 0,\n\t\t\t(dy != null) ? dy : mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\t\tdragSource.autoscroll = autoscroll;\n\t\t\n\t\t// Cannot enable this by default. This needs to be enabled in the caller\n\t\t// if the funct argument uses the new x- and y-arguments.\n\t\tdragSource.setGuidesEnabled(false);\n\t\t\n\t\tif (highlightDropTargets != null)\n\t\t{\n\t\t\tdragSource.highlightDropTargets = highlightDropTargets;\n\t\t}\n\t\t\n\t\t// Overrides function to find drop target cell\n\t\tif (getDropTarget != null)\n\t\t{\n\t\t\tdragSource.getDropTarget = getDropTarget;\n\t\t}\n\t\t\n\t\t// Overrides function to get current graph\n\t\tdragSource.getGraphForEvent = function(evt)\n\t\t{\n\t\t\treturn (typeof(graphF) == 'function') ? graphF(evt) : graphF;\n\t\t};\n\t\t\n\t\t// Translates switches into dragSource customizations\n\t\tif (dragElement != null)\n\t\t{\n\t\t\tdragSource.createDragElement = function()\n\t\t\t{\n\t\t\t\treturn dragElement.cloneNode(true);\n\t\t\t};\n\t\t\t\n\t\t\tif (scalePreview)\n\t\t\t{\n\t\t\t\tdragSource.createPreviewElement = function(graph)\n\t\t\t\t{\n\t\t\t\t\tvar elt = dragElement.cloneNode(true);\n\n\t\t\t\t\tvar w = parseInt(elt.style.width);\n\t\t\t\t\tvar h = parseInt(elt.style.height);\n\t\t\t\t\telt.style.width = Math.round(w * graph.view.scale) + 'px';\n\t\t\t\t\telt.style.height = Math.round(h * graph.view.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\treturn elt;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dragSource;\n\t}\n\n};\n\n__mxOutput.mxUtils = typeof mxUtils !== 'undefined' ? mxUtils : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n var mxConstants =\n {\n\t/**\n\t * Class: mxConstants\n\t * \n\t * Defines various global constants.\n\t * \n\t * Variable: DEFAULT_HOTSPOT\n\t * \n\t * Defines the portion of the cell which is to be used as a connectable\n\t * region. Default is 0.3. Possible values are 0 < x <= 1. \n\t */\n\tDEFAULT_HOTSPOT: 0.3,\n\n\t/**\n\t * Variable: MIN_HOTSPOT_SIZE\n\t * \n\t * Defines the minimum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Default is 8.\n\t */\n\tMIN_HOTSPOT_SIZE: 8,\n\n\t/**\n\t * Variable: MAX_HOTSPOT_SIZE\n\t * \n\t * Defines the maximum size in pixels of the portion of the cell which is\n\t * to be used as a connectable region. Use 0 for no maximum. Default is 0.\n\t */\n\tMAX_HOTSPOT_SIZE: 0,\n\n\t/**\n\t * Variable: RENDERING_HINT_EXACT\n\t * \n\t * Defines the exact rendering hint.\n\t */\n\tRENDERING_HINT_EXACT: 'exact',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTER\n\t * \n\t * Defines the faster rendering hint.\n\t */\n\tRENDERING_HINT_FASTER: 'faster',\n\n\t/**\n\t * Variable: RENDERING_HINT_FASTEST\n\t * \n\t * Defines the fastest rendering hint.\n\t */\n\tRENDERING_HINT_FASTEST: 'fastest',\n\n\t/**\n\t * Variable: DIALECT_SVG\n\t * \n\t * Defines the SVG display dialect name.\n\t */\n\tDIALECT_SVG: 'svg',\n\n\t/**\n\t * Variable: DIALECT_VML\n\t * \n\t * Defines the VML display dialect name.\n\t */\n\tDIALECT_VML: 'vml',\n\n\t/**\n\t * Variable: DIALECT_MIXEDHTML\n\t * \n\t * Defines the mixed HTML display dialect name.\n\t */\n\tDIALECT_MIXEDHTML: 'mixedHtml',\n\n\t/**\n\t * Variable: DIALECT_PREFERHTML\n\t * \n\t * Defines the preferred HTML display dialect name.\n\t */\n\tDIALECT_PREFERHTML: 'preferHtml',\n\n\t/**\n\t * Variable: DIALECT_STRICTHTML\n\t * \n\t * Defines the strict HTML display dialect.\n\t */\n\tDIALECT_STRICTHTML: 'strictHtml',\n\n\t/**\n\t * Variable: NS_SVG\n\t * \n\t * Defines the SVG namespace.\n\t */\n\tNS_SVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * Variable: NS_XHTML\n\t * \n\t * Defines the XHTML namespace.\n\t */\n\tNS_XHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Variable: NS_XLINK\n\t * \n\t * Defines the XLink namespace.\n\t */\n\tNS_XLINK: 'http://www.w3.org/1999/xlink',\n\n\t/**\n\t * Variable: SHADOWCOLOR\n\t * \n\t * Defines the color to be used to draw shadows in shapes and windows.\n\t * Default is gray.\n\t */\n\tSHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: VML_SHADOWCOLOR\n\t * \n\t * Used for shadow color in filters where transparency is not supported\n\t * (Microsoft Internet Explorer). Default is gray.\n\t */\n\tVML_SHADOWCOLOR: 'gray',\n\n\t/**\n\t * Variable: SHADOW_OFFSET_X\n\t * \n\t * Specifies the x-offset of the shadow. Default is 2.\n\t */\n\tSHADOW_OFFSET_X: 2,\n\n\t/**\n\t * Variable: SHADOW_OFFSET_Y\n\t * \n\t * Specifies the y-offset of the shadow. Default is 3.\n\t */\n\tSHADOW_OFFSET_Y: 3,\n\t\n\t/**\n\t * Variable: SHADOW_OPACITY\n\t * \n\t * Defines the opacity for shadows. Default is 1.\n\t */\n\tSHADOW_OPACITY: 1,\n \n\t/**\n\t * Variable: NODETYPE_ELEMENT\n\t * \n\t * DOM node of type ELEMENT.\n\t */\n\tNODETYPE_ELEMENT: 1,\n\n\t/**\n\t * Variable: NODETYPE_ATTRIBUTE\n\t * \n\t * DOM node of type ATTRIBUTE.\n\t */\n\tNODETYPE_ATTRIBUTE: 2,\n\n\t/**\n\t * Variable: NODETYPE_TEXT\n\t * \n\t * DOM node of type TEXT.\n\t */\n\tNODETYPE_TEXT: 3,\n\n\t/**\n\t * Variable: NODETYPE_CDATA\n\t * \n\t * DOM node of type CDATA.\n\t */\n\tNODETYPE_CDATA: 4,\n\t\n\t/**\n\t * Variable: NODETYPE_ENTITY_REFERENCE\n\t * \n\t * DOM node of type ENTITY_REFERENCE.\n\t */\n\tNODETYPE_ENTITY_REFERENCE: 5,\n\n\t/**\n\t * Variable: NODETYPE_ENTITY\n\t * \n\t * DOM node of type ENTITY.\n\t */\n\tNODETYPE_ENTITY: 6,\n\n\t/**\n\t * Variable: NODETYPE_PROCESSING_INSTRUCTION\n\t * \n\t * DOM node of type PROCESSING_INSTRUCTION.\n\t */\n\tNODETYPE_PROCESSING_INSTRUCTION: 7,\n\n\t/**\n\t * Variable: NODETYPE_COMMENT\n\t * \n\t * DOM node of type COMMENT.\n\t */\n\tNODETYPE_COMMENT: 8,\n\t\t\n\t/**\n\t * Variable: NODETYPE_DOCUMENT\n\t * \n\t * DOM node of type DOCUMENT.\n\t */\n\tNODETYPE_DOCUMENT: 9,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENTTYPE\n\t * \n\t * DOM node of type DOCUMENTTYPE.\n\t */\n\tNODETYPE_DOCUMENTTYPE: 10,\n\n\t/**\n\t * Variable: NODETYPE_DOCUMENT_FRAGMENT\n\t * \n\t * DOM node of type DOCUMENT_FRAGMENT.\n\t */\n\tNODETYPE_DOCUMENT_FRAGMENT: 11,\n\n\t/**\n\t * Variable: NODETYPE_NOTATION\n\t * \n\t * DOM node of type NOTATION.\n\t */\n\tNODETYPE_NOTATION: 12,\n\t\n\t/**\n\t * Variable: TOOLTIP_VERTICAL_OFFSET\n\t * \n\t * Defines the vertical offset for the tooltip.\n\t * Default is 16.\n\t */\n\tTOOLTIP_VERTICAL_OFFSET: 16,\n\n\t/**\n\t * Variable: DEFAULT_VALID_COLOR\n\t * \n\t * Specifies the default valid color. Default is #0000FF.\n\t */\n\tDEFAULT_VALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: DEFAULT_INVALID_COLOR\n\t * \n\t * Specifies the default invalid color. Default is #FF0000.\n\t */\n\tDEFAULT_INVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Specifies the default highlight color for shape outlines.\n\t * Default is #0000FF. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: OUTLINE_HIGHLIGHT_COLOR\n\t * \n\t * Defines the strokewidth to be used for shape outlines.\n\t * Default is 5. This is used in <mxEdgeHandler>.\n\t */\n\tOUTLINE_HIGHLIGHT_STROKEWIDTH: 5,\n\n\t/**\n\t * Variable: HIGHLIGHT_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the highlights.\n\t * Default is 3.\n\t */\n\tHIGHLIGHT_STROKEWIDTH: 3,\n\n\t/**\n\t * Variable: CONSTRAINT_HIGHLIGHT_SIZE\n\t * \n\t * Size of the constraint highlight (in px). Default is 2.\n\t */\n\tHIGHLIGHT_SIZE: 2,\n\t\n\t/**\n\t * Variable: HIGHLIGHT_OPACITY\n\t * \n\t * Opacity (in %) used for the highlights (including outline).\n\t * Default is 100.\n\t */\n\tHIGHLIGHT_OPACITY: 100,\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_VERTEX\n\t * \n\t * Defines the cursor for a movable vertex. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_VERTEX: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_MOVABLE_EDGE\n\t * \n\t * Defines the cursor for a movable edge. Default is 'move'.\n\t */\n\tCURSOR_MOVABLE_EDGE: 'move',\n\t\n\t/**\n\t * Variable: CURSOR_LABEL_HANDLE\n\t * \n\t * Defines the cursor for a movable label. Default is 'default'.\n\t */\n\tCURSOR_LABEL_HANDLE: 'default',\n\t\n\t/**\n\t * Variable: CURSOR_TERMINAL_HANDLE\n\t * \n\t * Defines the cursor for a terminal handle. Default is 'pointer'.\n\t */\n\tCURSOR_TERMINAL_HANDLE: 'pointer',\n\t\n\t/**\n\t * Variable: CURSOR_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_BEND_HANDLE: 'crosshair',\n\n\t/**\n\t * Variable: CURSOR_VIRTUAL_BEND_HANDLE\n\t * \n\t * Defines the cursor for a movable bend. Default is 'crosshair'.\n\t */\n\tCURSOR_VIRTUAL_BEND_HANDLE: 'crosshair',\n\t\n\t/**\n\t * Variable: CURSOR_CONNECT\n\t * \n\t * Defines the cursor for a connectable state. Default is 'pointer'.\n\t */\n\tCURSOR_CONNECT: 'pointer',\n\n\t/**\n\t * Variable: HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for the cell highlighting.\n\t * Use 'none' for no color. Default is #00FF00.\n\t */\n\tHIGHLIGHT_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: TARGET_HIGHLIGHT_COLOR\n\t * \n\t * Defines the color to be used for highlighting a target cell for a new\n\t * or changed connection. Note that this may be either a source or\n\t * target terminal in the graph. Use 'none' for no color.\n\t * Default is #0000FF.\n\t */\n\tCONNECT_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: INVALID_CONNECT_TARGET_COLOR\n\t * \n\t * Defines the color to be used for highlighting a invalid target cells\n\t * for a new or changed connections. Note that this may be either a source\n\t * or target terminal in the graph. Use 'none' for no color. Default is\n\t * #FF0000.\n\t */\n\tINVALID_CONNECT_TARGET_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: DROP_TARGET_COLOR\n\t * \n\t * Defines the color to be used for the highlighting target parent cells\n\t * (for drag and drop). Use 'none' for no color. Default is #0000FF.\n\t */\n\tDROP_TARGET_COLOR: '#0000FF',\n\n\t/**\n\t * Variable: VALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring valid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tVALID_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: INVALID_COLOR\n\t * \n\t * Defines the color to be used for the coloring invalid connection\n\t * previews. Use 'none' for no color. Default is #FF0000.\n\t */\n\tINVALID_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: EDGE_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of edges. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tEDGE_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_COLOR\n\t * \n\t * Defines the color to be used for the selection border of vertices. Use\n\t * 'none' for no color. Default is #00FF00.\n\t */\n\tVERTEX_SELECTION_COLOR: '#00FF00',\n\n\t/**\n\t * Variable: VERTEX_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for vertex selections.\n\t * Default is 1.\n\t */\n\tVERTEX_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: EDGE_SELECTION_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for edge selections.\n\t * Default is 1.\n\t */\n\tEDGE_SELECTION_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the vertex selection\n\t * border. Default is true.\n\t */\n\tVERTEX_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: SELECTION_DASHED\n\t * \n\t * Defines the dashed state to be used for the edge selection\n\t * border. Default is true.\n\t */\n\tEDGE_SELECTION_DASHED: true,\n\n\t/**\n\t * Variable: GUIDE_COLOR\n\t * \n\t * Defines the color to be used for the guidelines in mxGraphHandler.\n\t * Default is #FF0000.\n\t */\n\tGUIDE_COLOR: '#FF0000',\n\n\t/**\n\t * Variable: GUIDE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the guidelines in mxGraphHandler.\n\t * Default is 1.\n\t */\n\tGUIDE_STROKEWIDTH: 1,\n\n\t/**\n\t * Variable: OUTLINE_COLOR\n\t * \n\t * Defines the color to be used for the outline rectangle\n\t * border.  Use 'none' for no color. Default is #0099FF.\n\t */\n\tOUTLINE_COLOR: '#0099FF',\n\n\t/**\n\t * Variable: OUTLINE_STROKEWIDTH\n\t * \n\t * Defines the strokewidth to be used for the outline rectangle\n\t * stroke width. Default is 3.\n\t */\n\tOUTLINE_STROKEWIDTH: (mxClient.IS_IE) ? 2 : 3,\n\n\t/**\n\t * Variable: HANDLE_SIZE\n\t * \n\t * Defines the default size for handles. Default is 6.\n\t */\n\tHANDLE_SIZE: 6,\n\n\t/**\n\t * Variable: LABEL_HANDLE_SIZE\n\t * \n\t * Defines the default size for label handles. Default is 4.\n\t */\n\tLABEL_HANDLE_SIZE: 4,\n\n\t/**\n\t * Variable: HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the handle fill color. Use 'none' for\n\t * no color. Default is #00FF00 (green).\n\t */\n\tHANDLE_FILLCOLOR: '#00FF00',\n\n\t/**\n\t * Variable: HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the handle stroke color. Use 'none' for\n\t * no color. Default is black.\n\t */\n\tHANDLE_STROKECOLOR: 'black',\n\n\t/**\n\t * Variable: LABEL_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the label handle fill color. Use 'none'\n\t * for no color. Default is yellow.\n\t */\n\tLABEL_HANDLE_FILLCOLOR: 'yellow',\n\n\t/**\n\t * Variable: CONNECT_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the connect handle fill color. Use\n\t * 'none' for no color. Default is #0000FF (blue).\n\t */\n\tCONNECT_HANDLE_FILLCOLOR: '#0000FF',\n\n\t/**\n\t * Variable: LOCKED_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the locked handle fill color. Use\n\t * 'none' for no color. Default is #FF0000 (red).\n\t */\n\tLOCKED_HANDLE_FILLCOLOR: '#FF0000',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_FILLCOLOR\n\t * \n\t * Defines the color to be used for the outline sizer fill color. Use\n\t * 'none' for no color. Default is #00FFFF.\n\t */\n\tOUTLINE_HANDLE_FILLCOLOR: '#00FFFF',\n\n\t/**\n\t * Variable: OUTLINE_HANDLE_STROKECOLOR\n\t * \n\t * Defines the color to be used for the outline sizer stroke color. Use\n\t * 'none' for no color. Default is #0033FF.\n\t */\n\tOUTLINE_HANDLE_STROKECOLOR: '#0033FF',\n\n\t/**\n\t * Variable: DEFAULT_FONTFAMILY\n\t * \n\t * Defines the default family for all fonts. Default is Arial,Helvetica.\n\t */\n\tDEFAULT_FONTFAMILY: 'Arial,Helvetica',\n\n\t/**\n\t * Variable: DEFAULT_FONTSIZE\n\t * \n\t * Defines the default size (in px). Default is 11.\n\t */\n\tDEFAULT_FONTSIZE: 11,\n\n\t/**\n\t * Variable: DEFAULT_TEXT_DIRECTION\n\t * \n\t * Defines the default value for the <STYLE_TEXT_DIRECTION> if no value is\n\t * defined for it in the style. Default value is an empty string which means\n\t * the default system setting is used and no direction is set.\n\t */\n\tDEFAULT_TEXT_DIRECTION: '',\n\n\t/**\n\t * Variable: LINE_HEIGHT\n\t * \n\t * Defines the default line height for text labels. Default is 1.2.\n\t */\n\tLINE_HEIGHT: 1.2,\n\n\t/**\n\t * Variable: WORD_WRAP\n\t * \n\t * Defines the CSS value for the word-wrap property. Default is \"normal\".\n\t * Change this to \"break-word\" to allow long words to be able to be broken\n\t * and wrap onto the next line.\n\t */\n\tWORD_WRAP: 'normal',\n\n\t/**\n\t * Variable: ABSOLUTE_LINE_HEIGHT\n\t * \n\t * Specifies if absolute line heights should be used (px) in CSS. Default\n\t * is false. Set this to true for backwards compatibility.\n\t */\n\tABSOLUTE_LINE_HEIGHT: false,\n\n\t/**\n\t * Variable: DEFAULT_FONTSTYLE\n\t * \n\t * Defines the default style for all fonts. Default is 0. This can be set\n\t * to any combination of font styles as follows.\n\t * \n\t * (code)\n\t * mxConstants.DEFAULT_FONTSTYLE = mxConstants.FONT_BOLD | mxConstants.FONT_ITALIC;\n\t * (end)\n\t */\n\tDEFAULT_FONTSTYLE: 0,\n\n\t/**\n\t * Variable: DEFAULT_STARTSIZE\n\t * \n\t * Defines the default start size for swimlanes. Default is 40.\n\t */\n\tDEFAULT_STARTSIZE: 40,\n\n\t/**\n\t * Variable: DEFAULT_MARKERSIZE\n\t * \n\t * Defines the default size for all markers. Default is 6.\n\t */\n\tDEFAULT_MARKERSIZE: 6,\n\n\t/**\n\t * Variable: DEFAULT_IMAGESIZE\n\t * \n\t * Defines the default width and height for images used in the\n\t * label shape. Default is 24.\n\t */\n\tDEFAULT_IMAGESIZE: 24,\n\n\t/**\n\t * Variable: ENTITY_SEGMENT\n\t * \n\t * Defines the length of the horizontal segment of an Entity Relation.\n\t * This can be overridden using <mxConstants.STYLE_SEGMENT> style.\n\t * Default is 30.\n\t */\n\tENTITY_SEGMENT: 30,\n\n\t/**\n\t * Variable: RECTANGLE_ROUNDING_FACTOR\n\t * \n\t * Defines the rounding factor for rounded rectangles in percent between\n\t * 0 and 1. Values should be smaller than 0.5. Default is 0.15.\n\t */\n\tRECTANGLE_ROUNDING_FACTOR: 0.15,\n\n\t/**\n\t * Variable: LINE_ARCSIZE\n\t * \n\t * Defines the size of the arcs for rounded edges. Default is 20.\n\t */\n\tLINE_ARCSIZE: 20,\n\n\t/**\n\t * Variable: ARROW_SPACING\n\t * \n\t * Defines the spacing between the arrow shape and its terminals. Default is 0.\n\t */\n\tARROW_SPACING: 0,\n\n\t/**\n\t * Variable: ARROW_WIDTH\n\t * \n\t * Defines the width of the arrow shape. Default is 30.\n\t */\n\tARROW_WIDTH: 30,\n\n\t/**\n\t * Variable: ARROW_SIZE\n\t * \n\t * Defines the size of the arrowhead in the arrow shape. Default is 30.\n\t */\n\tARROW_SIZE: 30,\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_PORTRAIT: new mxRectangle(0, 0, 827, 1169),\n\n\t/**\n\t * Variable: PAGE_FORMAT_A4_PORTRAIT\n\t * \n\t * Defines the rectangle for the A4 portrait page format. The dimensions\n\t * of this page format are 826x1169 pixels.\n\t */\n\tPAGE_FORMAT_A4_LANDSCAPE: new mxRectangle(0, 0, 1169, 827),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The\n\t * dimensions of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_PORTRAIT: new mxRectangle(0, 0, 850, 1100),\n\n\t/**\n\t * Variable: PAGE_FORMAT_LETTER_PORTRAIT\n\t * \n\t * Defines the rectangle for the Letter portrait page format. The dimensions\n\t * of this page format are 850x1100 pixels.\n\t */\n\tPAGE_FORMAT_LETTER_LANDSCAPE: new mxRectangle(0, 0, 1100, 850),\n\n\t/**\n\t * Variable: NONE\n\t * \n\t * Defines the value for none. Default is \"none\".\n\t */\n\tNONE: 'none',\n\n\t/**\n\t * Variable: STYLE_PERIMETER\n\t * \n\t * Defines the key for the perimeter style. This is a function that defines\n\t * the perimeter around a particular shape. Possible values are the\n\t * functions defined in <mxPerimeter>. Alternatively, the constants in this\n\t * class that start with \"PERIMETER_\" may be used to access\n\t * perimeter styles in <mxStyleRegistry>. Value is \"perimeter\".\n\t */\n\tSTYLE_PERIMETER: 'perimeter',\n\t\n\t/**\n\t * Variable: STYLE_SOURCE_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the source for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"sourcePort\".\n\t */\n\tSTYLE_SOURCE_PORT: 'sourcePort',\n\t\n\t/**\n\t * Variable: STYLE_TARGET_PORT\n\t * \n\t * Defines the ID of the cell that should be used for computing the\n\t * perimeter point of the target for an edge. This allows for graphically\n\t * connecting to a cell while keeping the actual terminal of the edge.\n\t * Value is \"targetPort\".\n\t */\n\tSTYLE_TARGET_PORT: 'targetPort',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to cells in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, \n\t * DIRECTION_EAST\" and \"DIRECTION_WEST\". Value is\n\t * \"portConstraint\".\n\t */\n\tSTYLE_PORT_CONSTRAINT: 'portConstraint',\n\n\t/**\n\t * Variable: STYLE_PORT_CONSTRAINT_ROTATION\n\t * \n\t * Define whether port constraint directions are rotated with vertex\n\t * rotation. 0 (default) causes port constraints to remain absolute, \n\t * relative to the graph, 1 causes the constraints to rotate with\n\t * the vertex. Value is \"portConstraintRotation\".\n\t */\n\tSTYLE_PORT_CONSTRAINT_ROTATION: 'portConstraintRotation',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to sources in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"sourcePortConstraint\".\n\t */\n\tSTYLE_SOURCE_PORT_CONSTRAINT: 'sourcePortConstraint',\n\n\t/**\n\t * Variable: STYLE_TARGET_PORT_CONSTRAINT\n\t * \n\t * Defines the direction(s) that edges are allowed to connect to targets in.\n\t * Possible values are \"DIRECTION_NORTH, DIRECTION_SOUTH, DIRECTION_EAST\"\n\t * and \"DIRECTION_WEST\". Value is \"targetPortConstraint\".\n\t */\n\tSTYLE_TARGET_PORT_CONSTRAINT: 'targetPortConstraint',\n\n\t/**\n\t * Variable: STYLE_OPACITY\n\t * \n\t * Defines the key for the opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"opacity\".\n\t */\n\tSTYLE_OPACITY: 'opacity',\n\n\t/**\n\t * Variable: STYLE_FILL_OPACITY\n\t * \n\t * Defines the key for the fill opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"fillOpacity\".\n\t */\n\tSTYLE_FILL_OPACITY: 'fillOpacity',\n\n\t/**\n\t * Variable: STYLE_STROKE_OPACITY\n\t * \n\t * Defines the key for the stroke opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"strokeOpacity\".\n\t */\n\tSTYLE_STROKE_OPACITY: 'strokeOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_OPACITY\n\t * \n\t * Defines the key for the text opacity style. The type of the value is \n\t * numeric and the possible range is 0-100. Value is \"textOpacity\".\n\t */\n\tSTYLE_TEXT_OPACITY: 'textOpacity',\n\n\t/**\n\t * Variable: STYLE_TEXT_DIRECTION\n\t * \n\t * Defines the key for the text direction style. Possible values are\n\t * \"TEXT_DIRECTION_DEFAULT, TEXT_DIRECTION_AUTO, TEXT_DIRECTION_LTR\"\n\t * and \"TEXT_DIRECTION_RTL\". Value is \"textDirection\".\n\t * The default value for the style is defined in <DEFAULT_TEXT_DIRECTION>.\n\t * It is used is no value is defined for this key in a given style. This is\n\t * an experimental style that is currently ignored in the backends.\n\t */\n\tSTYLE_TEXT_DIRECTION: 'textDirection',\n\n\t/**\n\t * Variable: STYLE_OVERFLOW\n\t * \n\t * Defines the key for the overflow style. Possible values are 'visible',\n\t * 'hidden', 'fill' and 'width'. The default value is 'visible'. This value\n\t * specifies how overlapping vertex labels are handled. A value of\n\t * 'visible' will show the complete label. A value of 'hidden' will clip\n\t * the label so that it does not overlap the vertex bounds. A value of\n\t * 'fill' will use the vertex bounds and a value of 'width' will use the\n\t * the vertex width for the label. See <mxGraph.isLabelClipped>. Note that\n\t * the vertical alignment is ignored for overflow fill and for horizontal\n\t * alignment, left should be used to avoid pixel offsets in Internet Explorer\n\t * 11 and earlier or if foreignObjects are disabled. Value is \"overflow\".\n\t */\n\tSTYLE_OVERFLOW: 'overflow',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL\n\t * \n\t * Defines if the connection points on either end of the edge should be\n\t * computed so that the edge is vertical or horizontal if possible and\n\t * if the point is not at a fixed location. Default is false. This is\n\t * used in <mxGraph.isOrthogonal>, which also returns true if the edgeStyle\n\t * of the edge is an elbow or entity. Value is \"orthogonal\".\n\t */\n\tSTYLE_ORTHOGONAL: 'orthogonal',\n\n\t/**\n\t * Variable: STYLE_EXIT_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitX\".\n\t */\n\tSTYLE_EXIT_X: 'exitX',\n\n\t/**\n\t * Variable: STYLE_EXIT_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its source terminal. Value is \"exitY\".\n\t */\n\tSTYLE_EXIT_Y: 'exitY',\n\n\t\n\t/**\n\t* Variable: STYLE_EXIT_DX\n\t* \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDx\".\n\t*/\n\tSTYLE_EXIT_DX: 'exitDx',\n\n\t/**\n\t* Variable: STYLE_EXIT_DY\n\t* \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its source terminal. Value is \"exitDy\".\n\t*/\n\tSTYLE_EXIT_DY: 'exitDy',\n\t\n\t/**\n\t * Variable: STYLE_EXIT_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the source. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"exitPerimeter\".\n\t */\n\tSTYLE_EXIT_PERIMETER: 'exitPerimeter',\n\n\t/**\n\t * Variable: STYLE_ENTRY_X\n\t * \n\t * Defines the key for the horizontal relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryX\".\n\t */\n\tSTYLE_ENTRY_X: 'entryX',\n\n\t/**\n\t * Variable: STYLE_ENTRY_Y\n\t * \n\t * Defines the key for the vertical relative coordinate connection point\n\t * of an edge with its target terminal. Value is \"entryY\".\n\t */\n\tSTYLE_ENTRY_Y: 'entryY',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DX\n\t * \n\t* Defines the key for the horizontal offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDx\".\n\t*/\n\tSTYLE_ENTRY_DX: 'entryDx',\n\n\t/**\n\t * Variable: STYLE_ENTRY_DY\n\t * \n\t* Defines the key for the vertical offset of the connection point\n\t* of an edge with its target terminal. Value is \"entryDy\".\n\t*/\n\tSTYLE_ENTRY_DY: 'entryDy',\n\n\t/**\n\t * Variable: STYLE_ENTRY_PERIMETER\n\t * \n\t * Defines if the perimeter should be used to find the exact entry point\n\t * along the perimeter of the target. Possible values are 0 (false) and\n\t * 1 (true). Default is 1 (true). Value is \"entryPerimeter\".\n\t */\n\tSTYLE_ENTRY_PERIMETER: 'entryPerimeter',\n\n\t/**\n\t * Variable: STYLE_WHITE_SPACE\n\t * \n\t * Defines the key for the white-space style. Possible values are 'nowrap'\n\t * and 'wrap'. The default value is 'nowrap'. This value specifies how\n\t * white-space inside a HTML vertex label should be handled. A value of\n\t * 'nowrap' means the text will never wrap to the next line until a\n\t * linefeed is encountered. A value of 'wrap' means text will wrap when\n\t * necessary. This style is only used for HTML labels.\n\t * See <mxGraph.isWrapping>. Value is \"whiteSpace\".\n\t */\n\tSTYLE_WHITE_SPACE: 'whiteSpace',\n\n\t/**\n\t * Variable: STYLE_ROTATION\n\t * \n\t * Defines the key for the rotation style. The type of the value is \n\t * numeric and the possible range is 0-360. Value is \"rotation\".\n\t */\n\tSTYLE_ROTATION: 'rotation',\n\n\t/**\n\t * Variable: STYLE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. Value is \"fillColor\".\n\t */\n\tSTYLE_FILLCOLOR: 'fillColor',\n\n\t/**\n\t * Variable: STYLE_POINTER_EVENTS\n\t * \n\t * Specifies if pointer events should be fired on transparent backgrounds.\n\t * This style is currently only supported in <mxRectangleShape>. Default\n\t * is true. Value is \"pointerEvents\". This is typically set to\n\t * false in groups where the transparent part should allow any underlying\n\t * cells to be clickable.\n\t */\n\tSTYLE_POINTER_EVENTS: 'pointerEvents',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_FILLCOLOR\n\t * \n\t * Defines the key for the fill color of the swimlane background. Possible\n\t * values are all HTML color names or HEX codes. Default is no background.\n\t * Value is \"swimlaneFillColor\".\n\t */\n\tSTYLE_SWIMLANE_FILLCOLOR: 'swimlaneFillColor',\n\n\t/**\n\t * Variable: STYLE_MARGIN\n\t * \n\t * Defines the key for the margin between the ellipses in the double ellipse shape.\n\t * Possible values are all positive numbers. Value is \"margin\".\n\t */\n\tSTYLE_MARGIN: 'margin',\n\n\t/**\n\t * Variable: STYLE_GRADIENTCOLOR\n\t * \n\t * Defines the key for the gradient color. Possible values are all HTML color\n\t * names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit' or 'indicated' to use the color code of a related cell or the\n\t * indicator shape. This is ignored if no fill color is defined. Value is\n\t * \"gradientColor\".\n\t */\n\tSTYLE_GRADIENTCOLOR: 'gradientColor',\n\n\t/**\n\t * Variable: STYLE_GRADIENT_DIRECTION\n\t * \n\t * Defines the key for the gradient direction. Possible values are\n\t * <DIRECTION_EAST>, <DIRECTION_WEST>, <DIRECTION_NORTH> and\n\t * <DIRECTION_SOUTH>. Default is <DIRECTION_SOUTH>. Generally, and by\n\t * default in mxGraph, gradient painting is done from the value of\n\t * <STYLE_FILLCOLOR> to the value of <STYLE_GRADIENTCOLOR>. Taking the\n\t * example of <DIRECTION_NORTH>, this means <STYLE_FILLCOLOR> color at the \n\t * bottom of paint pattern and <STYLE_GRADIENTCOLOR> at top, with a\n\t * gradient in-between. Value is \"gradientDirection\".\n\t */\n\tSTYLE_GRADIENT_DIRECTION: 'gradientDirection',\n\n\t/**\n\t * Variable: STYLE_STROKECOLOR\n\t * \n\t * Defines the key for the strokeColor style. Possible values are all HTML\n\t * color names or HEX codes, as well as special keywords such as 'swimlane,\n\t * 'inherit', 'indicated' to use the color code of a related cell or the\n\t * indicator shape or 'none' for no color. Value is \"strokeColor\".\n\t */\n\tSTYLE_STROKECOLOR: 'strokeColor',\n\n\t/**\n\t * Variable: STYLE_SEPARATORCOLOR\n\t * \n\t * Defines the key for the separatorColor style. Possible values are all\n\t * HTML color names or HEX codes. This style is only used for\n\t * <SHAPE_SWIMLANE> shapes. Value is \"separatorColor\".\n\t */\n\tSTYLE_SEPARATORCOLOR: 'separatorColor',\n\n\t/**\n\t * Variable: STYLE_STROKEWIDTH\n\t * \n\t * Defines the key for the strokeWidth style. The type of the value is \n\t * numeric and the possible range is any non-negative value larger or equal\n\t * to 1. The value defines the stroke width in pixels. Note: To hide a\n\t * stroke use strokeColor none. Value is \"strokeWidth\".\n\t */\n\tSTYLE_STROKEWIDTH: 'strokeWidth',\n\n\t/**\n\t * Variable: STYLE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. This value defines how the lines of\n\t * the label are horizontally aligned. <ALIGN_LEFT> mean label text lines\n\t * are aligned to left of the label bounds, <ALIGN_RIGHT> to the right of\n\t * the label bounds and <ALIGN_CENTER> means the center of the text lines\n\t * are aligned in the center of the label bounds. Note this value doesn't\n\t * affect the positioning of the overall label bounds relative to the\n\t * vertex, to move the label bounds horizontally, use\n\t * <STYLE_LABEL_POSITION>. Value is \"align\".\n\t */\n\tSTYLE_ALIGN: 'align',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. This value defines how\n\t * the lines of the label are vertically aligned. <ALIGN_TOP> means the\n\t * topmost label text line is aligned against the top of the label bounds,\n\t * <ALIGN_BOTTOM> means the bottom-most label text line is aligned against\n\t * the bottom of the label bounds and <ALIGN_MIDDLE> means there is equal\n\t * spacing between the topmost text label line and the top of the label\n\t * bounds and the bottom-most text label line and the bottom of the label\n\t * bounds. Note this value doesn't affect the positioning of the overall\n\t * label bounds relative to the vertex, to move the label bounds\n\t * vertically, use <STYLE_VERTICAL_LABEL_POSITION>. Value is \"verticalAlign\".\n\t */\n\tSTYLE_VERTICAL_ALIGN: 'verticalAlign',\n\n\t/**\n\t * Variable: STYLE_LABEL_WIDTH\n\t * \n\t * Defines the key for the width of the label if the label position is not\n\t * center. Value is \"labelWidth\".\n\t */\n\tSTYLE_LABEL_WIDTH: 'labelWidth',\n\n\t/**\n\t * Variable: STYLE_LABEL_POSITION\n\t * \n\t * Defines the key for the horizontal label position of vertices. Possible\n\t * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>. Default is\n\t * <ALIGN_CENTER>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_LEFT> means the entire label bounds is\n\t * placed completely just to the left of the vertex, <ALIGN_RIGHT> means\n\t * adjust to the right and <ALIGN_CENTER> means the label bounds are\n\t * vertically aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label horizontally within the label bounds, use <STYLE_ALIGN>.\n\t * Value is \"labelPosition\".\n\t */\n\tSTYLE_LABEL_POSITION: 'labelPosition',\n\n\t/**\n\t * Variable: STYLE_VERTICAL_LABEL_POSITION\n\t * \n\t * Defines the key for the vertical label position of vertices. Possible\n\t * values are <ALIGN_TOP>, <ALIGN_BOTTOM> and <ALIGN_MIDDLE>. Default is\n\t * <ALIGN_MIDDLE>. The label align defines the position of the label\n\t * relative to the cell. <ALIGN_TOP> means the entire label bounds is\n\t * placed completely just on the top of the vertex, <ALIGN_BOTTOM> means\n\t * adjust on the bottom and <ALIGN_MIDDLE> means the label bounds are\n\t * horizontally aligned with the bounds of the vertex. Note this value\n\t * doesn't affect the positioning of label within the label bounds, to move\n\t * the label vertically within the label bounds, use\n\t * <STYLE_VERTICAL_ALIGN>. Value is \"verticalLabelPosition\".\n\t */\n\tSTYLE_VERTICAL_LABEL_POSITION: 'verticalLabelPosition',\n\t\n\t/**\n\t * Variable: STYLE_IMAGE_ASPECT\n\t * \n\t * Defines the key for the image aspect style. Possible values are 0 (do\n\t * not preserve aspect) or 1 (keep aspect). This is only used in\n\t * <mxImageShape>. Default is 1. Value is \"imageAspect\".\n\t */\n\tSTYLE_IMAGE_ASPECT: 'imageAspect',\n\n\t/**\n\t * Variable: STYLE_IMAGE_ALIGN\n\t * \n\t * Defines the key for the align style. Possible values are <ALIGN_LEFT>,\n\t * <ALIGN_CENTER> and <ALIGN_RIGHT>. The value defines how any image in the\n\t * vertex label is aligned horizontally within the label bounds of a\n\t * <SHAPE_LABEL> shape. Value is \"imageAlign\".\n\t */\n\tSTYLE_IMAGE_ALIGN: 'imageAlign',\n\n\t/**\n\t * Variable: STYLE_IMAGE_VERTICAL_ALIGN\n\t * \n\t * Defines the key for the verticalAlign style. Possible values are\n\t * <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>. The value defines how\n\t * any image in the vertex label is aligned vertically within the label\n\t * bounds of a <SHAPE_LABEL> shape. Value is \"imageVerticalAlign\".\n\t */\n\tSTYLE_IMAGE_VERTICAL_ALIGN: 'imageVerticalAlign',\n\n\t/**\n\t * Variable: STYLE_GLASS\n\t * \n\t * Defines the key for the glass style. Possible values are 0 (disabled) and\n\t * 1(enabled). The default value is 0. This is used in <mxLabel>. Value is\n\t * \"glass\".\n\t */\n\tSTYLE_GLASS: 'glass',\n\n\t/**\n\t * Variable: STYLE_IMAGE\n\t * \n\t * Defines the key for the image style. Possible values are any image URL,\n\t * the type of the value is String. This is the path to the image that is\n\t * to be displayed within the label of a vertex. Data URLs should use the\n\t * following format: data:image/png,xyz where xyz is the base64 encoded\n\t * data (without the \"base64\"-prefix). Note that Data URLs are only\n\t * supported in modern browsers. Value is \"image\".\n\t */\n\tSTYLE_IMAGE: 'image',\n\n\t/**\n\t * Variable: STYLE_IMAGE_WIDTH\n\t * \n\t * Defines the key for the imageWidth style. The type of this value is\n\t * int, the value is the image width in pixels and must be greater than 0.\n\t * Value is \"imageWidth\".\n\t */\n\tSTYLE_IMAGE_WIDTH: 'imageWidth',\n\n\t/**\n\t * Variable: STYLE_IMAGE_HEIGHT\n\t * \n\t * Defines the key for the imageHeight style. The type of this value is\n\t * int, the value is the image height in pixels and must be greater than 0.\n\t * Value is \"imageHeight\".\n\t */\n\tSTYLE_IMAGE_HEIGHT: 'imageHeight',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BACKGROUND\n\t * \n\t * Defines the key for the image background color. This style is only used\n\t * in <mxImageShape>. Possible values are all HTML color names or HEX\n\t * codes. Value is \"imageBackground\".\n\t */\n\tSTYLE_IMAGE_BACKGROUND: 'imageBackground',\n\n\t/**\n\t * Variable: STYLE_IMAGE_BORDER\n\t * \n\t * Defines the key for the image border color. This style is only used in\n\t * <mxImageShape>. Possible values are all HTML color names or HEX codes.\n\t * Value is \"imageBorder\".\n\t */\n\tSTYLE_IMAGE_BORDER: 'imageBorder',\n\n\t/**\n\t * Variable: STYLE_FLIPH\n\t * \n\t * Defines the key for the horizontal image flip. This style is only used\n\t * in <mxImageShape>. Possible values are 0 and 1. Default is 0. Value is\n\t * \"flipH\".\n\t */\n\tSTYLE_FLIPH: 'flipH',\n\n\t/**\n\t * Variable: STYLE_FLIPV\n\t * \n\t * Defines the key for the vertical flip. Possible values are 0 and 1.\n\t * Default is 0. Value is \"flipV\".\n\t */\n\tSTYLE_FLIPV: 'flipV',\n\n\t/**\n\t * Variable: STYLE_NOLABEL\n\t * \n\t * Defines the key for the noLabel style. If this is true then no label is\n\t * visible for a given cell. Possible values are true or false (1 or 0).\n\t * Default is false. Value is \"noLabel\".\n\t */\n\tSTYLE_NOLABEL: 'noLabel',\n\n\t/**\n\t * Variable: STYLE_NOEDGESTYLE\n\t * \n\t * Defines the key for the noEdgeStyle style. If this is true then no edge\n\t * style is applied for a given edge. Possible values are true or false\n\t * (1 or 0). Default is false. Value is \"noEdgeStyle\".\n\t */\n\tSTYLE_NOEDGESTYLE: 'noEdgeStyle',\n\n\t/**\n\t * Variable: STYLE_LABEL_BACKGROUNDCOLOR\n\t * \n\t * Defines the key for the label background color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBackgroundColor\".\n\t */\n\tSTYLE_LABEL_BACKGROUNDCOLOR: 'labelBackgroundColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_BORDERCOLOR\n\t * \n\t * Defines the key for the label border color. Possible values are all\n\t * HTML color names or HEX codes. Value is \"labelBorderColor\".\n\t */\n\tSTYLE_LABEL_BORDERCOLOR: 'labelBorderColor',\n\n\t/**\n\t * Variable: STYLE_LABEL_PADDING\n\t * \n\t * Defines the key for the label padding, ie. the space between the label\n\t * border and the label. Value is \"labelPadding\".\n\t */\n\tSTYLE_LABEL_PADDING: 'labelPadding',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SHAPE\n\t * \n\t * Defines the key for the indicator shape used within an <mxLabel>.\n\t * Possible values are all SHAPE_* constants or the names of any new\n\t * shapes. The indicatorShape has precedence over the indicatorImage.\n\t * Value is \"indicatorShape\".\n\t */\n\tSTYLE_INDICATOR_SHAPE: 'indicatorShape',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_IMAGE\n\t * \n\t * Defines the key for the indicator image used within an <mxLabel>.\n\t * Possible values are all image URLs. The indicatorShape has\n\t * precedence over the indicatorImage. Value is \"indicatorImage\".\n\t */\n\tSTYLE_INDICATOR_IMAGE: 'indicatorImage',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_COLOR\n\t * \n\t * Defines the key for the indicatorColor style. Possible values are all\n\t * HTML color names or HEX codes, as well as the special 'swimlane' keyword\n\t * to refer to the color of the parent swimlane if one exists. Value is\n\t * \"indicatorColor\".\n\t */\n\tSTYLE_INDICATOR_COLOR: 'indicatorColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_STROKECOLOR\n\t * \n\t * Defines the key for the indicator stroke color in <mxLabel>.\n\t * Possible values are all color codes. Value is \"indicatorStrokeColor\".\n\t */\n\tSTYLE_INDICATOR_STROKECOLOR: 'indicatorStrokeColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_GRADIENTCOLOR\n\t * \n\t * Defines the key for the indicatorGradientColor style. Possible values\n\t * are all HTML color names or HEX codes. This style is only supported in\n\t * <SHAPE_LABEL> shapes. Value is \"indicatorGradientColor\".\n\t */\n\tSTYLE_INDICATOR_GRADIENTCOLOR: 'indicatorGradientColor',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_SPACING\n\t * \n\t * The defines the key for the spacing between the label and the\n\t * indicator in <mxLabel>. Possible values are in pixels. Value is\n\t * \"indicatorSpacing\".\n\t */\n\tSTYLE_INDICATOR_SPACING: 'indicatorSpacing',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_WIDTH\n\t * \n\t * Defines the key for the indicator width. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorWidth\".\n\t */\n\tSTYLE_INDICATOR_WIDTH: 'indicatorWidth',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_HEIGHT\n\t * \n\t * Defines the key for the indicator height. Possible values start at 0 (in\n\t * pixels). Value is \"indicatorHeight\".\n\t */\n\tSTYLE_INDICATOR_HEIGHT: 'indicatorHeight',\n\n\t/**\n\t * Variable: STYLE_INDICATOR_DIRECTION\n\t * \n\t * Defines the key for the indicatorDirection style. The direction style is\n\t * used to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"indicatorDirection\".\n\t */\n\tSTYLE_INDICATOR_DIRECTION: 'indicatorDirection',\n\n\t/**\n\t * Variable: STYLE_SHADOW\n\t * \n\t * Defines the key for the shadow style. The type of the value is Boolean.\n\t * Value is \"shadow\".\n\t */\n\tSTYLE_SHADOW: 'shadow',\n\t\n\t/**\n\t * Variable: STYLE_SEGMENT\n\t * \n\t * Defines the key for the segment style. The type of this value is float\n\t * and the value represents the size of the horizontal segment of the\n\t * entity relation style. Default is ENTITY_SEGMENT. Value is \"segment\".\n\t */\n\tSTYLE_SEGMENT: 'segment',\n\t\n\t/**\n\t * Variable: STYLE_ENDARROW\n\t *\n\t * Defines the key for the end arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * Value is \"endArrow\".\n\t *\n\t * Example:\n\t * (code)\n\t * style[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\t * (end)\n\t */\n\tSTYLE_ENDARROW: 'endArrow',\n\n\t/**\n\t * Variable: STYLE_STARTARROW\n\t * \n\t * Defines the key for the start arrow marker. Possible values are all\n\t * constants with an ARROW-prefix. This is only used in <mxConnector>.\n\t * See <STYLE_ENDARROW>. Value is \"startArrow\".\n\t */\n\tSTYLE_STARTARROW: 'startArrow',\n\n\t/**\n\t * Variable: STYLE_ENDSIZE\n\t * \n\t * Defines the key for the endSize style. The type of this value is numeric\n\t * and the value represents the size of the end marker in pixels. Value is\n\t * \"endSize\".\n\t */\n\tSTYLE_ENDSIZE: 'endSize',\n\n\t/**\n\t * Variable: STYLE_STARTSIZE\n\t * \n\t * Defines the key for the startSize style. The type of this value is\n\t * numeric and the value represents the size of the start marker or the\n\t * size of the swimlane title region depending on the shape it is used for.\n\t * Value is \"startSize\".\n\t */\n\tSTYLE_STARTSIZE: 'startSize',\n\n\t/**\n\t * Variable: STYLE_SWIMLANE_LINE\n\t * \n\t * Defines the key for the swimlaneLine style. This style specifies whether\n\t * the line between the title regio of a swimlane should be visible. Use 0\n\t * for hidden or 1 (default) for visible. Value is \"swimlaneLine\".\n\t */\n\tSTYLE_SWIMLANE_LINE: 'swimlaneLine',\n\n\t/**\n\t * Variable: STYLE_ENDFILL\n\t * \n\t * Defines the key for the endFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"endFill\".\n\t */\n\tSTYLE_ENDFILL: 'endFill',\n\n\t/**\n\t * Variable: STYLE_STARTFILL\n\t * \n\t * Defines the key for the startFill style. Use 0 for no fill or 1 (default)\n\t * for fill. (This style is only exported via <mxImageExport>.) Value is\n\t * \"startFill\".\n\t */\n\tSTYLE_STARTFILL: 'startFill',\n\n\t/**\n\t * Variable: STYLE_DASHED\n\t * \n\t * Defines the key for the dashed style. Use 0 (default) for non-dashed or 1\n\t * for dashed. Value is \"dashed\".\n\t */\n\tSTYLE_DASHED: 'dashed',\n\n\t/**\n\t * Defines the key for the dashed pattern style in SVG and image exports.\n\t * The type of this value is a space separated list of numbers that specify\n\t * a custom-defined dash pattern. Dash styles are defined in terms of the\n\t * length of the dash (the drawn part of the stroke) and the length of the\n\t * space between the dashes. The lengths are relative to the line width: a\n\t * length of \"1\" is equal to the line width. VML ignores this style and\n\t * uses dashStyle instead as defined in the VML specification. This style\n\t * is only used in the <mxConnector> shape. Value is \"dashPattern\".\n\t */\n\tSTYLE_DASH_PATTERN: 'dashPattern',\n\n\t/**\n\t * Variable: STYLE_FIX_DASH\n\t * \n\t * Defines the key for the fixDash style. Use 0 (default) for dash patterns\n\t * that depend on the linewidth and 1 for dash patterns that ignore the\n\t * line width. Value is \"fixDash\".\n\t */\n\tSTYLE_FIX_DASH: 'fixDash',\n\n\t/**\n\t * Variable: STYLE_ROUNDED\n\t * \n\t * Defines the key for the rounded style. The type of this value is\n\t * Boolean. For edges this determines whether or not joins between edges\n\t * segments are smoothed to a rounded finish. For vertices that have the\n\t * rectangle shape, this determines whether or not the rectangle is\n\t * rounded. Use 0 (default) for non-rounded or 1 for rounded. Value is\n\t * \"rounded\".\n\t */\n\tSTYLE_ROUNDED: 'rounded',\n\n\t/**\n\t * Variable: STYLE_CURVED\n\t * \n\t * Defines the key for the curved style. The type of this value is\n\t * Boolean. It is only applicable for connector shapes. Use 0 (default)\n\t * for non-curved or 1 for curved. Value is \"curved\".\n\t */\n\tSTYLE_CURVED: 'curved',\n\n\t/**\n\t * Variable: STYLE_ARCSIZE\n\t * \n\t * Defines the rounding factor for a rounded rectangle in percent (without\n\t * the percent sign). Possible values are between 0 and 100. If this value\n\t * is not specified then RECTANGLE_ROUNDING_FACTOR * 100 is used. For\n\t * edges, this defines the absolute size of rounded corners in pixels. If\n\t * this values is not specified then LINE_ARCSIZE is used.\n\t * (This style is only exported via <mxImageExport>.) Value is \"arcSize\".\n\t */\n\tSTYLE_ARCSIZE: 'arcSize',\n\n\t/**\n\t * Variable: STYLE_ABSOLUTE_ARCSIZE\n\t * \n\t * Defines the key for the absolute arc size style. This specifies if\n\t * arcSize for rectangles is abolute or relative. Possible values are 1\n\t * and 0 (default). Value is \"absoluteArcSize\".\n\t */\n\tSTYLE_ABSOLUTE_ARCSIZE: 'absoluteArcSize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the source perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the source connection point of\n\t * an edge and the perimeter of the source vertex in pixels. This style\n\t * only applies to edges. Value is \"sourcePerimeterSpacing\".\n\t */\n\tSTYLE_SOURCE_PERIMETER_SPACING: 'sourcePerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_TARGET_PERIMETER_SPACING\n\t * \n\t * Defines the key for the target perimeter spacing. The type of this value\n\t * is numeric. This is the distance between the target connection point of\n\t * an edge and the perimeter of the target vertex in pixels. This style\n\t * only applies to edges. Value is \"targetPerimeterSpacing\".\n\t */\n\tSTYLE_TARGET_PERIMETER_SPACING: 'targetPerimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_PERIMETER_SPACING\n\t * \n\t * Defines the key for the perimeter spacing. This is the distance between\n\t * the connection point and the perimeter in pixels. When used in a vertex\n\t * style, this applies to all incoming edges to floating ports (edges that\n\t * terminate on the perimeter of the vertex). When used in an edge style,\n\t * this spacing applies to the source and target separately, if they\n\t * terminate in floating ports (on the perimeter of the vertex). Value is\n\t * \"perimeterSpacing\".\n\t */\n\tSTYLE_PERIMETER_SPACING: 'perimeterSpacing',\n\n\t/**\n\t * Variable: STYLE_SPACING\n\t * \n\t * Defines the key for the spacing. The value represents the spacing, in\n\t * pixels, added to each side of a label in a vertex (style applies to\n\t * vertices only). Value is \"spacing\".\n\t */\n\tSTYLE_SPACING: 'spacing',\n\n\t/**\n\t * Variable: STYLE_SPACING_TOP\n\t * \n\t * Defines the key for the spacingTop style. The value represents the\n\t * spacing, in pixels, added to the top side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingTop\".\n\t */\n\tSTYLE_SPACING_TOP: 'spacingTop',\n\n\t/**\n\t * Variable: STYLE_SPACING_LEFT\n\t * \n\t * Defines the key for the spacingLeft style. The value represents the\n\t * spacing, in pixels, added to the left side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingLeft\".\n\t */\n\tSTYLE_SPACING_LEFT: 'spacingLeft',\n\n\t/**\n\t * Variable: STYLE_SPACING_BOTTOM\n\t * \n\t * Defines the key for the spacingBottom style The value represents the\n\t * spacing, in pixels, added to the bottom side of a label in a vertex\n\t * (style applies to vertices only). Value is \"spacingBottom\".\n\t */\n\tSTYLE_SPACING_BOTTOM: 'spacingBottom',\n\n\t/**\n\t * Variable: STYLE_SPACING_RIGHT\n\t * \n\t * Defines the key for the spacingRight style The value represents the\n\t * spacing, in pixels, added to the right side of a label in a vertex (style\n\t * applies to vertices only). Value is \"spacingRight\".\n\t */\n\tSTYLE_SPACING_RIGHT: 'spacingRight',\n\n\t/**\n\t * Variable: STYLE_HORIZONTAL\n\t * \n\t * Defines the key for the horizontal style. Possible values are\n\t * true or false. This value only applies to vertices. If the <STYLE_SHAPE>\n\t * is \"SHAPE_SWIMLANE\" a value of false indicates that the\n\t * swimlane should be drawn vertically, true indicates to draw it\n\t * horizontally. If the shape style does not indicate that this vertex is a\n\t * swimlane, this value affects only whether the label is drawn\n\t * horizontally or vertically. Value is \"horizontal\".\n\t */\n\tSTYLE_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: STYLE_DIRECTION\n\t * \n\t * Defines the key for the direction style. The direction style is used\n\t * to specify the direction of certain shapes (eg. <mxTriangle>).\n\t * Possible values are <DIRECTION_EAST> (default), <DIRECTION_WEST>,\n\t * <DIRECTION_NORTH> and <DIRECTION_SOUTH>. Value is \"direction\".\n\t */\n\tSTYLE_DIRECTION: 'direction',\n\n\t/**\n\t * Variable: STYLE_ANCHOR_POINT_DIRECTION\n\t * \n\t * Defines the key for the anchorPointDirection style. The defines if the\n\t * direction style should be taken into account when computing the fixed\n\t * point location for connected edges. Default is 1 (yes). Set this to 0\n\t * to ignore the direction style for fixed connection points. Value is\n\t * \"anchorPointDirection\".\n\t */\n\tSTYLE_ANCHOR_POINT_DIRECTION: 'anchorPointDirection',\n\n\t/**\n\t * Variable: STYLE_ELBOW\n\t * \n\t * Defines the key for the elbow style. Possible values are\n\t * <ELBOW_HORIZONTAL> and <ELBOW_VERTICAL>. Default is <ELBOW_HORIZONTAL>.\n\t * This defines how the three segment orthogonal edge style leaves its\n\t * terminal vertices. The vertical style leaves the terminal vertices at\n\t * the top and bottom sides. Value is \"elbow\".\n\t */\n\tSTYLE_ELBOW: 'elbow',\n\n\t/**\n\t * Variable: STYLE_FONTCOLOR\n\t * \n\t * Defines the key for the fontColor style. Possible values are all HTML\n\t * color names or HEX codes. Value is \"fontColor\".\n\t */\n\tSTYLE_FONTCOLOR: 'fontColor',\n\n\t/**\n\t * Variable: STYLE_FONTFAMILY\n\t * \n\t * Defines the key for the fontFamily style. Possible values are names such\n\t * as Arial; Dialog; Verdana; Times New Roman. The value is of type String.\n\t * Value is fontFamily.\n\t */\n\tSTYLE_FONTFAMILY: 'fontFamily',\n\n\t/**\n\t * Variable: STYLE_FONTSIZE\n\t * \n\t * Defines the key for the fontSize style (in px). The type of the value\n\t * is int. Value is \"fontSize\".\n\t */\n\tSTYLE_FONTSIZE: 'fontSize',\n\n\t/**\n\t * Variable: STYLE_FONTSTYLE\n\t * \n\t * Defines the key for the fontStyle style. Values may be any logical AND\n\t * (sum) of <FONT_BOLD>, <FONT_ITALIC> and <FONT_UNDERLINE>.\n\t * The type of the value is int. Value is \"fontStyle\".\n\t */\n\tSTYLE_FONTSTYLE: 'fontStyle',\n\t\n\t/**\n\t * Variable: STYLE_ASPECT\n\t * \n\t * Defines the key for the aspect style. Possible values are empty or fixed.\n\t * If fixed is used then the aspect ratio of the cell will be maintained\n\t * when resizing. Default is empty. Value is \"aspect\".\n\t */\n\tSTYLE_ASPECT: 'aspect',\n\n\t/**\n\t * Variable: STYLE_AUTOSIZE\n\t * \n\t * Defines the key for the autosize style. This specifies if a cell should be\n\t * resized automatically if the value has changed. Possible values are 0 or 1.\n\t * Default is 0. See <mxGraph.isAutoSizeCell>. This is normally combined with\n\t * <STYLE_RESIZABLE> to disable manual sizing. Value is \"autosize\".\n\t */\n\tSTYLE_AUTOSIZE: 'autosize',\n\n\t/**\n\t * Variable: STYLE_FOLDABLE\n\t * \n\t * Defines the key for the foldable style. This specifies if a cell is foldable\n\t * using a folding icon. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellFoldable>. Value is \"foldable\".\n\t */\n\tSTYLE_FOLDABLE: 'foldable',\n\n\t/**\n\t * Variable: STYLE_EDITABLE\n\t * \n\t * Defines the key for the editable style. This specifies if the value of\n\t * a cell can be edited using the in-place editor. Possible values are 0 or\n\t * 1. Default is 1. See <mxGraph.isCellEditable>. Value is \"editable\".\n\t */\n\tSTYLE_EDITABLE: 'editable',\n\n\t/**\n\t * Variable: STYLE_BACKGROUND_OUTLINE\n\t * \n\t * Defines the key for the backgroundOutline style. This specifies if a\n\t * only the background of a cell should be painted when it is highlighted.\n\t * Possible values are 0 or 1. Default is 0. Value is \"backgroundOutline\".\n\t */\n\tSTYLE_BACKGROUND_OUTLINE: 'backgroundOutline',\n\n\t/**\n\t * Variable: STYLE_BENDABLE\n\t * \n\t * Defines the key for the bendable style. This specifies if the control\n\t * points of an edge can be moved. Possible values are 0 or 1. Default is\n\t * 1. See <mxGraph.isCellBendable>. Value is \"bendable\".\n\t */\n\tSTYLE_BENDABLE: 'bendable',\n\n\t/**\n\t * Variable: STYLE_MOVABLE\n\t * \n\t * Defines the key for the movable style. This specifies if a cell can\n\t * be moved. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellMovable>. Value is \"movable\".\n\t */\n\tSTYLE_MOVABLE: 'movable',\n\n\t/**\n\t * Variable: STYLE_RESIZABLE\n\t * \n\t * Defines the key for the resizable style. This specifies if a cell can\n\t * be resized. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellResizable>. Value is \"resizable\".\n\t */\n\tSTYLE_RESIZABLE: 'resizable',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeWidth style. This specifies if a cell's\n\t * width is resized if the parent is resized. If this is 1 then the width\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's width will not be resized. Default is not defined. Value\n\t * is \"resizeWidth\".\n\t */\n\tSTYLE_RESIZE_WIDTH: 'resizeWidth',\n\n\t/**\n\t * Variable: STYLE_RESIZE_WIDTH\n\t * \n\t * Defines the key for the resizeHeight style. This specifies if a cell's\n\t * height if resize if the parent is resized. If this is 1 then the height\n\t * will be resized even if the cell's geometry is relative. If this is 0\n\t * then the cell's height will not be resized. Default is not defined. Value\n\t * is \"resizeHeight\".\n\t */\n\tSTYLE_RESIZE_HEIGHT: 'resizeHeight',\n\n\t/**\n\t * Variable: STYLE_ROTATABLE\n\t * \n\t * Defines the key for the rotatable style. This specifies if a cell can\n\t * be rotated. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellRotatable>. Value is \"rotatable\".\n\t */\n\tSTYLE_ROTATABLE: 'rotatable',\n\n\t/**\n\t * Variable: STYLE_CLONEABLE\n\t * \n\t * Defines the key for the cloneable style. This specifies if a cell can\n\t * be cloned. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellCloneable>. Value is \"cloneable\".\n\t */\n\tSTYLE_CLONEABLE: 'cloneable',\n\n\t/**\n\t * Variable: STYLE_DELETABLE\n\t * \n\t * Defines the key for the deletable style. This specifies if a cell can be\n\t * deleted. Possible values are 0 or 1. Default is 1. See\n\t * <mxGraph.isCellDeletable>. Value is \"deletable\".\n\t */\n\tSTYLE_DELETABLE: 'deletable',\n\n\t/**\n\t * Variable: STYLE_SHAPE\n\t * \n\t * Defines the key for the shape. Possible values are all constants with\n\t * a SHAPE-prefix or any newly defined shape names. Value is \"shape\".\n\t */\n\tSTYLE_SHAPE: 'shape',\n\n\t/**\n\t * Variable: STYLE_EDGE\n\t * \n\t * Defines the key for the edge style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"edgeStyle\".\n\t */\n\tSTYLE_EDGE: 'edgeStyle',\n\n\t/**\n\t * Variable: STYLE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are all numeric values or \"auto\".\n\t * Jetty size is the minimum length of the orthogonal segment before\n\t * it attaches to a shape.\n\t * Value is \"jettySize\".\n\t */\n\tSTYLE_JETTY_SIZE: 'jettySize',\n\n\t/**\n\t * Variable: STYLE_SOURCE_JETTY_SIZE\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"sourceJettySize\".\n\t */\n\tSTYLE_SOURCE_JETTY_SIZE: 'sourceJettySize',\n\n\t/**\n\t * Variable: targetJettySize\n\t * \n\t * Defines the key for the jetty size in <mxEdgeStyle.OrthConnector>.\n\t * Default is 10. Possible values are numeric values or \"auto\". This has\n\t * precedence over <STYLE_JETTY_SIZE>. Value is \"targetJettySize\".\n\t */\n\tSTYLE_TARGET_JETTY_SIZE: 'targetJettySize',\n\n\t/**\n\t * Variable: STYLE_LOOP\n\t * \n\t * Defines the key for the loop style. Possible values are the functions\n\t * defined in <mxEdgeStyle>. Value is \"loopStyle\". Default is\n\t * <mxGraph.defaultLoopStylean>.\n\t */\n\tSTYLE_LOOP: 'loopStyle',\n\n\t/**\n\t * Variable: STYLE_ORTHOGONAL_LOOP\n\t * \n\t * Defines the key for the orthogonal loop style. Possible values are 0 and\n\t * 1. Default is 0. Value is \"orthogonalLoop\". Use this style to specify\n\t * if loops with no waypoints and defined anchor points should be routed\n\t * using <STYLE_LOOP> or not routed.\n\t */\n\tSTYLE_ORTHOGONAL_LOOP: 'orthogonalLoop',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_X\n\t * \n\t * Defines the key for the horizontal routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterX\".\n\t */\n\tSTYLE_ROUTING_CENTER_X: 'routingCenterX',\n\n\t/**\n\t * Variable: STYLE_ROUTING_CENTER_Y\n\t * \n\t * Defines the key for the vertical routing center. Possible values are\n\t * between -0.5 and 0.5. This is the relative offset from the center used\n\t * for connecting edges. The type of this value is numeric. Value is\n\t * \"routingCenterY\".\n\t */\n\tSTYLE_ROUTING_CENTER_Y: 'routingCenterY',\n\n\t/**\n\t * Variable: FONT_BOLD\n\t * \n\t * Constant for bold fonts. Default is 1.\n\t */\n\tFONT_BOLD: 1,\n\n\t/**\n\t * Variable: FONT_ITALIC\n\t * \n\t * Constant for italic fonts. Default is 2.\n\t */\n\tFONT_ITALIC: 2,\n\n\t/**\n\t * Variable: FONT_UNDERLINE\n\t * \n\t * Constant for underlined fonts. Default is 4.\n\t */\n\tFONT_UNDERLINE: 4,\n\n\t/**\n\t * Variable: SHAPE_RECTANGLE\n\t * \n\t * Name under which <mxRectangleShape> is registered in <mxCellRenderer>.\n\t * Default is rectangle.\n\t */\n\tSHAPE_RECTANGLE: 'rectangle',\n\n\t/**\n\t * Variable: SHAPE_ELLIPSE\n\t * \n\t * Name under which <mxEllipse> is registered in <mxCellRenderer>.\n\t * Default is ellipse.\n\t */\n\tSHAPE_ELLIPSE: 'ellipse',\n\n\t/**\n\t * Variable: SHAPE_DOUBLE_ELLIPSE\n\t * \n\t * Name under which <mxDoubleEllipse> is registered in <mxCellRenderer>.\n\t * Default is doubleEllipse.\n\t */\n\tSHAPE_DOUBLE_ELLIPSE: 'doubleEllipse',\n\n\t/**\n\t * Variable: SHAPE_RHOMBUS\n\t * \n\t * Name under which <mxRhombus> is registered in <mxCellRenderer>.\n\t * Default is rhombus.\n\t */\n\tSHAPE_RHOMBUS: 'rhombus',\n\n\t/**\n\t * Variable: SHAPE_LINE\n\t * \n\t * Name under which <mxLine> is registered in <mxCellRenderer>.\n\t * Default is line.\n\t */\n\tSHAPE_LINE: 'line',\n\n\t/**\n\t * Variable: SHAPE_IMAGE\n\t * \n\t * Name under which <mxImageShape> is registered in <mxCellRenderer>.\n\t * Default is image.\n\t */\n\tSHAPE_IMAGE: 'image',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW\n\t * \n\t * Name under which <mxArrow> is registered in <mxCellRenderer>.\n\t * Default is arrow.\n\t */\n\tSHAPE_ARROW: 'arrow',\n\t\n\t/**\n\t * Variable: SHAPE_ARROW_CONNECTOR\n\t * \n\t * Name under which <mxArrowConnector> is registered in <mxCellRenderer>.\n\t * Default is arrowConnector.\n\t */\n\tSHAPE_ARROW_CONNECTOR: 'arrowConnector',\n\t\n\t/**\n\t * Variable: SHAPE_LABEL\n\t * \n\t * Name under which <mxLabel> is registered in <mxCellRenderer>.\n\t * Default is label.\n\t */\n\tSHAPE_LABEL: 'label',\n\t\n\t/**\n\t * Variable: SHAPE_CYLINDER\n\t * \n\t * Name under which <mxCylinder> is registered in <mxCellRenderer>.\n\t * Default is cylinder.\n\t */\n\tSHAPE_CYLINDER: 'cylinder',\n\t\n\t/**\n\t * Variable: SHAPE_SWIMLANE\n\t * \n\t * Name under which <mxSwimlane> is registered in <mxCellRenderer>.\n\t * Default is swimlane.\n\t */\n\tSHAPE_SWIMLANE: 'swimlane',\n\t\t\n\t/**\n\t * Variable: SHAPE_CONNECTOR\n\t * \n\t * Name under which <mxConnector> is registered in <mxCellRenderer>.\n\t * Default is connector.\n\t */\n\tSHAPE_CONNECTOR: 'connector',\n\n\t/**\n\t * Variable: SHAPE_ACTOR\n\t * \n\t * Name under which <mxActor> is registered in <mxCellRenderer>.\n\t * Default is actor.\n\t */\n\tSHAPE_ACTOR: 'actor',\n\t\t\n\t/**\n\t * Variable: SHAPE_CLOUD\n\t * \n\t * Name under which <mxCloud> is registered in <mxCellRenderer>.\n\t * Default is cloud.\n\t */\n\tSHAPE_CLOUD: 'cloud',\n\t\t\n\t/**\n\t * Variable: SHAPE_TRIANGLE\n\t * \n\t * Name under which <mxTriangle> is registered in <mxCellRenderer>.\n\t * Default is triangle.\n\t */\n\tSHAPE_TRIANGLE: 'triangle',\n\t\t\n\t/**\n\t * Variable: SHAPE_HEXAGON\n\t * \n\t * Name under which <mxHexagon> is registered in <mxCellRenderer>.\n\t * Default is hexagon.\n\t */\n\tSHAPE_HEXAGON: 'hexagon',\n\n\t/**\n\t * Variable: ARROW_CLASSIC\n\t * \n\t * Constant for classic arrow markers.\n\t */\n\tARROW_CLASSIC: 'classic',\n\n\t/**\n\t * Variable: ARROW_CLASSIC_THIN\n\t * \n\t * Constant for thin classic arrow markers.\n\t */\n\tARROW_CLASSIC_THIN: 'classicThin',\n\n\t/**\n\t * Variable: ARROW_BLOCK\n\t * \n\t * Constant for block arrow markers.\n\t */\n\tARROW_BLOCK: 'block',\n\n\t/**\n\t * Variable: ARROW_BLOCK_THIN\n\t * \n\t * Constant for thin block arrow markers.\n\t */\n\tARROW_BLOCK_THIN: 'blockThin',\n\n\t/**\n\t * Variable: ARROW_OPEN\n\t * \n\t * Constant for open arrow markers.\n\t */\n\tARROW_OPEN: 'open',\n\n\t/**\n\t * Variable: ARROW_OPEN_THIN\n\t * \n\t * Constant for thin open arrow markers.\n\t */\n\tARROW_OPEN_THIN: 'openThin',\n\n\t/**\n\t * Variable: ARROW_OVAL\n\t * \n\t * Constant for oval arrow markers.\n\t */\n\tARROW_OVAL: 'oval',\n\n\t/**\n\t * Variable: ARROW_DIAMOND\n\t * \n\t * Constant for diamond arrow markers.\n\t */\n\tARROW_DIAMOND: 'diamond',\n\n\t/**\n\t * Variable: ARROW_DIAMOND_THIN\n\t * \n\t * Constant for thin diamond arrow markers.\n\t */\n\tARROW_DIAMOND_THIN: 'diamondThin',\n\n\t/**\n\t * Variable: ALIGN_LEFT\n\t * \n\t * Constant for left horizontal alignment. Default is left.\n\t */\n\tALIGN_LEFT: 'left',\n\n\t/**\n\t * Variable: ALIGN_CENTER\n\t * \n\t * Constant for center horizontal alignment. Default is center.\n\t */\n\tALIGN_CENTER: 'center',\n\n\t/**\n\t * Variable: ALIGN_RIGHT\n\t * \n\t * Constant for right horizontal alignment. Default is right.\n\t */\n\tALIGN_RIGHT: 'right',\n\n\t/**\n\t * Variable: ALIGN_TOP\n\t * \n\t * Constant for top vertical alignment. Default is top.\n\t */\n\tALIGN_TOP: 'top',\n\n\t/**\n\t * Variable: ALIGN_MIDDLE\n\t * \n\t * Constant for middle vertical alignment. Default is middle.\n\t */\n\tALIGN_MIDDLE: 'middle',\n\n\t/**\n\t * Variable: ALIGN_BOTTOM\n\t * \n\t * Constant for bottom vertical alignment. Default is bottom.\n\t */\n\tALIGN_BOTTOM: 'bottom',\n\n\t/**\n\t * Variable: DIRECTION_NORTH\n\t * \n\t * Constant for direction north. Default is north.\n\t */\n\tDIRECTION_NORTH: 'north',\n\n\t/**\n\t * Variable: DIRECTION_SOUTH\n\t * \n\t * Constant for direction south. Default is south.\n\t */\n\tDIRECTION_SOUTH: 'south',\n\n\t/**\n\t * Variable: DIRECTION_EAST\n\t * \n\t * Constant for direction east. Default is east.\n\t */\n\tDIRECTION_EAST: 'east',\n\n\t/**\n\t * Variable: DIRECTION_WEST\n\t * \n\t * Constant for direction west. Default is west.\n\t */\n\tDIRECTION_WEST: 'west',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_DEFAULT\n\t * \n\t * Constant for text direction default. Default is an empty string. Use\n\t * this value to use the default text direction of the operating system. \n\t */\n\tTEXT_DIRECTION_DEFAULT: '',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_AUTO\n\t * \n\t * Constant for text direction automatic. Default is auto. Use this value\n\t * to find the direction for a given text with <mxText.getAutoDirection>. \n\t */\n\tTEXT_DIRECTION_AUTO: 'auto',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_LTR\n\t * \n\t * Constant for text direction left to right. Default is ltr. Use this\n\t * value for left to right text direction.\n\t */\n\tTEXT_DIRECTION_LTR: 'ltr',\n\n\t/**\n\t * Variable: TEXT_DIRECTION_RTL\n\t * \n\t * Constant for text direction right to left. Default is rtl. Use this\n\t * value for right to left text direction.\n\t */\n\tTEXT_DIRECTION_RTL: 'rtl',\n\n\t/**\n\t * Variable: DIRECTION_MASK_NONE\n\t * \n\t * Constant for no direction.\n\t */\n\tDIRECTION_MASK_NONE: 0,\n\n\t/**\n\t * Variable: DIRECTION_MASK_WEST\n\t * \n\t * Bitwise mask for west direction.\n\t */\n\tDIRECTION_MASK_WEST: 1,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_NORTH\n\t * \n\t * Bitwise mask for north direction.\n\t */\n\tDIRECTION_MASK_NORTH: 2,\n\n\t/**\n\t * Variable: DIRECTION_MASK_SOUTH\n\t * \n\t * Bitwise mask for south direction.\n\t */\n\tDIRECTION_MASK_SOUTH: 4,\n\n\t/**\n\t * Variable: DIRECTION_MASK_EAST\n\t * \n\t * Bitwise mask for east direction.\n\t */\n\tDIRECTION_MASK_EAST: 8,\n\t\n\t/**\n\t * Variable: DIRECTION_MASK_ALL\n\t * \n\t * Bitwise mask for all directions.\n\t */\n\tDIRECTION_MASK_ALL: 15,\n\n\t/**\n\t * Variable: ELBOW_VERTICAL\n\t * \n\t * Constant for elbow vertical. Default is horizontal.\n\t */\n\tELBOW_VERTICAL: 'vertical',\n\n\t/**\n\t * Variable: ELBOW_HORIZONTAL\n\t * \n\t * Constant for elbow horizontal. Default is horizontal.\n\t */\n\tELBOW_HORIZONTAL: 'horizontal',\n\n\t/**\n\t * Variable: EDGESTYLE_ELBOW\n\t * \n\t * Name of the elbow edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ELBOW: 'elbowEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ENTITY_RELATION\n\t * \n\t * Name of the entity relation edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ENTITY_RELATION: 'entityRelationEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_LOOP\n\t * \n\t * Name of the loop edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_LOOP: 'loopEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SIDETOSIDE\n\t * \n\t * Name of the side to side edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SIDETOSIDE: 'sideToSideEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_TOPTOBOTTOM\n\t * \n\t * Name of the top to bottom edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_TOPTOBOTTOM: 'topToBottomEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_ORTHOGONAL\n\t * \n\t * Name of the generic orthogonal edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_ORTHOGONAL: 'orthogonalEdgeStyle',\n\n\t/**\n\t * Variable: EDGESTYLE_SEGMENT\n\t * \n\t * Name of the generic segment edge style. Can be used as a string value\n\t * for the STYLE_EDGE style.\n\t */\n\tEDGESTYLE_SEGMENT: 'segmentEdgeStyle',\n \n\t/**\n\t * Variable: PERIMETER_ELLIPSE\n\t * \n\t * Name of the ellipse perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_ELLIPSE: 'ellipsePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RECTANGLE\n\t *\n\t * Name of the rectangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RECTANGLE: 'rectanglePerimeter',\n\n\t/**\n\t * Variable: PERIMETER_RHOMBUS\n\t * \n\t * Name of the rhombus perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_RHOMBUS: 'rhombusPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_HEXAGON\n\t * \n\t * Name of the hexagon perimeter. Can be used as a string value \n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_HEXAGON: 'hexagonPerimeter',\n\n\t/**\n\t * Variable: PERIMETER_TRIANGLE\n\t * \n\t * Name of the triangle perimeter. Can be used as a string value\n\t * for the STYLE_PERIMETER style.\n\t */\n\tPERIMETER_TRIANGLE: 'trianglePerimeter'\n};\n\n__mxOutput.mxConstants = typeof mxConstants !== 'undefined' ? mxConstants : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventObject\n * \n * The mxEventObject is a wrapper for all properties of a single event.\n * Additionally, it also offers functions to consume the event and check if it\n * was consumed as follows:\n * \n * (code)\n * evt.consume();\n * INV: evt.isConsumed() == true\n * (end)\n * \n * Constructor: mxEventObject\n *\n * Constructs a new event object with the specified name. An optional\n * sequence of key, value pairs can be appended to define properties.\n * \n * Example:\n *\n * (code)\n * new mxEventObject(\"eventName\", key1, val1, .., keyN, valN)\n * (end)\n */\nfunction mxEventObject(name)\n{\n\tthis.name = name;\n\tthis.properties = [];\n\t\n\tfor (var i = 1; i < arguments.length; i += 2)\n\t{\n\t\tif (arguments[i + 1] != null)\n\t\t{\n\t\t\tthis.properties[arguments[i]] = arguments[i + 1];\n\t\t}\n\t}\n};\n\n/**\n * Variable: name\n *\n * Holds the name.\n */\nmxEventObject.prototype.name = null;\n\n/**\n * Variable: properties\n *\n * Holds the properties as an associative array.\n */\nmxEventObject.prototype.properties = null;\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state. Default is false.\n */\nmxEventObject.prototype.consumed = false;\n\n/**\n * Function: getName\n * \n * Returns <name>.\n */\nmxEventObject.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * Function: getProperties\n * \n * Returns <properties>.\n */\nmxEventObject.prototype.getProperties = function()\n{\n\treturn this.properties;\n};\n\n/**\n * Function: getProperty\n * \n * Returns the property for the given key.\n */\nmxEventObject.prototype.getProperty = function(key)\n{\n\treturn this.properties[key];\n};\n\n/**\n * Function: isConsumed\n *\n * Returns true if the event has been consumed.\n */\nmxEventObject.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Consumes the event.\n */\nmxEventObject.prototype.consume = function()\n{\n\tthis.consumed = true;\n};\n\n__mxOutput.mxEventObject = typeof mxEventObject !== 'undefined' ? mxEventObject : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMouseEvent\n * \n * Base class for all mouse events in mxGraph. A listener for this event should\n * implement the following methods:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   mouseDown: function(sender, evt)\n *   {\n *     mxLog.debug('mouseDown');\n *   },\n *   mouseMove: function(sender, evt)\n *   {\n *     mxLog.debug('mouseMove');\n *   },\n *   mouseUp: function(sender, evt)\n *   {\n *     mxLog.debug('mouseUp');\n *   }\n * });\n * (end)\n * \n * Constructor: mxMouseEvent\n *\n * Constructs a new event object for the given arguments.\n * \n * Parameters:\n * \n * evt - Native mouse event.\n * state - Optional <mxCellState> under the mouse.\n * \n */\nfunction mxMouseEvent(evt, state)\n{\n\tthis.evt = evt;\n\tthis.state = state;\n\tthis.sourceState = state;\n};\n\n/**\n * Variable: consumed\n *\n * Holds the consumed state of this event.\n */\nmxMouseEvent.prototype.consumed = false;\n\n/**\n * Variable: evt\n *\n * Holds the inner event object.\n */\nmxMouseEvent.prototype.evt = null;\n\n/**\n * Variable: graphX\n *\n * Holds the x-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphX = null;\n\n/**\n * Variable: graphY\n *\n * Holds the y-coordinate of the event in the graph. This value is set in\n * <mxGraph.fireMouseEvent>.\n */\nmxMouseEvent.prototype.graphY = null;\n\n/**\n * Variable: state\n *\n * Holds the optional <mxCellState> associated with this event.\n */\nmxMouseEvent.prototype.state = null;\n\n/**\n * Variable: sourceState\n * \n * Holds the <mxCellState> that was passed to the constructor. This can be\n * different from <state> depending on the result of <mxGraph.getEventState>.\n */\nmxMouseEvent.prototype.sourceState = null;\n\n/**\n * Function: getEvent\n * \n * Returns <evt>.\n */\nmxMouseEvent.prototype.getEvent = function()\n{\n\treturn this.evt;\n};\n\n/**\n * Function: getSource\n * \n * Returns the target DOM element using <mxEvent.getSource> for <evt>.\n */\nmxMouseEvent.prototype.getSource = function()\n{\n\treturn mxEvent.getSource(this.evt);\n};\n\n/**\n * Function: isSource\n * \n * Returns true if the given <mxShape> is the source of <evt>.\n */\nmxMouseEvent.prototype.isSource = function(shape)\n{\n\tif (shape != null)\n\t{\n\t\treturn mxUtils.isAncestorNode(shape.node, this.getSource());\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getX\n * \n * Returns <evt.clientX>.\n */\nmxMouseEvent.prototype.getX = function()\n{\n\treturn mxEvent.getClientX(this.getEvent());\n};\n\n/**\n * Function: getY\n * \n * Returns <evt.clientY>.\n */\nmxMouseEvent.prototype.getY = function()\n{\n\treturn mxEvent.getClientY(this.getEvent());\n};\n\n/**\n * Function: getGraphX\n * \n * Returns <graphX>.\n */\nmxMouseEvent.prototype.getGraphX = function()\n{\n\treturn this.graphX;\n};\n\n/**\n * Function: getGraphY\n * \n * Returns <graphY>.\n */\nmxMouseEvent.prototype.getGraphY = function()\n{\n\treturn this.graphY;\n};\n\n/**\n * Function: getState\n * \n * Returns <state>.\n */\nmxMouseEvent.prototype.getState = function()\n{\n\treturn this.state;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> in <state> is not null.\n */\nmxMouseEvent.prototype.getCell = function()\n{\n\tvar state = this.getState();\n\t\n\tif (state != null)\n\t{\n\t\treturn state.cell;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isPopupTrigger\n *\n * Returns true if the event is a popup trigger.\n */\nmxMouseEvent.prototype.isPopupTrigger = function()\n{\n\treturn mxEvent.isPopupTrigger(this.getEvent());\n};\n\n/**\n * Function: isConsumed\n *\n * Returns <consumed>.\n */\nmxMouseEvent.prototype.isConsumed = function()\n{\n\treturn this.consumed;\n};\n\n/**\n * Function: consume\n *\n * Sets <consumed> to true and invokes preventDefault on the native event\n * if such a method is defined. This is used mainly to avoid the cursor from\n * being changed to a text cursor in Webkit. You can use the preventDefault\n * flag to disable this functionality.\n * \n * Parameters:\n * \n * preventDefault - Specifies if the native event should be canceled. Default\n * is true.\n */\nmxMouseEvent.prototype.consume = function(preventDefault)\n{\n\tpreventDefault = (preventDefault != null) ? preventDefault : mxEvent.isMouseEvent(this.evt);\n\t\n\tif (preventDefault && this.evt.preventDefault)\n\t{\n\t\tthis.evt.preventDefault();\n\t}\n\n\t// Workaround for images being dragged in IE\n\t// Does not change returnValue in Opera\n\tif (mxClient.IS_IE)\n\t{\n\t\tthis.evt.returnValue = true;\n\t}\n\n\t// Sets local consumed state\n\tthis.consumed = true;\n};\n\n__mxOutput.mxMouseEvent = typeof mxMouseEvent !== 'undefined' ? mxMouseEvent : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEventSource\n *\n * Base class for objects that dispatch named events. To create a subclass that\n * inherits from mxEventSource, the following code is used.\n *\n * (code)\n * function MyClass() { };\n *\n * MyClass.prototype = new mxEventSource();\n * MyClass.prototype.constructor = MyClass;\n * (end)\n *\n * Known Subclasses:\n *\n * <mxGraphModel>, <mxGraph>, <mxGraphView>, <mxEditor>, <mxCellOverlay>,\n * <mxToolbar>, <mxWindow>\n * \n * Constructor: mxEventSource\n *\n * Constructs a new event source.\n */\nfunction mxEventSource(eventSource)\n{\n\tthis.setEventSource(eventSource);\n};\n\n/**\n * Variable: eventListeners\n *\n * Holds the event names and associated listeners in an array. The array\n * contains the event name followed by the respective listener for each\n * registered listener.\n */\nmxEventSource.prototype.eventListeners = null;\n\n/**\n * Variable: eventsEnabled\n *\n * Specifies if events can be fired. Default is true.\n */\nmxEventSource.prototype.eventsEnabled = true;\n\n/**\n * Variable: eventSource\n *\n * Optional source for events. Default is null.\n */\nmxEventSource.prototype.eventSource = null;\n\n/**\n * Function: isEventsEnabled\n * \n * Returns <eventsEnabled>.\n */\nmxEventSource.prototype.isEventsEnabled = function()\n{\n\treturn this.eventsEnabled;\n};\n\n/**\n * Function: setEventsEnabled\n * \n * Sets <eventsEnabled>.\n */\nmxEventSource.prototype.setEventsEnabled = function(value)\n{\n\tthis.eventsEnabled = value;\n};\n\n/**\n * Function: getEventSource\n * \n * Returns <eventSource>.\n */\nmxEventSource.prototype.getEventSource = function()\n{\n\treturn this.eventSource;\n};\n\n/**\n * Function: setEventSource\n * \n * Sets <eventSource>.\n */\nmxEventSource.prototype.setEventSource = function(value)\n{\n\tthis.eventSource = value;\n};\n\n/**\n * Function: addListener\n *\n * Binds the specified function to the given event name. If no event name\n * is given, then the listener is registered for all events.\n * \n * The parameters of the listener are the sender and an <mxEventObject>.\n */\nmxEventSource.prototype.addListener = function(name, funct)\n{\n\tif (this.eventListeners == null)\n\t{\n\t\tthis.eventListeners = [];\n\t}\n\t\n\tthis.eventListeners.push(name);\n\tthis.eventListeners.push(funct);\n};\n\n/**\n * Function: removeListener\n *\n * Removes all occurrences of the given listener from <eventListeners>.\n */\nmxEventSource.prototype.removeListener = function(funct)\n{\n\tif (this.eventListeners != null)\n\t{\n\t\tvar i = 0;\n\t\t\n\t\twhile (i < this.eventListeners.length)\n\t\t{\n\t\t\tif (this.eventListeners[i+1] == funct)\n\t\t\t{\n\t\t\t\tthis.eventListeners.splice(i, 2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ti += 2;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fireEvent\n *\n * Dispatches the given event to the listeners which are registered for\n * the event. The sender argument is optional. The current execution scope\n * (\"this\") is used for the listener invocation (see <mxUtils.bind>).\n *\n * Example:\n *\n * (code)\n * fireEvent(new mxEventObject(\"eventName\", key1, val1, .., keyN, valN))\n * (end)\n * \n * Parameters:\n *\n * evt - <mxEventObject> that represents the event.\n * sender - Optional sender to be passed to the listener. Default value is\n * the return value of <getEventSource>.\n */\nmxEventSource.prototype.fireEvent = function(evt, sender)\n{\n\tif (this.eventListeners != null && this.isEventsEnabled())\n\t{\n\t\tif (evt == null)\n\t\t{\n\t\t\tevt = new mxEventObject();\n\t\t}\n\t\t\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this.getEventSource();\n\t\t}\n\n\t\tif (sender == null)\n\t\t{\n\t\t\tsender = this;\n\t\t}\n\n\t\tvar args = [sender, evt];\n\t\t\n\t\tfor (var i = 0; i < this.eventListeners.length; i += 2)\n\t\t{\n\t\t\tvar listen = this.eventListeners[i];\n\t\t\t\n\t\t\tif (listen == null || listen == evt.getName())\n\t\t\t{\n\t\t\t\tthis.eventListeners[i+1].apply(this, args);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEventSource = typeof mxEventSource !== 'undefined' ? mxEventSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEvent =\n{\n\n\t/**\n\t * Class: mxEvent\n\t * \n\t * Cross-browser DOM event support. For internal event handling,\n\t * <mxEventSource> and the graph event dispatch loop in <mxGraph> are used.\n\t * \n\t * Memory Leaks:\n\t * \n\t * Use this class for adding and removing listeners to/from DOM nodes. The\n\t * <removeAllListeners> function is provided to remove all listeners that\n\t * have been added using <addListener>. The function should be invoked when\n\t * the last reference is removed in the JavaScript code, typically when the\n\t * referenced DOM node is removed from the DOM.\n\t *\n\t * Function: addListener\n\t * \n\t * Binds the function to the specified event on the given element. Use\n\t * <mxUtils.bind> in order to bind the \"this\" keyword inside the function\n\t * to a given execution scope.\n\t */\n\taddListener: function()\n\t{\n\t\tvar updateListenerList = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList == null)\n\t\t\t{\n\t\t\t\telement.mxListenerList = [];\n\t\t\t}\n\t\t\t\n\t\t\tvar entry = {name: eventName, f: funct};\n\t\t\telement.mxListenerList.push(entry);\n\t\t};\n\t\t\n\t\tif (window.addEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.addEventListener(eventName, funct, false);\n\t\t\t\tupdateListenerList(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.attachEvent('on' + eventName, funct);\n\t\t\t\tupdateListenerList(element, eventName, funct);\t\t\t\t\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeListener\n\t *\n\t * Removes the specified listener from the given element.\n\t */\n\tremoveListener: function()\n\t{\n\t\tvar updateListener = function(element, eventName, funct)\n\t\t{\n\t\t\tif (element.mxListenerList != null)\n\t\t\t{\n\t\t\t\tvar listenerCount = element.mxListenerList.length;\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < listenerCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar entry = element.mxListenerList[i];\n\t\t\t\t\t\n\t\t\t\t\tif (entry.f == funct)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.mxListenerList.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (element.mxListenerList.length == 0)\n\t\t\t\t{\n\t\t\t\t\telement.mxListenerList = null;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tif (window.removeEventListener)\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.removeEventListener(eventName, funct, false);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn function(element, eventName, funct)\n\t\t\t{\n\t\t\t\telement.detachEvent('on' + eventName, funct);\n\t\t\t\tupdateListener(element, eventName, funct);\n\t\t\t};\n\t\t}\n\t}(),\n\n\t/**\n\t * Function: removeAllListeners\n\t * \n\t * Removes all listeners from the given element.\n\t */\n\tremoveAllListeners: function(element)\n\t{\n\t\tvar list = element.mxListenerList;\n\n\t\tif (list != null)\n\t\t{\n\t\t\twhile (list.length > 0)\n\t\t\t{\n\t\t\t\tvar entry = list[0];\n\t\t\t\tmxEvent.removeListener(element, entry.name, entry.f);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: addGestureListeners\n\t * \n\t * Adds the given listeners for touch, mouse and/or pointer events. If\n\t * <mxClient.IS_POINTER> is true then pointer events will be registered,\n\t * else the respective mouse events will be registered. If <mxClient.IS_POINTER>\n\t * is false and <mxClient.IS_TOUCH> is true then the respective touch events\n\t * will be registered as well as the mouse events.\n\t */\n\taddGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.addListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: removeGestureListeners\n\t * \n\t * Removes the given listeners from mousedown, mousemove, mouseup and the\n\t * respective touch events if <mxClient.IS_TOUCH> is true.\n\t */\n\tremoveGestureListeners: function(node, startListener, moveListener, endListener)\n\t{\n\t\tif (startListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerdown' : 'mousedown', startListener);\n\t\t}\n\t\t\n\t\tif (moveListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointermove' : 'mousemove', moveListener);\n\t\t}\n\t\t\n\t\tif (endListener != null)\n\t\t{\n\t\t\tmxEvent.removeListener(node, (mxClient.IS_POINTER) ? 'pointerup' : 'mouseup', endListener);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_POINTER && mxClient.IS_TOUCH)\n\t\t{\n\t\t\tif (startListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchstart', startListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (moveListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchmove', moveListener);\n\t\t\t}\n\t\t\t\n\t\t\tif (endListener != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeListener(node, 'touchend', endListener);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: redirectMouseEvents\n\t *\n\t * Redirects the mouse events from the given DOM node to the graph dispatch\n\t * loop using the event and given state as event arguments. State can\n\t * either be an instance of <mxCellState> or a function that returns an\n\t * <mxCellState>. The down, move, up and dblClick arguments are optional\n\t * functions that take the trigger event as arguments and replace the\n\t * default behaviour.\n\t */\n\tredirectMouseEvents: function(node, graph, state, down, move, up, dblClick)\n\t{\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\treturn (typeof(state) == 'function') ? state(evt) : state;\n\t\t};\n\t\t\n\t\tmxEvent.addGestureListeners(node, function (evt)\n\t\t{\n\t\t\tif (down != null)\n\t\t\t{\n\t\t\t\tdown(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (move != null)\n\t\t\t{\n\t\t\t\tmove(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tif (up != null)\n\t\t\t{\n\t\t\t\tup(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.addListener(node, 'dblclick', function (evt)\n\t\t{\n\t\t\tif (dblClick != null)\n\t\t\t{\n\t\t\t\tdblClick(evt);\n\t\t\t}\n\t\t\telse if (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tvar tmp = getState(evt);\n\t\t\t\tgraph.dblClick(evt, (tmp != null) ? tmp.cell : null);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Function: release\n\t * \n\t * Removes the known listeners from the given DOM node and its descendants.\n\t * \n\t * Parameters:\n\t * \n\t * element - DOM node to remove the listeners from.\n\t */\n\trelease: function(element)\n\t{\n\t\ttry\n\t\t{\n\t\t\tif (element != null)\n\t\t\t{\n\t\t\t\tmxEvent.removeAllListeners(element);\n\t\t\t\t\n\t\t\t\tvar children = element.childNodes;\n\t\t\t\t\n\t\t\t\tif (children != null)\n\t\t\t\t{\n\t\t\t        var childCount = children.length;\n\t\t\t        \n\t\t\t        for (var i = 0; i < childCount; i += 1)\n\t\t\t        {\n\t\t\t        \tmxEvent.release(children[i]);\n\t\t\t        }\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignores errors as this is typically called in cleanup code\n\t\t}\n\t},\n\n\t/**\n\t * Function: addMouseWheelListener\n\t * \n\t * Installs the given function as a handler for mouse wheel events. The\n\t * function has two arguments: the mouse event and a boolean that specifies\n\t * if the wheel was moved up or down.\n\t * \n\t * This has been tested with IE 6 and 7, Firefox (all versions), Opera and\n\t * Safari. It does currently not work on Safari for Mac.\n\t * \n\t * Example:\n\t * \n\t * (code)\n\t * mxEvent.addMouseWheelListener(function (evt, up)\n\t * {\n\t *   mxLog.show();\n\t *   mxLog.debug('mouseWheel: up='+up);\n\t * });\n\t *(end)\n\t * \n\t * Parameters:\n\t * \n\t * funct - Handler function that takes the event argument and a boolean up\n\t * argument for the mousewheel direction.\n\t * target - Target for installing the listener in Google Chrome. See \n\t * https://www.chromestatus.com/features/6662647093133312.\n\t */\n\taddMouseWheelListener: function(funct, target)\n\t{\n\t\tif (funct != null)\n\t\t{\n\t\t\tvar wheelHandler = function(evt)\n\t\t\t{\n\t\t\t\t// IE does not give an event object but the\n\t\t\t\t// global event object is the mousewheel event\n\t\t\t\t// at this point in time.\n\t\t\t\tif (evt == null)\n\t\t\t\t{\n\t\t\t\t\tevt = window.event;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar delta = 0;\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\tdelta = -evt.detail / 2;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelta = evt.wheelDelta / 120;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Handles the event using the given function\n\t\t\t\tif (delta != 0)\n\t\t\t\t{\n\t\t\t\t\tfunct(evt, delta > 0);\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\t// Webkit has NS event API, but IE event name and details \n\t\t\tif (mxClient.IS_NS && document.documentMode == null)\n\t\t\t{\n\t\t\t\tvar eventName = (mxClient.IS_SF || mxClient.IS_GC) ? 'mousewheel' : 'DOMMouseScroll';\n\t\t\t\tmxEvent.addListener((mxClient.IS_GC && target != null) ? target : window,\n\t\t\t\t\teventName, wheelHandler);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(document, 'mousewheel', wheelHandler);\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: disableContextMenu\n\t *\n\t * Disables the context menu for the given element.\n\t */\n\tdisableContextMenu: function(element)\n\t{\n\t\tmxEvent.addListener(element, 'contextmenu', function(evt)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t},\n\t\n\t/**\n\t * Function: getSource\n\t * \n\t * Returns the event's target or srcElement depending on the browser.\n\t */\n\tgetSource: function(evt)\n\t{\n\t\treturn (evt.srcElement != null) ? evt.srcElement : evt.target;\n\t},\n\n\t/**\n\t * Function: isConsumed\n\t * \n\t * Returns true if the event has been consumed using <consume>.\n\t */\n\tisConsumed: function(evt)\n\t{\n\t\treturn evt.isConsumed != null && evt.isConsumed;\n\t},\n\n\t/**\n\t * Function: isTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisTouchEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'touch' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_TOUCH) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 5 : evt.type.indexOf('touch') == 0);\n\t},\n\n\t/**\n\t * Function: isPenEvent\n\t * \n\t * Returns true if the event was generated using a pen (not a touch device or mouse).\n\t */\n\tisPenEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'pen' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_PEN) : ((evt.mozInputSource != null) ?\n\t\t\t\t\tevt.mozInputSource == 2 : evt.type.indexOf('pen') == 0);\n\t},\n\n\t/**\n\t * Function: isMultiTouchEvent\n\t * \n\t * Returns true if the event was generated using a touch device (not a pen or mouse).\n\t */\n\tisMultiTouchEvent: function(evt)\n\t{\n\t\treturn (evt.type != null && evt.type.indexOf('touch') == 0 && evt.touches != null && evt.touches.length > 1);\n\t},\n\n\t/**\n\t * Function: isMouseEvent\n\t * \n\t * Returns true if the event was generated using a mouse (not a pen or touch device).\n\t */\n\tisMouseEvent: function(evt)\n\t{\n\t\treturn (evt.pointerType != null) ? (evt.pointerType == 'mouse' || evt.pointerType ===\n\t\t\tevt.MSPOINTER_TYPE_MOUSE) : ((evt.mozInputSource != null) ?\n\t\t\t\tevt.mozInputSource == 1 : evt.type.indexOf('mouse') == 0);\n\t},\n\t\n\t/**\n\t * Function: isLeftMouseButton\n\t * \n\t * Returns true if the left mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property. Note that this returns true in Firefox\n\t * for control+left-click on the Mac.\n\t */\n\tisLeftMouseButton: function(evt)\n\t{\n\t\t// Special case for mousemove and mousedown we check the buttons\n\t\t// if it exists because which is 0 even if no button is pressed\n\t\tif ('buttons' in evt && (evt.type == 'mousedown' || evt.type == 'mousemove'))\n\t\t{\n\t\t\treturn evt.buttons == 1;\n\t\t}\n\t\telse if ('which' in evt)\n\t\t{\n\t        return evt.which === 1;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 1;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isMiddleMouseButton\n\t * \n\t * Returns true if the middle mouse button is pressed for the given event.\n\t * To check if a button is pressed during a mouseMove you should use the\n\t * <mxGraph.isMouseDown> property.\n\t */\n\tisMiddleMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 2;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 4;\n\t    }\n\t},\n\t\n\t/**\n\t * Function: isRightMouseButton\n\t * \n\t * Returns true if the right mouse button was pressed. Note that this\n\t * button might not be available on some systems. For handling a popup\n\t * trigger <isPopupTrigger> should be used.\n\t */\n\tisRightMouseButton: function(evt)\n\t{\n\t\tif ('which' in evt)\n\t\t{\n\t        return evt.which === 3;\n\t    }\n\t\telse\n\t\t{\n\t        return evt.button === 2;\n\t    }\n\t},\n\n\t/**\n\t * Function: isPopupTrigger\n\t * \n\t * Returns true if the event is a popup trigger. This implementation\n\t * returns true if the right button or the left button and control was\n\t * pressed on a Mac.\n\t */\n\tisPopupTrigger: function(evt)\n\t{\n\t\treturn mxEvent.isRightMouseButton(evt) || (mxClient.IS_MAC && mxEvent.isControlDown(evt) &&\n\t\t\t!mxEvent.isShiftDown(evt) && !mxEvent.isMetaDown(evt) && !mxEvent.isAltDown(evt));\n\t},\n\n\t/**\n\t * Function: isShiftDown\n\t * \n\t * Returns true if the shift key is pressed for the given event.\n\t */\n\tisShiftDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.shiftKey : false;\n\t},\n\n\t/**\n\t * Function: isAltDown\n\t * \n\t * Returns true if the alt key is pressed for the given event.\n\t */\n\tisAltDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.altKey : false;\n\t},\n\n\t/**\n\t * Function: isControlDown\n\t * \n\t * Returns true if the control key is pressed for the given event.\n\t */\n\tisControlDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.ctrlKey : false;\n\t},\n\n\t/**\n\t * Function: isMetaDown\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tisMetaDown: function(evt)\n\t{\n\t\treturn (evt != null) ? evt.metaKey : false;\n\t},\n\n\t/**\n\t * Function: getMainEvent\n\t * \n\t * Returns the touch or mouse event that contains the mouse coordinates.\n\t */\n\tgetMainEvent: function(e)\n\t{\n\t\tif ((e.type == 'touchstart' || e.type == 'touchmove') && e.touches != null && e.touches[0] != null)\n\t\t{\n\t\t\te = e.touches[0];\n\t\t}\n\t\telse if (e.type == 'touchend' && e.changedTouches != null && e.changedTouches[0] != null)\n\t\t{\n\t\t\te = e.changedTouches[0];\n\t\t}\n\t\t\n\t\treturn e;\n\t},\n\t\n\t/**\n\t * Function: getClientX\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientX: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientX;\n\t},\n\n\t/**\n\t * Function: getClientY\n\t * \n\t * Returns true if the meta key is pressed for the given event.\n\t */\n\tgetClientY: function(e)\n\t{\n\t\treturn mxEvent.getMainEvent(e).clientY;\n\t},\n\n\t/**\n\t * Function: consume\n\t * \n\t * Consumes the given event.\n\t * \n\t * Parameters:\n\t * \n\t * evt - Native event to be consumed.\n\t * preventDefault - Optional boolean to prevent the default for the event.\n\t * Default is true.\n\t * stopPropagation - Option boolean to stop event propagation. Default is\n\t * true.\n\t */\n\tconsume: function(evt, preventDefault, stopPropagation)\n\t{\n\t\tpreventDefault = (preventDefault != null) ? preventDefault : true;\n\t\tstopPropagation = (stopPropagation != null) ? stopPropagation : true;\n\t\t\n\t\tif (preventDefault)\n\t\t{\n\t\t\tif (evt.preventDefault)\n\t\t\t{\n\t\t\t\tif (stopPropagation)\n\t\t\t\t{\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t\telse if (stopPropagation)\n\t\t\t{\n\t\t\t\tevt.cancelBubble = true;\n\t\t\t}\n\t\t}\n\n\t\t// Opera\n\t\tevt.isConsumed = true;\n\n\t\t// Other browsers\n\t\tif (!evt.preventDefault)\n\t\t{\n\t\t\tevt.returnValue = false;\n\t\t}\n\t},\n\t\n\t//\n\t// Special handles in mouse events\n\t//\n\t\n\t/**\n\t * Variable: LABEL_HANDLE\n\t * \n\t * Index for the label handle in an mxMouseEvent. This should be a negative\n\t * value that does not interfere with any possible handle indices. Default\n\t * is -1.\n\t */\n\tLABEL_HANDLE: -1,\n\t\n\t/**\n\t * Variable: ROTATION_HANDLE\n\t * \n\t * Index for the rotation handle in an mxMouseEvent. This should be a\n\t * negative value that does not interfere with any possible handle indices.\n\t * Default is -2.\n\t */\n\tROTATION_HANDLE: -2,\n\t\n\t/**\n\t * Variable: CUSTOM_HANDLE\n\t * \n\t * Start index for the custom handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * custom handle. Default is -100.\n\t */\n\tCUSTOM_HANDLE: -100,\n\t\n\t/**\n\t * Variable: VIRTUAL_HANDLE\n\t * \n\t * Start index for the virtual handles in an mxMouseEvent. This should be a\n\t * negative value and is the start index which is decremented for each\n\t * virtual handle. Default is -100000. This assumes that there are no more\n\t * than VIRTUAL_HANDLE - CUSTOM_HANDLE custom handles.\n\t * \n\t */\n\tVIRTUAL_HANDLE: -100000,\n\t\n\t//\n\t// Event names\n\t//\n\t\n\t/**\n\t * Variable: MOUSE_DOWN\n\t *\n\t * Specifies the event name for mouseDown.\n\t */\n\tMOUSE_DOWN: 'mouseDown',\n\t\n\t/**\n\t * Variable: MOUSE_MOVE\n\t *\n\t * Specifies the event name for mouseMove. \n\t */\n\tMOUSE_MOVE: 'mouseMove',\n\t\n\t/**\n\t * Variable: MOUSE_UP\n\t *\n\t * Specifies the event name for mouseUp. \n\t */\n\tMOUSE_UP: 'mouseUp',\n\n\t/**\n\t * Variable: ACTIVATE\n\t *\n\t * Specifies the event name for activate.\n\t */\n\tACTIVATE: 'activate',\n\n\t/**\n\t * Variable: RESIZE_START\n\t *\n\t * Specifies the event name for resizeStart.\n\t */\n\tRESIZE_START: 'resizeStart',\n\n\t/**\n\t * Variable: RESIZE\n\t *\n\t * Specifies the event name for resize.\n\t */\n\tRESIZE: 'resize',\n\n\t/**\n\t * Variable: RESIZE_END\n\t *\n\t * Specifies the event name for resizeEnd.\n\t */\n\tRESIZE_END: 'resizeEnd',\n\n\t/**\n\t * Variable: MOVE_START\n\t *\n\t * Specifies the event name for moveStart.\n\t */\n\tMOVE_START: 'moveStart',\n\n\t/**\n\t * Variable: MOVE\n\t *\n\t * Specifies the event name for move.\n\t */\n\tMOVE: 'move',\n\n\t/**\n\t * Variable: MOVE_END\n\t *\n\t * Specifies the event name for moveEnd.\n\t */\n\tMOVE_END: 'moveEnd',\n\n\t/**\n\t * Variable: PAN_START\n\t *\n\t * Specifies the event name for panStart.\n\t */\n\tPAN_START: 'panStart',\n\n\t/**\n\t * Variable: PAN\n\t *\n\t * Specifies the event name for pan.\n\t */\n\tPAN: 'pan',\n\n\t/**\n\t * Variable: PAN_END\n\t *\n\t * Specifies the event name for panEnd.\n\t */\n\tPAN_END: 'panEnd',\n\n\t/**\n\t * Variable: MINIMIZE\n\t *\n\t * Specifies the event name for minimize.\n\t */\n\tMINIMIZE: 'minimize',\n\n\t/**\n\t * Variable: NORMALIZE\n\t *\n\t * Specifies the event name for normalize.\n\t */\n\tNORMALIZE: 'normalize',\n\n\t/**\n\t * Variable: MAXIMIZE\n\t *\n\t * Specifies the event name for maximize.\n\t */\n\tMAXIMIZE: 'maximize',\n\n\t/**\n\t * Variable: HIDE\n\t *\n\t * Specifies the event name for hide.\n\t */\n\tHIDE: 'hide',\n\n\t/**\n\t * Variable: SHOW\n\t *\n\t * Specifies the event name for show.\n\t */\n\tSHOW: 'show',\n\n\t/**\n\t * Variable: CLOSE\n\t *\n\t * Specifies the event name for close.\n\t */\n\tCLOSE: 'close',\n\n\t/**\n\t * Variable: DESTROY\n\t *\n\t * Specifies the event name for destroy.\n\t */\n\tDESTROY: 'destroy',\n\n\t/**\n\t * Variable: REFRESH\n\t *\n\t * Specifies the event name for refresh.\n\t */\n\tREFRESH: 'refresh',\n\n\t/**\n\t * Variable: SIZE\n\t *\n\t * Specifies the event name for size.\n\t */\n\tSIZE: 'size',\n\t\n\t/**\n\t * Variable: SELECT\n\t *\n\t * Specifies the event name for select.\n\t */\n\tSELECT: 'select',\n\n\t/**\n\t * Variable: FIRED\n\t *\n\t * Specifies the event name for fired.\n\t */\n\tFIRED: 'fired',\n\n\t/**\n\t * Variable: FIRE_MOUSE_EVENT\n\t *\n\t * Specifies the event name for fireMouseEvent.\n\t */\n\tFIRE_MOUSE_EVENT: 'fireMouseEvent',\n\n\t/**\n\t * Variable: GESTURE\n\t *\n\t * Specifies the event name for gesture.\n\t */\n\tGESTURE: 'gesture',\n\n\t/**\n\t * Variable: TAP_AND_HOLD\n\t *\n\t * Specifies the event name for tapAndHold.\n\t */\n\tTAP_AND_HOLD: 'tapAndHold',\n\n\t/**\n\t * Variable: GET\n\t *\n\t * Specifies the event name for get.\n\t */\n\tGET: 'get',\n\n\t/**\n\t * Variable: RECEIVE\n\t *\n\t * Specifies the event name for receive.\n\t */\n\tRECEIVE: 'receive',\n\n\t/**\n\t * Variable: CONNECT\n\t *\n\t * Specifies the event name for connect.\n\t */\n\tCONNECT: 'connect',\n\n\t/**\n\t * Variable: DISCONNECT\n\t *\n\t * Specifies the event name for disconnect.\n\t */\n\tDISCONNECT: 'disconnect',\n\n\t/**\n\t * Variable: SUSPEND\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tSUSPEND: 'suspend',\n\n\t/**\n\t * Variable: RESUME\n\t *\n\t * Specifies the event name for suspend.\n\t */\n\tRESUME: 'resume',\n\n\t/**\n\t * Variable: MARK\n\t *\n\t * Specifies the event name for mark.\n\t */\n\tMARK: 'mark',\n\n\t/**\n\t * Variable: ROOT\n\t *\n\t * Specifies the event name for root.\n\t */\n\tROOT: 'root',\n\n\t/**\n\t * Variable: POST\n\t *\n\t * Specifies the event name for post.\n\t */\n\tPOST: 'post',\n\n\t/**\n\t * Variable: OPEN\n\t *\n\t * Specifies the event name for open.\n\t */\n\tOPEN: 'open',\n\n\t/**\n\t * Variable: SAVE\n\t *\n\t * Specifies the event name for open.\n\t */\n\tSAVE: 'save',\n\n\t/**\n\t * Variable: BEFORE_ADD_VERTEX\n\t *\n\t * Specifies the event name for beforeAddVertex.\n\t */\n\tBEFORE_ADD_VERTEX: 'beforeAddVertex',\n\n\t/**\n\t * Variable: ADD_VERTEX\n\t *\n\t * Specifies the event name for addVertex.\n\t */\n\tADD_VERTEX: 'addVertex',\n\n\t/**\n\t * Variable: AFTER_ADD_VERTEX\n\t *\n\t * Specifies the event name for afterAddVertex.\n\t */\n\tAFTER_ADD_VERTEX: 'afterAddVertex',\n\n\t/**\n\t * Variable: DONE\n\t *\n\t * Specifies the event name for done.\n\t */\n\tDONE: 'done',\n\n\t/**\n\t * Variable: EXECUTE\n\t *\n\t * Specifies the event name for execute.\n\t */\n\tEXECUTE: 'execute',\n\n\t/**\n\t * Variable: EXECUTED\n\t *\n\t * Specifies the event name for executed.\n\t */\n\tEXECUTED: 'executed',\n\n\t/**\n\t * Variable: BEGIN_UPDATE\n\t *\n\t * Specifies the event name for beginUpdate.\n\t */\n\tBEGIN_UPDATE: 'beginUpdate',\n\n\t/**\n\t * Variable: START_EDIT\n\t *\n\t * Specifies the event name for startEdit.\n\t */\n\tSTART_EDIT: 'startEdit',\n\n\t/**\n\t * Variable: END_UPDATE\n\t *\n\t * Specifies the event name for endUpdate.\n\t */\n\tEND_UPDATE: 'endUpdate',\n\n\t/**\n\t * Variable: END_EDIT\n\t *\n\t * Specifies the event name for endEdit.\n\t */\n\tEND_EDIT: 'endEdit',\n\n\t/**\n\t * Variable: BEFORE_UNDO\n\t *\n\t * Specifies the event name for beforeUndo.\n\t */\n\tBEFORE_UNDO: 'beforeUndo',\n\n\t/**\n\t * Variable: UNDO\n\t *\n\t * Specifies the event name for undo.\n\t */\n\tUNDO: 'undo',\n\n\t/**\n\t * Variable: REDO\n\t *\n\t * Specifies the event name for redo.\n\t */\n\tREDO: 'redo',\n\n\t/**\n\t * Variable: CHANGE\n\t *\n\t * Specifies the event name for change.\n\t */\n\tCHANGE: 'change',\n\n\t/**\n\t * Variable: NOTIFY\n\t *\n\t * Specifies the event name for notify.\n\t */\n\tNOTIFY: 'notify',\n\n\t/**\n\t * Variable: LAYOUT_CELLS\n\t *\n\t * Specifies the event name for layoutCells.\n\t */\n\tLAYOUT_CELLS: 'layoutCells',\n\n\t/**\n\t * Variable: CLICK\n\t *\n\t * Specifies the event name for click.\n\t */\n\tCLICK: 'click',\n\n\t/**\n\t * Variable: SCALE\n\t *\n\t * Specifies the event name for scale.\n\t */\n\tSCALE: 'scale',\n\n\t/**\n\t * Variable: TRANSLATE\n\t *\n\t * Specifies the event name for translate.\n\t */\n\tTRANSLATE: 'translate',\n\n\t/**\n\t * Variable: SCALE_AND_TRANSLATE\n\t *\n\t * Specifies the event name for scaleAndTranslate.\n\t */\n\tSCALE_AND_TRANSLATE: 'scaleAndTranslate',\n\n\t/**\n\t * Variable: UP\n\t *\n\t * Specifies the event name for up.\n\t */\n\tUP: 'up',\n\n\t/**\n\t * Variable: DOWN\n\t *\n\t * Specifies the event name for down.\n\t */\n\tDOWN: 'down',\n\n\t/**\n\t * Variable: ADD\n\t *\n\t * Specifies the event name for add.\n\t */\n\tADD: 'add',\n\n\t/**\n\t * Variable: REMOVE\n\t *\n\t * Specifies the event name for remove.\n\t */\n\tREMOVE: 'remove',\n\t\n\t/**\n\t * Variable: CLEAR\n\t *\n\t * Specifies the event name for clear.\n\t */\n\tCLEAR: 'clear',\n\n\t/**\n\t * Variable: ADD_CELLS\n\t *\n\t * Specifies the event name for addCells.\n\t */\n\tADD_CELLS: 'addCells',\n\n\t/**\n\t * Variable: CELLS_ADDED\n\t *\n\t * Specifies the event name for cellsAdded.\n\t */\n\tCELLS_ADDED: 'cellsAdded',\n\n\t/**\n\t * Variable: MOVE_CELLS\n\t *\n\t * Specifies the event name for moveCells.\n\t */\n\tMOVE_CELLS: 'moveCells',\n\n\t/**\n\t * Variable: CELLS_MOVED\n\t *\n\t * Specifies the event name for cellsMoved.\n\t */\n\tCELLS_MOVED: 'cellsMoved',\n\n\t/**\n\t * Variable: RESIZE_CELLS\n\t *\n\t * Specifies the event name for resizeCells.\n\t */\n\tRESIZE_CELLS: 'resizeCells',\n\n\t/**\n\t * Variable: CELLS_RESIZED\n\t *\n\t * Specifies the event name for cellsResized.\n\t */\n\tCELLS_RESIZED: 'cellsResized',\n\n\t/**\n\t * Variable: TOGGLE_CELLS\n\t *\n\t * Specifies the event name for toggleCells.\n\t */\n\tTOGGLE_CELLS: 'toggleCells',\n\n\t/**\n\t * Variable: CELLS_TOGGLED\n\t *\n\t * Specifies the event name for cellsToggled.\n\t */\n\tCELLS_TOGGLED: 'cellsToggled',\n\n\t/**\n\t * Variable: ORDER_CELLS\n\t *\n\t * Specifies the event name for orderCells.\n\t */\n\tORDER_CELLS: 'orderCells',\n\n\t/**\n\t * Variable: CELLS_ORDERED\n\t *\n\t * Specifies the event name for cellsOrdered.\n\t */\n\tCELLS_ORDERED: 'cellsOrdered',\n\n\t/**\n\t * Variable: REMOVE_CELLS\n\t *\n\t * Specifies the event name for removeCells.\n\t */\n\tREMOVE_CELLS: 'removeCells',\n\n\t/**\n\t * Variable: CELLS_REMOVED\n\t *\n\t * Specifies the event name for cellsRemoved.\n\t */\n\tCELLS_REMOVED: 'cellsRemoved',\n\n\t/**\n\t * Variable: GROUP_CELLS\n\t *\n\t * Specifies the event name for groupCells.\n\t */\n\tGROUP_CELLS: 'groupCells',\n\n\t/**\n\t * Variable: UNGROUP_CELLS\n\t *\n\t * Specifies the event name for ungroupCells.\n\t */\n\tUNGROUP_CELLS: 'ungroupCells',\n\n\t/**\n\t * Variable: REMOVE_CELLS_FROM_PARENT\n\t *\n\t * Specifies the event name for removeCellsFromParent.\n\t */\n\tREMOVE_CELLS_FROM_PARENT: 'removeCellsFromParent',\n\n\t/**\n\t * Variable: FOLD_CELLS\n\t *\n\t * Specifies the event name for foldCells.\n\t */\n\tFOLD_CELLS: 'foldCells',\n\n\t/**\n\t * Variable: CELLS_FOLDED\n\t *\n\t * Specifies the event name for cellsFolded.\n\t */\n\tCELLS_FOLDED: 'cellsFolded',\n\n\t/**\n\t * Variable: ALIGN_CELLS\n\t *\n\t * Specifies the event name for alignCells.\n\t */\n\tALIGN_CELLS: 'alignCells',\n\n\t/**\n\t * Variable: LABEL_CHANGED\n\t *\n\t * Specifies the event name for labelChanged.\n\t */\n\tLABEL_CHANGED: 'labelChanged',\n\n\t/**\n\t * Variable: CONNECT_CELL\n\t *\n\t * Specifies the event name for connectCell.\n\t */\n\tCONNECT_CELL: 'connectCell',\n\n\t/**\n\t * Variable: CELL_CONNECTED\n\t *\n\t * Specifies the event name for cellConnected.\n\t */\n\tCELL_CONNECTED: 'cellConnected',\n\n\t/**\n\t * Variable: SPLIT_EDGE\n\t *\n\t * Specifies the event name for splitEdge.\n\t */\n\tSPLIT_EDGE: 'splitEdge',\n\n\t/**\n\t * Variable: FLIP_EDGE\n\t *\n\t * Specifies the event name for flipEdge.\n\t */\n\tFLIP_EDGE: 'flipEdge',\n\n\t/**\n\t * Variable: START_EDITING\n\t *\n\t * Specifies the event name for startEditing.\n\t */\n\tSTART_EDITING: 'startEditing',\n\n\t/**\n\t * Variable: EDITING_STARTED\n\t *\n\t * Specifies the event name for editingStarted.\n\t */\n\tEDITING_STARTED: 'editingStarted',\n\n\t/**\n\t * Variable: EDITING_STOPPED\n\t *\n\t * Specifies the event name for editingStopped.\n\t */\n\tEDITING_STOPPED: 'editingStopped',\n\n\t/**\n\t * Variable: ADD_OVERLAY\n\t *\n\t * Specifies the event name for addOverlay.\n\t */\n\tADD_OVERLAY: 'addOverlay',\n\n\t/**\n\t * Variable: REMOVE_OVERLAY\n\t *\n\t * Specifies the event name for removeOverlay.\n\t */\n\tREMOVE_OVERLAY: 'removeOverlay',\n\n\t/**\n\t * Variable: UPDATE_CELL_SIZE\n\t *\n\t * Specifies the event name for updateCellSize.\n\t */\n\tUPDATE_CELL_SIZE: 'updateCellSize',\n\n\t/**\n\t * Variable: ESCAPE\n\t *\n\t * Specifies the event name for escape.\n\t */\n\tESCAPE: 'escape',\n\n\t/**\n\t * Variable: DOUBLE_CLICK\n\t *\n\t * Specifies the event name for doubleClick.\n\t */\n\tDOUBLE_CLICK: 'doubleClick',\n\n\t/**\n\t * Variable: START\n\t *\n\t * Specifies the event name for start.\n\t */\n\tSTART: 'start',\n\n\t/**\n\t * Variable: RESET\n\t *\n\t * Specifies the event name for reset.\n\t */\n\tRESET: 'reset'\n\n};\n\n__mxOutput.mxEvent = typeof mxEvent !== 'undefined' ? mxEvent : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlRequest\n * \n * XML HTTP request wrapper. See also: <mxUtils.get>, <mxUtils.post> and\n * <mxUtils.load>. This class provides a cross-browser abstraction for Ajax\n * requests.\n * \n * Encoding:\n * \n * For encoding parameter values, the built-in encodeURIComponent JavaScript\n * method must be used. For automatic encoding of post data in <mxEditor> the\n * <mxEditor.escapePostData> switch can be set to true (default). The encoding\n * will be carried out using the conte type of the page. That is, the page\n * containting the editor should contain a meta tag in the header, eg.\n * <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n * \n * Example:\n * \n * (code)\n * var onload = function(req)\n * {\n *   mxUtils.alert(req.getDocumentElement());\n * }\n * \n * var onerror = function(req)\n * {\n *   mxUtils.alert('Error');\n * }\n * new mxXmlRequest(url, 'key=value').send(onload, onerror);\n * (end)\n * \n * Sends an asynchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var req = new mxXmlRequest(url, 'key=value', 'POST', false);\n * req.send();\n * mxUtils.alert(req.getDocumentElement());\n * (end)\n * \n * Sends a synchronous POST request to the specified URL.\n * \n * Example:\n * \n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = encodeURIComponent(mxUtils.getXml(result));\n * new mxXmlRequest(url, 'xml='+xml).send();\n * (end)\n * \n * Sends an encoded graph model to the specified URL using xml as the\n * parameter name. The parameter can then be retrieved in C# as follows:\n * \n * (code)\n * string xml = HttpUtility.UrlDecode(context.Request.Params[\"xml\"]);\n * (end)\n * \n * Or in Java as follows:\n * \n * (code)\n * String xml = URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\");\n * (end)\n *\n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image.\n * \n * Constructor: mxXmlRequest\n * \n * Constructs an XML HTTP request.\n * \n * Parameters:\n * \n * url - Target URL of the request.\n * params - Form encoded parameters to send with a POST request.\n * method - String that specifies the request method. Possible values are\n * POST and GET. Default is POST.\n * async - Boolean specifying if an asynchronous request should be used.\n * Default is true.\n * username - String specifying the username to be used for the request.\n * password - String specifying the password to be used for the request.\n */\nfunction mxXmlRequest(url, params, method, async, username, password)\n{\n\tthis.url = url;\n\tthis.params = params;\n\tthis.method = method || 'POST';\n\tthis.async = (async != null) ? async : true;\n\tthis.username = username;\n\tthis.password = password;\n};\n\n/**\n * Variable: url\n * \n * Holds the target URL of the request.\n */\nmxXmlRequest.prototype.url = null;\n\n/**\n * Variable: params\n * \n * Holds the form encoded data for the POST request.\n */\nmxXmlRequest.prototype.params = null;\n\n/**\n * Variable: method\n * \n * Specifies the request method. Possible values are POST and GET. Default\n * is POST.\n */\nmxXmlRequest.prototype.method = null;\n\n/**\n * Variable: async\n * \n * Boolean indicating if the request is asynchronous.\n */\nmxXmlRequest.prototype.async = null;\n\n/**\n * Variable: binary\n * \n * Boolean indicating if the request is binary. This option is ignored in IE.\n * In all other browsers the requested mime type is set to\n * text/plain; charset=x-user-defined. Default is false.\n */\nmxXmlRequest.prototype.binary = false;\n\n/**\n * Variable: withCredentials\n * \n * Specifies if withCredentials should be used in HTML5-compliant browsers. Default is\n * false.\n */\nmxXmlRequest.prototype.withCredentials = false;\n\n/**\n * Variable: username\n * \n * Specifies the username to be used for authentication.\n */\nmxXmlRequest.prototype.username = null;\n\n/**\n * Variable: password\n * \n * Specifies the password to be used for authentication.\n */\nmxXmlRequest.prototype.password = null;\n\n/**\n * Variable: request\n * \n * Holds the inner, browser-specific request object.\n */\nmxXmlRequest.prototype.request = null;\n\n/**\n * Variable: decodeSimulateValues\n * \n * Specifies if request values should be decoded as URIs before setting the\n * textarea value in <simulate>. Defaults to false for backwards compatibility,\n * to avoid another decode on the server this should be set to true.\n */\nmxXmlRequest.prototype.decodeSimulateValues = false;\n\n/**\n * Function: isBinary\n * \n * Returns <binary>.\n */\nmxXmlRequest.prototype.isBinary = function()\n{\n\treturn this.binary;\n};\n\n/**\n * Function: setBinary\n * \n * Sets <binary>.\n */\nmxXmlRequest.prototype.setBinary = function(value)\n{\n\tthis.binary = value;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: isReady\n * \n * Returns true if the response is ready.\n */\nmxXmlRequest.prototype.isReady = function()\n{\n\treturn this.request.readyState == 4;\n};\n\n/**\n * Function: getDocumentElement\n * \n * Returns the document element of the response XML document.\n */\nmxXmlRequest.prototype.getDocumentElement = function()\n{\n\tvar doc = this.getXml();\n\t\n\tif (doc != null)\n\t{\n\t\treturn doc.documentElement;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getXml\n * \n * Returns the response as an XML document. Use <getDocumentElement> to get\n * the document element of the XML document.\n */\nmxXmlRequest.prototype.getXml = function()\n{\n\tvar xml = this.request.responseXML;\n\t\n\t// Handles missing response headers in IE, the first condition handles\n\t// the case where responseXML is there, but using its nodes leads to\n\t// type errors in the mxCellCodec when putting the nodes into a new\n\t// document. This happens in IE9 standards mode and with XML user\n\t// objects only, as they are used directly as values in cells.\n\tif (document.documentMode >= 9 || xml == null || xml.documentElement == null)\n\t{\n\t\txml = mxUtils.parseXml(this.request.responseText);\n\t}\n\t\n\treturn xml;\n};\n\n/**\n * Function: getText\n * \n * Returns the response as a string.\n */\nmxXmlRequest.prototype.getText = function()\n{\n\treturn this.request.responseText;\n};\n\n/**\n * Function: getStatus\n * \n * Returns the status as a number, eg. 404 for \"Not found\" or 200 for \"OK\".\n * Note: The NS_ERROR_NOT_AVAILABLE for invalid responses cannot be cought.\n */\nmxXmlRequest.prototype.getStatus = function()\n{\n\treturn this.request.status;\n};\n\n/**\n * Function: create\n * \n * Creates and returns the inner <request> object.\n */\nmxXmlRequest.prototype.create = function()\n{\n\tif (window.XMLHttpRequest)\n\t{\n\t\treturn function()\n\t\t{\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\n\t\t\t// TODO: Check for overrideMimeType required here?\n\t\t\tif (this.isBinary() && req.overrideMimeType)\n\t\t\t{\n\t\t\t\treq.overrideMimeType('text/plain; charset=x-user-defined');\n\t\t\t}\n\n\t\t\treturn req;\n\t\t};\n\t}\n\telse if (typeof(ActiveXObject) != 'undefined')\n\t{\n\t\treturn function()\n\t\t{\n\t\t\t// TODO: Implement binary option\n\t\t\treturn new ActiveXObject('Microsoft.XMLHTTP');\n\t\t};\n\t}\n}();\n\n/**\n * Function: send\n * \n * Send the <request> to the target URL using the specified functions to\n * process the response asychronously.\n * \n * Note: Due to technical limitations, onerror is currently ignored.\n * \n * Parameters:\n * \n * onload - Function to be invoked if a successful response was received.\n * onerror - Function to be called on any error.\n * timeout - Optional timeout in ms before calling ontimeout.\n * ontimeout - Optional function to execute on timeout.\n */\nmxXmlRequest.prototype.send = function(onload, onerror, timeout, ontimeout)\n{\n\tthis.request = this.create();\n\t\n\tif (this.request != null)\n\t{\n\t\tif (onload != null)\n\t\t{\n\t\t\tthis.request.onreadystatechange = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (this.isReady())\n\t\t\t\t{\n\t\t\t\t\tonload(this);\n\t\t\t\t\tthis.request.onreadystatechaange = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.request.open(this.method, this.url, this.async,\n\t\t\tthis.username, this.password);\n\t\tthis.setRequestHeaders(this.request, this.params);\n\t\t\n\t\tif (window.XMLHttpRequest && this.withCredentials)\n\t\t{\n\t\t\tthis.request.withCredentials = 'true';\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_QUIRKS && (document.documentMode == null || document.documentMode > 9) &&\n\t\t\twindow.XMLHttpRequest && timeout != null && ontimeout != null)\n\t\t{\n\t\t\tthis.request.timeout = timeout;\n\t\t\tthis.request.ontimeout = ontimeout;\n\t\t}\n\t\t\t\t\n\t\tthis.request.send(this.params);\n\t}\n};\n\n/**\n * Function: setRequestHeaders\n * \n * Sets the headers for the given request and parameters. This sets the\n * content-type to application/x-www-form-urlencoded if any params exist.\n * \n * Example:\n * \n * (code)\n * request.setRequestHeaders = function(request, params)\n * {\n *   if (params != null)\n *   {\n *     request.setRequestHeader('Content-Type',\n *             'multipart/form-data');\n *     request.setRequestHeader('Content-Length',\n *             params.length);\n *   }\n * };\n * (end)\n * \n * Use the code above before calling <send> if you require a\n * multipart/form-data request.   \n */\nmxXmlRequest.prototype.setRequestHeaders = function(request, params)\n{\n\tif (params != null)\n\t{\n\t\trequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t}\n};\n\n/**\n * Function: simulate\n * \n * Creates and posts a request to the given target URL using a dynamically\n * created form inside the given document.\n * \n * Parameters:\n * \n * docs - Document that contains the form element.\n * target - Target to send the form result to.\n */\nmxXmlRequest.prototype.simulate = function(doc, target)\n{\n\tdoc = doc || document;\n\tvar old = null;\n\n\tif (doc == document)\n\t{\n\t\told = window.onbeforeunload;\t\t\n\t\twindow.onbeforeunload = null;\n\t}\n\t\t\t\n\tvar form = doc.createElement('form');\n\tform.setAttribute('method', this.method);\n\tform.setAttribute('action', this.url);\n\n\tif (target != null)\n\t{\n\t\tform.setAttribute('target', target);\n\t}\n\n\tform.style.display = 'none';\n\tform.style.visibility = 'hidden';\n\t\n\tvar pars = (this.params.indexOf('&') > 0) ?\n\t\tthis.params.split('&') :\n\t\tthis.params.split();\n\n\t// Adds the parameters as textareas to the form\n\tfor (var i=0; i<pars.length; i++)\n\t{\n\t\tvar pos = pars[i].indexOf('=');\n\t\t\n\t\tif (pos > 0)\n\t\t{\n\t\t\tvar name = pars[i].substring(0, pos);\n\t\t\tvar value = pars[i].substring(pos+1);\n\t\t\t\n\t\t\tif (this.decodeSimulateValues)\n\t\t\t{\n\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t}\n\t\t\t\n\t\t\tvar textarea = doc.createElement('textarea');\n\t\t\ttextarea.setAttribute('wrap', 'off');\n\t\t\ttextarea.setAttribute('name', name);\n\t\t\tmxUtils.write(textarea, value);\n\t\t\tform.appendChild(textarea);\n\t\t}\n\t}\n\t\n\tdoc.body.appendChild(form);\n\tform.submit();\n\t\n\tif (form.parentNode != null)\n\t{\n\t\tform.parentNode.removeChild(form);\n\t}\n\n\tif (old != null)\n\t{\t\t\n\t\twindow.onbeforeunload = old;\n\t}\n};\n\n__mxOutput.mxXmlRequest = typeof mxXmlRequest !== 'undefined' ? mxXmlRequest : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxClipboard =\n{\n\t/**\n\t * Class: mxClipboard\n\t * \n\t * Singleton that implements a clipboard for graph cells.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * mxClipboard.copy(graph);\n\t * mxClipboard.paste(graph2);\n\t * (end)\n\t *\n\t * This copies the selection cells from the graph to the clipboard and\n\t * pastes them into graph2.\n\t * \n\t * For fine-grained control of the clipboard data the <mxGraph.canExportCell>\n\t * and <mxGraph.canImportCell> functions can be overridden.\n\t * \n\t * To restore previous parents for pasted cells, the implementation for\n\t * <copy> and <paste> can be changed as follows.\n\t * \n\t * (code)\n\t * mxClipboard.copy = function(graph, cells)\n\t * {\n\t *   cells = cells || graph.getSelectionCells();\n\t *   var result = graph.getExportableCells(cells);\n\t *   \n\t *   mxClipboard.parents = new Object();\n\t *   \n\t *   for (var i = 0; i < result.length; i++)\n\t *   {\n\t *     mxClipboard.parents[i] = graph.model.getParent(cells[i]);\n\t *   }\n\t *   \n\t *   mxClipboard.insertCount = 1;\n\t *   mxClipboard.setCells(graph.cloneCells(result));\n\t *   \n\t *   return result;\n\t * };\n\t * \n\t * mxClipboard.paste = function(graph)\n\t * {\n\t *   if (!mxClipboard.isEmpty())\n\t *   {\n\t *     var cells = graph.getImportableCells(mxClipboard.getCells());\n\t *     var delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t *     var parent = graph.getDefaultParent();\n\t *     \n\t *     graph.model.beginUpdate();\n\t *     try\n\t *     {\n\t *       for (var i = 0; i < cells.length; i++)\n\t *       {\n\t *         var tmp = (mxClipboard.parents != null && graph.model.contains(mxClipboard.parents[i])) ?\n\t *              mxClipboard.parents[i] : parent;\n\t *         cells[i] = graph.importCells([cells[i]], delta, delta, tmp)[0];\n\t *       }\n\t *     }\n\t *     finally\n\t *     {\n\t *       graph.model.endUpdate();\n\t *     }\n\t *     \n\t *     // Increments the counter and selects the inserted cells\n\t *     mxClipboard.insertCount++;\n\t *     graph.setSelectionCells(cells);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * Variable: STEPSIZE\n\t * \n\t * Defines the step size to offset the cells after each paste operation.\n\t * Default is 10.\n\t */\n\tSTEPSIZE: 10,\n\n\t/**\n\t * Variable: insertCount\n\t * \n\t * Counts the number of times the clipboard data has been inserted.\n\t */\n\tinsertCount: 1,\n\n\t/**\n\t * Variable: cells\n\t * \n\t * Holds the array of <mxCells> currently in the clipboard.\n\t */\n\tcells: null,\n\n\t/**\n\t * Function: setCells\n\t * \n\t * Sets the cells in the clipboard. Fires a <mxEvent.CHANGE> event.\n\t */\n\tsetCells: function(cells)\n\t{\n\t\tmxClipboard.cells = cells;\n\t},\n\n\t/**\n\t * Function: getCells\n\t * \n\t * Returns  the cells in the clipboard.\n\t */\n\tgetCells: function()\n\t{\n\t\treturn mxClipboard.cells;\n\t},\n\t\n\t/**\n\t * Function: isEmpty\n\t * \n\t * Returns true if the clipboard currently has not data stored.\n\t */\n\tisEmpty: function()\n\t{\n\t\treturn mxClipboard.getCells() == null;\n\t},\n\t\n\t/**\n\t * Function: cut\n\t * \n\t * Cuts the given array of <mxCells> from the specified graph.\n\t * If cells is null then the selection cells of the graph will\n\t * be used. Returns the cells that have been cut from the graph.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Optional array of <mxCells> to be cut.\n\t */\n\tcut: function(graph, cells)\n\t{\n\t\tcells = mxClipboard.copy(graph, cells);\n\t\tmxClipboard.insertCount = 0;\n\t\tmxClipboard.removeCells(graph, cells);\n\t\t\n\t\treturn cells;\n\t},\n\n\t/**\n\t * Function: removeCells\n\t * \n\t * Hook to remove the given cells from the given graph after\n\t * a cut operation.\n\t *\n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be cut.\n\t * cells - Array of <mxCells> to be cut.\n\t */\n\tremoveCells: function(graph, cells)\n\t{\n\t\tgraph.removeCells(cells);\n\t},\n\n\t/**\n\t * Function: copy\n\t * \n\t * Copies the given array of <mxCells> from the specified\n\t * graph to <cells>. Returns the original array of cells that has\n\t * been cloned. Descendants of cells in the array are ignored.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> that contains the cells to be copied.\n\t * cells - Optional array of <mxCells> to be copied.\n\t */\n\tcopy: function(graph, cells)\n\t{\n\t\tcells = cells || graph.getSelectionCells();\n\t\tvar result = graph.getExportableCells(graph.model.getTopmostCells(cells));\n\t\tmxClipboard.insertCount = 1;\n\t\tmxClipboard.setCells(graph.cloneCells(result));\n\n\t\treturn result;\n\t},\n\n\t/**\n\t * Function: paste\n\t * \n\t * Pastes the <cells> into the specified graph restoring\n\t * the relation to <parents>, if possible. If the parents\n\t * are no longer in the graph or invisible then the\n\t * cells are added to the graph's default or into the\n\t * swimlane under the cell's new location if one exists.\n\t * The cells are added to the graph using <mxGraph.importCells>\n\t * and returned.\n\t * \n\t * Parameters:\n\t * \n\t * graph - <mxGraph> to paste the <cells> into.\n\t */\n\tpaste: function(graph)\n\t{\n\t\tvar cells = null;\n\t\t\n\t\tif (!mxClipboard.isEmpty())\n\t\t{\n\t\t\tcells = graph.getImportableCells(mxClipboard.getCells());\n\t\t\tvar delta = mxClipboard.insertCount * mxClipboard.STEPSIZE;\n\t\t\tvar parent = graph.getDefaultParent();\n\t\t\tcells = graph.importCells(cells, delta, delta, parent);\n\t\t\t\n\t\t\t// Increments the counter and selects the inserted cells\n\t\t\tmxClipboard.insertCount++;\n\t\t\tgraph.setSelectionCells(cells);\n\t\t}\n\t\t\n\t\treturn cells;\n\t}\n\n};\n\n__mxOutput.mxClipboard = typeof mxClipboard !== 'undefined' ? mxClipboard : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxWindow\n * \n * Basic window inside a document.\n * \n * Examples:\n * \n * Creating a simple window.\n *\n * (code)\n * var tb = document.createElement('div');\n * var wnd = new mxWindow('Title', tb, 100, 100, 200, 200, true, true);\n * wnd.setVisible(true); \n * (end)\n *\n * Creating a window that contains an iframe. \n * \n * (code)\n * var frame = document.createElement('iframe');\n * frame.setAttribute('width', '192px');\n * frame.setAttribute('height', '172px');\n * frame.setAttribute('src', 'http://www.example.com/');\n * frame.style.backgroundColor = 'white';\n * \n * var w = document.body.clientWidth;\n * var h = (document.body.clientHeight || document.documentElement.clientHeight);\n * var wnd = new mxWindow('Title', frame, (w-200)/2, (h-200)/3, 200, 200);\n * wnd.setVisible(true);\n * (end)\n * \n * To limit the movement of a window, eg. to keep it from being moved beyond\n * the top, left corner the following method can be overridden (recommended):\n * \n * (code)\n * wnd.setLocation = function(x, y)\n * {\n *   x = Math.max(0, x);\n *   y = Math.max(0, y);\n *   mxWindow.prototype.setLocation.apply(this, arguments);\n * };\n * (end)\n * \n * Or the following event handler can be used:\n * \n * (code)\n * wnd.addListener(mxEvent.MOVE, function(e)\n * {\n *   wnd.setLocation(Math.max(0, wnd.getX()), Math.max(0, wnd.getY()));\n * });\n * (end)\n * \n * To keep a window inside the current window:\n * \n * (code)\n * mxEvent.addListener(window, 'resize', mxUtils.bind(this, function()\n * {\n *   var iw = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n *   var ih = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n *   \n *   var x = this.window.getX();\n *   var y = this.window.getY();\n *   \n *   if (x + this.window.table.clientWidth > iw)\n *   {\n *     x = Math.max(0, iw - this.window.table.clientWidth);\n *   }\n *   \n *   if (y + this.window.table.clientHeight > ih)\n *   {\n *     y = Math.max(0, ih - this.window.table.clientHeight);\n *   }\n *   \n *   if (this.window.getX() != x || this.window.getY() != y)\n *   {\n *     this.window.setLocation(x, y);\n *   }\n * }));\n * (end)\n *\n * Event: mxEvent.MOVE_START\n *\n * Fires before the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MOVE\n *\n * Fires while the window is being moved. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.MOVE_END\n *\n * Fires after the window is moved. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_START\n *\n * Fires before the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE\n *\n * Fires while the window is being resized. The <code>event</code> property\n * contains the corresponding mouse event.\n *\n * Event: mxEvent.RESIZE_END\n *\n * Fires after the window is resized. The <code>event</code> property contains\n * the corresponding mouse event.\n *\n * Event: mxEvent.MAXIMIZE\n * \n * Fires after the window is maximized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.MINIMIZE\n * \n * Fires after the window is minimized. The <code>event</code> property\n * contains the corresponding mouse event.\n * \n * Event: mxEvent.NORMALIZE\n * \n * Fires after the window is normalized, that is, it returned from\n * maximized or minimized state. The <code>event</code> property contains the\n * corresponding mouse event.\n *  \n * Event: mxEvent.ACTIVATE\n * \n * Fires after a window is activated. The <code>previousWindow</code> property\n * contains the previous window. The event sender is the active window.\n * \n * Event: mxEvent.SHOW\n * \n * Fires after the window is shown. This event has no properties.\n * \n * Event: mxEvent.HIDE\n * \n * Fires after the window is hidden. This event has no properties.\n * \n * Event: mxEvent.CLOSE\n * \n * Fires before the window is closed. The <code>event</code> property contains\n * the corresponding mouse event.\n * \n * Event: mxEvent.DESTROY\n * \n * Fires before the window is destroyed. This event has no properties.\n * \n * Constructor: mxWindow\n * \n * Constructs a new window with the given dimension and title to display\n * the specified content. The window elements use the given style as a\n * prefix for the classnames of the respective window elements, namely,\n * the window title and window pane. The respective postfixes are appended\n * to the given stylename as follows:\n * \n *   style - Base style for the window.\n *   style+Title - Style for the window title.\n *   style+Pane - Style for the window pane.\n * \n * The default value for style is mxWindow, resulting in the following\n * classnames for the window elements: mxWindow, mxWindowTitle and\n * mxWindowPane.\n * \n * If replaceNode is given then the window replaces the given DOM node in\n * the document.\n * \n * Parameters:\n * \n * title - String that represents the title of the new window.\n * content - DOM node that is used as the window content.\n * x - X-coordinate of the window location.\n * y - Y-coordinate of the window location.\n * width - Width of the window.\n * height - Optional height of the window. Default is to match the height\n * of the content at the specified width.\n * minimizable - Optional boolean indicating if the window is minimizable.\n * Default is true.\n * movable - Optional boolean indicating if the window is movable. Default\n * is true.\n * replaceNode - Optional DOM node that the window should replace.\n * style - Optional base classname for the window elements. Default is\n * mxWindow.\n */\nfunction mxWindow(title, content, x, y, width, height, minimizable, movable, replaceNode, style)\n{\n\tif (content != null)\n\t{\n\t\tminimizable = (minimizable != null) ? minimizable : true;\n\t\tthis.content = content;\n\t\tthis.init(x, y, width, height, style);\n\t\t\n\t\tthis.installMaximizeHandler();\n\t\tthis.installMinimizeHandler();\n\t\tthis.installCloseHandler();\n\t\tthis.setMinimizable(minimizable);\n\t\tthis.setTitle(title);\n\t\t\n\t\tif (movable == null || movable)\n\t\t{\n\t\t\tthis.installMoveHandler();\n\t\t}\n\n\t\tif (replaceNode != null && replaceNode.parentNode != null)\n\t\t{\n\t\t\treplaceNode.parentNode.replaceChild(this.div, replaceNode);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.body.appendChild(this.div);\n\t\t}\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxWindow.prototype = new mxEventSource();\nmxWindow.prototype.constructor = mxWindow;\n\n/**\n * Variable: closeImage\n * \n * URL of the image to be used for the close icon in the titlebar.\n */\nmxWindow.prototype.closeImage = mxClient.imageBasePath + '/close.gif';\n\n/**\n * Variable: minimizeImage\n * \n * URL of the image to be used for the minimize icon in the titlebar.\n */\nmxWindow.prototype.minimizeImage = mxClient.imageBasePath + '/minimize.gif';\n\t\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the normalize icon in the titlebar.\n */\nmxWindow.prototype.normalizeImage = mxClient.imageBasePath + '/normalize.gif';\n\t\n/**\n * Variable: maximizeImage\n * \n * URL of the image to be used for the maximize icon in the titlebar.\n */\nmxWindow.prototype.maximizeImage = mxClient.imageBasePath + '/maximize.gif';\n\n/**\n * Variable: normalizeImage\n * \n * URL of the image to be used for the resize icon.\n */\nmxWindow.prototype.resizeImage = mxClient.imageBasePath + '/resize.gif';\n\n/**\n * Variable: visible\n * \n * Boolean flag that represents the visible state of the window.\n */\nmxWindow.prototype.visible = false;\n\n/**\n * Variable: minimumSize\n * \n * <mxRectangle> that specifies the minimum width and height of the window.\n * Default is (50, 40).\n */\nmxWindow.prototype.minimumSize = new mxRectangle(0, 0, 50, 40);\n\n/**\n * Variable: destroyOnClose\n * \n * Specifies if the window should be destroyed when it is closed. If this\n * is false then the window is hidden using <setVisible>. Default is true.\n */\nmxWindow.prototype.destroyOnClose = true;\n\n/**\n * Variable: contentHeightCorrection\n * \n * Defines the correction factor for computing the height of the contentWrapper.\n * Default is 6 for IE 7/8 standards mode and 2 for all other browsers and modes.\n */\nmxWindow.prototype.contentHeightCorrection = (document.documentMode == 8 || document.documentMode == 7) ? 6 : 2;\n\n/**\n * Variable: title\n * \n * Reference to the DOM node (TD) that contains the title.\n */\nmxWindow.prototype.title = null;\n\n/**\n * Variable: content\n * \n * Reference to the DOM node that represents the window content.\n */\nmxWindow.prototype.content = null;\n\n/**\n * Function: init\n * \n * Initializes the DOM tree that represents the window.\n */\nmxWindow.prototype.init = function(x, y, width, height, style)\n{\n\tstyle = (style != null) ? style : 'mxWindow';\n\t\n\tthis.div = document.createElement('div');\n\tthis.div.className = style;\n\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n\tthis.table = document.createElement('table');\n\tthis.table.className = style;\n\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.div.style.touchAction = 'none';\n\t}\n\t\n\t// Workaround for table size problems in FF\n\tif (width != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.width = width + 'px'; \n\t\t}\n\t\t\n\t\tthis.table.style.width = width + 'px';\n\t} \n\t\n\tif (height != null)\n\t{\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tthis.div.style.height = height + 'px';\n\t\t}\n\t\t\n\t\tthis.table.style.height = height + 'px';\n\t}\t\t\n\t\n\t// Creates title row\n\tvar tbody = document.createElement('tbody');\n\tvar tr = document.createElement('tr');\n\t\n\tthis.title = document.createElement('td');\n\tthis.title.className = style + 'Title';\n\t\n\tthis.buttons = document.createElement('div');\n\tthis.buttons.style.position = 'absolute';\n\tthis.buttons.style.display = 'inline-block';\n\tthis.buttons.style.right = '4px';\n\tthis.buttons.style.top = '5px';\n\tthis.title.appendChild(this.buttons);\n\t\n\ttr.appendChild(this.title);\n\ttbody.appendChild(tr);\n\t\n\t// Creates content row and table cell\n\ttr = document.createElement('tr');\n\tthis.td = document.createElement('td');\n\tthis.td.className = style + 'Pane';\n\t\n\tif (document.documentMode == 7)\n\t{\n\t\tthis.td.style.height = '100%';\n\t}\n\n\tthis.contentWrapper = document.createElement('div');\n\tthis.contentWrapper.className = style + 'Pane';\n\tthis.contentWrapper.style.width = '100%';\n\tthis.contentWrapper.appendChild(this.content);\n\n\t// Workaround for div around div restricts height\n\t// of inner div if outerdiv has hidden overflow\n\tif (mxClient.IS_QUIRKS || this.content.nodeName.toUpperCase() != 'DIV')\n\t{\n\t\tthis.contentWrapper.style.height = '100%';\n\t}\n\n\t// Puts all content into the DOM\n\tthis.td.appendChild(this.contentWrapper);\n\ttr.appendChild(this.td);\n\ttbody.appendChild(tr);\n\tthis.table.appendChild(tbody);\n\tthis.div.appendChild(this.table);\n\t\n\t// Puts the window on top of other windows when clicked\n\tvar activator = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t});\n\t\n\tmxEvent.addGestureListeners(this.title, activator);\n\tmxEvent.addGestureListeners(this.table, activator);\n\n\tthis.hide();\n};\n\n/**\n * Function: setTitle\n * \n * Sets the window title to the given string. HTML markup inside the title\n * will be escaped.\n */\nmxWindow.prototype.setTitle = function(title)\n{\n\t// Removes all text content nodes (normally just one)\n\tvar child = this.title.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar next = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_TEXT)\n\t\t{\n\t\t\tchild.parentNode.removeChild(child);\n\t\t}\n\t\t\n\t\tchild = next;\n\t}\n\t\n\tmxUtils.write(this.title, title || '');\n\tthis.title.appendChild(this.buttons);\n};\n\n/**\n * Function: setScrollable\n * \n * Sets if the window contents should be scrollable.\n */\nmxWindow.prototype.setScrollable = function(scrollable)\n{\n\t// Workaround for hang in Presto 2.5.22 (Opera 10.5)\n\tif (navigator.userAgent.indexOf('Presto/2.5') < 0)\n\t{\n\t\tif (scrollable)\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'auto';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.contentWrapper.style.overflow = 'hidden';\n\t\t}\n\t}\n};\n\n/**\n * Function: activate\n * \n * Puts the window on top of all other windows.\n */\nmxWindow.prototype.activate = function()\n{\n\tif (mxWindow.activeWindow != this)\n\t{\n\t\tvar style = mxUtils.getCurrentStyle(this.getElement());\n\t\tvar index = (style != null) ? style.zIndex : 3;\n\n\t\tif (mxWindow.activeWindow)\n\t\t{\n\t\t\tvar elt = mxWindow.activeWindow.getElement();\n\t\t\t\n\t\t\tif (elt != null && elt.style != null)\n\t\t\t{\n\t\t\t\telt.style.zIndex = index;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar previousWindow = mxWindow.activeWindow;\n\t\tthis.getElement().style.zIndex = parseInt(index) + 1;\n\t\tmxWindow.activeWindow = this;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ACTIVATE, 'previousWindow', previousWindow));\n\t}\n};\n\n/**\n * Function: getElement\n * \n * Returuns the outermost DOM node that makes up the window.\n */\nmxWindow.prototype.getElement = function()\n{\n\treturn this.div;\n};\n\n/**\n * Function: fit\n * \n * Makes sure the window is inside the client area of the window.\n */\nmxWindow.prototype.fit = function()\n{\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: isResizable\n * \n * Returns true if the window is resizable.\n */\nmxWindow.prototype.isResizable = function()\n{\n\tif (this.resize != null)\n\t{\n\t\treturn this.resize.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setResizable\n * \n * Sets if the window should be resizable. To avoid interference with some\n * built-in features of IE10 and later, the use of the following code is\n * recommended if there are resizable <mxWindow>s in the page:\n * \n * (code)\n * if (mxClient.IS_POINTER)\n * {\n *   document.body.style.msTouchAction = 'none';\n * }\n * (end)\n */\nmxWindow.prototype.setResizable = function(resizable)\n{\n\tif (resizable)\n\t{\n\t\tif (this.resize == null)\n\t\t{\n\t\t\tthis.resize = document.createElement('img');\n\t\t\tthis.resize.style.position = 'absolute';\n\t\t\tthis.resize.style.bottom = '2px';\n\t\t\tthis.resize.style.right = '2px';\n\n\t\t\tthis.resize.setAttribute('src', this.resizeImage);\n\t\t\tthis.resize.style.cursor = 'nw-resize';\n\t\t\t\n\t\t\tvar startX = null;\n\t\t\tvar startY = null;\n\t\t\tvar width = null;\n\t\t\tvar height = null;\n\t\t\t\n\t\t\tvar start = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// LATER: pointerdown starting on border of resize does start\n\t\t\t\t// the drag operation but does not fire consecutive events via\n\t\t\t\t// one of the listeners below (does pan instead).\n\t\t\t\t// Workaround: document.body.style.msTouchAction = 'none'\n\t\t\t\tthis.activate();\n\t\t\t\tstartX = mxEvent.getClientX(evt);\n\t\t\t\tstartY = mxEvent.getClientY(evt);\n\t\t\t\twidth = this.div.offsetWidth;\n\t\t\t\theight = this.div.offsetHeight;\n\t\t\t\t\n\t\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_START, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\n\t\t\t\t\tthis.setSize(width + dx, height + dy);\n\t\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (startX != null && startY != null)\n\t\t\t\t{\n\t\t\t\t\tstartX = null;\n\t\t\t\t\tstartY = null;\n\t\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_END, 'event', evt));\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(this.resize, start, dragHandler, dropHandler);\n\t\t\tthis.div.appendChild(this.resize);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.resize.style.display = 'inline';\n\t\t}\n\t}\n\telse if (this.resize != null)\n\t{\n\t\tthis.resize.style.display = 'none';\n\t}\n};\n\t\n/**\n * Function: setSize\n * \n * Sets the size of the window.\n */\nmxWindow.prototype.setSize = function(width, height)\n{\n\twidth = Math.max(this.minimumSize.width, width);\n\theight = Math.max(this.minimumSize.height, height);\n\n\t// Workaround for table size problems in FF\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.div.style.width =  width + 'px';\n\t\tthis.div.style.height = height + 'px';\n\t}\n\t\n\tthis.table.style.width =  width + 'px';\n\tthis.table.style.height = height + 'px';\n\n\tif (!mxClient.IS_QUIRKS)\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n};\n\t\n/**\n * Function: setMinimizable\n * \n * Sets if the window is minimizable.\n */\nmxWindow.prototype.setMinimizable = function(minimizable)\n{\n\tthis.minimize.style.display = (minimizable) ? '' : 'none';\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns an <mxRectangle> that specifies the size for the minimized window.\n * A width or height of 0 means keep the existing width or height. This\n * implementation returns the height of the window title and keeps the width.\n */\nmxWindow.prototype.getMinimumSize = function()\n{\n\treturn new mxRectangle(0, 0, 0, this.title.offsetHeight);\n};\n\n/**\n * Function: installMinimizeHandler\n * \n * Installs the event listeners required for minimizing the window.\n */\nmxWindow.prototype.installMinimizeHandler = function()\n{\n\tthis.minimize = document.createElement('img');\n\t\n\tthis.minimize.setAttribute('src', this.minimizeImage);\n\tthis.minimize.setAttribute('title', 'Minimize');\n\tthis.minimize.style.cursor = 'pointer';\n\tthis.minimize.style.marginLeft = '2px';\n\tthis.minimize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.minimize);\n\t\n\tvar minimized = false;\n\tvar maxDisplay = null;\n\tvar height = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (!minimized)\n\t\t{\n\t\t\tminimized = true;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.normalizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Normalize');\n\t\t\tthis.contentWrapper.style.display = 'none';\n\t\t\tmaxDisplay = this.maximize.style.display;\n\t\t\t\n\t\t\tthis.maximize.style.display = 'none';\n\t\t\theight = this.table.style.height;\n\t\t\t\n\t\t\tvar minSize = this.getMinimumSize();\n\t\t\t\n\t\t\tif (minSize.height > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = minSize.height + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = minSize.height + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (minSize.width > 0)\n\t\t\t{\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = minSize.width + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.width = minSize.width + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MINIMIZE, 'event', evt));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tminimized = false;\n\t\t\t\n\t\t\tthis.minimize.setAttribute('src', this.minimizeImage);\n\t\t\tthis.minimize.setAttribute('title', 'Minimize');\n\t\t\tthis.contentWrapper.style.display = ''; // default\n\t\t\tthis.maximize.style.display = maxDisplay;\n\t\t\t\n\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.div.style.height = height;\n\t\t\t}\n\t\t\t\n\t\t\tthis.table.style.height = height;\n\n\t\t\tif (this.resize != null)\n\t\t\t{\n\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tmxEvent.addGestureListeners(this.minimize, funct);\n};\n\t\n/**\n * Function: setMaximizable\n * \n * Sets if the window is maximizable.\n */\nmxWindow.prototype.setMaximizable = function(maximizable)\n{\n\tthis.maximize.style.display = (maximizable) ? '' : 'none';\n};\n\n/**\n * Function: installMaximizeHandler\n * \n * Installs the event listeners required for maximizing the window.\n */\nmxWindow.prototype.installMaximizeHandler = function()\n{\n\tthis.maximize = document.createElement('img');\n\t\n\tthis.maximize.setAttribute('src', this.maximizeImage);\n\tthis.maximize.setAttribute('title', 'Maximize');\n\tthis.maximize.style.cursor = 'default';\n\tthis.maximize.style.marginLeft = '2px';\n\tthis.maximize.style.cursor = 'pointer';\n\tthis.maximize.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.maximize);\n\t\n\tvar maximized = false;\n\tvar x = null;\n\tvar y = null;\n\tvar height = null;\n\tvar width = null;\n\tvar minDisplay = null;\n\n\tvar funct = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.activate();\n\t\t\n\t\tif (this.maximize.style.display != 'none')\n\t\t{\n\t\t\tif (!maximized)\n\t\t\t{\n\t\t\t\tmaximized = true;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.normalizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Normalize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tminDisplay = this.minimize.style.display;\n\t\t\t\tthis.minimize.style.display = 'none';\n\t\t\t\t\n\t\t\t\t// Saves window state\n\t\t\t\tx = parseInt(this.div.style.left);\n\t\t\t\ty = parseInt(this.div.style.top);\n\t\t\t\theight = this.table.style.height;\n\t\t\t\twidth = this.table.style.width;\n\n\t\t\t\tthis.div.style.left = '0px';\n\t\t\t\tthis.div.style.top = '0px';\n\t\t\t\tvar docHeight = Math.max(document.body.clientHeight || 0, document.documentElement.clientHeight || 0);\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\t\tthis.div.style.height = (docHeight - 2) + 'px';\n\t\t\t\t}\n\n\t\t\t\tthis.table.style.width = (document.body.clientWidth - 2) + 'px';\n\t\t\t\tthis.table.style.height = (docHeight - 2) + 'px';\n\t\t\t\t\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = 'hidden';\n\t\t\t\t}\n\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MAXIMIZE, 'event', evt));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmaximized = false;\n\t\t\t\t\n\t\t\t\tthis.maximize.setAttribute('src', this.maximizeImage);\n\t\t\t\tthis.maximize.setAttribute('title', 'Maximize');\n\t\t\t\tthis.contentWrapper.style.display = '';\n\t\t\t\tthis.minimize.style.display = minDisplay;\n\n\t\t\t\t// Restores window state\n\t\t\t\tthis.div.style.left = x+'px';\n\t\t\t\tthis.div.style.top = y+'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tthis.div.style.height = height;\n\t\t\t\t\tthis.div.style.width = width;\n\n\t\t\t\t\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\t\n\t\t\t\t\tif (style.overflow == 'auto' || this.resize != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.table.style.height = height;\n\t\t\t\tthis.table.style.width = width;\n\n\t\t\t\tif (this.resize != null)\n\t\t\t\t{\n\t\t\t\t\tthis.resize.style.visibility = '';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.NORMALIZE, 'event', evt));\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n\t\n\tmxEvent.addGestureListeners(this.maximize, funct);\n\tmxEvent.addListener(this.title, 'dblclick', funct);\n};\n\t\n/**\n * Function: installMoveHandler\n * \n * Installs the event listeners required for moving the window.\n */\nmxWindow.prototype.installMoveHandler = function()\n{\n\tthis.title.style.cursor = 'move';\n\t\n\tmxEvent.addGestureListeners(this.title,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tvar startX = mxEvent.getClientX(evt);\n\t\t\tvar startY = mxEvent.getClientY(evt);\n\t\t\tvar x = this.getX();\n\t\t\tvar y = this.getY();\n\t\t\t\t\t\t\n\t\t\t// Adds a temporary pair of listeners to intercept\n\t\t\t// the gesture event in the document\n\t\t\tvar dragHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar dx = mxEvent.getClientX(evt) - startX;\n\t\t\t\tvar dy = mxEvent.getClientY(evt) - startY;\n\t\t\t\tthis.setLocation(x + dx, y + dy);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tvar dropHandler = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tmxEvent.removeGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_END, 'event', evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addGestureListeners(document, null, dragHandler, dropHandler);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_START, 'event', evt));\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tthis.title.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: setLocation\n * \n * Sets the upper, left corner of the window.\n */\n mxWindow.prototype.setLocation = function(x, y)\n {\n\tthis.div.style.left = x + 'px';\n\tthis.div.style.top = y + 'px';\n };\n\n/**\n * Function: getX\n *\n * Returns the current position on the x-axis.\n */\nmxWindow.prototype.getX = function()\n{\n\treturn parseInt(this.div.style.left);\n};\n\n/**\n * Function: getY\n *\n * Returns the current position on the y-axis.\n */\nmxWindow.prototype.getY = function()\n{\n\treturn parseInt(this.div.style.top);\n};\n\n/**\n * Function: installCloseHandler\n *\n * Adds the <closeImage> as a new image node in <closeImg> and installs the\n * <close> event.\n */\nmxWindow.prototype.installCloseHandler = function()\n{\n\tthis.closeImg = document.createElement('img');\n\t\n\tthis.closeImg.setAttribute('src', this.closeImage);\n\tthis.closeImg.setAttribute('title', 'Close');\n\tthis.closeImg.style.marginLeft = '2px';\n\tthis.closeImg.style.cursor = 'pointer';\n\tthis.closeImg.style.display = 'none';\n\t\n\tthis.buttons.appendChild(this.closeImg);\n\n\tmxEvent.addGestureListeners(this.closeImg,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CLOSE, 'event', evt));\n\t\t\t\n\t\t\tif (this.destroyOnClose)\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(evt);\n\t\t}));\n};\n\n/**\n * Function: setImage\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * image - URL of the image to be used.\n */\nmxWindow.prototype.setImage = function(image)\n{\n\tthis.image = document.createElement('img');\n\tthis.image.setAttribute('src', image);\n\tthis.image.setAttribute('align', 'left');\n\tthis.image.style.marginRight = '4px';\n\tthis.image.style.marginLeft = '0px';\n\tthis.image.style.marginTop = '-2px';\n\t\n\tthis.title.insertBefore(this.image, this.title.firstChild);\n};\n\n/**\n * Function: setClosable\n * \n * Sets the image associated with the window.\n * \n * Parameters:\n * \n * closable - Boolean specifying if the window should be closable.\n */\nmxWindow.prototype.setClosable = function(closable)\n{\n\tthis.closeImg.style.display = (closable) ? '' : 'none';\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the window is visible.\n */\nmxWindow.prototype.isVisible = function()\n{\n\tif (this.div != null)\n\t{\n\t\treturn this.div.style.display != 'none';\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: setVisible\n *\n * Shows or hides the window depending on the given flag.\n * \n * Parameters:\n * \n * visible - Boolean indicating if the window should be made visible.\n */\nmxWindow.prototype.setVisible = function(visible)\n{\n\tif (this.div != null && this.isVisible() != visible)\n\t{\n\t\tif (visible)\n\t\t{\n\t\t\tthis.show();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.hide();\n\t\t}\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the window.\n */\nmxWindow.prototype.show = function()\n{\n\tthis.div.style.display = '';\n\tthis.activate();\n\t\n\tvar style = mxUtils.getCurrentStyle(this.contentWrapper);\n\t\n\tif (!mxClient.IS_QUIRKS && (style.overflow == 'auto' || this.resize != null) &&\n\t\tthis.contentWrapper.style.display != 'none')\n\t{\n\t\tthis.contentWrapper.style.height = (this.div.offsetHeight -\n\t\t\t\tthis.title.offsetHeight - this.contentHeightCorrection) + 'px';\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n};\n\n/**\n * Function: hide\n *\n * Hides the window.\n */\nmxWindow.prototype.hide = function()\n{\n\tthis.div.style.display = 'none';\n\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n};\n\n/**\n * Function: destroy\n *\n * Destroys the window and removes all associated resources. Fires a\n * <destroy> event prior to destroying the window.\n */\nmxWindow.prototype.destroy = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.DESTROY));\n\t\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\tthis.div.parentNode.removeChild(this.div);\n\t\tthis.div = null;\n\t}\n\t\n\tthis.title = null;\n\tthis.content = null;\n\tthis.contentWrapper = null;\n};\n\n__mxOutput.mxWindow = typeof mxWindow !== 'undefined' ? mxWindow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxForm\n * \n * A simple class for creating HTML forms.\n * \n * Constructor: mxForm\n * \n * Creates a HTML table using the specified classname.\n */\nfunction mxForm(className)\n{\n\tthis.table = document.createElement('table');\n\tthis.table.className = className;\n\tthis.body = document.createElement('tbody');\n\t\n\tthis.table.appendChild(this.body);\n};\n\n/**\n * Variable: table\n * \n * Holds the DOM node that represents the table.\n */\nmxForm.prototype.table = null;\n\n/**\n * Variable: body\n * \n * Holds the DOM node that represents the tbody (table body). New rows\n * can be added to this object using DOM API.\n */\nmxForm.prototype.body = false;\n\n/**\n * Function: getTable\n * \n * Returns the table that contains this form.\n */\nmxForm.prototype.getTable = function()\n{\n\treturn this.table;\n};\n\n/**\n * Function: addButtons\n * \n * Helper method to add an OK and Cancel button using the respective\n * functions.\n */\nmxForm.prototype.addButtons = function(okFunct, cancelFunct)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\ttr.appendChild(td);\n\ttd = document.createElement('td');\n\n\t// Adds the ok button\n\tvar button = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('ok') || 'OK');\n\ttd.appendChild(button);\n\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tokFunct();\n\t});\n\t\n\t// Adds the cancel button\n\tbutton = document.createElement('button');\n\tmxUtils.write(button, mxResources.get('cancel') || 'Cancel');\n\ttd.appendChild(button);\n\t\n\tmxEvent.addListener(button, 'click', function()\n\t{\n\t\tcancelFunct();\n\t});\n\t\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n};\n\n/**\n * Function: addText\n * \n * Adds an input for the given name, type and value and returns it.\n */\nmxForm.prototype.addText = function(name, value, type)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', type || 'text');\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCheckbox\n * \n * Adds a checkbox for the given name and value and returns the textfield.\n */\nmxForm.prototype.addCheckbox = function(name, value)\n{\n\tvar input = document.createElement('input');\n\t\n\tinput.setAttribute('type', 'checkbox');\n\tthis.addField(name, input);\n\n\t// IE can only change the checked value if the input is inside the DOM\n\tif (value)\n\t{\n\t\tinput.checked = true;\n\t}\n\n\treturn input;\n};\n\n/**\n * Function: addTextarea\n * \n * Adds a textarea for the given name and value and returns the textarea.\n */\nmxForm.prototype.addTextarea = function(name, value, rows)\n{\n\tvar input = document.createElement('textarea');\n\t\n\tif (mxClient.IS_NS)\n\t{\n\t\trows--;\n\t}\n\t\n\tinput.setAttribute('rows', rows || 2);\n\tinput.value = value;\n\t\n\treturn this.addField(name, input);\n};\n\n/**\n * Function: addCombo\n * \n * Adds a combo for the given name and returns the combo.\n */\nmxForm.prototype.addCombo = function(name, isMultiSelect, size)\n{\n\tvar select = document.createElement('select');\n\t\n\tif (size != null)\n\t{\n\t\tselect.setAttribute('size', size);\n\t}\n\t\n\tif (isMultiSelect)\n\t{\n\t\tselect.setAttribute('multiple', 'true');\n\t}\n\t\n\treturn this.addField(name, select);\n};\n\n/**\n * Function: addOption\n * \n * Adds an option for the given label to the specified combo.\n */\nmxForm.prototype.addOption = function(combo, label, value, isSelected)\n{\n\tvar option = document.createElement('option');\n\t\n\tmxUtils.writeln(option, label);\n\toption.setAttribute('value', value);\n\t\n\tif (isSelected)\n\t{\n\t\toption.setAttribute('selected', isSelected);\n\t}\n\t\n\tcombo.appendChild(option);\n};\n\n/**\n * Function: addField\n * \n * Adds a new row with the name and the input field in two columns and\n * returns the given input.\n */\nmxForm.prototype.addField = function(name, input)\n{\n\tvar tr = document.createElement('tr');\n\tvar td = document.createElement('td');\n\tmxUtils.write(td, name);\n\ttr.appendChild(td);\n\t\n\ttd = document.createElement('td');\n\ttd.appendChild(input);\n\ttr.appendChild(td);\n\tthis.body.appendChild(tr);\n\t\n\treturn input;\n};\n\n__mxOutput.mxForm = typeof mxForm !== 'undefined' ? mxForm : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImage\n *\n * Encapsulates the URL, width and height of an image.\n * \n * Constructor: mxImage\n * \n * Constructs a new image.\n */\nfunction mxImage(src, width, height)\n{\n\tthis.src = src;\n\tthis.width = width;\n\tthis.height = height;\n};\n\n/**\n * Variable: src\n *\n * String that specifies the URL of the image.\n */\nmxImage.prototype.src = null;\n\n/**\n * Variable: width\n *\n * Integer that specifies the width of the image.\n */\nmxImage.prototype.width = null;\n\n/**\n * Variable: height\n *\n * Integer that specifies the height of the image.\n */\nmxImage.prototype.height = null;\n\n__mxOutput.mxImage = typeof mxImage !== 'undefined' ? mxImage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDivResizer\n * \n * Maintains the size of a div element in Internet Explorer. This is a\n * workaround for the right and bottom style being ignored in IE.\n * \n * If you need a div to cover the scrollwidth and -height of a document,\n * then you can use this class as follows:\n * \n * (code)\n * var resizer = new mxDivResizer(background);\n * resizer.getDocumentHeight = function()\n * {\n *   return document.body.scrollHeight;\n * }\n * resizer.getDocumentWidth = function()\n * {\n *   return document.body.scrollWidth;\n * }\n * resizer.resize();\n * (end)\n * \n * Constructor: mxDivResizer\n * \n * Constructs an object that maintains the size of a div\n * element when the window is being resized. This is only\n * required for Internet Explorer as it ignores the respective\n * stylesheet information for DIV elements.\n * \n * Parameters:\n * \n * div - Reference to the DOM node whose size should be maintained.\n * container - Optional Container that contains the div. Default is the\n * window.\n */\nfunction mxDivResizer(div, container)\n{\n\tif (div.nodeName.toLowerCase() == 'div')\n\t{\n\t\tif (container == null)\n\t\t{\n\t\t\tcontainer = window;\n\t\t}\n\n\t\tthis.div = div;\n\t\tvar style = mxUtils.getCurrentStyle(div);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tthis.resizeWidth = style.width == 'auto';\n\t\t\tthis.resizeHeight = style.height == 'auto';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(container, 'resize',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (!this.handlingResize)\n\t\t\t\t{\n\t\t\t\t\tthis.handlingResize = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t\tthis.handlingResize = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\t\n\t\tthis.resize();\n\t}\n};\n\n/**\n * Function: resizeWidth\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.resizeWidth = true;\n\n/**\n * Function: resizeHeight\n * \n * Boolean specifying if the height should be updated.\n */\nmxDivResizer.prototype.resizeHeight = true;\n\n/**\n * Function: handlingResize\n * \n * Boolean specifying if the width should be updated.\n */\nmxDivResizer.prototype.handlingResize = false;\n\n/**\n * Function: resize\n * \n * Updates the style of the DIV after the window has been resized.\n */\nmxDivResizer.prototype.resize = function()\n{\n\tvar w = this.getDocumentWidth();\n\tvar h = this.getDocumentHeight();\n\n\tvar l = parseInt(this.div.style.left);\n\tvar r = parseInt(this.div.style.right);\n\tvar t = parseInt(this.div.style.top);\n\tvar b = parseInt(this.div.style.bottom);\n\t\n\tif (this.resizeWidth &&\n\t\t!isNaN(l) &&\n\t\t!isNaN(r) &&\n\t\tl >= 0 &&\n\t\tr >= 0 &&\n\t\tw - r - l > 0)\n\t{\n\t\tthis.div.style.width = (w - r - l)+'px';\n\t}\n\t\n\tif (this.resizeHeight &&\n\t\t!isNaN(t) &&\n\t\t!isNaN(b) &&\n\t\tt >= 0 &&\n\t\tb >= 0 &&\n\t\th - t - b > 0)\n\t{\n\t\tthis.div.style.height = (h - t - b)+'px';\n\t}\n};\n\n/**\n * Function: getDocumentWidth\n * \n * Hook for subclassers to return the width of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentWidth = function()\n{\n\treturn document.body.clientWidth;\n};\n\n/**\n * Function: getDocumentHeight\n * \n * Hook for subclassers to return the height of the document (without\n * scrollbars).\n */\nmxDivResizer.prototype.getDocumentHeight = function()\n{\n\treturn document.body.clientHeight;\n};\n\n__mxOutput.mxDivResizer = typeof mxDivResizer !== 'undefined' ? mxDivResizer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDragSource\n * \n * Wrapper to create a drag source from a DOM element so that the element can\n * be dragged over a graph and dropped into the graph as a new cell.\n * \n * Problem is that in the dropHandler the current preview location is not\n * available, so the preview and the dropHandler must match.\n * \n * Constructor: mxDragSource\n * \n * Constructs a new drag source for the given element.\n */\nfunction mxDragSource(element, dropHandler)\n{\n\tthis.element = element;\n\tthis.dropHandler = dropHandler;\n\t\n\t// Handles a drag gesture on the element\n\tmxEvent.addGestureListeners(element, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseDown(evt);\n\t}));\n\t\n\t// Prevents native drag and drop\n\tmxEvent.addListener(element, 'dragstart', function(evt)\n\t{\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tthis.eventConsumer = function(sender, evt)\n\t{\n\t\tvar evtName = evt.getProperty('eventName');\n\t\tvar me = evt.getProperty('event');\n\t\t\n\t\tif (evtName != mxEvent.MOUSE_DOWN)\n\t\t{\n\t\t\tme.consume();\n\t\t}\n\t};\n};\n\n/**\n * Variable: element\n *\n * Reference to the DOM node which was made draggable.\n */\nmxDragSource.prototype.element = null;\n\n/**\n * Variable: dropHandler\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dropHandler = null;\n\n/**\n * Variable: dragOffset\n *\n * <mxPoint> that specifies the offset of the <dragElement>. Default is null.\n */\nmxDragSource.prototype.dragOffset = null;\n\n/**\n * Variable: dragElement\n *\n * Holds the DOM node that is used to represent the drag preview. If this is\n * null then the source element will be cloned and used for the drag preview.\n */\nmxDragSource.prototype.dragElement = null;\n\n/**\n * Variable: previewElement\n *\n * Optional <mxRectangle> that specifies the unscaled size of the preview.\n */\nmxDragSource.prototype.previewElement = null;\n\n/**\n * Variable: enabled\n *\n * Specifies if this drag source is enabled. Default is true.\n */\nmxDragSource.prototype.enabled = true;\n\n/**\n * Variable: currentGraph\n *\n * Reference to the <mxGraph> that is the current drop target.\n */\nmxDragSource.prototype.currentGraph = null;\n\n/**\n * Variable: currentDropTarget\n *\n * Holds the current drop target under the mouse.\n */\nmxDragSource.prototype.currentDropTarget = null;\n\n/**\n * Variable: currentPoint\n *\n * Holds the current drop location.\n */\nmxDragSource.prototype.currentPoint = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentGuide = null;\n\n/**\n * Variable: currentGuide\n *\n * Holds an <mxGuide> for the <currentGraph> if <dragPreview> is not null.\n */\nmxDragSource.prototype.currentHighlight = null;\n\n/**\n * Variable: autoscroll\n *\n * Specifies if the graph should scroll automatically. Default is true.\n */\nmxDragSource.prototype.autoscroll = true;\n\n/**\n * Variable: guidesEnabled\n *\n * Specifies if <mxGuide> should be enabled. Default is true.\n */\nmxDragSource.prototype.guidesEnabled = true;\n\n/**\n * Variable: gridEnabled\n *\n * Specifies if the grid should be allowed. Default is true.\n */\nmxDragSource.prototype.gridEnabled = true;\n\n/**\n * Variable: highlightDropTargets\n *\n * Specifies if drop targets should be highlighted. Default is true.\n */\nmxDragSource.prototype.highlightDropTargets = true;\n\n/**\n * Variable: dragElementZIndex\n * \n * ZIndex for the drag element. Default is 100.\n */\nmxDragSource.prototype.dragElementZIndex = 100;\n\n/**\n * Variable: dragElementOpacity\n * \n * Opacity of the drag element in %. Default is 70.\n */\nmxDragSource.prototype.dragElementOpacity = 70;\n\n/**\n * Variable: checkEventSource\n * \n * Whether the event source should be checked in <graphContainerEvent>. Default\n * is true.\n */\nmxDragSource.prototype.checkEventSource = true;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxDragSource.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxDragSource.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isGuidesEnabled\n * \n * Returns <guidesEnabled>.\n */\nmxDragSource.prototype.isGuidesEnabled = function()\n{\n\treturn this.guidesEnabled;\n};\n\n/**\n * Function: setGuidesEnabled\n * \n * Sets <guidesEnabled>.\n */\nmxDragSource.prototype.setGuidesEnabled = function(value)\n{\n\tthis.guidesEnabled = value;\n};\n\n/**\n * Function: isGridEnabled\n * \n * Returns <gridEnabled>.\n */\nmxDragSource.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Sets <gridEnabled>.\n */\nmxDragSource.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: getGraphForEvent\n * \n * Returns the graph for the given mouse event. This implementation returns\n * null.\n */\nmxDragSource.prototype.getGraphForEvent = function(evt)\n{\n\treturn null;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.getDropTarget = function(graph, x, y, evt)\n{\n\treturn graph.getCellAt(x, y);\n};\n\n/**\n * Function: createDragElement\n * \n * Creates and returns a clone of the <dragElementPrototype> or the <element>\n * if the former is not defined.\n */\nmxDragSource.prototype.createDragElement = function(evt)\n{\n\treturn this.element.cloneNode(true);\n};\n\n/**\n * Function: createPreviewElement\n * \n * Creates and returns an element which can be used as a preview in the given\n * graph.\n */\nmxDragSource.prototype.createPreviewElement = function(graph)\n{\n\treturn null;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this drag source is active.\n */\nmxDragSource.prototype.isActive = function()\n{\n\treturn this.mouseMoveHandler != null;\n};\n\n/**\n * Function: reset\n * \n * Stops and removes everything and restores the state of the object.\n */\nmxDragSource.prototype.reset = function()\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\t\n\tthis.removeDragElement();\n\tthis.removeListeners();\n\tthis.stopDrag();\n};\n\n/**\n * Function: mouseDown\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n * \n * To ignore popup menu events for a drag source, this function can be\n * overridden as follows.\n * \n * (code)\n * var mouseDown = dragSource.mouseDown;\n * \n * dragSource.mouseDown = function(evt)\n * {\n *   if (!mxEvent.isPopupTrigger(evt))\n *   {\n *     mouseDown.apply(this, arguments);\n *   }\n * };\n * (end)\n */\nmxDragSource.prototype.mouseDown = function(evt)\n{\n\tif (this.enabled && !mxEvent.isConsumed(evt) && this.mouseMoveHandler == null)\n\t{\n\t\tthis.startDrag(evt);\n\t\tthis.mouseMoveHandler = mxUtils.bind(this, this.mouseMove);\n\t\tthis.mouseUpHandler = mxUtils.bind(this, this.mouseUp);\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t\n\t\tif (mxClient.IS_TOUCH && !mxEvent.isMouseEvent(evt))\n\t\t{\n\t\t\tthis.eventSource = mxEvent.getSource(evt);\n\t\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\t}\n\t}\n};\n\n/**\n * Function: startDrag\n * \n * Creates the <dragElement> using <createDragElement>.\n */\nmxDragSource.prototype.startDrag = function(evt)\n{\n\tthis.dragElement = this.createDragElement(evt);\n\tthis.dragElement.style.position = 'absolute';\n\tthis.dragElement.style.zIndex = this.dragElementZIndex;\n\tmxUtils.setOpacity(this.dragElement, this.dragElementOpacity);\n\n\tif (this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.dragElement.style.pointerEvents = 'none';\n\t}\n};\n\n/**\n * Function: stopDrag\n * \n * Invokes <removeDragElement>.\n */\nmxDragSource.prototype.stopDrag = function()\n{\n\t// LATER: This used to have a mouse event. If that is still needed we need to add another\n\t// final call to the DnD protocol to add a cleanup step in the case of escape press, which\n\t// is not associated with a mouse event and which currently calles this method.\n\tthis.removeDragElement();\n};\n\n/**\n * Function: removeDragElement\n * \n * Removes and destroys the <dragElement>.\n */\nmxDragSource.prototype.removeDragElement = function()\n{\n\tif (this.dragElement != null)\n\t{\n\t\tif (this.dragElement.parentNode != null)\n\t\t{\n\t\t\tthis.dragElement.parentNode.removeChild(this.dragElement);\n\t\t}\n\t\t\n\t\tthis.dragElement = null;\n\t}\n};\n\n/**\n * Function: getElementForEvent\n * \n * Returns the topmost element under the given event.\n */\nmxDragSource.prototype.getElementForEvent = function(evt)\n{\n\treturn ((mxEvent.isTouchEvent(evt) || mxEvent.isPenEvent(evt)) ?\n\t\t\tdocument.elementFromPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt)) :\n\t\t\t\tmxEvent.getSource(evt));\n};\n\n/**\n * Function: graphContainsEvent\n * \n * Returns true if the given graph contains the given event.\n */\nmxDragSource.prototype.graphContainsEvent = function(graph, evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin();\n\tvar elt = this.getElementForEvent(evt);\n\t\n\tif (this.checkEventSource)\n\t{\n\t\twhile (elt != null && elt != graph.container)\n\t\t{\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\n\t// Checks if event is inside the bounds of the graph container\n\treturn elt != null && x >= offset.x - origin.x && y >= offset.y - origin.y &&\n\t\tx <= offset.x - origin.x + graph.container.offsetWidth &&\n\t\ty <= offset.y - origin.y + graph.container.offsetHeight;\n};\n\n/**\n * Function: mouseMove\n * \n * Gets the graph for the given event using <getGraphForEvent>, updates the\n * <currentGraph>, calling <dragEnter> and <dragExit> on the new and old graph,\n * respectively, and invokes <dragOver> if <currentGraph> is not null.\n */\nmxDragSource.prototype.mouseMove = function(evt)\n{\n\tvar graph = this.getGraphForEvent(evt);\n\t\n\t// Checks if event is inside the bounds of the graph container\n\tif (graph != null && !this.graphContainsEvent(graph, evt))\n\t{\n\t\tgraph = null;\n\t}\n\n\tif (graph != this.currentGraph)\n\t{\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragExit(this.currentGraph, evt);\n\t\t}\n\t\t\n\t\tthis.currentGraph = graph;\n\t\t\n\t\tif (this.currentGraph != null)\n\t\t{\n\t\t\tthis.dragEnter(this.currentGraph, evt);\n\t\t}\n\t}\n\t\n\tif (this.currentGraph != null)\n\t{\n\t\tthis.dragOver(this.currentGraph, evt);\n\t}\n\n\tif (this.dragElement != null && (this.previewElement == null || this.previewElement.style.visibility != 'visible'))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\t\n\t\tif (this.dragElement.parentNode == null)\n\t\t{\n\t\t\tdocument.body.appendChild(this.dragElement);\n\t\t}\n\n\t\tthis.dragElement.style.visibility = 'visible';\n\t\t\n\t\tif (this.dragOffset != null)\n\t\t{\n\t\t\tx += this.dragOffset.x;\n\t\t\ty += this.dragOffset.y;\n\t\t}\n\t\t\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tthis.dragElement.style.left = (x + offset.x) + 'px';\n\t\tthis.dragElement.style.top = (y + offset.y) + 'px';\n\t}\n\telse if (this.dragElement != null)\n\t{\n\t\tthis.dragElement.style.visibility = 'hidden';\n\t}\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: mouseUp\n * \n * Processes the mouse up event and invokes <drop>, <dragExit> and <stopDrag>\n * as required.\n */\nmxDragSource.prototype.mouseUp = function(evt)\n{\n\tif (this.currentGraph != null)\n\t{\n\t\tif (this.currentPoint != null && (this.previewElement == null ||\n\t\t\tthis.previewElement.style.visibility != 'hidden'))\n\t\t{\n\t\t\tvar scale = this.currentGraph.view.scale;\n\t\t\tvar tr = this.currentGraph.view.translate;\n\t\t\tvar x = this.currentPoint.x / scale - tr.x;\n\t\t\tvar y = this.currentPoint.y / scale - tr.y;\n\t\t\t\n\t\t\tthis.drop(this.currentGraph, evt, this.currentDropTarget, x, y);\n\t\t}\n\t\t\n\t\tthis.dragExit(this.currentGraph);\n\t\tthis.currentGraph = null;\n\t}\n\n\tthis.stopDrag();\n\tthis.removeListeners();\n\t\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: removeListeners\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.removeListeners = function()\n{\n\tif (this.eventSource != null)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveHandler, this.mouseUpHandler);\n\t\tthis.eventSource = null;\n\t}\n\t\n\tmxEvent.removeGestureListeners(document, null, this.mouseMoveHandler, this.mouseUpHandler);\n\tthis.mouseMoveHandler = null;\n\tthis.mouseUpHandler = null;\n};\n\n/**\n * Function: dragEnter\n * \n * Actives the given graph as a drop target.\n */\nmxDragSource.prototype.dragEnter = function(graph, evt)\n{\n\tgraph.isMouseDown = true;\n\tgraph.isMouseTrigger = mxEvent.isMouseEvent(evt);\n\tthis.previewElement = this.createPreviewElement(graph);\n\t\n\tif (this.previewElement != null && this.checkEventSource && mxClient.IS_SVG)\n\t{\n\t\tthis.previewElement.style.pointerEvents = 'none';\n\t}\n\t\n\t// Guide is only needed if preview element is used\n\tif (this.isGuidesEnabled() && this.previewElement != null)\n\t{\n\t\tthis.currentGuide = new mxGuide(graph, graph.graphHandler.getGuideStates());\n\t}\n\t\n\tif (this.highlightDropTargets)\n\t{\n\t\tthis.currentHighlight = new mxCellHighlight(graph, mxConstants.DROP_TARGET_COLOR);\n\t}\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.eventConsumer);\n};\n\n/**\n * Function: dragExit\n * \n * Deactivates the given graph as a drop target.\n */\nmxDragSource.prototype.dragExit = function(graph, evt)\n{\n\tthis.currentDropTarget = null;\n\tthis.currentPoint = null;\n\tgraph.isMouseDown = false;\n\t\n\t// Consumes all events in the current graph before they are fired\n\tgraph.removeListener(this.eventConsumer);\n\t\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode != null)\n\t\t{\n\t\t\tthis.previewElement.parentNode.removeChild(this.previewElement);\n\t\t}\n\t\t\n\t\tthis.previewElement = null;\n\t}\n\t\n\tif (this.currentGuide != null)\n\t{\n\t\tthis.currentGuide.destroy();\n\t\tthis.currentGuide = null;\n\t}\n\t\n\tif (this.currentHighlight != null)\n\t{\n\t\tthis.currentHighlight.destroy();\n\t\tthis.currentHighlight = null;\n\t}\n};\n\n/**\n * Function: dragOver\n * \n * Implements autoscroll, updates the <currentPoint>, highlights any drop\n * targets and updates the preview.\n */\nmxDragSource.prototype.dragOver = function(graph, evt)\n{\n\tvar offset = mxUtils.getOffset(graph.container);\n\tvar origin = mxUtils.getScrollOrigin(graph.container);\n\tvar x = mxEvent.getClientX(evt) - offset.x + origin.x - graph.panDx;\n\tvar y = mxEvent.getClientY(evt) - offset.y + origin.y - graph.panDy;\n\n\tif (graph.autoScroll && (this.autoscroll == null || this.autoscroll))\n\t{\n\t\tgraph.scrollPointToVisible(x, y, graph.autoExtend);\n\t}\n\n\t// Highlights the drop target under the mouse\n\tif (this.currentHighlight != null && graph.isDropEnabled())\n\t{\n\t\tthis.currentDropTarget = this.getDropTarget(graph, x, y, evt);\n\t\tvar state = graph.getView().getState(this.currentDropTarget);\n\t\tthis.currentHighlight.highlight(state);\n\t}\n\n\t// Updates the location of the preview\n\tif (this.previewElement != null)\n\t{\n\t\tif (this.previewElement.parentNode == null)\n\t\t{\n\t\t\tgraph.container.appendChild(this.previewElement);\n\t\t\t\n\t\t\tthis.previewElement.style.zIndex = '3';\n\t\t\tthis.previewElement.style.position = 'absolute';\n\t\t}\n\t\t\n\t\tvar gridEnabled = this.isGridEnabled() && graph.isGridEnabledEvent(evt);\n\t\tvar hideGuide = true;\n\n\t\t// Grid and guides\n\t\tif (this.currentGuide != null && this.currentGuide.isEnabledForEvent(evt))\n\t\t{\n\t\t\t// LATER: HTML preview appears smaller than SVG preview\n\t\t\tvar w = parseInt(this.previewElement.style.width);\n\t\t\tvar h = parseInt(this.previewElement.style.height);\n\t\t\tvar bounds = new mxRectangle(0, 0, w, h);\n\t\t\tvar delta = new mxPoint(x, y);\n\t\t\tdelta = this.currentGuide.move(bounds, delta, gridEnabled, true);\n\t\t\thideGuide = false;\n\t\t\tx = delta.x;\n\t\t\ty = delta.y;\n\t\t}\n\t\telse if (gridEnabled)\n\t\t{\n\t\t\tvar scale = graph.view.scale;\n\t\t\tvar tr = graph.view.translate;\n\t\t\tvar off = graph.gridSize / 2;\n\t\t\tx = (graph.snap(x / scale - tr.x - off) + tr.x) * scale;\n\t\t\ty = (graph.snap(y / scale - tr.y - off) + tr.y) * scale;\n\t\t}\n\t\t\n\t\tif (this.currentGuide != null && hideGuide)\n\t\t{\n\t\t\tthis.currentGuide.hide();\n\t\t}\n\t\t\n\t\tif (this.previewOffset != null)\n\t\t{\n\t\t\tx += this.previewOffset.x;\n\t\t\ty += this.previewOffset.y;\n\t\t}\n\n\t\tthis.previewElement.style.left = Math.round(x) + 'px';\n\t\tthis.previewElement.style.top = Math.round(y) + 'px';\n\t\tthis.previewElement.style.visibility = 'visible';\n\t}\n\t\n\tthis.currentPoint = new mxPoint(x, y);\n};\n\n/**\n * Function: drop\n * \n * Returns the drop target for the given graph and coordinates. This\n * implementation uses <mxGraph.getCellAt>.\n */\nmxDragSource.prototype.drop = function(graph, evt, dropTarget, x, y)\n{\n\tthis.dropHandler.apply(this, arguments);\n\t\n\t// Had to move this to after the insert because it will\n\t// affect the scrollbars of the window in IE to try and\n\t// make the complete container visible.\n\t// LATER: Should be made optional.\n\tif (graph.container.style.visibility != 'hidden')\n\t{\n\t\tgraph.container.focus();\n\t}\n};\n\n__mxOutput.mxDragSource = typeof mxDragSource !== 'undefined' ? mxDragSource : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxToolbar\n * \n * Creates a toolbar inside a given DOM node. The toolbar may contain icons,\n * buttons and combo boxes.\n * \n * Event: mxEvent.SELECT\n * \n * Fires when an item was selected in the toolbar. The <code>function</code>\n * property contains the function that was selected in <selectMode>.\n * \n * Constructor: mxToolbar\n * \n * Constructs a toolbar in the specified container.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nfunction mxToolbar(container)\n{\n\tthis.container = container;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxToolbar.prototype = new mxEventSource();\nmxToolbar.prototype.constructor = mxToolbar;\n\n/**\n * Variable: container\n * \n * Reference to the DOM nodes that contains the toolbar.\n */\nmxToolbar.prototype.container = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxToolbar.prototype.enabled = true;\n\n/**\n * Variable: noReset\n * \n * Specifies if <resetMode> requires a forced flag of true for resetting\n * the current mode in the toolbar. Default is false. This is set to true\n * if the toolbar item is double clicked to avoid a reset after a single\n * use of the item.\n */\nmxToolbar.prototype.noReset = false;\n\n/**\n * Variable: updateDefaultMode\n * \n * Boolean indicating if the default mode should be the last selected\n * switch mode or the first inserted switch mode. Default is true, that\n * is the last selected switch mode is the default mode. The default mode\n * is the mode to be selected after a reset of the toolbar. If this is\n * false, then the default mode is the first inserted mode item regardless\n * of what was last selected. Otherwise, the selected item after a reset is\n * the previously selected item.\n */\nmxToolbar.prototype.updateDefaultMode = true;\n\n/**\n * Function: addItem\n * \n * Adds the given function as an image with the specified title and icon\n * and returns the new image node.\n * \n * Parameters:\n * \n * title - Optional string that is used as the tooltip.\n * icon - Optional URL of the image to be used. If no URL is given, then a\n * button is created.\n * funct - Function to execute on a mouse click.\n * pressedIcon - Optional URL of the pressed image. Default is a gray\n * background.\n * style - Optional style classname. Default is mxToolbarItem.\n * factoryMethod - Optional factory method for popup menu, eg.\n * function(menu, evt, cell) { menu.addItem('Hello, World!'); }\n */\nmxToolbar.prototype.addItem = function(title, icon, funct, pressedIcon, style, factoryMethod)\n{\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\tvar initialClassName = style || ((factoryMethod != null) ?\n\t\t\t'mxToolbarMode' : 'mxToolbarItem');\n\timg.className = initialClassName;\n\timg.setAttribute('src', icon);\n\t\n\tif (title != null)\n\t{\n\t\tif (icon != null)\n\t\t{\n\t\t\timg.setAttribute('title', title);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.write(img, title);\n\t\t}\n\t}\n\t\n\tthis.container.appendChild(img);\n\n\t// Invokes the function on a click on the toolbar item\n\tif (funct != null)\n\t{\n\t\tmxEvent.addListener(img, 'click', funct);\n\t\t\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(img, 'touchend', funct);\n\t\t}\n\t}\n\n\tvar mouseHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', icon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = '';\n\t\t}\n\t});\n\n\t// Highlights the toolbar item with a gray background\n\t// while it is being clicked with the mouse\n\tmxEvent.addGestureListeners(img, mxUtils.bind(this, function(evt)\n\t{\n\t\tif (pressedIcon != null)\n\t\t{\n\t\t\timg.setAttribute('src', pressedIcon);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.style.backgroundColor = 'gray';\n\t\t}\n\t\t\n\t\t// Popup Menu\n\t\tif (factoryMethod != null)\n\t\t{\n\t\t\tif (this.menu == null)\n\t\t\t{\n\t\t\t\tthis.menu = new mxPopupMenu();\n\t\t\t\tthis.menu.init();\n\t\t\t}\n\t\t\t\n\t\t\tvar last = this.currentImg;\n\t\t\t\n\t\t\tif (this.menu.isMenuShowing())\n\t\t\t{\n\t\t\t\tthis.menu.hideMenu();\n\t\t\t}\n\t\t\t\n\t\t\tif (last != img)\n\t\t\t{\n\t\t\t\t// Redirects factory method to local factory method\n\t\t\t\tthis.currentImg = img;\n\t\t\t\tthis.menu.factoryMethod = factoryMethod;\n\t\t\t\t\n\t\t\t\tvar point = new mxPoint(\n\t\t\t\t\timg.offsetLeft,\n\t\t\t\t\timg.offsetTop + img.offsetHeight);\n\t\t\t\tthis.menu.popup(point.x, point.y, null, evt);\n\n\t\t\t\t// Sets and overrides to restore classname\n\t\t\t\tif (this.menu.isMenuShowing())\n\t\t\t\t{\n\t\t\t\t\timg.className = initialClassName + 'Selected';\n\t\t\t\t\t\n\t\t\t\t\tthis.menu.hideMenu = function()\n\t\t\t\t\t{\n\t\t\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(this);\n\t\t\t\t\t\timg.className = initialClassName;\n\t\t\t\t\t\tthis.currentImg = null;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}), null, mouseHandler);\n\n\tmxEvent.addListener(img, 'mouseout', mouseHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given style. The element\n * is placed inside a DIV with the mxToolbarComboContainer style classname.\n * \n * Parameters:\n * \n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addCombo = function(style)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.display = 'inline';\n\tdiv.className = 'mxToolbarComboContainer';\n\t\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tdiv.appendChild(select);\n\t\n\tthis.container.appendChild(div);\n\t\n\treturn select;\n};\n\n/**\n * Function: addCombo\n * \n * Adds and returns a new SELECT element using the given title as the\n * default element. The selection is reset to this element after each\n * change.\n * \n * Parameters:\n * \n * title - String that specifies the title of the default element.\n * style - Optional style classname. Default is mxToolbarCombo.\n */\nmxToolbar.prototype.addActionCombo = function(title, style)\n{\n\tvar select = document.createElement('select');\n\tselect.className = style || 'mxToolbarCombo';\n\tthis.addOption(select, title, null);\n\t\n\tmxEvent.addListener(select, 'change', function(evt)\n\t{\n\t\tvar value = select.options[select.selectedIndex];\n\t\tselect.selectedIndex = 0;\n\t\t\n\t\tif (value.funct != null)\n\t\t{\n\t\t\tvalue.funct(evt);\n\t\t}\n\t});\n\t\n\tthis.container.appendChild(select);\n\t\n\treturn select;\n};\n\n/**\n * Function: addOption\n * \n * Adds and returns a new OPTION element inside the given SELECT element.\n * If the given value is a function then it is stored in the option's funct\n * field.\n * \n * Parameters:\n * \n * combo - SELECT element that will contain the new entry.\n * title - String that specifies the title of the option.\n * value - Specifies the value associated with this option.\n */\nmxToolbar.prototype.addOption = function(combo, title, value)\n{\n\tvar option = document.createElement('option');\n\tmxUtils.writeln(option, title);\n\t\n\tif (typeof(value) == 'function')\n\t{\n\t\toption.funct = value;\n\t}\n\telse\n\t{\n\t\toption.setAttribute('value', value);\n\t}\n\t\n\tcombo.appendChild(option);\n\t\n\treturn option;\n};\n\n/**\n * Function: addSwitchMode\n * \n * Adds a new selectable item to the toolbar. Only one switch mode item may\n * be selected at a time. The currently selected item is the default item\n * after a reset of the toolbar.\n */\nmxToolbar.prototype.addSwitchMode = function(title, icon, funct, pressedIcon, style)\n{\n\tvar img = document.createElement('img');\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\t\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t{\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t}\n\t\t\n\t\tif (this.updateDefaultMode)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t}\n\t\t\n\t\tthis.selectedMode = img;\n\t\t\n\t\tvar tmp = img.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\timg.altIcon = img.getAttribute('src');\n\t\t\timg.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\timg.className = img.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT));\n\t\tfunct();\n\t}));\n\t\n\tthis.container.appendChild(img);\n\t\n\tif (this.defaultMode == null)\n\t{\n\t\tthis.defaultMode = img;\n\t\t\n\t\t// Function should fire only once so\n\t\t// do not pass it with the select event\n\t\tthis.selectMode(img);\n\t\tfunct();\n\t}\n\t\n\treturn img;\n};\n\n/**\n * Function: addMode\n * \n * Adds a new item to the toolbar. The selection is typically reset after\n * the item has been consumed, for example by adding a new vertex to the\n * graph. The reset is not carried out if the item is double clicked.\n * \n * The function argument uses the following signature: funct(evt, cell) where\n * evt is the native mouse event and cell is the cell under the mouse.\n */\nmxToolbar.prototype.addMode = function(title, icon, funct, pressedIcon, style, toggle)\n{\n\ttoggle = (toggle != null) ? toggle : true;\n\tvar img = document.createElement((icon != null) ? 'img' : 'button');\n\t\n\timg.initialClassName = style || 'mxToolbarMode';\n\timg.className = img.initialClassName;\n\timg.setAttribute('src', icon);\n\timg.altIcon = pressedIcon;\n\n\tif (title != null)\n\t{\n\t\timg.setAttribute('title', title);\n\t}\n\t\n\tif (this.enabled && toggle)\n\t{\n\t\tmxEvent.addListener(img, 'click', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = false;\n\t\t}));\n\t\t\n\t\tmxEvent.addListener(img, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.selectMode(img, funct);\n\t\t\tthis.noReset = true;\n\t\t}));\n\t\t\n\t\tif (this.defaultMode == null)\n\t\t{\n\t\t\tthis.defaultMode = img;\n\t\t\tthis.defaultFunction = funct;\n\t\t\tthis.selectMode(img, funct);\n\t\t}\n\t}\n\n\tthis.container.appendChild(img);\t\t\t\t\t\n\n\treturn img;\n};\n\n/**\n * Function: selectMode\n * \n * Resets the state of the previously selected mode and displays the given\n * DOM node as selected. This function fires a select event with the given\n * function as a parameter.\n */\nmxToolbar.prototype.selectMode = function(domNode, funct)\n{\n\tif (this.selectedMode != domNode)\n\t{\n\t\tif (this.selectedMode != null)\n\t\t{\n\t\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.selectedMode = domNode;\n\t\tvar tmp = this.selectedMode.altIcon;\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tthis.selectedMode.altIcon = this.selectedMode.getAttribute('src');\n\t\t\tthis.selectedMode.setAttribute('src', tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.selectedMode.className = this.selectedMode.initialClassName+'Selected';\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SELECT, \"function\", funct));\n\t}\n};\n\n/**\n * Function: resetMode\n * \n * Selects the default mode and resets the state of the previously selected\n * mode.\n */\nmxToolbar.prototype.resetMode = function(forced)\n{\n\tif ((forced || !this.noReset) && this.selectedMode != this.defaultMode)\n\t{\n\t\t// The last selected switch mode will be activated\n\t\t// so the function was already executed and is\n\t\t// no longer required here\n\t\tthis.selectMode(this.defaultMode, this.defaultFunction);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds the specifies image as a separator.\n * \n * Parameters:\n * \n * icon - URL of the separator icon.\n */\nmxToolbar.prototype.addSeparator = function(icon)\n{\n\treturn this.addItem(null, icon, null);\n};\n\n/**\n * Function: addBreak\n * \n * Adds a break to the container.\n */\nmxToolbar.prototype.addBreak = function()\n{\n\tmxUtils.br(this.container);\n};\n\n/**\n * Function: addLine\n * \n * Adds a horizontal line to the container.\n */\nmxToolbar.prototype.addLine = function()\n{\n\tvar hr = document.createElement('hr');\n\t\n\thr.style.marginRight = '6px';\n\thr.setAttribute('size', '1');\n\t\n\tthis.container.appendChild(hr);\n};\n\n/**\n * Function: destroy\n * \n * Removes the toolbar and all its associated resources.\n */\nmxToolbar.prototype.destroy = function ()\n{\n\tmxEvent.release(this.container);\n\tthis.container = null;\n\tthis.defaultMode = null;\n\tthis.defaultFunction = null;\n\tthis.selectedMode = null;\n\t\n\tif (this.menu != null)\n\t{\n\t\tthis.menu.destroy();\n\t}\n};\n\n__mxOutput.mxToolbar = typeof mxToolbar !== 'undefined' ? mxToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoableEdit\n * \n * Implements a composite undoable edit. Here is an example for a custom change\n * which gets executed via the model:\n * \n * (code)\n * function CustomChange(model, name)\n * {\n *   this.model = model;\n *   this.name = name;\n *   this.previous = name;\n * };\n * \n * CustomChange.prototype.execute = function()\n * {\n *   var tmp = this.model.name;\n *   this.model.name = this.previous;\n *   this.previous = tmp;\n * };\n * \n * var name = prompt('Enter name');\n * graph.model.execute(new CustomChange(graph.model, name));\n * (end)\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n * \n * Event: mxEvent.START_EDIT\n * \n * Fires before a set of changes will be executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after a set of changeswas executed in <undo> or <redo>.\n * This event contains no properties.\n * \n * Constructor: mxUndoableEdit\n * \n * Constructs a new undoable edit for the given source.\n */\nfunction mxUndoableEdit(source, significant)\n{\n\tthis.source = source;\n\tthis.changes = [];\n\tthis.significant = (significant != null) ? significant : true;\n};\n\n/**\n * Variable: source\n * \n * Specifies the source of the edit.\n */\nmxUndoableEdit.prototype.source = null;\n\n/**\n * Variable: changes\n * \n * Array that contains the changes that make up this edit. The changes are\n * expected to either have an undo and redo function, or an execute\n * function. Default is an empty array.\n */\nmxUndoableEdit.prototype.changes = null;\n\n/**\n * Variable: significant\n * \n * Specifies if the undoable change is significant.\n * Default is true.\n */\nmxUndoableEdit.prototype.significant = null;\n\n/**\n * Variable: undone\n * \n * Specifies if this edit has been undone. Default is false.\n */\nmxUndoableEdit.prototype.undone = false;\n\n/**\n * Variable: redone\n * \n * Specifies if this edit has been redone. Default is false.\n */\nmxUndoableEdit.prototype.redone = false;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the this edit contains no changes.\n */\nmxUndoableEdit.prototype.isEmpty = function()\n{\n\treturn this.changes.length == 0;\n};\n\n/**\n * Function: isSignificant\n * \n * Returns <significant>.\n */\nmxUndoableEdit.prototype.isSignificant = function()\n{\n\treturn this.significant;\n};\n\n/**\n * Function: add\n * \n * Adds the specified change to this edit. The change is an object that is\n * expected to either have an undo and redo, or an execute function.\n */\nmxUndoableEdit.prototype.add = function(change)\n{\n\tthis.changes.push(change);\n};\n\n/**\n * Function: notify\n * \n * Hook to notify any listeners of the changes after an <undo> or <redo>\n * has been carried out. This implementation is empty.\n */\nmxUndoableEdit.prototype.notify = function() { };\n\n/**\n * Function: die\n * \n * Hook to free resources after the edit has been removed from the command\n * history. This implementation is empty.\n */\nmxUndoableEdit.prototype.die = function() { };\n\n/**\n * Function: undo\n * \n * Undoes all changes in this edit.\n */\nmxUndoableEdit.prototype.undo = function()\n{\n\tif (!this.undone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = count - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.undo != null)\n\t\t\t{\n\t\t\t\tchange.undo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = true;\n\t\tthis.redone = false;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n/**\n * Function: redo\n * \n * Redoes all changes in this edit.\n */\nmxUndoableEdit.prototype.redo = function()\n{\n\tif (!this.redone)\n\t{\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t\tvar count = this.changes.length;\n\t\t\n\t\tfor (var i = 0; i < count; i++)\n\t\t{\n\t\t\tvar change = this.changes[i];\n\t\t\t\n\t\t\tif (change.execute != null)\n\t\t\t{\n\t\t\t\tchange.execute();\n\t\t\t}\n\t\t\telse if (change.redo != null)\n\t\t\t{\n\t\t\t\tchange.redo();\n\t\t\t}\n\t\t\t\n\t\t\t// New global executed event\n\t\t\tthis.source.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\t\t}\n\t\t\n\t\tthis.undone = false;\n\t\tthis.redone = true;\n\t\tthis.source.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tthis.notify();\n};\n\n__mxOutput.mxUndoableEdit = typeof mxUndoableEdit !== 'undefined' ? mxUndoableEdit : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxUndoManager\n *\n * Implements a command history. When changing the graph model, an\n * <mxUndoableChange> object is created at the start of the transaction (when\n * model.beginUpdate is called). All atomic changes are then added to this\n * object until the last model.endUpdate call, at which point the\n * <mxUndoableEdit> is dispatched in an event, and added to the history inside\n * <mxUndoManager>. This is done by an event listener in\n * <mxEditor.installUndoHandler>.\n * \n * Each atomic change of the model is represented by an object (eg.\n * <mxRootChange>, <mxChildChange>, <mxTerminalChange> etc) which contains the\n * complete undo information. The <mxUndoManager> also listens to the\n * <mxGraphView> and stores it's changes to the current root as insignificant\n * undoable changes, so that drilling (step into, step up) is undone.\n * \n * This means when you execute an atomic change on the model, then change the\n * current root on the view and click undo, the change of the root will be\n * undone together with the change of the model so that the display represents\n * the state at which the model was changed. However, these changes are not\n * transmitted for sharing as they do not represent a state change.\n *\n * Example:\n * \n * When adding an undo manager to a graph, make sure to add it\n * to the model and the view as well to maintain a consistent\n * display across multiple undo/redo steps.\n *\n * (code)\n * var undoManager = new mxUndoManager();\n * var listener = function(sender, evt)\n * {\n *   undoManager.undoableEditHappened(evt.getProperty('edit'));\n * };\n * graph.getModel().addListener(mxEvent.UNDO, listener);\n * graph.getView().addListener(mxEvent.UNDO, listener);\n * (end)\n * \n * The code creates a function that informs the undoManager\n * of an undoable edit and binds it to the undo event of\n * <mxGraphModel> and <mxGraphView> using\n * <mxEventSource.addListener>.\n * \n * Event: mxEvent.CLEAR\n * \n * Fires after <clear> was invoked. This event has no properties.\n * \n * Event: mxEvent.UNDO\n * \n * Fires afer a significant edit was undone in <undo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was undone.\n * \n * Event: mxEvent.REDO\n * \n * Fires afer a significant edit was redone in <redo>. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was redone.\n * \n * Event: mxEvent.ADD\n * \n * Fires after an undoable edit was added to the history. The <code>edit</code>\n * property contains the <mxUndoableEdit> that was added.\n * \n * Constructor: mxUndoManager\n *\n * Constructs a new undo manager with the given history size. If no history\n * size is given, then a default size of 100 steps is used.\n */\nfunction mxUndoManager(size)\n{\n\tthis.size = (size != null) ? size : 100;\n\tthis.clear();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUndoManager.prototype = new mxEventSource();\nmxUndoManager.prototype.constructor = mxUndoManager;\n\n/**\n * Variable: size\n * \n * Maximum command history size. 0 means unlimited history. Default is\n * 100.\n */\nmxUndoManager.prototype.size = null;\n\n/**\n * Variable: history\n * \n * Array that contains the steps of the command history.\n */\nmxUndoManager.prototype.history = null;\n\n/**\n * Variable: indexOfNextAdd\n * \n * Index of the element to be added next.\n */\nmxUndoManager.prototype.indexOfNextAdd = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if the history is empty.\n */\nmxUndoManager.prototype.isEmpty = function()\n{\n\treturn this.history.length == 0;\n};\n\n/**\n * Function: clear\n * \n * Clears the command history.\n */\nmxUndoManager.prototype.clear = function()\n{\n\tthis.history = [];\n\tthis.indexOfNextAdd = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.CLEAR));\n};\n\n/**\n * Function: canUndo\n * \n * Returns true if an undo is possible.\n */\nmxUndoManager.prototype.canUndo = function()\n{\n\treturn this.indexOfNextAdd > 0;\n};\n\n/**\n * Function: undo\n * \n * Undoes the last change.\n */\nmxUndoManager.prototype.undo = function()\n{\n    while (this.indexOfNextAdd > 0)\n    {\n        var edit = this.history[--this.indexOfNextAdd];\n        edit.undo();\n\n\t\tif (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: canRedo\n * \n * Returns true if a redo is possible.\n */\nmxUndoManager.prototype.canRedo = function()\n{\n\treturn this.indexOfNextAdd < this.history.length;\n};\n\n/**\n * Function: redo\n * \n * Redoes the last change.\n */\nmxUndoManager.prototype.redo = function()\n{\n    var n = this.history.length;\n    \n    while (this.indexOfNextAdd < n)\n    {\n        var edit =  this.history[this.indexOfNextAdd++];\n        edit.redo();\n        \n        if (edit.isSignificant())\n        {\n        \tthis.fireEvent(new mxEventObject(mxEvent.REDO, 'edit', edit));\n            break;\n        }\n    }\n};\n\n/**\n * Function: undoableEditHappened\n * \n * Method to be called to add new undoable edits to the <history>.\n */\nmxUndoManager.prototype.undoableEditHappened = function(undoableEdit)\n{\n\tthis.trim();\n\t\n\tif (this.size > 0 &&\n\t\tthis.size == this.history.length)\n\t{\n\t\tthis.history.shift();\n\t}\n\t\n\tthis.history.push(undoableEdit);\n\tthis.indexOfNextAdd = this.history.length;\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'edit', undoableEdit));\n};\n\n/**\n * Function: trim\n * \n * Removes all pending steps after <indexOfNextAdd> from the history,\n * invoking die on each edit. This is called from <undoableEditHappened>.\n */\nmxUndoManager.prototype.trim = function()\n{\n\tif (this.history.length > this.indexOfNextAdd)\n\t{\n\t\tvar edits = this.history.splice(this.indexOfNextAdd,\n\t\t\tthis.history.length - this.indexOfNextAdd);\n\t\t\t\n\t\tfor (var i = 0; i < edits.length; i++)\n\t\t{\n\t\t\tedits[i].die();\n\t\t}\n\t}\n};\n\n__mxOutput.mxUndoManager = typeof mxUndoManager !== 'undefined' ? mxUndoManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxUrlConverter\n * \n * Converts relative and absolute URLs to absolute URLs with protocol and domain.\n */\nvar mxUrlConverter = function()\n{\n\t// Empty constructor\n};\n\n/**\n * Variable: enabled\n * \n * Specifies if the converter is enabled. Default is true.\n */\nmxUrlConverter.prototype.enabled = true;\n\n/**\n * Variable: baseUrl\n * \n * Specifies the base URL to be used as a prefix for relative URLs.\n */\nmxUrlConverter.prototype.baseUrl = null;\n\n/**\n * Variable: baseDomain\n * \n * Specifies the base domain to be used as a prefix for absolute URLs.\n */\nmxUrlConverter.prototype.baseDomain = null;\n\n/**\n * Function: updateBaseUrl\n * \n * Private helper function to update the base URL.\n */\nmxUrlConverter.prototype.updateBaseUrl = function()\n{\n\tthis.baseDomain = location.protocol + '//' + location.host;\n\tthis.baseUrl = this.baseDomain + location.pathname;\n\tvar tmp = this.baseUrl.lastIndexOf('/');\n\t\n\t// Strips filename etc\n\tif (tmp > 0)\n\t{\n\t\tthis.baseUrl = this.baseUrl.substring(0, tmp + 1);\n\t}\n};\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxUrlConverter.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxUrlConverter.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns <baseUrl>.\n */\nmxUrlConverter.prototype.getBaseUrl = function()\n{\n\treturn this.baseUrl;\n};\n\n/**\n * Function: setBaseUrl\n * \n * Sets <baseUrl>.\n */\nmxUrlConverter.prototype.setBaseUrl = function(value)\n{\n\tthis.baseUrl = value;\n};\n\n/**\n * Function: getBaseDomain\n * \n * Returns <baseDomain>.\n */\nmxUrlConverter.prototype.getBaseDomain = function()\n{\n\treturn this.baseDomain;\n},\n\n/**\n * Function: setBaseDomain\n * \n * Sets <baseDomain>.\n */\nmxUrlConverter.prototype.setBaseDomain = function(value)\n{\n\tthis.baseDomain = value;\n},\n\n/**\n * Function: isRelativeUrl\n * \n * Returns true if the given URL is relative.\n */\nmxUrlConverter.prototype.isRelativeUrl = function(url)\n{\n\treturn url.substring(0, 2) != '//' && url.substring(0, 7) != 'http://' &&\n\t\turl.substring(0, 8) != 'https://' && url.substring(0, 10) != 'data:image' &&\n\t\turl.substring(0, 7) != 'file://';\n};\n\n/**\n * Function: convert\n * \n * Converts the given URL to an absolute URL with protol and domain.\n * Relative URLs are first converted to absolute URLs.\n */\nmxUrlConverter.prototype.convert = function(url)\n{\n\tif (this.isEnabled() && this.isRelativeUrl(url))\n\t{\n\t\tif (this.getBaseUrl() == null)\n\t\t{\n\t\t\tthis.updateBaseUrl();\n\t\t}\n\t\t\n\t\tif (url.charAt(0) == '/')\n\t\t{\n\t\t\turl = this.getBaseDomain() + url;\n\t\t}\n\t\telse\n\t\t{\n\t\t\turl = this.getBaseUrl() + url;\n\t\t}\n\t}\n\t\n\treturn url;\n};\n\n__mxOutput.mxUrlConverter = typeof mxUrlConverter !== 'undefined' ? mxUrlConverter : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningManager\n *\n * Implements a handler for panning.\n */\nfunction mxPanningManager(graph)\n{\n\tthis.thread = null;\n\tthis.active = false;\n\tthis.tdx = 0;\n\tthis.tdy = 0;\n\tthis.t0x = 0;\n\tthis.t0y = 0;\n\tthis.dx = 0;\n\tthis.dy = 0;\n\tthis.scrollbars = false;\n\tthis.scrollLeft = 0;\n\tthis.scrollTop = 0;\n\t\n\tthis.mouseListener =\n\t{\n\t    mouseDown: function(sender, me) { },\n\t    mouseMove: function(sender, me) { },\n\t    mouseUp: mxUtils.bind(this, function(sender, me)\n\t    {\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t    })\n\t};\n\t\n\tgraph.addMouseListener(this.mouseListener);\n\t\n\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t{\n\t    \tif (this.active)\n\t    \t{\n\t    \t\tthis.stop();\n\t    \t}\n\t});\n\t\n\t// Stops scrolling on every mouseup anywhere in the document\n\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t\n\tvar createThread = mxUtils.bind(this, function()\n\t{\n\t    \tthis.scrollbars = mxUtils.hasScrollbars(graph.container);\n\t    \tthis.scrollLeft = graph.container.scrollLeft;\n\t    \tthis.scrollTop = graph.container.scrollTop;\n\t\n\t    \treturn window.setInterval(mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.tdx -= this.dx;\n\t\t\tthis.tdy -= this.dy;\n\n\t\t\tif (this.scrollbars)\n\t\t\t{\n\t\t\t\tvar left = -graph.container.scrollLeft - Math.ceil(this.dx);\n\t\t\t\tvar top = -graph.container.scrollTop - Math.ceil(this.dy);\n\t\t\t\tgraph.panGraph(left, top);\n\t\t\t\tgraph.panDx = this.scrollLeft - graph.container.scrollLeft;\n\t\t\t\tgraph.panDy = this.scrollTop - graph.container.scrollTop;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t\t// TODO: Implement graph.autoExtend\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panGraph(this.getDx(), this.getDy());\n\t\t\t}\n\t\t}), this.delay);\n\t});\n\t\n\tthis.isActive = function()\n\t{\n\t\treturn active;\n\t};\n\t\n\tthis.getDx = function()\n\t{\n\t\treturn Math.round(this.tdx);\n\t};\n\t\n\tthis.getDy = function()\n\t{\n\t\treturn Math.round(this.tdy);\n\t};\n\t\n\tthis.start = function()\n\t{\n\t\tthis.t0x = graph.view.translate.x;\n\t\tthis.t0y = graph.view.translate.y;\n\t\tthis.active = true;\n\t};\n\t\n\tthis.panTo = function(x, y, w, h)\n\t{\n\t\tif (!this.active)\n\t\t{\n\t\t\tthis.start();\n\t\t}\n\t\t\n    \tthis.scrollLeft = graph.container.scrollLeft;\n    \tthis.scrollTop = graph.container.scrollTop;\n\t\t\n\t\tw = (w != null) ? w : 0;\n\t\th = (h != null) ? h : 0;\n\t\t\n\t\tvar c = graph.container;\n\t\tthis.dx = x + w - c.scrollLeft - c.clientWidth;\n\t\t\n\t\tif (this.dx < 0 && Math.abs(this.dx) < this.border)\n\t\t{\n\t\t\tthis.dx = this.border + this.dx;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dx = Math.max(this.dx, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx = 0;\n\t\t}\n\t\t\n\t\tif (this.dx == 0)\n\t\t{\n\t\t\tthis.dx = x - c.scrollLeft;\n\t\t\t\n\t\t\tif (this.dx > 0 && this.dx < this.border)\n\t\t\t{\n\t\t\t\tthis.dx = this.dx - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dx = Math.min(0, this.dx);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dx = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.dy = y + h - c.scrollTop - c.clientHeight;\n\n\t\tif (this.dy < 0 && Math.abs(this.dy) < this.border)\n\t\t{\n\t\t\tthis.dy = this.border + this.dy;\n\t\t}\n\t\telse if (this.handleMouseOut)\n\t\t{\n\t\t\tthis.dy = Math.max(this.dy, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dy = 0;\n\t\t}\n\t\t\n\t\tif (this.dy == 0)\n\t\t{\n\t\t\tthis.dy = y - c.scrollTop;\n\t\t\t\n\t\t\tif (this.dy > 0 && this.dy < this.border)\n\t\t\t{\n\t\t\t\tthis.dy = this.dy - this.border;\n\t\t\t}\n\t\t\telse if (this.handleMouseOut)\n\t\t\t{\n\t\t\t\tthis.dy = Math.min(0, this.dy);\n\t\t\t} \n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.dy = 0;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.dx != 0 || this.dy != 0)\n\t\t{\n\t\t\tthis.dx *= this.damper;\n\t\t\tthis.dy *= this.damper;\n\t\t\t\n\t\t\tif (this.thread == null)\n\t\t\t{\n\t\t\t\tthis.thread = createThread();\n\t\t\t}\n\t\t}\n\t\telse if (this.thread != null)\n\t\t{\n\t\t\twindow.clearInterval(this.thread);\n\t\t\tthis.thread = null;\n\t\t}\n\t};\n\t\n\tthis.stop = function()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.active = false;\n\t\t\n\t\t\tif (this.thread != null)\n\t    \t{\n\t\t\t\twindow.clearInterval(this.thread);\n\t\t\t\tthis.thread = null;\n\t    \t}\n\t\t\t\n\t\t\tthis.tdx = 0;\n\t\t\tthis.tdy = 0;\n\t\t\t\n\t\t\tif (!this.scrollbars)\n\t\t\t{\n\t\t\t\tvar px = graph.panDx;\n\t\t\t\tvar py = graph.panDy;\n\t\t    \t\n\t\t    \tif (px != 0 || py != 0)\n\t\t    \t{\n\t\t    \t\tgraph.panGraph(0, 0);\n\t\t\t    \tgraph.view.setTranslate(this.t0x + px / graph.view.scale, this.t0y + py / graph.view.scale);\n\t\t    \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgraph.panDx = 0;\n\t\t\t\tgraph.panDy = 0;\n\t\t\t\tgraph.fireEvent(new mxEventObject(mxEvent.PAN));\n\t\t\t}\n\t\t}\n\t};\n\t\n\tthis.destroy = function()\n\t{\n\t\tgraph.removeMouseListener(this.mouseListener);\n\t\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n\t};\n};\n\n/**\n * Variable: damper\n * \n * Damper value for the panning. Default is 1/6.\n */\nmxPanningManager.prototype.damper = 1/6;\n\n/**\n * Variable: delay\n * \n * Delay in milliseconds for the panning. Default is 10.\n */\nmxPanningManager.prototype.delay = 10;\n\n/**\n * Variable: handleMouseOut\n * \n * Specifies if mouse events outside of the component should be handled. Default is true. \n */\nmxPanningManager.prototype.handleMouseOut = true;\n\n/**\n * Variable: border\n * \n * Border to handle automatic panning inside the component. Default is 0 (disabled).\n */\nmxPanningManager.prototype.border = 0;\n\n__mxOutput.mxPanningManager = typeof mxPanningManager !== 'undefined' ? mxPanningManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenu\n * \n * Basic popup menu. To add a vertical scrollbar to a given submenu, the\n * following code can be used.\n * \n * (code)\n * var mxPopupMenuShowMenu = mxPopupMenu.prototype.showMenu;\n * mxPopupMenu.prototype.showMenu = function()\n * {\n *   mxPopupMenuShowMenu.apply(this, arguments);\n *   \n *   this.div.style.overflowY = 'auto';\n *   this.div.style.overflowX = 'hidden';\n *   this.div.style.maxHeight = '160px';\n * };\n * (end)\n * \n * Constructor: mxPopupMenu\n * \n * Constructs a popupmenu.\n * \n * Event: mxEvent.SHOW\n *\n * Fires after the menu has been shown in <popup>.\n */\nfunction mxPopupMenu(factoryMethod)\n{\n\tthis.factoryMethod = factoryMethod;\n\t\n\tif (factoryMethod != null)\n\t{\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPopupMenu.prototype = new mxEventSource();\nmxPopupMenu.prototype.constructor = mxPopupMenu;\n\n/**\n * Variable: submenuImage\n * \n * URL of the image to be used for the submenu icon.\n */\nmxPopupMenu.prototype.submenuImage = mxClient.imageBasePath + '/submenu.gif';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the popupmenu and its shadow. Default is 10006.\n */\nmxPopupMenu.prototype.zIndex = 10006;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used to create the popup menu. The function takes the\n * current panning handler, the <mxCell> under the mouse and the mouse\n * event that triggered the call as arguments.\n */\nmxPopupMenu.prototype.factoryMethod = null;\n\n/**\n * Variable: useLeftButtonForPopup\n * \n * Specifies if popupmenus should be activated by clicking the left mouse\n * button. Default is false.\n */\nmxPopupMenu.prototype.useLeftButtonForPopup = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxPopupMenu.prototype.enabled = true;\n\n/**\n * Variable: itemCount\n * \n * Contains the number of times <addItem> has been called for a new menu.\n */\nmxPopupMenu.prototype.itemCount = 0;\n\n/**\n * Variable: autoExpand\n * \n * Specifies if submenus should be expanded on mouseover. Default is false.\n */\nmxPopupMenu.prototype.autoExpand = false;\n\n/**\n * Variable: smartSeparators\n * \n * Specifies if separators should only be added if a menu item follows them.\n * Default is false.\n */\nmxPopupMenu.prototype.smartSeparators = false;\n\n/**\n * Variable: labels\n * \n * Specifies if any labels should be visible. Default is true.\n */\nmxPopupMenu.prototype.labels = true;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenu.prototype.init = function()\n{\n\t// Adds the inner table\n\tthis.table = document.createElement('table');\n\tthis.table.className = 'mxPopupMenu';\n\t\n\tthis.tbody = document.createElement('tbody');\n\tthis.table.appendChild(this.tbody);\n\n\t// Adds the outer div\n\tthis.div = document.createElement('div');\n\tthis.div.className = 'mxPopupMenu';\n\tthis.div.style.display = 'inline';\n\tthis.div.style.zIndex = this.zIndex;\n\tthis.div.appendChild(this.table);\n\n\t// Disables the context menu on the outer div\n\tmxEvent.disableContextMenu(this.div);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxPopupMenu.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxPopupMenu.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isPopupTrigger\n * \n * Returns true if the given event is a popupmenu trigger for the optional\n * given cell.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the mouse event.\n */\nmxPopupMenu.prototype.isPopupTrigger = function(me)\n{\n\treturn me.isPopupTrigger() || (this.useLeftButtonForPopup && mxEvent.isLeftMouseButton(me.getEvent()));\n};\n\n/**\n * Function: addItem\n * \n * Adds the given item to the given parent item. If no parent item is specified\n * then the item is added to the top-level menu. The return value may be used\n * as the parent argument, ie. as a submenu item. The return value is the table\n * row that represents the item.\n * \n * Paramters:\n * \n * title - String that represents the title of the menu item.\n * image - Optional URL for the image icon.\n * funct - Function associated that takes a mouseup or touchend event.\n * parent - Optional item returned by <addItem>.\n * iconCls - Optional string that represents the CSS class for the image icon.\n * IconsCls is ignored if image is given.\n * enabled - Optional boolean indicating if the item is enabled. Default is true.\n * active - Optional boolean indicating if the menu should implement any event handling.\n * Default is true.\n */\nmxPopupMenu.prototype.addItem = function(title, image, funct, parent, iconCls, enabled, active)\n{\n\tparent = parent || this;\n\tthis.itemCount++;\n\t\n\t// Smart separators only added if element contains items\n\tif (parent.willAddSeparator)\n\t{\n\t\tif (parent.containsItems)\n\t\t{\n\t\t\tthis.addSeparator(parent, true);\n\t\t}\n\n\t\tparent.willAddSeparator = false;\n\t}\n\n\tparent.containsItems = true;\n\tvar tr = document.createElement('tr');\n\ttr.className = 'mxPopupMenuItem';\n\tvar col1 = document.createElement('td');\n\tcol1.className = 'mxPopupMenuIcon';\n\n\t// Adds the given image into the first column\n\tif (image != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.src = image;\n\t\tcol1.appendChild(img);\n\t}\n\telse if (iconCls != null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.className = iconCls;\n\t\tcol1.appendChild(div);\n\t}\n\t\n\ttr.appendChild(col1);\n\t\n\tif (this.labels)\n\t{\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\t\n\t\tmxUtils.write(col2, title);\n\t\tcol2.align = 'left';\n\t\ttr.appendChild(col2);\n\t\n\t\tvar col3 = document.createElement('td');\n\t\tcol3.className = 'mxPopupMenuItem' +\n\t\t\t((enabled != null && !enabled) ? ' mxDisabled' : '');\n\t\tcol3.style.paddingRight = '6px';\n\t\tcol3.style.textAlign = 'right';\n\t\t\n\t\ttr.appendChild(col3);\n\t\t\n\t\tif (parent.div == null)\n\t\t{\n\t\t\tthis.createSubmenu(parent);\n\t\t}\n\t}\n\t\n\tparent.tbody.appendChild(tr);\n\n\tif (active != false && enabled != false)\n\t{\n\t\tvar currentSelection = null;\n\t\t\n\t\tmxEvent.addGestureListeners(tr,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tthis.eventReceiver = tr;\n\t\t\t\t\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\tif (document.selection != null && (mxClient.IS_QUIRKS || document.documentMode == 8))\n\t\t\t\t{\n\t\t\t\t\tcurrentSelection = document.selection.createRange();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (parent.activeRow != tr && parent.activeRow != parent)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != null && parent.activeRow.div.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideSubmenu(parent);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoExpand && tr.div != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showSubmenu(parent, tr);\n\t\t\t\t\t\tparent.activeRow = tr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\t// Sets hover style because TR in IE doesn't have hover\n\t\t\t\ttr.className = 'mxPopupMenuItemHover';\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\t// EventReceiver avoids clicks on a submenu item\n\t\t\t\t// which has just been shown in the mousedown\n\t\t\t\tif (this.eventReceiver == tr)\n\t\t\t\t{\n\t\t\t\t\tif (parent.activeRow != tr)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.hideMenu();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for lost current selection in page because of focus in IE\n\t\t\t\t\tif (currentSelection != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Workaround for \"unspecified error\" in IE8 standards\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentSelection.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentSelection = null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (funct != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunct(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.eventReceiver = null;\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t})\n\t\t);\n\t\n\t\t// Resets hover style because TR in IE doesn't have hover\n\t\tmxEvent.addListener(tr, 'mouseout',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\ttr.className = 'mxPopupMenuItem';\n\t\t\t})\n\t\t);\n\t}\n\t\n\treturn tr;\n};\n\n/**\n * Adds a checkmark to the given menuitem.\n */\nmxPopupMenu.prototype.addCheckmark = function(item, img)\n{\n\tvar td = item.firstChild.nextSibling;\n\ttd.style.backgroundImage = 'url(\\'' + img + '\\')';\n\ttd.style.backgroundRepeat = 'no-repeat';\n\ttd.style.backgroundPosition = '2px 50%';\n};\n\n/**\n * Function: createSubmenu\n * \n * Creates the nodes required to add submenu items inside the given parent\n * item. This is called in <addItem> if a parent item is used for the first\n * time. This adds various DOM nodes and a <submenuImage> to the parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.createSubmenu = function(parent)\n{\n\tparent.table = document.createElement('table');\n\tparent.table.className = 'mxPopupMenu';\n\n\tparent.tbody = document.createElement('tbody');\n\tparent.table.appendChild(parent.tbody);\n\n\tparent.div = document.createElement('div');\n\tparent.div.className = 'mxPopupMenu';\n\n\tparent.div.style.position = 'absolute';\n\tparent.div.style.display = 'inline';\n\tparent.div.style.zIndex = this.zIndex;\n\t\n\tparent.div.appendChild(parent.table);\n\t\n\tvar img = document.createElement('img');\n\timg.setAttribute('src', this.submenuImage);\n\t\n\t// Last column of the submenu item in the parent menu\n\ttd = parent.firstChild.nextSibling.nextSibling;\n\ttd.appendChild(img);\n};\n\n/**\n * Function: showSubmenu\n * \n * Shows the submenu inside the given parent row.\n */\nmxPopupMenu.prototype.showSubmenu = function(parent, row)\n{\n\tif (row.div != null)\n\t{\n\t\trow.div.style.left = (parent.div.offsetLeft +\n\t\t\trow.offsetLeft+row.offsetWidth - 1) + 'px';\n\t\trow.div.style.top = (parent.div.offsetTop+row.offsetTop) + 'px';\n\t\tdocument.body.appendChild(row.div);\n\t\t\n\t\t// Moves the submenu to the left side if there is no space\n\t\tvar left = parseInt(row.div.offsetLeft);\n\t\tvar width = parseInt(row.div.offsetWidth);\n\t\tvar offset = mxUtils.getDocumentScrollOrigin(document);\n\t\t\n\t\tvar b = document.body;\n\t\tvar d = document.documentElement;\n\t\t\n\t\tvar right = offset.x + (b.clientWidth || d.clientWidth);\n\t\t\n\t\tif (left + width > right)\n\t\t{\n\t\t\trow.div.style.left = Math.max(0, (parent.div.offsetLeft - width + ((mxClient.IS_IE) ? 6 : -6))) + 'px';\n\t\t}\n\t\t\n\t\tmxUtils.fit(row.div);\n\t}\n};\n\n/**\n * Function: addSeparator\n * \n * Adds a horizontal separator in the given parent item or the top-level menu\n * if no parent is specified.\n * \n * Parameters:\n * \n * parent - Optional item returned by <addItem>.\n * force - Optional boolean to ignore <smartSeparators>. Default is false.\n */\nmxPopupMenu.prototype.addSeparator = function(parent, force)\n{\n\tparent = parent || this;\n\t\n\tif (this.smartSeparators && !force)\n\t{\n\t\tparent.willAddSeparator = true;\n\t}\n\telse if (parent.tbody != null)\n\t{\n\t\tparent.willAddSeparator = false;\n\t\tvar tr = document.createElement('tr');\n\t\t\n\t\tvar col1 = document.createElement('td');\n\t\tcol1.className = 'mxPopupMenuIcon';\n\t\tcol1.style.padding = '0 0 0 0px';\n\t\t\n\t\ttr.appendChild(col1);\n\t\t\n\t\tvar col2 = document.createElement('td');\n\t\tcol2.style.padding = '0 0 0 0px';\n\t\tcol2.setAttribute('colSpan', '2');\n\t\n\t\tvar hr = document.createElement('hr');\n\t\thr.setAttribute('size', '1');\n\t\tcol2.appendChild(hr);\n\t\t\n\t\ttr.appendChild(col2);\n\t\t\n\t\tparent.tbody.appendChild(tr);\n\t}\n};\n\n/**\n * Function: popup\n * \n * Shows the popup menu for the given event and cell.\n * \n * Example:\n * \n * (code)\n * graph.panningHandler.popup = function(x, y, cell, evt)\n * {\n *   mxUtils.alert('Hello, World!');\n * }\n * (end)\n */\nmxPopupMenu.prototype.popup = function(x, y, cell, evt)\n{\n\tif (this.div != null && this.tbody != null && this.factoryMethod != null)\n\t{\n\t\tthis.div.style.left = x + 'px';\n\t\tthis.div.style.top = y + 'px';\n\t\t\n\t\t// Removes all child nodes from the existing menu\n\t\twhile (this.tbody.firstChild != null)\n\t\t{\n\t\t\tmxEvent.release(this.tbody.firstChild);\n\t\t\tthis.tbody.removeChild(this.tbody.firstChild);\n\t\t}\n\t\t\n\t\tthis.itemCount = 0;\n\t\tthis.factoryMethod(this, cell, evt);\n\t\t\n\t\tif (this.itemCount > 0)\n\t\t{\n\t\t\tthis.showMenu();\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.SHOW));\n\t\t}\n\t}\n};\n\n/**\n * Function: isMenuShowing\n * \n * Returns true if the menu is showing.\n */\nmxPopupMenu.prototype.isMenuShowing = function()\n{\n\treturn this.div != null && this.div.parentNode == document.body;\n};\n\n/**\n * Function: showMenu\n * \n * Shows the menu.\n */\nmxPopupMenu.prototype.showMenu = function()\n{\n\t// Disables filter-based shadow in IE9 standards mode\n\tif (document.documentMode >= 9)\n\t{\n\t\tthis.div.style.filter = 'none';\n\t}\n\t\n\t// Fits the div inside the viewport\n\tdocument.body.appendChild(this.div);\n\tmxUtils.fit(this.div);\n};\n\n/**\n * Function: hideMenu\n * \n * Removes the menu and all submenus.\n */\nmxPopupMenu.prototype.hideMenu = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.hideSubmenu(this);\n\t\tthis.containsItems = false;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.HIDE));\n\t}\n};\n\n/**\n * Function: hideSubmenu\n * \n * Removes all submenus inside the given parent.\n * \n * Parameters:\n * \n * parent - An item returned by <addItem>.\n */\nmxPopupMenu.prototype.hideSubmenu = function(parent)\n{\n\tif (parent.activeRow != null)\n\t{\n\t\tthis.hideSubmenu(parent.activeRow);\n\t\t\n\t\tif (parent.activeRow.div.parentNode != null)\n\t\t{\n\t\t\tparent.activeRow.div.parentNode.removeChild(parent.activeRow.div);\n\t\t}\n\t\t\n\t\tparent.activeRow = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenu.prototype.destroy = function()\n{\n\tif (this.div != null)\n\t{\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxPopupMenu = typeof mxPopupMenu !== 'undefined' ? mxPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAutoSaveManager\n * \n * Manager for automatically saving diagrams. The <save> hook must be\n * implemented.\n * \n * Example:\n * \n * (code)\n * var mgr = new mxAutoSaveManager(editor.graph);\n * mgr.save = function()\n * {\n *   mxLog.show();\n *   mxLog.debug('save');\n * };\n * (end)\n * \n * Constructor: mxAutoSaveManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxAutoSaveManager(graph)\n{\n\t// Notifies the manager of a change\n\tthis.changeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t\t}\n\t});\n\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAutoSaveManager.prototype = new mxEventSource();\nmxAutoSaveManager.prototype.constructor = mxAutoSaveManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxAutoSaveManager.prototype.graph = null;\n\n/**\n * Variable: autoSaveDelay\n * \n * Minimum amount of seconds between two consecutive autosaves. Eg. a\n * value of 1 (s) means the graph is not stored more than once per second.\n * Default is 10.\n */\nmxAutoSaveManager.prototype.autoSaveDelay = 10;\n\n/**\n * Variable: autoSaveThrottle\n * \n * Minimum amount of seconds between two consecutive autosaves triggered by\n * more than <autoSaveThreshhold> changes within a timespan of less than\n * <autoSaveDelay> seconds. Eg. a value of 1 (s) means the graph is not\n * stored more than once per second even if there are more than\n * <autoSaveThreshold> changes within that timespan. Default is 2.\n */\nmxAutoSaveManager.prototype.autoSaveThrottle = 2;\n\n/**\n * Variable: autoSaveThreshold\n * \n * Minimum amount of ignored changes before an autosave. Eg. a value of 2\n * means after 2 change of the graph model the autosave will trigger if the\n * condition below is true. Default is 5.\n */\nmxAutoSaveManager.prototype.autoSaveThreshold = 5;\n\n/**\n * Variable: ignoredChanges\n * \n * Counter for ignored changes in autosave.\n */\nmxAutoSaveManager.prototype.ignoredChanges = 0;\n\n/**\n * Variable: lastSnapshot\n * \n * Used for autosaving. See <autosave>.\n */\nmxAutoSaveManager.prototype.lastSnapshot = 0;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxAutoSaveManager.prototype.enabled = true;\n\n/**\n * Variable: changeHandler\n * \n * Holds the function that handles graph model changes.\n */\nmxAutoSaveManager.prototype.changeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxAutoSaveManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxAutoSaveManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxAutoSaveManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\t}\n};\n\n/**\n * Function: save\n * \n * Empty hook that is called if the graph should be saved.\n */\nmxAutoSaveManager.prototype.save = function()\n{\n\t// empty\n};\n\n/**\n * Function: graphModelChanged\n * \n * Invoked when the graph model has changed.\n */\nmxAutoSaveManager.prototype.graphModelChanged = function(changes)\n{\n\tvar now = new Date().getTime();\n\tvar dt = (now - this.lastSnapshot) / 1000;\n\t\n\tif (dt > this.autoSaveDelay ||\n\t\t(this.ignoredChanges >= this.autoSaveThreshold &&\n\t\t dt > this.autoSaveThrottle))\n\t{\n\t\tthis.save();\n\t\tthis.reset();\n\t}\n\telse\n\t{\n\t\t// Increments the number of ignored changes\n\t\tthis.ignoredChanges++;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets all counters.\n */\nmxAutoSaveManager.prototype.reset = function()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.ignoredChanges = 0;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxAutoSaveManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxAutoSaveManager = typeof mxAutoSaveManager !== 'undefined' ? mxAutoSaveManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxAnimation\n * \n * Implements a basic animation in JavaScript.\n * \n * Constructor: mxAnimation\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxAnimation(delay)\n{\n\tthis.delay = (delay != null) ? delay : 20;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxAnimation.prototype = new mxEventSource();\nmxAnimation.prototype.constructor = mxAnimation;\n\n/**\n * Variable: delay\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxAnimation.prototype.delay = null;\n\n/**\n * Variable: thread\n * \n * Reference to the thread while the animation is running.\n */\nmxAnimation.prototype.thread = null;\n\n/**\n * Function: isRunning\n * \n * Returns true if the animation is running.\n */\nmxAnimation.prototype.isRunning = function()\n{\n\treturn this.thread != null;\n};\n\n/**\n * Function: startAnimation\n *\n * Starts the animation by repeatedly invoking updateAnimation.\n */\nmxAnimation.prototype.startAnimation = function()\n{\n\tif (this.thread == null)\n\t{\n\t\tthis.thread = window.setInterval(mxUtils.bind(this, this.updateAnimation), this.delay);\n\t}\n};\n\n/**\n * Function: updateAnimation\n *\n * Hook for subclassers to implement the animation. Invoke stopAnimation\n * when finished, startAnimation to resume. This is called whenever the\n * timer fires and fires an mxEvent.EXECUTE event with no properties.\n */\nmxAnimation.prototype.updateAnimation = function()\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE));\n};\n\n/**\n * Function: stopAnimation\n *\n * Stops the animation by deleting the timer and fires an <mxEvent.DONE>.\n */\nmxAnimation.prototype.stopAnimation = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearInterval(this.thread);\n\t\tthis.thread = null;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.DONE));\n\t}\n};\n\n__mxOutput.mxAnimation = typeof mxAnimation !== 'undefined' ? mxAnimation : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxMorphing\n * \n * Implements animation for morphing cells. Here is an example of\n * using this class for animating the result of a layout algorithm:\n * \n * (code)\n * graph.getModel().beginUpdate();\n * try\n * {\n *   var circleLayout = new mxCircleLayout(graph);\n *   circleLayout.execute(graph.getDefaultParent());\n * }\n * finally\n * {\n *   var morph = new mxMorphing(graph);\n *   morph.addListener(mxEvent.DONE, function()\n *   {\n *     graph.getModel().endUpdate();\n *   });\n *   \n *   morph.startAnimation();\n * }\n * (end)\n * \n * Constructor: mxMorphing\n * \n * Constructs an animation.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * steps - Optional number of steps in the morphing animation. Default is 6.\n * ease - Optional easing constant for the animation. Default is 1.5.\n * delay - Optional delay between the animation steps. Passed to <mxAnimation>.\n */\nfunction mxMorphing(graph, steps, ease, delay)\n{\n\tmxAnimation.call(this, delay);\n\tthis.graph = graph;\n\tthis.steps = (steps != null) ? steps : 6;\n\tthis.ease = (ease != null) ? ease : 1.5;\n};\n\n/**\n * Extends mxEventSource.\n */\nmxMorphing.prototype = new mxAnimation();\nmxMorphing.prototype.constructor = mxMorphing;\n\n/**\n * Variable: graph\n * \n * Specifies the delay between the animation steps. Defaul is 30ms.\n */\nmxMorphing.prototype.graph = null;\n\n/**\n * Variable: steps\n * \n * Specifies the maximum number of steps for the morphing.\n */\nmxMorphing.prototype.steps = null;\n\n/**\n * Variable: step\n * \n * Contains the current step.\n */\nmxMorphing.prototype.step = 0;\n\n/**\n * Variable: ease\n * \n * Ease-off for movement towards the given vector. Larger values are\n * slower and smoother. Default is 4.\n */\nmxMorphing.prototype.ease = null;\n\n/**\n * Variable: cells\n * \n * Optional array of cells to be animated. If this is not specified\n * then all cells are checked and animated if they have been moved\n * in the current transaction.\n */\nmxMorphing.prototype.cells = null;\n\n/**\n * Function: updateAnimation\n *\n * Animation step.\n */\nmxMorphing.prototype.updateAnimation = function()\n{\n\tmxAnimation.prototype.updateAnimation.apply(this, arguments);\n\tvar move = new mxCellStatePreview(this.graph);\n\n\tif (this.cells != null)\n\t{\n\t\t// Animates the given cells individually without recursion\n\t\tfor (var i = 0; i < this.cells.length; i++)\n\t\t{\n\t\t\tthis.animateCell(this.cells[i], move, false);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Animates all changed cells by using recursion to find\n\t\t// the changed cells but not for the animation itself\n\t\tthis.animateCell(this.graph.getModel().getRoot(), move, true);\n\t}\n\t\n\tthis.show(move);\n\t\n\tif (move.isEmpty() || this.step++ >= this.steps)\n\t{\n\t\tthis.stopAnimation();\n\t}\n};\n\n/**\n * Function: show\n *\n * Shows the changes in the given <mxCellStatePreview>.\n */\nmxMorphing.prototype.show = function(move)\n{\n\tmove.show();\n};\n\n/**\n * Function: animateCell\n *\n * Animates the given cell state using <mxCellStatePreview.moveState>.\n */\nmxMorphing.prototype.animateCell = function(cell, move, recurse)\n{\n\tvar state = this.graph.getView().getState(cell);\n\tvar delta = null;\n\n\tif (state != null)\n\t{\n\t\t// Moves the animated state from where it will be after the model\n\t\t// change by subtracting the given delta vector from that location\n\t\tdelta = this.getDelta(state);\n\n\t\tif (this.graph.getModel().isVertex(cell) && (delta.x != 0 || delta.y != 0))\n\t\t{\n\t\t\tvar translate = this.graph.view.getTranslate();\n\t\t\tvar scale = this.graph.view.getScale();\n\t\t\t\n\t\t\tdelta.x += translate.x * scale;\n\t\t\tdelta.y += translate.y * scale;\n\t\t\t\n\t\t\tmove.moveState(state, -delta.x / this.ease, -delta.y / this.ease);\n\t\t}\n\t}\n\t\n\tif (recurse && !this.stopRecursion(state, delta))\n\t{\n\t\tvar childCount = this.graph.getModel().getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.animateCell(this.graph.getModel().getChildAt(cell, i), move, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: stopRecursion\n *\n * Returns true if the animation should not recursively find more\n * deltas for children if the given parent state has been animated.\n */\nmxMorphing.prototype.stopRecursion = function(state, delta)\n{\n\treturn delta != null && (delta.x != 0 || delta.y != 0);\n};\n\n/**\n * Function: getDelta\n *\n * Returns the vector between the current rendered state and the future\n * location of the state after the display will be updated.\n */\nmxMorphing.prototype.getDelta = function(state)\n{\n\tvar origin = this.getOriginForCell(state.cell);\n\tvar translate = this.graph.getView().getTranslate();\n\tvar scale = this.graph.getView().getScale();\n\tvar x = state.x / scale - translate.x;\n\tvar y = state.y / scale - translate.y;\n\n\treturn new mxPoint((origin.x - x) * scale, (origin.y - y) * scale);\n};\n\n/**\n * Function: getOriginForCell\n *\n * Returns the top, left corner of the given cell. TODO: Improve performance\n * by using caching inside this method as the result per cell never changes\n * during the lifecycle of this object.\n */\nmxMorphing.prototype.getOriginForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\tresult = this.getOriginForCell(parent);\n\t\t\n\t\t// TODO: Handle offsets\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (geo.relative)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null)\n\t\t\t\t{\n\t\t\t\t\tresult.x += geo.x * pgeo.width;\n\t\t\t\t\tresult.y += geo.y * pgeo.height;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (result == null)\n\t{\n\t\tvar t = this.graph.view.getTranslate();\n\t\tresult = new mxPoint(-t.x, -t.y);\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxMorphing = typeof mxMorphing !== 'undefined' ? mxMorphing : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageBundle\n *\n * Maps from keys to base64 encoded images or file locations. All values must\n * be URLs or use the format data:image/format followed by a comma and the base64\n * encoded image data, eg. \"data:image/gif,XYZ\", where XYZ is the base64 encoded\n * image data.\n * \n * To add a new image bundle to an existing graph, the following code is used:\n * \n * (code)\n * var bundle = new mxImageBundle(alt);\n * bundle.putImage('myImage', 'data:image/gif,R0lGODlhEAAQAMIGAAAAAICAAICAgP' +\n *   '//AOzp2O3r2////////yH+FUNyZWF0ZWQgd2l0aCBUaGUgR0lNUAAh+QQBCgAHACwAAAAA' +\n *   'EAAQAAADTXi63AowynnAMDfjPUDlnAAJhmeBFxAEloliKltWmiYCQvfVr6lBPB1ggxN1hi' +\n *   'laSSASFQpIV5HJBDyHpqK2ejVRm2AAgZCdmCGO9CIBADs=', fallback);\n * bundle.putImage('mySvgImage', 'data:image/svg+xml,' + encodeURIComponent(\n *   '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">' +\n *   '<linearGradient id=\"gradient\"><stop offset=\"10%\" stop-color=\"#F00\"/>' +\n *   '<stop offset=\"90%\" stop-color=\"#fcc\"/></linearGradient>' +\n *   '<rect fill=\"url(#gradient)\" width=\"100%\" height=\"100%\"/></svg>'), fallback);\n * graph.addImageBundle(bundle);\n * (end);\n * \n * Alt is an optional boolean (default is false) that specifies if the value\n * or the fallback should be returned in <getImage>.\n * \n * The image can then be referenced in any cell style using image=myImage.\n * If you are using mxOutline, you should use the same image bundles in the\n * graph that renders the outline.\n * \n * The keys for images are resolved in <mxGraph.postProcessCellStyle> and\n * turned into a data URI if the returned value has a short data URI format\n * as specified above.\n * \n * A typical value for the fallback is a MTHML link as defined in RFC 2557.\n * Note that this format requires a file to be dynamically created on the\n * server-side, or the page that contains the graph to be modified to contain\n * the resources, this can be done by adding a comment that contains the\n * resource in the HEAD section of the page after the title tag.\n * \n * This type of fallback mechanism should be used in IE6 and IE7. IE8 does\n * support data URIs, but the maximum size is limited to 32 KB, which means\n * all data URIs should be limited to 32 KB.\n */\nfunction mxImageBundle(alt)\n{\n\tthis.images = [];\n\tthis.alt = (alt != null) ? alt : false;\n};\n\n/**\n * Variable: images\n * \n * Maps from keys to images.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Variable: alt\n * \n * Specifies if the fallback representation should be returned.\n */\nmxImageBundle.prototype.images = null;\n\n/**\n * Function: putImage\n * \n * Adds the specified entry to the map. The entry is an object with a value and\n * fallback property as specified in the arguments.\n */\nmxImageBundle.prototype.putImage = function(key, value, fallback)\n{\n\tthis.images[key] = {value: value, fallback: fallback};\n};\n\n/**\n * Function: getImage\n * \n * Returns the value for the given key. This returns the value\n * or fallback, depending on <alt>. The fallback is returned if\n * <alt> is true, the value is returned otherwise.\n */\nmxImageBundle.prototype.getImage = function(key)\n{\n\tvar result = null;\n\t\n\tif (key != null)\n\t{\n\t\tvar img = this.images[key];\n\t\t\n\t\tif (img != null)\n\t\t{\n\t\t\tresult = (this.alt) ? img.fallback : img.value;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n__mxOutput.mxImageBundle = typeof mxImageBundle !== 'undefined' ? mxImageBundle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageExport\n * \n * Creates a new image export instance to be used with an export canvas. Here\n * is an example that uses this class to create an image via a backend using\n * <mxXmlExportCanvas>.\n * \n * (code)\n * var xmlDoc = mxUtils.createXmlDocument();\n * var root = xmlDoc.createElement('output');\n * xmlDoc.appendChild(root);\n * \n * var xmlCanvas = new mxXmlCanvas2D(root);\n * var imgExport = new mxImageExport();\n * imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n * \n * var bounds = graph.getGraphBounds();\n * var w = Math.ceil(bounds.x + bounds.width);\n * var h = Math.ceil(bounds.y + bounds.height);\n * \n * var xml = mxUtils.getXml(root);\n * new mxXmlRequest('export', 'format=png&w=' + w +\n * \t\t'&h=' + h + '&bg=#F9F7ED&xml=' + encodeURIComponent(xml))\n * \t\t.simulate(document, '_blank');\n * (end)\n * \n * Constructor: mxImageExport\n * \n * Constructs a new image export.\n */\nfunction mxImageExport() { };\n\n/**\n * Variable: includeOverlays\n * \n * Specifies if overlays should be included in the export. Default is false.\n */\nmxImageExport.prototype.includeOverlays = false;\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.drawState = function(state, canvas)\n{\n\tif (state != null)\n\t{\n\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.drawCellState.apply(this, arguments);\n\t\t}));\n\t\t\t\t\n\t\t// Paints the overlays\n\t\tif (this.includeOverlays)\n\t\t{\n\t\t\tthis.visitStatesRecursive(state, canvas, mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.drawOverlays.apply(this, arguments);\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Function: drawState\n * \n * Draws the given state and all its descendants to the given canvas.\n */\nmxImageExport.prototype.visitStatesRecursive = function(state, canvas, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvisitor(state, canvas);\n\t\t\n\t\tvar graph = state.view.graph;\n\t\tvar childCount = graph.model.getChildCount(state.cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar childState = graph.view.getState(graph.model.getChildAt(state.cell, i));\n\t\t\tthis.visitStatesRecursive(childState, canvas, visitor);\n\t\t}\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state and canvas. This returns null.\n */\nmxImageExport.prototype.getLinkForCellState = function(state, canvas)\n{\n\treturn null;\n};\n\n/**\n * Function: drawCellState\n * \n * Draws the given state to the given canvas.\n */\nmxImageExport.prototype.drawCellState = function(state, canvas)\n{\n\t// Experimental feature\n\tvar link = this.getLinkForCellState(state, canvas);\n\t\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(link);\n\t}\n\t\n\t// Paints the shape and text\n\tthis.drawShape(state, canvas);\n\tthis.drawText(state, canvas);\n\n\tif (link != null)\n\t{\n\t\tcanvas.setLink(null);\n\t}\n};\n\n/**\n * Function: drawShape\n * \n * Draws the shape of the given state.\n */\nmxImageExport.prototype.drawShape = function(state, canvas)\n{\n\tif (state.shape instanceof mxShape && state.shape.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.shape.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawText\n * \n * Draws the text of the given state.\n */\nmxImageExport.prototype.drawText = function(state, canvas)\n{\n\tif (state.text != null && state.text.checkBounds())\n\t{\n\t\tcanvas.save();\n\t\tstate.text.paint(canvas);\n\t\tcanvas.restore();\n\t}\n};\n\n/**\n * Function: drawOverlays\n * \n * Draws the overlays for the given state. This is called if <includeOverlays>\n * is true.\n */\nmxImageExport.prototype.drawOverlays = function(state, canvas)\n{\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tif (shape instanceof mxShape)\n\t\t\t{\n\t\t\t\tshape.paint(canvas);\n\t\t\t}\n\t\t});\n\t}\n};\n\n\n__mxOutput.mxImageExport = typeof mxImageExport !== 'undefined' ? mxImageExport : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxAbstractCanvas2D\n *\n * Base class for all canvases. A description of the public API is available in <mxXmlCanvas2D>.\n * All color values of <mxConstants.NONE> will be converted to null in the state.\n * \n * Constructor: mxAbstractCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxAbstractCanvas2D()\n{\n\t/**\n\t * Variable: converter\n\t * \n\t * Holds the <mxUrlConverter> to convert image URLs.\n\t */\n\tthis.converter = this.createUrlConverter();\n\t\n\tthis.reset();\n};\n\n/**\n * Variable: state\n * \n * Holds the current state.\n */\nmxAbstractCanvas2D.prototype.state = null;\n\n/**\n * Variable: states\n * \n * Stack of states.\n */\nmxAbstractCanvas2D.prototype.states = null;\n\n/**\n * Variable: path\n * \n * Holds the current path as an array.\n */\nmxAbstractCanvas2D.prototype.path = null;\n\n/**\n * Variable: rotateHtml\n * \n * Switch for rotation of HTML. Default is false.\n */\nmxAbstractCanvas2D.prototype.rotateHtml = true;\n\n/**\n * Variable: lastX\n * \n * Holds the last x coordinate.\n */\nmxAbstractCanvas2D.prototype.lastX = 0;\n\n/**\n * Variable: lastY\n * \n * Holds the last y coordinate.\n */\nmxAbstractCanvas2D.prototype.lastY = 0;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'M'.\n */\nmxAbstractCanvas2D.prototype.moveOp = 'M';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'L'.\n */\nmxAbstractCanvas2D.prototype.lineOp = 'L';\n\n/**\n * Variable: quadOp\n * \n * Contains the string used for quadratic paths. Default is 'Q'.\n */\nmxAbstractCanvas2D.prototype.quadOp = 'Q';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'C'.\n */\nmxAbstractCanvas2D.prototype.curveOp = 'C';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'Z'.\n */\nmxAbstractCanvas2D.prototype.closeOp = 'Z';\n\n/**\n * Variable: pointerEvents\n * \n * Boolean value that specifies if events should be handled. Default is false.\n */\nmxAbstractCanvas2D.prototype.pointerEvents = false;\n\n/**\n * Function: createUrlConverter\n * \n * Create a new <mxUrlConverter> and returns it.\n */\nmxAbstractCanvas2D.prototype.createUrlConverter = function()\n{\n\treturn new mxUrlConverter();\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this canvas.\n */\nmxAbstractCanvas2D.prototype.reset = function()\n{\n\tthis.state = this.createState();\n\tthis.states = [];\n};\n\n/**\n * Function: createState\n * \n * Creates the state of the this canvas.\n */\nmxAbstractCanvas2D.prototype.createState = function()\n{\n\treturn {\n\t\tdx: 0,\n\t\tdy: 0,\n\t\tscale: 1,\n\t\talpha: 1,\n\t\tfillAlpha: 1,\n\t\tstrokeAlpha: 1,\n\t\tfillColor: null,\n\t\tgradientFillAlpha: 1,\n\t\tgradientColor: null,\n\t\tgradientAlpha: 1,\n\t\tgradientDirection: null,\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tdashed: false,\n\t\tdashPattern: '3 3',\n\t\tfixDash: false,\n\t\tlineCap: 'flat',\n\t\tlineJoin: 'miter',\n\t\tmiterLimit: 10,\n\t\tfontColor: '#000000',\n\t\tfontBackgroundColor: null,\n\t\tfontBorderColor: null,\n\t\tfontSize: mxConstants.DEFAULT_FONTSIZE,\n\t\tfontFamily: mxConstants.DEFAULT_FONTFAMILY,\n\t\tfontStyle: 0,\n\t\tshadow: false,\n\t\tshadowColor: mxConstants.SHADOWCOLOR,\n\t\tshadowAlpha: mxConstants.SHADOW_OPACITY,\n\t\tshadowDx: mxConstants.SHADOW_OFFSET_X,\n\t\tshadowDy: mxConstants.SHADOW_OFFSET_Y,\n\t\trotation: 0,\n\t\trotationCx: 0,\n\t\trotationCy: 0\n\t};\n};\n\n/**\n * Function: format\n * \n * Rounds all numbers to integers.\n */\nmxAbstractCanvas2D.prototype.format = function(value)\n{\n\treturn Math.round(parseFloat(value));\n};\n\n/**\n * Function: addOp\n * \n * Adds the given operation to the path.\n */\nmxAbstractCanvas2D.prototype.addOp = function()\n{\n\tif (this.path != null)\n\t{\n\t\tthis.path.push(arguments[0]);\n\t\t\n\t\tif (arguments.length > 2)\n\t\t{\n\t\t\tvar s = this.state;\n\n\t\t\tfor (var i = 2; i < arguments.length; i += 2)\n\t\t\t{\n\t\t\t\tthis.lastX = arguments[i - 1];\n\t\t\t\tthis.lastY = arguments[i];\n\t\t\t\t\n\t\t\t\tthis.path.push(this.format((this.lastX + s.dx) * s.scale));\n\t\t\t\tthis.path.push(this.format((this.lastY + s.dy) * s.scale));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the given point and returns the result as an <mxPoint>.\n */\nmxAbstractCanvas2D.prototype.rotatePoint = function(x, y, theta, cx, cy)\n{\n\tvar rad = theta * (Math.PI / 180);\n\t\n\treturn mxUtils.getRotatedPoint(new mxPoint(x, y), Math.cos(rad),\n\t\tMath.sin(rad), new mxPoint(cx, cy));\n};\n\n/**\n * Function: save\n * \n * Saves the current state.\n */\nmxAbstractCanvas2D.prototype.save = function()\n{\n\tthis.states.push(this.state);\n\tthis.state = mxUtils.clone(this.state);\n};\n\n/**\n * Function: restore\n * \n * Restores the current state.\n */\nmxAbstractCanvas2D.prototype.restore = function()\n{\n\tif (this.states.length > 0)\n\t{\n\t\tthis.state = this.states.pop();\n\t}\n};\n\n/**\n * Function: setLink\n * \n * Sets the current link. Hook for subclassers.\n */\nmxAbstractCanvas2D.prototype.setLink = function(link)\n{\n\t// nop\n};\n\n/**\n * Function: scale\n * \n * Scales the current state.\n */\nmxAbstractCanvas2D.prototype.scale = function(value)\n{\n\tthis.state.scale *= value;\n\tthis.state.strokeWidth *= value;\n};\n\n/**\n * Function: translate\n * \n * Translates the current state.\n */\nmxAbstractCanvas2D.prototype.translate = function(dx, dy)\n{\n\tthis.state.dx += dx;\n\tthis.state.dy += dy;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the current state.\n */\nmxAbstractCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\t// nop\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n */\nmxAbstractCanvas2D.prototype.setAlpha = function(value)\n{\n\tthis.state.alpha = value;\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current solid fill alpha.\n */\nmxAbstractCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tthis.state.fillAlpha = value;\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n */\nmxAbstractCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tthis.state.strokeAlpha = value;\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n */\nmxAbstractCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fillColor = value;\n\tthis.state.gradientColor = null;\n};\n\n/**\n * Function: setGradient\n * \n * Sets the current gradient.\n */\nmxAbstractCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tvar s = this.state;\n\ts.fillColor = color1;\n\ts.gradientFillAlpha = (alpha1 != null) ? alpha1 : 1;\n\ts.gradientColor = color2;\n\ts.gradientAlpha = (alpha2 != null) ? alpha2 : 1;\n\ts.gradientDirection = direction;\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n */\nmxAbstractCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.strokeColor = value;\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n */\nmxAbstractCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tthis.state.strokeWidth = value;\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n */\nmxAbstractCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tthis.state.dashed = value;\n\tthis.state.fixDash = fixDash;\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern.\n */\nmxAbstractCanvas2D.prototype.setDashPattern = function(value)\n{\n\tthis.state.dashPattern = value;\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the current line cap.\n */\nmxAbstractCanvas2D.prototype.setLineCap = function(value)\n{\n\tthis.state.lineCap = value;\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the current line join.\n */\nmxAbstractCanvas2D.prototype.setLineJoin = function(value)\n{\n\tthis.state.lineJoin = value;\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the current miter limit.\n */\nmxAbstractCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tthis.state.miterLimit = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBackgroundColor = value;\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color.\n */\nmxAbstractCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.fontBorderColor = value;\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size.\n */\nmxAbstractCanvas2D.prototype.setFontSize = function(value)\n{\n\tthis.state.fontSize = parseFloat(value);\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family.\n */\nmxAbstractCanvas2D.prototype.setFontFamily = function(value)\n{\n\tthis.state.fontFamily = value;\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n */\nmxAbstractCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (value == null)\n\t{\n\t\tvalue = 0;\n\t}\n\t\n\tthis.state.fontStyle = value;\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadow = function(enabled)\n{\n\tthis.state.shadow = enabled;\n};\n\n/**\n * Function: setShadowColor\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tthis.state.shadowColor = value;\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tthis.state.shadowAlpha = value;\n};\n\n/**\n * Function: setShadowOffset\n * \n * Enables or disables and configures the current shadow.\n */\nmxAbstractCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tthis.state.shadowDx = dx;\n\tthis.state.shadowDy = dy;\n};\n\n/**\n * Function: begin\n * \n * Starts a new path.\n */\nmxAbstractCanvas2D.prototype.begin = function()\n{\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n\tthis.path = [];\n};\n\n/**\n * Function: moveTo\n * \n *  Moves the current path the given coordinates.\n */\nmxAbstractCanvas2D.prototype.moveTo = function(x, y)\n{\n\tthis.addOp(this.moveOp, x, y);\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates. Uses moveTo with the op argument.\n */\nmxAbstractCanvas2D.prototype.lineTo = function(x, y)\n{\n\tthis.addOp(this.lineOp, x, y);\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n */\nmxAbstractCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tthis.addOp(this.quadOp, x1, y1, x2, y2);\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n */\nmxAbstractCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.curveOp, x1, y1, x2, y2, x3, y3);\n};\n\n/**\n * Function: arcTo\n * \n * Adds the given arc to the current path. This is a synthetic operation that\n * is broken down into curves.\n */\nmxAbstractCanvas2D.prototype.arcTo = function(rx, ry, angle, largeArcFlag, sweepFlag, x, y)\n{\n\tvar curves = mxUtils.arcToCurves(this.lastX, this.lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y);\n\t\n\tif (curves != null)\n\t{\n\t\tfor (var i = 0; i < curves.length; i += 6) \n\t\t{\n\t\t\tthis.curveTo(curves[i], curves[i + 1], curves[i + 2],\n\t\t\t\tcurves[i + 3], curves[i + 4], curves[i + 5]);\n\t\t}\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxAbstractCanvas2D.prototype.close = function(x1, y1, x2, y2, x3, y3)\n{\n\tthis.addOp(this.closeOp);\n};\n\n/**\n * Function: end\n * \n * Empty implementation for backwards compatibility. This will be removed.\n */\nmxAbstractCanvas2D.prototype.end = function() { };\n\n__mxOutput.mxAbstractCanvas2D = typeof mxAbstractCanvas2D !== 'undefined' ? mxAbstractCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxXmlCanvas2D\n *\n * Base class for all canvases. The following methods make up the public\n * interface of the canvas 2D for all painting in mxGraph:\n * \n * - <save>, <restore>\n * - <scale>, <translate>, <rotate>\n * - <setAlpha>, <setFillAlpha>, <setStrokeAlpha>, <setFillColor>, <setGradient>,\n *   <setStrokeColor>, <setStrokeWidth>, <setDashed>, <setDashPattern>, <setLineCap>, \n *   <setLineJoin>, <setMiterLimit>\n * - <setFontColor>, <setFontBackgroundColor>, <setFontBorderColor>, <setFontSize>,\n *   <setFontFamily>, <setFontStyle>\n * - <setShadow>, <setShadowColor>, <setShadowAlpha>, <setShadowOffset>\n * - <rect>, <roundrect>, <ellipse>, <image>, <text>\n * - <begin>, <moveTo>, <lineTo>, <quadTo>, <curveTo>\n * - <stroke>, <fill>, <fillAndStroke>\n * \n * <mxAbstractCanvas2D.arcTo> is an additional method for drawing paths. This is\n * a synthetic method, meaning that it is turned into a sequence of curves by\n * default. Subclassers may add native support for arcs.\n * \n * Constructor: mxXmlCanvas2D\n *\n * Constructs a new abstract canvas.\n */\nfunction mxXmlCanvas2D(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t// Writes default settings;\n\tthis.writeDefaults();\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxXmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxXmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: compressed\n * \n * Specifies if the output should be compressed by removing redundant calls.\n * Default is true.\n */\nmxXmlCanvas2D.prototype.compressed = true;\n\n/**\n * Function: writeDefaults\n * \n * Writes the rendering defaults to <root>:\n */\nmxXmlCanvas2D.prototype.writeDefaults = function()\n{\n\tvar elem;\n\t\n\t// Writes font defaults\n\telem = this.createElement('fontfamily');\n\telem.setAttribute('family', mxConstants.DEFAULT_FONTFAMILY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('fontsize');\n\telem.setAttribute('size', mxConstants.DEFAULT_FONTSIZE);\n\tthis.root.appendChild(elem);\n\t\n\t// Writes shadow defaults\n\telem = this.createElement('shadowcolor');\n\telem.setAttribute('color', mxConstants.SHADOWCOLOR);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', mxConstants.SHADOW_OPACITY);\n\tthis.root.appendChild(elem);\n\t\n\telem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', mxConstants.SHADOW_OFFSET_X);\n\telem.setAttribute('dy', mxConstants.SHADOW_OFFSET_Y);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: format\n * \n * Returns a formatted number with 2 decimal places.\n */\nmxXmlCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: createElement\n * \n * Creates the given element using the owner document of <root>.\n */\nmxXmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn this.root.ownerDocument.createElement(name);\n};\n\n/**\n * Function: save\n * \n * Saves the drawing state.\n */\nmxXmlCanvas2D.prototype.save = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.save.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('save'));\n};\n\n/**\n * Function: restore\n * \n * Restores the drawing state.\n */\nmxXmlCanvas2D.prototype.restore = function()\n{\n\tif (this.compressed)\n\t{\n\t\tmxAbstractCanvas2D.prototype.restore.apply(this, arguments);\n\t}\n\t\n\tthis.root.appendChild(this.createElement('restore'));\n};\n\n/**\n * Function: scale\n * \n * Scales the output.\n * \n * Parameters:\n * \n * scale - Number that represents the scale where 1 is equal to 100%.\n */\nmxXmlCanvas2D.prototype.scale = function(value)\n{\n        var elem = this.createElement('scale');\n        elem.setAttribute('scale', value);\n        this.root.appendChild(elem);\n};\n\n/**\n * Function: translate\n * \n * Translates the output.\n * \n * Parameters:\n * \n * dx - Number that specifies the horizontal translation.\n * dy - Number that specifies the vertical translation.\n */\nmxXmlCanvas2D.prototype.translate = function(dx, dy)\n{\n\tvar elem = this.createElement('translate');\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: rotate\n * \n * Rotates and/or flips the output around a given center. (Note: Due to\n * limitations in VML, the rotation cannot be concatenated.)\n * \n * Parameters:\n * \n * theta - Number that represents the angle of the rotation (in degrees).\n * flipH - Boolean indicating if the output should be flipped horizontally.\n * flipV - Boolean indicating if the output should be flipped vertically.\n * cx - Number that represents the x-coordinate of the rotation center.\n * cy - Number that represents the y-coordinate of the rotation center.\n */\nmxXmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tvar elem = this.createElement('rotate');\n\t\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\telem.setAttribute('theta', this.format(theta));\n\t\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\t\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\t\telem.setAttribute('cx', this.format(cx));\n\t\telem.setAttribute('cy', this.format(cy));\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setAlpha\n * \n * Sets the current alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.alpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('alpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillAlpha\n * \n * Sets the current fill alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new fill alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setFillAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillalpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeAlpha\n * \n * Sets the current stroke alpha.\n * \n * Parameters:\n * \n * value - Number that represents the new stroke alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setStrokeAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokealpha');\n\telem.setAttribute('alpha', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFillColor\n * \n * Sets the current fill color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFillColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.fillColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setFillColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('fillcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setGradient\n * \n * Sets the gradient. Note that the coordinates may be ignored by some implementations.\n * \n * Parameters:\n * \n * color1 - Hexadecimal representation of the start color.\n * color2 - Hexadecimal representation of the end color.\n * x - X-coordinate of the gradient region.\n * y - y-coordinate of the gradient region.\n * w - Width of the gradient region.\n * h - Height of the gradient region.\n * direction - One of <mxConstants.DIRECTION_NORTH>, <mxConstants.DIRECTION_EAST>,\n * <mxConstants.DIRECTION_SOUTH> or <mxConstants.DIRECTION_WEST>.\n * alpha1 - Optional alpha of the start color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n * alpha2 - Optional alpha of the end color. Default is 1. Possible values\n * are between 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setGradient = function(color1, color2, x, y, w, h, direction, alpha1, alpha2)\n{\n\tif (color1 != null && color2 != null)\n\t{\n\t\tmxAbstractCanvas2D.prototype.setGradient.apply(this, arguments);\n\t\t\n\t\tvar elem = this.createElement('gradient');\n\t\telem.setAttribute('c1', color1);\n\t\telem.setAttribute('c2', color2);\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\t\n\t\t// Default direction is south\n\t\tif (direction != null)\n\t\t{\n\t\t\telem.setAttribute('direction', direction);\n\t\t}\n\t\t\n\t\tif (alpha1 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha1', alpha1);\n\t\t}\n\t\t\n\t\tif (alpha2 != null)\n\t\t{\n\t\t\telem.setAttribute('alpha2', alpha2);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setStrokeColor\n * \n * Sets the current stroke color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setStrokeColor = function(value)\n{\n\tif (value == mxConstants.NONE)\n\t{\n\t\tvalue = null;\n\t}\n\t\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokecolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setStrokeWidth\n * \n * Sets the current stroke width.\n * \n * Parameters:\n * \n * value - Numeric representation of the stroke width.\n */\nmxXmlCanvas2D.prototype.setStrokeWidth = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.strokeWidth == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setStrokeWidth.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('strokewidth');\n\telem.setAttribute('width', this.format(value));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashed\n * \n * Enables or disables dashed lines.\n * \n * Parameters:\n * \n * value - Boolean that specifies if dashed lines should be enabled.\n * value - Boolean that specifies if the stroke width should be ignored\n * for the dash pattern. Default is false.\n */\nmxXmlCanvas2D.prototype.setDashed = function(value, fixDash)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashed == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashed.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashed');\n\telem.setAttribute('dashed', (value) ? '1' : '0');\n\t\n\tif (fixDash != null)\n\t{\n\t\telem.setAttribute('fixDash', (fixDash) ? '1' : '0');\n\t}\n\t\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setDashPattern\n * \n * Sets the current dash pattern. Default is '3 3'.\n * \n * Parameters:\n * \n * value - String that represents the dash pattern, which is a sequence of\n * numbers defining the length of the dashes and the length of the spaces\n * between the dashes. The lengths are relative to the line width - a length\n * of 1 is equals to the line width.\n */\nmxXmlCanvas2D.prototype.setDashPattern = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.dashPattern == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setDashPattern.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('dashpattern');\n\telem.setAttribute('pattern', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineCap\n * \n * Sets the line cap. Default is 'flat' which corresponds to 'butt' in SVG.\n * \n * Parameters:\n * \n * value - String that represents the line cap. Possible values are flat, round\n * and square.\n */\nmxXmlCanvas2D.prototype.setLineCap = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineCap == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineCap.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linecap');\n\telem.setAttribute('cap', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setLineJoin\n * \n * Sets the line join. Default is 'miter'.\n * \n * Parameters:\n * \n * value - String that represents the line join. Possible values are miter,\n * round and bevel.\n */\nmxXmlCanvas2D.prototype.setLineJoin = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.lineJoin == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setLineJoin.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('linejoin');\n\telem.setAttribute('join', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setMiterLimit\n * \n * Sets the miter limit. Default is 10.\n * \n * Parameters:\n * \n * value - Number that represents the miter limit.\n */\nmxXmlCanvas2D.prototype.setMiterLimit = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.miterLimit == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setMiterLimit.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('miterlimit');\n\telem.setAttribute('limit', value);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setFontColor\n * \n * Sets the current font color. Default is '#000000'.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBackgroundColor\n * \n * Sets the current font background color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBackgroundColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBackgroundColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBackgroundColor.apply(this, arguments);\n\t\t}\n\n\t\tvar elem = this.createElement('fontbackgroundcolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontBorderColor\n * \n * Sets the current font border color.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setFontBorderColor = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontBorderColor == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontBorderColor.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontbordercolor');\n\t\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontSize\n * \n * Sets the current font size. Default is <mxConstants.DEFAULT_FONTSIZE>.\n * \n * Parameters:\n * \n * value - Numeric representation of the font size.\n */\nmxXmlCanvas2D.prototype.setFontSize = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontSize == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontSize.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontsize');\n\t\telem.setAttribute('size', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontFamily\n * \n * Sets the current font family. Default is <mxConstants.DEFAULT_FONTFAMILY>.\n * \n * Parameters:\n * \n * value - String representation of the font family. This handles the same\n * values as the CSS font-family property.\n */\nmxXmlCanvas2D.prototype.setFontFamily = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontFamily == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontFamily.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontfamily');\n\t\telem.setAttribute('family', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setFontStyle\n * \n * Sets the current font style.\n * \n * Parameters:\n * \n * value - Numeric representation of the font family. This is the sum of the\n * font styles from <mxConstants>.\n */\nmxXmlCanvas2D.prototype.setFontStyle = function(value)\n{\n\tif (this.textEnabled)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t\t\n\t\tif (this.compressed)\n\t\t{\n\t\t\tif (this.state.fontStyle == value)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tmxAbstractCanvas2D.prototype.setFontStyle.apply(this, arguments);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('fontstyle');\n\t\telem.setAttribute('style', value);\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: setShadow\n * \n * Enables or disables shadows.\n * \n * Parameters:\n * \n * value - Boolean that specifies if shadows should be enabled.\n */\nmxXmlCanvas2D.prototype.setShadow = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadow == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadow.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadow');\n\telem.setAttribute('enabled', (value) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowColor\n * \n * Sets the current shadow color. Default is <mxConstants.SHADOWCOLOR>.\n * \n * Parameters:\n * \n * value - Hexadecimal representation of the color or 'none'.\n */\nmxXmlCanvas2D.prototype.setShadowColor = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (value == mxConstants.NONE)\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\tif (this.state.shadowColor == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowColor.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowcolor');\n\telem.setAttribute('color', (value != null) ? value : mxConstants.NONE);\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: setShadowAlpha\n * \n * Sets the current shadows alpha. Default is <mxConstants.SHADOW_OPACITY>.\n * \n * Parameters:\n * \n * value - Number that represents the new alpha. Possible values are between\n * 1 (opaque) and 0 (transparent).\n */\nmxXmlCanvas2D.prototype.setShadowAlpha = function(value)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowAlpha == value)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowAlpha.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowalpha');\n\telem.setAttribute('alpha', value);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: setShadowOffset\n * \n * Sets the current shadow offset.\n * \n * Parameters:\n * \n * dx - Number that represents the horizontal offset of the shadow.\n * dy - Number that represents the vertical offset of the shadow.\n */\nmxXmlCanvas2D.prototype.setShadowOffset = function(dx, dy)\n{\n\tif (this.compressed)\n\t{\n\t\tif (this.state.shadowDx == dx && this.state.shadowDy == dy)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxAbstractCanvas2D.prototype.setShadowOffset.apply(this, arguments);\n\t}\n\t\n\tvar elem = this.createElement('shadowoffset');\n\telem.setAttribute('dx', dx);\n\telem.setAttribute('dy', dy);\n\tthis.root.appendChild(elem);\n\t\n};\n\n/**\n * Function: rect\n * \n * Puts a rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n */\nmxXmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar elem = this.createElement('rect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: roundrect\n * \n * Puts a rounded rectangle into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the rectangle.\n * y - Number that represents the y-coordinate of the rectangle.\n * w - Number that represents the width of the rectangle.\n * h - Number that represents the height of the rectangle.\n * dx - Number that represents the horizontal rounding.\n * dy - Number that represents the vertical rounding.\n */\nmxXmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tvar elem = this.createElement('roundrect');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('dx', this.format(dx));\n\telem.setAttribute('dy', this.format(dy));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: ellipse\n * \n * Puts an ellipse into the drawing buffer.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the ellipse.\n * y - Number that represents the y-coordinate of the ellipse.\n * w - Number that represents the width of the ellipse.\n * h - Number that represents the height of the ellipse.\n */\nmxXmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar elem = this.createElement('ellipse');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the image.\n * y - Number that represents the y-coordinate of the image.\n * w - Number that represents the width of the image.\n * h - Number that represents the height of the image.\n * src - String that specifies the URL of the image.\n * aspect - Boolean indicating if the aspect of the image should be preserved.\n * flipH - Boolean indicating if the image should be flipped horizontally.\n * flipV - Boolean indicating if the image should be flipped vertically.\n */\nmxXmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\tvar elem = this.createElement('image');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\telem.setAttribute('w', this.format(w));\n\telem.setAttribute('h', this.format(h));\n\telem.setAttribute('src', src);\n\telem.setAttribute('aspect', (aspect) ? '1' : '0');\n\telem.setAttribute('flipH', (flipH) ? '1' : '0');\n\telem.setAttribute('flipV', (flipV) ? '1' : '0');\n\tthis.root.appendChild(elem);\n};\n\n/**\n * Function: begin\n * \n * Starts a new path and puts it into the drawing buffer.\n */\nmxXmlCanvas2D.prototype.begin = function()\n{\n\tthis.root.appendChild(this.createElement('begin'));\n\tthis.lastX = 0;\n\tthis.lastY = 0;\n};\n\n/**\n * Function: moveTo\n * \n * Moves the current path the given point.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the point.\n * y - Number that represents the y-coordinate of the point.\n */\nmxXmlCanvas2D.prototype.moveTo = function(x, y)\n{\n\tvar elem = this.createElement('move');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: lineTo\n * \n * Draws a line to the given coordinates.\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the endpoint.\n * y - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.lineTo = function(x, y)\n{\n\tvar elem = this.createElement('line');\n\telem.setAttribute('x', this.format(x));\n\telem.setAttribute('y', this.format(y));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x;\n\tthis.lastY = y;\n};\n\n/**\n * Function: quadTo\n * \n * Adds a quadratic curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the control point.\n * y1 - Number that represents the y-coordinate of the control point.\n * x2 - Number that represents the x-coordinate of the endpoint.\n * y2 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar elem = this.createElement('quad');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x2;\n\tthis.lastY = y2;\n};\n\n/**\n * Function: curveTo\n * \n * Adds a bezier curve to the current path.\n * \n * Parameters:\n * \n * x1 - Number that represents the x-coordinate of the first control point.\n * y1 - Number that represents the y-coordinate of the first control point.\n * x2 - Number that represents the x-coordinate of the second control point.\n * y2 - Number that represents the y-coordinate of the second control point.\n * x3 - Number that represents the x-coordinate of the endpoint.\n * y3 - Number that represents the y-coordinate of the endpoint.\n */\nmxXmlCanvas2D.prototype.curveTo = function(x1, y1, x2, y2, x3, y3)\n{\n\tvar elem = this.createElement('curve');\n\telem.setAttribute('x1', this.format(x1));\n\telem.setAttribute('y1', this.format(y1));\n\telem.setAttribute('x2', this.format(x2));\n\telem.setAttribute('y2', this.format(y2));\n\telem.setAttribute('x3', this.format(x3));\n\telem.setAttribute('y3', this.format(y3));\n\tthis.root.appendChild(elem);\n\tthis.lastX = x3;\n\tthis.lastY = y3;\n};\n\n/**\n * Function: close\n * \n * Closes the current path.\n */\nmxXmlCanvas2D.prototype.close = function()\n{\n\tthis.root.appendChild(this.createElement('close'));\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup. Background and border color as well\n * as clipping is not available in plain text labels for VML. HTML labels\n * are not available as part of shapes with no foreignObject support in SVG\n * (eg. IE9, IE10).\n * \n * Parameters:\n * \n * x - Number that represents the x-coordinate of the text.\n * y - Number that represents the y-coordinate of the text.\n * w - Number that represents the available width for the text or 0 for automatic width.\n * h - Number that represents the available height for the text or 0 for automatic height.\n * str - String that specifies the text to be painted.\n * align - String that represents the horizontal alignment.\n * valign - String that represents the vertical alignment.\n * wrap - Boolean that specifies if word-wrapping is enabled. Requires w > 0.\n * format - Empty string for plain text or 'html' for HTML markup.\n * overflow - Specifies the overflow behaviour of the label. Requires w > 0 and/or h > 0.\n * clip - Boolean that specifies if the label should be clipped. Requires w > 0 and/or h > 0.\n * rotation - Number that specifies the angle of the rotation around the anchor point of the text.\n * dir - Optional string that specifies the text direction. Possible values are rtl and lrt.\n */\nmxXmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tif (mxUtils.isNode(str))\n\t\t{\n\t\t\tstr = mxUtils.getOuterHtml(str);\n\t\t}\n\t\t\n\t\tvar elem = this.createElement('text');\n\t\telem.setAttribute('x', this.format(x));\n\t\telem.setAttribute('y', this.format(y));\n\t\telem.setAttribute('w', this.format(w));\n\t\telem.setAttribute('h', this.format(h));\n\t\telem.setAttribute('str', str);\n\t\t\n\t\tif (align != null)\n\t\t{\n\t\t\telem.setAttribute('align', align);\n\t\t}\n\t\t\n\t\tif (valign != null)\n\t\t{\n\t\t\telem.setAttribute('valign', valign);\n\t\t}\n\t\t\n\t\telem.setAttribute('wrap', (wrap) ? '1' : '0');\n\t\t\n\t\tif (format == null)\n\t\t{\n\t\t\tformat = '';\n\t\t}\n\t\t\n\t\telem.setAttribute('format', format);\n\t\t\n\t\tif (overflow != null)\n\t\t{\n\t\t\telem.setAttribute('overflow', overflow);\n\t\t}\n\t\t\n\t\tif (clip != null)\n\t\t{\n\t\t\telem.setAttribute('clip', (clip) ? '1' : '0');\n\t\t}\n\t\t\n\t\tif (rotation != null)\n\t\t{\n\t\t\telem.setAttribute('rotation', rotation);\n\t\t}\n\t\t\n\t\tif (dir != null)\n\t\t{\n\t\t\telem.setAttribute('dir', dir);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(elem);\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.stroke = function()\n{\n\tthis.root.appendChild(this.createElement('stroke'));\n};\n\n/**\n * Function: fill\n * \n * Fills the current drawing buffer.\n */\nmxXmlCanvas2D.prototype.fill = function()\n{\n\tthis.root.appendChild(this.createElement('fill'));\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills the current drawing buffer and its outline.\n */\nmxXmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.root.appendChild(this.createElement('fillstroke'));\n};\n\n__mxOutput.mxXmlCanvas2D = typeof mxXmlCanvas2D !== 'undefined' ? mxXmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSvgCanvas2D\n *\n * Extends <mxAbstractCanvas2D> to implement a canvas for SVG. This canvas writes all\n * calls as SVG output to the given SVG root node.\n * \n * (code)\n * var svgDoc = mxUtils.createXmlDocument();\n * var root = (svgDoc.createElementNS != null) ?\n * \t\tsvgDoc.createElementNS(mxConstants.NS_SVG, 'svg') : svgDoc.createElement('svg');\n * \n * if (svgDoc.createElementNS == null)\n * {\n *   root.setAttribute('xmlns', mxConstants.NS_SVG);\n *   root.setAttribute('xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * else\n * {\n *   root.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', mxConstants.NS_XLINK);\n * }\n * \n * var bounds = graph.getGraphBounds();\n * root.setAttribute('width', (bounds.x + bounds.width + 4) + 'px');\n * root.setAttribute('height', (bounds.y + bounds.height + 4) + 'px');\n * root.setAttribute('version', '1.1');\n * \n * svgDoc.appendChild(root);\n * \n * var svgCanvas = new mxSvgCanvas2D(root);\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>.\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * graph.view.canvas.ownerSVGElement.setAttribute('shape-rendering', 'crispEdges');\n * (end)\n * \n * Or set the respective attribute in the SVG element directly.\n * \n * Constructor: mxSvgCanvas2D\n *\n * Constructs a new SVG canvas.\n * \n * Parameters:\n * \n * root - SVG container for the output.\n * styleEnabled - Optional boolean that specifies if a style section should be\n * added. The style section sets the default font-size, font-family and\n * stroke-miterlimit globally. Default is false.\n */\nfunction mxSvgCanvas2D(root, styleEnabled)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n\n\t/**\n\t * Variable: gradients\n\t * \n\t * Local cache of gradients for quick lookups.\n\t */\n\tthis.gradients = [];\n\n\t/**\n\t * Variable: defs\n\t * \n\t * Reference to the defs section of the SVG document. Only for export.\n\t */\n\tthis.defs = null;\n\t\n\t/**\n\t * Variable: styleEnabled\n\t * \n\t * Stores the value of styleEnabled passed to the constructor.\n\t */\n\tthis.styleEnabled = (styleEnabled != null) ? styleEnabled : false;\n\t\n\tvar svg = null;\n\t\n\t// Adds optional defs section for export\n\tif (root.ownerDocument != document)\n\t{\n\t\tvar node = root;\n\n\t\t// Finds owner SVG element in XML DOM\n\t\twhile (node != null && node.nodeName != 'svg')\n\t\t{\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\t\n\t\tsvg = node;\n\t}\n\n\tif (svg != null)\n\t{\n\t\t// Tries to get existing defs section\n\t\tvar tmp = svg.getElementsByTagName('defs');\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tthis.defs = svg.getElementsByTagName('defs')[0];\n\t\t}\n\t\t\n\t\t// Adds defs section if none exists\n\t\tif (this.defs == null)\n\t\t{\n\t\t\tthis.defs = this.createElement('defs');\n\t\t\t\n\t\t\tif (svg.firstChild != null)\n\t\t\t{\n\t\t\t\tsvg.insertBefore(this.defs, svg.firstChild);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(this.defs);\n\t\t\t}\n\t\t}\n\n\t\t// Adds stylesheet\n\t\tif (this.styleEnabled)\n\t\t{\n\t\t\tthis.defs.appendChild(this.createStyle());\n\t\t}\n\t}\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxSvgCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Capability check for DOM parser.\n */\n(function()\n{\n\tmxSvgCanvas2D.prototype.useDomParser = !mxClient.IS_IE && typeof DOMParser === 'function' && typeof XMLSerializer === 'function';\n\t\n\tif (mxSvgCanvas2D.prototype.useDomParser)\n\t{\n\t\t// Checks using a generic test text if the parsing actually works. This is a workaround\n\t\t// for older browsers where the capability check returns true but the parsing fails.\n\t\ttry\n\t\t{\n\t\t\tvar doc = new DOMParser().parseFromString('test text', 'text/html');\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = doc != null;\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxSvgCanvas2D.prototype.useDomParser = false;\n\t\t}\n\t}\n})();\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxSvgCanvas2D.prototype.node = null;\n\n/**\n * Variable: matchHtmlAlignment\n * \n * Specifies if plain text output should match the vertical HTML alignment.\n * Defaul is true.\n */\nmxSvgCanvas2D.prototype.matchHtmlAlignment = true;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabled. Default is true.\n */\nmxSvgCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: foEnabled\n * \n * Specifies if use of foreignObject for HTML markup is allowed. Default is true.\n */\nmxSvgCanvas2D.prototype.foEnabled = true;\n\n/**\n * Variable: foAltText\n * \n * Specifies the fallback text for unsupported foreignObjects in exported\n * documents. Default is '[Object]'. If this is set to null then no fallback\n * text is added to the exported document.\n */\nmxSvgCanvas2D.prototype.foAltText = '[Object]';\n\n/**\n * Variable: foOffset\n * \n * Offset to be used for foreignObjects.\n */\nmxSvgCanvas2D.prototype.foOffset = 0;\n\n/**\n * Variable: textOffset\n * \n * Offset to be used for text elements.\n */\nmxSvgCanvas2D.prototype.textOffset = 0;\n\n/**\n * Variable: imageOffset\n * \n * Offset to be used for image elements.\n */\nmxSvgCanvas2D.prototype.imageOffset = 0;\n\n/**\n * Variable: strokeTolerance\n * \n * Adds transparent paths for strokes.\n */\nmxSvgCanvas2D.prototype.strokeTolerance = 0;\n\n/**\n * Variable: minStrokeWidth\n * \n * Minimum stroke width for output.\n */\nmxSvgCanvas2D.prototype.minStrokeWidth = 1;\n\n/**\n * Variable: refCount\n * \n * Local counter for references in SVG export.\n */\nmxSvgCanvas2D.prototype.refCount = 0;\n\n/**\n * Variable: blockImagePointerEvents\n * \n * Specifies if a transparent rectangle should be added on top of images to absorb\n * all pointer events. Default is false. This is only needed in Firefox to disable\n * control-clicks on images.\n */\nmxSvgCanvas2D.prototype.blockImagePointerEvents = false;\n\n/**\n * Variable: lineHeightCorrection\n * \n * Correction factor for <mxConstants.LINE_HEIGHT> in HTML output. Default is 1.\n */\nmxSvgCanvas2D.prototype.lineHeightCorrection = 1;\n\n/**\n * Variable: pointerEventsValue\n * \n * Default value for active pointer events. Default is all.\n */\nmxSvgCanvas2D.prototype.pointerEventsValue = 'all';\n\n/**\n * Variable: fontMetricsPadding\n * \n * Padding to be added for text that is not wrapped to account for differences\n * in font metrics on different platforms in pixels. Default is 10.\n */\nmxSvgCanvas2D.prototype.fontMetricsPadding = 10;\n\n/**\n * Variable: cacheOffsetSize\n * \n * Specifies if offsetWidth and offsetHeight should be cached. Default is true.\n * This is used to speed up repaint of text in <updateText>.\n */\nmxSvgCanvas2D.prototype.cacheOffsetSize = true;\n\n/**\n * Function: format\n * \n * Rounds all numbers to 2 decimal points.\n */\nmxSvgCanvas2D.prototype.format = function(value)\n{\n\treturn parseFloat(parseFloat(value).toFixed(2));\n};\n\n/**\n * Function: getBaseUrl\n * \n * Returns the URL of the page without the hash part. This needs to use href to\n * include any search part with no params (ie question mark alone). This is a\n * workaround for the fact that window.location.search is empty if there is\n * no search string behind the question mark.\n */\nmxSvgCanvas2D.prototype.getBaseUrl = function()\n{\n\tvar href = window.location.href;\n\tvar hash = href.lastIndexOf('#');\n\t\n\tif (hash > 0)\n\t{\n\t\thref = href.substring(0, hash);\n\t}\n\t\n\treturn href;\n};\n\n/**\n * Function: reset\n * \n * Returns any offsets for rendering pixels.\n */\nmxSvgCanvas2D.prototype.reset = function()\n{\n\tmxAbstractCanvas2D.prototype.reset.apply(this, arguments);\n\tthis.gradients = [];\n};\n\n/**\n * Function: createStyle\n * \n * Creates the optional style section.\n */\nmxSvgCanvas2D.prototype.createStyle = function(x)\n{\n\tvar style = this.createElement('style');\n\tstyle.setAttribute('type', 'text/css');\n\tmxUtils.write(style, 'svg{font-family:' + mxConstants.DEFAULT_FONTFAMILY +\n\t\t\t';font-size:' + mxConstants.DEFAULT_FONTSIZE +\n\t\t\t';fill:none;stroke-miterlimit:10}');\n\t\n\treturn style;\n};\n\n/**\n * Function: createElement\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createElement = function(tagName, namespace)\n{\n\tif (this.root.ownerDocument.createElementNS != null)\n\t{\n\t\treturn this.root.ownerDocument.createElementNS(namespace || mxConstants.NS_SVG, tagName);\n\t}\n\telse\n\t{\n\t\tvar elt = this.root.ownerDocument.createElement(tagName);\n\t\t\n\t\tif (namespace != null)\n\t\t{\n\t\t\telt.setAttribute('xmlns', namespace);\n\t\t}\n\t\t\n\t\treturn elt;\n\t}\n};\n\n/**\n * Function: getAlternateContent\n * \n * Returns the alternate content for the given foreignObject.\n */\nmxSvgCanvas2D.prototype.createAlternateContent = function(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation)\n{\n\tif (this.foAltText != null)\n\t{\n\t\tvar s = this.state;\n\t\tvar alt = this.createElement('text');\n\t\talt.setAttribute('x', Math.round(w / 2));\n\t\talt.setAttribute('y', Math.round((h + s.fontSize) / 2));\n\t\talt.setAttribute('fill', s.fontColor || 'black');\n\t\talt.setAttribute('text-anchor', 'middle');\n\t\talt.setAttribute('font-size', s.fontSize + 'px');\n\t\talt.setAttribute('font-family', s.fontFamily);\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t{\n\t\t\talt.setAttribute('font-weight', 'bold');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t{\n\t\t\talt.setAttribute('font-style', 'italic');\n\t\t}\n\t\t\n\t\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t\t{\n\t\t\talt.setAttribute('text-decoration', 'underline');\n\t\t}\n\t\t\n\t\tmxUtils.write(alt, this.foAltText);\n\t\t\n\t\treturn alt;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: createGradientId\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createGradientId = function(start, end, alpha1, alpha2, direction)\n{\n\t// Removes illegal characters from gradient ID\n\tif (start.charAt(0) == '#')\n\t{\n\t\tstart = start.substring(1);\n\t}\n\t\n\tif (end.charAt(0) == '#')\n\t{\n\t\tend = end.substring(1);\n\t}\n\t\n\t// Workaround for gradient IDs not working in Safari 5 / Chrome 6\n\t// if they contain uppercase characters\n\tstart = start.toLowerCase() + '-' + alpha1;\n\tend = end.toLowerCase() + '-' + alpha2;\n\n\t// Wrong gradient directions possible?\n\tvar dir = null;\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tdir = 's';\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tdir = 'e';\n\t}\n\telse\n\t{\n\t\tvar tmp = start;\n\t\tstart = end;\n\t\tend = tmp;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tdir = 's';\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tdir = 'e';\n\t\t}\n\t}\n\t\n\treturn 'mx-gradient-' + start + '-' + end + '-' + dir;\n};\n\n/**\n * Function: getSvgGradient\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.getSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar id = this.createGradientId(start, end, alpha1, alpha2, direction);\n\tvar gradient = this.gradients[id];\n\t\n\tif (gradient == null)\n\t{\n\t\tvar svg = this.root.ownerSVGElement;\n\n\t\tvar counter = 0;\n\t\tvar tmpId = id + '-' + counter;\n\n\t\tif (svg != null)\n\t\t{\n\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t\n\t\t\twhile (gradient != null && gradient.ownerSVGElement != svg)\n\t\t\t{\n\t\t\t\ttmpId = id + '-' + counter++;\n\t\t\t\tgradient = svg.ownerDocument.getElementById(tmpId);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses shorter IDs for export\n\t\t\ttmpId = 'id' + (++this.refCount);\n\t\t}\n\t\t\n\t\tif (gradient == null)\n\t\t{\n\t\t\tgradient = this.createSvgGradient(start, end, alpha1, alpha2, direction);\n\t\t\tgradient.setAttribute('id', tmpId);\n\t\t\t\n\t\t\tif (this.defs != null)\n\t\t\t{\n\t\t\t\tthis.defs.appendChild(gradient);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsvg.appendChild(gradient);\n\t\t\t}\n\t\t}\n\n\t\tthis.gradients[id] = gradient;\n\t}\n\n\treturn gradient.getAttribute('id');\n};\n\n/**\n * Function: createSvgGradient\n * \n * Creates the given SVG gradient.\n */\nmxSvgCanvas2D.prototype.createSvgGradient = function(start, end, alpha1, alpha2, direction)\n{\n\tvar gradient = this.createElement('linearGradient');\n\tgradient.setAttribute('x1', '0%');\n\tgradient.setAttribute('y1', '0%');\n\tgradient.setAttribute('x2', '0%');\n\tgradient.setAttribute('y2', '0%');\n\t\n\tif (direction == null || direction == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tgradient.setAttribute('y2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_EAST)\n\t{\n\t\tgradient.setAttribute('x2', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_NORTH)\n\t{\n\t\tgradient.setAttribute('y1', '100%');\n\t}\n\telse if (direction == mxConstants.DIRECTION_WEST)\n\t{\n\t\tgradient.setAttribute('x1', '100%');\n\t}\n\t\n\tvar op = (alpha1 < 1) ? ';stop-opacity:' + alpha1 : '';\n\t\n\tvar stop = this.createElement('stop');\n\tstop.setAttribute('offset', '0%');\n\tstop.setAttribute('style', 'stop-color:' + start + op);\n\tgradient.appendChild(stop);\n\t\n\top = (alpha2 < 1) ? ';stop-opacity:' + alpha2 : '';\n\t\n\tstop = this.createElement('stop');\n\tstop.setAttribute('offset', '100%');\n\tstop.setAttribute('style', 'stop-color:' + end + op);\n\tgradient.appendChild(stop);\n\t\n\treturn gradient;\n};\n\n/**\n * Function: addNode\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'path')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.setAttribute('d', this.path.join(' '));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tthis.updateFill();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\t// Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=814952\n\t\t\tif (node.nodeName == 'ellipse' && mxClient.IS_FF)\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'transparent');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode.setAttribute('fill', 'none');\n\t\t\t}\n\t\t\t\n\t\t\t// Sets the actual filled state for stroke tolerance\n\t\t\tfilled = false;\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tthis.updateStroke();\n\t\t}\n\t\telse if (!this.styleEnabled)\n\t\t{\n\t\t\tnode.setAttribute('stroke', 'none');\n\t\t}\n\t\t\n\t\tif (s.transform != null && s.transform.length > 0)\n\t\t{\n\t\t\tnode.setAttribute('transform', s.transform);\n\t\t}\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node));\n\t\t}\n\t\n\t\t// Adds stroke tolerance\n\t\tif (this.strokeTolerance > 0 && !filled)\n\t\t{\n\t\t\tthis.root.appendChild(this.createTolerance(node));\n\t\t}\n\n\t\t// Adds pointer events\n\t\tif (this.pointerEvents)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', this.pointerEventsValue);\n\t\t}\n\t\t// Enables clicks for nodes inside a link element\n\t\telse if (!this.pointerEvents && this.originalRoot == null)\n\t\t{\n\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t}\n\t\t\n\t\t// Removes invisible nodes from output if they don't handle events\n\t\tif ((node.nodeName != 'rect' && node.nodeName != 'path' && node.nodeName != 'ellipse') ||\n\t\t\t(node.getAttribute('fill') != 'none' && node.getAttribute('fill') != 'transparent') ||\n\t\t\tnode.getAttribute('stroke') != 'none' || node.getAttribute('pointer-events') != 'none')\n\t\t{\n\t\t\t// LATER: Update existing DOM for performance\t\t\n\t\t\tthis.root.appendChild(node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n};\n\n/**\n * Function: updateFill\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateFill = function()\n{\n\tvar s = this.state;\n\t\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('fill-opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tif (s.fillColor != null)\n\t{\n\t\tif (s.gradientColor != null)\n\t\t{\n\t\t\tvar id = this.getSvgGradient(String(s.fillColor), String(s.gradientColor),\n\t\t\t\ts.gradientFillAlpha, s.gradientAlpha, s.gradientDirection);\n\t\t\t\n\t\t\tif (!mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t\t{\n\t\t\t\t// Workaround for potential base tag and brackets must be escaped\n\t\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\t\tthis.node.setAttribute('fill', 'url(' + base + '#' + id + ')');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.node.setAttribute('fill', 'url(#' + id + ')');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.node.setAttribute('fill', String(s.fillColor).toLowerCase());\n\t\t}\n\t}\n};\n\n/**\n * Function: getCurrentStrokeWidth\n * \n * Returns the current stroke width (>= 1), ie. max(1, this.format(this.state.strokeWidth * this.state.scale)).\n */\nmxSvgCanvas2D.prototype.getCurrentStrokeWidth = function()\n{\n\treturn Math.max(this.minStrokeWidth, Math.max(0.01, this.format(this.state.strokeWidth * this.state.scale)));\n};\n\n/**\n * Function: updateStroke\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStroke = function()\n{\n\tvar s = this.state;\n\n\tthis.node.setAttribute('stroke', String(s.strokeColor).toLowerCase());\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tthis.node.setAttribute('stroke-opacity', s.alpha * s.strokeAlpha);\n\t}\n\t\n\tvar sw = this.getCurrentStrokeWidth();\n\t\n\tif (sw != 1)\n\t{\n\t\tthis.node.setAttribute('stroke-width', sw);\n\t}\n\t\n\tif (this.node.nodeName == 'path')\n\t{\n\t\tthis.updateStrokeAttributes();\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tthis.node.setAttribute('stroke-dasharray', this.createDashPattern(\n\t\t\t((s.fixDash) ? 1 : s.strokeWidth) * s.scale));\n\t}\n};\n\n/**\n * Function: updateStrokeAttributes\n * \n * Transfers the stroke attributes from <state> to <node>.\n */\nmxSvgCanvas2D.prototype.updateStrokeAttributes = function()\n{\n\tvar s = this.state;\n\t\n\t// Linejoin miter is default in SVG\n\tif (s.lineJoin != null && s.lineJoin != 'miter')\n\t{\n\t\tthis.node.setAttribute('stroke-linejoin', s.lineJoin);\n\t}\n\t\n\tif (s.lineCap != null)\n\t{\n\t\t// flat is called butt in SVG\n\t\tvar value = s.lineCap;\n\t\t\n\t\tif (value == 'flat')\n\t\t{\n\t\t\tvalue = 'butt';\n\t\t}\n\t\t\n\t\t// Linecap butt is default in SVG\n\t\tif (value != 'butt')\n\t\t{\n\t\t\tthis.node.setAttribute('stroke-linecap', value);\n\t\t}\n\t}\n\t\n\t// Miterlimit 10 is default in our document\n\tif (s.miterLimit != null && (!this.styleEnabled || s.miterLimit != 10))\n\t{\n\t\tthis.node.setAttribute('stroke-miterlimit', s.miterLimit);\n\t}\n};\n\n/**\n * Function: createDashPattern\n * \n * Creates the SVG dash pattern for the given state.\n */\nmxSvgCanvas2D.prototype.createDashPattern = function(scale)\n{\n\tvar pat = [];\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar dash = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (dash.length > 0)\n\t\t{\n\t\t\tfor (var i = 0; i < dash.length; i++)\n\t\t\t{\n\t\t\t\tpat[i] = Number(dash[i]) * scale;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn pat.join(' ');\n};\n\n/**\n * Function: createTolerance\n * \n * Creates a hit detection tolerance shape for the given node.\n */\nmxSvgCanvas2D.prototype.createTolerance = function(node)\n{\n\tvar tol = node.cloneNode(true);\n\tvar sw = parseFloat(tol.getAttribute('stroke-width') || 1) + this.strokeTolerance;\n\ttol.setAttribute('pointer-events', 'stroke');\n\ttol.setAttribute('visibility', 'hidden');\n\ttol.removeAttribute('stroke-dasharray');\n\ttol.setAttribute('stroke-width', sw);\n\ttol.setAttribute('fill', 'none');\n\t\n\t// Workaround for Opera ignoring the visiblity attribute above while\n\t// other browsers need a stroke color to perform the hit-detection but\n\t// do not ignore the visibility attribute. Side-effect is that Opera's\n\t// hit detection for horizontal/vertical edges seems to ignore the tol.\n\ttol.setAttribute('stroke', (mxClient.IS_OT) ? 'none' : 'white');\n\t\n\treturn tol;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxSvgCanvas2D.prototype.createShadow = function(node)\n{\n\tvar shadow = node.cloneNode(true);\n\tvar s = this.state;\n\n\t// Firefox uses transparent for no fill in ellipses\n\tif (shadow.getAttribute('fill') != 'none' && (!mxClient.IS_FF || shadow.getAttribute('fill') != 'transparent'))\n\t{\n\t\tshadow.setAttribute('fill', s.shadowColor);\n\t}\n\t\n\tif (shadow.getAttribute('stroke') != 'none')\n\t{\n\t\tshadow.setAttribute('stroke', s.shadowColor);\n\t}\n\n\tshadow.setAttribute('transform', 'translate(' + this.format(s.shadowDx * s.scale) +\n\t\t',' + this.format(s.shadowDy * s.scale) + ')' + (s.transform || ''));\n\tshadow.setAttribute('opacity', s.shadowAlpha);\n\t\n\treturn shadow;\n};\n\n/**\n * Function: setLink\n * \n * Experimental implementation for hyperlinks.\n */\nmxSvgCanvas2D.prototype.setLink = function(link)\n{\n\tif (link == null)\n\t{\n\t\tthis.root = this.originalRoot;\n\t}\n\telse\n\t{\n\t\tthis.originalRoot = this.root;\n\t\t\n\t\tvar node = this.createElement('a');\n\t\t\n\t\t// Workaround for implicit namespace handling in HTML5 export, IE adds NS1 namespace so use code below\n\t\t// in all IE versions except quirks mode. KNOWN: Adds xlink namespace to each image tag in output.\n\t\tif (node.setAttributeNS == null || (this.root.ownerDocument != document && document.documentMode == null))\n\t\t{\n\t\t\tnode.setAttribute('xlink:href', link);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', link);\n\t\t}\n\t\t\n\t\tthis.root.appendChild(node);\n\t\tthis.root = node;\n\t}\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxSvgCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (theta != 0 || flipH || flipV)\n\t{\n\t\tvar s = this.state;\n\t\tcx += s.dx;\n\t\tcy += s.dy;\n\t\n\t\tcx *= s.scale;\n\t\tcy *= s.scale;\n\n\t\ts.transform = s.transform || '';\n\t\t\n\t\t// This implementation uses custom scale/translate and built-in rotation\n\t\t// Rotation state is part of the AffineTransform in state.transform\n\t\tif (flipH && flipV)\n\t\t{\n\t\t\ttheta += 180;\n\t\t}\n\t\telse if (flipH != flipV)\n\t\t{\n\t\t\tvar tx = (flipH) ? cx : 0;\n\t\t\tvar sx = (flipH) ? -1 : 1;\n\t\n\t\t\tvar ty = (flipV) ? cy : 0;\n\t\t\tvar sy = (flipV) ? -1 : 1;\n\n\t\t\ts.transform += 'translate(' + this.format(tx) + ',' + this.format(ty) + ')' +\n\t\t\t\t'scale(' + this.format(sx) + ',' + this.format(sy) + ')' +\n\t\t\t\t'translate(' + this.format(-tx) + ',' + this.format(-ty) + ')';\n\t\t}\n\t\t\n\t\tif (flipH ? !flipV : flipV)\n\t\t{\n\t\t\ttheta *= -1;\n\t\t}\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\ts.transform += 'rotate(' + this.format(theta) + ',' + this.format(cx) + ',' + this.format(cy) + ')';\n\t\t}\n\t\t\n\t\ts.rotation = s.rotation + theta;\n\t\ts.rotationCx = cx;\n\t\ts.rotationCy = cy;\n\t}\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxSvgCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createElement('path');\n};\n\n/**\n * Function: rect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('rect');\n\tn.setAttribute('x', this.format((x + s.dx) * s.scale));\n\tn.setAttribute('y', this.format((y + s.dy) * s.scale));\n\tn.setAttribute('width', this.format(w * s.scale));\n\tn.setAttribute('height', this.format(h * s.scale));\n\t\n\tthis.node = n;\n};\n\n/**\n * Function: roundrect\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.rect(x, y, w, h);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.node.setAttribute('rx', this.format(dx * this.state.scale));\n\t}\n\t\n\tif (dy > 0)\n\t{\n\t\tthis.node.setAttribute('ry', this.format(dy * this.state.scale));\n\t}\n};\n\n/**\n * Function: ellipse\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createElement('ellipse');\n\t// No rounding for consistent output with 1.x\n\tn.setAttribute('cx', this.format((x + w / 2 + s.dx) * s.scale));\n\tn.setAttribute('cy', this.format((y + h / 2 + s.dy) * s.scale));\n\tn.setAttribute('rx', w / 2 * s.scale);\n\tn.setAttribute('ry', h / 2 * s.scale);\n\tthis.node = n;\n};\n\n/**\n * Function: image\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tsrc = this.converter.convert(src);\n\t\n\t// LATER: Add option for embedding images as base64.\n\taspect = (aspect != null) ? aspect : true;\n\tflipH = (flipH != null) ? flipH : false;\n\tflipV = (flipV != null) ? flipV : false;\n\t\n\tvar s = this.state;\n\tx += s.dx;\n\ty += s.dy;\n\t\n\tvar node = this.createElement('image');\n\tnode.setAttribute('x', this.format(x * s.scale) + this.imageOffset);\n\tnode.setAttribute('y', this.format(y * s.scale) + this.imageOffset);\n\tnode.setAttribute('width', this.format(w * s.scale));\n\tnode.setAttribute('height', this.format(h * s.scale));\n\t\n\t// Workaround for missing namespace support\n\tif (node.setAttributeNS == null)\n\t{\n\t\tnode.setAttribute('xlink:href', src);\n\t}\n\telse\n\t{\n\t\tnode.setAttributeNS(mxConstants.NS_XLINK, 'xlink:href', src);\n\t}\n\t\n\tif (!aspect)\n\t{\n\t\tnode.setAttribute('preserveAspectRatio', 'none');\n\t}\n\n\tif (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha * s.fillAlpha);\n\t}\n\t\n\tvar tr = this.state.transform || '';\n\t\n\tif (flipH || flipV)\n\t{\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\tif (flipH)\n\t\t{\n\t\t\tsx = -1;\n\t\t\tdx = -w - 2 * x;\n\t\t}\n\t\t\n\t\tif (flipV)\n\t\t{\n\t\t\tsy = -1;\n\t\t\tdy = -h - 2 * y;\n\t\t}\n\t\t\n\t\t// Adds image tansformation to existing transform\n\t\ttr += 'scale(' + sx + ',' + sy + ')translate(' + (dx * s.scale) + ',' + (dy * s.scale) + ')';\n\t}\n\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (!this.pointerEvents)\n\t{\n\t\tnode.setAttribute('pointer-events', 'none');\n\t}\n\t\n\tthis.root.appendChild(node);\n\t\n\t// Disables control-clicks on images in Firefox to open in new tab\n\t// by putting a rect in the foreground that absorbs all events and\n\t// disabling all pointer-events on the original image tag.\n\tif (this.blockImagePointerEvents)\n\t{\n\t\tnode.setAttribute('style', 'pointer-events:none');\n\t\t\n\t\tnode = this.createElement('rect');\n\t\tnode.setAttribute('visibility', 'hidden');\n\t\tnode.setAttribute('pointer-events', 'fill');\n\t\tnode.setAttribute('x', this.format(x * s.scale));\n\t\tnode.setAttribute('y', this.format(y * s.scale));\n\t\tnode.setAttribute('width', this.format(w * s.scale));\n\t\tnode.setAttribute('height', this.format(h * s.scale));\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: convertHtml\n * \n * Converts the given HTML string to XHTML.\n */\nmxSvgCanvas2D.prototype.convertHtml = function(val)\n{\n\tif (this.useDomParser)\n\t{\n\t\tvar doc = new DOMParser().parseFromString(val, 'text/html');\n\n\t\tif (doc != null)\n\t\t{\n\t\t\tval = new XMLSerializer().serializeToString(doc.body);\n\t\t\t\n\t\t\t// Extracts body content from DOM\n\t\t\tif (val.substring(0, 5) == '<body')\n\t\t\t{\n\t\t\t\tval = val.substring(val.indexOf('>', 5) + 1);\n\t\t\t}\n\t\t\t\n\t\t\tif (val.substring(val.length - 7, val.length) == '</body>')\n\t\t\t{\n\t\t\t\tval = val.substring(0, val.length - 7);\n\t\t\t}\n\t\t}\n\t}\n\telse if (document.implementation != null && document.implementation.createDocument != null)\n\t{\n\t\tvar xd = document.implementation.createDocument('http://www.w3.org/1999/xhtml', 'html', null);\n\t\tvar xb = xd.createElement('body');\n\t\txd.documentElement.appendChild(xb);\n\t\t\n\t\tvar div = document.createElement('div');\n\t\tdiv.innerHTML = val;\n\t\tvar child = div.firstChild;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar next = child.nextSibling;\n\t\t\txb.appendChild(xd.adoptNode(child));\n\t\t\tchild = next;\n\t\t}\n\t\t\n\t\treturn xb.innerHTML;\n\t}\n\telse\n\t{\n\t\tvar ta = document.createElement('textarea');\n\t\t\n\t\t// Handles special HTML entities < and > and double escaping\n\t\t// and converts unclosed br, hr and img tags to XHTML\n\t\t// LATER: Convert all unclosed tags\n\t\tta.innerHTML = val.replace(/&amp;/g, '&amp;amp;').\n\t\t\treplace(/&#60;/g, '&amp;lt;').replace(/&#62;/g, '&amp;gt;').\n\t\t\treplace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;').\n\t\t\treplace(/</g, '&lt;').replace(/>/g, '&gt;');\n\t\tval = ta.value.replace(/&/g, '&amp;').replace(/&amp;lt;/g, '&lt;').\n\t\t\treplace(/&amp;gt;/g, '&gt;').replace(/&amp;amp;/g, '&amp;').\n\t\t\treplace(/<br>/g, '<br />').replace(/<hr>/g, '<hr />').\n\t\t\treplace(/(<img[^>]+)>/gm, \"$1 />\");\n\t}\n\t\n\treturn val;\n};\n\n/**\n * Function: createDiv\n * \n * Private helper function to create SVG elements\n */\nmxSvgCanvas2D.prototype.createDiv = function(str, align, valign, style, overflow, whiteSpace)\n{\n\tvar s = this.state;\n\n\t// Inline block for rendering HTML background over SVG in Safari\n\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t(mxConstants.LINE_HEIGHT * this.lineHeightCorrection);\n\t\n\tstyle = 'display:inline-block;font-size:' + s.fontSize + 'px;font-family:' + s.fontFamily +\n\t\t';color:' + s.fontColor + ';line-height:' + lh + ';' + style;\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle += 'font-weight:bold;';\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle += 'font-style:italic;';\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle += 'text-decoration:underline;';\n\t}\n\t\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle += 'text-align:center;';\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle += 'text-align:right;';\n\t}\n\telse\n\t{\n\t\tstyle += 'text-align:left;';\n\t}\n\n\tvar css = '';\n\t\n\tif (s.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + mxUtils.htmlEntities(s.fontBackgroundColor) + ';';\n\t}\n\t\n\tif (s.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(s.fontBorderColor) + ';';\n\t}\n\t\n\tvar val = str;\n\t\n\tif (!mxUtils.isNode(val))\n\t{\n\t\tval = this.convertHtml(val);\n\t\t\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\t// Workaround for no wrapping in HTML canvas for image\n\t\t\t// export if the inner HTML contains a DIV with width\n\t\t\tif (whiteSpace != null)\n\t\t\t{\n\t\t\t\tcss += 'white-space:' + whiteSpace + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Inner div always needed to measure wrapped text\n\t\t\tval = '<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display:inline-block;text-align:inherit;text-decoration:inherit;' + css + '\">' + val + '</div>';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle += css;\n\t\t}\n\t}\n\n\t// Uses DOM API where available. This cannot be used in IE to avoid\n\t// an opening and two (!) closing TBODY tags being added to tables.\n\tif (!mxClient.IS_IE && document.createElementNS)\n\t{\n\t\tvar div = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n\t\tdiv.setAttribute('style', style);\n\t\t\n\t\tif (mxUtils.isNode(val))\n\t\t{\n\t\t\t// Creates a copy for export\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tdiv.appendChild(val.cloneNode(true));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.appendChild(val);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.innerHTML = val;\n\t\t}\n\t\t\n\t\treturn div;\n\t}\n\telse\n\t{\n\t\t// Serializes for export\n\t\tif (mxUtils.isNode(val) && this.root.ownerDocument != document)\n\t\t{\n\t\t\tval = val.outerHTML;\n\t\t}\n\n\t\t// NOTE: FF 3.6 crashes if content CSS contains \"height:100%\"\n\t\treturn mxUtils.parseXml('<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"' + style + \n\t\t\t'\">' + val + '</div>').documentElement;\n\t}\n};\n\n/**\n * Invalidates the cached offset size for the given node.\n */\nmxSvgCanvas2D.prototype.invalidateCachedOffsetSize = function(node)\n{\n\tdelete node.firstChild.mxCachedOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetWidth;\n\tdelete node.firstChild.mxCachedFinalOffsetHeight;\n};\n\n/**\n * Updates existing DOM nodes for text rendering. LATER: Merge common parts with text function below.\n */\nmxSvgCanvas2D.prototype.updateText = function(x, y, w, h, align, valign, wrap, overflow, clip, rotation, node)\n{\n\tif (node != null && node.firstChild != null && node.firstChild.firstChild != null &&\n\t\tnode.firstChild.firstChild.firstChild != null)\n\t{\n\t\t// Uses outer group for opacity and transforms to\n\t\t// fix rendering order in Chrome\n\t\tvar group = node.firstChild;\n\t\tvar fo = group.firstChild;\n\t\tvar div = fo.firstChild;\n\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\tdiv.style.maxWidth = Math.round(w) + 'px';\n\t\t}\n\t\telse if (overflow == 'fill')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\tdiv.style.height = Math.round(h + 1) + 'px';\n\t\t}\n\t\telse if (overflow == 'width')\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t\t\n\t\t\tif (h > 0)\n\t\t\t{\n\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t}\n\t\t}\n\n\t\tif (wrap && w > 0)\n\t\t{\n\t\t\tdiv.style.width = Math.round(w + 1) + 'px';\n\t\t}\n\t\t\n\t\t// Code that depends on the size which is computed after\n\t\t// the element was added to the DOM.\n\t\tvar ow = 0;\n\t\tvar oh = 0;\n\t\t\n\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\tvar padX = 0;\n\t\tvar padY = 2;\n\n\t\tvar sizeDiv = div;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t}\n\t\t\n\t\tvar tmp = (group.mxCachedOffsetWidth != null) ? group.mxCachedOffsetWidth : sizeDiv.offsetWidth;\n\t\tow = tmp + padX;\n\n\t\t// Recomputes the height of the element for wrapped width\n\t\tif (wrap && overflow != 'fill')\n\t\t{\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\t\t\t\n\t\t\tdiv.style.width = Math.round(ow + 1) + 'px';\n\t\t}\n\n\t\tow = (group.mxCachedFinalOffsetWidth != null) ? group.mxCachedFinalOffsetWidth : sizeDiv.offsetWidth;\n\t\toh = (group.mxCachedFinalOffsetHeight != null) ? group.mxCachedFinalOffsetHeight : sizeDiv.offsetHeight;\n\t\t\n\t\tif (this.cacheOffsetSize)\n\t\t{\n\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t}\n\t\t\n\t\tow += padX;\n\t\toh -= 2;\n\t\t\n\t\tif (clip)\n\t\t{\n\t\t\toh = Math.min(oh, h);\n\t\t\tow = Math.min(ow, w);\n\t\t}\n\n\t\tif (overflow == 'width')\n\t\t{\n\t\t\th = oh;\n\t\t}\n\t\telse if (overflow != 'fill')\n\t\t{\n\t\t\tw = ow;\n\t\t\th = oh;\n\t\t}\n\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tdx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tdx -= w;\n\t\t}\n\t\t\n\t\tx += dx;\n\t\t\n\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tdy -= h / 2;\n\t\t}\n\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy -= h;\n\t\t}\n\t\t\n\t\t// Workaround for rendering offsets\n\t\t// TODO: Check if export needs these fixes, too\n\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t{\n\t\t\tdy -= 2;\n\t\t}\n\t\t\n\t\ty += dy;\n\n\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t{\n\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\ty = pt.y - h * s.scale / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx *= s.scale;\n\t\t\ty *= s.scale;\n\t\t}\n\n\t\tif (rotation != 0)\n\t\t{\n\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t}\n\n\t\tgroup.setAttribute('transform', 'translate(' + Math.round(x) + ',' + Math.round(y) + ')' + tr);\n\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t}\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Note that HTML markup is only supported if\n * foreignObject is supported and <foEnabled> is true. (This means IE9 and later\n * does currently not support HTML text as part of shapes.)\n */\nmxSvgCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\trotation = (rotation != null) ? rotation : 0;\n\t\t\n\t\tvar s = this.state;\n\t\tx += s.dx;\n\t\ty += s.dy;\n\t\t\n\t\tif (this.foEnabled && format == 'html')\n\t\t{\n\t\t\tvar style = 'vertical-align:top;';\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tstyle += 'overflow:hidden;max-height:' + Math.round(h) + 'px;max-width:' + Math.round(w) + 'px;';\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;height:' + Math.round(h + 1) + 'px;overflow:hidden;';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;';\n\t\t\t\t\n\t\t\t\tif (h > 0)\n\t\t\t\t{\n\t\t\t\t\tstyle += 'max-height:' + Math.round(h) + 'px;overflow:hidden;';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tstyle += 'width:' + Math.round(w + 1) + 'px;white-space:normal;word-wrap:' +\n\t\t\t\t\tmxConstants.WORD_WRAP + ';';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstyle += 'white-space:nowrap;';\n\t\t\t}\n\t\t\t\n\t\t\t// Uses outer group for opacity and transforms to\n\t\t\t// fix rendering order in Chrome\n\t\t\tvar group = this.createElement('g');\n\t\t\t\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\n\t\t\tvar fo = this.createElement('foreignObject');\n\t\t\tfo.setAttribute('style', 'overflow:visible;');\n\t\t\tfo.setAttribute('pointer-events', (this.pointerEvents) ? this.pointerEventsValue : 'none');\n\t\t\t\n\t\t\tvar div = this.createDiv(str, align, valign, style, overflow, (wrap && w > 0) ? 'normal' : null);\n\t\t\t\n\t\t\t// Ignores invalid XHTML labels\n\t\t\tif (div == null)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tgroup.appendChild(fo);\n\t\t\tthis.root.appendChild(group);\n\t\t\t\n\t\t\t// Code that depends on the size which is computed after\n\t\t\t// the element was added to the DOM.\n\t\t\tvar ow = 0;\n\t\t\tvar oh = 0;\n\t\t\t\n\t\t\t// Padding avoids clipping on border and wrapping for differing font metrics on platforms\n\t\t\tvar padX = 2;\n\t\t\tvar padY = 2;\n\n\t\t\t// NOTE: IE is always export as it does not support foreign objects\n\t\t\tif (mxClient.IS_IE && (document.documentMode == 9 || !mxClient.IS_SVG))\n\t\t\t{\n\t\t\t\t// Handles non-standard namespace for getting size in IE\n\t\t\t\tvar clone = document.createElement('div');\n\t\t\t\t\n\t\t\t\tclone.style.cssText = div.getAttribute('style');\n\t\t\t\tclone.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tclone.style.position = 'absolute';\n\t\t\t\tclone.style.visibility = 'hidden';\n\n\t\t\t\t// Inner DIV is needed for text measuring\n\t\t\t\tvar div2 = document.createElement('div');\n\t\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\t\tdiv2.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv2.innerHTML = (mxUtils.isNode(str)) ? str.outerHTML : str;\n\t\t\t\tclone.appendChild(div2);\n\n\t\t\t\tdocument.body.appendChild(clone);\n\n\t\t\t\t// Workaround for different box models\n\t\t\t\tif (document.documentMode != 8 && document.documentMode != 9 && s.fontBorderColor != null)\n\t\t\t\t{\n\t\t\t\t\tpadX += 2;\n\t\t\t\t\tpadY += 2;\n\t\t\t\t}\n\n\t\t\t\tif (wrap && w > 0)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div2.offsetWidth;\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for adding padding twice in IE8/IE9 standards mode if label is wrapped\n\t\t\t\t\tpadDx = 0;\n\t\t\t\t\t\n\t\t\t\t\t// For export, if no wrapping occurs, we add a large padding to make\n\t\t\t\t\t// sure there is no wrapping even if the text metrics are different.\n\t\t\t\t\t// This adds support for text metrics on different operating systems.\n\t\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document && overflow != 'fill')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ws = clone.style.whiteSpace;\n\t\t\t\t\t\tdiv2.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp < div2.offsetWidth)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tclone.style.whiteSpace = ws;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tclone.style.width = tmp + 'px';\n\t\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX + padDx;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t\t\n\t\t\t\t\t// Overrides the width of the DIV via XML DOM by using the\n\t\t\t\t\t// clone DOM style, getting the CSS text for that and\n\t\t\t\t\t// then setting that on the DIV via setAttribute\n\t\t\t\t\tclone.style.display = 'inline-block';\n\t\t\t\t\tclone.style.position = '';\n\t\t\t\t\tclone.style.visibility = '';\n\t\t\t\t\tclone.style.width = ow + 'px';\n\t\t\t\t\t\n\t\t\t\t\tdiv.setAttribute('style', clone.style.cssText);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Padding avoids clipping on border\n\t\t\t\t\tow = div2.offsetWidth + padX;\n\t\t\t\t\toh = div2.offsetHeight + padY;\n\t\t\t\t}\n\n\t\t\t\tclone.parentNode.removeChild(clone);\n\t\t\t\tfo.appendChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Uses document for text measuring during export\n\t\t\t\tif (this.root.ownerDocument != document)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t}\n\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\t\n\t\t\t\t\tif (wrap && div.style.wordWrap == 'break-word')\n\t\t\t\t\t{\n\t\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\t\n\t\t\t\t// Workaround for text measuring in hidden containers\n\t\t\t\tif (tmp == 0 && div.parentNode == fo)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\t\n\t\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedOffsetWidth = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Disables wrapping if text is not wrapped for given width\n\t\t\t\tif (!clip && wrap && w > 0 && this.root.ownerDocument != document &&\n\t\t\t\t\toverflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tvar ws = div.style.whiteSpace;\n\t\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\n\t\t\t\t\tif (tmp < sizeDiv.offsetWidth)\n\t\t\t\t\t{\n\t\t\t\t\t\tdiv.style.whiteSpace = ws;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tow = tmp + padX - 1;\n\n\t\t\t\t// Recomputes the height of the element for wrapped width\n\t\t\t\tif (wrap && overflow != 'fill' && overflow != 'width')\n\t\t\t\t{\n\t\t\t\t\tif (clip)\n\t\t\t\t\t{\n\t\t\t\t\t\tow = Math.min(ow, w);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdiv.style.width = ow + 'px';\n\t\t\t\t}\n\n\t\t\t\tow = sizeDiv.offsetWidth;\n\t\t\t\toh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (this.cacheOffsetSize)\n\t\t\t\t{\n\t\t\t\t\tgroup.mxCachedFinalOffsetWidth = ow;\n\t\t\t\t\tgroup.mxCachedFinalOffsetHeight = oh;\n\t\t\t\t}\n\n\t\t\t\toh -= padY;\n\t\t\t\t\n\t\t\t\tif (div.parentNode != fo)\n\t\t\t\t{\n\t\t\t\t\tfo.appendChild(div);\n\t\t\t\t\tdiv.style.visibility = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\toh = Math.min(oh, h);\n\t\t\t\tow = Math.min(ow, w);\n\t\t\t}\n\n\t\t\tif (overflow == 'width')\n\t\t\t{\n\t\t\t\th = oh;\n\t\t\t}\n\t\t\telse if (overflow != 'fill')\n\t\t\t{\n\t\t\t\tw = ow;\n\t\t\t\th = oh;\n\t\t\t}\n\n\t\t\tif (s.alpha < 1)\n\t\t\t{\n\t\t\t\tgroup.setAttribute('opacity', s.alpha);\n\t\t\t}\n\t\t\t\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tx += dx;\n\t\t\t\n\t\t\t// FIXME: LINE_HEIGHT not ideal for all text sizes, fix for export\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tdy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tdy -= h;\n\t\t\t}\n\t\t\t\n\t\t\t// Workaround for rendering offsets\n\t\t\t// TODO: Check if export needs these fixes, too\n\t\t\t//if (this.root.ownerDocument == document)\n\t\t\tif (overflow != 'fill' && mxClient.IS_FF && mxClient.IS_WIN)\n\t\t\t{\n\t\t\t\tdy -= 2;\n\t\t\t}\n\t\t\t\n\t\t\ty += dy;\n\n\t\t\tvar tr = (s.scale != 1) ? 'scale(' + s.scale + ')' : '';\n\n\t\t\tif (s.rotation != 0 && this.rotateHtml)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (s.rotation) + ',' + (w / 2) + ',' + (h / 2) + ')';\n\t\t\t\tvar pt = this.rotatePoint((x + w / 2) * s.scale, (y + h / 2) * s.scale,\n\t\t\t\t\ts.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\tx = pt.x - w * s.scale / 2;\n\t\t\t\ty = pt.y - h * s.scale / 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\ttr += 'rotate(' + (rotation) + ',' + (-dx) + ',' + (-dy) + ')';\n\t\t\t}\n\n\t\t\tgroup.setAttribute('transform', 'translate(' + (Math.round(x) + this.foOffset) + ',' +\n\t\t\t\t(Math.round(y) + this.foOffset) + ')' + tr);\n\t\t\tfo.setAttribute('width', Math.round(Math.max(1, w)));\n\t\t\tfo.setAttribute('height', Math.round(Math.max(1, h)));\n\t\t\t\n\t\t\t// Adds alternate content if foreignObject not supported in viewer\n\t\t\tif (this.root.ownerDocument != document)\n\t\t\t{\n\t\t\t\tvar alt = this.createAlternateContent(fo, x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation);\n\t\t\t\t\n\t\t\t\tif (alt != null)\n\t\t\t\t{\n\t\t\t\t\tfo.setAttribute('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility');\n\t\t\t\t\tvar sw = this.createElement('switch');\n\t\t\t\t\tsw.appendChild(fo);\n\t\t\t\t\tsw.appendChild(alt);\n\t\t\t\t\tgroup.appendChild(sw);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: createClip\n * \n * Creates a clip for the given coordinates.\n */\nmxSvgCanvas2D.prototype.createClip = function(x, y, w, h)\n{\n\tx = Math.round(x);\n\ty = Math.round(y);\n\tw = Math.round(w);\n\th = Math.round(h);\n\t\n\tvar id = 'mx-clip-' + x + '-' + y + '-' + w + '-' + h;\n\n\tvar counter = 0;\n\tvar tmp = id + '-' + counter;\n\t\n\t// Resolves ID conflicts\n\twhile (document.getElementById(tmp) != null)\n\t{\n\t\ttmp = id + '-' + (++counter);\n\t}\n\t\n\tclip = this.createElement('clipPath');\n\tclip.setAttribute('id', tmp);\n\t\n\tvar rect = this.createElement('rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\t\t\n\tclip.appendChild(rect);\n\t\n\treturn clip;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for\n * plain text and html for HTML markup.\n */\nmxSvgCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, overflow, clip, rotation, dir)\n{\n\trotation = (rotation != null) ? rotation : 0;\n\tvar s = this.state;\n\tvar size = s.fontSize;\n\tvar node = this.createElement('g');\n\tvar tr = s.transform || '';\n\tthis.updateFont(node);\n\t\n\t// Non-rotated text\n\tif (rotation != 0)\n\t{\n\t\ttr += 'rotate(' + rotation  + ',' + this.format(x * s.scale) + ',' + this.format(y * s.scale) + ')';\n\t}\n\t\n\tif (dir != null)\n\t{\n\t\tnode.setAttribute('direction', dir);\n\t}\n\n\tif (clip && w > 0 && h > 0)\n\t{\n\t\tvar cx = x;\n\t\tvar cy = y;\n\t\t\n\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tcx -= w / 2;\n\t\t}\n\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t{\n\t\t\tcx -= w;\n\t\t}\n\t\t\n\t\tif (overflow != 'fill')\n\t\t{\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\tcy -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tcy -= h;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// LATER: Remove spacing from clip rectangle\n\t\tvar c = this.createClip(cx * s.scale - 2, cy * s.scale - 2, w * s.scale + 4, h * s.scale + 4);\n\t\t\n\t\tif (this.defs != null)\n\t\t{\n\t\t\tthis.defs.appendChild(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Makes sure clip is removed with referencing node\n\t\t\tthis.root.appendChild(c);\n\t\t}\n\t\t\n\t\tif (!mxClient.IS_CHROMEAPP && !mxClient.IS_IE && !mxClient.IS_IE11 &&\n\t\t\t!mxClient.IS_EDGE && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Workaround for potential base tag\n\t\t\tvar base = this.getBaseUrl().replace(/([\\(\\)])/g, '\\\\$1');\n\t\t\tnode.setAttribute('clip-path', 'url(' + base + '#' + c.getAttribute('id') + ')');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.setAttribute('clip-path', 'url(#' + c.getAttribute('id') + ')');\n\t\t}\n\t}\n\n\t// Default is left\n\tvar anchor = (align == mxConstants.ALIGN_RIGHT) ? 'end' :\n\t\t\t\t\t(align == mxConstants.ALIGN_CENTER) ? 'middle' :\n\t\t\t\t\t'start';\n\n\t// Text-anchor start is default in SVG\n\tif (anchor != 'start')\n\t{\n\t\tnode.setAttribute('text-anchor', anchor);\n\t}\n\t\n\tif (!this.styleEnabled || size != mxConstants.DEFAULT_FONTSIZE)\n\t{\n\t\tnode.setAttribute('font-size', (size * s.scale) + 'px');\n\t}\n\t\n\tif (tr.length > 0)\n\t{\n\t\tnode.setAttribute('transform', tr);\n\t}\n\t\n\tif (s.alpha < 1)\n\t{\n\t\tnode.setAttribute('opacity', s.alpha);\n\t}\n\t\n\tvar lines = str.split('\\n');\n\tvar lh = Math.round(size * mxConstants.LINE_HEIGHT);\n\tvar textHeight = size + (lines.length - 1) * lh;\n\n\tvar cy = y + size - 1;\n\n\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = ((this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight) / 2;\n\t\t\tcy -= dy + 1;\n\t\t}\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tif (overflow == 'fill')\n\t\t{\n\t\t\tcy -= h;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar dy = (this.matchHtmlAlignment && clip && h > 0) ? Math.min(textHeight, h) : textHeight;\n\t\t\tcy -= dy + 2;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < lines.length; i++)\n\t{\n\t\t// Workaround for bounding box of empty lines and spaces\n\t\tif (lines[i].length > 0 && mxUtils.trim(lines[i]).length > 0)\n\t\t{\n\t\t\tvar text = this.createElement('text');\n\t\t\t// LATER: Match horizontal HTML alignment\n\t\t\ttext.setAttribute('x', this.format(x * s.scale) + this.textOffset);\n\t\t\ttext.setAttribute('y', this.format(cy * s.scale) + this.textOffset);\n\t\t\t\n\t\t\tmxUtils.write(text, lines[i]);\n\t\t\tnode.appendChild(text);\n\t\t}\n\n\t\tcy += lh;\n\t}\n\n\tthis.root.appendChild(node);\n\tthis.addTextBackground(node, str, x, y, w, (overflow == 'fill') ? h : textHeight, align, valign, overflow);\n};\n\n/**\n * Function: updateFont\n * \n * Updates the text properties for the given node. (NOTE: For this to work in\n * IE, the given node must be a text or tspan element.)\n */\nmxSvgCanvas2D.prototype.updateFont = function(node)\n{\n\tvar s = this.state;\n\n\tnode.setAttribute('fill', s.fontColor);\n\t\n\tif (!this.styleEnabled || s.fontFamily != mxConstants.DEFAULT_FONTFAMILY)\n\t{\n\t\tnode.setAttribute('font-family', s.fontFamily);\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tnode.setAttribute('font-weight', 'bold');\n\t}\n\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tnode.setAttribute('font-style', 'italic');\n\t}\n\t\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tnode.setAttribute('text-decoration', 'underline');\n\t}\n};\n\n/**\n * Function: addTextBackground\n * \n * Background color and border\n */\nmxSvgCanvas2D.prototype.addTextBackground = function(node, str, x, y, w, h, align, valign, overflow)\n{\n\tvar s = this.state;\n\n\tif (s.fontBackgroundColor != null || s.fontBorderColor != null)\n\t{\n\t\tvar bbox = null;\n\t\t\n\t\tif (overflow == 'fill' || overflow == 'width')\n\t\t{\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, y * s.scale, (w - 2) * s.scale, (h + 2) * s.scale);\n\t\t}\n\t\telse if (node.getBBox != null && this.root.ownerDocument == document)\n\t\t{\n\t\t\t// Uses getBBox only if inside document for correct size\n\t\t\ttry\n\t\t\t{\n\t\t\t\tbbox = node.getBBox();\n\t\t\t\tvar ie = mxClient.IS_IE && mxClient.IS_SVG;\n\t\t\t\tbbox = new mxRectangle(bbox.x, bbox.y + ((ie) ? 0 : 1), bbox.width, bbox.height + ((ie) ? 1 : 0));\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Computes size if not in document or no getBBox available\n\t\t\tvar div = document.createElement('div');\n\n\t\t\t// Wrapping and clipping can be ignored here\n\t\t\tdiv.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (s.fontSize * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\t\tdiv.style.fontSize = s.fontSize + 'px';\n\t\t\tdiv.style.fontFamily = s.fontFamily;\n\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\tdiv.style.position = 'absolute';\n\t\t\tdiv.style.visibility = 'hidden';\n\t\t\tdiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv.style.zoom = '1';\n\t\t\t\n\t\t\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t\t\t{\n\t\t\t\tdiv.style.fontWeight = 'bold';\n\t\t\t}\n\n\t\t\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t\t\t{\n\t\t\t\tdiv.style.fontStyle = 'italic';\n\t\t\t}\n\t\t\t\n\t\t\tstr = mxUtils.htmlEntities(str, false);\n\t\t\tdiv.innerHTML = str.replace(/\\n/g, '<br/>');\n\t\t\t\n\t\t\tdocument.body.appendChild(div);\n\t\t\tvar w = div.offsetWidth;\n\t\t\tvar h = div.offsetHeight;\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tx -= w / 2;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tx -= w;\n\t\t\t}\n\t\t\t\n\t\t\tif (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t{\n\t\t\t\ty -= h / 2;\n\t\t\t}\n\t\t\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\ty -= h;\n\t\t\t}\n\t\t\t\n\t\t\tbbox = new mxRectangle((x + 1) * s.scale, (y + 2) * s.scale, w * s.scale, (h + 1) * s.scale);\n\t\t}\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tvar n = this.createElement('rect');\n\t\t\tn.setAttribute('fill', s.fontBackgroundColor || 'none');\n\t\t\tn.setAttribute('stroke', s.fontBorderColor || 'none');\n\t\t\tn.setAttribute('x', Math.floor(bbox.x - 1));\n\t\t\tn.setAttribute('y', Math.floor(bbox.y - 1));\n\t\t\tn.setAttribute('width', Math.ceil(bbox.width + 2));\n\t\t\tn.setAttribute('height', Math.ceil(bbox.height));\n\n\t\t\tvar sw = (s.fontBorderColor != null) ? Math.max(1, this.format(s.scale)) : 0;\n\t\t\tn.setAttribute('stroke-width', sw);\n\t\t\t\n\t\t\t// Workaround for crisp rendering - only required if not exporting\n\t\t\tif (this.root.ownerDocument == document && mxUtils.mod(sw, 2) == 1)\n\t\t\t{\n\t\t\t\tn.setAttribute('transform', 'translate(0.5, 0.5)');\n\t\t\t}\n\t\t\t\n\t\t\tnode.insertBefore(n, node.firstChild);\n\t\t}\n\t}\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxSvgCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxSvgCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxSvgCanvas2D = typeof mxSvgCanvas2D !== 'undefined' ? mxSvgCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxVmlCanvas2D\n * \n * Implements a canvas to be used for rendering VML. Here is an example of implementing a\n * fallback for SVG images which are not supported in VML-based browsers.\n * \n * (code)\n * var mxVmlCanvas2DImage = mxVmlCanvas2D.prototype.image;\n * mxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n * {\n *   if (src.substring(src.length - 4, src.length) == '.svg')\n *   {\n *     src = 'http://www.jgraph.com/images/mxgraph.gif';\n *   }\n *   \n *   mxVmlCanvas2DImage.apply(this, arguments);\n * };\n * (end)\n * \n * To disable anti-aliasing in the output, use the following code.\n * \n * (code)\n * document.createStyleSheet().cssText = mxClient.VML_PREFIX + '\\\\:*{antialias:false;)}';\n * (end)\n * \n * A description of the public API is available in <mxXmlCanvas2D>. Note that\n * there is a known issue in VML where gradients are painted using the outer\n * bounding box of rotated shapes, not the actual bounds of the shape. See\n * also <text> for plain text label restrictions in shapes for VML.\n */\nvar mxVmlCanvas2D = function(root)\n{\n\tmxAbstractCanvas2D.call(this);\n\n\t/**\n\t * Variable: root\n\t * \n\t * Reference to the container for the SVG content.\n\t */\n\tthis.root = root;\n};\n\n/**\n * Extends mxAbstractCanvas2D\n */\nmxUtils.extend(mxVmlCanvas2D, mxAbstractCanvas2D);\n\n/**\n * Variable: path\n * \n * Holds the current DOM node.\n */\nmxVmlCanvas2D.prototype.node = null;\n\n/**\n * Variable: textEnabled\n * \n * Specifies if text output should be enabledetB. Default is true.\n */\nmxVmlCanvas2D.prototype.textEnabled = true;\n\n/**\n * Variable: moveOp\n * \n * Contains the string used for moving in paths. Default is 'm'.\n */\nmxVmlCanvas2D.prototype.moveOp = 'm';\n\n/**\n * Variable: lineOp\n * \n * Contains the string used for moving in paths. Default is 'l'.\n */\nmxVmlCanvas2D.prototype.lineOp = 'l';\n\n/**\n * Variable: curveOp\n * \n * Contains the string used for bezier curves. Default is 'c'.\n */\nmxVmlCanvas2D.prototype.curveOp = 'c';\n\n/**\n * Variable: closeOp\n * \n * Holds the operator for closing curves. Default is 'x e'.\n */\nmxVmlCanvas2D.prototype.closeOp = 'x';\n\n/**\n * Variable: rotatedHtmlBackground\n * \n * Background color for rotated HTML. Default is ''. This can be set to eg.\n * white to improve rendering of rotated text in VML for IE9.\n */\nmxVmlCanvas2D.prototype.rotatedHtmlBackground = '';\n\n/**\n * Variable: vmlScale\n * \n * Specifies the scale used to draw VML shapes.\n */\nmxVmlCanvas2D.prototype.vmlScale = 1;\n\n/**\n * Function: createElement\n * \n * Creates the given element using the document.\n */\nmxVmlCanvas2D.prototype.createElement = function(name)\n{\n\treturn document.createElement(name);\n};\n\n/**\n * Function: createVmlElement\n * \n * Creates a new element using <createElement> and prefixes the given name with\n * <mxClient.VML_PREFIX>.\n */\nmxVmlCanvas2D.prototype.createVmlElement = function(name)\n{\n\treturn this.createElement(mxClient.VML_PREFIX + ':' + name);\n};\n\n/**\n * Function: addNode\n * \n * Adds the current node to the <root>.\n */\nmxVmlCanvas2D.prototype.addNode = function(filled, stroked)\n{\n\tvar node = this.node;\n\tvar s = this.state;\n\t\n\tif (node != null)\n\t{\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\t// Checks if the path is not empty\n\t\t\tif (this.path != null && this.path.length > 0)\n\t\t\t{\n\t\t\t\tnode.path = this.path.join(' ') + ' e';\n\t\t\t\tnode.style.width = this.root.style.width;\n\t\t\t\tnode.style.height = this.root.style.height;\n\t\t\t\tnode.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tnode.strokeweight = this.format(Math.max(1, s.strokeWidth * s.scale / this.vmlScale)) + 'px';\n\t\t\n\t\tif (s.shadow)\n\t\t{\n\t\t\tthis.root.appendChild(this.createShadow(node,\n\t\t\t\tfilled && s.fillColor != null,\n\t\t\t\tstroked && s.strokeColor != null));\n\t\t}\n\t\t\n\t\tif (stroked && s.strokeColor != null)\n\t\t{\n\t\t\tnode.stroked = 'true';\n\t\t\tnode.strokecolor = s.strokeColor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.stroked = 'false';\n\t\t}\n\n\t\tnode.appendChild(this.createStroke());\n\n\t\tif (filled && s.fillColor != null)\n\t\t{\n\t\t\tnode.appendChild(this.createFill());\n\t\t}\n\t\telse if (this.pointerEvents && (node.nodeName != 'shape' ||\n\t\t\tthis.path[this.path.length - 1] == this.closeOp))\n\t\t{\n\t\t\tnode.appendChild(this.createTransparentFill());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.filled = 'false';\n\t\t}\n\n\t\t// LATER: Update existing DOM for performance\n\t\tthis.root.appendChild(node);\n\t}\n};\n\n/**\n * Function: createTransparentFill\n * \n * Creates a transparent fill.\n */\nmxVmlCanvas2D.prototype.createTransparentFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.src = mxClient.imageBasePath + '/transparent.gif';\n\tfill.type = 'tile';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createFill\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createFill = function()\n{\n\tvar s = this.state;\n\t\n\t// Gradients in foregrounds not supported because special gradients\n\t// with bounds must be created for each element in graphics-canvases\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fillColor;\n\n\tif (s.gradientColor != null)\n\t{\n\t\tfill.type = 'gradient';\n\t\tfill.method = 'none';\n\t\tfill.color2 = s.gradientColor;\n\t\tvar angle = 180 - s.rotation;\n\t\t\n\t\tif (s.gradientDirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tangle -= 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_EAST)\n\t\t{\n\t\t\tangle += 90 + ((this.root.style.flip == 'x') ? 180 : 0);\n\t\t}\n\t\telse if (s.gradientDirection == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tangle -= 180 + ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t angle += ((this.root.style.flip == 'y') ? -180 : 0);\n\t\t}\n\t\t\n\t\tif (this.root.style.flip == 'x' || this.root.style.flip == 'y')\n\t\t{\n\t\t\tangle *= -1;\n\t\t}\n\n\t\t// LATER: Fix outer bounding box for rotated shapes used in VML.\n\t\tfill.angle = mxUtils.mod(angle, 360);\n\t\tfill.opacity = (s.alpha * s.gradientFillAlpha * 100) + '%';\n\t\tfill.setAttribute(mxClient.OFFICE_PREFIX + ':opacity2', (s.alpha * s.gradientAlpha * 100) + '%');\n\t}\n\telse if (s.alpha < 1 || s.fillAlpha < 1)\n\t{\n\t\tfill.opacity = (s.alpha * s.fillAlpha * 100) + '%';\t\t\t\n\t}\n\t\n\treturn fill;\n};\n/**\n * Function: createStroke\n * \n * Creates a fill for the current state.\n */\nmxVmlCanvas2D.prototype.createStroke = function()\n{\n\tvar s = this.state;\n\tvar stroke = this.createVmlElement('stroke');\n\tstroke.endcap = s.lineCap || 'flat';\n\tstroke.joinstyle = s.lineJoin || 'miter';\n\tstroke.miterlimit = s.miterLimit || '10';\n\t\n\tif (s.alpha < 1 || s.strokeAlpha < 1)\n\t{\n\t\tstroke.opacity = (s.alpha * s.strokeAlpha * 100) + '%';\n\t}\n\t\n\tif (s.dashed)\n\t{\n\t\tstroke.dashstyle = this.getVmlDashStyle();\n\t}\n\t\n\treturn stroke;\n};\n\n/**\n * Function: getVmlDashPattern\n * \n * Returns a VML dash pattern for the current dashPattern.\n * See http://msdn.microsoft.com/en-us/library/bb264085(v=vs.85).aspx\n */\nmxVmlCanvas2D.prototype.getVmlDashStyle = function()\n{\n\tvar result = 'dash';\n\t\n\tif (typeof(this.state.dashPattern) === 'string')\n\t{\n\t\tvar tok = this.state.dashPattern.split(' ');\n\t\t\n\t\tif (tok.length > 0 && tok[0] == 1)\n\t\t{\n\t\t\tresult = '0 2';\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createShadow\n * \n * Creates a shadow for the given node.\n */\nmxVmlCanvas2D.prototype.createShadow = function(node, filled, stroked)\n{\n\tvar s = this.state;\n\tvar rad = -s.rotation * (Math.PI / 180);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\n\tvar dx = s.shadowDx * s.scale;\n\tvar dy = s.shadowDy * s.scale;\n\n\tif (this.root.style.flip == 'x')\n\t{\n\t\tdx *= -1;\n\t}\n\telse if (this.root.style.flip == 'y')\n\t{\n\t\tdy *= -1;\n\t}\n\t\n\tvar shadow = node.cloneNode(true);\n\tshadow.style.marginLeft = Math.round(dx * cos - dy * sin) + 'px';\n\tshadow.style.marginTop = Math.round(dx * sin + dy * cos) + 'px';\n\n\t// Workaround for wrong cloning in IE8 standards mode\n\tif (document.documentMode == 8)\n\t{\n\t\tshadow.strokeweight = node.strokeweight;\n\t\t\n\t\tif (node.nodeName == 'shape')\n\t\t{\n\t\t\tshadow.path = this.path.join(' ') + ' e';\n\t\t\tshadow.style.width = this.root.style.width;\n\t\t\tshadow.style.height = this.root.style.height;\n\t\t\tshadow.coordsize = parseInt(node.style.width) + ' ' + parseInt(node.style.height);\n\t\t}\n\t}\n\t\n\tif (stroked)\n\t{\n\t\tshadow.strokecolor = s.shadowColor;\n\t\tshadow.appendChild(this.createShadowStroke());\n\t}\n\telse\n\t{\n\t\tshadow.stroked = 'false';\n\t}\n\t\n\tif (filled)\n\t{\n\t\tshadow.appendChild(this.createShadowFill());\n\t}\n\telse\n\t{\n\t\tshadow.filled = 'false';\n\t}\n\t\n\treturn shadow;\n};\n\n/**\n * Function: createShadowFill\n * \n * Creates the fill for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowFill = function()\n{\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = this.state.shadowColor;\n\tfill.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn fill;\n};\n\n/**\n * Function: createShadowStroke\n * \n * Creates the stroke for the shadow.\n */\nmxVmlCanvas2D.prototype.createShadowStroke = function()\n{\n\tvar stroke = this.createStroke();\n\tstroke.opacity = (this.state.alpha * this.state.shadowAlpha * 100) + '%';\n\t\n\treturn stroke;\n};\n\n/**\n * Function: rotate\n * \n * Sets the rotation of the canvas. Note that rotation cannot be concatenated.\n */\nmxVmlCanvas2D.prototype.rotate = function(theta, flipH, flipV, cx, cy)\n{\n\tif (flipH && flipV)\n\t{\n\t\ttheta += 180;\n\t}\n\telse if (flipH)\n\t{\n\t\tthis.root.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tthis.root.style.flip = 'y';\n\t}\n\n\tif (flipH ? !flipV : flipV)\n\t{\n\t\ttheta *= -1;\n\t}\n\n\tthis.root.style.rotation = theta;\n\tthis.state.rotation = this.state.rotation + theta;\n\tthis.state.rotationCx = cx;\n\tthis.state.rotationCy = cy;\n};\n\n/**\n * Function: begin\n * \n * Extends superclass to create path.\n */\nmxVmlCanvas2D.prototype.begin = function()\n{\n\tmxAbstractCanvas2D.prototype.begin.apply(this, arguments);\n\tthis.node = this.createVmlElement('shape');\n\tthis.node.style.position = 'absolute';\n};\n\n/**\n * Function: quadTo\n * \n * Replaces quadratic curve with bezier curve in VML.\n */\nmxVmlCanvas2D.prototype.quadTo = function(x1, y1, x2, y2)\n{\n\tvar s = this.state;\n\n\tvar cpx0 = (this.lastX + s.dx) * s.scale;\n\tvar cpy0 = (this.lastY + s.dy) * s.scale;\n\tvar qpx1 = (x1 + s.dx) * s.scale;\n\tvar qpy1 = (y1 + s.dy) * s.scale;\n\tvar cpx3 = (x2 + s.dx) * s.scale;\n\tvar cpy3 = (y2 + s.dy) * s.scale;\n\t\n\tvar cpx1 = cpx0 + 2/3 * (qpx1 - cpx0);\n\tvar cpy1 = cpy0 + 2/3 * (qpy1 - cpy0);\n\t\n\tvar cpx2 = cpx3 + 2/3 * (qpx1 - cpx3);\n\tvar cpy2 = cpy3 + 2/3 * (qpy1 - cpy3);\n\t\n\tthis.path.push('c ' + this.format(cpx1) + ' ' + this.format(cpy1) +\n\t\t\t' ' + this.format(cpx2) + ' ' + this.format(cpy2) +\n\t\t\t' ' + this.format(cpx3) + ' ' + this.format(cpy3));\n\tthis.lastX = (cpx3 / s.scale) - s.dx;\n\tthis.lastY = (cpy3 / s.scale) - s.dy;\n\t\n};\n\n/**\n * Function: createRect\n * \n * Sets the glass gradient.\n */\nmxVmlCanvas2D.prototype.createRect = function(nodeName, x, y, w, h)\n{\n\tvar s = this.state;\n\tvar n = this.createVmlElement(nodeName);\n\tn.style.position = 'absolute';\n\tn.style.left = this.format((x + s.dx) * s.scale) + 'px';\n\tn.style.top = this.format((y + s.dy) * s.scale) + 'px';\n\tn.style.width = this.format(w * s.scale) + 'px';\n\tn.style.height = this.format(h * s.scale) + 'px';\n\t\n\treturn n;\n};\n\n/**\n * Function: rect\n * \n * Sets the current path to a rectangle.\n */\nmxVmlCanvas2D.prototype.rect = function(x, y, w, h)\n{\n\tthis.node = this.createRect('rect', x, y, w, h);\n};\n\n/**\n * Function: roundrect\n * \n * Sets the current path to a rounded rectangle.\n */\nmxVmlCanvas2D.prototype.roundrect = function(x, y, w, h, dx, dy)\n{\n\tthis.node = this.createRect('roundrect', x, y, w, h);\n\t// SetAttribute needed here for IE8\n\tthis.node.setAttribute('arcsize', Math.max(dx * 100 / w, dy * 100 / h) + '%');\n};\n\n/**\n * Function: ellipse\n * \n * Sets the current path to an ellipse.\n */\nmxVmlCanvas2D.prototype.ellipse = function(x, y, w, h)\n{\n\tthis.node = this.createRect('oval', x, y, w, h);\n};\n\n/**\n * Function: image\n * \n * Paints an image.\n */\nmxVmlCanvas2D.prototype.image = function(x, y, w, h, src, aspect, flipH, flipV)\n{\n\tvar node = null;\n\t\n\tif (!aspect)\n\t{\n\t\tnode = this.createRect('image', x, y, w, h);\n\t\tnode.src = src;\n\t}\n\telse\n\t{\n\t\t// Uses fill with aspect to avoid asynchronous update of size\n\t\tnode = this.createRect('rect', x, y, w, h);\n\t\tnode.stroked = 'false';\n\t\t\n\t\t// Handles image aspect via fill\n\t\tvar fill = this.createVmlElement('fill');\n\t\tfill.aspect = (aspect) ? 'atmost' : 'ignore';\n\t\tfill.rotate = 'true';\n\t\tfill.type = 'frame';\n\t\tfill.src = src;\n\n\t\tnode.appendChild(fill);\n\t}\n\t\n\tif (flipH && flipV)\n\t{\n\t\tnode.style.rotation = '180';\n\t}\n\telse if (flipH)\n\t{\n\t\tnode.style.flip = 'x';\n\t}\n\telse if (flipV)\n\t{\n\t\tnode.style.flip = 'y';\n\t}\n\t\n\tif (this.state.alpha < 1 || this.state.fillAlpha < 1)\n\t{\n\t\t// KNOWN: Borders around transparent images in IE<9. Using fill.opacity\n\t\t// fixes this problem by adding a white background in all IE versions.\n\t\tnode.style.filter += 'alpha(opacity=' + (this.state.alpha * this.state.fillAlpha * 100) + ')';\n\t}\n\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: createText\n * \n * Creates the innermost element that contains the HTML text.\n */\nmxVmlCanvas2D.prototype.createDiv = function(str, align, valign, overflow)\n{\n\tvar div = this.createElement('div');\n\tvar state = this.state;\n\n\tvar css = '';\n\t\n\tif (state.fontBackgroundColor != null)\n\t{\n\t\tcss += 'background-color:' + mxUtils.htmlEntities(state.fontBackgroundColor) + ';';\n\t}\n\t\n\tif (state.fontBorderColor != null)\n\t{\n\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(state.fontBorderColor) + ';';\n\t}\n\t\n\tif (mxUtils.isNode(str))\n\t{\n\t\tdiv.appendChild(str);\n\t}\n\telse\n\t{\n\t\tif (overflow != 'fill' && overflow != 'width')\n\t\t{\n\t\t\tvar div2 = this.createElement('div');\n\t\t\tdiv2.style.cssText = css;\n\t\t\tdiv2.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\t\tdiv2.style.zoom = '1';\n\t\t\tdiv2.style.textDecoration = 'inherit';\n\t\t\tdiv2.innerHTML = str;\n\t\t\tdiv.appendChild(div2);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdiv.style.cssText = css;\n\t\t\tdiv.innerHTML = str;\n\t\t}\n\t}\n\t\n\tvar style = div.style;\n\n\tstyle.fontSize = (state.fontSize / this.vmlScale) + 'px';\n\tstyle.fontFamily = state.fontFamily;\n\tstyle.color = state.fontColor;\n\tstyle.verticalAlign = 'top';\n\tstyle.textAlign = align || 'left';\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (state.fontSize * mxConstants.LINE_HEIGHT / this.vmlScale) + 'px' : mxConstants.LINE_HEIGHT;\n\n\tif ((state.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\n\tif ((state.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\t\n\tif ((state.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\t\n\treturn div;\n};\n\n/**\n * Function: text\n * \n * Paints the given text. Possible values for format are empty string for plain\n * text and html for HTML markup. Clipping, text background and border are not\n * supported for plain text in VML.\n */\nmxVmlCanvas2D.prototype.text = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\tif (this.textEnabled && str != null)\n\t{\n\t\tvar s = this.state;\n\t\t\n\t\tif (format == 'html')\n\t\t{\n\t\t\tif (s.rotation != null)\n\t\t\t{\n\t\t\t\tvar pt = this.rotatePoint(x, y, s.rotation, s.rotationCx, s.rotationCy);\n\t\t\t\t\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tx += s.dx;\n\t\t\t\ty += s.dy;\n\t\t\t\t\n\t\t\t\t// Workaround for rendering offsets\n\t\t\t\tif (overflow != 'fill' && valign == mxConstants.ALIGN_TOP)\n\t\t\t\t{\n\t\t\t\t\ty -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx *= s.scale;\n\t\t\t\ty *= s.scale;\n\t\t\t}\n\n\t\t\t// Adds event transparency in IE8 standards without the transparent background\n\t\t\t// filter which cannot be used due to bugs in the zoomed bounding box (too slow)\n\t\t\t// FIXME: No event transparency if inside v:rect (ie part of shape)\n\t\t\t// KNOWN: Offset wrong for rotated text with word that are longer than the wrapping\n\t\t\t// width in IE8 because real width of text cannot be determined here.\n\t\t\t// This should be fixed in mxText.updateBoundingBox by calling before this and\n\t\t\t// passing the real width to this method if not clipped and wrapped.\n\t\t\tvar abs = (document.documentMode == 8 && !mxClient.IS_EM) ? this.createVmlElement('group') : this.createElement('div');\n\t\t\tabs.style.position = 'absolute';\n\t\t\tabs.style.display = 'inline';\n\t\t\tabs.style.left = this.format(x) + 'px';\n\t\t\tabs.style.top = this.format(y) + 'px';\n\t\t\tabs.style.zoom = s.scale;\n\n\t\t\tvar box = this.createElement('div');\n\t\t\tbox.style.position = 'relative';\n\t\t\tbox.style.display = 'inline';\n\t\t\t\n\t\t\tvar margin = mxUtils.getAlignmentAsPoint(align, valign);\n\t\t\tvar dx = margin.x;\n\t\t\tvar dy = margin.y;\n\n\t\t\tvar div = this.createDiv(str, align, valign, overflow);\n\t\t\tvar inner = this.createElement('div');\n\t\t\t\n\t\t\tif (dir != null)\n\t\t\t{\n\t\t\t\tdiv.setAttribute('dir', dir);\n\t\t\t}\n\n\t\t\tif (wrap && w > 0)\n\t\t\t{\n\t\t\t\tif (!clip)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tdiv.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\t// LATER: Check if other cases need to be handled\n\t\t\t\tif (div.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tvar tmp = div;\n\t\t\t\t\t\n\t\t\t\t\tif (tmp.firstChild != null && tmp.firstChild.nodeName == 'DIV')\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp.firstChild.style.width = '100%';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t\t\n\t\t\tvar rot = s.rotation + (rotation || 0);\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tinner.style.display = 'inline';\n\t\t\t\tinner.style.zoom = '1';\n\t\t\t\tinner.appendChild(div);\n\n\t\t\t\t// Box not needed for rendering in IE8 standards\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM && this.root.nodeName != 'DIV')\n\t\t\t\t{\n\t\t\t\t\tbox.appendChild(inner);\n\t\t\t\t\tabs.appendChild(box);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tabs.appendChild(inner);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tbox.appendChild(div);\n\t\t\t\tabs.appendChild(box);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.style.display = 'inline';\n\t\t\t\tabs.appendChild(div);\n\t\t\t}\n\t\t\t\n\t\t\t// Inserts the node into the DOM\n\t\t\tif (this.root.nodeName != 'DIV')\n\t\t\t{\n\t\t\t\t// Rectangle to fix position in group\n\t\t\t\tvar rect = this.createVmlElement('rect');\n\t\t\t\trect.stroked = 'false';\n\t\t\t\trect.filled = 'false';\n\n\t\t\t\trect.appendChild(abs);\n\t\t\t\tthis.root.appendChild(rect);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.root.appendChild(abs);\n\t\t\t}\n\t\t\t\n\t\t\tif (clip)\n\t\t\t{\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = Math.round(w) + 'px';\n\t\t\t\t\n\t\t\t\tif (!mxClient.IS_QUIRKS)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.maxHeight = Math.round(h) + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (overflow == 'fill')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.height = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\telse if (overflow == 'width')\n\t\t\t{\n\t\t\t\t// KNOWN: Affects horizontal alignment in quirks\n\t\t\t\t// but fill should only be used with align=left\n\t\t\t\tdiv.style.overflow = 'hidden';\n\t\t\t\tdiv.style.width = (Math.max(0, w) + 1) + 'px';\n\t\t\t\tdiv.style.maxHeight = (Math.max(0, h) + 1) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\tif (this.rotateHtml && rot != 0)\n\t\t\t{\n\t\t\t\tvar rad = rot * (Math.PI / 180);\n\t\t\t\t\n\t\t\t\t// Precalculate cos and sin for the rotation\n\t\t\t\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\t\t\t\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\t\t\t\trad %= 2 * Math.PI;\n\t\t\t\tif (rad < 0) rad += 2 * Math.PI;\n\t\t\t\trad %= Math.PI;\n\t\t\t\tif (rad > Math.PI / 2) rad = Math.PI - rad;\n\t\t\t\t\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.display = 'inline-block';\n\t\t\t\t\tinner.style.display = 'inline-block';\n\t\t\t\t\tbox.style.display = 'inline-block';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdiv.style.position = 'absolute';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tvar sizeDiv = div;\n\t\t\t\t\n\t\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar tmp = sizeDiv.offsetWidth + 3;\n\t\t\t\tvar oh = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tif (clip)\n\t\t\t\t{\n\t\t\t\t\tw = Math.min(w, tmp);\n\t\t\t\t\toh = Math.min(oh, h);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tw = tmp;\n\t\t\t\t}\n\n\t\t\t\t// Handles words that are longer than the given wrapping width\n\t\t\t\tif (wrap)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.width = w + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && (clip || overflow == 'width') && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\n\t\t\t\tvar top_fix = (h - h * cos + w * -sin) / 2 - real_sin * w * (dx + 0.5) + real_cos * h * (dy + 0.5);\n\t\t\t\tvar left_fix = (w - w * cos + h * -sin) / 2 + real_cos * w * (dx + 0.5) + real_sin * h * (dy + 0.5);\n\n\t\t\t\tif (abs.nodeName == 'group' && this.root.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\t// Workaround for bug where group gets moved away if left and top are non-zero in IE8 standards\n\t\t\t\t\tvar pos = this.createElement('div');\n\t\t\t\t\tpos.style.display = 'inline-block';\n\t\t\t\t\tpos.style.position = 'absolute';\n\t\t\t\t\tpos.style.left = this.format(x + (left_fix - w / 2) * s.scale) + 'px';\n\t\t\t\t\tpos.style.top = this.format(y + (top_fix - h / 2) * s.scale) + 'px';\n\t\t\t\t\t\n\t\t\t\t\tabs.parentNode.appendChild(pos);\n\t\t\t\t\tpos.appendChild(abs);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar sc = (document.documentMode == 8 && !mxClient.IS_EM) ? 1 : s.scale;\n\t\t\t\t\t\n\t\t\t\t\tabs.style.left = this.format(x + (left_fix - w / 2) * sc) + 'px';\n\t\t\t\t\tabs.style.top = this.format(y + (top_fix - h / 2) * sc) + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// KNOWN: Rotated text rendering quality is bad for IE9 quirks\n\t\t\t\tinner.style.filter = \"progid:DXImageTransform.Microsoft.Matrix(M11=\"+real_cos+\", M12=\"+\n\t\t\t\t\treal_sin+\", M21=\"+(-real_sin)+\", M22=\"+real_cos+\", sizingMethod='auto expand')\";\n\t\t\t\tinner.style.backgroundColor = this.rotatedHtmlBackground;\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tinner.style.filter += 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\n\t\t\t\t// Restore parent node for DIV\n\t\t\t\tinner.appendChild(div);\n\t\t\t\tdiv.style.position = '';\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t}\n\t\t\telse if (document.documentMode != 8 || mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tdiv.style.verticalAlign = 'top';\n\t\t\t\t\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tabs.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adds div to document to measure size\n\t\t\t\tvar divParent = div.parentNode;\n\t\t\t\tdiv.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(div);\n\t\t\t\t\n\t\t\t\tw = div.offsetWidth;\n\t\t\t\tvar oh = div.offsetHeight;\n\t\t\t\t\n\t\t\t\t// Simulates max-height in quirks\n\t\t\t\tif (mxClient.IS_QUIRKS && clip && oh > h)\n\t\t\t\t{\n\t\t\t\t\toh = h;\n\t\t\t\t\t\n\t\t\t\t\t// Quirks does not support maxHeight\n\t\t\t\t\tdiv.style.height = oh + 'px';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\th = oh;\n\t\t\t\t\n\t\t\t\tdiv.style.visibility = '';\n\t\t\t\tdivParent.appendChild(div);\n\t\t\t\t\n\t\t\t\tabs.style.left = this.format(x + w * dx * this.state.scale) + 'px';\n\t\t\t\tabs.style.top = this.format(y + h * dy * this.state.scale) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.state.alpha < 1)\n\t\t\t\t{\n\t\t\t\t\tdiv.style.filter = 'alpha(opacity=' + (this.state.alpha * 100) + ')';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Faster rendering in IE8 without offsetWidth/Height\n\t\t\t\tbox.style.left = (dx * 100) + '%';\n\t\t\t\tbox.style.top = (dy * 100) + '%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.plainText(x, y, w, h, mxUtils.htmlEntities(str, false), align, valign, wrap, format, overflow, clip, rotation, dir);\n\t\t}\n\t}\n};\n\n/**\n * Function: plainText\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.plainText = function(x, y, w, h, str, align, valign, wrap, format, overflow, clip, rotation, dir)\n{\n\t// TextDirection is ignored since this code is not used (format is always HTML in the text function)\n\tvar s = this.state;\n\tx = (x + s.dx) * s.scale;\n\ty = (y + s.dy) * s.scale;\n\t\n\tvar node = this.createVmlElement('shape');\n\tnode.style.width = '1px';\n\tnode.style.height = '1px';\n\tnode.stroked = 'false';\n\n\tvar fill = this.createVmlElement('fill');\n\tfill.color = s.fontColor;\n\tfill.opacity = (s.alpha * 100) + '%';\n\tnode.appendChild(fill);\n\t\n\tvar path = this.createVmlElement('path');\n\tpath.textpathok = 'true';\n\tpath.v = 'm ' + this.format(0) + ' ' + this.format(0) + ' l ' + this.format(1) + ' ' + this.format(0);\n\t\n\tnode.appendChild(path);\n\t\n\t// KNOWN: Font family and text decoration ignored\n\tvar tp = this.createVmlElement('textpath');\n\ttp.style.cssText = 'v-text-align:' + align;\n\ttp.style.align = align;\n\ttp.style.fontFamily = s.fontFamily;\n\ttp.string = str;\n\ttp.on = 'true';\n\t\n\t// Scale via fontsize instead of node.style.zoom for correct offsets in IE8\n\tvar size = s.fontSize * s.scale / this.vmlScale;\n\ttp.style.fontSize = size + 'px';\n\t\n\t// Bold\n\tif ((s.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\ttp.style.fontWeight = 'bold';\n\t}\n\t\n\t// Italic\n\tif ((s.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\ttp.style.fontStyle = 'italic';\n\t}\n\n\t// Underline\n\tif ((s.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\ttp.style.textDecoration = 'underline';\n\t}\n\n\tvar lines = str.split('\\n');\n\tvar textHeight = size + (lines.length - 1) * size * mxConstants.LINE_HEIGHT;\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = - textHeight / 2;\n\t}\n\telse if (valign != mxConstants.ALIGN_MIDDLE) // top\n\t{\n\t\tdy = textHeight / 2;\n\t}\n\n\tif (rotation != null)\n\t{\n\t\tnode.style.rotation = rotation;\n\t\tvar rad = rotation * (Math.PI / 180);\n\t\tdx = Math.sin(rad) * dy;\n\t\tdy = Math.cos(rad) * dy;\n\t}\n\n\t// FIXME: Clipping is relative to bounding box\n\t/*if (clip)\n\t{\n\t\tnode.style.clip = 'rect(0px ' + this.format(w) + 'px ' + this.format(h) + 'px 0px)';\n\t}*/\n\t\n\tnode.appendChild(tp);\n\tnode.style.left = this.format(x - dx) + 'px';\n\tnode.style.top = this.format(y + dy) + 'px';\n\t\n\tthis.root.appendChild(node);\n};\n\n/**\n * Function: stroke\n * \n * Paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.stroke = function()\n{\n\tthis.addNode(false, true);\n};\n\n/**\n * Function: fill\n * \n * Fills the current path.\n */\nmxVmlCanvas2D.prototype.fill = function()\n{\n\tthis.addNode(true, false);\n};\n\n/**\n * Function: fillAndStroke\n * \n * Fills and paints the outline of the current path.\n */\nmxVmlCanvas2D.prototype.fillAndStroke = function()\n{\n\tthis.addNode(true, true);\n};\n\n__mxOutput.mxVmlCanvas2D = typeof mxVmlCanvas2D !== 'undefined' ? mxVmlCanvas2D : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGuide\n *\n * Implements the alignment of selection cells to other cells in the graph.\n * \n * Constructor: mxGuide\n * \n * Constructs a new guide object.\n */\nfunction mxGuide(graph, states)\n{\n\tthis.graph = graph;\n\tthis.setStates(states);\n};\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph> instance.\n */\nmxGuide.prototype.graph = null;\n\n/**\n * Variable: states\n * \n * Contains the <mxCellStates> that are used for alignment.\n */\nmxGuide.prototype.states = null;\n\n/**\n * Variable: horizontal\n *\n * Specifies if horizontal guides are enabled. Default is true.\n */\nmxGuide.prototype.horizontal = true;\n\n/**\n * Variable: vertical\n *\n * Specifies if vertical guides are enabled. Default is true.\n */\nmxGuide.prototype.vertical = true;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the horizontal guide.\n */\nmxGuide.prototype.guideX = null;\n\n/**\n * Variable: vertical\n *\n * Holds the <mxShape> for the vertical guide.\n */\nmxGuide.prototype.guideY = null;\n\n/**\n * Variable: rounded\n *\n * Specifies if rounded coordinates should be used. Default is false.\n */\nmxGuide.prototype.rounded = false;\n\n/**\n * Function: setStates\n * \n * Sets the <mxCellStates> that should be used for alignment.\n */\nmxGuide.prototype.setStates = function(states)\n{\n\tthis.states = states;\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the guide should be enabled for the given native event. This\n * implementation always returns true.\n */\nmxGuide.prototype.isEnabledForEvent = function(evt)\n{\n\treturn true;\n};\n\n/**\n * Function: getGuideTolerance\n * \n * Returns the tolerance for the guides. Default value is gridSize / 2.\n */\nmxGuide.prototype.getGuideTolerance = function()\n{\n\treturn this.graph.gridSize / 2;\n};\n\n/**\n * Function: createGuideShape\n * \n * Returns the mxShape to be used for painting the respective guide. This\n * implementation returns a new, dashed and crisp <mxPolyline> using\n * <mxConstants.GUIDE_COLOR> and <mxConstants.GUIDE_STROKEWIDTH> as the format.\n * \n * Parameters:\n * \n * horizontal - Boolean that specifies which guide should be created.\n */\nmxGuide.prototype.createGuideShape = function(horizontal)\n{\n\tvar guide = new mxPolyline([], mxConstants.GUIDE_COLOR, mxConstants.GUIDE_STROKEWIDTH);\n\tguide.isDashed = true;\n\t\n\treturn guide;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored.\n */\nmxGuide.prototype.isStateIgnored = function(state)\n{\n\treturn false;\n};\n\n/**\n * Function: move\n * \n * Moves the <bounds> by the given <mxPoint> and returnt the snapped point.\n */\nmxGuide.prototype.move = function(bounds, delta, gridEnabled, clone)\n{\n\tif (this.states != null && (this.horizontal || this.vertical) && bounds != null && delta != null)\n\t{\n\t\tvar trx = this.graph.getView().translate;\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tvar overrideX = false;\n\t\tvar stateX = null;\n\t\tvar valueX = null;\n\t\tvar overrideY = false;\n\t\tvar stateY = null;\n\t\tvar valueY = null;\n\t\t\n\t\tvar tt = this.getGuideTolerance();\n\t\tvar ttX = tt;\n\t\tvar ttY = tt;\n\t\t\n\t\tvar b = bounds.clone();\n\t\tb.x += delta.x;\n\t\tb.y += delta.y;\n\t\t\n\t\tvar left = b.x;\n\t\tvar right = b.x + b.width;\n\t\tvar center = b.getCenterX();\n\t\tvar top = b.y;\n\t\tvar bottom = b.y + b.height;\n\t\tvar middle = b.getCenterY();\n\t\n\t\t// Snaps the left, center and right to the given x-coordinate\n\t\tfunction snapX(x, state)\n\t\t{\n\t\t\tx += this.graph.panDx;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(x - center) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.getCenterX();\n\t\t\t\tttX = Math.abs(x - center);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - left) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x;\n\t\t\t\tttX = Math.abs(x - left);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(x - right) < ttX)\n\t\t\t{\n\t\t\t\tdx = x - bounds.x - bounds.width;\n\t\t\t\tttX = Math.abs(x - right);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateX = state;\n\t\t\t\tvalueX = Math.round(x - this.graph.panDx);\n\t\t\t\t\n\t\t\t\tif (this.guideX == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideX = this.createGuideShape(true);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideX.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideX.pointerEvents = false;\n\t\t\t\t\tthis.guideX.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideX = overrideX || override;\n\t\t};\n\t\t\n\t\t// Snaps the top, middle or bottom to the given y-coordinate\n\t\tfunction snapY(y, state)\n\t\t{\n\t\t\ty += this.graph.panDy;\n\t\t\tvar override = false;\n\t\t\t\n\t\t\tif (Math.abs(y - middle) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.getCenterY();\n\t\t\t\tttY = Math.abs(y -  middle);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - top) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y;\n\t\t\t\tttY = Math.abs(y - top);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\telse if (Math.abs(y - bottom) < ttY)\n\t\t\t{\n\t\t\t\tdy = y - bounds.y - bounds.height;\n\t\t\t\tttY = Math.abs(y - bottom);\n\t\t\t\toverride = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (override)\n\t\t\t{\n\t\t\t\tstateY = state;\n\t\t\t\tvalueY = Math.round(y - this.graph.panDy);\n\t\t\t\t\n\t\t\t\tif (this.guideY == null)\n\t\t\t\t{\n\t\t\t\t\tthis.guideY = this.createGuideShape(false);\n\t\t\t\t\t\n\t\t\t\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t\t\t\t// event-transparency on the background area of the rectangle since\n\t\t\t\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\t\t\t\tthis.guideY.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.guideY.pointerEvents = false;\n\t\t\t\t\tthis.guideY.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\toverrideY = overrideY || override;\n\t\t};\n\t\t\n\t\tfor (var i = 0; i < this.states.length; i++)\n\t\t{\n\t\t\tvar state =  this.states[i];\n\t\t\t\n\t\t\tif (state != null && !this.isStateIgnored(state))\n\t\t\t{\n\t\t\t\t// Align x\n\t\t\t\tif (this.horizontal)\n\t\t\t\t{\n\t\t\t\t\tsnapX.call(this, state.getCenterX(), state);\n\t\t\t\t\tsnapX.call(this, state.x, state);\n\t\t\t\t\tsnapX.call(this, state.x + state.width, state);\n\t\t\t\t}\n\t\n\t\t\t\t// Align y\n\t\t\t\tif (this.vertical)\n\t\t\t\t{\n\t\t\t\t\tsnapY.call(this, state.getCenterY(), state);\n\t\t\t\t\tsnapY.call(this, state.y, state);\n\t\t\t\t\tsnapY.call(this, state.y + state.height, state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Moves cells that are off-grid back to the grid on move\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tif (!overrideX)\n\t\t\t{\n\t\t\t\tvar tx = bounds.x - (this.graph.snap(bounds.x /\n\t\t\t\t\tscale - trx.x) + trx.x) * scale;\n\t\t\t\tdx = this.graph.snap(dx / scale) * scale - tx;\n\t\t\t}\n\t\t\t\n\t\t\tif (!overrideY)\n\t\t\t{\n\t\t\t\tvar ty = bounds.y - (this.graph.snap(bounds.y /\n\t\t\t\t\tscale - trx.y) + trx.y) * scale;\n\t\t\t\tdy = this.graph.snap(dy / scale) * scale - ty;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the guides\n\t\tvar c = this.graph.container;\n\t\t\n\t\tif (!overrideX && this.guideX != null)\n\t\t{\n\t\t\tthis.guideX.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideX != null)\n\t\t{\n\t\t\tif (stateX != null && bounds != null)\n\t\t\t{\n\t\t\t\tminY = Math.min(bounds.y + dy - this.graph.panDy, stateX.y);\n\t\t\t\tmaxY = Math.max(bounds.y + bounds.height + dy - this.graph.panDy, stateX.y + stateX.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (minY != null && maxY != null)\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, minY), new mxPoint(valueX, maxY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideX.points = [new mxPoint(valueX, -this.graph.panDy), new mxPoint(valueX, c.scrollHeight - 3 - this.graph.panDy)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideX.stroke = this.getGuideColor(stateX, true);\n\t\t\tthis.guideX.node.style.visibility = 'visible';\n\t\t\tthis.guideX.redraw();\n\t\t}\n\t\t\n\t\tif (!overrideY && this.guideY != null)\n\t\t{\n\t\t\tthis.guideY.node.style.visibility = 'hidden';\n\t\t}\n\t\telse if (this.guideY != null)\n\t\t{\n\t\t\tif (stateY != null && bounds != null)\n\t\t\t{\n\t\t\t\tminX = Math.min(bounds.x + dx - this.graph.panDx, stateY.x);\n\t\t\t\tmaxX = Math.max(bounds.x + bounds.width + dx - this.graph.panDx, stateY.x + stateY.width);\n\t\t\t}\n\t\t\t\n\t\t\tif (minX != null && maxX != null)\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(minX, valueY), new mxPoint(maxX, valueY)];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.guideY.points = [new mxPoint(-this.graph.panDx, valueY), new mxPoint(c.scrollWidth - 3 - this.graph.panDx, valueY)];\n\t\t\t}\n\t\t\t\n\t\t\tthis.guideY.stroke = this.getGuideColor(stateY, false);\n\t\t\tthis.guideY.node.style.visibility = 'visible';\n\t\t\tthis.guideY.redraw();\n\t\t}\n\n\t\tdelta = this.getDelta(bounds, stateX, dx, stateY, dy)\n\t}\n\t\n\treturn delta;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getDelta = function(bounds, stateX, dx, stateY, dy)\n{\n\t// Round to pixels for virtual states (eg. page guides)\n\tif (this.rounded || (stateX != null && stateX.cell == null))\n\t{\n\t\tdx = Math.floor(bounds.x + dx) - bounds.x;\n\t}\n\n\tif (this.rounded || (stateY != null && stateY.cell == null))\n\t{\n\t\tdy = Math.floor(bounds.y + dy) - bounds.y;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.getGuideColor = function(state, horizontal)\n{\n\treturn mxConstants.GUIDE_COLOR;\n};\n\n/**\n * Function: hide\n * \n * Hides all current guides.\n */\nmxGuide.prototype.hide = function()\n{\n\tthis.setVisible(false);\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides the current guides.\n */\nmxGuide.prototype.setVisible = function(visible)\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.node.style.visibility = (visible) ? 'visible' : 'hidden';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys all resources that this object uses.\n */\nmxGuide.prototype.destroy = function()\n{\n\tif (this.guideX != null)\n\t{\n\t\tthis.guideX.destroy();\n\t\tthis.guideX = null;\n\t}\n\t\n\tif (this.guideY != null)\n\t{\n\t\tthis.guideY.destroy();\n\t\tthis.guideY = null;\n\t}\n};\n\n__mxOutput.mxGuide = typeof mxGuide !== 'undefined' ? mxGuide : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxShape\n *\n * Base class for all shapes. A shape in mxGraph is a\n * separate implementation for SVG, VML and HTML. Which\n * implementation to use is controlled by the <dialect>\n * property which is assigned from within the <mxCellRenderer>\n * when the shape is created. The dialect must be assigned\n * for a shape, and it does normally depend on the browser and\n * the confiuration of the graph (see <mxGraph> rendering hint).\n *\n * For each supported shape in SVG and VML, a corresponding\n * shape exists in mxGraph, namely for text, image, rectangle,\n * rhombus, ellipse and polyline. The other shapes are a\n * combination of these shapes (eg. label and swimlane)\n * or they consist of one or more (filled) path objects\n * (eg. actor and cylinder). The HTML implementation is\n * optional but may be required for a HTML-only view of\n * the graph.\n *\n * Custom Shapes:\n *\n * To extend from this class, the basic code looks as follows.\n * In the special case where the custom shape consists only of\n * one filled region or one filled region and an additional stroke\n * the <mxActor> and <mxCylinder> should be subclassed,\n * respectively.\n *\n * (code)\n * function CustomShape() { }\n * \n * CustomShape.prototype = new mxShape();\n * CustomShape.prototype.constructor = CustomShape; \n * (end)\n *\n * To register a custom shape in an existing graph instance,\n * one must register the shape under a new name in the graph's\n * cell renderer as follows:\n *\n * (code)\n * mxCellRenderer.registerShape('customShape', CustomShape);\n * (end)\n *\n * The second argument is the name of the constructor.\n *\n * In order to use the shape you can refer to the given name above\n * in a stylesheet. For example, to change the shape for the default\n * vertex style, the following code is used:\n *\n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'customShape';\n * (end)\n * \n * Constructor: mxShape\n *\n * Constructs a new shape.\n */\nfunction mxShape(stencil)\n{\n\tthis.stencil = stencil;\n\tthis.initStyles();\n};\n\n/**\n * Variable: dialect\n *\n * Holds the dialect in which the shape is to be painted.\n * This can be one of the DIALECT constants in <mxConstants>.\n */\nmxShape.prototype.dialect = null;\n\n/**\n * Variable: scale\n *\n * Holds the scale in which the shape is being painted.\n */\nmxShape.prototype.scale = 1;\n\n/**\n * Variable: antiAlias\n * \n * Rendering hint for configuring the canvas.\n */\nmxShape.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxShape.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: bounds\n *\n * Holds the <mxRectangle> that specifies the bounds of this shape.\n */\nmxShape.prototype.bounds = null;\n\n/**\n * Variable: points\n *\n * Holds the array of <mxPoints> that specify the points of this shape.\n */\nmxShape.prototype.points = null;\n\n/**\n * Variable: node\n *\n * Holds the outermost DOM node that represents this shape.\n */\nmxShape.prototype.node = null;\n \n/**\n * Variable: state\n * \n * Optional reference to the corresponding <mxCellState>.\n */\nmxShape.prototype.state = null;\n\n/**\n * Variable: style\n *\n * Optional reference to the style of the corresponding <mxCellState>.\n */\nmxShape.prototype.style = null;\n\n/**\n * Variable: boundingBox\n *\n * Contains the bounding box of the shape, that is, the smallest rectangle\n * that includes all pixels of the shape.\n */\nmxShape.prototype.boundingBox = null;\n\n/**\n * Variable: stencil\n *\n * Holds the <mxStencil> that defines the shape.\n */\nmxShape.prototype.stencil = null;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Event-tolerance for SVG strokes (in px). Default is 8. This is only passed\n * to the canvas in <createSvgCanvas> if <pointerEvents> is true.\n */\nmxShape.prototype.svgStrokeTolerance = 8;\n\n/**\n * Variable: pointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.pointerEvents = true;\n\n/**\n * Variable: svgPointerEvents\n * \n * Specifies if pointer events should be handled. Default is true.\n */\nmxShape.prototype.svgPointerEvents = 'all';\n\n/**\n * Variable: shapePointerEvents\n * \n * Specifies if pointer events outside of shape should be handled. Default\n * is false.\n */\nmxShape.prototype.shapePointerEvents = false;\n\n/**\n * Variable: stencilPointerEvents\n * \n * Specifies if pointer events outside of stencils should be handled. Default\n * is false. Set this to true for backwards compatibility with the 1.x branch.\n */\nmxShape.prototype.stencilPointerEvents = false;\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 1.\n */\nmxShape.prototype.vmlScale = 1;\n\n/**\n * Variable: outline\n * \n * Specifies if the shape should be drawn as an outline. This disables all\n * fill colors and can be used to disable other drawing states that should\n * not be painted for outlines. Default is false. This should be set before\n * calling <apply>.\n */\nmxShape.prototype.outline = false;\n\n/**\n * Variable: visible\n * \n * Specifies if the shape is visible. Default is true.\n */\nmxShape.prototype.visible = true;\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxShape.prototype.useSvgBoundingBox = false;\n\n/**\n * Function: init\n *\n * Initializes the shape by creaing the DOM node using <create>\n * and adding it into the given container.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.init = function(container)\n{\n\tif (this.node == null)\n\t{\n\t\tthis.node = this.create(container);\n\t\t\n\t\tif (container != null)\n\t\t{\n\t\t\tcontainer.appendChild(this.node);\n\t\t}\n\t}\n};\n\n/**\n * Function: initStyles\n *\n * Sets the styles to their default values.\n */\nmxShape.prototype.initStyles = function(container)\n{\n\tthis.strokewidth = 1;\n\tthis.rotation = 0;\n\tthis.opacity = 100;\n\tthis.fillOpacity = 100;\n\tthis.strokeOpacity = 100;\n\tthis.flipH = false;\n\tthis.flipV = false;\n};\n\n/**\n * Function: isParseVml\n * \n * Specifies if any VML should be added via insertAdjacentHtml to the DOM. This\n * is only needed in IE8 and only if the shape contains VML markup. This method\n * returns true.\n */\nmxShape.prototype.isParseVml = function()\n{\n\treturn true;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxShape.prototype.isHtmlAllowed = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Returns 0, or 0.5 if <strokewidth> % 2 == 1.\n */\nmxShape.prototype.getSvgScreenOffset = function()\n{\n\tvar sw = this.stencil && this.stencil.strokewidth != 'inherit' ? Number(this.stencil.strokewidth) : this.strokewidth;\n\t\n\treturn (mxUtils.mod(Math.max(1, Math.round(sw * this.scale)), 2) == 1) ? 0.5 : 0;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM node(s) for the shape in\n * the given container. This implementation invokes\n * <createSvg>, <createHtml> or <createVml> depending\n * on the <dialect> and style settings.\n *\n * Parameters:\n *\n * container - DOM node that will contain the shape.\n */\nmxShape.prototype.create = function(container)\n{\n\tvar node = null;\n\t\n\tif (container != null && container.ownerSVGElement != null)\n\t{\n\t\tnode = this.createSvg(container);\n\t}\n\telse if (document.documentMode == 8 || !mxClient.IS_VML ||\n\t\t(this.dialect != mxConstants.DIALECT_VML && this.isHtmlAllowed()))\n\t{\n\t\tnode = this.createHtml(container);\n\t}\n\telse\n\t{\n\t\tnode = this.createVml(container);\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: createSvg\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.createSvg = function()\n{\n\treturn document.createElementNS(mxConstants.NS_SVG, 'g');\n};\n\n/**\n * Function: createVml\n *\n * Creates and returns the VML node to represent this shape.\n */\nmxShape.prototype.createVml = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\t\n\treturn node;\n};\n\n/**\n * Function: reconfigure\n *\n * Reconfigures this shape. This will update the colors etc in\n * addition to the bounds or points.\n */\nmxShape.prototype.reconfigure = function()\n{\n\tthis.redraw();\n};\n\n/**\n * Function: redraw\n *\n * Creates and returns the SVG node(s) to represent this shape.\n */\nmxShape.prototype.redraw = function()\n{\n\tthis.updateBoundsFromPoints();\n\t\n\tif (this.visible && this.checkBounds())\n\t{\n\t\tthis.node.style.visibility = 'visible';\n\t\tthis.clear();\n\t\t\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.redrawHtmlShape();\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tthis.redrawShape();\n\t\t}\n\n\t\tthis.updateBoundingBox();\n\t}\n\telse\n\t{\n\t\tthis.node.style.visibility = 'hidden';\n\t\tthis.boundingBox = null;\n\t}\n};\n\n/**\n * Function: clear\n * \n * Removes all child nodes and resets all CSS.\n */\nmxShape.prototype.clear = function()\n{\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\twhile (this.node.lastChild != null)\n\t\t{\n\t\t\tthis.node.removeChild(this.node.lastChild);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.node.style.cssText = 'position:absolute;' + ((this.cursor != null) ?\n\t\t\t('cursor:' + this.cursor + ';') : '');\n\t\tthis.node.innerHTML = '';\n\t}\n};\n\n/**\n * Function: updateBoundsFromPoints\n * \n * Updates the bounds based on the points.\n */\nmxShape.prototype.updateBoundsFromPoints = function()\n{\n\tvar pts = this.points;\n\t\n\tif (pts != null && pts.length > 0 && pts[0] != null)\n\t{\n\t\tthis.bounds = new mxRectangle(Number(pts[0].x), Number(pts[0].y), 1, 1);\n\t\t\n\t\tfor (var i = 1; i < this.points.length; i++)\n\t\t{\n\t\t\tif (pts[i] != null)\n\t\t\t{\n\t\t\t\tthis.bounds.add(new mxRectangle(Number(pts[i].x), Number(pts[i].y), 1, 1));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the <mxRectangle> for the label bounds of this shape, based on the\n * given scaled and translated bounds of the shape. This method should not\n * change the rectangle in-place. This implementation returns the given rect.\n */\nmxShape.prototype.getLabelBounds = function(rect)\n{\n\tvar d = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\tvar bounds = rect;\n\t\n\t// Normalizes argument for getLabelMargins hook\n\tif (d != mxConstants.DIRECTION_SOUTH && d != mxConstants.DIRECTION_NORTH &&\n\t\tthis.state != null && this.state.text != null &&\n\t\tthis.state.text.isPaintBoundsInverted())\n\t{\n\t\tbounds = bounds.clone();\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\t\n\tvar m = this.getLabelMargins(bounds);\n\t\n\tif (m != null)\n\t{\n\t\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, false) == '1';\n\t\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, false) == '1';\n\t\t\n\t\t// Handles special case for vertical labels\n\t\tif (this.state != null && this.state.text != null &&\n\t\t\tthis.state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = m.x;\n\t\t\tm.x = m.height;\n\t\t\tm.height = m.width;\n\t\t\tm.width = m.y;\n\t\t\tm.y = tmp;\n\n\t\t\ttmp = flipH;\n\t\t\tflipH = flipV;\n\t\t\tflipV = tmp;\n\t\t}\n\t\t\n\t\treturn mxUtils.getDirectedBounds(rect, m, this.style, flipH, flipV);\n\t}\n\t\n\treturn rect;\n};\n\n/**\n * Function: getLabelMargins\n * \n * Returns the scaled top, left, bottom and right margin to be used for\n * computing the label bounds as an <mxRectangle>, where the bottom and right\n * margin are defined in the width and height of the rectangle, respectively.\n */\nmxShape.prototype.getLabelMargins= function(rect)\n{\n\treturn null;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxShape.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height) &&\n\t\t\tthis.bounds.width > 0 && this.bounds.height > 0);\n};\n\n/**\n * Function: createVmlGroup\n *\n * Returns the temporary element used for rendering in IE8 standards mode.\n */\nmxShape.prototype.createVmlGroup = function()\n{\n\tvar node = document.createElement(mxClient.VML_PREFIX + ':group');\n\tnode.style.position = 'absolute';\n\tnode.style.width = this.node.style.width;\n\tnode.style.height = this.node.style.height;\n\t\n\treturn node;\n};\n\n/**\n * Function: redrawShape\n *\n * Updates the SVG or VML shape.\n */\nmxShape.prototype.redrawShape = function()\n{\n\tvar canvas = this.createCanvas();\n\t\n\tif (canvas != null)\n\t{\n\t\t// Specifies if events should be handled\n\t\tcanvas.pointerEvents = this.pointerEvents;\n\t\n\t\tthis.paint(canvas);\n\t\n\t\tif (this.node != canvas.root)\n\t\t{\n\t\t\t// Forces parsing in IE8 standards mode - slow! avoid\n\t\t\tthis.node.insertAdjacentHTML('beforeend', canvas.root.outerHTML);\n\t\t}\n\t\n\t\tif (this.node.nodeName == 'DIV' && document.documentMode == 8)\n\t\t{\n\t\t\t// Makes DIV transparent to events for IE8 in IE8 standards\n\t\t\t// mode (Note: Does not work for IE9 in IE8 standards mode\n\t\t\t// and not for IE11 in enterprise mode)\n\t\t\tthis.node.style.filter = '';\n\t\t\t\n\t\t\t// Adds event transparency in IE8 standards\n\t\t\tmxUtils.addTransparentBackgroundFilter(this.node);\n\t\t}\n\t\t\n\t\tthis.destroyCanvas(canvas);\n\t}\n};\n\n/**\n * Function: createCanvas\n * \n * Creates a new canvas for drawing this shape. May return null.\n */\nmxShape.prototype.createCanvas = function()\n{\n\tvar canvas = null;\n\t\n\t// LATER: Check if reusing existing DOM nodes improves performance\n\tif (this.node.ownerSVGElement != null)\n\t{\n\t\tcanvas = this.createSvgCanvas();\n\t}\n\telse if (mxClient.IS_VML)\n\t{\n\t\tthis.updateVmlContainer();\n\t\tcanvas = this.createVmlCanvas();\n\t}\n\t\n\tif (canvas != null && this.outline)\n\t{\n\t\tcanvas.setStrokeWidth(this.strokewidth);\n\t\tcanvas.setStrokeColor(this.stroke);\n\t\t\n\t\tif (this.isDashed != null)\n\t\t{\n\t\t\tcanvas.setDashed(this.isDashed);\n\t\t}\n\t\t\n\t\tcanvas.setStrokeWidth = function() {};\n\t\tcanvas.setStrokeColor = function() {};\n\t\tcanvas.setFillColor = function() {};\n\t\tcanvas.setGradient = function() {};\n\t\tcanvas.setDashed = function() {};\n\t\tcanvas.text = function() {};\n\t}\n\n\treturn canvas;\n};\n\n/**\n * Function: createSvgCanvas\n * \n * Creates and returns an <mxSvgCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createSvgCanvas = function()\n{\n\tvar canvas = new mxSvgCanvas2D(this.node, false);\n\tcanvas.strokeTolerance = (this.pointerEvents) ? this.svgStrokeTolerance : 0;\n\tcanvas.pointerEventsValue = this.svgPointerEvents;\n\tcanvas.blockImagePointerEvents = mxClient.IS_FF;\n\tvar off = this.getSvgScreenOffset();\n\n\tif (off != 0)\n\t{\n\t\tthis.node.setAttribute('transform', 'translate(' + off + ',' + off + ')');\n\t}\n\telse\n\t{\n\t\tthis.node.removeAttribute('transform');\n\t}\n\n\tcanvas.minStrokeWidth = this.minSvgStrokeWidth;\n\t\n\tif (!this.antiAlias)\n\t{\n\t\t// Rounds all numbers in the SVG output to integers\n\t\tcanvas.format = function(value)\n\t\t{\n\t\t\treturn Math.round(parseFloat(value));\n\t\t};\n\t}\n\t\n\treturn canvas;\n};\n\n/**\n * Function: createVmlCanvas\n * \n * Creates and returns an <mxVmlCanvas2D> for rendering this shape.\n */\nmxShape.prototype.createVmlCanvas = function()\n{\n\t// Workaround for VML rendering bug in IE8 standards mode\n\tvar node = (document.documentMode == 8 && this.isParseVml()) ? this.createVmlGroup() : this.node;\n\tvar canvas = new mxVmlCanvas2D(node, false);\n\t\n\tif (node.tagUrn != '')\n\t{\n\t\tvar w = Math.max(1, Math.round(this.bounds.width));\n\t\tvar h = Math.max(1, Math.round(this.bounds.height));\n\t\tnode.coordsize = (w * this.vmlScale) + ',' + (h * this.vmlScale);\n\t\tcanvas.scale(this.vmlScale);\n\t\tcanvas.vmlScale = this.vmlScale;\n\t}\n\n\t// Painting relative to top, left shape corner\n\tvar s = this.scale;\n\tcanvas.translate(-Math.round(this.bounds.x / s), -Math.round(this.bounds.y / s));\n\t\n\treturn canvas;\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Updates the bounds of the VML container.\n */\nmxShape.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tvar w = Math.max(1, Math.round(this.bounds.width));\n\tvar h = Math.max(1, Math.round(this.bounds.height));\n\tthis.node.style.width = w + 'px';\n\tthis.node.style.height = h + 'px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.redrawHtmlShape = function()\n{\n\t// LATER: Refactor methods\n\tthis.updateHtmlBounds(this.node);\n\tthis.updateHtmlFilters(this.node);\n\tthis.updateHtmlColors(this.node);\n};\n\n/**\n * Function: updateHtmlFilters\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlFilters = function(node)\n{\n\tvar f = '';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tf += 'alpha(opacity=' + (this.opacity) + ')';\n\t}\n\t\n\tif (this.isShadow)\n\t{\n\t\t// FIXME: Cannot implement shadow transparency with filter\n\t\tf += 'progid:DXImageTransform.Microsoft.dropShadow (' +\n\t\t\t'OffX=\\'' + Math.round(mxConstants.SHADOW_OFFSET_X * this.scale) + '\\', ' +\n\t\t\t'OffY=\\'' + Math.round(mxConstants.SHADOW_OFFSET_Y * this.scale) + '\\', ' +\n\t\t\t'Color=\\'' + mxConstants.VML_SHADOWCOLOR + '\\')';\n\t}\n\t\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar start = this.fill;\n\t\tvar end = this.gradient;\n\t\tvar type = '0';\n\t\t\n\t\tvar lookup = {east:0,south:1,west:2,north:3};\n\t\tvar dir = (this.direction != null) ? lookup[this.direction] : 0;\n\t\t\n\t\tif (this.gradientDirection != null)\n\t\t{\n\t\t\tdir = mxUtils.mod(dir + lookup[this.gradientDirection] - 1, 4);\n\t\t}\n\n\t\tif (dir == 1)\n\t\t{\n\t\t\ttype = '1';\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 2)\n\t\t{\n\t\t\tvar tmp = start;\n\t\t\tstart = end;\n\t\t\tend = tmp;\n\t\t}\n\t\telse if (dir == 3)\n\t\t{\n\t\t\ttype = '1';\n\t\t}\n\t\t\n\t\tf += 'progid:DXImageTransform.Microsoft.gradient(' +\n\t\t\t'startColorStr=\\'' + start + '\\', endColorStr=\\'' + end +\n\t\t\t'\\', gradientType=\\'' + type + '\\')';\n\t}\n\n\tnode.style.filter = f;\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlColors = function(node)\n{\n\tvar color = this.stroke;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.borderColor = color;\n\n\t\tif (this.isDashed)\n\t\t{\n\t\t\tnode.style.borderStyle = 'dashed';\n\t\t}\n\t\telse if (this.strokewidth > 0)\n\t\t{\n\t\t\tnode.style.borderStyle = 'solid';\n\t\t}\n\n\t\tnode.style.borderWidth = Math.max(1, Math.ceil(this.strokewidth * this.scale)) + 'px';\n\t}\n\telse\n\t{\n\t\tnode.style.borderWidth = '0px';\n\t}\n\n\tcolor = (this.outline) ? null : this.fill;\n\t\n\tif (color != null && color != mxConstants.NONE)\n\t{\n\t\tnode.style.backgroundColor = color;\n\t\tnode.style.backgroundImage = 'none';\n\t}\n\telse if (this.pointerEvents)\n\t{\n\t\t node.style.backgroundColor = 'transparent';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tmxUtils.addTransparentBackgroundFilter(node);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(node);\n\t}\n};\n\n/**\n * Function: mixedModeHtml\n *\n * Allow optimization by replacing VML with HTML.\n */\nmxShape.prototype.updateHtmlBounds = function(node)\n{\n\tvar sw = (document.documentMode >= 9) ? 0 : Math.ceil(this.strokewidth * this.scale);\n\tnode.style.borderWidth = Math.max(1, sw) + 'px';\n\tnode.style.overflow = 'hidden';\n\t\n\tnode.style.left = Math.round(this.bounds.x - sw / 2) + 'px';\n\tnode.style.top = Math.round(this.bounds.y - sw / 2) + 'px';\n\n\tif (document.compatMode == 'CSS1Compat')\n\t{\n\t\tsw = -sw;\n\t}\n\t\n\tnode.style.width = Math.round(Math.max(0, this.bounds.width + sw)) + 'px';\n\tnode.style.height = Math.round(Math.max(0, this.bounds.height + sw)) + 'px';\n};\n\n/**\n * Function: destroyCanvas\n * \n * Destroys the given canvas which was used for drawing. This implementation\n * increments the reference counts on all shared gradients used in the canvas.\n */\nmxShape.prototype.destroyCanvas = function(canvas)\n{\n\t// Manages reference counts\n\tif (canvas instanceof mxSvgCanvas2D)\n\t{\n\t\t// Increments ref counts\n\t\tfor (var key in canvas.gradients)\n\t\t{\n\t\t\tvar gradient = canvas.gradients[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) + 1;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.releaseSvgGradients(this.oldGradients);\n\t\tthis.oldGradients = canvas.gradients;\n\t}\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxShape.prototype.paint = function(c)\n{\n\tvar strokeDrawn = false;\n\t\n\tif (c != null && this.outline)\n\t{\n\t\tvar stroke = c.stroke;\n\t\t\n\t\tc.stroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tstroke.apply(this, arguments);\n\t\t};\n\n\t\tvar fillAndStroke = c.fillAndStroke;\n\t\t\n\t\tc.fillAndStroke = function()\n\t\t{\n\t\t\tstrokeDrawn = true;\n\t\t\tfillAndStroke.apply(this, arguments);\n\t\t};\n\t}\n\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\tif (this.isPaintBoundsInverted())\n\t{\n\t\tvar t = (w - h) / 2;\n\t\tx += t;\n\t\ty -= t;\n\t\tvar tmp = w;\n\t\tw = h;\n\t\th = tmp;\n\t}\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\t// Adds background rectangle to capture events\n\tvar bg = null;\n\t\n\tif ((this.stencil == null && this.points == null && this.shapePointerEvents) ||\n\t\t(this.stencil != null && this.stencilPointerEvents))\n\t{\n\t\tvar bb = this.createBoundingBox();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tbg = this.createTransparentSvgRectangle(bb.x, bb.y, bb.width, bb.height);\n\t\t\tthis.node.appendChild(bg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar rect = c.createRect('rect', bb.x / s, bb.y / s, bb.width / s, bb.height / s);\n\t\t\trect.appendChild(c.createTransparentFill());\n\t\t\trect.stroked = 'false';\n\t\t\tc.root.appendChild(rect);\n\t\t}\n\t}\n\n\tif (this.stencil != null)\n\t{\n\t\tthis.stencil.drawShape(c, this, x, y, w, h);\n\t}\n\telse\n\t{\n\t\t// Stencils have separate strokewidth\n\t\tc.setStrokeWidth(this.strokewidth);\n\t\t\n\t\tif (this.points != null)\n\t\t{\n\t\t\t// Paints edge shape\n\t\t\tvar pts = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t\t{\n\t\t\t\tif (this.points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tpts.push(new mxPoint(this.points[i].x / s, this.points[i].y / s));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.paintEdgeShape(c, pts);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Paints vertex shape\n\t\t\tthis.paintVertexShape(c, x, y, w, h);\n\t\t}\n\t}\n\t\n\tif (bg != null && c.state != null && c.state.transform != null)\n\t{\n\t\tbg.setAttribute('transform', c.state.transform);\n\t}\n\t\n\t// Draws highlight rectangle if no stroke was used\n\tif (c != null && this.outline && !strokeDrawn)\n\t{\n\t\tc.rect(x, y, w, h);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxShape.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tvar dash = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tdash = this.style['dashPattern'];\t\t\n\t}\n\n\tc.setAlpha(this.opacity / 100);\n\tc.setFillAlpha(this.fillOpacity / 100);\n\tc.setStrokeAlpha(this.strokeOpacity / 100);\n\n\t// Sets alpha, colors and gradients\n\tif (this.isShadow != null)\n\t{\n\t\tc.setShadow(this.isShadow);\n\t}\n\t\n\t// Dash pattern\n\tif (this.isDashed != null)\n\t{\n\t\tc.setDashed(this.isDashed, (this.style != null) ?\n\t\t\tmxUtils.getValue(this.style, mxConstants.STYLE_FIX_DASH, false) == 1 : false);\n\t}\n\n\tif (dash != null)\n\t{\n\t\tc.setDashPattern(dash);\n\t}\n\n\tif (this.fill != null && this.fill != mxConstants.NONE && this.gradient && this.gradient != mxConstants.NONE)\n\t{\n\t\tvar b = this.getGradientBounds(c, x, y, w, h);\n\t\tc.setGradient(this.fill, this.gradient, b.x, b.y, b.width, b.height, this.gradientDirection);\n\t}\n\telse\n\t{\n\t\tc.setFillColor(this.fill);\n\t}\n\n\tc.setStrokeColor(this.stroke);\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxShape.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\treturn new mxRectangle(x, y, w, h);\n};\n\n/**\n * Function: updateTransform\n * \n * Sets the scale and rotation on the given canvas.\n */\nmxShape.prototype.updateTransform = function(c, x, y, w, h)\n{\n\t// NOTE: Currently, scale is implemented in state and canvas. This will\n\t// move to canvas in a later version, so that the states are unscaled\n\t// and untranslated and do not need an update after zooming or panning.\n\tc.scale(this.scale);\n\tc.rotate(this.getShapeRotation(), this.flipH, this.flipV, x + w / 2, y + h / 2);\n};\n\n/**\n * Function: paintVertexShape\n * \n * Paints the vertex shape.\n */\nmxShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tthis.paintBackground(c, x, y, w, h);\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintForeground(c, x, y, w, h);\n\t}\n};\n\n/**\n * Function: paintBackground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintBackground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintForeground\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintForeground = function(c, x, y, w, h) { };\n\n/**\n * Function: paintEdgeShape\n * \n * Hook for subclassers. This implementation is empty.\n */\nmxShape.prototype.paintEdgeShape = function(c, pts) { };\n\n/**\n * Function: getArcSize\n * \n * Returns the arc size for the given dimension.\n */\nmxShape.prototype.getArcSize = function(w, h)\n{\n\tvar r = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t{\n\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t}\n\telse\n\t{\n\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\tr = Math.min(w * f, h * f);\n\t}\n\t\n\treturn r;\n};\n\n/**\n * Function: paintGlassEffect\n * \n * Paints the glass gradient effect.\n */\nmxShape.prototype.paintGlassEffect = function(c, x, y, w, h, arc)\n{\n\tvar sw = Math.ceil(this.strokewidth / 2);\n\tvar size = 0.4;\n\t\n\tc.setGradient('#ffffff', '#ffffff', x, y, w, h * 0.6, 'south', 0.9, 0.1);\n\tc.begin();\n\tarc += 2 * sw;\n\t\t\n\tif (this.isRounded)\n\t{\n\t\tc.moveTo(x - sw + arc, y - sw);\n\t\tc.quadTo(x - sw, y - sw, x - sw, y - sw + arc);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw + arc);\n\t\tc.quadTo(x + w + sw, y - sw, x + w + sw - arc, y - sw);\n\t}\n\telse\n\t{\n\t\tc.moveTo(x - sw, y - sw);\n\t\tc.lineTo(x - sw, y + h * size);\n\t\tc.quadTo(x + w * 0.5, y + h * 0.7, x + w + sw, y + h * size);\n\t\tc.lineTo(x + w + sw, y - sw);\n\t}\n\t\n\tc.close();\n\tc.fill();\n};\n\n/**\n * Function: addPoints\n * \n * Paints the given points with rounded corners.\n */\nmxShape.prototype.addPoints = function(c, pts, rounded, arcSize, close, exclude, initialMove)\n{\n\tif (pts != null && pts.length > 0)\n\t{\n\t\tinitialMove = (initialMove != null) ? initialMove : true;\n\t\tvar pe = pts[pts.length - 1];\n\t\t\n\t\t// Adds virtual waypoint in the center between start and end point\n\t\tif (close && rounded)\n\t\t{\n\t\t\tpts = pts.slice();\n\t\t\tvar p0 = pts[0];\n\t\t\tvar wp = new mxPoint(pe.x + (p0.x - pe.x) / 2, pe.y + (p0.y - pe.y) / 2);\n\t\t\tpts.splice(0, 0, wp);\n\t\t}\n\t\n\t\tvar pt = pts[0];\n\t\tvar i = 1;\n\t\n\t\t// Draws the line segments\n\t\tif (initialMove)\n\t\t{\n\t\t\tc.moveTo(pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pt.x, pt.y);\n\t\t}\n\t\t\n\t\twhile (i < ((close) ? pts.length : pts.length - 1))\n\t\t{\n\t\t\tvar tmp = pts[mxUtils.mod(i, pts.length)];\n\t\t\tvar dx = pt.x - tmp.x;\n\t\t\tvar dy = pt.y - tmp.y;\n\t\n\t\t\tif (rounded && (dx != 0 || dy != 0) && (exclude == null || mxUtils.indexOf(exclude, i - 1) < 0))\n\t\t\t{\n\t\t\t\t// Draws a line from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the last point\n\t\t\t\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tvar nx1 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny1 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x1 = tmp.x + nx1;\n\t\t\t\tvar y1 = tmp.y + ny1;\n\t\t\t\tc.lineTo(x1, y1);\n\t\n\t\t\t\t// Draws a curve from the last point to the current\n\t\t\t\t// point with a spacing of size off the current point\n\t\t\t\t// into direction of the next point\n\t\t\t\tvar next = pts[mxUtils.mod(i + 1, pts.length)];\n\t\t\t\t\n\t\t\t\t// Uses next non-overlapping point\n\t\t\t\twhile (i < pts.length - 2 && Math.round(next.x - tmp.x) == 0 && Math.round(next.y - tmp.y) == 0)\n\t\t\t\t{\n\t\t\t\t\tnext = pts[mxUtils.mod(i + 2, pts.length)];\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdx = next.x - tmp.x;\n\t\t\t\tdy = next.y - tmp.y;\n\t\n\t\t\t\tdist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\t\tvar nx2 = dx * Math.min(arcSize, dist / 2) / dist;\n\t\t\t\tvar ny2 = dy * Math.min(arcSize, dist / 2) / dist;\n\t\n\t\t\t\tvar x2 = tmp.x + nx2;\n\t\t\t\tvar y2 = tmp.y + ny2;\n\t\n\t\t\t\tc.quadTo(tmp.x, tmp.y, x2, y2);\n\t\t\t\ttmp = new mxPoint(x2, y2);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.lineTo(tmp.x, tmp.y);\n\t\t\t}\n\t\n\t\t\tpt = tmp;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (close)\n\t\t{\n\t\t\tc.close();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.lineTo(pe.x, pe.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxShape.prototype.resetStyles = function()\n{\n\tthis.initStyles();\n\n\tthis.spacing = 0;\n\t\n\tdelete this.fill;\n\tdelete this.gradient;\n\tdelete this.gradientDirection;\n\tdelete this.stroke;\n\tdelete this.startSize;\n\tdelete this.endSize;\n\tdelete this.startArrow;\n\tdelete this.endArrow;\n\tdelete this.direction;\n\tdelete this.isShadow;\n\tdelete this.isDashed;\n\tdelete this.isRounded;\n\tdelete this.glass;\n};\n\n/**\n * Function: apply\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_FILLCOLOR> => fill\n * - <mxConstants.STYLE_GRADIENTCOLOR> => gradient\n * - <mxConstants.STYLE_GRADIENT_DIRECTION> => gradientDirection\n * - <mxConstants.STYLE_OPACITY> => opacity\n * - <mxConstants.STYLE_FILL_OPACITY> => fillOpacity\n * - <mxConstants.STYLE_STROKE_OPACITY> => strokeOpacity\n * - <mxConstants.STYLE_STROKECOLOR> => stroke\n * - <mxConstants.STYLE_STROKEWIDTH> => strokewidth\n * - <mxConstants.STYLE_SHADOW> => isShadow\n * - <mxConstants.STYLE_DASHED> => isDashed\n * - <mxConstants.STYLE_SPACING> => spacing\n * - <mxConstants.STYLE_STARTSIZE> => startSize\n * - <mxConstants.STYLE_ENDSIZE> => endSize\n * - <mxConstants.STYLE_ROUNDED> => isRounded\n * - <mxConstants.STYLE_STARTARROW> => startArrow\n * - <mxConstants.STYLE_ENDARROW> => endArrow\n * - <mxConstants.STYLE_ROTATION> => rotation\n * - <mxConstants.STYLE_DIRECTION> => direction\n * - <mxConstants.STYLE_GLASS> => glass\n *\n * This keeps a reference to the <style>. If you need to keep a reference to\n * the cell, you can override this method and store a local reference to\n * state.cell or the <mxCellState> itself. If <outline> should be true, make\n * sure to set it before calling this method.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxShape.prototype.apply = function(state)\n{\n\tthis.state = state;\n\tthis.style = state.style;\n\n\tif (this.style != null)\n\t{\n\t\tthis.fill = mxUtils.getValue(this.style, mxConstants.STYLE_FILLCOLOR, this.fill);\n\t\tthis.gradient = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENTCOLOR, this.gradient);\n\t\tthis.gradientDirection = mxUtils.getValue(this.style, mxConstants.STYLE_GRADIENT_DIRECTION, this.gradientDirection);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_OPACITY, this.opacity);\n\t\tthis.fillOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_FILL_OPACITY, this.fillOpacity);\n\t\tthis.strokeOpacity = mxUtils.getValue(this.style, mxConstants.STYLE_STROKE_OPACITY, this.strokeOpacity);\n\t\tthis.stroke = mxUtils.getValue(this.style, mxConstants.STYLE_STROKECOLOR, this.stroke);\n\t\tthis.strokewidth = mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth);\n\t\tthis.spacing = mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing);\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, this.startSize);\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, this.endSize);\n\t\tthis.startArrow = mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, this.startArrow);\n\t\tthis.endArrow = mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, this.endArrow);\n\t\tthis.rotation = mxUtils.getValue(this.style, mxConstants.STYLE_ROTATION, this.rotation);\n\t\tthis.direction = mxUtils.getValue(this.style, mxConstants.STYLE_DIRECTION, this.direction);\n\t\tthis.flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\tthis.flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\t\n\t\t// Legacy support for stencilFlipH/V\n\t\tif (this.stencil != null)\n\t\t{\n\t\t\tthis.flipH = mxUtils.getValue(this.style, 'stencilFlipH', 0) == 1 || this.flipH;\n\t\t\tthis.flipV = mxUtils.getValue(this.style, 'stencilFlipV', 0) == 1 || this.flipV;\n\t\t}\n\t\t\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH || this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tvar tmp = this.flipH;\n\t\t\tthis.flipH = this.flipV;\n\t\t\tthis.flipV = tmp;\n\t\t}\n\n\t\tthis.isShadow = mxUtils.getValue(this.style, mxConstants.STYLE_SHADOW, this.isShadow) == 1;\n\t\tthis.isDashed = mxUtils.getValue(this.style, mxConstants.STYLE_DASHED, this.isDashed) == 1;\n\t\tthis.isRounded = mxUtils.getValue(this.style, mxConstants.STYLE_ROUNDED, this.isRounded) == 1;\n\t\tthis.glass = mxUtils.getValue(this.style, mxConstants.STYLE_GLASS, this.glass) == 1;\n\t\t\n\t\tif (this.fill == mxConstants.NONE)\n\t\t{\n\t\t\tthis.fill = null;\n\t\t}\n\n\t\tif (this.gradient == mxConstants.NONE)\n\t\t{\n\t\t\tthis.gradient = null;\n\t\t}\n\n\t\tif (this.stroke == mxConstants.NONE)\n\t\t{\n\t\t\tthis.stroke = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the cursor on the given shape.\n *\n * Parameters:\n *\n * cursor - The cursor to be used.\n */\nmxShape.prototype.setCursor = function(cursor)\n{\n\tif (cursor == null)\n\t{\n\t\tcursor = '';\n\t}\n\t\n\tthis.cursor = cursor;\n\n\tif (this.node != null)\n\t{\n\t\tthis.node.style.cursor = cursor;\n\t}\n};\n\n/**\n * Function: getCursor\n * \n * Returns the current cursor.\n */\nmxShape.prototype.getCursor = function()\n{\n\treturn this.cursor;\n};\n\n/**\n * Function: isRoundable\n * \n * Hook for subclassers.\n */\nmxShape.prototype.isRoundable = function()\n{\n\treturn false;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxShape.prototype.updateBoundingBox = function()\n{\n\t// Tries to get bounding box from SVG subsystem\n\t// LATER: Use getBoundingClientRect for fallback in VML\n\tif (this.useSvgBoundingBox && this.node != null && this.node.ownerSVGElement != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar b = this.node.getBBox();\n\t\n\t\t\tif (b.width > 0 && b.height > 0)\n\t\t\t{\n\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\n\t\t\t\t// Adds strokeWidth\n\t\t\t\tthis.boundingBox.grow(this.strokewidth * this.scale / 2);\n\t\t\t\t\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tcatch(e)\n\t\t{\n\t\t\t// fallback to code below\n\t\t}\n\t}\n\n\tif (this.bounds != null)\n\t{\n\t\tvar bbox = this.createBoundingBox();\n\t\t\n\t\tif (bbox != null)\n\t\t{\n\t\t\tthis.augmentBoundingBox(bbox);\n\t\t\tvar rot = this.getShapeRotation();\n\t\t\t\n\t\t\tif (rot != 0)\n\t\t\t{\n\t\t\t\tbbox = mxUtils.getBoundingBox(bbox, rot);\n\t\t\t}\n\t\t}\n\n\t\tthis.boundingBox = bbox;\n\t}\n};\n\n/**\n * Function: createBoundingBox\n *\n * Returns a new rectangle that represents the bounding box of the bare shape\n * with no shadows or strokewidths.\n */\nmxShape.prototype.createBoundingBox = function()\n{\n\tvar bb = this.bounds.clone();\n\n\tif ((this.stencil != null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\tthis.direction == mxConstants.DIRECTION_SOUTH)) || this.isPaintBoundsInverted())\n\t{\n\t\tbb.rotate90();\n\t}\n\t\n\treturn bb;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxShape.prototype.augmentBoundingBox = function(bbox)\n{\n\tif (this.isShadow)\n\t{\n\t\tbbox.width += Math.ceil(mxConstants.SHADOW_OFFSET_X * this.scale);\n\t\tbbox.height += Math.ceil(mxConstants.SHADOW_OFFSET_Y * this.scale);\n\t}\n\t\n\t// Adds strokeWidth\n\tbbox.grow(this.strokewidth * this.scale / 2);\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns true if the bounds should be inverted.\n */\nmxShape.prototype.isPaintBoundsInverted = function()\n{\n\t// Stencil implements inversion via aspect\n\treturn this.stencil == null && (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation from the style.\n */\nmxShape.prototype.getRotation = function()\n{\n\treturn (this.rotation != null) ? this.rotation : 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label.\n */\nmxShape.prototype.getTextRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) != 1)\n\t{\n\t\trot += mxText.prototype.verticalTextRotation;\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns the actual rotation of the shape.\n */\nmxShape.prototype.getShapeRotation = function()\n{\n\tvar rot = this.getRotation();\n\t\n\tif (this.direction != null)\n\t{\n\t\tif (this.direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\trot += 270;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\trot += 180;\n\t\t}\n\t\telse if (this.direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\trot += 90;\n\t\t}\n\t}\n\t\n\treturn rot;\n};\n\n/**\n * Function: createTransparentSvgRectangle\n * \n * Adds a transparent rectangle that catches all events.\n */\nmxShape.prototype.createTransparentSvgRectangle = function(x, y, w, h)\n{\n\tvar rect = document.createElementNS(mxConstants.NS_SVG, 'rect');\n\trect.setAttribute('x', x);\n\trect.setAttribute('y', y);\n\trect.setAttribute('width', w);\n\trect.setAttribute('height', h);\n\trect.setAttribute('fill', 'none');\n\trect.setAttribute('stroke', 'none');\n\trect.setAttribute('pointer-events', 'all');\n\t\n\treturn rect;\n};\n\n/**\n * Function: setTransparentBackgroundImage\n * \n * Sets a transparent background CSS style to catch all events.\n * \n * Paints the line shape.\n */\nmxShape.prototype.setTransparentBackgroundImage = function(node)\n{\n\tnode.style.backgroundImage = 'url(\\'' + mxClient.imageBasePath + '/transparent.gif\\')';\n};\n\n/**\n * Function: releaseSvgGradients\n * \n * Paints the line shape.\n */\nmxShape.prototype.releaseSvgGradients = function(grads)\n{\n\tif (grads != null)\n\t{\n\t\tfor (var key in grads)\n\t\t{\n\t\t\tvar gradient = grads[key];\n\t\t\t\n\t\t\tif (gradient != null)\n\t\t\t{\n\t\t\t\tgradient.mxRefCount = (gradient.mxRefCount || 0) - 1;\n\t\t\t\t\n\t\t\t\tif (gradient.mxRefCount == 0 && gradient.parentNode != null)\n\t\t\t\t{\n\t\t\t\t\tgradient.parentNode.removeChild(gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the shape by removing it from the DOM and releasing the DOM\n * node associated with the shape using <mxEvent.release>.\n */\nmxShape.prototype.destroy = function()\n{\n\tif (this.node != null)\n\t{\n\t\tmxEvent.release(this.node);\n\t\t\n\t\tif (this.node.parentNode != null)\n\t\t{\n\t\t\tthis.node.parentNode.removeChild(this.node);\n\t\t}\n\t\t\n\t\tthis.node = null;\n\t}\n\t\n\t// Decrements refCount and removes unused\n\tthis.releaseSvgGradients(this.oldGradients);\n\tthis.oldGradients = null;\n};\n\n__mxOutput.mxShape = typeof mxShape !== 'undefined' ? mxShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStencil\n *\n * Implements a generic shape which is based on a XML node as a description.\n * \n * shape:\n * \n * The outer element is *shape*, that has attributes:\n * \n * - \"name\", string, required. The stencil name that uniquely identifies the shape.\n * - \"w\" and \"h\" are optional decimal view bounds. This defines your co-ordinate\n * system for the graphics operations in the shape. The default is 100,100.\n * - \"aspect\", optional string. Either \"variable\", the default, or \"fixed\". Fixed\n * means always render the shape with the aspect ratio defined by the ratio w/h.\n * Variable causes the ratio to match that of the geometry of the current vertex.\n * - \"strokewidth\", optional string. Either an integer or the string \"inherit\".\n * \"inherit\" indicates that the strokeWidth of the cell is only changed on scaling,\n * not on resizing. Default is \"1\".\n * If numeric values are used, the strokeWidth of the cell is changed on both\n * scaling and resizing and the value defines the multiple that is applied to\n * the width.\n * \n * connections:\n * \n * If you want to define specific fixed connection points on the shape use the\n * *connections* element. Each *constraint* element within connections defines\n * a fixed connection point on the shape. Constraints have attributes:\n * \n * - \"perimeter\", required. 1 or 0. 0 sets the connection point where specified\n * by x,y. 1 Causes the position of the connection point to be extrapolated from\n * the center of the shape, through x,y to the point of intersection with the\n * perimeter of the shape.\n * - \"x\" and \"y\" are the position of the fixed point relative to the bounds of\n * the shape. They can be automatically adjusted if perimeter=1. So, (0,0) is top\n * left, (0.5,0.5) the center, (1,0.5) the center of the right hand edge of the\n * bounds, etc. Values may be less than 0 or greater than 1 to be positioned\n * outside of the shape.\n * - \"name\", optional string. A unique identifier for the port on the shape.\n * \n * background and foreground:\n * \n * The path of the graphics drawing is split into two elements, *foreground* and\n * *background*. The split is to define which part any shadow applied to the shape\n * is derived from (the background). This, generally, means the background is the\n * line tracing of the outside of the shape, but not always.\n * \n * Any stroke, fill or fillstroke of a background must be the first element of the\n * foreground element, they must not be used within *background*. If the background\n * is empty, this is not required.\n * \n * Because the background cannot have any fill or stroke, it can contain only one\n * *path*, *rect*, *roundrect* or *ellipse* element (or none). It can also not\n * include *image*, *text* or *include-shape*.\n * \n * Note that the state, styling and drawing in mxGraph stencils is very close in\n * design to that of HTML 5 canvas. Tutorials on this subject, if you're not\n * familiar with the topic, will give a good high-level introduction to the\n * concepts used.\n * \n * State:\n * \n * Rendering within the foreground and background elements has the concept of\n * state. There are two types of operations other than state save/load, styling\n * and drawing. The styling operations change the current state, so you can save\n * the current state with <save/> and pull the last saved state from the state\n * stack using <restore/>.\n * \n * Styling:\n * \n * The elements that change colors within the current state all take a hash\n * prefixed hex color code (\"#FFEA80\").\n * \n * - *strokecolor*, this sets the color that drawing paths will be rendered in\n * when a stroke or fillstroke command is issued.\n * - *fillcolor*, this sets the color that the inside of closed paths will be\n * rendered in when a fill or fillstroke command is issued.\n * - *fontcolor*, this sets the color that fonts are rendered in when text is drawn.\n * \n * *alpha* defines the degree of transparency used between 1.0 for fully opaque\n * and 0.0 for fully transparent.\n * \n * *fillalpha* defines the degree of fill transparency used between 1.0 for fully\n * opaque and 0.0 for fully transparent.\n * \n * *strokealpha* defines the degree of stroke transparency used between 1.0 for\n * fully opaque and 0.0 for fully transparent.\n * \n * *strokewidth* defines the integer thickness of drawing elements rendered by\n * stroking. Use fixed=\"1\" to apply the value as-is, without scaling.\n * \n * *dashed* is \"1\" for dashing enabled and \"0\" for disabled.\n * \n * When *dashed* is enabled the current dash pattern, defined by *dashpattern*,\n * is used on strokes. dashpattern is a sequence of space separated \"on, off\"\n * lengths that define what distance to paint the stroke for, then what distance\n * to paint nothing for, repeat... The default is \"3 3\". You could define a more\n * complex pattern with \"5 3 2 6\", for example. Generally, it makes sense to have\n * an even number of elements in the dashpattern, but that's not required.\n * \n * *linejoin*, *linecap* and *miterlimit* are best explained by the Mozilla page\n * on Canvas styling (about halfway down). The values are all the same except we\n * use \"flat\" for linecap, instead of Canvas' \"butt\".\n * \n * For font styling there are.\n * \n * - *fontsize*, an integer,\n * - *fontstyle*, an ORed bit pattern of bold (1), italic (2) and underline (4),\n * i.e bold underline is \"5\".\n * - *fontfamily*, is a string defining the typeface to be used.\n * \n * Drawing:\n * \n * Most drawing is contained within a *path* element. Again, the graphic\n * primitives are very similar to that of HTML 5 canvas.\n * \n * - *move* to attributes required decimals (x,y).\n * - *line* to attributes required decimals (x,y).\n * - *quad* to required decimals (x2,y2) via control point required decimals\n * (x1,y1).\n * - *curve* to required decimals (x3,y3), via control points required decimals\n * (x1,y1) and (x2,y2).\n * - *arc*, this doesn't follow the HTML Canvas signatures, instead it's a copy\n * of the SVG arc command. The SVG specification documentation gives the best\n * description of its behaviors. The attributes are named identically, they are\n * decimals and all required.\n * - *close* ends the current subpath and causes an automatic straight line to\n * be drawn from the current point to the initial point of the current subpath.\n * \n * Complex drawing:\n * \n * In addition to the graphics primitive operations there are non-primitive\n * operations. These provide an easy method to draw some basic shapes.\n * \n * - *rect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals\n * - *roundrect*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals. Also\n * \"arcsize\" an optional decimal attribute defining how large, the corner curves\n * are.\n * - *ellipse*, attributes \"x\", \"y\", \"w\", \"h\", all required decimals.\n * \n * Note that these 3 shapes and all paths must be followed by either a fill,\n * stroke, or fillstroke.\n * \n * Text:\n * \n * *text* elements have the following attributes.\n * \n * - \"str\", the text string to display, required.\n * - \"x\" and \"y\", the decimal location (x,y) of the text element, required.\n * - \"align\", the horizontal alignment of the text element, either \"left\",\n * \"center\" or \"right\". Optional, default is \"left\".\n * - \"valign\", the vertical alignment of the text element, either \"top\", \"middle\"\n * or \"bottom\". Optional, default is \"top\".\n * - \"localized\", 0 or 1, if 1 then the \"str\" actually contains a key to use to\n * fetch the value out of mxResources. Optional, default is\n * <mxStencil.defaultLocalized>.\n * - \"vertical\", 0 or 1, if 1 the label is rendered vertically (rotated by 90\n * degrees). Optional, default is 0.\n * - \"rotation\", angle in degrees (0 to 360). The angle to rotate the text by.\n * Optional, default is 0.\n * - \"align-shape\", 0 or 1, if 0 ignore the rotation of the shape when setting\n * the text rotation. Optional, default is 1.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the text element (ignored if the str attribute is not null).\n * \n * Images:\n * \n * *image* elements can either be external URLs, or data URIs, where supported\n * (not in IE 7-). Attributes are:\n * \n * - \"src\", required string. Either a data URI or URL.\n * - \"x\", \"y\", required decimals. The (x,y) position of the image.\n * - \"w\", \"h\", required decimals. The width and height of the image.\n * - \"flipH\" and \"flipV\", optional 0 or 1. Whether to flip the image along the\n * horizontal/vertical axis. Default is 0 for both.\n * \n * If <allowEval> is true, then the text content of the this element can define\n * a function which is invoked with the shape as the only argument and returns\n * the value for the image source (ignored if the src attribute is not null).\n * \n * Sub-shapes:\n * \n * *include-shape* allow stencils to be rendered within the current stencil by\n * referencing the sub-stencil by name. Attributes are:\n * \n * - \"name\", required string. The unique shape name of the stencil.\n * - \"x\", \"y\", \"w\", \"h\", required decimals. The (x,y) position of the sub-shape\n * and its width and height.\n * \n * Constructor: mxStencil\n * \n * Constructs a new generic shape by setting <desc> to the given XML node and\n * invoking <parseDescription> and <parseConstraints>.\n * \n * Parameters:\n * \n * desc - XML node that contains the stencil description.\n */\nfunction mxStencil(desc)\n{\n\tthis.desc = desc;\n\tthis.parseDescription();\n\tthis.parseConstraints();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxStencil, mxShape);\n\n/**\n * Variable: defaultLocalized\n * \n * Static global variable that specifies the default value for the localized\n * attribute of the text element. Default is false.\n */\nmxStencil.defaultLocalized = false;\n\n/**\n * Function: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content and images. Default is false. Set this to true\n * if stencils can not contain user input.\n */\nmxStencil.allowEval = false;\n\n/**\n * Variable: desc\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.desc = null;\n\n/**\n * Variable: constraints\n * \n * Holds an array of <mxConnectionConstraints> as defined in the shape.\n */\nmxStencil.prototype.constraints = null;\n\n/**\n * Variable: aspect\n *\n * Holds the aspect of the shape. Default is 'auto'.\n */\nmxStencil.prototype.aspect = null;\n\n/**\n * Variable: w0\n *\n * Holds the width of the shape. Default is 100.\n */\nmxStencil.prototype.w0 = null;\n\n/**\n * Variable: h0\n *\n * Holds the height of the shape. Default is 100.\n */\nmxStencil.prototype.h0 = null;\n\n/**\n * Variable: bgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.bgNode = null;\n\n/**\n * Variable: fgNodes\n *\n * Holds the XML node with the stencil description.\n */\nmxStencil.prototype.fgNode = null;\n\n/**\n * Variable: strokewidth\n *\n * Holds the strokewidth direction from the description.\n */\nmxStencil.prototype.strokewidth = null;\n\n/**\n * Function: parseDescription\n *\n * Reads <w0>, <h0>, <aspect>, <bgNodes> and <fgNodes> from <desc>.\n */\nmxStencil.prototype.parseDescription = function()\n{\n\t// LATER: Preprocess nodes for faster painting\n\tthis.fgNode = this.desc.getElementsByTagName('foreground')[0];\n\tthis.bgNode = this.desc.getElementsByTagName('background')[0];\n\tthis.w0 = Number(this.desc.getAttribute('w') || 100);\n\tthis.h0 = Number(this.desc.getAttribute('h') || 100);\n\t\n\t// Possible values for aspect are: variable and fixed where\n\t// variable means fill the available space and fixed means\n\t// use w0 and h0 to compute the aspect.\n\tvar aspect = this.desc.getAttribute('aspect');\n\tthis.aspect = (aspect != null) ? aspect : 'variable';\n\t\n\t// Possible values for strokewidth are all numbers and \"inherit\"\n\t// where the inherit means take the value from the style (ie. the\n\t// user-defined stroke-width). Note that the strokewidth is scaled\n\t// by the minimum scaling that is used to draw the shape (sx, sy).\n\tvar sw = this.desc.getAttribute('strokewidth');\n\tthis.strokewidth = (sw != null) ? sw : '1';\n};\n\n/**\n * Function: parseConstraints\n *\n * Reads the constraints from <desc> into <constraints> using\n * <parseConstraint>.\n */\nmxStencil.prototype.parseConstraints = function()\n{\n\tvar conns = this.desc.getElementsByTagName('connections')[0];\n\t\n\tif (conns != null)\n\t{\n\t\tvar tmp = mxUtils.getChildNodes(conns);\n\t\t\n\t\tif (tmp != null && tmp.length > 0)\n\t\t{\n\t\t\tthis.constraints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t{\n\t\t\t\tthis.constraints.push(this.parseConstraint(tmp[i]));\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: parseConstraint\n *\n * Parses the given XML node and returns its <mxConnectionConstraint>.\n */\nmxStencil.prototype.parseConstraint = function(node)\n{\n\tvar x = Number(node.getAttribute('x'));\n\tvar y = Number(node.getAttribute('y'));\n\tvar perimeter = node.getAttribute('perimeter') == '1';\n\tvar name = node.getAttribute('name');\n\t\n\treturn new mxConnectionConstraint(new mxPoint(x, y), perimeter, name);\n};\n\n/**\n * Function: evaluateTextAttribute\n * \n * Gets the given attribute as a text. The return value from <evaluateAttribute>\n * is used as a key to <mxResources.get> if the localized attribute in the text\n * node is 1 or if <defaultLocalized> is true.\n */\nmxStencil.prototype.evaluateTextAttribute = function(node, attribute, shape)\n{\n\tvar result = this.evaluateAttribute(node, attribute, shape);\n\tvar loc = node.getAttribute('localized');\n\t\n\tif ((mxStencil.defaultLocalized && loc == null) || loc == '1')\n\t{\n\t\tresult = mxResources.get(result);\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: evaluateAttribute\n *\n * Gets the attribute for the given name from the given node. If the attribute\n * does not exist then the text content of the node is evaluated and if it is\n * a function it is invoked with <shape> as the only argument and the return\n * value is used as the attribute value to be returned.\n */\nmxStencil.prototype.evaluateAttribute = function(node, attribute, shape)\n{\n\tvar result = node.getAttribute(attribute);\n\t\n\tif (result == null)\n\t{\n\t\tvar text = mxUtils.getTextContent(node);\n\t\t\n\t\tif (text != null && mxStencil.allowEval)\n\t\t{\n\t\t\tvar funct = mxUtils.eval(text);\n\t\t\t\n\t\t\tif (typeof(funct) == 'function')\n\t\t\t{\n\t\t\t\tresult = funct(shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: drawShape\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawShape = function(canvas, shape, x, y, w, h)\n{\n\t// TODO: Internal structure (array of special structs?), relative and absolute\n\t// coordinates (eg. note shape, process vs star, actor etc.), text rendering\n\t// and non-proportional scaling, how to implement pluggable edge shapes\n\t// (start, segment, end blocks), pluggable markers, how to implement\n\t// swimlanes (title area) with this API, add icon, horizontal/vertical\n\t// label, indicator for all shapes, rotation\n\tvar direction = mxUtils.getValue(shape.style, mxConstants.STYLE_DIRECTION, null);\n\tvar aspect = this.computeAspect(shape.style, x, y, w, h, direction);\n\tvar minScale = Math.min(aspect.width, aspect.height);\n\tvar sw = (this.strokewidth == 'inherit') ?\n\t\t\tNumber(mxUtils.getNumber(shape.style, mxConstants.STYLE_STROKEWIDTH, 1)) :\n\t\t\tNumber(this.strokewidth) * minScale;\n\tcanvas.setStrokeWidth(sw);\n\n\t// Draws a transparent rectangle for catching events\n\tif (shape.style != null && mxUtils.getValue(shape.style, mxConstants.STYLE_POINTER_EVENTS, '0') == '1')\n\t{\n\t\tcanvas.setStrokeColor(mxConstants.NONE);\n\t\tcanvas.rect(x, y, w, h);\n\t\tcanvas.stroke();\n\t\tcanvas.setStrokeColor(shape.stroke);\n\t}\n\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.bgNode, aspect, false, true);\n\tthis.drawChildren(canvas, shape, x, y, w, h, this.fgNode, aspect, true,\n\t\t!shape.outline || shape.style == null || mxUtils.getValue(\n\t\tshape.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0);\n};\n\n/**\n * Function: drawChildren\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawChildren = function(canvas, shape, x, y, w, h, node, aspect, disableShadow, paint)\n{\n\tif (node != null && w > 0 && h > 0)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t{\n\t\t\t\tthis.drawNode(canvas, shape, tmp, aspect, disableShadow, paint);\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\t}\n};\n\n/**\n * Function: computeAspect\n *\n * Returns a rectangle that contains the offset in x and y and the horizontal\n * and vertical scale in width and height used to draw this shape inside the\n * given <mxRectangle>.\n * \n * Parameters:\n * \n * shape - <mxShape> to be drawn.\n * bounds - <mxRectangle> that should contain the stencil.\n * direction - Optional direction of the shape to be darwn.\n */\nmxStencil.prototype.computeAspect = function(shape, x, y, w, h, direction)\n{\n\tvar x0 = x;\n\tvar y0 = y;\n\tvar sx = w / this.w0;\n\tvar sy = h / this.h0;\n\t\n\tvar inverse = (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH);\n\n\tif (inverse)\n\t{\n\t\tsy = w / this.h0;\n\t\tsx = h / this.w0;\n\t\t\n\t\tvar delta = (w - h) / 2;\n\n\t\tx0 += delta;\n\t\ty0 -= delta;\n\t}\n\n\tif (this.aspect == 'fixed')\n\t{\n\t\tsy = Math.min(sx, sy);\n\t\tsx = sy;\n\t\t\n\t\t// Centers the shape inside the available space\n\t\tif (inverse)\n\t\t{\n\t\t\tx0 += (h - this.w0 * sx) / 2;\n\t\t\ty0 += (w - this.h0 * sy) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tx0 += (w - this.w0 * sx) / 2;\n\t\t\ty0 += (h - this.h0 * sy) / 2;\n\t\t}\n\t}\n\n\treturn new mxRectangle(x0, y0, sx, sy);\n};\n\n/**\n * Function: drawNode\n *\n * Draws this stencil inside the given bounds.\n */\nmxStencil.prototype.drawNode = function(canvas, shape, node, aspect, disableShadow, paint)\n{\n\tvar name = node.nodeName;\n\tvar x0 = aspect.x;\n\tvar y0 = aspect.y;\n\tvar sx = aspect.width;\n\tvar sy = aspect.height;\n\tvar minScale = Math.min(sx, sy);\n\t\n\tif (name == 'save')\n\t{\n\t\tcanvas.save();\n\t}\n\telse if (name == 'restore')\n\t{\n\t\tcanvas.restore();\n\t}\n\telse if (paint)\n\t{\n\t\tif (name == 'path')\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\t\n\t\t\tvar parseRegularly = true;\n\t\t\t\n\t\t\tif (node.getAttribute('rounded') == '1')\n\t\t\t{\n\t\t\t\tparseRegularly = false;\n\t\t\t\t\n\t\t\t\tvar arcSize = Number(node.getAttribute('arcSize'));\n\t\t\t\tvar pointCount = 0;\n\t\t\t\tvar segs = [];\n\t\t\t\t\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childName = childNode.nodeName;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (childName == 'move' || childName == 'line')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (childName == 'move' || segs.length == 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsegs.push([]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tsegs[segs.length - 1].push(new mxPoint(x0 + Number(childNode.getAttribute('x')) * sx,\n\t\t\t\t\t\t\t\ty0 + Number(childNode.getAttribute('y')) * sy));\n\t\t\t\t\t\t\tpointCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t//We only support move and line for rounded corners\n\t\t\t\t\t\t\tparseRegularly = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\n\t\t\t\tif (!parseRegularly && pointCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < segs.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar close = false, ps = segs[i][0], pe = segs[i][segs[i].length - 1];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (ps.x == pe.x && ps.y == pe.y) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsegs[i].pop();\n\t\t\t\t\t\t\tclose = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.addPoints(canvas, segs[i], true, arcSize, close);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tparseRegularly = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (parseRegularly)\n\t\t\t{\n\t\t\t\t// Renders the elements inside the given path\n\t\t\t\tvar childNode = node.firstChild;\n\t\t\t\t\n\t\t\t\twhile (childNode != null)\n\t\t\t\t{\n\t\t\t\t\tif (childNode.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.drawNode(canvas, shape, childNode, aspect, disableShadow, paint);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tchildNode = childNode.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (name == 'close')\n\t\t{\n\t\t\tcanvas.close();\n\t\t}\n\t\telse if (name == 'move')\n\t\t{\n\t\t\tcanvas.moveTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'line')\n\t\t{\n\t\t\tcanvas.lineTo(x0 + Number(node.getAttribute('x')) * sx, y0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'quad')\n\t\t{\n\t\t\tcanvas.quadTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy);\n\t\t}\n\t\telse if (name == 'curve')\n\t\t{\n\t\t\tcanvas.curveTo(x0 + Number(node.getAttribute('x1')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y1')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x2')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y2')) * sy,\n\t\t\t\t\tx0 + Number(node.getAttribute('x3')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y3')) * sy);\n\t\t}\n\t\telse if (name == 'arc')\n\t\t{\n\t\t\tcanvas.arcTo(Number(node.getAttribute('rx')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('ry')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('x-axis-rotation')),\n\t\t\t\t\tNumber(node.getAttribute('large-arc-flag')),\n\t\t\t\t\tNumber(node.getAttribute('sweep-flag')),\n\t\t\t\t\tx0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy);\n\t\t}\n\t\telse if (name == 'rect')\n\t\t{\n\t\t\tcanvas.rect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'roundrect')\n\t\t{\n\t\t\tvar arcsize = Number(node.getAttribute('arcsize'));\n\t\n\t\t\tif (arcsize == 0)\n\t\t\t{\n\t\t\t\tarcsize = mxConstants.RECTANGLE_ROUNDING_FACTOR * 100;\n\t\t\t}\n\t\t\t\n\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\tvar factor = Number(arcsize) / 100;\n\t\t\tvar r = Math.min(w * factor, h * factor);\n\t\t\t\n\t\t\tcanvas.roundrect(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tw, h, r, r);\n\t\t}\n\t\telse if (name == 'ellipse')\n\t\t{\n\t\t\tcanvas.ellipse(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\tNumber(node.getAttribute('h')) * sy);\n\t\t}\n\t\telse if (name == 'image')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar src = this.evaluateAttribute(node, 'src', shape);\n\t\t\t\t\n\t\t\t\tcanvas.image(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\tNumber(node.getAttribute('w')) * sx,\n\t\t\t\t\tNumber(node.getAttribute('h')) * sy,\n\t\t\t\t\tsrc, false, node.getAttribute('flipH') == '1',\n\t\t\t\t\tnode.getAttribute('flipV') == '1');\n\t\t\t}\n\t\t}\n\t\telse if (name == 'text')\n\t\t{\n\t\t\tif (!shape.outline)\n\t\t\t{\n\t\t\t\tvar str = this.evaluateTextAttribute(node, 'str', shape);\n\t\t\t\tvar rotation = node.getAttribute('vertical') == '1' ? -90 : 0;\n\t\t\t\t\n\t\t\t\tif (node.getAttribute('align-shape') == '0')\n\t\t\t\t{\n\t\t\t\t\tvar dr = shape.rotation;\n\t\t\n\t\t\t\t\t// Depends on flipping\n\t\t\t\t\tvar flipH = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(shape.style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (flipH && flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t\telse if (flipH || flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\trotation += dr;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\trotation -= dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\trotation -= node.getAttribute('rotation');\n\t\t\n\t\t\t\tcanvas.text(x0 + Number(node.getAttribute('x')) * sx,\n\t\t\t\t\t\ty0 + Number(node.getAttribute('y')) * sy,\n\t\t\t\t\t\t0, 0, str, node.getAttribute('align') || 'left',\n\t\t\t\t\t\tnode.getAttribute('valign') || 'top', false, '',\n\t\t\t\t\t\tnull, false, rotation);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'include-shape')\n\t\t{\n\t\t\tvar stencil = mxStencilRegistry.getStencil(node.getAttribute('name'));\n\t\t\t\n\t\t\tif (stencil != null)\n\t\t\t{\n\t\t\t\tvar x = x0 + Number(node.getAttribute('x')) * sx;\n\t\t\t\tvar y = y0 + Number(node.getAttribute('y')) * sy;\n\t\t\t\tvar w = Number(node.getAttribute('w')) * sx;\n\t\t\t\tvar h = Number(node.getAttribute('h')) * sy;\n\t\t\t\t\n\t\t\t\tstencil.drawShape(canvas, shape, x, y, w, h);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'fillstroke')\n\t\t{\n\t\t\tcanvas.fillAndStroke();\n\t\t}\n\t\telse if (name == 'fill')\n\t\t{\n\t\t\tcanvas.fill();\n\t\t}\n\t\telse if (name == 'stroke')\n\t\t{\n\t\t\tcanvas.stroke();\n\t\t}\n\t\telse if (name == 'strokewidth')\n\t\t{\n\t\t\tvar s = (node.getAttribute('fixed') == '1') ? 1 : minScale;\n\t\t\tcanvas.setStrokeWidth(Number(node.getAttribute('width')) * s);\n\t\t}\n\t\telse if (name == 'dashed')\n\t\t{\n\t\t\tcanvas.setDashed(node.getAttribute('dashed') == '1');\n\t\t}\n\t\telse if (name == 'dashpattern')\n\t\t{\n\t\t\tvar value = node.getAttribute('pattern');\n\t\t\t\n\t\t\tif (value != null)\n\t\t\t{\n\t\t\t\tvar tmp = value.split(' ');\n\t\t\t\tvar pat = [];\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < tmp.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (tmp[i].length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tpat.push(Number(tmp[i]) * minScale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = pat.join(' ');\n\t\t\t\tcanvas.setDashPattern(value);\n\t\t\t}\n\t\t}\n\t\telse if (name == 'strokecolor')\n\t\t{\n\t\t\tcanvas.setStrokeColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'linecap')\n\t\t{\n\t\t\tcanvas.setLineCap(node.getAttribute('cap'));\n\t\t}\n\t\telse if (name == 'linejoin')\n\t\t{\n\t\t\tcanvas.setLineJoin(node.getAttribute('join'));\n\t\t}\n\t\telse if (name == 'miterlimit')\n\t\t{\n\t\t\tcanvas.setMiterLimit(Number(node.getAttribute('limit')));\n\t\t}\n\t\telse if (name == 'fillcolor')\n\t\t{\n\t\t\tcanvas.setFillColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'alpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fillalpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'strokealpha')\n\t\t{\n\t\t\tcanvas.setAlpha(node.getAttribute('alpha'));\n\t\t}\n\t\telse if (name == 'fontcolor')\n\t\t{\n\t\t\tcanvas.setFontColor(node.getAttribute('color'));\n\t\t}\n\t\telse if (name == 'fontstyle')\n\t\t{\n\t\t\tcanvas.setFontStyle(node.getAttribute('style'));\n\t\t}\n\t\telse if (name == 'fontfamily')\n\t\t{\n\t\t\tcanvas.setFontFamily(node.getAttribute('family'));\n\t\t}\n\t\telse if (name == 'fontsize')\n\t\t{\n\t\t\tcanvas.setFontSize(Number(node.getAttribute('size')) * minScale);\n\t\t}\n\t\t\n\t\tif (disableShadow && (name == 'fillstroke' || name == 'fill' || name == 'stroke'))\n\t\t{\n\t\t\tdisableShadow = false;\n\t\t\tcanvas.setShadow(false);\n\t\t}\n\t}\n};\n\n__mxOutput.mxStencil = typeof mxStencil !== 'undefined' ? mxStencil : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n * \n * Code to add stencils.\n * \n * (code)\n * var req = mxUtils.load('test/stencils.xml');\n * var root = req.getDocumentElement();\n * var shape = root.firstChild;\n * \n * while (shape != null)\n * {\n * \t if (shape.nodeType == mxConstants.NODETYPE_ELEMENT)\n *   {\n *     mxStencilRegistry.addStencil(shape.getAttribute('name'), new mxStencil(shape));\n *   }\n *   \n *   shape = shape.nextSibling;\n * }\n * (end)\n */\nvar mxStencilRegistry =\n{\n\t/**\n\t * Class: mxStencilRegistry\n\t * \n\t * A singleton class that provides a registry for stencils and the methods\n\t * for painting those stencils onto a canvas or into a DOM.\n\t */\n\tstencils: {},\n\t\n\t/**\n\t * Function: addStencil\n\t * \n\t * Adds the given <mxStencil>.\n\t */\n\taddStencil: function(name, stencil)\n\t{\n\t\tmxStencilRegistry.stencils[name] = stencil;\n\t},\n\t\n\t/**\n\t * Function: getStencil\n\t * \n\t * Returns the <mxStencil> for the given name.\n\t */\n\tgetStencil: function(name)\n\t{\n\t\treturn mxStencilRegistry.stencils[name];\n\t}\n\n};\n\n__mxOutput.mxStencilRegistry = typeof mxStencilRegistry !== 'undefined' ? mxStencilRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxMarker =\n{\n\t/**\n\t * Class: mxMarker\n\t * \n\t * A static class that implements all markers for VML and SVG using a\n\t * registry. NOTE: The signatures in this class will change.\n\t * \n\t * Variable: markers\n\t * \n\t * Maps from markers names to functions to paint the markers.\n\t */\n\tmarkers: [],\n\t\n\t/**\n\t * Function: addMarker\n\t * \n\t * Adds a factory method that updates a given endpoint and returns a\n\t * function to paint the marker onto the given canvas.\n\t */\n\taddMarker: function(type, funct)\n\t{\n\t\tmxMarker.markers[type] = funct;\n\t},\n\t\n\t/**\n\t * Function: createMarker\n\t * \n\t * Returns a function to paint the given marker.\n\t */\n\tcreateMarker: function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar funct = mxMarker.markers[type];\n\t\t\n\t\treturn (funct != null) ? funct(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled) : null;\n\t}\n\n};\n\n/**\n * Adds the classic and block marker factory method.\n */\n(function()\n{\n\tfunction createArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tvar f = (type != mxConstants.ARROW_CLASSIC && type != mxConstants.ARROW_CLASSIC_THIN) ? 1 : 3 / 4;\n\t\t\tpe.x += -unitX * f - endOffsetX;\n\t\t\tpe.y += -unitY * f - endOffsetY;\n\t\t\t\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\n\t\t\t\tif (type == mxConstants.ARROW_CLASSIC || type == mxConstants.ARROW_CLASSIC_THIN)\n\t\t\t\t{\n\t\t\t\t\tcanvas.lineTo(pt.x - unitX * 3 / 4, pt.y - unitY * 3 / 4);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.close();\n\t\n\t\t\t\tif (filled)\n\t\t\t\t{\n\t\t\t\t\tcanvas.fillAndStroke();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.stroke();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('classic', createArrow(2));\n\tmxMarker.addMarker('classicThin', createArrow(3));\n\tmxMarker.addMarker('block', createArrow(2));\n\tmxMarker.addMarker('blockThin', createArrow(3));\n\t\n\tfunction createOpenArrow(widthFactor)\n\t{\n\t\twidthFactor = (widthFactor != null) ? widthFactor : 2;\n\t\t\n\t\treturn function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t\t{\n\t\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t\t// 26.565 degrees, 1/sin(26.565) = 2.236 / 2 = 1.118 ( / 2 allows for\n\t\t\t// only half the strokewidth is processed ).\n\t\t\tvar endOffsetX = unitX * sw * 1.118;\n\t\t\tvar endOffsetY = unitY * sw * 1.118;\n\t\t\t\n\t\t\tunitX = unitX * (size + sw);\n\t\t\tunitY = unitY * (size + sw);\n\t\t\t\n\t\t\tvar pt = pe.clone();\n\t\t\tpt.x -= endOffsetX;\n\t\t\tpt.y -= endOffsetY;\n\t\t\t\n\t\t\tpe.x += -endOffsetX * 2;\n\t\t\tpe.y += -endOffsetY * 2;\n\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tcanvas.begin();\n\t\t\t\tcanvas.moveTo(pt.x - unitX - unitY / widthFactor, pt.y - unitY + unitX / widthFactor);\n\t\t\t\tcanvas.lineTo(pt.x, pt.y);\n\t\t\t\tcanvas.lineTo(pt.x + unitY / widthFactor - unitX, pt.y - unitY - unitX / widthFactor);\n\t\t\t\tcanvas.stroke();\n\t\t\t};\n\t\t}\n\t};\n\t\n\tmxMarker.addMarker('open', createOpenArrow(2));\n\tmxMarker.addMarker('openThin', createOpenArrow(3));\n\t\n\tmxMarker.addMarker('oval', function(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\tvar a = size / 2;\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpe.x -= unitX * a;\n\t\tpe.y -= unitY * a;\n\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.ellipse(pt.x - a, pt.y - a, size, size);\n\t\t\t\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction diamond(canvas, shape, type, pe, unitX, unitY, size, source, sw, filled)\n\t{\n\t\t// The angle of the forward facing arrow sides against the x axis is\n\t\t// 45 degrees, 1/sin(45) = 1.4142 / 2 = 0.7071 ( / 2 allows for\n\t\t// only half the strokewidth is processed ). Or 0.9862 for thin diamond.\n\t\t// Note these values and the tk variable below are dependent, update\n\t\t// both together (saves trig hard coding it).\n\t\tvar swFactor = (type == mxConstants.ARROW_DIAMOND) ?  0.7071 : 0.9862;\n\t\tvar endOffsetX = unitX * sw * swFactor;\n\t\tvar endOffsetY = unitY * sw * swFactor;\n\t\t\n\t\tunitX = unitX * (size + sw);\n\t\tunitY = unitY * (size + sw);\n\t\t\n\t\tvar pt = pe.clone();\n\t\tpt.x -= endOffsetX;\n\t\tpt.y -= endOffsetY;\n\t\t\n\t\tpe.x += -unitX - endOffsetX;\n\t\tpe.y += -unitY - endOffsetY;\n\t\t\n\t\t// thickness factor for diamond\n\t\tvar tk = ((type == mxConstants.ARROW_DIAMOND) ?  2 : 3.4);\n\t\t\n\t\treturn function()\n\t\t{\n\t\t\tcanvas.begin();\n\t\t\tcanvas.moveTo(pt.x, pt.y);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 - unitY / tk, pt.y + unitX / tk - unitY / 2);\n\t\t\tcanvas.lineTo(pt.x - unitX, pt.y - unitY);\n\t\t\tcanvas.lineTo(pt.x - unitX / 2 + unitY / tk, pt.y - unitY / 2 - unitX / tk);\n\t\t\tcanvas.close();\n\t\t\t\n\t\t\tif (filled)\n\t\t\t{\n\t\t\t\tcanvas.fillAndStroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.stroke();\n\t\t\t}\n\t\t};\n\t};\n\n\tmxMarker.addMarker('diamond', diamond);\n\tmxMarker.addMarker('diamondThin', diamond);\n})();\n\n__mxOutput.mxMarker = typeof mxMarker !== 'undefined' ? mxMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxActor\n *\n * Extends <mxShape> to implement an actor shape. If a custom shape with one\n * filled area is needed, then this shape's <redrawPath> should be overridden.\n * \n * Example:\n * \n * (code)\n * function SampleShape() { }\n * \n * SampleShape.prototype = new mxActor();\n * SampleShape.prototype.constructor = vsAseShape;\n * \n * mxCellRenderer.registerShape('sample', SampleShape);\n * SampleShape.prototype.redrawPath = function(path, x, y, w, h)\n * {\n *   path.moveTo(0, 0);\n *   path.lineTo(w, h);\n *   // ...\n *   path.close();\n * }\n * (end)\n * \n * This shape is registered under <mxConstants.SHAPE_ACTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxActor\n *\n * Constructs a new actor shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxActor(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxActor, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxActor.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxActor.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar width = w/3;\n\tc.moveTo(0, h);\n\tc.curveTo(0, 3 * h / 5, 0, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w / 2 - width, 2 * h / 5, w / 2 - width, 0, w / 2, 0);\n\tc.curveTo(w / 2 + width, 0, w / 2 + width, 2 * h / 5, w / 2, 2 * h / 5);\n\tc.curveTo(w, 2 * h / 5, w, 3 * h / 5, w, h);\n\tc.close();\n};\n\n__mxOutput.mxActor = typeof mxActor !== 'undefined' ? mxActor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCloud\n *\n * Extends <mxActor> to implement a cloud shape.\n * \n * This shape is registered under <mxConstants.SHAPE_CLOUD> in\n * <mxCellRenderer>.\n * \n * Constructor: mxCloud\n *\n * Constructs a new cloud shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCloud(bounds, fill, stroke, strokewidth)\n{\n\tmxActor.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxCloud, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCloud.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tc.moveTo(0.25 * w, 0.25 * h);\n\tc.curveTo(0.05 * w, 0.25 * h, 0, 0.5 * h, 0.16 * w, 0.55 * h);\n\tc.curveTo(0, 0.66 * h, 0.18 * w, 0.9 * h, 0.31 * w, 0.8 * h);\n\tc.curveTo(0.4 * w, h, 0.7 * w, h, 0.8 * w, 0.8 * h);\n\tc.curveTo(w, 0.8 * h, w, 0.6 * h, 0.875 * w, 0.5 * h);\n\tc.curveTo(w, 0.3 * h, 0.8 * w, 0.1 * h, 0.625 * w, 0.2 * h);\n\tc.curveTo(0.5 * w, 0.05 * h, 0.3 * w, 0.05 * h, 0.25 * w, 0.25 * h);\n\tc.close();\n};\n\n__mxOutput.mxCloud = typeof mxCloud !== 'undefined' ? mxCloud : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRectangleShape\n *\n * Extends <mxShape> to implement a rectangle shape.\n * This shape is registered under <mxConstants.SHAPE_RECTANGLE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRectangleShape\n *\n * Constructs a new rectangle shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRectangleShape(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRectangleShape, mxShape);\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient.\n */\nmxRectangleShape.prototype.isHtmlAllowed = function()\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\t\t\n\t}\n\t\n\treturn !this.isRounded && !this.glass && this.rotation == 0 && (events ||\n\t\t(this.fill != null && this.fill != mxConstants.NONE));\n};\n\n/**\n * Function: paintBackground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tvar events = true;\n\t\n\tif (this.style != null)\n\t{\n\t\tevents = mxUtils.getValue(this.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1';\n\t}\n\t\n\tif (events || (this.fill != null && this.fill != mxConstants.NONE) ||\n\t\t(this.stroke != null && this.stroke != mxConstants.NONE))\n\t{\n\t\tif (!events && (this.fill == null || this.fill == mxConstants.NONE))\n\t\t{\n\t\t\tc.pointerEvents = false;\n\t\t}\n\t\t\n\t\tif (this.isRounded)\n\t\t{\n\t\t\tvar r = 0;\n\t\t\t\n\t\t\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ABSOLUTE_ARCSIZE, 0) == '1')\n\t\t\t{\n\t\t\t\tr = Math.min(w / 2, Math.min(h / 2, mxUtils.getValue(this.style,\n\t\t\t\t\tmxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE,\n\t\t\t\t\tmxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\t\t\t\tr = Math.min(w * f, h * f);\n\t\t\t}\n\t\t\t\n\t\t\tc.roundrect(x, y, w, h, r, r);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.rect(x, y, w, h);\n\t\t}\n\t\t\t\n\t\tc.fillAndStroke();\n\t}\n};\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRectangleShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxRectangleShape.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (this.glass && !this.outline && this.fill != null && this.fill != mxConstants.NONE)\n\t{\n\t\tthis.paintGlassEffect(c, x, y, w, h, this.getArcSize(w + this.strokewidth, h + this.strokewidth));\n\t}\n};\n\n__mxOutput.mxRectangleShape = typeof mxRectangleShape !== 'undefined' ? mxRectangleShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEllipse\n *\n * Extends <mxShape> to implement an ellipse shape.\n * This shape is registered under <mxConstants.SHAPE_ELLIPSE>\n * in <mxCellRenderer>.\n * \n * Constructor: mxEllipse\n *\n * Constructs a new ellipse shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxEllipse, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Paints the ellipse shape.\n */\nmxEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxEllipse = typeof mxEllipse !== 'undefined' ? mxEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDoubleEllipse\n *\n * Extends <mxShape> to implement a double ellipse shape. This shape is\n * registered under <mxConstants.SHAPE_DOUBLE_ELLIPSE> in <mxCellRenderer>.\n * Use the following override to only fill the inner ellipse in this shape:\n * \n * (code)\n * mxDoubleEllipse.prototype.paintVertexShape = function(c, x, y, w, h)\n * {\n *   c.ellipse(x, y, w, h);\n *   c.stroke();\n *   \n *   var inset = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n *   x += inset;\n *   y += inset;\n *   w -= 2 * inset;\n *   h -= 2 * inset;\n *   \n *   if (w > 0 && h > 0)\n *   {\n *     c.ellipse(x, y, w, h);\n *   }\n *   \n *   c.fillAndStroke();\n * };\n * (end)\n * \n * Constructor: mxDoubleEllipse\n *\n * Constructs a new ellipse shape.\n *\n * Parameters:\n *\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxDoubleEllipse(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxDoubleEllipse, mxShape);\n\n/**\n * Variable: vmlScale\n * \n * Scale for improving the precision of VML rendering. Default is 10.\n */\nmxDoubleEllipse.prototype.vmlScale = 10;\n\n/**\n * Function: paintBackground\n * \n * Paints the background.\n */\nmxDoubleEllipse.prototype.paintBackground = function(c, x, y, w, h)\n{\n\tc.ellipse(x, y, w, h);\n\tc.fillAndStroke();\n};\n\n/**\n * Function: paintForeground\n * \n * Paints the foreground.\n */\nmxDoubleEllipse.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tif (!this.outline)\n\t{\n\t\tvar margin = mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth, Math.min(w / 5, h / 5)));\n\t\tx += margin;\n\t\ty += margin;\n\t\tw -= 2 * margin;\n\t\th -= 2 * margin;\n\t\t\n\t\t// FIXME: Rounding issues in IE8 standards mode (not in 1.x)\n\t\tif (w > 0 && h > 0)\n\t\t{\n\t\t\tc.ellipse(x, y, w, h);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds for the label.\n */\nmxDoubleEllipse.prototype.getLabelBounds = function(rect)\n{\n\tvar margin = (mxUtils.getValue(this.style, mxConstants.STYLE_MARGIN, Math.min(3 + this.strokewidth,\n\t\t\tMath.min(rect.width / 5 / this.scale, rect.height / 5 / this.scale)))) * this.scale;\n\n\treturn new mxRectangle(rect.x + margin, rect.y + margin, rect.width - 2 * margin, rect.height - 2 * margin);\n};\n\n__mxOutput.mxDoubleEllipse = typeof mxDoubleEllipse !== 'undefined' ? mxDoubleEllipse : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRhombus\n *\n * Extends <mxShape> to implement a rhombus (aka diamond) shape.\n * This shape is registered under <mxConstants.SHAPE_RHOMBUS>\n * in <mxCellRenderer>.\n * \n * Constructor: mxRhombus\n *\n * Constructs a new rhombus shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxRhombus(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxRhombus, mxShape);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxRhombus.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic painting implementation.\n */\nmxRhombus.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar hw = w / 2;\n\tvar hh = h / 2;\n\t\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, [new mxPoint(x + hw, y), new mxPoint(x + w, y + hh), new mxPoint(x + hw, y + h),\n\t     new mxPoint(x, y + hh)], this.isRounded, arcSize, true);\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxRhombus = typeof mxRhombus !== 'undefined' ? mxRhombus : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPolyline\n *\n * Extends <mxShape> to implement a polyline (a line with multiple points).\n * This shape is registered under <mxConstants.SHAPE_POLYLINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxPolyline\n *\n * Constructs a new polyline shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxPolyline(points, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxPolyline, mxShape);\n\n/**\n * Function: getRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0.\n */\nmxPolyline.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Returns false.\n */\nmxPolyline.prototype.isPaintBoundsInverted = function()\n{\n\treturn false;\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintEdgeShape = function(c, pts)\n{\n\tvar prev = c.pointerEventsValue;\n\tc.pointerEventsValue = 'stroke';\n\t\n\tif (this.style == null || this.style[mxConstants.STYLE_CURVED] != 1)\n\t{\n\t\tthis.paintLine(c, pts, this.isRounded);\n\t}\n\telse\n\t{\n\t\tthis.paintCurvedLine(c, pts);\n\t}\n\t\n\tc.pointerEventsValue = prev;\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintLine = function(c, pts, rounded)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tc.begin();\n\tthis.addPoints(c, pts, rounded, arcSize, false);\n\tc.stroke();\n};\n\n/**\n * Function: paintLine\n * \n * Paints the line shape.\n */\nmxPolyline.prototype.paintCurvedLine = function(c, pts)\n{\n\tc.begin();\n\t\n\tvar pt = pts[0];\n\tvar n = pts.length;\n\t\n\tc.moveTo(pt.x, pt.y);\n\t\n\tfor (var i = 1; i < n - 2; i++)\n\t{\n\t\tvar p0 = pts[i];\n\t\tvar p1 = pts[i + 1];\n\t\tvar ix = (p0.x + p1.x) / 2;\n\t\tvar iy = (p0.y + p1.y) / 2;\n\t\t\n\t\tc.quadTo(p0.x, p0.y, ix, iy);\n\t}\n\t\n\tvar p0 = pts[n - 2];\n\tvar p1 = pts[n - 1];\n\t\n\tc.quadTo(p0.x, p0.y, p1.x, p1.y);\n\tc.stroke();\n};\n\n__mxOutput.mxPolyline = typeof mxPolyline !== 'undefined' ? mxPolyline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrow\n *\n * Extends <mxShape> to implement an arrow shape. (The shape\n * is used to represent edges, not vertices.)\n * This shape is registered under <mxConstants.SHAPE_ARROW>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrow\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrow(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.spacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.endSize = (endSize != null) ? endSize : mxConstants.ARROW_SIZE;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrow, mxShape);\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrow.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = Math.max(this.arrowWidth, this.endSize);\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrow.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar spacing =  mxConstants.ARROW_SPACING;\n\tvar width = mxConstants.ARROW_WIDTH;\n\tvar arrow = mxConstants.ARROW_SIZE;\n\n\t// Base vector (between end points)\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\tvar dx = pe.x - p0.x;\n\tvar dy = pe.y - p0.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tvar length = dist - 2 * spacing - arrow;\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar ny = dy / dist;\n\tvar basex = length * nx;\n\tvar basey = length * ny;\n\tvar floorx = width * ny/3;\n\tvar floory = -width * nx/3;\n\t\n\t// Computes points\n\tvar p0x = p0.x - floorx / 2 + spacing * nx;\n\tvar p0y = p0.y - floory / 2 + spacing * ny;\n\tvar p1x = p0x + floorx;\n\tvar p1y = p0y + floory;\n\tvar p2x = p1x + basex;\n\tvar p2y = p1y + basey;\n\tvar p3x = p2x + floorx;\n\tvar p3y = p2y + floory;\n\t// p4 not necessary\n\tvar p5x = p3x - 3 * floorx;\n\tvar p5y = p3y - 3 * floory;\n\t\n\tc.begin();\n\tc.moveTo(p0x, p0y);\n\tc.lineTo(p1x, p1y);\n\tc.lineTo(p2x, p2y);\n\tc.lineTo(p3x, p3y);\n\tc.lineTo(pe.x - spacing * nx, pe.y - spacing * ny);\n\tc.lineTo(p5x, p5y);\n\tc.lineTo(p5x + floorx, p5y + floory);\n\tc.close();\n\n\tc.fillAndStroke();\n};\n\n__mxOutput.mxArrow = typeof mxArrow !== 'undefined' ? mxArrow : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxArrowConnector\n *\n * Extends <mxShape> to implement an new rounded arrow shape with support for\n * waypoints and double arrows. (The shape is used to represent edges, not\n * vertices.) This shape is registered under <mxConstants.SHAPE_ARROW_CONNECTOR>\n * in <mxCellRenderer>.\n * \n * Constructor: mxArrowConnector\n *\n * Constructs a new arrow shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n * arrowWidth - Optional integer that defines the arrow width. Default is\n * <mxConstants.ARROW_WIDTH>. This is stored in <arrowWidth>.\n * spacing - Optional integer that defines the spacing between the arrow shape\n * and its endpoints. Default is <mxConstants.ARROW_SPACING>. This is stored in\n * <spacing>.\n * endSize - Optional integer that defines the size of the arrowhead. Default\n * is <mxConstants.ARROW_SIZE>. This is stored in <endSize>.\n */\nfunction mxArrowConnector(points, fill, stroke, strokewidth, arrowWidth, spacing, endSize)\n{\n\tmxShape.call(this);\n\tthis.points = points;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.arrowWidth = (arrowWidth != null) ? arrowWidth : mxConstants.ARROW_WIDTH;\n\tthis.arrowSpacing = (spacing != null) ? spacing : mxConstants.ARROW_SPACING;\n\tthis.startSize = mxConstants.ARROW_SIZE / 5;\n\tthis.endSize = mxConstants.ARROW_SIZE / 5;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxArrowConnector, mxShape);\n\n/**\n * Variable: useSvgBoundingBox\n * \n * Allows to use the SVG bounding box in SVG. Default is false for performance\n * reasons.\n */\nmxArrowConnector.prototype.useSvgBoundingBox = true;\n\n/**\n * Variable: resetStyles\n * \n * Overrides mxShape to reset spacing.\n */\nmxArrowConnector.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.arrowSpacing = mxConstants.ARROW_SPACING;\n};\n\n/**\n * Overrides apply to get smooth transition from default start- and endsize.\n */\nmxArrowConnector.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\n\tif (this.style != null)\n\t{\n\t\tthis.startSize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t\tthis.endSize = mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.ARROW_SIZE / 5) * 3;\n\t}\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the edge width and markers.\n */\nmxArrowConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\tvar w = this.getEdgeWidth();\n\t\n\tif (this.isMarkerStart())\n\t{\n\t\tw = Math.max(w, this.getStartArrowWidth());\n\t}\n\t\n\tif (this.isMarkerEnd())\n\t{\n\t\tw = Math.max(w, this.getEndArrowWidth());\n\t}\n\t\n\tbbox.grow((w / 2 + this.strokewidth) * this.scale);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// Geometry of arrow\n\tvar strokeWidth = this.strokewidth;\n\t\n\tif (this.outline)\n\t{\n\t\tstrokeWidth = Math.max(1, mxUtils.getNumber(this.style, mxConstants.STYLE_STROKEWIDTH, this.strokewidth));\n\t}\n\t\n\tvar startWidth = this.getStartArrowWidth() + strokeWidth;\n\tvar endWidth = this.getEndArrowWidth() + strokeWidth;\n\tvar edgeWidth = this.outline ? this.getEdgeWidth() + strokeWidth : this.getEdgeWidth();\n\tvar openEnded = this.isOpenEnded();\n\tvar markerStart = this.isMarkerStart();\n\tvar markerEnd = this.isMarkerEnd();\n\tvar spacing = (openEnded) ? 0 : this.arrowSpacing + strokeWidth / 2;\n\tvar startSize = this.startSize + strokeWidth;\n\tvar endSize = this.endSize + strokeWidth;\n\tvar isRounded = this.isArrowRounded();\n\t\n\t// Base vector (between first points)\n\tvar pe = pts[pts.length - 1];\n\n\t// Finds first non-overlapping point\n\tvar i0 = 1;\n\t\n\twhile (i0 < pts.length - 1 && pts[i0].x == pts[0].x && pts[i0].y == pts[0].y)\n\t{\n\t\ti0++;\n\t}\n\t\n\tvar dx = pts[i0].x - pts[0].x;\n\tvar dy = pts[i0].y - pts[0].y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\t\n\tif (dist == 0)\n\t{\n\t\treturn;\n\t}\n\t\n\t// Computes the norm and the inverse norm\n\tvar nx = dx / dist;\n\tvar nx2, nx1 = nx;\n\tvar ny = dy / dist;\n\tvar ny2, ny1 = ny;\n\tvar orthx = edgeWidth * ny;\n\tvar orthy = -edgeWidth * nx;\n\t\n\t// Stores the inbound function calls in reverse order in fns\n\tvar fns = [];\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('round');\n\t}\n\telse if (pts.length > 2)\n\t{\n\t\t// Only mitre if there are waypoints\n\t\tc.setMiterLimit(1.42);\n\t}\n\n\tc.begin();\n\n\tvar startNx = nx;\n\tvar startNy = ny;\n\n\tif (markerStart && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pts[0].x, pts[0].y, nx, ny, startSize, startWidth, edgeWidth, spacing, true);\n\t}\n\telse\n\t{\n\t\tvar outStartX = pts[0].x + orthx / 2 + spacing * nx;\n\t\tvar outStartY = pts[0].y + orthy / 2 + spacing * ny;\n\t\tvar inEndX = pts[0].x - orthx / 2 + spacing * nx;\n\t\tvar inEndY = pts[0].y - orthy / 2 + spacing * ny;\n\t\t\n\t\tif (openEnded)\n\t\t{\n\t\t\tc.moveTo(outStartX, outStartY);\n\t\t\t\n\t\t\tfns.push(function()\n\t\t\t{\n\t\t\t\tc.lineTo(inEndX, inEndY);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inEndX, inEndY);\n\t\t\tc.lineTo(outStartX, outStartY);\n\t\t}\n\t}\n\t\n\tvar dx1 = 0;\n\tvar dy1 = 0;\n\tvar dist1 = 0;\n\n\tfor (var i = 0; i < pts.length - 2; i++)\n\t{\n\t\t// Work out in which direction the line is bending\n\t\tvar pos = mxUtils.relativeCcw(pts[i].x, pts[i].y, pts[i+1].x, pts[i+1].y, pts[i+2].x, pts[i+2].y);\n\n\t\tdx1 = pts[i+2].x - pts[i+1].x;\n\t\tdy1 = pts[i+2].y - pts[i+1].y;\n\n\t\tdist1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);\n\t\t\n\t\tif (dist1 != 0)\n\t\t{\n\t\t\tnx1 = dx1 / dist1;\n\t\t\tny1 = dy1 / dist1;\n\t\t\t\n\t\t\tvar tmp1 = nx * nx1 + ny * ny1;\n\t\t\ttmp = Math.max(Math.sqrt((tmp1 + 1) / 2), 0.04);\n\t\t\t\n\t\t\t// Work out the normal orthogonal to the line through the control point and the edge sides intersection\n\t\t\tnx2 = (nx + nx1);\n\t\t\tny2 = (ny + ny1);\n\t\n\t\t\tvar dist2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);\n\t\t\t\n\t\t\tif (dist2 != 0)\n\t\t\t{\n\t\t\t\tnx2 = nx2 / dist2;\n\t\t\t\tny2 = ny2 / dist2;\n\t\t\t\t\n\t\t\t\t// Higher strokewidths require a larger minimum bend, 0.35 covers all but the most extreme cases\n\t\t\t\tvar strokeWidthFactor = Math.max(tmp, Math.min(this.strokewidth / 200 + 0.04, 0.35));\n\t\t\t\tvar angleFactor = (pos != 0 && isRounded) ? Math.max(0.1, strokeWidthFactor) : Math.max(tmp, 0.06);\n\n\t\t\t\tvar outX = pts[i+1].x + ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar outY = pts[i+1].y - nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inX = pts[i+1].x - ny2 * edgeWidth / 2 / angleFactor;\n\t\t\t\tvar inY = pts[i+1].y + nx2 * edgeWidth / 2 / angleFactor;\n\t\t\t\t\n\t\t\t\tif (pos == 0 || !isRounded)\n\t\t\t\t{\n\t\t\t\t\t// If the two segments are aligned, or if we're not drawing curved sections between segments\n\t\t\t\t\t// just draw straight to the intersection point\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse if (pos == -1)\n\t\t\t\t{\n\t\t\t\t\tvar c1x = inX + ny * edgeWidth;\n\t\t\t\t\tvar c1y = inY - nx * edgeWidth;\n\t\t\t\t\tvar c2x = inX + ny1 * edgeWidth;\n\t\t\t\t\tvar c2y = inY - nx1 * edgeWidth;\n\t\t\t\t\tc.lineTo(c1x, c1y);\n\t\t\t\t\tc.quadTo(outX, outY, c2x, c2y);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(x, y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tc.lineTo(outX, outY);\n\t\t\t\t\t\n\t\t\t\t\t(function(x, y)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c1x = outX - ny * edgeWidth;\n\t\t\t\t\t\tvar c1y = outY + nx * edgeWidth;\n\t\t\t\t\t\tvar c2x = outX - ny1 * edgeWidth;\n\t\t\t\t\t\tvar c2y = outY + nx1 * edgeWidth;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.quadTo(x, y, c1x, c1y);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns.push(function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.lineTo(c2x, c2y);\n\t\t\t\t\t\t});\n\t\t\t\t\t})(inX, inY);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnx = nx1;\n\t\t\t\tny = ny1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\torthx = edgeWidth * ny1;\n\torthy = - edgeWidth * nx1;\n\n\tif (markerEnd && !openEnded)\n\t{\n\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, false);\n\t}\n\telse\n\t{\n\t\tc.lineTo(pe.x - spacing * nx1 + orthx / 2, pe.y - spacing * ny1 + orthy / 2);\n\t\t\n\t\tvar inStartX = pe.x - spacing * nx1 - orthx / 2;\n\t\tvar inStartY = pe.y - spacing * ny1 - orthy / 2;\n\n\t\tif (!openEnded)\n\t\t{\n\t\t\tc.lineTo(inStartX, inStartY);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t\n\t\t\tfns.splice(0, 0, function()\n\t\t\t{\n\t\t\t\tc.moveTo(inStartX, inStartY);\n\t\t\t});\n\t\t}\n\t}\n\t\n\tfor (var i = fns.length - 1; i >= 0; i--)\n\t{\n\t\tfns[i]();\n\t}\n\n\tif (openEnded)\n\t{\n\t\tc.end();\n\t\tc.stroke();\n\t}\n\telse\n\t{\n\t\tc.close();\n\t\tc.fillAndStroke();\n\t}\n\t\n\t// Workaround for shadow on top of base arrow\n\tc.setShadow(false);\n\t\n\t// Need to redraw the markers without the low miter limit\n\tc.setMiterLimit(4);\n\t\n\tif (isRounded)\n\t{\n\t\tc.setLineJoin('flat');\n\t}\n\n\tif (pts.length > 2)\n\t{\n\t\t// Only to repaint markers if no waypoints\n\t\t// Need to redraw the markers without the low miter limit\n\t\tc.setMiterLimit(4);\n\t\tif (markerStart && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pts[0].x, pts[0].y, startNx, startNy, startSize, startWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t\t\n\t\tif (markerEnd && !openEnded)\n\t\t{\n\t\t\tc.begin();\n\t\t\tthis.paintMarker(c, pe.x, pe.y, -nx, -ny, endSize, endWidth, edgeWidth, spacing, true);\n\t\t\tc.stroke();\n\t\t\tc.end();\n\t\t}\n\t}\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxArrowConnector.prototype.paintMarker = function(c, ptX, ptY, nx, ny, size, arrowWidth, edgeWidth, spacing, initialMove)\n{\n\tvar widthArrowRatio = edgeWidth / arrowWidth;\n\tvar orthx = edgeWidth * ny / 2;\n\tvar orthy = -edgeWidth * nx / 2;\n\n\tvar spaceX = (spacing + size) * nx;\n\tvar spaceY = (spacing + size) * ny;\n\n\tif (initialMove)\n\t{\n\t\tc.moveTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\telse\n\t{\n\t\tc.lineTo(ptX - orthx + spaceX, ptY - orthy + spaceY);\n\t}\n\n\tc.lineTo(ptX - orthx / widthArrowRatio + spaceX, ptY - orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + spacing * nx, ptY + spacing * ny);\n\tc.lineTo(ptX + orthx / widthArrowRatio + spaceX, ptY + orthy / widthArrowRatio + spaceY);\n\tc.lineTo(ptX + orthx + spaceX, ptY + orthy + spaceY);\n}\n\n/**\n * Function: isArrowRounded\n * \n * Returns wether the arrow is rounded\n */\nmxArrowConnector.prototype.isArrowRounded = function()\n{\n\treturn this.isRounded;\n};\n\n/**\n * Function: getStartArrowWidth\n * \n * Returns the width of the start arrow\n */\nmxArrowConnector.prototype.getStartArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEndArrowWidth\n * \n * Returns the width of the end arrow\n */\nmxArrowConnector.prototype.getEndArrowWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH;\n};\n\n/**\n * Function: getEdgeWidth\n * \n * Returns the width of the body of the edge\n */\nmxArrowConnector.prototype.getEdgeWidth = function()\n{\n\treturn mxConstants.ARROW_WIDTH / 3;\n};\n\n/**\n * Function: isOpenEnded\n * \n * Returns whether the ends of the shape are drawn\n */\nmxArrowConnector.prototype.isOpenEnded = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isMarkerStart\n * \n * Returns whether the start marker is drawn\n */\nmxArrowConnector.prototype.isMarkerStart = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n\n/**\n * Function: isMarkerEnd\n * \n * Returns whether the end marker is drawn\n */\nmxArrowConnector.prototype.isMarkerEnd = function()\n{\n\treturn (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE);\n};\n__mxOutput.mxArrowConnector = typeof mxArrowConnector !== 'undefined' ? mxArrowConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxText\n *\n * Extends <mxShape> to implement a text shape. To change vertical text from\n * bottom to top to top to bottom, the following code can be used:\n * \n * (code)\n * mxText.prototype.verticalTextRotation = 90;\n * (end)\n * \n * Constructor: mxText\n *\n * Constructs a new text shape.\n * \n * Parameters:\n * \n * value - String that represents the text to be displayed. This is stored in\n * <value>.\n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * align - Specifies the horizontal alignment. Default is ''. This is stored in\n * <align>.\n * valign - Specifies the vertical alignment. Default is ''. This is stored in\n * <valign>.\n * color - String that specifies the text color. Default is 'black'. This is\n * stored in <color>.\n * family - String that specifies the font family. Default is\n * <mxConstants.DEFAULT_FONTFAMILY>. This is stored in <family>.\n * size - Integer that specifies the font size. Default is\n * <mxConstants.DEFAULT_FONTSIZE>. This is stored in <size>.\n * fontStyle - Specifies the font style. Default is 0. This is stored in\n * <fontStyle>.\n * spacing - Integer that specifies the global spacing. Default is 2. This is\n * stored in <spacing>.\n * spacingTop - Integer that specifies the top spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingTop>.\n * spacingRight - Integer that specifies the right spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingRight>.\n * spacingBottom - Integer that specifies the bottom spacing. Default is 0.The\n * sum of the spacing and this is stored in <spacingBottom>.\n * spacingLeft - Integer that specifies the left spacing. Default is 0. The\n * sum of the spacing and this is stored in <spacingLeft>.\n * horizontal - Boolean that specifies if the label is horizontal. Default is\n * true. This is stored in <horizontal>.\n * background - String that specifies the background color. Default is null.\n * This is stored in <background>.\n * border - String that specifies the label border color. Default is null.\n * This is stored in <border>.\n * wrap - Specifies if word-wrapping should be enabled. Default is false.\n * This is stored in <wrap>.\n * clipped - Specifies if the label should be clipped. Default is false.\n * This is stored in <clipped>.\n * overflow - Value of the overflow style. Default is 'visible'.\n */\nfunction mxText(value, bounds, align, valign, color,\n\tfamily,\tsize, fontStyle, spacing, spacingTop, spacingRight,\n\tspacingBottom, spacingLeft, horizontal, background, border,\n\twrap, clipped, overflow, labelPadding, textDirection)\n{\n\tmxShape.call(this);\n\tthis.value = value;\n\tthis.bounds = bounds;\n\tthis.color = (color != null) ? color : 'black';\n\tthis.align = (align != null) ? align : mxConstants.ALIGN_CENTER;\n\tthis.valign = (valign != null) ? valign : mxConstants.ALIGN_MIDDLE;\n\tthis.family = (family != null) ? family : mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = (size != null) ? size : mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = (fontStyle != null) ? fontStyle : mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = parseInt(spacing || 2);\n\tthis.spacingTop = this.spacing + parseInt(spacingTop || 0);\n\tthis.spacingRight = this.spacing + parseInt(spacingRight || 0);\n\tthis.spacingBottom = this.spacing + parseInt(spacingBottom || 0);\n\tthis.spacingLeft = this.spacing + parseInt(spacingLeft || 0);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.background = background;\n\tthis.border = border;\n\tthis.wrap = (wrap != null) ? wrap : false;\n\tthis.clipped = (clipped != null) ? clipped : false;\n\tthis.overflow = (overflow != null) ? overflow : 'visible';\n\tthis.labelPadding = (labelPadding != null) ? labelPadding : 0;\n\tthis.textDirection = textDirection;\n\tthis.rotation = 0;\n\tthis.updateMargin();\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxText, mxShape);\n\n/**\n * Variable: baseSpacingTop\n * \n * Specifies the spacing to be added to the top spacing. Default is 0. Use the\n * value 5 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingTop = 0;\n\n/**\n * Variable: baseSpacingBottom\n * \n * Specifies the spacing to be added to the bottom spacing. Default is 0. Use the\n * value 1 here to get the same label positions as in mxGraph 1.x.\n */\nmxText.prototype.baseSpacingBottom = 0;\n\n/**\n * Variable: baseSpacingLeft\n * \n * Specifies the spacing to be added to the left spacing. Default is 0.\n */\nmxText.prototype.baseSpacingLeft = 0;\n\n/**\n * Variable: baseSpacingRight\n * \n * Specifies the spacing to be added to the right spacing. Default is 0.\n */\nmxText.prototype.baseSpacingRight = 0;\n\n/**\n * Variable: replaceLinefeeds\n * \n * Specifies if linefeeds in HTML labels should be replaced with BR tags.\n * Default is true.\n */\nmxText.prototype.replaceLinefeeds = true;\n\n/**\n * Variable: verticalTextRotation\n * \n * Rotation for vertical text. Default is -90 (bottom to top).\n */\nmxText.prototype.verticalTextRotation = -90;\n\n/**\n * Variable: ignoreClippedStringSize\n * \n * Specifies if the string size should be measured in <updateBoundingBox> if\n * the label is clipped and the label position is center and middle. If this is\n * true, then the bounding box will be set to <bounds>. Default is true.\n * <ignoreStringSize> has precedence over this switch.\n */\nmxText.prototype.ignoreClippedStringSize = true;\n\n/**\n * Variable: ignoreStringSize\n * \n * Specifies if the actual string size should be measured. If disabled the\n * boundingBox will not ignore the actual size of the string, otherwise\n * <bounds> will be used instead. Default is false.\n */\nmxText.prototype.ignoreStringSize = false;\n\n/**\n * Variable: textWidthPadding\n * \n * Specifies the padding to be added to the text width for the bounding box.\n * This is needed to make sure no clipping is applied to borders. Default is 4\n * for IE 8 standards mode and 3 for all others.\n */\nmxText.prototype.textWidthPadding = (document.documentMode == 8 && !mxClient.IS_EM) ? 4 : 3;\n\n/**\n * Variable: lastValue\n * \n * Contains the last rendered text value. Used for caching.\n */\nmxText.prototype.lastValue = null;\n\n/**\n * Variable: cacheEnabled\n * \n * Specifies if caching for HTML labels should be enabled. Default is true.\n */\nmxText.prototype.cacheEnabled = true;\n\n/**\n * Function: isParseVml\n * \n * Text shapes do not contain VML markup and do not need to be parsed. This\n * method returns false to speed up rendering in IE8.\n */\nmxText.prototype.isParseVml = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation returns\n * true if the browser is not in IE8 standards mode.\n */\nmxText.prototype.isHtmlAllowed = function()\n{\n\treturn document.documentMode != 8 || mxClient.IS_EM;\n};\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxText.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: checkBounds\n * \n * Returns true if the bounds are not null and all of its variables are numeric.\n */\nmxText.prototype.checkBounds = function()\n{\n\treturn (!isNaN(this.scale) && isFinite(this.scale) && this.scale > 0 &&\n\t\t\tthis.bounds != null && !isNaN(this.bounds.x) && !isNaN(this.bounds.y) &&\n\t\t\t!isNaN(this.bounds.width) && !isNaN(this.bounds.height));\n};\n\n/**\n * Function: paint\n * \n * Generic rendering code.\n */\nmxText.prototype.paint = function(c, update)\n{\n\t// Scale is passed-through to canvas\n\tvar s = this.scale;\n\tvar x = this.bounds.x / s;\n\tvar y = this.bounds.y / s;\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\t\n\tthis.updateTransform(c, x, y, w, h);\n\tthis.configureCanvas(c, x, y, w, h);\n\n\tvar unscaledWidth = (this.state != null) ? this.state.unscaledWidth : null;\n\n\tif (update)\n\t{\n\t\tif (this.node.firstChild != null && (unscaledWidth == null ||\n\t\t\tthis.lastUnscaledWidth != unscaledWidth))\n\t\t{\n\t\t\tc.invalidateCachedOffsetSize(this.node);\n\t\t}\n\n\t\tc.updateText(x, y, w, h, this.align, this.valign, this.wrap, this.overflow,\n\t\t\t\tthis.clipped, this.getTextRotation(), this.node);\n\t}\n\telse\n\t{\n\t\t// Checks if text contains HTML markup\n\t\tvar realHtml = mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML;\n\t\t\n\t\t// Always renders labels as HTML in VML\n\t\tvar fmt = (realHtml || c instanceof mxVmlCanvas2D) ? 'html' : '';\n\t\tvar val = this.value;\n\t\t\n\t\tif (!realHtml && fmt == 'html')\n\t\t{\n\t\t\tval =  mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\tif (fmt == 'html' && !mxUtils.isNode(this.value))\n\t\t{\n\t\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\t\t\t\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = (!mxUtils.isNode(this.value) && this.replaceLinefeeds && fmt == 'html') ?\n\t\t\tval.replace(/\\n/g, '<br/>') : val;\n\t\t\t\n\t\tvar dir = this.textDirection;\n\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && !realHtml)\n\t\t{\n\t\t\tdir = this.getAutoDirection();\n\t\t}\n\t\t\n\t\tif (dir != mxConstants.TEXT_DIRECTION_LTR && dir != mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tdir = null;\n\t\t}\n\t\n\t\tc.text(x, y, w, h, val, this.align, this.valign, this.wrap, fmt, this.overflow,\n\t\t\tthis.clipped, this.getTextRotation(), dir);\n\t}\n\t\n\t// Needs to invalidate the cached offset widths if the geometry changes\n\tthis.lastUnscaledWidth = unscaledWidth;\n};\n\n/**\n * Function: redraw\n * \n * Renders the text using the given DOM nodes.\n */\nmxText.prototype.redraw = function()\n{\n\tif (this.visible && this.checkBounds() && this.cacheEnabled && this.lastValue == this.value &&\n\t\t(mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML))\n\t{\n\t\tif (this.node.nodeName == 'DIV' && (this.isHtmlAllowed() || !mxClient.IS_VML))\n\t\t{\n\t\t\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\n\t\t\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t\t\t{\n\t\t\t\tthis.updateHtmlFilter();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.updateHtmlTransform();\n\t\t\t}\n\t\t\t\n\t\t\tthis.updateBoundingBox();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar canvas = this.createCanvas();\n\n\t\t\tif (canvas != null && canvas.updateText != null &&\n\t\t\t\tcanvas.invalidateCachedOffsetSize != null)\n\t\t\t{\n\t\t\t\tthis.paint(canvas, true);\n\t\t\t\tthis.destroyCanvas(canvas);\n\t\t\t\tthis.updateBoundingBox();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Fallback if canvas does not support updateText (VML)\n\t\t\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxShape.prototype.redraw.apply(this, arguments);\n\t\t\n\t\tif (mxUtils.isNode(this.value) || this.dialect == mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tthis.lastValue = this.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.lastValue = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: resetStyles\n * \n * Resets all styles.\n */\nmxText.prototype.resetStyles = function()\n{\n\tmxShape.prototype.resetStyles.apply(this, arguments);\n\t\n\tthis.color = 'black';\n\tthis.align = mxConstants.ALIGN_CENTER;\n\tthis.valign = mxConstants.ALIGN_MIDDLE;\n\tthis.family = mxConstants.DEFAULT_FONTFAMILY;\n\tthis.size = mxConstants.DEFAULT_FONTSIZE;\n\tthis.fontStyle = mxConstants.DEFAULT_FONTSTYLE;\n\tthis.spacing = 2;\n\tthis.spacingTop = 2;\n\tthis.spacingRight = 2;\n\tthis.spacingBottom = 2;\n\tthis.spacingLeft = 2;\n\tthis.horizontal = true;\n\tdelete this.background;\n\tdelete this.border;\n\tthis.textDirection = mxConstants.DEFAULT_TEXT_DIRECTION;\n\tdelete this.margin;\n};\n\n/**\n * Function: apply\n * \n * Extends mxShape to update the text styles.\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxText.prototype.apply = function(state)\n{\n\tvar old = this.spacing;\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.fontStyle = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSTYLE, this.fontStyle);\n\t\tthis.family = mxUtils.getValue(this.style, mxConstants.STYLE_FONTFAMILY, this.family);\n\t\tthis.size = mxUtils.getValue(this.style, mxConstants.STYLE_FONTSIZE, this.size);\n\t\tthis.color = mxUtils.getValue(this.style, mxConstants.STYLE_FONTCOLOR, this.color);\n\t\tthis.align = mxUtils.getValue(this.style, mxConstants.STYLE_ALIGN, this.align);\n\t\tthis.valign = mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_ALIGN, this.valign);\n\t\tthis.spacing = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING, this.spacing));\n\t\tthis.spacingTop = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_TOP, this.spacingTop - old)) + this.spacing;\n\t\tthis.spacingRight = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_RIGHT, this.spacingRight - old)) + this.spacing;\n\t\tthis.spacingBottom = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_BOTTOM, this.spacingBottom - old)) + this.spacing;\n\t\tthis.spacingLeft = parseInt(mxUtils.getValue(this.style, mxConstants.STYLE_SPACING_LEFT, this.spacingLeft - old)) + this.spacing;\n\t\tthis.horizontal = mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, this.horizontal);\n\t\tthis.background = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BACKGROUNDCOLOR, this.background);\n\t\tthis.border = mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_BORDERCOLOR, this.border);\n\t\tthis.textDirection = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\tthis.opacity = mxUtils.getValue(this.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tthis.updateMargin();\n\t}\n\t\n\tthis.flipV = null;\n\tthis.flipH = null;\n};\n\n/**\n * Function: getAutoDirection\n * \n * Used to determine the automatic text direction. Returns\n * <mxConstants.TEXT_DIRECTION_LTR> or <mxConstants.TEXT_DIRECTION_RTL>\n * depending on the contents of <value>. This is not invoked for HTML, wrapped\n * content or if <value> is a DOM node.\n */\nmxText.prototype.getAutoDirection = function()\n{\n\t// Looks for strong (directional) characters\n\tvar tmp = /[A-Za-z\\u05d0-\\u065f\\u066a-\\u06ef\\u06fa-\\u07ff\\ufb1d-\\ufdff\\ufe70-\\ufefc]/.exec(this.value);\n\t\n\t// Returns the direction defined by the character\n\treturn (tmp != null && tmp.length > 0 && tmp[0] > 'z') ?\n\t\tmxConstants.TEXT_DIRECTION_RTL : mxConstants.TEXT_DIRECTION_LTR;\n};\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using the given node and position.\n */\nmxText.prototype.updateBoundingBox = function()\n{\n\tvar node = this.node;\n\tthis.boundingBox = this.bounds.clone();\n\tvar rot = this.getTextRotation();\n\t\n\tvar h = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER) : null;\n\tvar v = (this.style != null) ? mxUtils.getValue(this.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE) : null;\n\n\tif (!this.ignoreStringSize && node != null && this.overflow != 'fill' && (!this.clipped ||\n\t\t!this.ignoreClippedStringSize || h != mxConstants.ALIGN_CENTER || v != mxConstants.ALIGN_MIDDLE))\n\t{\n\t\tvar ow = null;\n\t\tvar oh = null;\n\t\t\n\t\tif (node.ownerSVGElement != null)\n\t\t{\n\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t{\n\t\t\t\tnode = node.firstChild.firstChild;\n\t\t\t\tow = parseInt(node.getAttribute('width')) * this.scale;\n\t\t\t\toh = parseInt(node.getAttribute('height')) * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tvar b = node.getBBox();\n\t\t\t\t\t\n\t\t\t\t\t// Workaround for bounding box of empty string\n\t\t\t\t\tif (typeof(this.value) == 'string' && mxUtils.trim(this.value) == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (b.width == 0 && b.height == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.boundingBox = new mxRectangle(b.x, b.y, b.width, b.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// Ignores NS_ERROR_FAILURE in FF if container display is none.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\n\t\t\t// Use cached offset size\n\t\t\tif (this.offsetWidth != null && this.offsetHeight != null)\n\t\t\t{\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Cannot get node size while container hidden so a\n\t\t\t\t// shared temporary DIV is used for text measuring\n\t\t\t\tif (td != null)\n\t\t\t\t{\n\t\t\t\t\tthis.updateFont(td);\n\t\t\t\t\tthis.updateSize(td, false);\n\t\t\t\t\tthis.updateInnerHtml(td);\n\n\t\t\t\t\tnode = td;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar sizeDiv = node;\n\n\t\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t\t{\n\t\t\t\t\tvar w = Math.round(this.bounds.width / this.scale);\n\t\n\t\t\t\t\tif (this.wrap && w > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\t\t\tnode.style.whiteSpace = 'normal';\n\n\t\t\t\t\t\tif (node.style.wordWrap != 'break-word')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Innermost DIV is used for measuring text\n\t\t\t\t\t\t\tvar divs = sizeDiv.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (divs.length > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsizeDiv = divs[divs.length - 1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tow = sizeDiv.offsetWidth + 2;\n\t\t\t\t\t\t\tdivs = this.node.getElementsByTagName('div');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.clipped)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tow = Math.min(w, ow);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Second last DIV width must be updated in DOM tree\n\t\t\t\t\t\t\tif (divs.length > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdivs[divs.length - 2].style.width = ow + 'px';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.whiteSpace = 'nowrap';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t}\n\n\t\t\t\tthis.offsetWidth = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\t\tthis.offsetHeight = sizeDiv.offsetHeight;\n\t\t\t\t\n\t\t\t\tow = this.offsetWidth * this.scale;\n\t\t\t\toh = this.offsetHeight * this.scale;\n\t\t\t}\n\t\t}\n\n\t\tif (ow != null && oh != null)\n\t\t{\t\n\t\t\tthis.boundingBox = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y, ow, oh);\n\t\t}\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tif (rot != 0)\n\t\t{\n\t\t\t// Accounts for pre-rotated x and y\n\t\t\tvar bbox = mxUtils.getBoundingBox(new mxRectangle(\n\t\t\t\tthis.margin.x * this.boundingBox.width,\n\t\t\t\tthis.margin.y * this.boundingBox.height,\n\t\t\t\tthis.boundingBox.width, this.boundingBox.height),\n\t\t\t\trot, new mxPoint(0, 0));\n\t\t\t\n\t\t\tthis.unrotatedBoundingBox = mxRectangle.fromRectangle(this.boundingBox);\n\t\t\tthis.unrotatedBoundingBox.x += this.margin.x * this.unrotatedBoundingBox.width;\n\t\t\tthis.unrotatedBoundingBox.y += this.margin.y * this.unrotatedBoundingBox.height;\n\t\t\t\n\t\t\tthis.boundingBox.x += bbox.x;\n\t\t\tthis.boundingBox.y += bbox.y;\n\t\t\tthis.boundingBox.width = bbox.width;\n\t\t\tthis.boundingBox.height = bbox.height;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.boundingBox.x += this.margin.x * this.boundingBox.width;\n\t\t\tthis.boundingBox.y += this.margin.y * this.boundingBox.height;\n\t\t\tthis.unrotatedBoundingBox = null;\n\t\t}\n\t}\n};\n\n/**\n * Function: getShapeRotation\n * \n * Returns 0 to avoid using rotation in the canvas via updateTransform.\n */\nmxText.prototype.getShapeRotation = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: getTextRotation\n * \n * Returns the rotation for the text label of the corresponding shape.\n */\nmxText.prototype.getTextRotation = function()\n{\n\treturn (this.state != null && this.state.shape != null) ? this.state.shape.getTextRotation() : 0;\n};\n\n/**\n * Function: isPaintBoundsInverted\n * \n * Inverts the bounds if <mxShape.isBoundsInverted> returns true or if the\n * horizontal style is false.\n */\nmxText.prototype.isPaintBoundsInverted = function()\n{\n\treturn !this.horizontal && this.state != null && this.state.view.graph.model.isVertex(this.state.cell);\n};\n\n/**\n * Function: configureCanvas\n * \n * Sets the state of the canvas for drawing the shape.\n */\nmxText.prototype.configureCanvas = function(c, x, y, w, h)\n{\n\tmxShape.prototype.configureCanvas.apply(this, arguments);\n\t\n\tc.setFontColor(this.color);\n\tc.setFontBackgroundColor(this.background);\n\tc.setFontBorderColor(this.border);\n\tc.setFontFamily(this.family);\n\tc.setFontSize(this.size);\n\tc.setFontStyle(this.fontStyle);\n};\n\n/**\n * Function: updateVmlContainer\n * \n * Sets the width and height of the container to 1px.\n */\nmxText.prototype.updateVmlContainer = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = '1px';\n\tthis.node.style.height = '1px';\n\tthis.node.style.overflow = 'visible';\n};\n\n/**\n * Function: redrawHtmlShape\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.redrawHtmlShape = function()\n{\n\tvar style = this.node.style;\n\n\t// Resets CSS styles\n\tstyle.whiteSpace = 'normal';\n\tstyle.overflow = '';\n\tstyle.width = '';\n\tstyle.height = '';\n\t\n\tthis.updateValue();\n\tthis.updateFont(this.node);\n\tthis.updateSize(this.node, (this.state == null || this.state.view.textDiv == null));\n\t\n\tthis.offsetWidth = null;\n\tthis.offsetHeight = null;\n\n\tif (mxClient.IS_IE && (document.documentMode == null || document.documentMode <= 8))\n\t{\n\t\tthis.updateHtmlFilter();\n\t}\n\telse\n\t{\n\t\tthis.updateHtmlTransform();\n\t}\n};\n\n/**\n * Function: updateHtmlTransform\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateHtmlTransform = function()\n{\n\tvar theta = this.getTextRotation();\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\t\n\tif (theta != 0)\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', (-dx * 100) + '%' + ' ' + (-dy * 100) + '%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)' +\n\t\t\t'scale(' + this.scale + ') rotate(' + theta + 'deg)');\n\t}\n\telse\n\t{\n\t\tmxUtils.setPrefixedStyle(style, 'transformOrigin', '0% 0%');\n\t\tmxUtils.setPrefixedStyle(style, 'transform', 'scale(' + this.scale + ')' +\n\t\t\t'translate(' + (dx * 100) + '%' + ',' + (dy * 100) + '%)');\n\t}\n\n\tstyle.left = Math.round(this.bounds.x - Math.ceil(dx * ((this.overflow != 'fill' &&\n\t\tthis.overflow != 'width') ? 3 : 1))) + 'px';\n\tstyle.top = Math.round(this.bounds.y - dy * ((this.overflow != 'fill') ? 3 : 1)) + 'px';\n\t\n\tif (this.opacity < 100)\n\t{\n\t\tstyle.opacity = this.opacity / 100;\n\t}\n\telse\n\t{\n\t\tstyle.opacity = '';\n\t}\n};\n\n/**\n * Function: setInnerHtml\n * \n * Sets the inner HTML of the given element to the <value>.\n */\nmxText.prototype.updateInnerHtml = function(elt)\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\telt.innerHTML = this.value.outerHTML;\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\t// LATER: Can be cached in updateValue\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div>&nbsp;</div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tval = '<div style=\"display:inline-block;_display:inline;\">' + val + '</div>';\n\t\t\n\t\telt.innerHTML = val;\n\t}\n};\n\n/**\n * Function: updateHtmlFilter\n *\n * Rotated text rendering quality is bad for IE9 quirks/IE8 standards\n */\nmxText.prototype.updateHtmlFilter = function()\n{\n\tvar style = this.node.style;\n\tvar dx = this.margin.x;\n\tvar dy = this.margin.y;\n\tvar s = this.scale;\n\t\n\t// Resets filter before getting offsetWidth\n\tmxUtils.setOpacity(this.node, this.opacity);\n\t\n\t// Adds 1 to match table height in 1.x\n\tvar ow = 0;\n\tvar oh = 0;\n\tvar td = (this.state != null) ? this.state.view.textDiv : null;\n\tvar sizeDiv = this.node;\n\t\n\t// Fallback for hidden text rendering in IE quirks mode\n\tif (td != null)\n\t{\n\t\ttd.style.overflow = '';\n\t\ttd.style.height = '';\n\t\ttd.style.width = '';\n\t\t\n\t\tthis.updateFont(td);\n\t\tthis.updateSize(td, false);\n\t\tthis.updateInnerHtml(td);\n\t\t\n\t\tvar w = Math.round(this.bounds.width / this.scale);\n\n\t\tif (this.wrap && w > 0)\n\t\t{\n\t\t\ttd.style.whiteSpace = 'normal';\n\t\t\ttd.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\tow = w;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\tow = Math.min(ow, this.bounds.width);\n\t\t\t}\n\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttd.style.whiteSpace = 'nowrap';\n\t\t}\n\t\t\n\t\tsizeDiv = td;\n\t\t\n\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t{\n\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\n\t\t\tif (this.wrap && td.style.wordWrap == 'break-word')\n\t\t\t{\n\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t}\n\t\t}\n\n\t\t// Required to update the height of the text box after wrapping width is known \n\t\tif (!this.clipped && this.wrap && w > 0)\n\t\t{\n\t\t\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\t\ttd.style.width = ow + 'px';\n\t\t}\n\t\t\n\t\toh = sizeDiv.offsetHeight + 2;\n\t\t\n\t\tif (mxClient.IS_QUIRKS && this.border != null && this.border != mxConstants.NONE)\n\t\t{\n\t\t\toh += 3;\n\t\t}\n\t}\n\telse if (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t{\n\t\tsizeDiv = sizeDiv.firstChild;\n\t\toh = sizeDiv.offsetHeight;\n\t}\n\n\tow = sizeDiv.offsetWidth + this.textWidthPadding;\n\t\n\tif (this.clipped)\n\t{\n\t\toh = Math.min(oh, this.bounds.height);\n\t}\n\n\tvar w = this.bounds.width / s;\n\tvar h = this.bounds.height / s;\n\n\t// Handles special case for live preview with no wrapper DIV and no textDiv\n\tif (this.overflow == 'fill')\n\t{\n\t\toh = h;\n\t\tow = w;\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\toh = sizeDiv.scrollHeight;\n\t\tow = w;\n\t}\n\t\n\t// Stores for later use\n\tthis.offsetWidth = ow;\n\tthis.offsetHeight = oh;\n\t\n\t// Simulates max-height CSS in quirks mode\n\tif (mxClient.IS_QUIRKS && (this.clipped || (this.overflow == 'width' && h > 0)))\n\t{\n\t\th = Math.min(h, oh);\n\t\tstyle.height = Math.round(h) + 'px';\n\t}\n\telse\n\t{\n\t\th = oh;\n\t}\n\n\tif (this.overflow != 'fill' && this.overflow != 'width')\n\t{\n\t\tif (this.clipped)\n\t\t{\n\t\t\tow = Math.min(w, ow);\n\t\t}\n\t\t\n\t\tw = ow;\n\n\t\t// Simulates max-width CSS in quirks mode\n\t\tif ((mxClient.IS_QUIRKS && this.clipped) || this.wrap)\n\t\t{\n\t\t\tstyle.width = Math.round(w) + 'px';\n\t\t}\n\t}\n\n\th *= s;\n\tw *= s;\n\t\n\t// Rotation case is handled via VML canvas\n\tvar rad = this.getTextRotation() * (Math.PI / 180);\n\t\n\t// Precalculate cos and sin for the rotation\n\tvar real_cos = parseFloat(parseFloat(Math.cos(rad)).toFixed(8));\n\tvar real_sin = parseFloat(parseFloat(Math.sin(-rad)).toFixed(8));\n\n\trad %= 2 * Math.PI;\n\t\n\tif (rad < 0)\n\t{\n\t\trad += 2 * Math.PI;\n\t}\n\t\n\trad %= Math.PI;\n\t\n\tif (rad > Math.PI / 2)\n\t{\n\t\trad = Math.PI - rad;\n\t}\n\t\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(-rad);\n\n\tvar tx = w * -(dx + 0.5);\n\tvar ty = h * -(dy + 0.5);\n\n\tvar top_fix = (h - h * cos + w * sin) / 2 + real_sin * tx - real_cos * ty;\n\tvar left_fix = (w - w * cos + h * sin) / 2 - real_cos * tx - real_sin * ty;\n\t\n\tif (rad != 0)\n\t{\n\t\tvar f = 'progid:DXImageTransform.Microsoft.Matrix(M11=' + real_cos + ', M12='+\n\t\t\treal_sin + ', M21=' + (-real_sin) + ', M22=' + real_cos + ', sizingMethod=\\'auto expand\\')';\n\t\t\n\t\tif (style.filter != null && style.filter.length > 0)\n\t\t{\n\t\t\tstyle.filter += ' ' + f;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.filter = f;\n\t\t}\n\t}\n\t\n\t// Workaround for rendering offsets\n\tvar dy = 0;\n\t\n\tif (this.overflow != 'fill' && mxClient.IS_QUIRKS)\n\t{\n\t\tif (this.valign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tdy -= 1;\n\t\t}\n\t\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t\t{\n\t\t\tdy += 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdy += 1;\n\t\t}\n\t}\n\n\tstyle.zoom = s;\n\tstyle.left = Math.round(this.bounds.x + left_fix - w / 2) + 'px';\n\tstyle.top = Math.round(this.bounds.y + top_fix - h / 2 + dy) + 'px';\n};\n\n/**\n * Function: updateValue\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateValue = function()\n{\n\tif (mxUtils.isNode(this.value))\n\t{\n\t\tthis.node.innerHTML = '';\n\t\tthis.node.appendChild(this.value);\n\t}\n\telse\n\t{\n\t\tvar val = this.value;\n\t\t\n\t\tif (this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t{\n\t\t\tval = mxUtils.htmlEntities(val, false);\n\t\t}\n\t\t\n\t\t// Handles trailing newlines to make sure they are visible in rendering output\n\t\tval = mxUtils.replaceTrailingNewlines(val, '<div><br></div>');\n\t\tval = (this.replaceLinefeeds) ? val.replace(/\\n/g, '<br/>') : val;\n\t\tvar bg = (this.background != null && this.background != mxConstants.NONE) ? this.background : null;\n\t\tvar bd = (this.border != null && this.border != mxConstants.NONE) ? this.border : null;\n\n\t\tif (this.overflow == 'fill' || this.overflow == 'width')\n\t\t{\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tthis.node.style.backgroundColor = bg;\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tthis.node.style.border = '1px solid ' + bd;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar css = '';\n\t\t\t\n\t\t\tif (bg != null)\n\t\t\t{\n\t\t\t\tcss += 'background-color:' + mxUtils.htmlEntities(bg) + ';';\n\t\t\t}\n\t\t\t\n\t\t\tif (bd != null)\n\t\t\t{\n\t\t\t\tcss += 'border:1px solid ' + mxUtils.htmlEntities(bd) + ';';\n\t\t\t}\n\t\t\t\n\t\t\t// Wrapper DIV for background, zoom needed for inline in quirks\n\t\t\t// and to measure wrapped font sizes in all browsers\n\t\t\t// FIXME: Background size in quirks mode for wrapped text\n\t\t\tvar lh = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' :\n\t\t\t\tmxConstants.LINE_HEIGHT;\n\t\t\tval = '<div style=\"zoom:1;' + css + 'display:inline-block;_display:inline;text-decoration:inherit;' +\n\t\t\t\t'padding-bottom:1px;padding-right:1px;line-height:' + lh + '\">' + val + '</div>';\n\t\t}\n\n\t\tthis.node.innerHTML = val;\n\t\t\n\t\t// Sets text direction\n\t\tvar divs = this.node.getElementsByTagName('div');\n\t\t\n\t\tif (divs.length > 0)\n\t\t{\n\t\t\tvar dir = this.textDirection;\n\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO && this.dialect != mxConstants.DIALECT_STRICTHTML)\n\t\t\t{\n\t\t\t\tdir = this.getAutoDirection();\n\t\t\t}\n\t\t\t\n\t\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].setAttribute('dir', dir);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdivs[divs.length - 1].removeAttribute('dir');\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateFont\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateFont = function(node)\n{\n\tvar style = node.style;\n\t\n\tstyle.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? (this.size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\tstyle.fontSize = this.size + 'px';\n\tstyle.fontFamily = this.family;\n\tstyle.verticalAlign = 'top';\n\tstyle.color = this.color;\n\t\n\tif ((this.fontStyle & mxConstants.FONT_BOLD) == mxConstants.FONT_BOLD)\n\t{\n\t\tstyle.fontWeight = 'bold';\n\t}\n\telse\n\t{\n\t\tstyle.fontWeight = '';\n\t}\n\n\tif ((this.fontStyle & mxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC)\n\t{\n\t\tstyle.fontStyle = 'italic';\n\t}\n\telse\n\t{\n\t\tstyle.fontStyle = '';\n\t}\n\t\n\tif ((this.fontStyle & mxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE)\n\t{\n\t\tstyle.textDecoration = 'underline';\n\t}\n\telse\n\t{\n\t\tstyle.textDecoration = '';\n\t}\n\t\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tstyle.textAlign = 'center';\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstyle.textAlign = 'right';\n\t}\n\telse\n\t{\n\t\tstyle.textAlign = 'left';\n\t}\n};\n\n/**\n * Function: updateSize\n *\n * Updates the HTML node(s) to reflect the latest bounds and scale.\n */\nmxText.prototype.updateSize = function(node, enableWrap)\n{\n\tvar w = Math.max(0, Math.round(this.bounds.width / this.scale));\n\tvar h = Math.max(0, Math.round(this.bounds.height / this.scale));\n\tvar style = node.style;\n\t\n\t// NOTE: Do not use maxWidth here because wrapping will\n\t// go wrong if the cell is outside of the viewable area\n\tif (this.clipped)\n\t{\n\t\tstyle.overflow = 'hidden';\n\t\t\n\t\tif (!mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tstyle.maxHeight = h + 'px';\n\t\t\tstyle.maxWidth = w + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle.width = w + 'px';\n\t\t}\n\t}\n\telse if (this.overflow == 'fill')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.height = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\telse if (this.overflow == 'width')\n\t{\n\t\tstyle.width = (w + 1) + 'px';\n\t\tstyle.maxHeight = (h + 1) + 'px';\n\t\tstyle.overflow = 'hidden';\n\t}\n\t\n\tif (this.wrap && w > 0)\n\t{\n\t\tstyle.wordWrap = mxConstants.WORD_WRAP;\n\t\tstyle.whiteSpace = 'normal';\n\t\tstyle.width = w + 'px';\n\n\t\tif (enableWrap && this.overflow != 'fill' && this.overflow != 'width')\n\t\t{\n\t\t\tvar sizeDiv = node;\n\t\t\t\n\t\t\tif (sizeDiv.firstChild != null && sizeDiv.firstChild.nodeName == 'DIV')\n\t\t\t{\n\t\t\t\tsizeDiv = sizeDiv.firstChild;\n\t\t\t\t\n\t\t\t\tif (node.style.wordWrap == 'break-word')\n\t\t\t\t{\n\t\t\t\t\tsizeDiv.style.width = '100%';\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar tmp = sizeDiv.offsetWidth;\n\t\t\t\n\t\t\t// Workaround for text measuring in hidden containers\n\t\t\tif (tmp == 0)\n\t\t\t{\n\t\t\t\tvar prev = node.parentNode;\n\t\t\t\tnode.style.visibility = 'hidden';\n\t\t\t\tdocument.body.appendChild(node);\n\t\t\t\ttmp = sizeDiv.offsetWidth;\n\t\t\t\tnode.style.visibility = '';\n\t\t\t\tprev.appendChild(node);\n\t\t\t}\n\n\t\t\ttmp += 3;\n\t\t\t\n\t\t\tif (this.clipped)\n\t\t\t{\n\t\t\t\ttmp = Math.min(tmp, w);\n\t\t\t}\n\t\t\t\n\t\t\tstyle.width = tmp + 'px';\n\t\t}\n\t}\n\telse\n\t{\n\t\tstyle.whiteSpace = 'nowrap';\n\t}\n};\n\n/**\n * Function: getMargin\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.updateMargin = function()\n{\n\tthis.margin = mxUtils.getAlignmentAsPoint(this.align, this.valign);\n};\n\n/**\n * Function: getSpacing\n *\n * Returns the spacing as an <mxPoint>.\n */\nmxText.prototype.getSpacing = function()\n{\n\tvar dx = 0;\n\tvar dy = 0;\n\n\tif (this.align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tdx = (this.spacingLeft - this.spacingRight) / 2;\n\t}\n\telse if (this.align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tdx = -this.spacingRight - this.baseSpacingRight;\n\t}\n\telse\n\t{\n\t\tdx = this.spacingLeft + this.baseSpacingLeft;\n\t}\n\n\tif (this.valign == mxConstants.ALIGN_MIDDLE)\n\t{\n\t\tdy = (this.spacingTop - this.spacingBottom) / 2;\n\t}\n\telse if (this.valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tdy = -this.spacingBottom - this.baseSpacingBottom;;\n\t}\n\telse\n\t{\n\t\tdy = this.spacingTop + this.baseSpacingTop;\n\t}\n\t\n\treturn new mxPoint(dx, dy);\n};\n\n__mxOutput.mxText = typeof mxText !== 'undefined' ? mxText : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTriangle\n * \n * Implementation of the triangle shape.\n * \n * Constructor: mxTriangle\n *\n * Constructs a new triangle shape.\n */\nfunction mxTriangle()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxTriangle, mxActor);\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxTriangle.prototype.isRoundable = function()\n{\n\treturn true;\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxTriangle.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0, 0), new mxPoint(w, 0.5 * h), new mxPoint(0, h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxTriangle = typeof mxTriangle !== 'undefined' ? mxTriangle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHexagon\n * \n * Implementation of the hexagon shape.\n * \n * Constructor: mxHexagon\n *\n * Constructs a new hexagon shape.\n */\nfunction mxHexagon()\n{\n\tmxActor.call(this);\n};\n\n/**\n * Extends mxActor.\n */\nmxUtils.extend(mxHexagon, mxActor);\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxHexagon.prototype.redrawPath = function(c, x, y, w, h)\n{\n\tvar arcSize = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.LINE_ARCSIZE) / 2;\n\tthis.addPoints(c, [new mxPoint(0.25 * w, 0), new mxPoint(0.75 * w, 0), new mxPoint(w, 0.5 * h), new mxPoint(0.75 * w, h),\n\t                   new mxPoint(0.25 * w, h), new mxPoint(0, 0.5 * h)], this.isRounded, arcSize, true);\n};\n\n__mxOutput.mxHexagon = typeof mxHexagon !== 'undefined' ? mxHexagon : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLine\n *\n * Extends <mxShape> to implement a horizontal line shape.\n * This shape is registered under <mxConstants.SHAPE_LINE> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLine\n *\n * Constructs a new line shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * stroke - String that defines the stroke color. Default is 'black'. This is\n * stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLine(bounds, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLine, mxShape);\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxLine.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar mid = y + h / 2;\n\n\tc.begin();\n\tc.moveTo(x, mid);\n\tc.lineTo(x + w, mid);\n\tc.stroke();\n};\n\n__mxOutput.mxLine = typeof mxLine !== 'undefined' ? mxLine : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxImageShape\n *\n * Extends <mxShape> to implement an image shape. This shape is registered\n * under <mxConstants.SHAPE_IMAGE> in <mxCellRenderer>.\n * \n * Constructor: mxImageShape\n * \n * Constructs a new image shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * image - String that specifies the URL of the image. This is stored in\n * <image>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 0. This is stored in <strokewidth>.\n */\nfunction mxImageShape(bounds, image, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.image = image;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n\tthis.shadow = false;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxImageShape, mxRectangleShape);\n\n/**\n * Variable: preserveImageAspect\n *\n * Switch to preserve image aspect. Default is true.\n */\nmxImageShape.prototype.preserveImageAspect = true;\n\n/**\n * Function: getSvgScreenOffset\n * \n * Disables offset in IE9 for crisper image output.\n */\nmxImageShape.prototype.getSvgScreenOffset = function()\n{\n\treturn 0;\n};\n\n/**\n * Function: apply\n * \n * Overrides <mxShape.apply> to replace the fill and stroke colors with the\n * respective values from <mxConstants.STYLE_IMAGE_BACKGROUND> and\n * <mxConstants.STYLE_IMAGE_BORDER>.\n * \n * Applies the style of the given <mxCellState> to the shape. This\n * implementation assigns the following styles to local fields:\n * \n * - <mxConstants.STYLE_IMAGE_BACKGROUND> => fill\n * - <mxConstants.STYLE_IMAGE_BORDER> => stroke\n *\n * Parameters:\n *\n * state - <mxCellState> of the corresponding cell.\n */\nmxImageShape.prototype.apply = function(state)\n{\n\tmxShape.prototype.apply.apply(this, arguments);\n\t\n\tthis.fill = null;\n\tthis.stroke = null;\n\tthis.gradient = null;\n\t\n\tif (this.style != null)\n\t{\n\t\tthis.preserveImageAspect = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_ASPECT, 1) == 1;\n\t\t\n\t\t// Legacy support for imageFlipH/V\n\t\tthis.flipH = this.flipH || mxUtils.getValue(this.style, 'imageFlipH', 0) == 1;\n\t\tthis.flipV = this.flipV || mxUtils.getValue(this.style, 'imageFlipV', 0) == 1;\n\t}\n};\n\n/**\n * Function: isHtmlAllowed\n * \n * Returns true if HTML is allowed for this shape. This implementation always\n * returns false.\n */\nmxImageShape.prototype.isHtmlAllowed = function()\n{\n\treturn !this.preserveImageAspect;\n};\n\n/**\n * Function: createHtml\n *\n * Creates and returns the HTML DOM node(s) to represent\n * this shape. This implementation falls back to <createVml>\n * so that the HTML creation is optional.\n */\nmxImageShape.prototype.createHtml = function()\n{\n\tvar node = document.createElement('div');\n\tnode.style.position = 'absolute';\n\n\treturn node;\n};\n\n/**\n * Function: isRoundable\n * \n * Disables inherited roundable support.\n */\nmxImageShape.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn false;\n};\n\n/**\n * Function: paintVertexShape\n * \n * Generic background painting implementation.\n */\nmxImageShape.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, null);\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (fill != null)\n\t\t{\n\t\t\t// Stroke rendering required for shadow\n\t\t\tc.setFillColor(fill);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.fillAndStroke();\n\t\t}\n\n\t\t// FlipH/V are implicit via mxShape.updateTransform\n\t\tc.image(x, y, w, h, this.image, this.preserveImageAspect, false, false);\n\t\t\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, null);\n\t\t\n\t\tif (stroke != null)\n\t\t{\n\t\t\tc.setShadow(false);\n\t\t\tc.setStrokeColor(stroke);\n\t\t\tc.rect(x, y, w, h);\n\t\t\tc.stroke();\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxRectangleShape.prototype.paintBackground.apply(this, arguments);\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Overrides <mxShape.redraw> to preserve the aspect ratio of images.\n */\nmxImageShape.prototype.redrawHtmlShape = function()\n{\n\tthis.node.style.left = Math.round(this.bounds.x) + 'px';\n\tthis.node.style.top = Math.round(this.bounds.y) + 'px';\n\tthis.node.style.width = Math.max(0, Math.round(this.bounds.width)) + 'px';\n\tthis.node.style.height = Math.max(0, Math.round(this.bounds.height)) + 'px';\n\tthis.node.innerHTML = '';\n\n\tif (this.image != null)\n\t{\n\t\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BACKGROUND, '');\n\t\tvar stroke = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_BORDER, '');\n\t\tthis.node.style.backgroundColor = fill;\n\t\tthis.node.style.borderColor = stroke;\n\t\t\n\t\t// VML image supports PNG in IE6\n\t\tvar useVml = mxClient.IS_IE6 || ((document.documentMode == null || document.documentMode <= 8) && this.rotation != 0);\n\t\tvar img = document.createElement((useVml) ? mxClient.VML_PREFIX + ':image' : 'img');\n\t\timg.setAttribute('border', '0');\n\t\timg.style.position = 'absolute';\n\t\timg.src = this.image;\n\n\t\tvar filter = (this.opacity < 100) ? 'alpha(opacity=' + this.opacity + ')' : '';\n\t\tthis.node.style.filter = filter;\n\t\t\n\t\tif (this.flipH && this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2)';\n\t\t}\n\t\telse if (this.flipH)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(mirror=1)';\n\t\t}\n\t\telse if (this.flipV)\n\t\t{\n\t\t\tfilter += 'progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)';\n\t\t}\n\n\t\tif (img.style.filter != filter)\n\t\t{\n\t\t\timg.style.filter = filter;\n\t\t}\n\n\t\tif (img.nodeName == 'image')\n\t\t{\n\t\t\timg.style.rotation = this.rotation;\n\t\t}\n\t\telse if (this.rotation != 0)\n\t\t{\n\t\t\t// LATER: Add flipV/H support\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', 'rotate(' + this.rotation + 'deg)');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(img.style, 'transform', '');\n\t\t}\n\n\t\t// Known problem: IE clips top line of image for certain angles\n\t\timg.style.width = this.node.style.width;\n\t\timg.style.height = this.node.style.height;\n\t\t\n\t\tthis.node.style.backgroundImage = '';\n\t\tthis.node.appendChild(img);\n\t}\n\telse\n\t{\n\t\tthis.setTransparentBackgroundImage(this.node);\n\t}\n};\n\n__mxOutput.mxImageShape = typeof mxImageShape !== 'undefined' ? mxImageShape : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLabel\n *\n * Extends <mxShape> to implement an image shape with a label.\n * This shape is registered under <mxConstants.SHAPE_LABEL> in\n * <mxCellRenderer>.\n * \n * Constructor: mxLabel\n *\n * Constructs a new label shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxLabel(bounds, fill, stroke, strokewidth)\n{\n\tmxRectangleShape.call(this, bounds, fill, stroke, strokewidth);\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxLabel, mxRectangleShape);\n\n/**\n * Variable: imageSize\n *\n * Default width and height for the image. Default is\n * <mxConstants.DEFAULT_IMAGESIZE>.\n */\nmxLabel.prototype.imageSize = mxConstants.DEFAULT_IMAGESIZE;\n\n/**\n * Variable: spacing\n *\n * Default value for image spacing. Default is 2.\n */\nmxLabel.prototype.spacing = 2;\n\n/**\n * Variable: indicatorSize\n *\n * Default width and height for the indicicator. Default is 10.\n */\nmxLabel.prototype.indicatorSize = 10;\n\n/**\n * Variable: indicatorSpacing\n *\n * Default spacing between image and indicator. Default is 2.\n */\nmxLabel.prototype.indicatorSpacing = 2;\n\n/**\n * Function: init\n *\n * Initializes the shape and the <indicator>.\n */\nmxLabel.prototype.init = function(container)\n{\n\tmxShape.prototype.init.apply(this, arguments);\n\n\tif (this.indicatorShape != null)\n\t{\n\t\tthis.indicator = new this.indicatorShape();\n\t\tthis.indicator.dialect = this.dialect;\n\t\tthis.indicator.init(this.node);\n\t}\n};\n\n/**\n * Function: redraw\n *\n * Reconfigures this shape. This will update the colors of the indicator\n * and reconfigure it if required.\n */\nmxLabel.prototype.redraw = function()\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.fill = this.indicatorColor;\n\t\tthis.indicator.stroke = this.indicatorStrokeColor;\n\t\tthis.indicator.gradient = this.indicatorGradientColor;\n\t\tthis.indicator.direction = this.indicatorDirection;\n\t}\n\t\n\tmxShape.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: isHtmlAllowed\n *\n * Returns true for non-rounded, non-rotated shapes with no glass gradient and\n * no indicator shape.\n */\nmxLabel.prototype.isHtmlAllowed = function()\n{\n\treturn mxRectangleShape.prototype.isHtmlAllowed.apply(this, arguments) &&\n\t\tthis.indicatorColor == null && this.indicatorShape == null;\n};\n\n/**\n * Function: paintForeground\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintForeground = function(c, x, y, w, h)\n{\n\tthis.paintImage(c, x, y, w, h);\n\tthis.paintIndicator(c, x, y, w, h);\n\t\n\tmxRectangleShape.prototype.paintForeground.apply(this, arguments);\n};\n\n/**\n * Function: paintImage\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintImage = function(c, x, y, w, h)\n{\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.image, false, false, false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getImageBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_WIDTH, mxConstants.DEFAULT_IMAGESIZE);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_IMAGE_HEIGHT, mxConstants.DEFAULT_IMAGESIZE);\n\tvar spacing = mxUtils.getNumber(this.style, mxConstants.STYLE_SPACING, this.spacing) + 5;\n\n\tif (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse if (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\n\tif (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n\n/**\n * Function: paintIndicator\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.paintIndicator = function(c, x, y, w, h)\n{\n\tif (this.indicator != null)\n\t{\n\t\tthis.indicator.bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tthis.indicator.paint(c);\n\t}\n\telse if (this.indicatorImage != null)\n\t{\n\t\tvar bounds = this.getIndicatorBounds(x, y, w, h);\n\t\tc.image(bounds.x, bounds.y, bounds.width, bounds.height, this.indicatorImage, false, false, false);\n\t}\n};\n\n/**\n * Function: getIndicatorBounds\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.getIndicatorBounds = function(x, y, w, h)\n{\n\tvar align = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_ALIGN, mxConstants.ALIGN_LEFT);\n\tvar valign = mxUtils.getValue(this.style, mxConstants.STYLE_IMAGE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE);\n\tvar width = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_WIDTH, this.indicatorSize);\n\tvar height = mxUtils.getNumber(this.style, mxConstants.STYLE_INDICATOR_HEIGHT, this.indicatorSize);\n\tvar spacing = this.spacing + 5;\t\t\n\t\n\tif (align == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tx += w - width - spacing;\n\t}\n\telse if (align == mxConstants.ALIGN_CENTER)\n\t{\n\t\tx += (w - width) / 2;\n\t}\n\telse // default is left\n\t{\n\t\tx += spacing;\n\t}\n\t\n\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\ty += h - height - spacing;\n\t}\n\telse if (valign == mxConstants.ALIGN_TOP)\n\t{\n\t\ty += spacing;\n\t}\n\telse // default is middle\n\t{\n\t\ty += (h - height) / 2;\n\t}\n\t\n\treturn new mxRectangle(x, y, width, height);\n};\n/**\n * Function: redrawHtmlShape\n * \n * Generic background painting implementation.\n */\nmxLabel.prototype.redrawHtmlShape = function()\n{\n\tmxRectangleShape.prototype.redrawHtmlShape.apply(this, arguments);\n\t\n\t// Removes all children\n\twhile(this.node.hasChildNodes())\n\t{\n\t\tthis.node.removeChild(this.node.lastChild);\n\t}\n\t\n\tif (this.image != null)\n\t{\n\t\tvar node = document.createElement('img');\n\t\tnode.style.position = 'relative';\n\t\tnode.setAttribute('border', '0');\n\t\t\n\t\tvar bounds = this.getImageBounds(this.bounds.x, this.bounds.y, this.bounds.width, this.bounds.height);\n\t\tbounds.x -= this.bounds.x;\n\t\tbounds.y -= this.bounds.y;\n\n\t\tnode.style.left = Math.round(bounds.x) + 'px';\n\t\tnode.style.top = Math.round(bounds.y) + 'px';\n\t\tnode.style.width = Math.round(bounds.width) + 'px';\n\t\tnode.style.height = Math.round(bounds.height) + 'px';\n\t\t\n\t\tnode.src = this.image;\n\t\t\n\t\tthis.node.appendChild(node);\n\t}\n};\n\n__mxOutput.mxLabel = typeof mxLabel !== 'undefined' ? mxLabel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCylinder\n *\n * Extends <mxShape> to implement an cylinder shape. If a\n * custom shape with one filled area and an overlay path is\n * needed, then this shape's <redrawPath> should be overridden.\n * This shape is registered under <mxConstants.SHAPE_CYLINDER>\n * in <mxCellRenderer>.\n * \n * Constructor: mxCylinder\n *\n * Constructs a new cylinder shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxCylinder(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxCylinder, mxShape);\n\n/**\n * Variable: maxHeight\n *\n * Defines the maximum height of the top and bottom part\n * of the cylinder shape.\n */\nmxCylinder.prototype.maxHeight = 40;\n\n/**\n * Variable: svgStrokeTolerance\n *\n * Sets stroke tolerance to 0 for SVG.\n */\nmxCylinder.prototype.svgStrokeTolerance = 0;\n\n/**\n * Function: paintVertexShape\n * \n * Redirects to redrawPath for subclasses to work.\n */\nmxCylinder.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tc.translate(x, y);\n\tc.begin();\n\tthis.redrawPath(c, x, y, w, h, false);\n\tc.fillAndStroke();\n\t\n\tif (!this.outline || this.style == null || mxUtils.getValue(\n\t\tthis.style, mxConstants.STYLE_BACKGROUND_OUTLINE, 0) == 0)\n\t{\n\t\tc.setShadow(false);\n\t\tc.begin();\n\t\tthis.redrawPath(c, x, y, w, h, true);\n\t\tc.stroke();\n\t}\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.getCylinderSize = function(x, y, w, h)\n{\n\treturn Math.min(this.maxHeight, Math.round(h / 5));\n};\n\n/**\n * Function: redrawPath\n *\n * Draws the path for this shape.\n */\nmxCylinder.prototype.redrawPath = function(c, x, y, w, h, isForeground)\n{\n\tvar dy = this.getCylinderSize(x, y, w, h);\n\t\n\tif ((isForeground && this.fill != null) || (!isForeground && this.fill == null))\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, 2 * dy, w, 2 * dy, w, dy);\n\t\t\n\t\t// Needs separate shapes for correct hit-detection\n\t\tif (!isForeground)\n\t\t{\n\t\t\tc.stroke();\n\t\t\tc.begin();\n\t\t}\n\t}\n\t\n\tif (!isForeground)\n\t{\n\t\tc.moveTo(0, dy);\n\t\tc.curveTo(0, -dy / 3, w, -dy / 3, w, dy);\n\t\tc.lineTo(w, h - dy);\n\t\tc.curveTo(w, h + dy / 3, 0, h + dy / 3, 0, h - dy);\n\t\tc.close();\n\t}\n};\n\n__mxOutput.mxCylinder = typeof mxCylinder !== 'undefined' ? mxCylinder : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnector\n * \n * Extends <mxShape> to implement a connector shape. The connector\n * shape allows for arrow heads on either side.\n * \n * This shape is registered under <mxConstants.SHAPE_CONNECTOR> in\n * <mxCellRenderer>.\n * \n * Constructor: mxConnector\n * \n * Constructs a new connector shape.\n * \n * Parameters:\n * \n * points - Array of <mxPoints> that define the points. This is stored in\n * <mxShape.points>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * Default is 'black'.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxConnector(points, stroke, strokewidth)\n{\n\tmxPolyline.call(this, points, stroke, strokewidth);\n};\n\n/**\n * Extends mxPolyline.\n */\nmxUtils.extend(mxConnector, mxPolyline);\n\n/**\n * Function: updateBoundingBox\n *\n * Updates the <boundingBox> for this shape using <createBoundingBox> and\n * <augmentBoundingBox> and stores the result in <boundingBox>.\n */\nmxConnector.prototype.updateBoundingBox = function()\n{\n\tthis.useSvgBoundingBox = this.style != null && this.style[mxConstants.STYLE_CURVED] == 1;\n\tmxShape.prototype.updateBoundingBox.apply(this, arguments);\n};\n\n/**\n * Function: paintEdgeShape\n * \n * Paints the line shape.\n */\nmxConnector.prototype.paintEdgeShape = function(c, pts)\n{\n\t// The indirection via functions for markers is needed in\n\t// order to apply the offsets before painting the line and\n\t// paint the markers after painting the line.\n\tvar sourceMarker = this.createMarker(c, pts, true);\n\tvar targetMarker = this.createMarker(c, pts, false);\n\n\tmxPolyline.prototype.paintEdgeShape.apply(this, arguments);\n\t\n\t// Disables shadows, dashed styles and fixes fill color for markers\n\tc.setFillColor(this.stroke);\n\tc.setShadow(false);\n\tc.setDashed(false);\n\t\n\tif (sourceMarker != null)\n\t{\n\t\tsourceMarker();\n\t}\n\t\n\tif (targetMarker != null)\n\t{\n\t\ttargetMarker();\n\t}\n};\n\n/**\n * Function: createMarker\n * \n * Prepares the marker by adding offsets in pts and returning a function to\n * paint the marker.\n */\nmxConnector.prototype.createMarker = function(c, pts, source)\n{\n\tvar result = null;\n\tvar n = pts.length;\n\tvar type = mxUtils.getValue(this.style, (source) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW);\n\tvar p0 = (source) ? pts[1] : pts[n - 2];\n\tvar pe = (source) ? pts[0] : pts[n - 1];\n\t\n\tif (type != null && p0 != null && pe != null)\n\t{\n\t\tvar count = 1;\n\t\t\n\t\t// Uses next non-overlapping point\n\t\twhile (count < n - 1 && Math.round(p0.x - pe.x) == 0 && Math.round(p0.y - pe.y) == 0)\n\t\t{\n\t\t\tp0 = (source) ? pts[1 + count] : pts[n - 2 - count];\n\t\t\tcount++;\n\t\t}\n\t\n\t\t// Computes the norm and the inverse norm\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\n\t\tvar dist = Math.max(1, Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tvar unitX = dx / dist;\n\t\tvar unitY = dy / dist;\n\t\n\t\tvar size = mxUtils.getNumber(this.style, (source) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\n\t\t// Allow for stroke width in the end point used and the \n\t\t// orthogonal vectors describing the direction of the marker\n\t\tvar filled = this.style[(source) ? mxConstants.STYLE_STARTFILL : mxConstants.STYLE_ENDFILL] != 0;\n\t\t\n\t\tresult = mxMarker.createMarker(c, this, type, pe, unitX, unitY, size, source, this.strokewidth, filled);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: augmentBoundingBox\n *\n * Augments the bounding box with the strokewidth and shadow offsets.\n */\nmxConnector.prototype.augmentBoundingBox = function(bbox)\n{\n\tmxShape.prototype.augmentBoundingBox.apply(this, arguments);\n\t\n\t// Adds marker sizes\n\tvar size = 0;\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_STARTARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = mxUtils.getNumber(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_MARKERSIZE) + 1;\n\t}\n\t\n\tif (mxUtils.getValue(this.style, mxConstants.STYLE_ENDARROW, mxConstants.NONE) != mxConstants.NONE)\n\t{\n\t\tsize = Math.max(size, mxUtils.getNumber(this.style, mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE)) + 1;\n\t}\n\t\n\tbbox.grow(size * this.scale);\n};\n\n__mxOutput.mxConnector = typeof mxConnector !== 'undefined' ? mxConnector : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlane\n *\n * Extends <mxShape> to implement a swimlane shape. This shape is registered\n * under <mxConstants.SHAPE_SWIMLANE> in <mxCellRenderer>. Use the\n * <mxConstants.STYLE_STYLE_STARTSIZE> to define the size of the title\n * region, <mxConstants.STYLE_SWIMLANE_FILLCOLOR> for the content area fill,\n * <mxConstants.STYLE_SEPARATORCOLOR> to draw an additional vertical separator\n * and <mxConstants.STYLE_SWIMLANE_LINE> to hide the line between the title\n * region and the content area. The <mxConstants.STYLE_HORIZONTAL> affects\n * the orientation of this shape, not only its label.\n * \n * Constructor: mxSwimlane\n *\n * Constructs a new swimlane shape.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that defines the bounds. This is stored in\n * <mxShape.bounds>.\n * fill - String that defines the fill color. This is stored in <fill>.\n * stroke - String that defines the stroke color. This is stored in <stroke>.\n * strokewidth - Optional integer that defines the stroke width. Default is\n * 1. This is stored in <strokewidth>.\n */\nfunction mxSwimlane(bounds, fill, stroke, strokewidth)\n{\n\tmxShape.call(this);\n\tthis.bounds = bounds;\n\tthis.fill = fill;\n\tthis.stroke = stroke;\n\tthis.strokewidth = (strokewidth != null) ? strokewidth : 1;\n};\n\n/**\n * Extends mxShape.\n */\nmxUtils.extend(mxSwimlane, mxShape);\n\n/**\n * Variable: imageSize\n *\n * Default imagewidth and imageheight if an image but no imagewidth\n * and imageheight are defined in the style. Value is 16.\n */\nmxSwimlane.prototype.imageSize = 16;\n\n/**\n * Function: isRoundable\n * \n * Adds roundable support.\n */\nmxSwimlane.prototype.isRoundable = function(c, x, y, w, h)\n{\n\treturn true;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getTitleSize = function()\n{\n\treturn Math.max(0, mxUtils.getValue(this.style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getLabelBounds = function(rect)\n{\n\tvar start = this.getTitleSize();\n\tvar bounds = new mxRectangle(rect.x, rect.y, rect.width, rect.height);\n\tvar horizontal = this.isHorizontal();\n\t\n\tvar flipH = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\tvar flipV = mxUtils.getValue(this.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t// East is default\n\tvar shapeVertical = (this.direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_SOUTH);\n\tvar realHorizontal = horizontal == !shapeVertical;\n\t\n\tvar realFlipH = !realHorizontal && flipH != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\tvar realFlipV = realHorizontal && flipV != (this.direction == mxConstants.DIRECTION_SOUTH ||\n\t\t\tthis.direction == mxConstants.DIRECTION_WEST);\n\n\t// Shape is horizontal\n\tif (!shapeVertical)\n\t{\n\t\tvar tmp = Math.min(bounds.height, start * this.scale);\n\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.y += bounds.height - tmp;\n\t\t}\n\n\t\tbounds.height = tmp;\n\t}\n\telse\n\t{\n\t\tvar tmp = Math.min(bounds.width, start * this.scale);\n\t\t\n\t\tif (realFlipH || realFlipV)\n\t\t{\n\t\t\tbounds.x += bounds.width - tmp;\t\n\t\t}\n\n\t\tbounds.width = tmp;\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getGradientBounds\n * \n * Returns the bounding box for the gradient box for this shape.\n */\nmxSwimlane.prototype.getGradientBounds = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t\treturn new mxRectangle(x, y, w, start);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t\treturn new mxRectangle(x, y, start, h);\n\t}\n};\n\n/**\n * Function: getArcSize\n * \n * Returns the arcsize for the swimlane.\n */\nmxSwimlane.prototype.getArcSize = function(w, h, start)\n{\n\tvar f = mxUtils.getValue(this.style, mxConstants.STYLE_ARCSIZE, mxConstants.RECTANGLE_ROUNDING_FACTOR * 100) / 100;\n\n\treturn start * f * 3; \n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.isHorizontal = function()\n{\n\treturn mxUtils.getValue(this.style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n};\n\n/**\n * Function: paintVertexShape\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintVertexShape = function(c, x, y, w, h)\n{\n\tvar start = this.getTitleSize();\n\tvar fill = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_FILLCOLOR, mxConstants.NONE);\n\tvar swimlaneLine = mxUtils.getValue(this.style, mxConstants.STYLE_SWIMLANE_LINE, 1) == 1;\n\tvar r = 0;\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tstart = Math.min(start, h);\n\t}\n\telse\n\t{\n\t\tstart = Math.min(start, w);\n\t}\n\t\n\tc.translate(x, y);\n\t\n\tif (!this.isRounded)\n\t{\n\t\tthis.paintSwimlane(c, x, y, w, h, start, fill, swimlaneLine);\n\t}\n\telse\n\t{\n\t\tr = this.getArcSize(w, h, start);\n\t\tr = Math.min(((this.isHorizontal()) ? h : w) - start, Math.min(start, r));\n\t\tthis.paintRoundedSwimlane(c, x, y, w, h, start, r, fill, swimlaneLine);\n\t}\n\t\n\tvar sep = mxUtils.getValue(this.style, mxConstants.STYLE_SEPARATORCOLOR, mxConstants.NONE);\n\tthis.paintSeparator(c, x, y, w, h, start, sep);\n\n\tif (this.image != null)\n\t{\n\t\tvar bounds = this.getImageBounds(x, y, w, h);\n\t\tc.image(bounds.x - x, bounds.y - y, bounds.width, bounds.height,\n\t\t\t\tthis.image, false, false, false);\n\t}\n\t\n\tif (this.glass)\n\t{\n\t\tc.setShadow(false);\n\t\tthis.paintGlassEffect(c, 0, 0, w, start, r);\n\t}\n};\n\n/**\n * Function: paintSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintSwimlane = function(c, x, y, w, h, start, fill, swimlaneLine)\n{\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(w, 0);\n\t\tc.lineTo(w, start);\n\t\tc.fillAndStroke();\n\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(0, 0);\n\t\tc.lineTo(0, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t\tc.lineTo(w, h);\n\t\t\tc.lineTo(start, h);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintRoundedSwimlane\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.paintRoundedSwimlane = function(c, x, y, w, h, start, r, fill, swimlaneLine)\n{\n\tc.begin();\n\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(w, start);\n\t\tc.lineTo(w, r);\n\t\tc.quadTo(w, 0, w - Math.min(w / 2, r), 0);\n\t\tc.lineTo(Math.min(w / 2, r), 0);\n\t\tc.quadTo(0, 0, 0, r);\n\t\tc.lineTo(0, start);\n\t\tc.fillAndStroke();\n\t\t\n\t\tif (start < h)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(0, start);\n\t\t\tc.lineTo(0, h - r);\n\t\t\tc.quadTo(0, h, Math.min(w / 2, r), h);\n\t\t\tc.lineTo(w - Math.min(w / 2, r), h);\n\t\t\tc.quadTo(w, h, w, h - r);\n\t\t\tc.lineTo(w, start);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(r, 0);\n\t\tc.quadTo(0, 0, 0, Math.min(h / 2, r));\n\t\tc.lineTo(0, h - Math.min(h / 2, r));\n\t\tc.quadTo(0, h, r, h);\n\t\tc.lineTo(start, h);\n\t\tc.fillAndStroke();\n\n\t\tif (start < w)\n\t\t{\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.pointerEvents = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.setFillColor(fill);\n\t\t\t}\n\t\t\t\n\t\t\tc.begin();\n\t\t\tc.moveTo(start, h);\n\t\t\tc.lineTo(w - r, h);\n\t\t\tc.quadTo(w, h, w, h - Math.min(h / 2, r));\n\t\t\tc.lineTo(w, Math.min(h / 2, r));\n\t\t\tc.quadTo(w, 0, w - r, 0);\n\t\t\tc.lineTo(start, 0);\n\t\t\t\n\t\t\tif (fill == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tc.stroke();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tc.fillAndStroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tif (swimlaneLine)\n\t{\n\t\tthis.paintDivider(c, x, y, w, h, start, fill == mxConstants.NONE);\n\t}\n};\n\n/**\n * Function: paintDivider\n *\n * Paints the divider between swimlane title and content area.\n */\nmxSwimlane.prototype.paintDivider = function(c, x, y, w, h, start, shadow)\n{\n\tif (!shadow)\n\t{\n\t\tc.setShadow(false);\n\t}\n\n\tc.begin();\n\t\n\tif (this.isHorizontal())\n\t{\n\t\tc.moveTo(0, start);\n\t\tc.lineTo(w, start);\n\t}\n\telse\n\t{\n\t\tc.moveTo(start, 0);\n\t\tc.lineTo(start, h);\n\t}\n\n\tc.stroke();\n};\n\n/**\n * Function: paintSeparator\n *\n * Paints the vertical or horizontal separator line between swimlanes.\n */\nmxSwimlane.prototype.paintSeparator = function(c, x, y, w, h, start, color)\n{\n\tif (color != mxConstants.NONE)\n\t{\n\t\tc.setStrokeColor(color);\n\t\tc.setDashed(true);\n\t\tc.begin();\n\t\t\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tc.moveTo(w, start);\n\t\t\tc.lineTo(w, h);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tc.moveTo(start, 0);\n\t\t\tc.lineTo(w, 0);\n\t\t}\n\t\t\n\t\tc.stroke();\n\t\tc.setDashed(false);\n\t}\n};\n\n/**\n * Function: getImageBounds\n *\n * Paints the swimlane vertex shape.\n */\nmxSwimlane.prototype.getImageBounds = function(x, y, w, h)\n{\n\tif (this.isHorizontal())\n\t{\n\t\treturn new mxRectangle(x + w - this.imageSize, y, this.imageSize, this.imageSize);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangle(x, y, this.imageSize, this.imageSize);\n\t}\n};\n\n__mxOutput.mxSwimlane = typeof mxSwimlane !== 'undefined' ? mxSwimlane : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphLayout\n * \n * Base class for all layout algorithms in mxGraph. Main public functions are\n * <moveCell> for handling a moved cell within a layouted parent, and <execute> for\n * running the layout on a given parent cell.\n *\n * Known Subclasses:\n *\n * <mxCircleLayout>, <mxCompactTreeLayout>, <mxCompositeLayout>,\n * <mxFastOrganicLayout>, <mxParallelEdgeLayout>, <mxPartitionLayout>,\n * <mxStackLayout>\n * \n * Constructor: mxGraphLayout\n *\n * Constructs a new layout using the given layouts.\n *\n * Arguments:\n * \n * graph - Enclosing \n */\nfunction mxGraphLayout(graph)\n{\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphLayout.prototype.graph = null;\n\n/**\n * Variable: useBoundingBox\n *\n * Boolean indicating if the bounding box of the label should be used if\n * its available. Default is true.\n */\nmxGraphLayout.prototype.useBoundingBox = true;\n\n/**\n * Variable: parent\n *\n * The parent cell of the layout, if any\n */\nmxGraphLayout.prototype.parent = null;\n\n/**\n * Function: moveCell\n * \n * Notified when a cell is being moved in a parent that has automatic\n * layout to update the cell state (eg. index) so that the outcome of the\n * layout will position the vertex as close to the point (x, y) as\n * possible.\n * \n * Empty implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> which has been moved.\n * x - X-coordinate of the new cell location.\n * y - Y-coordinate of the new cell location.\n */\nmxGraphLayout.prototype.moveCell = function(cell, x, y) { };\n\n/**\n * Function: execute\n * \n * Executes the layout algorithm for the children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be layed out.\n */\nmxGraphLayout.prototype.execute = function(parent) { };\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxGraphLayout.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: getConstraint\n * \n * Returns the constraint for the given key and cell. The optional edge and\n * source arguments are used to return inbound and outgoing routing-\n * constraints for the given edge and vertex. This implementation always\n * returns the value for the given key in the style of the given cell.\n * \n * Parameters:\n * \n * key - Key of the constraint to be returned.\n * cell - <mxCell> whose constraint should be returned.\n * edge - Optional <mxCell> that represents the connection whose constraint\n * should be returned. Default is null.\n * source - Optional boolean that specifies if the connection is incoming\n * or outgoing. Default is null.\n */\nmxGraphLayout.prototype.getConstraint = function(key, cell, edge, source)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\n\treturn (style != null) ? style[key] : null;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> of cell paths for the visited cells.\n */\nmxGraphLayout.traverse = function(vertex, directed, func, edge, visited)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.graph.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.graph.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.graph.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || isSource)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.graph.view.getVisibleTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n * traverseAncestors - boolean whether to \n */\nmxGraphLayout.prototype.isAncestor = function(parent, child, traverseAncestors)\n{\n\tif (!traverseAncestors)\n\t{\n\t\treturn (this.graph.model.getParent(child) == parent);\n\t}\t\n\t\n\tif (child == parent)\n\t{\n\t\treturn false;\n\t}\n\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.graph.model.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: isVertexMovable\n * \n * Returns a boolean indicating if the given <mxCell> is movable or\n * bendable by the algorithm. This implementation returns true if the given\n * cell is movable in the graph.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraphLayout.prototype.isVertexMovable = function(cell)\n{\n\treturn this.graph.isCellMovable(cell);\n};\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn !this.graph.getModel().isVertex(vertex) ||\n\t\t!this.graph.isCellVisible(vertex);\n};\n\n/**\n * Function: isEdgeIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored by\n * the algorithm. This implementation returns false for all vertices.\n * \n * Parameters:\n * \n * cell - <mxCell> whose ignored state should be returned.\n */\nmxGraphLayout.prototype.isEdgeIgnored = function(edge)\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn !model.isEdge(edge) ||\n\t\t!this.graph.isCellVisible(edge) ||\n\t\tmodel.getTerminal(edge, true) == null ||\n\t\tmodel.getTerminal(edge, false) == null;\n};\n\n/**\n * Function: setEdgeStyleEnabled\n * \n * Disables or enables the edge style of the given edge.\n */\nmxGraphLayout.prototype.setEdgeStyleEnabled = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_NOEDGESTYLE,\n\t\t\t(value) ? '0' : '1', [edge]);\n};\n\n/**\n * Function: setOrthogonalEdge\n * \n * Disables or enables orthogonal end segments of the given edge.\n */\nmxGraphLayout.prototype.setOrthogonalEdge = function(edge, value)\n{\n\tthis.graph.setCellStyles(mxConstants.STYLE_ORTHOGONAL,\n\t\t\t(value) ? '1' : '0', [edge]);\n};\n\n/**\n * Function: getParentOffset\n * \n * Determines the offset of the given parent to the parent\n * of the layout\n */\nmxGraphLayout.prototype.getParentOffset = function(parent)\n{\n\tvar result = new mxPoint();\n\n\tif (parent != null && parent != this.parent)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isAncestor(this.parent, parent))\n\t\t{\n\t\t\tvar parentGeo = model.getGeometry(parent);\n\n\t\t\twhile (parent != this.parent)\n\t\t\t{\n\t\t\t\tresult.x = result.x + parentGeo.x;\n\t\t\t\tresult.y = result.y + parentGeo.y;\n\n\t\t\t\tparent = model.getParent(parent);;\n\t\t\t\tparentGeo = model.getGeometry(parent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: setEdgePoints\n * \n * Replaces the array of mxPoints in the geometry of the given edge\n * with the given array of mxPoints.\n */\nmxGraphLayout.prototype.setEdgePoints = function(edge, points)\n{\n\tif (edge != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar geometry = model.getGeometry(edge);\n\n\t\tif (geometry == null)\n\t\t{\n\t\t\tgeometry = new mxGeometry();\n\t\t\tgeometry.setRelative(true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t}\n\n\t\tif (this.parent != null && points != null)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tpoints[i].x = points[i].x - parentOffset.x;\n\t\t\t\tpoints[i].y = points[i].y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tgeometry.points = points;\n\t\tmodel.setGeometry(edge, geometry);\n\t}\n};\n\n/**\n * Function: setVertexLocation\n * \n * Sets the new position of the given cell taking into account the size of\n * the bounding box if <useBoundingBox> is true. The change is only carried\n * out if the new location is not equal to the existing location, otherwise\n * the geometry is not replaced with an updated instance. The new or old\n * bounds are returned (including overlapping labels).\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry is to be set.\n * x - Integer that defines the x-coordinate of the new location.\n * y - Integer that defines the y-coordinate of the new location.\n */\nmxGraphLayout.prototype.setVertexLocation = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(cell);\n\tvar result = null;\n\t\n\tif (geometry != null)\n\t{\n\t\tresult = new mxRectangle(x, y, geometry.width, geometry.height);\n\t\t\n\t\t// Checks for oversize labels and shifts the result\n\t\t// TODO: Use mxUtils.getStringSize for label bounds\n\t\tif (this.useBoundingBox)\n\t\t{\n\t\t\tvar state = this.graph.getView().getState(cell);\n\t\t\t\n\t\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar box = state.text.boundingBox;\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.x < state.x)\n\t\t\t\t{\n\t\t\t\t\tx += (state.x - box.x) / scale;\n\t\t\t\t\tresult.width = box.width;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y < state.y)\n\t\t\t\t{\n\t\t\t\t\ty += (state.y - box.y) / scale;\n\t\t\t\t\tresult.height = box.height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.parent != null)\n\t\t{\n\t\t\tvar parent = model.getParent(cell);\n\n\t\t\tif (parent != null && parent != this.parent)\n\t\t\t{\n\t\t\t\tvar parentOffset = this.getParentOffset(parent);\n\n\t\t\t\tx = x - parentOffset.x;\n\t\t\t\ty = y - parentOffset.y;\n\t\t\t}\n\t\t}\n\n\t\tif (geometry.x != x || geometry.y != y)\n\t\t{\n\t\t\tgeometry = geometry.clone();\n\t\t\tgeometry.x = x;\n\t\t\tgeometry.y = y;\n\t\t\t\n\t\t\tmodel.setGeometry(cell, geometry);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getVertexBounds\n * \n * Returns an <mxRectangle> that defines the bounds of the given cell or\n * the bounding box if <useBoundingBox> is true.\n */\nmxGraphLayout.prototype.getVertexBounds = function(cell)\n{\n\tvar geo = this.graph.getModel().getGeometry(cell);\n\n\t// Checks for oversize label bounding box and corrects\n\t// the return value accordingly\n\t// TODO: Use mxUtils.getStringSize for label bounds\n\tif (this.useBoundingBox)\n\t{\n\t\tvar state = this.graph.getView().getState(cell);\n\n\t\tif (state != null && state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tvar scale = this.graph.getView().scale;\n\t\t\tvar tmp = state.text.boundingBox;\n\n\t\t\tvar dx0 = Math.max(state.x - tmp.x, 0) / scale;\n\t\t\tvar dy0 = Math.max(state.y - tmp.y, 0) / scale;\n\t\t\tvar dx1 = Math.max((tmp.x + tmp.width) - (state.x + state.width), 0) / scale;\n  \t\t\tvar dy1 = Math.max((tmp.y + tmp.height) - (state.y + state.height), 0) / scale;\n\n\t\t\tgeo = new mxRectangle(geo.x - dx0, geo.y - dy0, geo.width + dx0 + dx1, geo.height + dy0 + dy1);\n\t\t}\n\t}\n\n\tif (this.parent != null)\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\tgeo = geo.clone();\n\n\t\tif (parent != null && parent != this.parent)\n\t\t{\n\t\t\tvar parentOffset = this.getParentOffset(parent);\n\t\t\tgeo.x = geo.x + parentOffset.x;\n\t\t\tgeo.y = geo.y + parentOffset.y;\n\t\t}\n\t}\n\n\treturn new mxRectangle(geo.x, geo.y, geo.width, geo.height);\n};\n\n/**\n * Function: arrangeGroups\n * \n * Shortcut to <mxGraph.updateGroupBounds> with moveGroup set to true.\n */\nmxGraphLayout.prototype.arrangeGroups = function(cells, border, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\treturn this.graph.updateGroupBounds(cells, border, true, topBorder, rightBorder, bottomBorder, leftBorder);\n};\n\n/**\n * Class: WeightedCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the weighted\n * sum of their connected edges. Does not violate (x.compareTo(y)==0) ==\n * (x.equals(y))\n *\n * Constructor: WeightedCellSorter\n * \n * Constructs a new weighted cell sorted for the given cell and weight.\n */\nfunction WeightedCellSorter(cell, weightedValue)\n{\n\tthis.cell = cell;\n\tthis.weightedValue = weightedValue;\n};\n\n/**\n * Variable: weightedValue\n * \n * The weighted value of the cell stored.\n */\nWeightedCellSorter.prototype.weightedValue = 0;\n\n/**\n * Variable: nudge\n * \n * Whether or not to flip equal weight values.\n */\nWeightedCellSorter.prototype.nudge = false;\n\n/**\n * Variable: visited\n * \n * Whether or not this cell has been visited in the current assignment.\n */\nWeightedCellSorter.prototype.visited = false;\n\n/**\n * Variable: rankIndex\n * \n * The index this cell is in the model rank.\n */\nWeightedCellSorter.prototype.rankIndex = null;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated.\n */\nWeightedCellSorter.prototype.cell = null;\n\n/**\n * Function: compare\n * \n * Compares two WeightedCellSorters.\n */\nWeightedCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.weightedValue > a.weightedValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.weightedValue < a.weightedValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (b.nudge)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxGraphLayout = typeof mxGraphLayout !== 'undefined' ? mxGraphLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStackLayout\n * \n * Extends <mxGraphLayout> to create a horizontal or vertical stack of the\n * child vertices. The children do not need to be connected for this layout\n * to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxStackLayout(graph, true);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxStackLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxStackLayout(graph, horizontal, spacing, x0, y0, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = (spacing != null) ? spacing : 0;\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.border = (border != null) ? border : 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxStackLayout.prototype = new mxGraphLayout();\nmxStackLayout.prototype.constructor = mxStackLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxStackLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n *\n * Specifies the spacing between the cells. Default is 0.\n */\nmxStackLayout.prototype.spacing = null;\n\n/**\n * Variable: x0\n *\n * Specifies the horizontal origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.x0 = null;\n\n/**\n * Variable: y0\n *\n * Specifies the vertical origin of the layout. Default is 0.\n */\nmxStackLayout.prototype.y0 = null;\n\n/**\n * Variable: border\n *\n * Border to be added if fill is true. Default is 0.\n */\nmxStackLayout.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginTop = 0;\n\n/**\n * Variable: marginLeft\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginLeft = 0;\n\n/**\n * Variable: marginRight\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginRight = 0;\n\n/**\n * Variable: marginBottom\n * \n * Top margin for the child area. Default is 0.\n */\nmxStackLayout.prototype.marginBottom = 0;\n\n/**\n * Variable: keepFirstLocation\n * \n * Boolean indicating if the location of the first cell should be\n * kept, that is, it will not be moved to x0 or y0. Default is false.\n */\nmxStackLayout.prototype.keepFirstLocation = false;\n\n/**\n * Variable: fill\n * \n * Boolean indicating if dimension should be changed to fill out the parent\n * cell. Default is false.\n */\nmxStackLayout.prototype.fill = false;\n\t\n/**\n * Variable: resizeParent\n * \n * If the parent should be resized to match the width/height of the\n * stack. Default is false.\n */\nmxStackLayout.prototype.resizeParent = false;\n\n/**\n * Variable: resizeParentMax\n * \n * Use maximum of existing value and new value for resize of parent.\n * Default is false.\n */\nmxStackLayout.prototype.resizeParentMax = false;\n\n/**\n * Variable: resizeLast\n * \n * If the last element should be resized to fill out the parent. Default is\n * false. If <resizeParent> is true then this is ignored.\n */\nmxStackLayout.prototype.resizeLast = false;\n\n/**\n * Variable: wrap\n * \n * Value at which a new column or row should be created. Default is null.\n */\nmxStackLayout.prototype.wrap = null;\n\n/**\n * Variable: borderCollapse\n * \n * If the strokeWidth should be ignored. Default is true.\n */\nmxStackLayout.prototype.borderCollapse = true;\n\n/**\n * Variable: allowGaps\n * \n * If gaps should be allowed in the stack. Default is false.\n */\nmxStackLayout.prototype.allowGaps = false;\n\n/**\n * Variable: gridSize\n * \n * Grid size for alignment of position and size. Default is 0.\n */\nmxStackLayout.prototype.gridSize = 0;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxStackLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxStackLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\tvar horizontal = this.isHorizontal();\n\t\n\tif (cell != null && parent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar value = (horizontal) ? x : y;\n\t\tvar pstate = this.graph.getView().getState(parent);\n\n\t\tif (pstate != null)\n\t\t{\n\t\t\tvalue -= (horizontal) ? pstate.x : pstate.y;\n\t\t}\n\t\t\n\t\tvalue /= this.graph.view.scale;\n\t\t\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (child != cell)\n\t\t\t{\n\t\t\t\tvar bounds = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = (horizontal) ?\n\t\t\t\t\t\tbounds.x + bounds.width / 2 :\n\t\t\t\t\t\tbounds.y + bounds.height / 2;\n\t\t\t\t\t\n\t\t\t\t\tif (last <= value && tmp > value)\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlast = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: getParentSize\n * \n * Returns the size for the parent container or the size of the graph\n * container if the parent is a layer or the root of the model.\n */\nmxStackLayout.prototype.getParentSize = function(parent)\n{\n\tvar model = this.graph.getModel();\t\t\t\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null && ((pgeo == null &&\n\t\tmodel.isLayer(parent)) || parent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\t\n\treturn pgeo;\n};\n\n/**\n * Function: getLayoutCells\n * \n * Returns the cells to be layouted.\n */\nmxStackLayout.prototype.getLayoutCells = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(parent);\n\tvar cells = [];\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isVertexIgnored(child) && this.isVertexMovable(child))\n\t\t{\n\t\t\tcells.push(child);\n\t\t}\n\t}\n\t\n\tif (this.allowGaps)\n\t{\n\t\tcells.sort(mxUtils.bind(this, function(c1, c2)\n\t\t{\n\t\t\tvar geo1 = this.graph.getCellGeometry(c1);\n\t\t\tvar geo2 = this.graph.getCellGeometry(c2);\n\t\t\t\n\t\t\treturn (geo1.y == geo2.y) ? 0 : ((geo1.y > geo2.y > 0) ? 1 : -1);\n\t\t}));\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: snap\n * \n * Snaps the given value to the grid size.\n */\nmxStackLayout.prototype.snap = function(value)\n{\n\tif (this.gridSize != null && this.gridSize > 0)\n\t{\n\t\tvalue = Math.max(value, this.gridSize);\n\t\t\n\t\tif (value / this.gridSize > 1)\n\t\t{\n\t\t\tvar mod = value % this.gridSize;\n\t\t\tvalue += mod > this.gridSize / 2 ? (this.gridSize - mod) : -mod;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.execute = function(parent)\n{\n\tif (parent != null)\n\t{\n\t\tvar pgeo = this.getParentSize(parent);\n\t\tvar horizontal = this.isHorizontal();\n\t\tvar model = this.graph.getModel();\t\n\t\tvar fillValue = null;\n\t\t\n\t\tif (pgeo != null)\n\t\t{\n\t\t\tfillValue = (horizontal) ? pgeo.height - this.marginTop - this.marginBottom :\n\t\t\t\tpgeo.width - this.marginLeft - this.marginRight;\n\t\t}\n\t\t\n\t\tfillValue -= 2 * this.border;\n\t\tvar x0 = this.x0 + this.border + this.marginLeft;\n\t\tvar y0 = this.y0 + this.border + this.marginTop;\n\t\t\n\t\t// Handles swimlane start size\n\t\tif (this.graph.isSwimlane(parent))\n\t\t{\n\t\t\t// Uses computed style to get latest \n\t\t\tvar style = this.graph.getCellStyle(parent);\n\t\t\tvar start = mxUtils.getNumber(style, mxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE);\n\t\t\tvar horz = mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true) == 1;\n\n\t\t\tif (pgeo != null)\n\t\t\t{\n\t\t\t\tif (horz)\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.height);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstart = Math.min(start, pgeo.width);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal == horz)\n\t\t\t{\n\t\t\t\tfillValue -= start;\n\t\t\t}\n\n\t\t\tif (horz)\n\t\t\t{\n\t\t\t\ty0 += start;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx0 += start;\n\t\t\t}\n\t\t}\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar tmp = 0;\n\t\t\tvar last = null;\n\t\t\tvar lastValue = 0;\n\t\t\tvar lastChild = null;\n\t\t\tvar cells = this.getLayoutCells(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar child = cells[i];\n\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (this.wrap != null && last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif ((horizontal && last.x + last.width +\n\t\t\t\t\t\t\tgeo.width + 2 * this.spacing > this.wrap) ||\n\t\t\t\t\t\t\t(!horizontal && last.y + last.height +\n\t\t\t\t\t\t\tgeo.height + 2 * this.spacing > this.wrap))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ty0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tx0 += tmp + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = 0;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttmp = Math.max(tmp, (horizontal) ? geo.height : geo.width);\n\t\t\t\t\tvar sw = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (!this.borderCollapse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar childStyle = this.graph.getCellStyle(child);\n\t\t\t\t\t\tsw = mxUtils.getNumber(childStyle, mxConstants.STYLE_STROKEWIDTH, 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (last != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar temp = lastValue + this.spacing + Math.floor(sw / 2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = this.snap(((this.allowGaps) ? Math.max(temp, geo.x) :\n\t\t\t\t\t\t\t\ttemp) - this.marginLeft) + this.marginLeft;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = this.snap(((this.allowGaps) ? Math.max(temp, geo.y) :\n\t\t\t\t\t\t\t\ttemp) - this.marginTop) + this.marginTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (!this.keepFirstLocation)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = (this.allowGaps && geo.x > x0) ? Math.max(this.snap(geo.x -\n\t\t\t\t\t\t\t\tthis.marginLeft) + this.marginLeft, x0) : x0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.y = (this.allowGaps && geo.y > y0) ? Math.max(this.snap(geo.y -\n\t\t\t\t\t\t\t\tthis.marginTop) + this.marginTop, y0) : y0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y = y0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.fill && fillValue != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = fillValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = fillValue;\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = this.snap(geo.width);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = this.snap(geo.height);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.setChildGeometry(child, geo);\n\t\t\t\t\tlastChild = child;\n\t\t\t\t\tlast = geo;\n\t\t\t\t\t\n\t\t\t\t\tif (horizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.x + last.width + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlastValue = last.y + last.height + Math.floor(sw / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resizeParent && pgeo != null && last != null && !this.graph.isCellCollapsed(parent))\n\t\t\t{\n\t\t\t\tthis.updateParentGeometry(parent, pgeo, last);\n\t\t\t}\n\t\t\telse if (this.resizeLast && pgeo != null && last != null && lastChild != null)\n\t\t\t{\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tlast.width = pgeo.width - last.x - this.spacing - this.marginRight - this.marginLeft;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlast.height = pgeo.height - last.y - this.spacing - this.marginBottom;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.setChildGeometry(lastChild, last);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.setChildGeometry = function(child, geo)\n{\n\tvar geo2 = this.graph.getCellGeometry(child);\n\t\n\tif (geo2 == null || geo.x != geo2.x || geo.y != geo2.y ||\n\t\tgeo.width != geo2.width || geo.height != geo2.height)\n\t{\n\t\tthis.graph.getModel().setGeometry(child, geo);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * Only children where <isVertexIgnored> returns false are taken into\n * account.\n */\nmxStackLayout.prototype.updateParentGeometry = function(parent, pgeo, last)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\t\n\n\tvar pgeo2 = pgeo.clone();\n\t\n\tif (horizontal)\n\t{\n\t\tvar tmp = last.x + last.width + this.marginRight + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.width = Math.max(pgeo2.width, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.width = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar tmp = last.y + last.height + this.marginBottom + this.border;\n\t\t\n\t\tif (this.resizeParentMax)\n\t\t{\n\t\t\tpgeo2.height = Math.max(pgeo2.height, tmp);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpgeo2.height = tmp;\n\t\t}\n\t}\n\t\n\tif (pgeo.x != pgeo2.x || pgeo.y != pgeo2.y ||\n\t\tpgeo.width != pgeo2.width || pgeo.height != pgeo2.height)\n\t{\n\t\tmodel.setGeometry(parent, pgeo2);\n\t}\n};\n\n__mxOutput.mxStackLayout = typeof mxStackLayout !== 'undefined' ? mxStackLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPartitionLayout\n * \n * Extends <mxGraphLayout> for partitioning the parent cell vertically or\n * horizontally by filling the complete area with the child cells. A horizontal\n * layout partitions the height of the given parent whereas a a non-horizontal\n * layout partitions the width. If the parent is a layer (that is, a child of\n * the root node), then the current graph size is partitioned. The children do\n * not need to be connected for this layout to work.\n * \n * Example:\n * \n * (code)\n * var layout = new mxPartitionLayout(graph, true, 10, 20);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxPartitionLayout\n * \n * Constructs a new stack layout layout for the specified graph,\n * spacing, orientation and offset.\n */\nfunction mxPartitionLayout(graph, horizontal, spacing, border)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.spacing = spacing || 0;\n\tthis.border = border || 0;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxPartitionLayout.prototype = new mxGraphLayout();\nmxPartitionLayout.prototype.constructor = mxPartitionLayout;\n\n/**\n * Variable: horizontal\n * \n * Boolean indicating the direction in which the space is partitioned.\n * Default is true.\n */\nmxPartitionLayout.prototype.horizontal = null;\n\n/**\n * Variable: spacing\n * \n * Integer that specifies the absolute spacing in pixels between the\n * children. Default is 0.\n */\nmxPartitionLayout.prototype.spacing = null;\n\n/**\n * Variable: border\n * \n * Integer that specifies the absolute inset in pixels for the parent that\n * contains the children. Default is 0.\n */\nmxPartitionLayout.prototype.border = null;\n\n/**\n * Variable: resizeVertices\n * \n * Boolean that specifies if vertices should be resized. Default is true.\n */\nmxPartitionLayout.prototype.resizeVertices = true;\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxPartitionLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell>.\n */\nmxPartitionLayout.prototype.moveCell = function(cell, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(cell);\n\t\n\tif (cell != null &&\n\t\tparent != null)\n\t{\n\t\tvar i = 0;\n\t\tvar last = 0;\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\t// Finds index of the closest swimlane\n\t\t// TODO: Take into account the orientation\n\t\tfor (i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\tvar bounds = this.getVertexBounds(child);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tvar tmp = bounds.x + bounds.width / 2;\n\t\t\t\t\n\t\t\t\tif (last < x && tmp > x)\n\t\t\t\t{\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlast = tmp;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Changes child order in parent\n\t\tvar idx = parent.getIndex(cell);\n\t\tidx = Math.max(0, i - ((i > idx) ? 1 : 0));\n\t\t\n\t\tmodel.add(parent, cell, idx);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. All children where <isVertexIgnored>\n * returns false and <isVertexMovable> returns true are modified.\n */\nmxPartitionLayout.prototype.execute = function(parent)\n{\n\tvar horizontal = this.isHorizontal();\n\tvar model = this.graph.getModel();\n\tvar pgeo = model.getGeometry(parent);\n\t\n\t// Handles special case where the parent is either a layer with no\n\t// geometry or the current root of the view in which case the size\n\t// of the graph's container will be used.\n\tif (this.graph.container != null &&\n\t\t((pgeo == null &&\n\t\tmodel.isLayer(parent)) ||\n\t\tparent == this.graph.getView().currentRoot))\n\t{\n\t\tvar width = this.graph.container.offsetWidth - 1;\n\t\tvar height = this.graph.container.offsetHeight - 1;\n\t\tpgeo = new mxRectangle(0, 0, width, height);\n\t}\n\n\tif (pgeo != null)\n\t{\n\t\tvar children = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(child) &&\n\t\t\t\tthis.isVertexMovable(child))\n\t\t\t{\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar n = children.length;\n\n\t\tif (n > 0)\n\t\t{\n\t\t\tvar x0 = this.border;\n\t\t\tvar y0 = this.border;\n\t\t\tvar other = (horizontal) ? pgeo.height : pgeo.width;\n\t\t\tother -= 2 * this.border;\n\n\t\t\tvar size = (this.graph.isSwimlane(parent)) ?\n\t\t\t\tthis.graph.getStartSize(parent) :\n\t\t\t\tnew mxRectangle();\n\n\t\t\tother -= (horizontal) ? size.height : size.width;\n\t\t\tx0 = x0 + size.width;\n\t\t\ty0 = y0 + size.height;\n\n\t\t\tvar tmp = this.border + (n - 1) * this.spacing;\n\t\t\tvar value = (horizontal) ?\n\t\t\t\t((pgeo.width - x0 - tmp) / n) :\n\t\t\t\t((pgeo.height - y0 - tmp) / n);\n\t\t\t\n\t\t\t// Avoids negative values, that is values where the sum of the\n\t\t\t// spacing plus the border is larger then the available space\n\t\t\tif (value > 0)\n\t\t\t{\n\t\t\t\tmodel.beginUpdate();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < n; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\tvar geo = model.getGeometry(child);\n\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.x = x0;\n\t\t\t\t\t\t\tgeo.y = y0;\n\n\t\t\t\t\t\t\tif (horizontal)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.width = value;\n\t\t\t\t\t\t\t\t\tgeo.height = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tx0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (this.resizeVertices)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.height = value;\n\t\t\t\t\t\t\t\t\tgeo.width = other;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ty0 += value + this.spacing;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmodel.setGeometry(child, geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally\n\t\t\t\t{\n\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxPartitionLayout = typeof mxPartitionLayout !== 'undefined' ? mxPartitionLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCompactTreeLayout\n * \n * Extends <mxGraphLayout> to implement a compact tree (Moen) algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCompactTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new compact tree layout for the specified graph\n * and orientation.\n */\nfunction mxCompactTreeLayout(graph, horizontal, invert)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.invert = (invert != null) ? invert : false;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompactTreeLayout.prototype = new mxGraphLayout();\nmxCompactTreeLayout.prototype.constructor = mxCompactTreeLayout;\n\n/**\n * Variable: horizontal\n *\n * Specifies the orientation of the layout. Default is true.\n */\nmxCompactTreeLayout.prototype.horizontal = null;\t \n\n/**\n * Variable: invert\n *\n * Specifies if edge directions should be inverted. Default is false.\n */\nmxCompactTreeLayout.prototype.invert = null;\t \n\n/**\n * Variable: resizeParent\n * \n * If the parents should be resized to match the width/height of the\n * children. Default is true.\n */\nmxCompactTreeLayout.prototype.resizeParent = true;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxCompactTreeLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents. Default is 10.\n */\nmxCompactTreeLayout.prototype.groupPadding = 10;\n\n/**\n * Variable: groupPaddingTop\n * \n * Top padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingTop = 0;\n\n/**\n * Variable: groupPaddingRight\n * \n * Right padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingRight = 0;\n\n/**\n * Variable: groupPaddingBottom\n * \n * Bottom padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingBottom = 0;\n\n/**\n * Variable: groupPaddingLeft\n * \n * Left padding added to resized parents. Default is 0.\n */\nmxCompactTreeLayout.prototype.groupPaddingLeft = 0;\n\n/**\n * Variable: parentsChanged\n *\n * A set of the parents that need updating based on children\n * process as part of the layout.\n */\nmxCompactTreeLayout.prototype.parentsChanged = null;\n\n/**\n * Variable: moveTree\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.moveTree = false;\n\n/**\n * Variable: visited\n * \n * Specifies if the tree should be moved to the top, left corner\n * if it is inside a top-level layer. Default is false.\n */\nmxCompactTreeLayout.prototype.visited = null;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 10.\n */\nmxCompactTreeLayout.prototype.levelDistance = 10;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 20.\n */\nmxCompactTreeLayout.prototype.nodeDistance = 20;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCompactTreeLayout.prototype.resetEdges = true;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex.\n */\nmxCompactTreeLayout.prototype.prefVertEdgeOff = 4;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex.\n */\nmxCompactTreeLayout.prototype.minEdgeJetty = 8;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed.\n */\nmxCompactTreeLayout.prototype.channelBuffer = 4;\n\n/**\n * Variable: edgeRouting\n * \n * Whether or not to apply the internal tree edge routing.\n */\nmxCompactTreeLayout.prototype.edgeRouting = true;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxCompactTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: alignRanks\n * \n * Whether or not the tops of cells in each rank should be aligned\n * across the rank\n */\nmxCompactTreeLayout.prototype.alignRanks = false;\n\n/**\n * Variable: maxRankHeight\n * \n * An array of the maximum height of cells (relative to the layout direction)\n * per rank\n */\nmxCompactTreeLayout.prototype.maxRankHeight = null;\n\n/**\n * Variable: root\n * \n * The cell to use as the root of the tree\n */\nmxCompactTreeLayout.prototype.root = null;\n\n/**\n * Variable: node\n * \n * The internal node representation of the root cell. Do not set directly\n * , this value is only exposed to assist with post-processing functionality\n */\nmxCompactTreeLayout.prototype.node = null;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxCompactTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxCompactTreeLayout.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n * Overrides <root> if specified.\n */\nmxCompactTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.getModel();\n\n\tif (root == null)\n\t{\n\t\t// Takes the parent as the root if it has outgoing edges\n\t\tif (this.graph.getEdges(parent, model.getParent(parent),\n\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t{\n\t\t\tthis.root = parent;\n\t\t}\n\t\t\n\t\t// Tries to find a suitable root in the parent's\n\t\t// children\n\t\telse\n\t\t{\n\t\t\tvar roots = this.graph.findTreeRoots(parent, true, this.invert);\n\t\t\t\n\t\t\tif (roots.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < roots.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (!this.isVertexIgnored(roots[i]) &&\n\t\t\t\t\t\tthis.graph.getEdges(roots[i], null,\n\t\t\t\t\t\t\tthis.invert, !this.invert, false).length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.root = roots[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.root = root;\n\t}\n\t\n\tif (this.root != null)\n\t{\n\t\tif (this.resizeParent)\n\t\t{\n\t\t\tthis.parentsChanged = new Object();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.parentsChanged = null;\n\t\t}\n\n\t\t//  Maintaining parent location\n\t\tthis.parentX = null;\n\t\tthis.parentY = null;\n\t\t\n\t\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tthis.parentX = geo.x;\n\t\t\t\tthis.parentY = geo.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tmodel.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tthis.visited = new Object();\n\t\t\tthis.node = this.dfs(this.root, parent);\n\t\t\t\n\t\t\tif (this.alignRanks)\n\t\t\t{\n\t\t\t\tthis.maxRankHeight = [];\n\t\t\t\tthis.findRankHeights(this.node, 0);\n\t\t\t\tthis.setCellHeights(this.node, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.node != null)\n\t\t\t{\n\t\t\t\tthis.layout(this.node);\n\t\t\t\tvar x0 = this.graph.gridSize;\n\t\t\t\tvar y0 = x0;\n\t\t\t\t\n\t\t\t\tif (!this.moveTree)\n\t\t\t\t{\n\t\t\t\t\tvar g = this.getVertexBounds(this.root);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx0 = g.x;\n\t\t\t\t\t\ty0 = g.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bounds = null;\n\t\t\t\t\n\t\t\t\tif (this.isHorizontal())\n\t\t\t\t{\n\t\t\t\t\tbounds = this.horizontalLayout(this.node, x0, y0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbounds = this.verticalLayout(this.node, null, x0, y0);\n\t\t\t\t}\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\tvar dy = 0;\n\n\t\t\t\t\tif (bounds.x < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = Math.abs(x0 - bounds.x);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (bounds.y < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = Math.abs(y0 - bounds.y);\t\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.moveNode(this.node, dx, dy);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.resizeParent)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.adjustParents();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.edgeRouting)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Iterate through all edges setting their positions\n\t\t\t\t\t\tthis.localEdgeProcessing(this.node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Maintaining parent location\n\t\t\t\tif (this.parentX != null && this.parentY != null)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\tgeo.x = this.parentX;\n\t\t\t\t\t\tgeo.y = this.parentY;\n\t\t\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: moveNode\n * \n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.moveNode = function(node, dx, dy)\n{\n\tnode.x += dx;\n\tnode.y += dy;\n\tthis.apply(node);\n\t\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.moveNode(child, dx, dy);\n\t\tchild = child.next;\n\t}\n};\n\n\n/**\n * Function: sortOutgoingEdges\n * \n * Called if <sortEdges> is true to sort the array of outgoing edges in place.\n */\nmxCompactTreeLayout.prototype.sortOutgoingEdges = function(source, edges)\n{\n\tvar lookup = new mxDictionary();\n\t\n\tedges.sort(function(e1, e2)\n\t{\n\t\tvar end1 = e1.getTerminal(e1.getTerminal(false) == source);\n\t\tvar p1 = lookup.get(end1);\n\t\t\n\t\tif (p1 == null)\n\t\t{\n\t\t\tp1 = mxCellPath.create(end1).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end1, p1);\n\t\t}\n\n\t\tvar end2 = e2.getTerminal(e2.getTerminal(false) == source);\n\t\tvar p2 = lookup.get(end2);\n\t\t\n\t\tif (p2 == null)\n\t\t{\n\t\t\tp2 = mxCellPath.create(end2).split(mxCellPath.PATH_SEPARATOR);\n\t\t\tlookup.put(end2, p2);\n\t\t}\n\n\t\treturn mxCellPath.compare(p1, p2);\n\t});\n};\n\n/**\n * Function: findRankHeights\n * \n * Stores the maximum height (relative to the layout\n * direction) of cells in each rank\n */\nmxCompactTreeLayout.prototype.findRankHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] == null || this.maxRankHeight[rank] < node.height)\n\t{\n\t\tthis.maxRankHeight[rank] = node.height;\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.findRankHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: setCellHeights\n * \n * Set the cells heights (relative to the layout\n * direction) when the tops of each rank are to be aligned\n */\nmxCompactTreeLayout.prototype.setCellHeights = function(node, rank)\n{\n\tif (this.maxRankHeight[rank] != null && this.maxRankHeight[rank] > node.height)\n\t{\n\t\tnode.height = this.maxRankHeight[rank];\n\t}\n\n\tvar child = node.child;\n\t\n\twhile (child != null)\n\t{\n\t\tthis.setCellHeights(child, rank + 1);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: dfs\n * \n * Does a depth first search starting at the specified cell.\n * Makes sure the specified parent is never left by the\n * algorithm.\n */\nmxCompactTreeLayout.prototype.dfs = function(cell, parent)\n{\n\tvar id = mxCellPath.create(cell);\n\tvar node = null;\n\t\n\tif (cell != null && this.visited[id] == null && !this.isVertexIgnored(cell))\n\t{\n\t\tthis.visited[id] = cell;\n\t\tnode = this.createNode(cell);\n\n\t\tvar model = this.graph.getModel();\n\t\tvar prev = null;\n\t\tvar out = this.graph.getEdges(cell, parent, this.invert, !this.invert, false, true);\n\t\tvar view = this.graph.getView();\n\t\t\n\t\tif (this.sortEdges)\n\t\t{\n\t\t\tthis.sortOutgoingEdges(cell, out);\n\t\t}\n\n\t\tfor (var i = 0; i < out.length; i++)\n\t\t{\n\t\t\tvar edge = out[i];\n\t\t\t\n\t\t\tif (!this.isEdgeIgnored(edge))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.edgeRouting)\n\t\t\t\t{\n\t\t\t\t\tthis.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\tthis.setEdgePoints(edge, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if terminal in same swimlane\n\t\t\t\tvar state = view.getState(edge);\n\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(this.invert) : view.getVisibleTerminal(edge, this.invert);\n\t\t\t\tvar tmp = this.dfs(target, parent);\n\t\t\t\t\n\t\t\t\tif (tmp != null && model.getGeometry(target) != null)\n\t\t\t\t{\n\t\t\t\t\tif (prev == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.child = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tprev.next = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tprev = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: layout\n * \n * Starts the actual compact tree layout algorithm\n * at the given node.\n */\nmxCompactTreeLayout.prototype.layout = function(node)\n{\n\tif (node != null)\n\t{\n\t\tvar child = node.child;\n\t\t\n\t\twhile (child != null)\n\t\t{\n\t\t\tthis.layout(child);\n\t\t\tchild = child.next;\n\t\t}\n\t\t\n\t\tif (node.child != null)\n\t\t{\n\t\t\tthis.attachParent(node, this.join(node));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.layoutLeaf(node);\n\t\t}\n\t}\n};\n\n/**\n * Function: horizontalLayout\n */\nmxCompactTreeLayout.prototype.horizontalLayout = function(node, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetX;\n\tnode.y += y0 + node.offsetY;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.horizontalLayout(child, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.y + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.horizontalLayout(s, node.x + child.offsetX, siblingOffset, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\t\n/**\n * Function: verticalLayout\n */\nmxCompactTreeLayout.prototype.verticalLayout = function(node, parent, x0, y0, bounds)\n{\n\tnode.x += x0 + node.offsetY;\n\tnode.y += y0 + node.offsetX;\n\tbounds = this.apply(node, bounds);\n\tvar child = node.child;\n\t\n\tif (child != null)\n\t{\n\t\tbounds = this.verticalLayout(child, node, node.x, node.y, bounds);\n\t\tvar siblingOffset = node.x + child.offsetY;\n\t\tvar s = child.next;\n\t\t\n\t\twhile (s != null)\n\t\t{\n\t\t\tbounds = this.verticalLayout(s, node, siblingOffset, node.y + child.offsetX, bounds);\n\t\t\tsiblingOffset += s.offsetY;\n\t\t\ts = s.next;\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: attachParent\n */\nmxCompactTreeLayout.prototype.attachParent = function(node, height)\n{\n\tvar x = this.nodeDistance + this.levelDistance;\n\tvar y2 = (height - node.width) / 2 - this.nodeDistance;\n\tvar y1 = y2 + node.width + 2 * this.nodeDistance - height;\n\t\n\tnode.child.offsetX = x + node.height;\n\tnode.child.offsetY = y1;\n\t\n\tnode.contour.upperHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y1, node.contour.upperHead));\n\tnode.contour.lowerHead = this.createLine(node.height, 0,\n\t\tthis.createLine(x, y2, node.contour.lowerHead));\n};\n\n/**\n * Function: layoutLeaf\n */\nmxCompactTreeLayout.prototype.layoutLeaf = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tnode.contour.upperTail = this.createLine(\n\t\tnode.height + dist, 0);\n\tnode.contour.upperHead = node.contour.upperTail;\n\tnode.contour.lowerTail = this.createLine(\n\t\t0, -node.width - dist);\n\tnode.contour.lowerHead = this.createLine(\n\t\tnode.height + dist, 0, node.contour.lowerTail);\n};\n\n/**\n * Function: join\n */\nmxCompactTreeLayout.prototype.join = function(node)\n{\n\tvar dist = 2 * this.nodeDistance;\n\t\n\tvar child = node.child;\n\tnode.contour = child.contour;\n\tvar h = child.width + dist;\n\tvar sum = h;\n\tchild = child.next;\n\t\n\twhile (child != null)\n\t{\n\t\tvar d = this.merge(node.contour, child.contour);\n\t\tchild.offsetY = d + h;\n\t\tchild.offsetX = 0;\n\t\th = child.width + dist;\n\t\tsum += d + h;\n\t\tchild = child.next;\n\t}\n\t\n\treturn sum;\n};\n\n/**\n * Function: merge\n */\nmxCompactTreeLayout.prototype.merge = function(p1, p2)\n{\n\tvar x = 0;\n\tvar y = 0;\n\tvar total = 0;\n\t\n\tvar upper = p1.lowerHead;\n\tvar lower = p2.upperHead;\n\t\n\twhile (lower != null && upper != null)\n\t{\n\t\tvar d = this.offset(x, y, lower.dx, lower.dy,\n\t\t\tupper.dx, upper.dy);\n\t\ty += d;\n\t\ttotal += d;\n\t\t\n\t\tif (x + lower.dx <= upper.dx)\n\t\t{\n\t\t\tx += lower.dx;\n\t\t\ty += lower.dy;\n\t\t\tlower = lower.next;\n\t\t}\n\t\telse\n\t\t{\t\t\t\t\n\t\t\tx -= upper.dx;\n\t\t\ty -= upper.dy;\n\t\t\tupper = upper.next;\n\t\t}\n\t}\n\t\n\tif (lower != null)\n\t{\n\t\tvar b = this.bridge(p1.upperTail, 0, 0, lower, x, y);\n\t\tp1.upperTail = (b.next != null) ? p2.upperTail : b;\n\t\tp1.lowerTail = p2.lowerTail;\n\t}\n\telse\n\t{\n\t\tvar b = this.bridge(p2.lowerTail, x, y, upper, 0, 0);\n\t\t\n\t\tif (b.next == null)\n\t\t{\n\t\t\tp1.lowerTail = b;\n\t\t}\n\t}\n\t\n\tp1.lowerHead = p2.lowerHead;\n\t\n\treturn total;\n};\n\n/**\n * Function: offset\n */\nmxCompactTreeLayout.prototype.offset = function(p1, p2, a1, a2, b1, b2)\n{\n\tvar d = 0;\n\t\n\tif (b1 <= p1 || p1 + a1 <= 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar t = b1 * a2 - a1 * b2;\n\t\n\tif (t > 0)\n\t{\n\t\tif (p1 < 0)\n\t\t{\n\t\t\tvar s = p1 * a2;\n\t\t\td = s / a1 - p2;\n\t\t}\n\t\telse if (p1 > 0)\n\t\t{\n\t\t\tvar s = p1 * b2;\n\t\t\td = s / b1 - p2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\td = -p2;\n\t\t}\n\t}\n\telse if (b1 < p1 + a1)\n\t{\n\t\tvar s = (b1 - p1) * a2;\n\t\td = b2 - (p2 + s / a1);\n\t}\n\telse if (b1 > p1 + a1)\n\t{\n\t\tvar s = (a1 + p1) * b2;\n\t\td = s / b1 - (p2 + a2);\n\t}\n\telse\n\t{\n\t\td = b2 - (p2 + a2);\n\t}\n\n\tif (d > 0)\n\t{\n\t\treturn d;\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n/**\n * Function: bridge\n */\nmxCompactTreeLayout.prototype.bridge = function(line1, x1, y1, line2, x2, y2)\n{\n\tvar dx = x2 + line2.dx - x1;\n\tvar dy = 0;\n\tvar s = 0;\n\t\n\tif (line2.dx == 0)\n\t{\n\t\tdy = line2.dy;\n\t}\n\telse\n\t{\n\t\ts = dx * line2.dy;\n\t\tdy = s / line2.dx;\n\t}\n\t\n\tvar r = this.createLine(dx, dy, line2.next);\n\tline1.next = this.createLine(0, y2 + line2.dy - dy - y1, r);\n\t\n\treturn r;\n};\n\n/**\n * Function: createNode\n */\nmxCompactTreeLayout.prototype.createNode = function(cell)\n{\n\tvar node = new Object();\n\tnode.cell = cell;\n\tnode.x = 0;\n\tnode.y = 0;\n\tnode.width = 0;\n\tnode.height = 0;\n\t\n\tvar geo = this.getVertexBounds(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (this.isHorizontal())\n\t\t{\n\t\t\tnode.width = geo.height;\n\t\t\tnode.height = geo.width;\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnode.width = geo.width;\n\t\t\tnode.height = geo.height;\n\t\t}\n\t}\n\t\n\tnode.offsetX = 0;\n\tnode.offsetY = 0;\n\tnode.contour = new Object();\n\t\n\treturn node;\n};\n\n/**\n * Function: apply\n */\nmxCompactTreeLayout.prototype.apply = function(node, bounds)\n{\n\tvar model = this.graph.getModel();\n\tvar cell = node.cell;\n\tvar g = model.getGeometry(cell);\n\n\tif (cell != null && g != null)\n\t{\n\t\tif (this.isVertexMovable(cell))\n\t\t{\n\t\t\tg = this.setVertexLocation(cell, node.x, node.y);\n\t\t\t\n\t\t\tif (this.resizeParent)\n\t\t\t{\n\t\t\t\tvar parent = model.getParent(cell);\n\t\t\t\tvar id = mxCellPath.create(parent);\n\t\t\t\t\n\t\t\t\t// Implements set semantic\n\t\t\t\tif (this.parentsChanged[id] == null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentsChanged[id] = parent;\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (bounds == null)\n\t\t{\n\t\t\tbounds = new mxRectangle(g.x, g.y, g.width, g.height);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds = new mxRectangle(Math.min(bounds.x, g.x),\n\t\t\t\tMath.min(bounds.y, g.y),\n\t\t\t\tMath.max(bounds.x + bounds.width, g.x + g.width),\n\t\t\t\tMath.max(bounds.y + bounds.height, g.y + g.height));\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: createLine\n */\nmxCompactTreeLayout.prototype.createLine = function(dx, dy, next)\n{\n\tvar line = new Object();\n\tline.dx = dx;\n\tline.dy = dy;\n\tline.next = next;\n\t\n\treturn line;\n};\n\n/**\n * Function: adjustParents\n * \n * Adjust parent cells whose child geometries have changed. The default \n * implementation adjusts the group to just fit around the children with \n * a padding.\n */\nmxCompactTreeLayout.prototype.adjustParents = function()\n{\n\tvar tmp = [];\n\t\n\tfor (var id in this.parentsChanged)\n\t{\n\t\ttmp.push(this.parentsChanged[id]);\n\t}\n\t\n\tthis.arrangeGroups(mxUtils.sortCells(tmp, true), this.groupPadding, this.groupPaddingTop,\n\t\tthis.groupPaddingRight, this.groupPaddingBottom, this.groupPaddingLeft);\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Moves the specified node and all of its children by the given amount.\n */\nmxCompactTreeLayout.prototype.localEdgeProcessing = function(node)\n{\n\tthis.processNodeOutgoing(node);\n\tvar child = node.child;\n\n\twhile (child != null)\n\t{\n\t\tthis.localEdgeProcessing(child);\n\t\tchild = child.next;\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n *\n * Separates the x position of edges as they connect to vertices\n */\nmxCompactTreeLayout.prototype.processNodeOutgoing = function(node)\n{\n\tvar child = node.child;\n\tvar parentCell = node.cell;\n\n\tvar childCount = 0;\n\tvar sortedCells = [];\n\n\twhile (child != null)\n\t{\n\t\tchildCount++;\n\n\t\tvar sortingCriterion = child.x;\n\n\t\tif (this.horizontal)\n\t\t{\n\t\t\tsortingCriterion = child.y;\n\t\t}\n\n\t\tsortedCells.push(new WeightedCellSorter(child, sortingCriterion));\n\t\tchild = child.next;\n\t}\n\n\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\tvar availableWidth = node.width;\n\n\tvar requiredWidth = (childCount + 1) * this.prefHozEdgeSep;\n\n\t// Add a buffer on the edges of the vertex if the edge count allows\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tavailableWidth -= 2 * this.prefHozEdgeSep;\n\t}\n\n\tvar edgeSpacing = availableWidth / childCount;\n\n\tvar currentXOffset = edgeSpacing / 2.0;\n\n\tif (availableWidth > requiredWidth + (2 * this.prefHozEdgeSep))\n\t{\n\t\tcurrentXOffset += this.prefHozEdgeSep;\n\t}\n\n\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\tvar maxYOffset = 0;\n\n\tvar parentBounds = this.getVertexBounds(parentCell);\n\tchild = node.child;\n\n\tfor (var j = 0; j < sortedCells.length; j++)\n\t{\n\t\tvar childCell = sortedCells[j].cell.cell;\n\t\tvar childBounds = this.getVertexBounds(childCell);\n\n\t\tvar edges = this.graph.getEdgesBetween(parentCell,\n\t\t\t\tchildCell, false);\n\t\t\n\t\tvar newPoints = [];\n\t\tvar x = 0;\n\t\tvar y = 0;\n\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.horizontal)\n\t\t\t{\n\t\t\t\t// Use opposite co-ords, calculation was done for \n\t\t\t\t// \n\t\t\t\tx = parentBounds.x + parentBounds.width;\n\t\t\t\ty = parentBounds.y + currentXOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = parentBounds.x + parentBounds.width\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = childBounds.y + childBounds.height / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = parentBounds.x + currentXOffset;\n\t\t\t\ty = parentBounds.y + parentBounds.height;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\ty = parentBounds.y + parentBounds.height\n\t\t\t\t\t\t+ currentYOffset;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tx = childBounds.x + childBounds.width / 2.0;\n\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\tthis.setEdgePoints(edges[i], newPoints);\n\t\t\t}\n\t\t}\n\n\t\tif (j < childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t}\n\t\telse if (j > childCount / 2)\n\t\t{\n\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t}\n\t\t// Ignore the case if equals, this means the second of 2\n\t\t// jettys with the same y (even number of edges)\n\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2] = currentX;\n\t\tcurrentXOffset += edgeSpacing;\n\t\t//\t\t\t\t\t\t\t\tpos[k * 2 + 1] = currentYOffset;\n\n\t\tmaxYOffset = Math.max(maxYOffset, currentYOffset);\n\t}\n};\n__mxOutput.mxCompactTreeLayout = typeof mxCompactTreeLayout !== 'undefined' ? mxCompactTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxRadialTreeLayout\n * \n * Extends <mxGraphLayout> to implement a radial tree algorithm. This\n * layout is suitable for graphs that have no cycles (trees). Vertices that are\n * not connected to the tree will be ignored by this layout.\n * \n * Example:\n * \n * (code)\n * var layout = new mxRadialTreeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxRadialTreeLayout\n * \n * Constructs a new radial tree layout for the specified graph\n */\nfunction mxRadialTreeLayout(graph)\n{\n\tmxCompactTreeLayout.call(this, graph , false);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxUtils.extend(mxRadialTreeLayout, mxCompactTreeLayout);\n\n/**\n * Variable: angleOffset\n *\n * The initial offset to compute the angle position.\n */\nmxRadialTreeLayout.prototype.angleOffset = 0.5;\n\n/**\n * Variable: rootx\n *\n * The X co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rootx = 0;\n\n/**\n * Variable: rooty\n *\n * The Y co-ordinate of the root cell\n */\nmxRadialTreeLayout.prototype.rooty = 0;\n\n/**\n * Variable: levelDistance\n *\n * Holds the levelDistance. Default is 120.\n */\nmxRadialTreeLayout.prototype.levelDistance = 120;\n\n/**\n * Variable: nodeDistance\n *\n * Holds the nodeDistance. Default is 10.\n */\nmxRadialTreeLayout.prototype.nodeDistance = 10;\n\n/**\n * Variable: autoRadius\n * \n * Specifies if the radios should be computed automatically\n */\nmxRadialTreeLayout.prototype.autoRadius = false;\n\n/**\n * Variable: sortEdges\n * \n * Specifies if edges should be sorted according to the order of their\n * opposite terminal cell in the model.\n */\nmxRadialTreeLayout.prototype.sortEdges = false;\n\n/**\n * Variable: rowMinX\n * \n * Array of leftmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMinX = [];\n\n/**\n * Variable: rowMaxX\n * \n * Array of rightmost x coordinate of each row\n */\nmxRadialTreeLayout.prototype.rowMaxX = [];\n\n/**\n * Variable: rowMinCenX\n * \n * Array of x coordinate of leftmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMinCenX = [];\n\n/**\n * Variable: rowMaxCenX\n * \n * Array of x coordinate of rightmost vertex of each row\n */\nmxRadialTreeLayout.prototype.rowMaxCenX = [];\n\n/**\n * Variable: rowRadi\n * \n * Array of y deltas of each row behind root vertex, also the radius in the tree\n */\nmxRadialTreeLayout.prototype.rowRadi = [];\n\n/**\n * Variable: row\n * \n * Array of vertices on each row\n */\nmxRadialTreeLayout.prototype.row = [];\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxRadialTreeLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n * \n * If the parent has any connected edges, then it is used as the root of\n * the tree. Else, <mxGraph.findTreeRoots> will be used to find a suitable\n * root node within the set of children of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be laid out.\n * root - Optional <mxCell> that will be used as the root of the tree.\n */\nmxRadialTreeLayout.prototype.execute = function(parent, root)\n{\n\tthis.parent = parent;\n\t\n\tthis.useBoundingBox = false;\n\tthis.edgeRouting = false;\n\t//this.horizontal = false;\n\n\tmxCompactTreeLayout.prototype.execute.apply(this, arguments);\n\t\n\tvar bounds = null;\n\tvar rootBounds = this.getVertexBounds(this.root);\n\tthis.centerX = rootBounds.x + rootBounds.width / 2;\n\tthis.centerY = rootBounds.y + rootBounds.height / 2;\n\n\t// Calculate the bounds of the involved vertices directly from the values set in the compact tree\n\tfor (var vertex in this.visited)\n\t{\n\t\tvar vertexBounds = this.getVertexBounds(this.visited[vertex]);\n\t\tbounds = (bounds != null) ? bounds : vertexBounds.clone();\n\t\tbounds.add(vertexBounds);\n\t}\n\t\n\tthis.calcRowDims([this.node], 0);\n\t\n\tvar maxLeftGrad = 0;\n\tvar maxRightGrad = 0;\n\n\t// Find the steepest left and right gradients\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar leftGrad = (this.centerX - this.rowMinX[i] - this.nodeDistance) / this.rowRadi[i];\n\t\tvar rightGrad = (this.rowMaxX[i] - this.centerX - this.nodeDistance) / this.rowRadi[i];\n\t\t\n\t\tmaxLeftGrad = Math.max (maxLeftGrad, leftGrad);\n\t\tmaxRightGrad = Math.max (maxRightGrad, rightGrad);\n\t}\n\t\n\t// Extend out row so they meet the maximum gradient and convert to polar co-ords\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tvar xLeftLimit = this.centerX - this.nodeDistance - maxLeftGrad * this.rowRadi[i];\n\t\tvar xRightLimit = this.centerX + this.nodeDistance + maxRightGrad * this.rowRadi[i];\n\t\tvar fullWidth = xRightLimit - xLeftLimit;\n\t\t\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tvar xProportion = (vertexBounds.x + vertexBounds.width / 2 - xLeftLimit) / (fullWidth);\n\t\t\tvar theta =  2 * Math.PI * xProportion;\n\t\t\tnode.theta = theta;\n\t\t}\n\t}\n\n\t// Post-process from outside inwards to try to align parents with children\n\tfor (var i = this.row.length - 2; i >= 0; i--)\n\t{\n\t\tvar row = this.row[i];\n\t\t\n\t\tfor (var j = 0; j < row.length; j++)\n\t\t{\n\t\t\tvar node = row[j];\n\t\t\tvar child = node.child;\n\t\t\tvar counter = 0;\n\t\t\tvar totalTheta = 0;\n\t\t\t\n\t\t\twhile (child != null)\n\t\t\t{\n\t\t\t\ttotalTheta += child.theta;\n\t\t\t\tcounter++;\n\t\t\t\tchild = child.next;\n\t\t\t}\n\t\t\t\n\t\t\tif (counter > 0)\n\t\t\t{\n\t\t\t\tvar averTheta = totalTheta / counter;\n\t\t\t\t\n\t\t\t\tif (averTheta > node.theta && j < row.length - 1)\n\t\t\t\t{\n\t\t\t\t\tvar nextTheta = row[j+1].theta;\n\t\t\t\t\tnode.theta = Math.min (averTheta, nextTheta - Math.PI/10);\n\t\t\t\t}\n\t\t\t\telse if (averTheta < node.theta && j > 0 )\n\t\t\t\t{\n\t\t\t\t\tvar lastTheta = row[j-1].theta;\n\t\t\t\t\tnode.theta = Math.max (averTheta, lastTheta + Math.PI/10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Set locations\n\tfor (var i = 0; i < this.row.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.row[i].length; j ++)\n\t\t{\n\t\t\tvar row = this.row[i];\n\t\t\tvar node = row[j];\n\t\t\tvar vertexBounds = this.getVertexBounds(node.cell);\n\t\t\tthis.setVertexLocation(node.cell,\n\t\t\t\t\t\t\t\t\tthis.centerX - vertexBounds.width / 2 + this.rowRadi[i] * Math.cos(node.theta),\n\t\t\t\t\t\t\t\t\tthis.centerY - vertexBounds.height / 2 + this.rowRadi[i] * Math.sin(node.theta));\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRowDims\n * \n * Recursive function to calculate the dimensions of each row\n * \n * Parameters:\n * \n * row - Array of internal nodes, the children of which are to be processed.\n * rowNum - Integer indicating which row is being processed.\n */\nmxRadialTreeLayout.prototype.calcRowDims = function(row, rowNum)\n{\n\tif (row == null || row.length == 0)\n\t{\n\t\treturn;\n\t}\n\n\t// Place root's children proportionally around the first level\n\tthis.rowMinX[rowNum] = this.centerX;\n\tthis.rowMaxX[rowNum] = this.centerX;\n\tthis.rowMinCenX[rowNum] = this.centerX;\n\tthis.rowMaxCenX[rowNum] = this.centerX;\n\tthis.row[rowNum] = [];\n\n\tvar rowHasChildren = false;\n\n\tfor (var i = 0; i < row.length; i++)\n\t{\n\t\tvar child = row[i] != null ? row[i].child : null;\n\n\t\twhile (child != null)\n\t\t{\n\t\t\tvar cell = child.cell;\n\t\t\tvar vertexBounds = this.getVertexBounds(cell);\n\t\t\t\n\t\t\tthis.rowMinX[rowNum] = Math.min(vertexBounds.x, this.rowMinX[rowNum]);\n\t\t\tthis.rowMaxX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width, this.rowMaxX[rowNum]);\n\t\t\tthis.rowMinCenX[rowNum] = Math.min(vertexBounds.x + vertexBounds.width / 2, this.rowMinCenX[rowNum]);\n\t\t\tthis.rowMaxCenX[rowNum] = Math.max(vertexBounds.x + vertexBounds.width / 2, this.rowMaxCenX[rowNum]);\n\t\t\tthis.rowRadi[rowNum] = vertexBounds.y - this.getVertexBounds(this.root).y;\n\t\n\t\t\tif (child.child != null)\n\t\t\t{\n\t\t\t\trowHasChildren = true;\n\t\t\t}\n\t\t\t\n\t\t\tthis.row[rowNum].push(child);\n\t\t\tchild = child.next;\n\t\t}\n\t}\n\t\n\tif (rowHasChildren)\n\t{\n\t\tthis.calcRowDims(this.row[rowNum], rowNum + 1);\n\t}\n};\n\n__mxOutput.mxRadialTreeLayout = typeof mxRadialTreeLayout !== 'undefined' ? mxRadialTreeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxFastOrganicLayout\n * \n * Extends <mxGraphLayout> to implement a fast organic layout algorithm.\n * The vertices need to be connected for this layout to work, vertices\n * with no connections are ignored.\n * \n * Example:\n * \n * (code)\n * var layout = new mxFastOrganicLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompactTreeLayout\n * \n * Constructs a new fast organic layout for the specified graph.\n */\nfunction mxFastOrganicLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxFastOrganicLayout.prototype = new mxGraphLayout();\nmxFastOrganicLayout.prototype.constructor = mxFastOrganicLayout;\n\n/**\n * Variable: useInputOrigin\n * \n * Specifies if the top left corner of the input cells should be the origin\n * of the layout result. Default is true.\n */\nmxFastOrganicLayout.prototype.useInputOrigin = true;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxFastOrganicLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxFastOrganicLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: forceConstant\n * \n * The force constant by which the attractive forces are divided and the\n * replusive forces are multiple by the square of. The value equates to the\n * average radius there is of free space around each node. Default is 50.\n */\nmxFastOrganicLayout.prototype.forceConstant = 50;\n\n/**\n * Variable: forceConstantSquared\n * \n * Cache of <forceConstant>^2 for performance.\n */\nmxFastOrganicLayout.prototype.forceConstantSquared = 0;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.minDistanceLimit = 2;\n\n/**\n * Variable: minDistanceLimit\n * \n * Minimal distance limit. Default is 2. Prevents of\n * dividing by zero.\n */\nmxFastOrganicLayout.prototype.maxDistanceLimit = 500;\n\n/**\n * Variable: minDistanceLimitSquared\n * \n * Cached version of <minDistanceLimit> squared.\n */\nmxFastOrganicLayout.prototype.minDistanceLimitSquared = 4;\n\n/**\n * Variable: initialTemp\n * \n * Start value of temperature. Default is 200.\n */\nmxFastOrganicLayout.prototype.initialTemp = 200;\n\n/**\n * Variable: temperature\n * \n * Temperature to limit displacement at later stages of layout.\n */\nmxFastOrganicLayout.prototype.temperature = 0;\n\n/**\n * Variable: maxIterations\n * \n * Total number of iterations to run the layout though.\n */\nmxFastOrganicLayout.prototype.maxIterations = 0;\n\n/**\n * Variable: iteration\n * \n * Current iteration count.\n */\nmxFastOrganicLayout.prototype.iteration = 0;\n\n/**\n * Variable: vertexArray\n * \n * An array of all vertices to be laid out.\n */\nmxFastOrganicLayout.prototype.vertexArray;\n\n/**\n * Variable: dispX\n * \n * An array of locally stored X co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispX;\n\n/**\n * Variable: dispY\n * \n * An array of locally stored Y co-ordinate displacements for the vertices.\n */\nmxFastOrganicLayout.prototype.dispY;\n\n/**\n * Variable: cellLocation\n * \n * An array of locally stored co-ordinate positions for the vertices.\n */\nmxFastOrganicLayout.prototype.cellLocation;\n\n/**\n * Variable: radius\n * \n * The approximate radius of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radius;\n\n/**\n * Variable: radiusSquared\n * \n * The approximate radius squared of each cell, nodes only.\n */\nmxFastOrganicLayout.prototype.radiusSquared;\n\n/**\n * Variable: isMoveable\n * \n * Array of booleans representing the movable states of the vertices.\n */\nmxFastOrganicLayout.prototype.isMoveable;\n\n/**\n * Variable: neighbours\n * \n * Local copy of cell neighbours.\n */\nmxFastOrganicLayout.prototype.neighbours;\n\n/**\n * Variable: indices\n * \n * Hashtable from cells to local indices.\n */\nmxFastOrganicLayout.prototype.indices;\n\n/**\n * Variable: allowedToRun\n * \n * Boolean flag that specifies if the layout is allowed to run. If this is\n * set to false, then the layout exits in the following iteration.\n */\nmxFastOrganicLayout.prototype.allowedToRun = true;\n\n/**\n * Function: isVertexIgnored\n * \n * Returns a boolean indicating if the given <mxCell> should be ignored as a\n * vertex. This returns true if the cell has no connections.\n * \n * Parameters:\n * \n * vertex - <mxCell> whose ignored state should be returned.\n */\nmxFastOrganicLayout.prototype.isVertexIgnored = function(vertex)\n{\n\treturn mxGraphLayout.prototype.isVertexIgnored.apply(this, arguments) ||\n\t\tthis.graph.getConnections(vertex).length == 0;\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>. This operates on all children of the\n * given parent where <isVertexIgnored> returns false.\n */\nmxFastOrganicLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tthis.vertexArray = [];\n\tvar cells = this.graph.getChildVertices(parent);\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.isVertexIgnored(cells[i]))\n\t\t{\n\t\t\tthis.vertexArray.push(cells[i]);\n\t\t}\n\t}\n\t\n\tvar initialBounds = (this.useInputOrigin) ?\n\t\t\tthis.graph.getBoundingBoxFromGeometry(this.vertexArray) :\n\t\t\t\tnull;\n\tvar n = this.vertexArray.length;\n\n\tthis.indices = [];\n\tthis.dispX = [];\n\tthis.dispY = [];\n\tthis.cellLocation = [];\n\tthis.isMoveable = [];\n\tthis.neighbours = [];\n\tthis.radius = [];\n\tthis.radiusSquared = [];\n\n\tif (this.forceConstant < 0.001)\n\t{\n\t\tthis.forceConstant = 0.001;\n\t}\n\n\tthis.forceConstantSquared = this.forceConstant * this.forceConstant;\n\n\t// Create a map of vertices first. This is required for the array of\n\t// arrays called neighbours which holds, for each vertex, a list of\n\t// ints which represents the neighbours cells to that vertex as\n\t// the indices into vertexArray\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tvar vertex = this.vertexArray[i];\n\t\tthis.cellLocation[i] = [];\n\t\t\n\t\t// Set up the mapping from array indices to cells\n\t\tvar id = mxObjectIdentity.get(vertex);\n\t\tthis.indices[id] = i;\n\t\tvar bounds = this.getVertexBounds(vertex);\n\n\t\t// Set the X,Y value of the internal version of the cell to\n\t\t// the center point of the vertex for better positioning\n\t\tvar width = bounds.width;\n\t\tvar height = bounds.height;\n\t\t\n\t\t// Randomize (0, 0) locations\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\t\n\t\tthis.cellLocation[i][0] = x + width / 2.0;\n\t\tthis.cellLocation[i][1] = y + height / 2.0;\n\t\tthis.radius[i] = Math.min(width, height);\n\t\tthis.radiusSquared[i] = this.radius[i] * this.radius[i];\n\t}\n\n\t// Moves cell location back to top-left from center locations used in\n\t// algorithm, resetting the edge points is part of the transaction\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < n; i++)\n\t\t{\n\t\t\tthis.dispX[i] = 0;\n\t\t\tthis.dispY[i] = 0;\n\t\t\tthis.isMoveable[i] = this.isVertexMovable(this.vertexArray[i]);\n\n\t\t\t// Get lists of neighbours to all vertices, translate the cells\n\t\t\t// obtained in indices into vertexArray and store as an array\n\t\t\t// against the orginial cell index\n\t\t\tvar edges = this.graph.getConnections(this.vertexArray[i], parent);\n\t\t\tvar cells = this.graph.getOpposites(edges, this.vertexArray[i]);\n\t\t\tthis.neighbours[i] = [];\n\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(edges[j]);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \tthis.setEdgeStyleEnabled(edges[j], false);\n\t\t\t    }\n\n\t\t\t\t// Looks the cell up in the indices dictionary\n\t\t\t\tvar id = mxObjectIdentity.get(cells[j]);\n\t\t\t\tvar index = this.indices[id];\n\n\t\t\t\t// Check the connected cell in part of the vertex list to be\n\t\t\t\t// acted on by this layout\n\t\t\t\tif (index != null)\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = index;\n\t\t\t\t}\n\n\t\t\t\t// Else if index of the other cell doesn't correspond to\n\t\t\t\t// any cell listed to be acted upon in this layout. Set\n\t\t\t\t// the index to the value of this vertex (a dummy self-loop)\n\t\t\t\t// so the attraction force of the edge is not calculated\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.neighbours[i][j] = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.temperature = this.initialTemp;\n\n\t\t// If max number of iterations has not been set, guess it\n\t\tif (this.maxIterations == 0)\n\t\t{\n\t\t\tthis.maxIterations = 20 * Math.sqrt(n);\n\t\t}\n\t\t\n\t\t// Main iteration loop\n\t\tfor (this.iteration = 0; this.iteration < this.maxIterations; this.iteration++)\n\t\t{\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\t// Calculate repulsive forces on all vertices\n\t\t\tthis.calcRepulsion();\n\n\t\t\t// Calculate attractive forces through edges\n\t\t\tthis.calcAttraction();\n\n\t\t\tthis.calcPositions();\n\t\t\tthis.reduceTemperature();\n\t\t}\n\n\t\tvar minx = null;\n\t\tvar miny = null;\n\t\t\n\t\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t\t{\n\t\t\tvar vertex = this.vertexArray[i];\n\t\t\t\n\t\t\tif (this.isVertexMovable(vertex))\n\t\t\t{\n\t\t\t\tvar bounds = this.getVertexBounds(vertex);\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tthis.cellLocation[i][0] -= bounds.width / 2.0;\n\t\t\t\t\tthis.cellLocation[i][1] -= bounds.height / 2.0;\n\t\t\t\t\t\n\t\t\t\t\tvar x = this.graph.snap(Math.round(this.cellLocation[i][0]));\n\t\t\t\t\tvar y = this.graph.snap(Math.round(this.cellLocation[i][1]));\n\t\t\t\t\t\n\t\t\t\t\tthis.setVertexLocation(vertex, x, y);\n\t\t\t\t\t\n\t\t\t\t\tif (minx == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminx = Math.min(minx, x);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (miny == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = y;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tminy = Math.min(miny, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Modifies the cloned geometries in-place. Not needed\n\t\t// to clone the geometries again as we're in the same\n\t\t// undoable change.\n\t\tvar dx = -(minx || 0) + 1;\n\t\tvar dy = -(miny || 0) + 1;\n\t\t\n\t\tif (initialBounds != null)\n\t\t{\n\t\t\tdx += initialBounds.x;\n\t\t\tdy += initialBounds.y;\n\t\t}\n\t\t\n\t\tthis.graph.moveCells(this.vertexArray, dx, dy);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: calcPositions\n * \n * Takes the displacements calculated for each cell and applies them to the\n * local cache of cell positions. Limits the displacement to the current\n * temperature.\n */\nmxFastOrganicLayout.prototype.calcPositions = function()\n{\n\tfor (var index = 0; index < this.vertexArray.length; index++)\n\t{\n\t\tif (this.isMoveable[index])\n\t\t{\n\t\t\t// Get the distance of displacement for this node for this\n\t\t\t// iteration\n\t\t\tvar deltaLength = Math.sqrt(this.dispX[index] * this.dispX[index] +\n\t\t\t\tthis.dispY[index] * this.dispY[index]);\n\n\t\t\tif (deltaLength < 0.001)\n\t\t\t{\n\t\t\t\tdeltaLength = 0.001;\n\t\t\t}\n\n\t\t\t// Scale down by the current temperature if less than the\n\t\t\t// displacement distance\n\t\t\tvar newXDisp = this.dispX[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\tvar newYDisp = this.dispY[index] / deltaLength\n\t\t\t\t* Math.min(deltaLength, this.temperature);\n\n\t\t\t// reset displacements\n\t\t\tthis.dispX[index] = 0;\n\t\t\tthis.dispY[index] = 0;\n\n\t\t\t// Update the cached cell locations\n\t\t\tthis.cellLocation[index][0] += newXDisp;\n\t\t\tthis.cellLocation[index][1] += newYDisp;\n\t\t}\n\t}\n};\n\n/**\n * Function: calcAttraction\n * \n * Calculates the attractive forces between all laid out nodes linked by\n * edges\n */\nmxFastOrganicLayout.prototype.calcAttraction = function()\n{\n\t// Check the neighbours of each vertex and calculate the attractive\n\t// force of the edge connecting them\n\tfor (var i = 0; i < this.vertexArray.length; i++)\n\t{\n\t\tfor (var k = 0; k < this.neighbours[i].length; k++)\n\t\t{\n\t\t\t// Get the index of the othe cell in the vertex array\n\t\t\tvar j = this.neighbours[i][k];\n\t\t\t\n\t\t\t// Do not proceed self-loops\n\t\t\tif (i != j &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\t// The distance between the nodes\n\t\t\t\tvar deltaLengthSquared = xDelta * xDelta + yDelta\n\t\t\t\t\t\t* yDelta - this.radiusSquared[i] - this.radiusSquared[j];\n\n\t\t\t\tif (deltaLengthSquared < this.minDistanceLimitSquared)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthSquared = this.minDistanceLimitSquared;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar deltaLength = Math.sqrt(deltaLengthSquared);\n\t\t\t\tvar force = (deltaLengthSquared) / this.forceConstant;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] -= displacementX;\n\t\t\t\tthis.dispY[i] -= displacementY;\n\t\t\t\t\n\t\t\t\tthis.dispX[j] += displacementX;\n\t\t\t\tthis.dispY[j] += displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: calcRepulsion\n * \n * Calculates the repulsive forces between all laid out nodes\n */\nmxFastOrganicLayout.prototype.calcRepulsion = function()\n{\n\tvar vertexCount = this.vertexArray.length;\n\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tfor (var j = i; j < vertexCount; j++)\n\t\t{\n\t\t\t// Exits if the layout is no longer allowed to run\n\t\t\tif (!this.allowedToRun)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (j != i &&\n\t\t\t\tthis.isMoveable[i] &&\n\t\t\t\tthis.isMoveable[j])\n\t\t\t{\n\t\t\t\tvar xDelta = this.cellLocation[i][0] - this.cellLocation[j][0];\n\t\t\t\tvar yDelta = this.cellLocation[i][1] - this.cellLocation[j][1];\n\n\t\t\t\tif (xDelta == 0)\n\t\t\t\t{\n\t\t\t\t\txDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (yDelta == 0)\n\t\t\t\t{\n\t\t\t\t\tyDelta = 0.01 + Math.random();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Distance between nodes\n\t\t\t\tvar deltaLength = Math.sqrt((xDelta * xDelta)\n\t\t\t\t\t\t+ (yDelta * yDelta));\n\t\t\t\tvar deltaLengthWithRadius = deltaLength - this.radius[i]\n\t\t\t\t\t\t- this.radius[j];\n\n\t\t\t\tif (deltaLengthWithRadius > this.maxDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\t// Ignore vertices too far apart\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (deltaLengthWithRadius < this.minDistanceLimit)\n\t\t\t\t{\n\t\t\t\t\tdeltaLengthWithRadius = this.minDistanceLimit;\n\t\t\t\t}\n\n\t\t\t\tvar force = this.forceConstantSquared / deltaLengthWithRadius;\n\n\t\t\t\tvar displacementX = (xDelta / deltaLength) * force;\n\t\t\t\tvar displacementY = (yDelta / deltaLength) * force;\n\t\t\t\t\n\t\t\t\tthis.dispX[i] += displacementX;\n\t\t\t\tthis.dispY[i] += displacementY;\n\n\t\t\t\tthis.dispX[j] -= displacementX;\n\t\t\t\tthis.dispY[j] -= displacementY;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reduceTemperature\n * \n * Reduces the temperature of the layout from an initial setting in a linear\n * fashion to zero.\n */\nmxFastOrganicLayout.prototype.reduceTemperature = function()\n{\n\tthis.temperature = this.initialTemp * (1.0 - this.iteration / this.maxIterations);\n};\n\n__mxOutput.mxFastOrganicLayout = typeof mxFastOrganicLayout !== 'undefined' ? mxFastOrganicLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCircleLayout\n * \n * Extends <mxGraphLayout> to implement a circluar layout for a given radius.\n * The vertices do not need to be connected for this layout to work and all\n * connections between vertices are not taken into account.\n * \n * Example:\n * \n * (code)\n * var layout = new mxCircleLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCircleLayout\n *\n * Constructs a new circular layout for the specified radius.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n * radius - Optional radius as an int. Default is 100.\n */\nfunction mxCircleLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.radius = (radius != null) ? radius : 100;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCircleLayout.prototype = new mxGraphLayout();\nmxCircleLayout.prototype.constructor = mxCircleLayout;\n\n/**\n * Variable: radius\n * \n * Integer specifying the size of the radius. Default is 100.\n */\nmxCircleLayout.prototype.radius = null;\n\n/**\n * Variable: moveCircle\n * \n * Boolean specifying if the circle should be moved to the top,\n * left corner specified by <x0> and <y0>. Default is false.\n */\nmxCircleLayout.prototype.moveCircle = false;\n\n/**\n * Variable: x0\n * \n * Integer specifying the left coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.x0 = 0;\n\n/**\n * Variable: y0\n * \n * Integer specifying the top coordinate of the circle.\n * Default is 0.\n */\nmxCircleLayout.prototype.y0 = 0;\n\n/**\n * Variable: resetEdges\n * \n * Specifies if all edge points of traversed edges should be removed.\n * Default is true.\n */\nmxCircleLayout.prototype.resetEdges = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxCircleLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxCircleLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\t// Gets all vertices inside the parent and finds\n\t\t// the maximum dimension of the largest vertex\n\t\tvar max = 0;\n\t\tvar top = null;\n\t\tvar left = null;\n\t\tvar vertices = [];\n\t\tvar childCount = model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(cell);\n\t\t\t\tvar bounds = this.getVertexBounds(cell);\n\t\t\t\t\n\t\t\t\tif (top == null)\n\t\t\t\t{\n\t\t\t\t\ttop = bounds.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttop = Math.min(top, bounds.y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (left == null)\n\t\t\t\t{\n\t\t\t\t\tleft = bounds.x;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleft = Math.min(left, bounds.x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmax = Math.max(max, Math.max(bounds.width, bounds.height));\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\t// Resets the points on the traversed edge\n\t\t\t\tif (this.resetEdges)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.resetEdge(cell);\n\t\t\t\t}\n\n\t\t\t    if (this.disableEdgeStyle)\n\t\t\t    {\n\t\t\t    \t\tthis.setEdgeStyleEnabled(cell, false);\n\t\t\t    }\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar r = this.getRadius(vertices.length, max);\n\n\t\t// Moves the circle to the specified origin\n\t\tif (this.moveCircle)\n\t\t{\n\t\t\tleft = this.x0;\n\t\t\ttop = this.y0;\n\t\t}\n\t\t\n\t\tthis.circle(vertices, r, left, top);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: getRadius\n * \n * Returns the radius to be used for the given vertex count. Max is the maximum\n * width or height of all vertices in the layout.\n */\nmxCircleLayout.prototype.getRadius = function(count, max)\n{\n\treturn Math.max(count * max / Math.PI, this.radius);\n};\n\n/**\n * Function: circle\n * \n * Executes the circular layout for the specified array\n * of vertices and the given radius. This is called from\n * <execute>.\n */\nmxCircleLayout.prototype.circle = function(vertices, r, left, top)\n{\n\tvar vertexCount = vertices.length;\n\tvar phi = 2 * Math.PI / vertexCount;\n\t\n\tfor (var i = 0; i < vertexCount; i++)\n\t{\n\t\tif (this.isVertexMovable(vertices[i]))\n\t\t{\n\t\t\tthis.setVertexLocation(vertices[i],\n\t\t\t\tMath.round(left + r + r * Math.sin(i * phi)),\n\t\t\t\tMath.round(top + r + r * Math.cos(i * phi)));\n\t\t}\n\t}\n};\n\n__mxOutput.mxCircleLayout = typeof mxCircleLayout !== 'undefined' ? mxCircleLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxParallelEdgeLayout\n * \n * Extends <mxGraphLayout> for arranging parallel edges. This layout works\n * on edges for all pairs of vertices where there is more than one edge\n * connecting the latter.\n * \n * Example:\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * To run the layout for the parallel edges of a changed edge only, the\n * following code can be used.\n * \n * (code)\n * var layout = new mxParallelEdgeLayout(graph);\n * \n * graph.addListener(mxEvent.CELL_CONNECTED, function(sender, evt)\n * {\n *   var model = graph.getModel();\n *   var edge = evt.getProperty('edge');\n *   var src = model.getTerminal(edge, true);\n *   var trg = model.getTerminal(edge, false);\n *   \n *   layout.isEdgeIgnored = function(edge2)\n *   {\n *     var src2 = model.getTerminal(edge2, true);\n *     var trg2 = model.getTerminal(edge2, false);\n *     \n *     return !(model.isEdge(edge2) && ((src == src2 && trg == trg2) || (src == trg2 && trg == src2)));\n *   };\n *   \n *   layout.execute(graph.getDefaultParent());\n * });\n * (end)\n * \n * Constructor: mxParallelEdgeLayout\n * \n * Constructs a new parallel edge layout for the specified graph.\n */\nfunction mxParallelEdgeLayout(graph)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxParallelEdgeLayout.prototype = new mxGraphLayout();\nmxParallelEdgeLayout.prototype.constructor = mxParallelEdgeLayout;\n\n/**\n * Variable: spacing\n * \n * Defines the spacing between the parallels. Default is 20.\n */\nmxParallelEdgeLayout.prototype.spacing = 20;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxParallelEdgeLayout.prototype.execute = function(parent)\n{\n\tvar lookup = this.findParallels(parent);\n\t\n\tthis.graph.model.beginUpdate();\t\n\ttry\n\t{\n\t\tfor (var i in lookup)\n\t\t{\n\t\t\tvar parallels = lookup[i];\n\n\t\t\tif (parallels.length > 1)\n\t\t\t{\n\t\t\t\tthis.layout(parallels);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.model.endUpdate();\n\t}\n};\n\n/**\n * Function: findParallels\n * \n * Finds the parallel edges in the given parent.\n */\nmxParallelEdgeLayout.prototype.findParallels = function(parent)\n{\n\tvar model = this.graph.getModel();\n\tvar lookup = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (!this.isEdgeIgnored(child))\n\t\t{\n\t\t\tvar id = this.getEdgeId(child);\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tif (lookup[id] == null)\n\t\t\t\t{\n\t\t\t\t\tlookup[id] = [];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlookup[id].push(child);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn lookup;\n};\n\n/**\n * Function: getEdgeId\n * \n * Returns a unique ID for the given edge. The id is independent of the\n * edge direction and is built using the visible terminal of the given\n * edge.\n */\nmxParallelEdgeLayout.prototype.getEdgeId = function(edge)\n{\n\tvar view = this.graph.getView();\n\t\n\t// Cannot used cached visible terminal because this could be triggered in BEFORE_UNDO\n\tvar src = view.getVisibleTerminal(edge, true);\n\tvar trg = view.getVisibleTerminal(edge, false);\n\n\tif (src != null && trg != null)\n\t{\n\t\tsrc = mxObjectIdentity.get(src);\n\t\ttrg = mxObjectIdentity.get(trg);\n\t\t\n\t\treturn (src > trg) ? trg + '-' + src : src + '-' + trg;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: layout\n * \n * Lays out the parallel edges in the given array.\n */\nmxParallelEdgeLayout.prototype.layout = function(parallels)\n{\n\tvar edge = parallels[0];\n\tvar view = this.graph.getView();\n\tvar model = this.graph.getModel();\n\tvar src = model.getGeometry(view.getVisibleTerminal(edge, true));\n\tvar trg = model.getGeometry(view.getVisibleTerminal(edge, false));\n\t\n\t// Routes multiple loops\n\tif (src == trg)\n\t{\n\t\tvar x0 = src.x + src.width + this.spacing;\n\t\tvar y0 = src.y + src.height / 2;\n\n\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t{\n\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\tx0 += this.spacing;\n\t\t}\n\t}\n\telse if (src != null && trg != null)\n\t{\n\t\t// Routes parallel edges\n\t\tvar scx = src.x + src.width / 2;\n\t\tvar scy = src.y + src.height / 2;\n\t\t\n\t\tvar tcx = trg.x + trg.width / 2;\n\t\tvar tcy = trg.y + trg.height / 2;\n\t\t\n\t\tvar dx = tcx - scx;\n\t\tvar dy = tcy - scy;\n\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\n\t\tif (len > 0)\n\t\t{\n\t\t\tvar x0 = scx + dx / 2;\n\t\t\tvar y0 = scy + dy / 2;\n\t\t\t\n\t\t\tvar nx = dy * this.spacing / len;\n\t\t\tvar ny = dx * this.spacing / len;\n\t\t\t\n\t\t\tx0 += nx * (parallels.length - 1) / 2;\n\t\t\ty0 -= ny * (parallels.length - 1) / 2;\n\t\n\t\t\tfor (var i = 0; i < parallels.length; i++)\n\t\t\t{\n\t\t\t\tthis.route(parallels[i], x0, y0);\n\t\t\t\tx0 -= nx;\n\t\t\t\ty0 += ny;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: route\n * \n * Routes the given edge via the given point.\n */\nmxParallelEdgeLayout.prototype.route = function(edge, x, y)\n{\n\tif (this.graph.isCellMovable(edge))\n\t{\n\t\tthis.setEdgePoints(edge, [new mxPoint(x, y)]);\n\t}\n};\n\n__mxOutput.mxParallelEdgeLayout = typeof mxParallelEdgeLayout !== 'undefined' ? mxParallelEdgeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCompositeLayout\n * \n * Allows to compose multiple layouts into a single layout. The master layout\n * is the layout that handles move operations if another layout than the first\n * element in <layouts> should be used. The <master> layout is not executed as\n * the code assumes that it is part of <layouts>.\n * \n * Example:\n * (code)\n * var first = new mxFastOrganicLayout(graph);\n * var second = new mxParallelEdgeLayout(graph);\n * var layout = new mxCompositeLayout(graph, [first, second], first);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxCompositeLayout\n *\n * Constructs a new layout using the given layouts. The graph instance is\n * required for creating the transaction that contains all layouts.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * layouts - Array of <mxGraphLayouts>.\n * master - Optional layout that handles moves. If no layout is given then\n * the first layout of the above array is used to handle moves.\n */\nfunction mxCompositeLayout(graph, layouts, master)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.layouts = layouts;\n\tthis.master = master;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxCompositeLayout.prototype = new mxGraphLayout();\nmxCompositeLayout.prototype.constructor = mxCompositeLayout;\n\t\n/**\n * Variable: layouts\n * \n * Holds the array of <mxGraphLayouts> that this layout contains.\n */\nmxCompositeLayout.prototype.layouts = null;\n\n/**\n * Variable: layouts\n * \n * Reference to the <mxGraphLayouts> that handles moves. If this is null\n * then the first layout in <layouts> is used.\n */\nmxCompositeLayout.prototype.master = null;\n\n/**\n * Function: moveCell\n * \n * Implements <mxGraphLayout.moveCell> by calling move on <master> or the first\n * layout in <layouts>.\n */\nmxCompositeLayout.prototype.moveCell = function(cell, x, y)\n{\n\tif (this.master != null)\n\t{\n\t\tthis.master.moveCell.apply(this.master, arguments);\n\t}\n\telse\n\t{\n\t\tthis.layouts[0].moveCell.apply(this.layouts[0], arguments);\n\t}\n};\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute> by executing all <layouts> in a\n * single transaction.\n */\nmxCompositeLayout.prototype.execute = function(parent)\n{\n\tvar model = this.graph.getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < this.layouts.length; i++)\n\t\t{\n\t\t\tthis.layouts[i].execute.apply(this.layouts[i], arguments);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n__mxOutput.mxCompositeLayout = typeof mxCompositeLayout !== 'undefined' ? mxCompositeLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeLabelLayout\n * \n * Extends <mxGraphLayout> to implement an edge label layout. This layout\n * makes use of cell states, which means the graph must be validated in\n * a graph view (so that the label bounds are available) before this layout\n * can be executed.\n * \n * Example:\n * \n * (code)\n * var layout = new mxEdgeLabelLayout(graph);\n * layout.execute(graph.getDefaultParent());\n * (end)\n * \n * Constructor: mxEdgeLabelLayout\n *\n * Constructs a new edge label layout.\n *\n * Arguments:\n * \n * graph - <mxGraph> that contains the cells.\n */\nfunction mxEdgeLabelLayout(graph, radius)\n{\n\tmxGraphLayout.call(this, graph);\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxEdgeLabelLayout.prototype = new mxGraphLayout();\nmxEdgeLabelLayout.prototype.constructor = mxEdgeLabelLayout;\n\n/**\n * Function: execute\n * \n * Implements <mxGraphLayout.execute>.\n */\nmxEdgeLabelLayout.prototype.execute = function(parent)\n{\n\tvar view = this.graph.view;\n\tvar model = this.graph.getModel();\n\t\n\t// Gets all vertices and edges inside the parent\n\tvar edges = [];\n\tvar vertices = [];\n\tvar childCount = model.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar cell = model.getChildAt(parent, i);\n\t\tvar state = view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tif (!this.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\tvertices.push(state);\n\t\t\t}\n\t\t\telse if (!this.isEdgeIgnored(cell))\n\t\t\t{\n\t\t\t\tedges.push(state);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.placeLabels(vertices, edges);\n};\n\n/**\n * Function: placeLabels\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.placeLabels = function(v, e)\n{\n\tvar model = this.graph.getModel();\n\t\n\t// Moves the vertices to build a circle. Makes sure the\n\t// radius is large enough for the vertices to not\n\t// overlap\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = 0; i < e.length; i++)\n\t\t{\n\t\t\tvar edge = e[i];\n\t\t\t\n\t\t\tif (edge != null && edge.text != null &&\n\t\t\t\tedge.text.boundingBox != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < v.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar vertex = v[j];\n\t\t\t\t\t\n\t\t\t\t\tif (vertex != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.avoid(edge, vertex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: avoid\n * \n * Places the labels of the given edges.\n */\nmxEdgeLabelLayout.prototype.avoid = function(edge, vertex)\n{\n\tvar model = this.graph.getModel();\n\tvar labRect = edge.text.boundingBox;\n\t\n\tif (mxUtils.intersects(labRect, vertex))\n\t{\n\t\tvar dy1 = -labRect.y - labRect.height + vertex.y;\n\t\tvar dy2 = -labRect.y + vertex.y + vertex.height;\n\t\t\n\t\tvar dy = (Math.abs(dy1) < Math.abs(dy2)) ? dy1 : dy2;\n\t\t\n\t\tvar dx1 = -labRect.x - labRect.width + vertex.x;\n\t\tvar dx2 = -labRect.x + vertex.x + vertex.width;\n\t\n\t\tvar dx = (Math.abs(dx1) < Math.abs(dx2)) ? dx1 : dx2;\n\t\t\n\t\tif (Math.abs(dx) < Math.abs(dy))\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\n\t\tvar g = model.getGeometry(edge.cell);\n\t\t\n\t\tif (g != null)\n\t\t{\n\t\t\tg = g.clone();\n\t\t\t\n\t\t\tif (g.offset != null)\n\t\t\t{\n\t\t\t\tg.offset.x += dx;\n\t\t\t\tg.offset.y += dy;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\t\n\t\t\tmodel.setGeometry(edge.cell, g);\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeLabelLayout = typeof mxEdgeLabelLayout !== 'undefined' ? mxEdgeLabelLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphAbstractHierarchyCell\n * \n * An abstraction of an internal hierarchy node or edge\n * \n * Constructor: mxGraphAbstractHierarchyCell\n *\n * Constructs a new hierarchical layout algorithm.\n */\nfunction mxGraphAbstractHierarchyCell()\n{\n\tthis.x = [];\n\tthis.y = [];\n\tthis.temp = [];\n};\n\n/**\n * Variable: maxRank\n * \n * The maximum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.maxRank = -1;\n\n/**\n * Variable: minRank\n * \n * The minimum rank this cell occupies. Default is -1.\n */\nmxGraphAbstractHierarchyCell.prototype.minRank = -1;\n\n/**\n * Variable: x\n * \n * The x position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.x = null;\n\n/**\n * Variable: y\n * \n * The y position of this cell for each layer it occupies\n */\nmxGraphAbstractHierarchyCell.prototype.y = null;\n\n/**\n * Variable: width\n * \n * The width of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.width = 0;\n\n/**\n * Variable: height\n * \n * The height of this cell. Default is 0.\n */\nmxGraphAbstractHierarchyCell.prototype.height = 0;\n\n/**\n * Variable: nextLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.nextLayerConnectedCells = null;\n\n/**\n * Variable: previousLayerConnectedCells\n * \n * A cached version of the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.previousLayerConnectedCells = null;\n\n/**\n * Variable: temp\n * \n * Temporary variable for general use. Generally, try to avoid\n * carrying information between stages. Currently, the longest\n * path layering sets temp to the rank position in fixRanks()\n * and the crossing reduction uses this. This meant temp couldn't\n * be used for hashing the nodes in the model dfs and so hashCode\n * was created\n */\nmxGraphAbstractHierarchyCell.prototype.temp = null;\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphAbstractHierarchyCell.prototype.getNextLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphAbstractHierarchyCell.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: isEdge\n * \n * Returns whether or not this cell is an edge\n */\nmxGraphAbstractHierarchyCell.prototype.isEdge = function()\n{\n\treturn false;\n};\n\n/**\n * Function: isVertex\n * \n * Returns whether or not this cell is a node\n */\nmxGraphAbstractHierarchyCell.prototype.isVertex = function()\n{\n\treturn false;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn null;\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\treturn null;\n};\n\n/**\n * Function: setX\n * \n * Set the value of x for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setX = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.x[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.x[layer - this.minRank - 1] = value;\n\t}\n};\n\n/**\n * Function: getX\n * \n * Gets the value of x on the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.getX = function(layer)\n{\n\tif (this.isVertex())\n\t{\n\t\treturn this.x[0];\n\t}\n\telse if (this.isEdge())\n\t{\n\t\treturn this.x[layer - this.minRank - 1];\n\t}\n\n\treturn 0.0;\n};\n\n/**\n * Function: setY\n * \n * Set the value of y for the specified layer\n */\nmxGraphAbstractHierarchyCell.prototype.setY = function(layer, value)\n{\n\tif (this.isVertex())\n\t{\n\t\tthis.y[0] = value;\n\t}\n\telse if (this.isEdge())\n\t{\n\t\tthis.y[layer -this. minRank - 1] = value;\n\t}\n};\n\n__mxOutput.mxGraphAbstractHierarchyCell = typeof mxGraphAbstractHierarchyCell !== 'undefined' ? mxGraphAbstractHierarchyCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyNode\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyNode\n *\n * Constructs an internal node to represent the specified real graph cell\n *\n * Arguments:\n * \n * cell - the real graph cell this node represents\n */\nfunction mxGraphHierarchyNode(cell)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.cell = cell;\n\tthis.id = mxObjectIdentity.get(cell);\n\tthis.connectsAsTarget = [];\n\tthis.connectsAsSource = [];\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyNode.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyNode.prototype.constructor = mxGraphHierarchyNode;\n\n/**\n * Variable: cell\n * \n * The graph cell this object represents.\n */\nmxGraphHierarchyNode.prototype.cell = null;\n\n/**\n * Variable: id\n * \n * The object identity of the wrapped cell\n */\nmxGraphHierarchyNode.prototype.id = null;\n\n/**\n * Variable: connectsAsTarget\n * \n * Collection of hierarchy edges that have this node as a target\n */\nmxGraphHierarchyNode.prototype.connectsAsTarget = null;\n\n/**\n * Variable: connectsAsSource\n * \n * Collection of hierarchy edges that have this node as a source\n */\nmxGraphHierarchyNode.prototype.connectsAsSource = null;\n\n/**\n * Variable: hashCode\n * \n * Assigns a unique hashcode for each node. Used by the model dfs instead\n * of copying HashSets\n */\nmxGraphHierarchyNode.prototype.hashCode = false;\n\n/**\n * Function: getRankValue\n * \n * Returns the integer value of the layer that this node resides in\n */\nmxGraphHierarchyNode.prototype.getRankValue = function(layer)\n{\n\treturn this.maxRank;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyNode.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\tthis.nextLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsTarget.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsTarget[i];\n\n\t\t\tif (edge.maxRank == -1 || edge.maxRank == layer + 1)\n\t\t\t{\n\t\t\t\t// Either edge is not in any rank or\n\t\t\t\t// no dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.nextLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.nextLayerConnectedCells[0];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyNode.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\t\tthis.previousLayerConnectedCells[0] = [];\n\t\t\n\t\tfor (var i = 0; i < this.connectsAsSource.length; i++)\n\t\t{\n\t\t\tvar edge = this.connectsAsSource[i];\n\n\t\t\tif (edge.minRank == -1 || edge.minRank == layer - 1)\n\t\t\t{\n\t\t\t\t// No dummy nodes in edge, add node of other side of edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Edge spans at least two layers, add edge\n\t\t\t\tthis.previousLayerConnectedCells[0].push(edge);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[0];\n};\n\n/**\n * Function: isVertex\n * \n * Returns true.\n */\nmxGraphHierarchyNode.prototype.isVertex = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[0];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyNode.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[0] = value;\n};\n\n/**\n * Function: isAncestor\n */\nmxGraphHierarchyNode.prototype.isAncestor = function(otherNode)\n{\n\t// Firstly, the hash code of this node needs to be shorter than the\n\t// other node\n\tif (otherNode != null && this.hashCode != null && otherNode.hashCode != null\n\t\t\t&& this.hashCode.length < otherNode.hashCode.length)\n\t{\n\t\tif (this.hashCode == otherNode.hashCode)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tif (this.hashCode == null || this.hashCode == null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\t// Secondly, this hash code must match the start of the other\n\t\t// node's hash code. Arrays.equals cannot be used here since\n\t\t// the arrays are different length, and we do not want to\n\t\t// perform another array copy.\n\t\tfor (var i = 0; i < this.hashCode.length; i++)\n\t\t{\n\t\t\tif (this.hashCode[i] != otherNode.hashCode[i])\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the core vertex associated with this wrapper\n */\nmxGraphHierarchyNode.prototype.getCoreCell = function()\n{\n\treturn this.cell;\n};\n\n__mxOutput.mxGraphHierarchyNode = typeof mxGraphHierarchyNode !== 'undefined' ? mxGraphHierarchyNode : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyEdge\n * \n * An abstraction of a hierarchical edge for the hierarchy layout\n * \n * Constructor: mxGraphHierarchyEdge\n *\n * Constructs a hierarchy edge\n *\n * Arguments:\n * \n * edges - a list of real graph edges this abstraction represents\n */\nfunction mxGraphHierarchyEdge(edges)\n{\n\tmxGraphAbstractHierarchyCell.apply(this, arguments);\n\tthis.edges = edges;\n\tthis.ids = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.ids.push(mxObjectIdentity.get(edges[i]));\n\t}\n};\n\n/**\n * Extends mxGraphAbstractHierarchyCell.\n */\nmxGraphHierarchyEdge.prototype = new mxGraphAbstractHierarchyCell();\nmxGraphHierarchyEdge.prototype.constructor = mxGraphHierarchyEdge;\n\n/**\n * Variable: edges\n * \n * The graph edge(s) this object represents. Parallel edges are all grouped\n * together within one hierarchy edge.\n */\nmxGraphHierarchyEdge.prototype.edges = null;\n\n/**\n * Variable: ids\n * \n * The object identities of the wrapped cells\n */\nmxGraphHierarchyEdge.prototype.ids = null;\n\n/**\n * Variable: source\n * \n * The node this edge is sourced at\n */\nmxGraphHierarchyEdge.prototype.source = null;\n\n/**\n * Variable: target\n * \n * The node this edge targets\n */\nmxGraphHierarchyEdge.prototype.target = null;\n\n/**\n * Variable: isReversed\n * \n * Whether or not the direction of this edge has been reversed\n * internally to create a DAG for the hierarchical layout\n */\nmxGraphHierarchyEdge.prototype.isReversed = false;\n\n/**\n * Function: invert\n * \n * Inverts the direction of this internal edge(s)\n */\nmxGraphHierarchyEdge.prototype.invert = function(layer)\n{\n\tvar temp = this.source;\n\tthis.source = this.target;\n\tthis.target = temp;\n\tthis.isReversed = !this.isReversed;\n};\n\n/**\n * Function: getNextLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer up\n */\nmxGraphHierarchyEdge.prototype.getNextLayerConnectedCells = function(layer)\n{\n\tif (this.nextLayerConnectedCells == null)\n\t{\n\t\tthis.nextLayerConnectedCells = [];\n\t\t\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.nextLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == this.temp.length - 1)\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this.source);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.nextLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn this.nextLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: getPreviousLayerConnectedCells\n * \n * Returns the cells this cell connects to on the next layer down\n */\nmxGraphHierarchyEdge.prototype.getPreviousLayerConnectedCells = function(layer)\n{\n\tif (this.previousLayerConnectedCells == null)\n\t{\n\t\tthis.previousLayerConnectedCells = [];\n\n\t\tfor (var i = 0; i < this.temp.length; i++)\n\t\t{\n\t\t\tthis.previousLayerConnectedCells[i] = [];\n\t\t\t\n\t\t\tif (i == 0)\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this.target);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.previousLayerConnectedCells[i].push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.previousLayerConnectedCells[layer - this.minRank - 1];\n};\n\n/**\n * Function: isEdge\n * \n * Returns true.\n */\nmxGraphHierarchyEdge.prototype.isEdge = function()\n{\n\treturn true;\n};\n\n/**\n * Function: getGeneralPurposeVariable\n * \n * Gets the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.getGeneralPurposeVariable = function(layer)\n{\n\treturn this.temp[layer - this.minRank - 1];\n};\n\n/**\n * Function: setGeneralPurposeVariable\n * \n * Set the value of temp for the specified layer\n */\nmxGraphHierarchyEdge.prototype.setGeneralPurposeVariable = function(layer, value)\n{\n\tthis.temp[layer - this.minRank - 1] = value;\n};\n\n/**\n * Function: getCoreCell\n * \n * Gets the first core edge associated with this wrapper\n */\nmxGraphHierarchyEdge.prototype.getCoreCell = function()\n{\n\tif (this.edges != null && this.edges.length > 0)\n\t{\n\t\treturn this.edges[0];\n\t}\n\t\n\treturn null;\n};\n\n__mxOutput.mxGraphHierarchyEdge = typeof mxGraphHierarchyEdge !== 'undefined' ? mxGraphHierarchyEdge : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHierarchyModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxGraphHierarchyModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxGraphHierarchyModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxGraphHierarchyModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxGraphHierarchyModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxGraphHierarchyModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxGraphHierarchyModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxGraphHierarchyModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxGraphHierarchyModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxGraphHierarchyModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxGraphHierarchyModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxGraphHierarchyModel.prototype.tightenToSource = false;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxGraphHierarchyModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxGraphHierarchyModel.prototype.initialRank = function()\n{\n\tvar startNodes = [];\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = this.SOURCESCANSTARTRANK;\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\t\t\tthis.maxRank = Math.min(this.maxRank, minimumLayer);\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] -= this.maxRank;\n\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n\tfor ( var i = 0; i < startNodesCopy.length; i++)\n\t{\n\t\tvar internalNode = startNodesCopy[i];\n\t\tvar currentMaxLayer = 0;\n\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n\n\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[j];\n\t\t\tvar otherNode = internalEdge.target;\n\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n\t\t\t\t\totherNode.temp[0] + 1);\n\t\t\tcurrentMaxLayer = internalNode.temp[0];\n\t\t}\n\t}\n\t\n\t// Reset the maxRank to that which would be expected for a from-sink\n\t// scan\n\tthis.maxRank = this.SOURCESCANSTARTRANK - this.maxRank;\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxGraphHierarchyModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxGraphHierarchyModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxGraphHierarchyModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxGraphHierarchyModel = typeof mxGraphHierarchyModel !== 'undefined' ? mxGraphHierarchyModel : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneModel\n *\n * Internal model of a hierarchical graph. This model stores nodes and edges\n * equivalent to the real graph nodes and edges, but also stores the rank of the\n * cells, the order within the ranks and the new candidate locations of cells.\n * The internal model also reverses edge direction were appropriate , ignores\n * self-loop and groups parallels together under one edge object.\n *\n * Constructor: mxSwimlaneModel\n *\n * Creates an internal ordered graph model using the vertices passed in. If\n * there are any, leftward edge need to be inverted in the internal model\n *\n * Arguments:\n *\n * graph - the facade describing the graph to be operated on\n * vertices - the vertices for this hierarchy\n * ordered - whether or not the vertices are already ordered\n * deterministic - whether or not this layout should be deterministic on each\n * tightenToSource - whether or not to tighten vertices towards the sources\n * scanRanksFromSinks - Whether rank assignment is from the sinks or sources.\n * usage\n */\nfunction mxSwimlaneModel(layout, vertices, roots, parent, tightenToSource)\n{\n\tvar graph = layout.getGraph();\n\tthis.tightenToSource = tightenToSource;\n\tthis.roots = roots;\n\tthis.parent = parent;\n\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly\n\tthis.vertexMapper = new mxDictionary();\n\tthis.edgeMapper = new mxDictionary();\n\tthis.maxRank = 0;\n\tvar internalVertices = [];\n\n\tif (vertices == null)\n\t{\n\t\tvertices = this.graph.getChildVertices(parent);\n\t}\n\n\tthis.maxRank = this.SOURCESCANSTARTRANK;\n\t// map of cells to internal cell needed for second run through\n\t// to setup the sink of edges correctly. Guess size by number\n\t// of edges is roughly same as number of vertices.\n\tthis.createInternalCells(layout, vertices, internalVertices);\n\n\t// Go through edges set their sink values. Also check the\n\t// ordering if and invert edges if necessary\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tvar edges = internalVertices[i].connectsAsSource;\n\n\t\tfor (var j = 0; j < edges.length; j++)\n\t\t{\n\t\t\tvar internalEdge = edges[j];\n\t\t\tvar realEdges = internalEdge.edges;\n\n\t\t\t// Only need to process the first real edge, since\n\t\t\t// all the edges connect to the same other vertex\n\t\t\tif (realEdges != null && realEdges.length > 0)\n\t\t\t{\n\t\t\t\tvar realEdge = realEdges[0];\n\t\t\t\tvar targetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\trealEdge, false);\n\t\t\t\tvar internalTargetCell = this.vertexMapper.get(targetCell);\n\n\t\t\t\tif (internalVertices[i] == internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\t// If there are parallel edges going between two vertices and not all are in the same direction\n\t\t\t\t\t// you can have navigated across one direction when doing the cycle reversal that isn't the same\n\t\t\t\t\t// direction as the first real edge in the array above. When that happens the if above catches\n\t\t\t\t\t// that and we correct the target cell before continuing.\n\t\t\t\t\t// This branch only detects this single case\n\t\t\t\t\ttargetCell = layout.getVisibleTerminal(\n\t\t\t\t\t\t\trealEdge, true);\n\t\t\t\t\tinternalTargetCell = this.vertexMapper.get(targetCell);\n\t\t\t\t}\n\n\t\t\t\tif (internalTargetCell != null\n\t\t\t\t\t\t&& internalVertices[i] != internalTargetCell)\n\t\t\t\t{\n\t\t\t\t\tinternalEdge.target = internalTargetCell;\n\n\t\t\t\t\tif (internalTargetCell.connectsAsTarget.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.indexOf(internalTargetCell.connectsAsTarget, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalTargetCell.connectsAsTarget.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Use the temp variable in the internal nodes to mark this\n\t\t// internal vertex as having been visited.\n\t\tinternalVertices[i].temp[0] = 1;\n\t}\n};\n\n/**\n * Variable: maxRank\n *\n * Stores the largest rank number allocated\n */\nmxSwimlaneModel.prototype.maxRank = null;\n\n/**\n * Variable: vertexMapper\n *\n * Map from graph vertices to internal model nodes.\n */\nmxSwimlaneModel.prototype.vertexMapper = null;\n\n/**\n * Variable: edgeMapper\n *\n * Map from graph edges to internal model edges\n */\nmxSwimlaneModel.prototype.edgeMapper = null;\n\n/**\n * Variable: ranks\n *\n * Mapping from rank number to actual rank\n */\nmxSwimlaneModel.prototype.ranks = null;\n\n/**\n * Variable: roots\n *\n * Store of roots of this hierarchy model, these are real graph cells, not\n * internal cells\n */\nmxSwimlaneModel.prototype.roots = null;\n\n/**\n * Variable: parent\n *\n * The parent cell whose children are being laid out\n */\nmxSwimlaneModel.prototype.parent = null;\n\n/**\n * Variable: dfsCount\n *\n * Count of the number of times the ancestor dfs has been used.\n */\nmxSwimlaneModel.prototype.dfsCount = 0;\n\n/**\n * Variable: SOURCESCANSTARTRANK\n *\n * High value to start source layering scan rank value from.\n */\nmxSwimlaneModel.prototype.SOURCESCANSTARTRANK = 100000000;\n\n/**\n * Variable: tightenToSource\n *\n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells.\n */\nmxSwimlaneModel.prototype.tightenToSource = false;\n\n/**\n * Variable: ranksPerGroup\n *\n * An array of the number of ranks within each swimlane\n */\nmxSwimlaneModel.prototype.ranksPerGroup = null;\n\n/**\n * Function: createInternalCells\n *\n * Creates all edges in the internal model\n *\n * Parameters:\n *\n * layout - Reference to the <mxHierarchicalLayout> algorithm.\n * vertices - Array of <mxCells> that represent the vertices whom are to\n * have an internal representation created.\n * internalVertices - The array of <mxGraphHierarchyNodes> to have their\n * information filled in using the real vertices.\n */\nmxSwimlaneModel.prototype.createInternalCells = function(layout, vertices, internalVertices)\n{\n\tvar graph = layout.getGraph();\n\tvar swimlanes = layout.swimlanes;\n\n\t// Create internal edges\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tinternalVertices[i] = new mxGraphHierarchyNode(vertices[i]);\n\t\tthis.vertexMapper.put(vertices[i], internalVertices[i]);\n\t\tinternalVertices[i].swimlaneIndex = -1;\n\n\t\tfor (var ii = 0; ii < swimlanes.length; ii++)\n\t\t{\n\t\t\tif (graph.model.getParent(vertices[i]) == swimlanes[ii])\n\t\t\t{\n\t\t\t\tinternalVertices[i].swimlaneIndex = ii;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If the layout is deterministic, order the cells\n\t\t//List outgoingCells = graph.getNeighbours(vertices[i], deterministic);\n\t\tvar conns = layout.getEdges(vertices[i]);\n\t\tinternalVertices[i].connectsAsSource = [];\n\n\t\t// Create internal edges, but don't do any rank assignment yet\n\t\t// First use the information from the greedy cycle remover to\n\t\t// invert the leftward edges internally\n\t\tfor (var j = 0; j < conns.length; j++)\n\t\t{\n\t\t\tvar cell = layout.getVisibleTerminal(conns[j], false);\n\n\t\t\t// Looking for outgoing edges only\n\t\t\tif (cell != vertices[i] && layout.graph.model.isVertex(cell) &&\n\t\t\t\t\t!layout.isVertexIgnored(cell))\n\t\t\t{\n\t\t\t\t// We process all edge between this source and its targets\n\t\t\t\t// If there are edges going both ways, we need to collect\n\t\t\t\t// them all into one internal edges to avoid looping problems\n\t\t\t\t// later. We assume this direction (source -> target) is the \n\t\t\t\t// natural direction if at least half the edges are going in\n\t\t\t\t// that direction.\n\n\t\t\t\t// The check below for edges[0] being in the vertex mapper is\n\t\t\t\t// in case we've processed this the other way around\n\t\t\t\t// (target -> source) and the number of edges in each direction\n\t\t\t\t// are the same. All the graph edges will have been assigned to\n\t\t\t\t// an internal edge going the other way, so we don't want to \n\t\t\t\t// process them again\n\t\t\t\tvar undirectedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, false);\n\t\t\t\tvar directedEdges = layout.getEdgesBetween(vertices[i],\n\t\t\t\t\t\tcell, true);\n\t\t\t\t\n\t\t\t\tif (undirectedEdges != null &&\n\t\t\t\t\t\tundirectedEdges.length > 0 &&\n\t\t\t\t\t\tthis.edgeMapper.get(undirectedEdges[0]) == null &&\n\t\t\t\t\t\tdirectedEdges.length * 2 >= undirectedEdges.length)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = new mxGraphHierarchyEdge(undirectedEdges);\n\n\t\t\t\t\tfor (var k = 0; k < undirectedEdges.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar edge = undirectedEdges[k];\n\t\t\t\t\t\tthis.edgeMapper.put(edge, internalEdge);\n\n\t\t\t\t\t\t// Resets all point on the edge and disables the edge style\n\t\t\t\t\t\t// without deleting it from the cell style\n\t\t\t\t\t\tgraph.resetEdge(edge);\n\n\t\t\t\t\t    if (layout.disableEdgeStyle)\n\t\t\t\t\t    {\n\t\t\t\t\t    \tlayout.setEdgeStyleEnabled(edge, false);\n\t\t\t\t\t    \tlayout.setOrthogonalEdge(edge,true);\n\t\t\t\t\t    }\n\t\t\t\t\t}\n\n\t\t\t\t\tinternalEdge.source = internalVertices[i];\n\n\t\t\t\t\tif (mxUtils.indexOf(internalVertices[i].connectsAsSource, internalEdge) < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tinternalVertices[i].connectsAsSource.push(internalEdge);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Ensure temp variable is cleared from any previous use\n\t\tinternalVertices[i].temp[0] = 0;\n\t}\n};\n\n/**\n * Function: initialRank\n *\n * Basic determination of minimum layer ranking by working from from sources\n * or sinks and working through each node in the relevant edge direction.\n * Starting at the sinks is basically a longest path layering algorithm.\n*/\nmxSwimlaneModel.prototype.initialRank = function()\n{\n\tthis.ranksPerGroup = [];\n\t\n\tvar startNodes = [];\n\tvar seen = new Object();\n\n\tif (this.roots != null)\n\t{\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar internalNode = this.vertexMapper.get(this.roots[i]);\n\t\t\tthis.maxChainDfs(null, internalNode, null, seen, 0);\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tstartNodes.push(internalNode);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Calculate the lower and upper rank bounds of each swimlane\n\tvar lowerRank = [];\n\tvar upperRank = [];\n\t\n\tfor (var i = this.ranksPerGroup.length - 1; i >= 0; i--)\n\t{\n\t\tif (i == this.ranksPerGroup.length - 1)\n\t\t{\n\t\t\tlowerRank[i] = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlowerRank[i] = upperRank[i+1] + 1;\n\t\t}\n\t\t\n\t\tupperRank[i] = lowerRank[i] + this.ranksPerGroup[i];\n\t}\n\t\n\tthis.maxRank = upperRank[0];\n\n\tvar internalNodes = this.vertexMapper.getValues();\n\t\n\tfor (var i=0; i < internalNodes.length; i++)\n\t{\n\t\t// Mark the node as not having had a layer assigned\n\t\tinternalNodes[i].temp[0] = -1;\n\t}\n\n\tvar startNodesCopy = startNodes.slice();\n\t\n\twhile (startNodes.length > 0)\n\t{\n\t\tvar internalNode = startNodes[0];\n\t\tvar layerDeterminingEdges;\n\t\tvar edgesToBeMarked;\n\n\t\tlayerDeterminingEdges = internalNode.connectsAsTarget;\n\t\tedgesToBeMarked = internalNode.connectsAsSource;\n\n\t\t// flag to keep track of whether or not all layer determining\n\t\t// edges have been scanned\n\t\tvar allEdgesScanned = true;\n\n\t\t// Work out the layer of this node from the layer determining\n\t\t// edges. The minimum layer number of any node connected by one of\n\t\t// the layer determining edges variable\n\t\tvar minimumLayer = upperRank[0];\n\n\t\tfor (var i = 0; i < layerDeterminingEdges.length; i++)\n\t\t{\n\t\t\tvar internalEdge = layerDeterminingEdges[i];\n\n\t\t\tif (internalEdge.temp[0] == 5270620)\n\t\t\t{\n\t\t\t\t// This edge has been scanned, get the layer of the\n\t\t\t\t// node on the other end\n\t\t\t\tvar otherNode = internalEdge.source;\n\t\t\t\tminimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tallEdgesScanned = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// If all edge have been scanned, assign the layer, mark all\n\t\t// edges in the other direction and remove from the nodes list\n\t\tif (allEdgesScanned)\n\t\t{\n\t\t\tif (minimumLayer > upperRank[internalNode.swimlaneIndex])\n\t\t\t{\n\t\t\t\tminimumLayer = upperRank[internalNode.swimlaneIndex];\n\t\t\t}\n\n\t\t\tinternalNode.temp[0] = minimumLayer;\n\n\t\t\tif (edgesToBeMarked != null)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < edgesToBeMarked.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar internalEdge = edgesToBeMarked[i];\n\n\t\t\t\t\t// Assign unique stamp ( y/m/d/h )\n\t\t\t\t\tinternalEdge.temp[0] = 5270620;\n\n\t\t\t\t\t// Add node on other end of edge to LinkedList of\n\t\t\t\t\t// nodes to be analysed\n\t\t\t\t\tvar otherNode = internalEdge.target;\n\n\t\t\t\t\t// Only add node if it hasn't been assigned a layer\n\t\t\t\t\tif (otherNode.temp[0] == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tstartNodes.push(otherNode);\n\n\t\t\t\t\t\t// Mark this other node as neither being\n\t\t\t\t\t\t// unassigned nor assigned so it isn't\n\t\t\t\t\t\t// added to this list again, but it's\n\t\t\t\t\t\t// layer isn't used in any calculation.\n\t\t\t\t\t\totherNode.temp[0] = -2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstartNodes.shift();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not all the edges have been scanned, get to the back of\n\t\t\t// the class and put the dunces cap on\n\t\t\tvar removedCell = startNodes.shift();\n\t\t\tstartNodes.push(internalNode);\n\n\t\t\tif (removedCell == internalNode && startNodes.length == 1)\n\t\t\t{\n\t\t\t\t// This is an error condition, we can't get out of\n\t\t\t\t// this loop. It could happen for more than one node\n\t\t\t\t// but that's a lot harder to detect. Log the error\n\t\t\t\t// TODO make log comment\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize the ranks down from their large starting value to place\n\t// at least 1 sink on layer 0\n//\tfor (var key in this.vertexMapper)\n//\t{\n//\t\tvar internalNode = this.vertexMapper[key];\n//\t\t// Mark the node as not having had a layer assigned\n//\t\tinternalNode.temp[0] -= this.maxRank;\n//\t}\n\t\n\t// Tighten the rank 0 nodes as far as possible\n//\tfor ( var i = 0; i < startNodesCopy.length; i++)\n//\t{\n//\t\tvar internalNode = startNodesCopy[i];\n//\t\tvar currentMaxLayer = 0;\n//\t\tvar layerDeterminingEdges = internalNode.connectsAsSource;\n//\n//\t\tfor ( var j = 0; j < layerDeterminingEdges.length; j++)\n//\t\t{\n//\t\t\tvar internalEdge = layerDeterminingEdges[j];\n//\t\t\tvar otherNode = internalEdge.target;\n//\t\t\tinternalNode.temp[0] = Math.max(currentMaxLayer,\n//\t\t\t\t\totherNode.temp[0] + 1);\n//\t\t\tcurrentMaxLayer = internalNode.temp[0];\n//\t\t}\n//\t}\n};\n\n/**\n * Function: maxChainDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of chains within groups.\n * Any cycles should be removed prior to running, but previously seen cells\n * are ignored.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * seen - a set of all nodes seen by this dfs\n * chainCount - the number of edges in the chain of vertices going through\n * the current swimlane\n */\nmxSwimlaneModel.prototype.maxChainDfs = function(parent, root, connectingEdge, seen, chainCount)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = mxCellPath.create(root.cell);\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvar slIndex = root.swimlaneIndex;\n\t\t\t\n\t\t\tif (this.ranksPerGroup[slIndex] == null || this.ranksPerGroup[slIndex] < chainCount)\n\t\t\t{\n\t\t\t\tthis.ranksPerGroup[slIndex] = chainCount;\n\t\t\t}\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), 0);\n\t\t\t\t}\n\t\t\t\telse if (root.swimlaneIndex == targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.maxChainDfs(root, targetNode, internalEdge, mxUtils.clone(seen, null , true), chainCount + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: fixRanks\n *\n * Fixes the layer assignments to the values stored in the nodes. Also needs\n * to create dummy nodes for edges that cross layers.\n */\nmxSwimlaneModel.prototype.fixRanks = function()\n{\n\tvar rankList = [];\n\tthis.ranks = [];\n\n\tfor (var i = 0; i < this.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tthis.ranks[i] = rankList[i];\n\t}\n\n\t// Perform a DFS to obtain an initial ordering for each rank.\n\t// Without doing this you would end up having to process\n\t// crossings for a standard tree.\n\tvar rootsArray = null;\n\n\tif (this.roots != null)\n\t{\n\t\tvar oldRootsArray = this.roots;\n\t\trootsArray = [];\n\n\t\tfor (var i = 0; i < oldRootsArray.length; i++)\n\t\t{\n\t\t\tvar cell = oldRootsArray[i];\n\t\t\tvar internalNode = this.vertexMapper.get(cell);\n\t\t\trootsArray[i] = internalNode;\n\t\t}\n\t}\n\n\tthis.visit(function(parent, node, edge, layer, seen)\n\t{\n\t\tif (seen == 0 && node.maxRank < 0 && node.minRank < 0)\n\t\t{\n\t\t\trankList[node.temp[0]].push(node);\n\t\t\tnode.maxRank = node.temp[0];\n\t\t\tnode.minRank = node.temp[0];\n\n\t\t\t// Set temp[0] to the nodes position in the rank\n\t\t\tnode.temp[0] = rankList[node.maxRank].length - 1;\n\t\t}\n\n\t\tif (parent != null && edge != null)\n\t\t{\n\t\t\tvar parentToCellRankDifference = parent.maxRank - node.maxRank;\n\n\t\t\tif (parentToCellRankDifference > 1)\n\t\t\t{\n\t\t\t\t// There are ranks in between the parent and current cell\n\t\t\t\tedge.maxRank = parent.maxRank;\n\t\t\t\tedge.minRank = node.maxRank;\n\t\t\t\tedge.temp = [];\n\t\t\t\tedge.x = [];\n\t\t\t\tedge.y = [];\n\n\t\t\t\tfor (var i = edge.minRank + 1; i < edge.maxRank; i++)\n\t\t\t\t{\n\t\t\t\t\t// The connecting edge must be added to the\n\t\t\t\t\t// appropriate ranks\n\t\t\t\t\trankList[i].push(edge);\n\t\t\t\t\tedge.setGeneralPurposeVariable(i, rankList[i]\n\t\t\t\t\t\t\t.length - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, rootsArray, false, null);\n};\n\n/**\n * Function: visit\n *\n * A depth first search through the internal heirarchy model.\n *\n * Parameters:\n *\n * visitor - The visitor function pattern to be called for each node.\n * trackAncestors - Whether or not the search is to keep track all nodes\n * directly above this one in the search path.\n */\nmxSwimlaneModel.prototype.visit = function(visitor, dfsRoots, trackAncestors, seenNodes)\n{\n\t// Run dfs through on all roots\n\tif (dfsRoots != null)\n\t{\n\t\tfor (var i = 0; i < dfsRoots.length; i++)\n\t\t{\n\t\t\tvar internalNode = dfsRoots[i];\n\n\t\t\tif (internalNode != null)\n\t\t\t{\n\t\t\t\tif (seenNodes == null)\n\t\t\t\t{\n\t\t\t\t\tseenNodes = new Object();\n\t\t\t\t}\n\n\t\t\t\tif (trackAncestors)\n\t\t\t\t{\n\t\t\t\t\t// Set up hash code for root\n\t\t\t\t\tinternalNode.hashCode = [];\n\t\t\t\t\tinternalNode.hashCode[0] = this.dfsCount;\n\t\t\t\t\tinternalNode.hashCode[1] = i;\n\t\t\t\t\tthis.extendedDfs(null, internalNode, null, visitor, seenNodes,\n\t\t\t\t\t\t\tinternalNode.hashCode, i, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.dfs(null, internalNode, null, visitor, seenNodes, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.dfsCount++;\n\t}\n};\n\n/**\n * Function: dfs\n *\n * Performs a depth first search on the internal hierarchy model\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs a set of all of the\n * ancestor node of the current node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.dfs = function(parent, root, connectingEdge, visitor, seen, layer)\n{\n\tif (root != null)\n\t{\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\t\n\t\t\tfor (var i = 0; i< outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\n\t\t\t\t// Root check is O(|roots|)\n\t\t\t\tthis.dfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\tlayer + 1);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendedDfs\n *\n * Performs a depth first search on the internal hierarchy model. This dfs\n * extends the default version by keeping track of cells ancestors, but it\n * should be only used when necessary because of it can be computationally\n * intensive for deep searches.\n *\n * Parameters:\n *\n * parent - the parent internal node of the current internal node\n * root - the current internal node\n * connectingEdge - the internal edge connecting the internal node and the parent\n * internal node, if any\n * visitor - the visitor pattern to be called for each node\n * seen - a set of all nodes seen by this dfs\n * ancestors - the parent hash code\n * childHash - the new hash code for this node\n * layer - the layer on the dfs tree ( not the same as the model ranks )\n */\nmxSwimlaneModel.prototype.extendedDfs = function(parent, root, connectingEdge, visitor, seen, ancestors, childHash, layer)\n{\n\t// Explanation of custom hash set. Previously, the ancestors variable\n\t// was passed through the dfs as a HashSet. The ancestors were copied\n\t// into a new HashSet and when the new child was processed it was also\n\t// added to the set. If the current node was in its ancestor list it\n\t// meant there is a cycle in the graph and this information is passed\n\t// to the visitor.visit() in the seen parameter. The HashSet clone was\n\t// very expensive on CPU so a custom hash was developed using primitive\n\t// types. temp[] couldn't be used so hashCode[] was added to each node.\n\t// Each new child adds another int to the array, copying the prefix\n\t// from its parent. Child of the same parent add different ints (the\n\t// limit is therefore 2^32 children per parent...). If a node has a\n\t// child with the hashCode already set then the child code is compared\n\t// to the same portion of the current nodes array. If they match there\n\t// is a loop.\n\t// Note that the basic mechanism would only allow for 1 use of this\n\t// functionality, so the root nodes have two ints. The second int is\n\t// incremented through each node root and the first is incremented\n\t// through each run of the dfs algorithm (therefore the dfs is not\n\t// thread safe). The hash code of each node is set if not already set,\n\t// or if the first int does not match that of the current run.\n\tif (root != null)\n\t{\n\t\tif (parent != null)\n\t\t{\n\t\t\t// Form this nodes hash code if necessary, that is, if the\n\t\t\t// hashCode variable has not been initialized or if the\n\t\t\t// start of the parent hash code does not equal the start of\n\t\t\t// this nodes hash code, indicating the code was set on a\n\t\t\t// previous run of this dfs.\n\t\t\tif (root.hashCode == null ||\n\t\t\t\troot.hashCode[0] != parent.hashCode[0])\n\t\t\t{\n\t\t\t\tvar hashCodeLength = parent.hashCode.length + 1;\n\t\t\t\troot.hashCode = parent.hashCode.slice();\n\t\t\t\troot.hashCode[hashCodeLength - 1] = childHash;\n\t\t\t}\n\t\t}\n\n\t\tvar rootId = root.id;\n\n\t\tif (seen[rootId] == null)\n\t\t{\n\t\t\tseen[rootId] = root;\n\t\t\tvisitor(parent, root, connectingEdge, layer, 0);\n\n\t\t\t// Copy the connects as source list so that visitors\n\t\t\t// can change the original for edge direction inversions\n\t\t\tvar outgoingEdges = root.connectsAsSource.slice();\n\t\t\tvar incomingEdges = root.connectsAsTarget.slice();\n\n\t\t\tfor (var i = 0; i < outgoingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = outgoingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.target;\n\t\t\t\t\n\t\t\t\t// Only navigate in source->target direction within the same\n\t\t\t\t// swimlane, or from a lower index swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex <= targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < incomingEdges.length; i++)\n\t\t\t{\n\t\t\t\tvar internalEdge = incomingEdges[i];\n\t\t\t\tvar targetNode = internalEdge.source;\n\n\t\t\t\t// Only navigate in target->source direction from a lower index \n\t\t\t\t// swimlane to a higher one\n\t\t\t\tif (root.swimlaneIndex < targetNode.swimlaneIndex)\n\t\t\t\t{\n\t\t\t\t\tthis.extendedDfs(root, targetNode, internalEdge, visitor, seen,\n\t\t\t\t\t\t\troot.hashCode, i, layer + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Use the int field to indicate this node has been seen\n\t\t\tvisitor(parent, root, connectingEdge, layer, 1);\n\t\t}\n\t}\n};\n\n__mxOutput.mxSwimlaneModel = typeof mxSwimlaneModel !== 'undefined' ? mxSwimlaneModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayoutStage\n * \n * The specific layout interface for hierarchical layouts. It adds a\n * <code>run</code> method with a parameter for the hierarchical layout model\n * that is shared between the layout stages.\n * \n * Constructor: mxHierarchicalLayoutStage\n *\n * Constructs a new hierarchical layout stage.\n */\nfunction mxHierarchicalLayoutStage() { };\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxHierarchicalLayoutStage.prototype.execute = function(parent) { };\n\n__mxOutput.mxHierarchicalLayoutStage = typeof mxHierarchicalLayoutStage !== 'undefined' ? mxHierarchicalLayoutStage : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMedianHybridCrossingReduction\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well heuristic to straighten edges as\n * far as possible.\n * \n * Constructor: mxMedianHybridCrossingReduction\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxMedianHybridCrossingReduction(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxMedianHybridCrossingReduction.\n */\nmxMedianHybridCrossingReduction.prototype = new mxHierarchicalLayoutStage();\nmxMedianHybridCrossingReduction.prototype.constructor = mxMedianHybridCrossingReduction;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMedianHybridCrossingReduction.prototype.layout = null;\n\n/**\n * Variable: maxIterations\n * \n * The maximum number of iterations to perform whilst reducing edge\n * crossings. Default is 24.\n */\nmxMedianHybridCrossingReduction.prototype.maxIterations = 24;\n\n/**\n * Variable: nestedBestRanks\n * \n * Stores each rank as a collection of cells in the best order found for\n * each layer so far\n */\nmxMedianHybridCrossingReduction.prototype.nestedBestRanks = null;\n\n/**\n * Variable: currentBestCrossings\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.currentBestCrossings = 0;\n\n/**\n * Variable: iterationsWithoutImprovement\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.iterationsWithoutImprovement = 0;\n\n/**\n * Variable: maxNoImprovementIterations\n * \n * The total number of crossings found in the best configuration so far\n */\nmxMedianHybridCrossingReduction.prototype.maxNoImprovementIterations = 2;\n\n/**\n * Function: execute\n * \n * Performs a vertex ordering within ranks as described by Gansner et al\n * 1993\n */\nmxMedianHybridCrossingReduction.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\n\t// Stores initial ordering as being the best one found so far\n\tthis.nestedBestRanks = [];\n\t\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.nestedBestRanks[i] = model.ranks[i].slice();\n\t}\n\n\tvar iterationsWithoutImprovement = 0;\n\tvar currentBestCrossings = this.calculateCrossings(model);\n\n\tfor (var i = 0; i < this.maxIterations &&\n\t\titerationsWithoutImprovement < this.maxNoImprovementIterations; i++)\n\t{\n\t\tthis.weightedMedian(i, model);\n\t\tthis.transpose(i, model);\n\t\tvar candidateCrossings = this.calculateCrossings(model);\n\n\t\tif (candidateCrossings < currentBestCrossings)\n\t\t{\n\t\t\tcurrentBestCrossings = candidateCrossings;\n\t\t\titerationsWithoutImprovement = 0;\n\n\t\t\t// Store the current rankings as the best ones\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tthis.nestedBestRanks[j][cell.getGeneralPurposeVariable(j)] = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Increase count of iterations where we haven't improved the\n\t\t\t// layout\n\t\t\titerationsWithoutImprovement++;\n\n\t\t\t// Restore the best values to the cells\n\t\t\tfor (var j = 0; j < this.nestedBestRanks.length; j++)\n\t\t\t{\n\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\tcell.setGeneralPurposeVariable(j, k);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (currentBestCrossings == 0)\n\t\t{\n\t\t\t// Do nothing further\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Store the best rankings but in the model\n\tvar ranks = [];\n\tvar rankList = [];\n\n\tfor (var i = 0; i < model.maxRank + 1; i++)\n\t{\n\t\trankList[i] = [];\n\t\tranks[i] = rankList[i];\n\t}\n\n\tfor (var i = 0; i < this.nestedBestRanks.length; i++)\n\t{\n\t\tfor (var j = 0; j < this.nestedBestRanks[i].length; j++)\n\t\t{\n\t\t\trankList[i].push(this.nestedBestRanks[i][j]);\n\t\t}\n\t}\n\n\tmodel.ranks = ranks;\n};\n\n\n/**\n * Function: calculateCrossings\n * \n * Calculates the total number of edge crossing in the current graph.\n * Returns the current number of edge crossings in the hierarchy graph\n * model in the current candidate layout\n * \n * Parameters:\n * \n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateCrossings = function(model)\n{\n\tvar numRanks = model.ranks.length;\n\tvar totalCrossings = 0;\n\n\tfor (var i = 1; i < numRanks; i++)\n\t{\n\t\ttotalCrossings += this.calculateRankCrossing(i, model);\n\t}\n\t\n\treturn totalCrossings;\n};\n\n/**\n * Function: calculateRankCrossing\n * \n * Calculates the number of edges crossings between the specified rank and\n * the rank below it. Returns the number of edges crossings with the rank\n * beneath\n * \n * Parameters:\n * \n * i -  the topmost rank of the pair ( higher rank value )\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.calculateRankCrossing = function(i, model)\n{\n\tvar totalCrossings = 0;\n\tvar rank = model.ranks[i];\n\tvar previousRank = model.ranks[i - 1];\n\n\tvar tmpIndices = [];\n\n\t// Iterate over the top rank and fill in the connection information\n\tfor (var j = 0; j < rank.length; j++)\n\t{\n\t\tvar node = rank[j];\n\t\tvar rankPosition = node.getGeneralPurposeVariable(i);\n\t\tvar connectedCells = node.getPreviousLayerConnectedCells(i);\n\t\tvar nodeIndices = [];\n\n\t\tfor (var k = 0; k < connectedCells.length; k++)\n\t\t{\n\t\t\tvar connectedNode = connectedCells[k];\n\t\t\tvar otherCellRankPosition = connectedNode.getGeneralPurposeVariable(i - 1);\n\t\t\tnodeIndices.push(otherCellRankPosition);\n\t\t}\n\t\t\n\t\tnodeIndices.sort(function(x, y) { return x - y; });\n\t\ttmpIndices[rankPosition] = nodeIndices;\n\t}\n\t\n\tvar indices = [];\n\n\tfor (var j = 0; j < tmpIndices.length; j++)\n\t{\n\t\tindices = indices.concat(tmpIndices[j]);\n\t}\n\n\tvar firstIndex = 1;\n\t\n\twhile (firstIndex < previousRank.length)\n\t{\n\t\tfirstIndex <<= 1;\n\t}\n\n\tvar treeSize = 2 * firstIndex - 1;\n\tfirstIndex -= 1;\n\n\tvar tree = [];\n\t\n\tfor (var j = 0; j < treeSize; ++j)\n\t{\n\t\ttree[j] = 0;\n\t}\n\n\tfor (var j = 0; j < indices.length; j++)\n\t{\n\t\tvar index = indices[j];\n\t    var treeIndex = index + firstIndex;\n\t    ++tree[treeIndex];\n\t    \n\t    while (treeIndex > 0)\n\t    {\n\t    \tif (treeIndex % 2)\n\t    \t{\n\t    \t\ttotalCrossings += tree[treeIndex + 1];\n\t    \t}\n\t      \n\t    \ttreeIndex = (treeIndex - 1) >> 1;\n\t    \t++tree[treeIndex];\n\t    }\n\t}\n\n\treturn totalCrossings;\n};\n\n/**\n * Function: transpose\n * \n * Takes each possible adjacent cell pair on each rank and checks if\n * swapping them around reduces the number of crossing\n * \n * Parameters:\n * \n * mainLoopIteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.transpose = function(mainLoopIteration, model)\n{\n\tvar improved = true;\n\n\t// Track the number of iterations in case of looping\n\tvar count = 0;\n\tvar maxCount = 10;\n\twhile (improved && count++ < maxCount)\n\t{\n\t\t// On certain iterations allow allow swapping of cell pairs with\n\t\t// equal edge crossings switched or not switched. This help to\n\t\t// nudge a stuck layout into a lower crossing total.\n\t\tvar nudge = mainLoopIteration % 2 == 1 && count % 2 == 1;\n\t\timproved = false;\n\t\t\n\t\tfor (var i = 0; i < model.ranks.length; i++)\n\t\t{\n\t\t\tvar rank = model.ranks[i];\n\t\t\tvar orderedCells = [];\n\t\t\t\n\t\t\tfor (var j = 0; j < rank.length; j++)\n\t\t\t{\n\t\t\t\tvar cell = rank[j];\n\t\t\t\tvar tempRank = cell.getGeneralPurposeVariable(i);\n\t\t\t\t\n\t\t\t\t// FIXME: Workaround to avoid negative tempRanks\n\t\t\t\tif (tempRank < 0)\n\t\t\t\t{\n\t\t\t\t\ttempRank = j;\n\t\t\t\t}\n\t\t\t\torderedCells[tempRank] = cell;\n\t\t\t}\n\t\t\t\n\t\t\tvar leftCellAboveConnections = null;\n\t\t\tvar leftCellBelowConnections = null;\n\t\t\tvar rightCellAboveConnections = null;\n\t\t\tvar rightCellBelowConnections = null;\n\t\t\t\n\t\t\tvar leftAbovePositions = null;\n\t\t\tvar leftBelowPositions = null;\n\t\t\tvar rightAbovePositions = null;\n\t\t\tvar rightBelowPositions = null;\n\t\t\t\n\t\t\tvar leftCell = null;\n\t\t\tvar rightCell = null;\n\n\t\t\tfor (var j = 0; j < (rank.length - 1); j++)\n\t\t\t{\n\t\t\t\t// For each intra-rank adjacent pair of cells\n\t\t\t\t// see if swapping them around would reduce the\n\t\t\t\t// number of edges crossing they cause in total\n\t\t\t\t// On every cell pair except the first on each rank, we\n\t\t\t\t// can save processing using the previous values for the\n\t\t\t\t// right cell on the new left cell\n\t\t\t\tif (j == 0)\n\t\t\t\t{\n\t\t\t\t\tleftCell = orderedCells[j];\n\t\t\t\t\tleftCellAboveConnections = leftCell\n\t\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\t\tleftCellBelowConnections = leftCell\n\t\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\t\t\t\t\tleftAbovePositions = [];\n\t\t\t\t\tleftBelowPositions = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellAboveConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftAbovePositions[k] = leftCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < leftCellBelowConnections.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tleftBelowPositions[k] = leftCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftCellAboveConnections = rightCellAboveConnections;\n\t\t\t\t\tleftCellBelowConnections = rightCellBelowConnections;\n\t\t\t\t\tleftAbovePositions = rightAbovePositions;\n\t\t\t\t\tleftBelowPositions = rightBelowPositions;\n\t\t\t\t\tleftCell = rightCell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trightCell = orderedCells[j + 1];\n\t\t\t\trightCellAboveConnections = rightCell\n\t\t\t\t\t\t.getNextLayerConnectedCells(i);\n\t\t\t\trightCellBelowConnections = rightCell\n\t\t\t\t\t\t.getPreviousLayerConnectedCells(i);\n\n\t\t\t\trightAbovePositions = [];\n\t\t\t\trightBelowPositions = [];\n\n\t\t\t\tfor (var k = 0; k < rightCellAboveConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightAbovePositions[k] = rightCellAboveConnections[k].getGeneralPurposeVariable(i + 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < rightCellBelowConnections.length; k++)\n\t\t\t\t{\n\t\t\t\t\trightBelowPositions[k] = rightCellBelowConnections[k].getGeneralPurposeVariable(i - 1);\n\t\t\t\t}\n\n\t\t\t\tvar totalCurrentCrossings = 0;\n\t\t\t\tvar totalSwitchedCrossings = 0;\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftAbovePositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightAbovePositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftAbovePositions[k] > rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftAbovePositions[k] < rightAbovePositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var k = 0; k < leftBelowPositions.length; k++)\n\t\t\t\t{\n\t\t\t\t\tfor (var ik = 0; ik < rightBelowPositions.length; ik++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (leftBelowPositions[k] > rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalCurrentCrossings++;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (leftBelowPositions[k] < rightBelowPositions[ik])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttotalSwitchedCrossings++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((totalSwitchedCrossings < totalCurrentCrossings) ||\n\t\t\t\t\t(totalSwitchedCrossings == totalCurrentCrossings &&\n\t\t\t\t\tnudge))\n\t\t\t\t{\n\t\t\t\t\tvar temp = leftCell.getGeneralPurposeVariable(i);\n\t\t\t\t\tleftCell.setGeneralPurposeVariable(i, rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(i));\n\t\t\t\t\trightCell.setGeneralPurposeVariable(i, temp);\n\n\t\t\t\t\t// With this pair exchanged we have to switch all of\n\t\t\t\t\t// values for the left cell to the right cell so the\n\t\t\t\t\t// next iteration for this rank uses it as the left\n\t\t\t\t\t// cell again\n\t\t\t\t\trightCellAboveConnections = leftCellAboveConnections;\n\t\t\t\t\trightCellBelowConnections = leftCellBelowConnections;\n\t\t\t\t\trightAbovePositions = leftAbovePositions;\n\t\t\t\t\trightBelowPositions = leftBelowPositions;\n\t\t\t\t\trightCell = leftCell;\n\t\t\t\t\t\n\t\t\t\t\tif (!nudge)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Don't count nudges as improvement or we'll end\n\t\t\t\t\t\t// up stuck in two combinations and not finishing\n\t\t\t\t\t\t// as early as we should\n\t\t\t\t\t\timproved = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: weightedMedian\n * \n * Sweeps up or down the layout attempting to minimise the median placement\n * of connected cells on adjacent ranks\n * \n * Parameters:\n * \n * iteration - the iteration number of the main loop\n * model - the internal model describing the hierarchy\n */\nmxMedianHybridCrossingReduction.prototype.weightedMedian = function(iteration, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (iteration % 2 == 0);\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank - 1; j >= 0; j--)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 1; j < model.maxRank; j++)\n\t\t{\n\t\t\tthis.medianRank(j, downwardSweep);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianRank\n * \n * Attempts to minimise the median placement of connected cells on this rank\n * and one of the adjacent ranks\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * downwardSweep - whether or not this is a downward sweep through the graph\n */\nmxMedianHybridCrossingReduction.prototype.medianRank = function(rankValue, downwardSweep)\n{\n\tvar numCellsForRank = this.nestedBestRanks[rankValue].length;\n\tvar medianValues = [];\n\tvar reservedPositions = [];\n\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tvar cell = this.nestedBestRanks[rankValue][i];\n\t\tvar sorterEntry = new MedianCellSorter();\n\t\tsorterEntry.cell = cell;\n\n\t\t// Flip whether or not equal medians are flipped on up and down\n\t\t// sweeps\n\t\t// TODO re-implement some kind of nudge\n\t\t// medianValues[i].nudge = !downwardSweep;\n\t\tvar nextLevelConnectedCells;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLevelConnectedCells = cell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\t\n\t\tvar nextRankValue;\n\t\t\n\t\tif (downwardSweep)\n\t\t{\n\t\t\tnextRankValue = rankValue + 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextRankValue = rankValue - 1;\n\t\t}\n\n\t\tif (nextLevelConnectedCells != null\n\t\t\t\t&& nextLevelConnectedCells.length != 0)\n\t\t{\n\t\t\tsorterEntry.medianValue = this.medianValue(\n\t\t\t\t\tnextLevelConnectedCells, nextRankValue);\n\t\t\tmedianValues.push(sorterEntry);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Nodes with no adjacent vertices are flagged in the reserved array\n\t\t\t// to indicate they should be left in their current position.\n\t\t\treservedPositions[cell.getGeneralPurposeVariable(rankValue)] = true;\n\t\t}\n\t}\n\t\n\tmedianValues.sort(MedianCellSorter.prototype.compare);\n\t\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\tfor (var i = 0; i < numCellsForRank; i++)\n\t{\n\t\tif (reservedPositions[i] == null)\n\t\t{\n\t\t\tvar cell = medianValues.shift().cell;\n\t\t\tcell.setGeneralPurposeVariable(rankValue, i);\n\t\t}\n\t}\n};\n\n/**\n * Function: medianValue\n * \n * Calculates the median rank order positioning for the specified cell using\n * the connected cells on the specified rank. Returns the median rank\n * ordering value of the connected cells\n * \n * Parameters:\n * \n * connectedCells - the cells on the specified rank connected to the\n * specified cell\n * rankValue - the rank that the connected cell lie upon\n */\nmxMedianHybridCrossingReduction.prototype.medianValue = function(connectedCells, rankValue)\n{\n\tvar medianValues = [];\n\tvar arrayCount = 0;\n\t\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tvar cell = connectedCells[i];\n\t\tmedianValues[arrayCount++] = cell.getGeneralPurposeVariable(rankValue);\n\t}\n\n\t// Sort() sorts lexicographically by default (i.e. 11 before 9) so force\n\t// numerical order sort\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (arrayCount % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(arrayCount / 2)];\n\t}\n\telse if (arrayCount == 2)\n\t{\n\t\treturn ((medianValues[0] + medianValues[1]) / 2.0);\n\t}\n\telse\n\t{\n\t\tvar medianPoint = arrayCount / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n\t\tvar rightMedian = medianValues[arrayCount - 1]\n\t\t\t\t- medianValues[medianPoint];\n\n\t\treturn (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint]\n\t\t\t\t* leftMedian)\n\t\t\t\t/ (leftMedian + rightMedian);\n\t}\n};\n\n/**\n * Class: MedianCellSorter\n * \n * A utility class used to track cells whilst sorting occurs on the median\n * values. Does not violate (x.compareTo(y)==0) == (x.equals(y))\n *\n * Constructor: MedianCellSorter\n * \n * Constructs a new median cell sorter.\n */\nfunction MedianCellSorter()\n{\n\t// empty\n};\n\n/**\n * Variable: medianValue\n * \n * The weighted value of the cell stored.\n */\nMedianCellSorter.prototype.medianValue = 0;\n\n/**\n * Variable: cell\n * \n * The cell whose median value is being calculated\n */\nMedianCellSorter.prototype.cell = false;\n\n/**\n * Function: compare\n * \n * Compares two MedianCellSorters.\n */\nMedianCellSorter.prototype.compare = function(a, b)\n{\n\tif (a != null && b != null)\n\t{\n\t\tif (b.medianValue > a.medianValue)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\t\telse if (b.medianValue < a.medianValue)\n\t\t{\n\t\t\treturn 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\t}\n\telse\n\t{\n\t\treturn 0;\n\t}\n};\n\n__mxOutput.mxMedianHybridCrossingReduction = typeof mxMedianHybridCrossingReduction !== 'undefined' ? mxMedianHybridCrossingReduction : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMinimumCycleRemover\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxMinimumCycleRemover\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxMinimumCycleRemover(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxMinimumCycleRemover.prototype = new mxHierarchicalLayoutStage();\nmxMinimumCycleRemover.prototype.constructor = mxMinimumCycleRemover;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxMinimumCycleRemover.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxMinimumCycleRemover.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodesArray = model.vertexMapper.getValues();\n\tvar unseenNodes = new Object();\n\t\n\tfor (var i = 0; i < unseenNodesArray.length; i++)\n\t{\n\t\tunseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n\t}\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, rootsArray, true, null);\n\n\t// If there are any nodes that should be nodes that the dfs can miss\n\t// these need to be processed with the dfs and the roots assigned\n\t// correctly to form a correct internal model\n\tvar seenNodesCopy = mxUtils.clone(seenNodes, null, true);\n\n\t// Pick a random cell and dfs from it\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\tif (node.isAncestor(parent))\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\t\n\t\tseenNodes[node.id] = node;\n\t\tdelete unseenNodes[node.id];\n\t}, unseenNodes, true, seenNodesCopy);\n};\n\n__mxOutput.mxMinimumCycleRemover = typeof mxMinimumCycleRemover !== 'undefined' ? mxMinimumCycleRemover : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxCoordinateAssignment\n * \n * Sets the horizontal locations of node and edge dummy nodes on each layer.\n * Uses median down and up weighings as well as heuristics to straighten edges as\n * far as possible.\n * \n * Constructor: mxCoordinateAssignment\n *\n * Creates a coordinate assignment.\n * \n * Arguments:\n * \n * intraCellSpacing - the minimum buffer between cells on the same rank\n * interRankCellSpacing - the minimum distance between cells on adjacent ranks\n * orientation - the position of the root node(s) relative to the graph\n * initialX - the leftmost coordinate node placement starts at\n */\nfunction mxCoordinateAssignment(layout, intraCellSpacing, interRankCellSpacing,\n\torientation, initialX, parallelEdgeSpacing)\n{\n\tthis.layout = layout;\n\tthis.intraCellSpacing = intraCellSpacing;\n\tthis.interRankCellSpacing = interRankCellSpacing;\n\tthis.orientation = orientation;\n\tthis.initialX = initialX;\n\tthis.parallelEdgeSpacing = parallelEdgeSpacing;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxCoordinateAssignment.prototype = new mxHierarchicalLayoutStage();\nmxCoordinateAssignment.prototype.constructor = mxCoordinateAssignment;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxCoordinateAssignment.prototype.layout = null;\n\n/**\n * Variable: intraCellSpacing\n * \n * The minimum buffer between cells on the same rank. Default is 30.\n */\nmxCoordinateAssignment.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The minimum distance between cells on adjacent ranks. Default is 100.\n */\nmxCoordinateAssignment.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxCoordinateAssignment.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: maxIterations\n * \n * The number of heuristic iterations to run. Default is 8.\n */\nmxCoordinateAssignment.prototype.maxIterations = 8;\n\n/**\n * Variable: prefHozEdgeSep\n * \n * The preferred horizontal distance between edges exiting a vertex Default is 5.\n */\nmxCoordinateAssignment.prototype.prefHozEdgeSep = 5;\n\n/**\n * Variable: prefVertEdgeOff\n * \n * The preferred vertical offset between edges exiting a vertex Default is 2.\n */\nmxCoordinateAssignment.prototype.prefVertEdgeOff = 2;\n\n/**\n * Variable: minEdgeJetty\n * \n * The minimum distance for an edge jetty from a vertex Default is 12.\n */\nmxCoordinateAssignment.prototype.minEdgeJetty = 12;\n\n/**\n * Variable: channelBuffer\n * \n * The size of the vertical buffer in the center of inter-rank channels\n * where edge control points should not be placed Default is 4.\n */\nmxCoordinateAssignment.prototype.channelBuffer = 4;\n\n/**\n * Variable: jettyPositions\n * \n * Map of internal edges and (x,y) pair of positions of the start and end jetty\n * for that edge where it connects to the source and target vertices.\n * Note this should technically be a WeakHashMap, but since JS does not\n * have an equivalent, housekeeping must be performed before using.\n * i.e. check all edges are still in the model and clear the values.\n * Note that the y co-ord is the offset of the jetty, not the\n * absolute point\n */\nmxCoordinateAssignment.prototype.jettyPositions = null;\n\n/**\n * Variable: orientation\n * \n * The position of the root ( start ) node(s) relative to the rest of the\n * laid out graph. Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxCoordinateAssignment.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: initialX\n * \n * The minimum x position node placement starts at\n */\nmxCoordinateAssignment.prototype.initialX = null;\n\n/**\n * Variable: limitX\n * \n * The maximum x value this positioning lays up to\n */\nmxCoordinateAssignment.prototype.limitX = null;\n\n/**\n * Variable: currentXDelta\n * \n * The sum of x-displacements for the current iteration\n */\nmxCoordinateAssignment.prototype.currentXDelta = null;\n\n/**\n * Variable: widestRank\n * \n * The rank that has the widest x position\n */\nmxCoordinateAssignment.prototype.widestRank = null;\n\n/**\n * Variable: rankTopY\n * \n * Internal cache of top-most values of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankTopY = null;\n\n/**\n * Variable: rankBottomY\n * \n * Internal cache of bottom-most value of Y for each rank\n */\nmxCoordinateAssignment.prototype.rankBottomY = null;\n\n/**\n * Variable: widestRankValue\n * \n * The X-coordinate of the edge of the widest rank\n */\nmxCoordinateAssignment.prototype.widestRankValue = null;\n\n/**\n * Variable: rankWidths\n * \n * The width of all the ranks\n */\nmxCoordinateAssignment.prototype.rankWidths = null;\n\n/**\n * Variable: rankY\n * \n * The Y-coordinate of all the ranks\n */\nmxCoordinateAssignment.prototype.rankY = null;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxCoordinateAssignment.prototype.fineTuning = true;\n\n/**\n * Variable: nextLayerConnectedCache\n * \n * A store of connections to the layer above for speed\n */\nmxCoordinateAssignment.prototype.nextLayerConnectedCache = null;\n\n/**\n * Variable: previousLayerConnectedCache\n * \n * A store of connections to the layer below for speed\n */\nmxCoordinateAssignment.prototype.previousLayerConnectedCache = null;\n\n/**\n * Variable: groupPadding\n * \n * Padding added to resized parents Default is 10.\n */\nmxCoordinateAssignment.prototype.groupPadding = 10;\n\n/**\n * Utility method to display current positions\n */\nmxCoordinateAssignment.prototype.printStatus = function()\n{\n\tvar model = this.layout.getModel();\n\tmxLog.show();\n\n\tmxLog.writeln('======Coord assignment debug=======');\n\n\tfor (var j = 0; j < model.ranks.length; j++)\n\t{\n\t\tmxLog.write('Rank ', j, ' : ' );\n\t\tvar rank = model.ranks[j];\n\t\t\n\t\tfor (var k = 0; k < rank.length; k++)\n\t\t{\n\t\t\tvar cell = rank[k];\n\t\t\t\n\t\t\tmxLog.write(cell.getGeneralPurposeVariable(j), '  ');\n\t\t}\n\t\tmxLog.writeln();\n\t}\n\t\n\tmxLog.writeln('====================================');\n};\n\n/**\n * Function: execute\n * \n * A basic horizontal coordinate assignment algorithm\n */\nmxCoordinateAssignment.prototype.execute = function(parent)\n{\n\tthis.jettyPositions = Object();\n\tvar model = this.layout.getModel();\n\tthis.currentXDelta = 0.0;\n\n\tthis.initialCoords(this.layout.getGraph(), model);\n\t\n//\tthis.printStatus();\n\t\n\tif (this.fineTuning)\n\t{\n\t\tthis.minNode(model);\n\t}\n\t\n\tvar bestXDelta = 100000000.0;\n\t\n\tif (this.fineTuning)\n\t{\n\t\tfor (var i = 0; i < this.maxIterations; i++)\n\t\t{\n//\t\t\tthis.printStatus();\n\t\t\n\t\t\t// Median Heuristic\n\t\t\tif (i != 0)\n\t\t\t{\n\t\t\t\tthis.medianPos(i, model);\n\t\t\t\tthis.minNode(model);\n\t\t\t}\n\t\t\t\n\t\t\t// if the total offset is less for the current positioning,\n\t\t\t// there are less heavily angled edges and so the current\n\t\t\t// positioning is used\n\t\t\tif (this.currentXDelta < bestXDelta)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setX(j, cell.getGeneralPurposeVariable(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbestXDelta = this.currentXDelta;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Restore the best positions\n\t\t\t\tfor (var j = 0; j < model.ranks.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar rank = model.ranks[j];\n\t\t\t\t\t\n\t\t\t\t\tfor (var k = 0; k < rank.length; k++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar cell = rank[k];\n\t\t\t\t\t\tcell.setGeneralPurposeVariable(j, cell.getX(j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.minPath(this.layout.getGraph(), model);\n\t\t\t\n\t\t\tthis.currentXDelta = 0;\n\t\t}\n\t}\n\t\n\tthis.setCellLocations(this.layout.getGraph(), model);\n};\n\n/**\n * Function: minNode\n * \n * Performs one median positioning sweep in both directions\n */\nmxCoordinateAssignment.prototype.minNode = function(model)\n{\n\t// Queue all nodes\n\tvar nodeList = [];\n\t\n\t// Need to be able to map from cell to cellWrapper\n\tvar map = new mxDictionary();\n\tvar rank = [];\n\t\n\tfor (var i = 0; i <= model.maxRank; i++)\n\t{\n\t\trank[i] = model.ranks[i];\n\t\t\n\t\tfor (var j = 0; j < rank[i].length; j++)\n\t\t{\n\t\t\t// Use the weight to store the rank and visited to store whether\n\t\t\t// or not the cell is in the list\n\t\t\tvar node = rank[i][j];\n\t\t\tvar nodeWrapper = new WeightedCellSorter(node, i);\n\t\t\tnodeWrapper.rankIndex = j;\n\t\t\tnodeWrapper.visited = true;\n\t\t\tnodeList.push(nodeWrapper);\n\t\t\t\n\t\t\tmap.put(node, nodeWrapper);\n\t\t}\n\t}\n\t\n\t// Set a limit of the maximum number of times we will access the queue\n\t// in case a loop appears\n\tvar maxTries = nodeList.length * 10;\n\tvar count = 0;\n\t\n\t// Don't move cell within this value of their median\n\tvar tolerance = 1;\n\t\n\twhile (nodeList.length > 0 && count <= maxTries)\n\t{\n\t\tvar cellWrapper = nodeList.shift();\n\t\tvar cell = cellWrapper.cell;\n\t\t\n\t\tvar rankValue = cellWrapper.weightedValue;\n\t\tvar rankIndex = parseInt(cellWrapper.rankIndex);\n\t\t\n\t\tvar nextLayerConnectedCells = cell.getNextLayerConnectedCells(rankValue);\n\t\tvar previousLayerConnectedCells = cell.getPreviousLayerConnectedCells(rankValue);\n\t\t\n\t\tvar numNextLayerConnected = nextLayerConnectedCells.length;\n\t\tvar numPreviousLayerConnected = previousLayerConnectedCells.length;\n\n\t\tvar medianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\trankValue + 1);\n\t\tvar medianPreviousLevel = this.medianXValue(previousLayerConnectedCells,\n\t\t\t\trankValue - 1);\n\n\t\tvar numConnectedNeighbours = numNextLayerConnected\n\t\t\t\t+ numPreviousLayerConnected;\n\t\tvar currentPosition = cell.getGeneralPurposeVariable(rankValue);\n\t\tvar cellMedian = currentPosition;\n\t\t\n\t\tif (numConnectedNeighbours > 0)\n\t\t{\n\t\t\tcellMedian = (medianNextLevel * numNextLayerConnected + medianPreviousLevel\n\t\t\t\t\t* numPreviousLayerConnected)\n\t\t\t\t\t/ numConnectedNeighbours;\n\t\t}\n\n\t\t// Flag storing whether or not position has changed\n\t\tvar positionChanged = false;\n\t\t\n\t\tif (cellMedian < currentPosition - tolerance)\n\t\t{\n\t\t\tif (rankIndex == 0)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar leftCell = rank[rankValue][rankIndex - 1];\n\t\t\t\tvar leftLimit = leftCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\t\t\tif (leftLimit < cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (leftLimit < cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t- tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (cellMedian > currentPosition + tolerance)\n\t\t{\n\t\t\tvar rankSize = rank[rankValue].length;\n\t\t\t\n\t\t\tif (rankIndex == rankSize - 1)\n\t\t\t{\n\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\tpositionChanged = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar rightCell = rank[rankValue][rankIndex + 1];\n\t\t\t\tvar rightLimit = rightCell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue);\n\t\t\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\t\t\t\t\n\t\t\t\tif (rightLimit > cellMedian)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, cellMedian);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t\telse if (rightLimit > cell\n\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t+ tolerance)\n\t\t\t\t{\n\t\t\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\t\t\tpositionChanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (positionChanged)\n\t\t{\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < nextLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = nextLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\t\t\t\t\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add connected nodes to map and list\n\t\t\tfor (var i = 0; i < previousLayerConnectedCells.length; i++)\n\t\t\t{\n\t\t\t\tvar connectedCell = previousLayerConnectedCells[i];\n\t\t\t\tvar connectedCellWrapper = map.get(connectedCell);\n\n\t\t\t\tif (connectedCellWrapper != null)\n\t\t\t\t{\n\t\t\t\t\tif (connectedCellWrapper.visited == false)\n\t\t\t\t\t{\n\t\t\t\t\t\tconnectedCellWrapper.visited = true;\n\t\t\t\t\t\tnodeList.push(connectedCellWrapper);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tcellWrapper.visited = false;\n\t\tcount++;\n\t}\n};\n\n/**\n * Function: medianPos\n * \n * Performs one median positioning sweep in one direction\n * \n * Parameters:\n * \n * i - the iteration of the whole process\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.medianPos = function(i, model)\n{\n\t// Reverse sweep direction each time through this method\n\tvar downwardSweep = (i % 2 == 0);\n\t\n\tif (downwardSweep)\n\t{\n\t\tfor (var j = model.maxRank; j > 0; j--)\n\t\t{\n\t\t\tthis.rankMedianPosition(j - 1, model, j);\n\t\t}\n\t}\n\telse\n\t{\n\t\tfor (var j = 0; j < model.maxRank - 1; j++)\n\t\t{\n\t\t\tthis.rankMedianPosition(j + 1, model, j);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankMedianPosition\n * \n * Performs median minimisation over one rank.\n * \n * Parameters:\n * \n * rankValue - the layer number of this rank\n * model - an internal model of the hierarchical layout\n * nextRankValue - the layer number whose connected cels are to be laid out\n * relative to\n */\nmxCoordinateAssignment.prototype.rankMedianPosition = function(rankValue, model, nextRankValue)\n{\n\tvar rank = model.ranks[rankValue];\n\n\t// Form an array of the order in which the cell are to be processed\n\t// , the order is given by the weighted sum of the in or out edges,\n\t// depending on whether we're traveling up or down the hierarchy.\n\tvar weightedValues = [];\n\tvar cellMap = new Object();\n\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar currentCell = rank[i];\n\t\tweightedValues[i] = new WeightedCellSorter();\n\t\tweightedValues[i].cell = currentCell;\n\t\tweightedValues[i].rankIndex = i;\n\t\tcellMap[currentCell.id] = weightedValues[i];\n\t\tvar nextLayerConnectedCells = null;\n\t\t\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getPreviousLayerConnectedCells(rankValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = currentCell\n\t\t\t\t\t.getNextLayerConnectedCells(rankValue);\n\t\t}\n\n\t\t// Calculate the weighing based on this node type and those this\n\t\t// node is connected to on the next layer\n\t\tweightedValues[i].weightedValue = this.calculatedWeightedValue(\n\t\t\t\tcurrentCell, nextLayerConnectedCells);\n\t}\n\n\tweightedValues.sort(WeightedCellSorter.prototype.compare);\n\n\t// Set the new position of each node within the rank using\n\t// its temp variable\n\t\n\tfor (var i = 0; i < weightedValues.length; i++)\n\t{\n\t\tvar numConnectionsNextLevel = 0;\n\t\tvar cell = weightedValues[i].cell;\n\t\tvar nextLayerConnectedCells = null;\n\t\tvar medianNextLevel = 0;\n\n\t\tif (nextRankValue < rankValue)\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getPreviousLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnextLayerConnectedCells = cell.getNextLayerConnectedCells(\n\t\t\t\t\trankValue).slice();\n\t\t}\n\n\t\tif (nextLayerConnectedCells != null)\n\t\t{\n\t\t\tnumConnectionsNextLevel = nextLayerConnectedCells.length;\n\t\t\t\n\t\t\tif (numConnectionsNextLevel > 0)\n\t\t\t{\n\t\t\t\tmedianNextLevel = this.medianXValue(nextLayerConnectedCells,\n\t\t\t\t\t\tnextRankValue);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// For case of no connections on the next level set the\n\t\t\t\t// median to be the current position and try to be\n\t\t\t\t// positioned there\n\t\t\t\tmedianNextLevel = cell.getGeneralPurposeVariable(rankValue);\n\t\t\t}\n\t\t}\n\n\t\tvar leftBuffer = 0.0;\n\t\tvar leftLimit = -100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex - 1; j >= 0;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar leftCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\tleftLimit = leftCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t+ leftCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t+ this.intraCellSpacing\n\t\t\t\t\t\t\t+ leftBuffer + cell.width / 2.0;\n\t\t\t\t\tj = -1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tleftBuffer += leftCell.width + this.intraCellSpacing;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar rightBuffer = 0.0;\n\t\tvar rightLimit = 100000000.0;\n\t\t\n\t\tfor (var j = weightedValues[i].rankIndex + 1; j < weightedValues.length;)\n\t\t{\n\t\t\tvar weightedValue = cellMap[rank[j].id];\n\t\t\t\n\t\t\tif (weightedValue != null)\n\t\t\t{\n\t\t\t\tvar rightCell = weightedValue.cell;\n\t\t\t\t\n\t\t\t\tif (weightedValue.visited)\n\t\t\t\t{\n\t\t\t\t\t// The left limit is the right hand limit of that\n\t\t\t\t\t// cell plus any allowance for unallocated cells\n\t\t\t\t\t// in-between\n\t\t\t\t\trightLimit = rightCell\n\t\t\t\t\t\t\t.getGeneralPurposeVariable(rankValue)\n\t\t\t\t\t\t\t- rightCell.width\n\t\t\t\t\t\t\t/ 2.0\n\t\t\t\t\t\t\t- this.intraCellSpacing\n\t\t\t\t\t\t\t- rightBuffer - cell.width / 2.0;\n\t\t\t\t\tj = weightedValues.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trightBuffer += rightCell.width + this.intraCellSpacing;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (medianNextLevel >= leftLimit && medianNextLevel <= rightLimit)\n\t\t{\n\t\t\tcell.setGeneralPurposeVariable(rankValue, medianNextLevel);\n\t\t}\n\t\telse if (medianNextLevel < leftLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, leftLimit);\n\t\t\tthis.currentXDelta += leftLimit - medianNextLevel;\n\t\t}\n\t\telse if (medianNextLevel > rightLimit)\n\t\t{\n\t\t\t// Couldn't place at median value, place as close to that\n\t\t\t// value as possible\n\t\t\tcell.setGeneralPurposeVariable(rankValue, rightLimit);\n\t\t\tthis.currentXDelta += medianNextLevel - rightLimit;\n\t\t}\n\n\t\tweightedValues[i].visited = true;\n\t}\n};\n\n/**\n * Function: calculatedWeightedValue\n * \n * Calculates the priority the specified cell has based on the type of its\n * cell and the cells it is connected to on the next layer\n * \n * Parameters:\n * \n * currentCell - the cell whose weight is to be calculated\n * collection - the cells the specified cell is connected to\n */\nmxCoordinateAssignment.prototype.calculatedWeightedValue = function(currentCell, collection)\n{\n\tvar totalWeight = 0;\n\t\n\tfor (var i = 0; i < collection.length; i++)\n\t{\n\t\tvar cell = collection[i];\n\n\t\tif (currentCell.isVertex() && cell.isVertex())\n\t\t{\n\t\t\ttotalWeight++;\n\t\t}\n\t\telse if (currentCell.isEdge() && cell.isEdge())\n\t\t{\n\t\t\ttotalWeight += 8;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttotalWeight += 2;\n\t\t}\n\t}\n\n\treturn totalWeight;\n};\n\n/**\n * Function: medianXValue\n * \n * Calculates the median position of the connected cell on the specified\n * rank\n * \n * Parameters:\n * \n * connectedCells - the cells the candidate connects to on this level\n * rankValue - the layer number of this rank\n */\nmxCoordinateAssignment.prototype.medianXValue = function(connectedCells, rankValue)\n{\n\tif (connectedCells.length == 0)\n\t{\n\t\treturn 0;\n\t}\n\n\tvar medianValues = [];\n\n\tfor (var i = 0; i < connectedCells.length; i++)\n\t{\n\t\tmedianValues[i] = connectedCells[i].getGeneralPurposeVariable(rankValue);\n\t}\n\n\tmedianValues.sort(function(a,b){return a - b;});\n\t\n\tif (connectedCells.length % 2 == 1)\n\t{\n\t\t// For odd numbers of adjacent vertices return the median\n\t\treturn medianValues[Math.floor(connectedCells.length / 2)];\n\t}\n\telse\n\t{\n\t\tvar medianPoint = connectedCells.length / 2;\n\t\tvar leftMedian = medianValues[medianPoint - 1];\n\t\tvar rightMedian = medianValues[medianPoint];\n\n\t\treturn ((leftMedian + rightMedian) / 2);\n\t}\n};\n\n/**\n * Function: initialCoords\n * \n * Sets up the layout in an initial positioning. The ranks are all centered\n * as much as possible along the middle vertex in each rank. The other cells\n * are then placed as close as possible on either side.\n * \n * Parameters:\n * \n * facade - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.initialCoords = function(facade, model)\n{\n\tthis.calculateWidestRank(facade, model);\n\n\t// Sweep up and down from the widest rank\n\tfor (var i = this.widestRank; i >= 0; i--)\n\t{\n\t\tif (i < model.maxRank)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n\n\tfor (var i = this.widestRank+1; i <= model.maxRank; i++)\n\t{\n\t\tif (i > 0)\n\t\t{\n\t\t\tthis.rankCoordinates(i, facade, model);\n\t\t}\n\t}\n};\n\n/**\n * Function: rankCoordinates\n * \n * Sets up the layout in an initial positioning. All the first cells in each\n * rank are moved to the left and the rest of the rank inserted as close\n * together as their size and buffering permits. This method works on just\n * the specified rank.\n * \n * Parameters:\n * \n * rankValue - the current rank being processed\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.rankCoordinates = function(rankValue, graph, model)\n{\n\tvar rank = model.ranks[rankValue];\n\tvar maxY = 0.0;\n\tvar localX = this.initialX + (this.widestRankValue - this.rankWidths[rankValue])\n\t\t\t/ 2;\n\n\t// Store whether or not any of the cells' bounds were unavailable so\n\t// to only issue the warning once for all cells\n\tvar boundsWarning = false;\n\t\n\tfor (var i = 0; i < rank.length; i++)\n\t{\n\t\tvar node = rank[i];\n\t\t\n\t\tif (node.isVertex())\n\t\t{\n\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tboundsWarning = true;\n\t\t\t}\n\n\t\t\tmaxY = Math.max(maxY, node.height);\n\t\t}\n\t\telse if (node.isEdge())\n\t\t{\n\t\t\t// The width is the number of additional parallel edges\n\t\t\t// time the parallel edge spacing\n\t\t\tvar numEdges = 1;\n\n\t\t\tif (node.edges != null)\n\t\t\t{\n\t\t\t\tnumEdges = node.edges.length;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t}\n\n\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t}\n\n\t\t// Set the initial x-value as being the best result so far\n\t\tlocalX += node.width / 2.0;\n\t\tnode.setX(rankValue, localX);\n\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\tlocalX += node.width / 2.0;\n\t\tlocalX += this.intraCellSpacing;\n\t}\n\n\tif (boundsWarning == true)\n\t{\n\t\tmxLog.warn('At least one cell has no bounds');\n\t}\n};\n\n/**\n * Function: calculateWidestRank\n * \n * Calculates the width rank in the hierarchy. Also set the y value of each\n * rank whilst performing the calculation\n * \n * Parameters:\n * \n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.calculateWidestRank = function(graph, model)\n{\n\t// Starting y co-ordinate\n\tvar y = -this.interRankCellSpacing;\n\t\n\t// Track the widest cell on the last rank since the y\n\t// difference depends on it\n\tvar lastRankMaxCellHeight = 0.0;\n\tthis.rankWidths = [];\n\tthis.rankY = [];\n\n\tfor (var rankValue = model.maxRank; rankValue >= 0; rankValue--)\n\t{\n\t\t// Keep track of the widest cell on this rank\n\t\tvar maxCellHeight = 0.0;\n\t\tvar rank = model.ranks[rankValue];\n\t\tvar localX = this.initialX;\n\n\t\t// Store whether or not any of the cells' bounds were unavailable so\n\t\t// to only issue the warning once for all cells\n\t\tvar boundsWarning = false;\n\t\t\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar node = rank[i];\n\n\t\t\tif (node.isVertex())\n\t\t\t{\n\t\t\t\tvar bounds = this.layout.getVertexBounds(node.cell);\n\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.width;\n\t\t\t\t\t\tnode.height = bounds.height;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.width = bounds.height;\n\t\t\t\t\t\tnode.height = bounds.width;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tboundsWarning = true;\n\t\t\t\t}\n\n\t\t\t\tmaxCellHeight = Math.max(maxCellHeight, node.height);\n\t\t\t}\n\t\t\telse if (node.isEdge())\n\t\t\t{\n\t\t\t\t// The width is the number of additional parallel edges\n\t\t\t\t// time the parallel edge spacing\n\t\t\t\tvar numEdges = 1;\n\n\t\t\t\tif (node.edges != null)\n\t\t\t\t{\n\t\t\t\t\tnumEdges = node.edges.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmxLog.warn('edge.edges is null');\n\t\t\t\t}\n\n\t\t\t\tnode.width = (numEdges - 1) * this.parallelEdgeSpacing;\n\t\t\t}\n\n\t\t\t// Set the initial x-value as being the best result so far\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tnode.setX(rankValue, localX);\n\t\t\tnode.setGeneralPurposeVariable(rankValue, localX);\n\t\t\tlocalX += node.width / 2.0;\n\t\t\tlocalX += this.intraCellSpacing;\n\n\t\t\tif (localX > this.widestRankValue)\n\t\t\t{\n\t\t\t\tthis.widestRankValue = localX;\n\t\t\t\tthis.widestRank = rankValue;\n\t\t\t}\n\n\t\t\tthis.rankWidths[rankValue] = localX;\n\t\t}\n\n\t\tif (boundsWarning == true)\n\t\t{\n\t\t\tmxLog.warn('At least one cell has no bounds');\n\t\t}\n\n\t\tthis.rankY[rankValue] = y;\n\t\tvar distanceToNextRank = maxCellHeight / 2.0\n\t\t\t\t+ lastRankMaxCellHeight / 2.0 + this.interRankCellSpacing;\n\t\tlastRankMaxCellHeight = maxCellHeight;\n\n\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\tthis.orientation == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\ty += distanceToNextRank;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ty -= distanceToNextRank;\n\t\t}\n\n\t\tfor (var i = 0; i < rank.length; i++)\n\t\t{\n\t\t\tvar cell = rank[i];\n\t\t\tcell.setY(rankValue, y);\n\t\t}\n\t}\n};\n\n/**\n * Function: minPath\n * \n * Straightens out chains of virtual nodes where possibleacade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the facade describing the input graph\n * model - an internal model of the hierarchical layout\n */\nmxCoordinateAssignment.prototype.minPath = function(graph, model)\n{\n\t// Work down and up each edge with at least 2 control points\n\t// trying to straighten each one out. If the same number of\n\t// straight segments are formed in both directions, the \n\t// preferred direction used is the one where the final\n\t// control points have the least offset from the connectable \n\t// region of the terminating vertices\n\tvar edges = model.edgeMapper.getValues();\n\t\n\tfor (var j = 0; j < edges.length; j++)\n\t{\n\t\tvar cell = edges[j];\n\t\t\n\t\tif (cell.maxRank - cell.minRank - 1 < 1)\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At least two virtual nodes in the edge\n\t\t// Check first whether the edge is already straight\n\t\tvar referenceX = cell\n\t\t\t\t.getGeneralPurposeVariable(cell.minRank + 1);\n\t\tvar edgeStraight = true;\n\t\tvar refSegCount = 0;\n\t\t\n\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t{\n\t\t\tvar x = cell.getGeneralPurposeVariable(i);\n\n\t\t\tif (referenceX != x)\n\t\t\t{\n\t\t\t\tedgeStraight = false;\n\t\t\t\treferenceX = x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\trefSegCount++;\n\t\t\t}\n\t\t}\n\n\t\tif (!edgeStraight)\n\t\t{\n\t\t\tvar upSegCount = 0;\n\t\t\tvar downSegCount = 0;\n\t\t\tvar upXPositions = [];\n\t\t\tvar downXPositions = [];\n\n\t\t\tvar currentX = cell.getGeneralPurposeVariable(cell.minRank + 1);\n\n\t\t\tfor (var i = cell.minRank + 1; i < cell.maxRank - 1; i++)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment up with the current control point.\n\t\t\t\tvar nextX = cell.getX(i + 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i + 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = currentX;\n\t\t\t\t\tupSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tupXPositions[i - cell.minRank - 1] = nextX;\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\tcurrentX = cell.getX(i);\n\n\t\t\tfor (var i = cell.maxRank - 1; i > cell.minRank + 1; i--)\n\t\t\t{\n\t\t\t\t// Attempt to straight out the control point on the\n\t\t\t\t// next segment down with the current control point.\n\t\t\t\tvar nextX = cell.getX(i - 1);\n\n\t\t\t\tif (currentX == nextX)\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t}\n\t\t\t\telse if (this.repositionValid(model, cell, i - 1, currentX))\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = currentX;\n\t\t\t\t\tdownSegCount++;\n\t\t\t\t\t// Leave currentX at same value\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdownXPositions[i - cell.minRank - 2] = cell.getX(i-1);\n\t\t\t\t\tcurrentX = nextX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (downSegCount > refSegCount || upSegCount > refSegCount)\n\t\t\t{\n\t\t\t\tif (downSegCount >= upSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply down calculation values\n\t\t\t\t\tfor (var i = cell.maxRank - 2; i > cell.minRank; i--)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, downXPositions[i - cell.minRank - 1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (upSegCount > downSegCount)\n\t\t\t\t{\n\t\t\t\t\t// Apply up calculation values\n\t\t\t\t\tfor (var i = cell.minRank + 2; i < cell.maxRank; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell.setX(i, upXPositions[i - cell.minRank - 2]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Neither direction provided a favourable result\n\t\t\t\t\t// But both calculations are better than the\n\t\t\t\t\t// existing solution, so apply the one with minimal\n\t\t\t\t\t// offset to attached vertices at either end.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: repositionValid\n * \n * Determines whether or not a node may be moved to the specified x \n * position on the specified rank\n * \n * Parameters:\n *\n * model - the layout model\n * cell - the cell being analysed\n * rank - the layer of the cell\n * position - the x position being sought\n */\nmxCoordinateAssignment.prototype.repositionValid = function(model, cell, rank, position)\n{\n\tvar rankArray = model.ranks[rank];\n\tvar rankIndex = -1;\n\n\tfor (var i = 0; i < rankArray.length; i++)\n\t{\n\t\tif (cell == rankArray[i])\n\t\t{\n\t\t\trankIndex = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (rankIndex < 0)\n\t{\n\t\treturn false;\n\t}\n\n\tvar currentX = cell.getGeneralPurposeVariable(rank);\n\n\tif (position < currentX)\n\t{\n\t\t// Trying to move node to the left.\n\t\tif (rankIndex == 0)\n\t\t{\n\t\t\t// Left-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar leftCell = rankArray[rankIndex - 1];\n\t\tvar leftLimit = leftCell.getGeneralPurposeVariable(rank);\n\t\tleftLimit = leftLimit + leftCell.width / 2\n\t\t\t\t+ this.intraCellSpacing + cell.width / 2;\n\n\t\tif (leftLimit <= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (position > currentX)\n\t{\n\t\t// Trying to move node to the right.\n\t\tif (rankIndex == rankArray.length - 1)\n\t\t{\n\t\t\t// Right-most node, can move anywhere\n\t\t\treturn true;\n\t\t}\n\n\t\tvar rightCell = rankArray[rankIndex + 1];\n\t\tvar rightLimit = rightCell.getGeneralPurposeVariable(rank);\n\t\trightLimit = rightLimit - rightCell.width / 2\n\t\t\t\t- this.intraCellSpacing - cell.width / 2;\n\n\t\tif (rightLimit >= position)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n * Function: setCellLocations\n * \n * Sets the cell locations in the facade to those stored after this layout\n * processing step has completed.\n * \n * Parameters:\n *\n * graph - the input graph\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.setCellLocations = function(graph, model)\n{\n\tthis.rankTopY = [];\n\tthis.rankBottomY = [];\n\n\tfor (var i = 0; i < model.ranks.length; i++)\n\t{\n\t\tthis.rankTopY[i] = Number.MAX_VALUE;\n\t\tthis.rankBottomY[i] = -Number.MAX_VALUE;\n\t}\n\t\n\tvar vertices = model.vertexMapper.getValues();\n\n\t// Process vertices all first, since they define the lower and \n\t// limits of each rank. Between these limits lie the channels\n\t// where the edges can be routed across the graph\n\n\tfor (var i = 0; i < vertices.length; i++)\n\t{\n\t\tthis.setVertexLocation(vertices[i]);\n\t}\n\t\n\t// Post process edge styles. Needs the vertex locations set for initial\n\t// values of the top and bottoms of each rank\n\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.ORTHOGONAL\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.POLYLINE\n\t\t\t|| this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t{\n\t\tthis.localEdgeProcessing(model);\n\t}\n\n\tvar edges = model.edgeMapper.getValues();\n\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tthis.setEdgePosition(edges[i]);\n\t}\n};\n\n/**\n * Function: localEdgeProcessing\n * \n * Separates the x position of edges as they connect to vertices\n * \n * Parameters:\n *\n * model - the layout model\n */\nmxCoordinateAssignment.prototype.localEdgeProcessing = function(model)\n{\n\t// Iterate through each vertex, look at the edges connected in\n\t// both directions.\n\tfor (var rankIndex = 0; rankIndex < model.ranks.length; rankIndex++)\n\t{\n\t\tvar rank = model.ranks[rankIndex];\n\n\t\tfor (var cellIndex = 0; cellIndex < rank.length; cellIndex++)\n\t\t{\n\t\t\tvar cell = rank[cellIndex];\n\n\t\t\tif (cell.isVertex())\n\t\t\t{\n\t\t\t\tvar currentCells = cell.getPreviousLayerConnectedCells(rankIndex);\n\n\t\t\t\tvar currentRank = rankIndex - 1;\n\n\t\t\t\t// Two loops, last connected cells, and next\n\t\t\t\tfor (var k = 0; k < 2; k++)\n\t\t\t\t{\n\t\t\t\t\tif (currentRank > -1\n\t\t\t\t\t\t\t&& currentRank < model.ranks.length\n\t\t\t\t\t\t\t&& currentCells != null\n\t\t\t\t\t\t\t&& currentCells.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar sortedCells = [];\n\n\t\t\t\t\t\tfor (var j = 0; j < currentCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar sorter = new WeightedCellSorter(\n\t\t\t\t\t\t\t\t\tcurrentCells[j], currentCells[j].getX(currentRank));\n\t\t\t\t\t\t\tsortedCells.push(sorter);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsortedCells.sort(WeightedCellSorter.prototype.compare);\n\n\t\t\t\t\t\tvar leftLimit = cell.x[0] - cell.width / 2;\n\t\t\t\t\t\tvar rightLimit = leftLimit + cell.width;\n\n\t\t\t\t\t\t// Connected edge count starts at 1 to allow for buffer\n\t\t\t\t\t\t// with edge of vertex\n\t\t\t\t\t\tvar connectedEdgeCount = 0;\n\t\t\t\t\t\tvar connectedEdgeGroupCount = 0;\n\t\t\t\t\t\tvar connectedEdges = [];\n\t\t\t\t\t\t// Calculate width requirements for all connected edges\n\t\t\t\t\t\tfor (var j = 0; j < sortedCells.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar innerCell = sortedCells[j].cell;\n\t\t\t\t\t\t\tvar connections;\n\n\t\t\t\t\t\t\tif (innerCell.isVertex())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Get the connecting edge\n\t\t\t\t\t\t\t\tif (k == 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsSource;\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconnections = cell.connectsAsTarget;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfor (var connIndex = 0; connIndex < connections.length; connIndex++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (connections[connIndex].source == innerCell\n\t\t\t\t\t\t\t\t\t\t\t|| connections[connIndex].target == innerCell)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeCount += connections[connIndex].edges\n\t\t\t\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\n\t\t\t\t\t\t\t\t\t\tconnectedEdges.push(connections[connIndex]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnectedEdgeCount += innerCell.edges.length;\n\t\t\t\t\t\t\t\tconnectedEdgeGroupCount++;\n\t\t\t\t\t\t\t\tconnectedEdges.push(innerCell);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar requiredWidth = (connectedEdgeCount + 1)\n\t\t\t\t\t\t\t\t* this.prefHozEdgeSep;\n\n\t\t\t\t\t\t// Add a buffer on the edges of the vertex if the edge count allows\n\t\t\t\t\t\tif (cell.width > requiredWidth\n\t\t\t\t\t\t\t\t+ (2 * this.prefHozEdgeSep))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tleftLimit += this.prefHozEdgeSep;\n\t\t\t\t\t\t\trightLimit -= this.prefHozEdgeSep;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar availableWidth = rightLimit - leftLimit;\n\t\t\t\t\t\tvar edgeSpacing = availableWidth / connectedEdgeCount;\n\n\t\t\t\t\t\tvar currentX = leftLimit + edgeSpacing / 2.0;\n\t\t\t\t\t\tvar currentYOffset = this.minEdgeJetty - this.prefVertEdgeOff;\n\t\t\t\t\t\tvar maxYOffset = 0;\n\n\t\t\t\t\t\tfor (var j = 0; j < connectedEdges.length; j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar numActualEdges = connectedEdges[j].edges\n\t\t\t\t\t\t\t\t\t.length;\n\t\t\t\t\t\t\tvar pos = this.jettyPositions[connectedEdges[j].ids[0]];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (pos == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos = [];\n\t\t\t\t\t\t\t\tthis.jettyPositions[connectedEdges[j].ids[0]] = pos;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (j < connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset += this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (j > connectedEdgeCount / 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcurrentYOffset -= this.prefVertEdgeOff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// Ignore the case if equals, this means the second of 2\n\t\t\t\t\t\t\t// jettys with the same y (even number of edges)\n\n\t\t\t\t\t\t\tfor (var m = 0; m < numActualEdges; m++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2] = currentX;\n\t\t\t\t\t\t\t\tcurrentX += edgeSpacing;\n\t\t\t\t\t\t\t\tpos[m * 4 + k * 2 + 1] = currentYOffset;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmaxYOffset = Math.max(maxYOffset,\n\t\t\t\t\t\t\t\t\tcurrentYOffset);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCells = cell.getNextLayerConnectedCells(rankIndex);\n\n\t\t\t\t\tcurrentRank = rankIndex + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setEdgePosition\n * \n * Fixes the control points\n */\nmxCoordinateAssignment.prototype.setEdgePosition = function(cell)\n{\n\t// For parallel edges we need to seperate out the points a\n\t// little\n\tvar offsetX = 0;\n\t// Only set the edge control points once\n\n\tif (cell.temp[0] != 101207)\n\t{\n\t\tvar maxRank = cell.maxRank;\n\t\tvar minRank = cell.minRank;\n\t\t\n\t\tif (maxRank == minRank)\n\t\t{\n\t\t\tmaxRank = cell.source.maxRank;\n\t\t\tminRank = cell.target.minRank;\n\t\t}\n\t\t\n\t\tvar parallelEdgeCount = 0;\n\t\tvar jettys = this.jettyPositions[cell.ids[0]];\n\n\t\tvar source = cell.isReversed ? cell.target.cell : cell.source.cell;\n\t\tvar graph = this.layout.graph;\n\t\tvar layoutReversed = this.orientation == mxConstants.DIRECTION_EAST\n\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH;\n\n\t\tfor (var i = 0; i < cell.edges.length; i++)\n\t\t{\n\t\t\tvar realEdge = cell.edges[i];\n\t\t\tvar realSource = this.layout.getVisibleTerminal(realEdge, true);\n\n\t\t\t//List oldPoints = graph.getPoints(realEdge);\n\t\t\tvar newPoints = [];\n\n\t\t\t// Single length reversed edges end up with the jettys in the wrong\n\t\t\t// places. Since single length edges only have jettys, not segment\n\t\t\t// control points, we just say the edge isn't reversed in this section\n\t\t\tvar reversed = cell.isReversed;\n\t\t\t\n\t\t\tif (realSource != source)\n\t\t\t{\n\t\t\t\t// The real edges include all core model edges and these can go\n\t\t\t\t// in both directions. If the source of the hierarchical model edge\n\t\t\t\t// isn't the source of the specific real edge in this iteration\n\t\t\t\t// treat if as reversed\n\t\t\t\treversed = !reversed;\n\t\t\t}\n\n\t\t\t// First jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar y = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 1 + arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ty += jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelSource = graph.model.getTerminal(realEdge, true);\n\n\t\t\t\tif (this.layout.isPort(modelSource) && graph.model.getParent(modelSource) == realSource)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelSource);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realSource.geometry.x + cell.source.width * modelSource.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH\n\t\t\t\t\t\t|| this.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y + jetty));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t\t\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y + jetty, x));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Declare variables to define loop through edge points and \n\t\t\t// change direction if edge is reversed\n\n\t\t\tvar loopStart = cell.x.length - 1;\n\t\t\tvar loopLimit = -1;\n\t\t\tvar loopDelta = -1;\n\t\t\tvar currentRank = cell.maxRank - 1;\n\n\t\t\tif (reversed)\n\t\t\t{\n\t\t\t\tloopStart = 0;\n\t\t\t\tloopLimit = cell.x.length;\n\t\t\t\tloopDelta = 1;\n\t\t\t\tcurrentRank = cell.minRank + 1;\n\t\t\t}\n\t\t\t// Reversed edges need the points inserted in\n\t\t\t// reverse order\n\t\t\tfor (var j = loopStart; (cell.maxRank != cell.minRank) && j != loopLimit; j += loopDelta)\n\t\t\t{\n\t\t\t\t// The horizontal position in a vertical layout\n\t\t\t\tvar positionX = cell.x[j] + offsetX;\n\n\t\t\t\t// Work out the vertical positions in a vertical layout\n\t\t\t\t// in the edge buffer channels above and below this rank\n\t\t\t\tvar topChannelY = (this.rankTopY[currentRank] + this.rankBottomY[currentRank + 1]) / 2.0;\n\t\t\t\tvar bottomChannelY = (this.rankTopY[currentRank - 1] + this.rankBottomY[currentRank]) / 2.0;\n\n\t\t\t\tif (reversed)\n\t\t\t\t{\n\t\t\t\t\tvar tmp = topChannelY;\n\t\t\t\t\ttopChannelY = bottomChannelY;\n\t\t\t\t\tbottomChannelY = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, topChannelY));\n\t\t\t\t\tnewPoints.push(new mxPoint(positionX, bottomChannelY));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tnewPoints.push(new mxPoint(topChannelY, positionX));\n\t\t\t\t\tnewPoints.push(new mxPoint(bottomChannelY, positionX));\n\t\t\t\t}\n\n\t\t\t\tthis.limitX = Math.max(this.limitX, positionX);\n\t\t\t\tcurrentRank += loopDelta;\n\t\t\t}\n\n\t\t\t// Second jetty of edge\n\t\t\tif (jettys != null)\n\t\t\t{\n\t\t\t\tvar arrayOffset = reversed ? 2 : 0;\n\t\t\t\tvar rankY = reversed ?\n\t\t\t\t\t\t(layoutReversed ? this.rankTopY[maxRank] : this.rankBottomY[maxRank]) :\n\t\t\t\t\t\t\t(layoutReversed ? this.rankBottomY[minRank] : this.rankTopY[minRank]);\n\t\t\t\tvar jetty = jettys[parallelEdgeCount * 4 + 3 - arrayOffset];\n\t\t\t\t\n\t\t\t\tif (reversed != layoutReversed)\n\t\t\t\t{\n\t\t\t\t\tjetty = -jetty;\n\t\t\t\t}\n\t\t\t\tvar y = rankY - jetty;\n\t\t\t\tvar x = jettys[parallelEdgeCount * 4 + 2 - arrayOffset];\n\t\t\t\t\n\t\t\t\tvar modelTarget = graph.model.getTerminal(realEdge, false);\n\t\t\t\tvar realTarget = this.layout.getVisibleTerminal(realEdge, false);\n\n\t\t\t\tif (this.layout.isPort(modelTarget) && graph.model.getParent(modelTarget) == realTarget)\n\t\t\t\t{\n\t\t\t\t\tvar state = graph.view.getState(modelTarget);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = state.x;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = realTarget.geometry.x + cell.target.width * modelTarget.geometry.x;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\t\t\t\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(x, y - jetty));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(x, y));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (this.layout.edgeStyle == mxHierarchicalEdgeStyle.CURVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tnewPoints.push(new mxPoint(y - jetty, x));\n\t\t\t\t\t}\n\n\t\t\t\t\tnewPoints.push(new mxPoint(y, x));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cell.isReversed)\n\t\t\t{\n\t\t\t\tthis.processReversedEdge(cell, realEdge);\n\t\t\t}\n\n\t\t\tthis.layout.setEdgePoints(realEdge, newPoints);\n\n\t\t\t// Increase offset so next edge is drawn next to\n\t\t\t// this one\n\t\t\tif (offsetX == 0.0)\n\t\t\t{\n\t\t\t\toffsetX = this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\telse if (offsetX > 0)\n\t\t\t{\n\t\t\t\toffsetX = -offsetX;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffsetX = -offsetX + this.parallelEdgeSpacing;\n\t\t\t}\n\t\t\t\n\t\t\tparallelEdgeCount++;\n\t\t}\n\n\t\tcell.temp[0] = 101207;\n\t}\n};\n\n\n/**\n * Function: setVertexLocation\n * \n * Fixes the position of the specified vertex.\n * \n * Parameters:\n * \n * cell - the vertex to position\n */\nmxCoordinateAssignment.prototype.setVertexLocation = function(cell)\n{\n\tvar realCell = cell.cell;\n\tvar positionX = cell.x[0] - cell.width / 2;\n\tvar positionY = cell.y[0] - cell.height / 2;\n\n\tthis.rankTopY[cell.minRank] = Math.min(this.rankTopY[cell.minRank], positionY);\n\tthis.rankBottomY[cell.minRank] = Math.max(this.rankBottomY[cell.minRank],\n\t\t\tpositionY + cell.height);\n\n\tif (this.orientation == mxConstants.DIRECTION_NORTH ||\n\t\tthis.orientation == mxConstants.DIRECTION_SOUTH)\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionX, positionY);\n\t}\n\telse\n\t{\n\t\tthis.layout.setVertexLocation(realCell, positionY, positionX);\n\t}\n\n\tthis.limitX = Math.max(this.limitX, positionX + cell.width);\n};\n\n/**\n * Function: processReversedEdge\n * \n * Hook to add additional processing\n * \n * Parameters:\n * \n * edge - the hierarchical model edge\n * realEdge - the real edge in the graph\n */\nmxCoordinateAssignment.prototype.processReversedEdge = function(graph, model)\n{\n\t// hook for subclassers\n};\n\n__mxOutput.mxCoordinateAssignment = typeof mxCoordinateAssignment !== 'undefined' ? mxCoordinateAssignment : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneOrdering\n * \n * An implementation of the first stage of the Sugiyama layout. Straightforward\n * longest path calculation of layer assignment\n * \n * Constructor: mxSwimlaneOrdering\n *\n * Creates a cycle remover for the given internal model.\n */\nfunction mxSwimlaneOrdering(layout)\n{\n\tthis.layout = layout;\n};\n\n/**\n * Extends mxHierarchicalLayoutStage.\n */\nmxSwimlaneOrdering.prototype = new mxHierarchicalLayoutStage();\nmxSwimlaneOrdering.prototype.constructor = mxSwimlaneOrdering;\n\n/**\n * Variable: layout\n * \n * Reference to the enclosing <mxHierarchicalLayout>.\n */\nmxSwimlaneOrdering.prototype.layout = null;\n\n/**\n * Function: execute\n * \n * Takes the graph detail and configuration information within the facade\n * and creates the resulting laid out graph within that facade for further\n * use.\n */\nmxSwimlaneOrdering.prototype.execute = function(parent)\n{\n\tvar model = this.layout.getModel();\n\tvar seenNodes = new Object();\n\tvar unseenNodes = mxUtils.clone(model.vertexMapper, null, true);\n\t\n\t// Perform a dfs through the internal model. If a cycle is found,\n\t// reverse it.\n\tvar rootsArray = null;\n\t\n\tif (model.roots != null)\n\t{\n\t\tvar modelRoots = model.roots;\n\t\trootsArray = [];\n\t\t\n\t\tfor (var i = 0; i < modelRoots.length; i++)\n\t\t{\n\t\t\tvar nodeId = mxCellPath.create(modelRoots[i]);\n\t\t\trootsArray[i] = model.vertexMapper.get(modelRoots[i]);\n\t\t}\n\t}\n\n\tmodel.visit(function(parent, node, connectingEdge, layer, seen)\n\t{\n\t\t// Check if the cell is in it's own ancestor list, if so\n\t\t// invert the connecting edge and reverse the target/source\n\t\t// relationship to that edge in the parent and the cell\n\t\t// Ancestor hashes only line up within a swimlane\n\t\tvar isAncestor = parent != null && parent.swimlaneIndex == node.swimlaneIndex && node.isAncestor(parent);\n\n\t\t// If the source->target swimlane indices go from higher to\n\t\t// lower, the edge is reverse\n\t\tvar reversedOverSwimlane = parent != null && connectingEdge != null &&\n\t\t\t\t\t\tparent.swimlaneIndex < node.swimlaneIndex && connectingEdge.source == node;\n\n\t\tif (isAncestor)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsSource);\n\t\t\tnode.connectsAsSource.push(connectingEdge);\n\t\t\tparent.connectsAsTarget.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsTarget);\n\t\t}\n\t\telse if (reversedOverSwimlane)\n\t\t{\n\t\t\tconnectingEdge.invert();\n\t\t\tmxUtils.remove(connectingEdge, parent.connectsAsTarget);\n\t\t\tnode.connectsAsTarget.push(connectingEdge);\n\t\t\tparent.connectsAsSource.push(connectingEdge);\n\t\t\tmxUtils.remove(connectingEdge, node.connectsAsSource);\n\t\t}\n\t\t\n\t\tvar cellId = mxCellPath.create(node.cell);\n\t\tseenNodes[cellId] = node;\n\t\tdelete unseenNodes[cellId];\n\t}, rootsArray, true, null);\n};\n\n__mxOutput.mxSwimlaneOrdering = typeof mxSwimlaneOrdering !== 'undefined' ? mxSwimlaneOrdering : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxHierarchicalLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxHierarchicalLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxHierarchicalLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\nvar mxHierarchicalEdgeStyle =\n{\n\tORTHOGONAL: 1,\n\tPOLYLINE: 2,\n\tSTRAIGHT: 3,\n\tCURVE: 4\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxHierarchicalLayout.prototype = new mxGraphLayout();\nmxHierarchicalLayout.prototype.constructor = mxHierarchicalLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxHierarchicalLayout.prototype.roots = null;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxHierarchicalLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxHierarchicalLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxHierarchicalLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 0.\n */\nmxHierarchicalLayout.prototype.parentBorder = 0;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxHierarchicalLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxHierarchicalLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxHierarchicalLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxHierarchicalLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxHierarchicalLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxHierarchicalLayout.prototype.fineTuning = true;\n\n/**\n * \n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxHierarchicalLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxHierarchicalLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same \n * ancestry chain. Default is true.\n */\nmxHierarchicalLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxGraphHierarchyModel> formed of the layout.\n */\nmxHierarchicalLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxGraphHierarchyModel> for this layout algorithm.\n */\nmxHierarchicalLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * roots - Optional starting roots of the layout.\n */\nmxHierarchicalLayout.prototype.execute = function(parent, roots)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\tif (roots != null && !(roots instanceof Array))\n\t{\n\t\troots = [roots];\n\t}\n\t\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (roots == null && parent == null)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\t\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\t\n\tif (roots != null)\n\t{\n\t\tvar rootsCopy = [];\n\n\t\tfor (var i = 0; i < roots.length; i++)\n\t\t{\n\t\t\tvar ancestor = parent != null ? model.isAncestor(parent, roots[i]) : true;\n\t\t\t\n\t\t\tif (ancestor && model.isVertex(roots[i]))\n\t\t\t{\n\t\t\t\trootsCopy.push(roots[i]);\n\t\t\t}\n\t\t}\n\n\t\tthis.roots = rootsCopy;\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxHierarchicalLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (model.isVertex(cell) && this.graph.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxHierarchicalLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) ||\n\t\t\t\t((source != target) &&\n\t\t\t\t\t\t((target == cell && (this.parent == null || this.isAncestor(this.parent, source, this.traverseAncestors))) ||\n\t\t\t\t\t\t \t(source == cell && (this.parent == null || this.isAncestor(this.parent, target, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxHierarchicalLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxHierarchicalLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = [];\n\n\tif (this.roots == null && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\tthis.filterDescendants(parent, filledVertexSet);\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\twhile (!filledVertexSetEmpty)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(parent, filledVertexSet);\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\t\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\t// Iterate through the result removing parents who have children in this layout\n\t\n\t// Perform a layout for each seperate hierarchy\n\t// Track initial coordinate x-positioning\n\tvar initialX = 0;\n\n\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t{\n\t\tvar vertexSet = hierarchyVertices[i];\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var key in vertexSet)\n\t\t{\n\t\t\ttmp.push(vertexSet[key]);\n\t\t}\n\t\t\n\t\tthis.model = new mxGraphHierarchyModel(this, tmp, this.roots,\n\t\t\tparent, this.tightenToSource);\n\n\t\tthis.cycleStage(parent);\n\t\tthis.layeringStage();\n\t\t\n\t\tthis.crossingStage(parent);\n\t\tinitialX = this.placementStage(initialX, parent);\n\t}\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxHierarchicalLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxHierarchicalLayout.prototype.isPort = function(cell)\n{\n\tif (cell != null && cell.geometry != null)\n\t{\n\t\treturn cell.geometry.relative;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxHierarchicalLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n */\nmxHierarchicalLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar edgeIsSource = [];\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tedgeIsSource[i] = (this.getVisibleTerminal(edges[i], true) == vertex);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tif (!directed || edgeIsSource[i])\n\t\t\t\t{\n\t\t\t\t\tvar next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n\t\t\t\t\t\n\t\t\t\t\t// Check whether there are more edges incoming from the target vertex than outgoing\n\t\t\t\t\t// The hierarchical model treats bi-directional parallel edges as being sourced\n\t\t\t\t\t// from the more \"sourced\" terminal. If the directions are equal in number, the direction\n\t\t\t\t\t// is that of the natural direction from the roots of the layout.\n\t\t\t\t\t// The checks below are slightly more verbose than need be for performance reasons\n\t\t\t\t\tvar netCount = 1;\n\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (j == i)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar isSource2 = edgeIsSource[j];\n\t\t\t\t\t\t\tvar otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (otherTerm == next)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (isSource2)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tnetCount--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (netCount >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcurrentComp = this.traverse(next, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxHierarchicalLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxMinimumCycleRemover(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxHierarchicalLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxHierarchicalLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxHierarchicalLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxHierarchicalLayout = typeof mxHierarchicalLayout !== 'undefined' ? mxHierarchicalLayout : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneLayout\n * \n * A hierarchical layout algorithm.\n * \n * Constructor: mxSwimlaneLayout\n *\n * Constructs a new hierarchical layout algorithm.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * orientation - Optional constant that defines the orientation of this\n * layout.\n * deterministic - Optional boolean that specifies if this layout should be\n * deterministic. Default is true.\n */\nfunction mxSwimlaneLayout(graph, orientation, deterministic)\n{\n\tmxGraphLayout.call(this, graph);\n\tthis.orientation = (orientation != null) ? orientation : mxConstants.DIRECTION_NORTH;\n\tthis.deterministic = (deterministic != null) ? deterministic : true;\n};\n\n/**\n * Extends mxGraphLayout.\n */\nmxSwimlaneLayout.prototype = new mxGraphLayout();\nmxSwimlaneLayout.prototype.constructor = mxSwimlaneLayout;\n\n/**\n * Variable: roots\n * \n * Holds the array of <mxCell> that this layout contains.\n */\nmxSwimlaneLayout.prototype.roots = null;\n\n/**\n * Variable: swimlanes\n * \n * Holds the array of <mxCell> of the ordered swimlanes to lay out\n */\nmxSwimlaneLayout.prototype.swimlanes = null;\n\n/**\n * Variable: dummyVertexWidth\n * \n * The cell width of any dummy vertices inserted\n */\nmxSwimlaneLayout.prototype.dummyVertexWidth = 50;\n\n/**\n * Variable: resizeParent\n * \n * Specifies if the parent should be resized after the layout so that it\n * contains all the child cells. Default is false. See also <parentBorder>.\n */\nmxSwimlaneLayout.prototype.resizeParent = false;\n\n/**\n * Variable: maintainParentLocation\n * \n * Specifies if the parent location should be maintained, so that the\n * top, left corner stays the same before and after execution of\n * the layout. Default is false for backwards compatibility.\n */\nmxSwimlaneLayout.prototype.maintainParentLocation = false;\n\n/**\n * Variable: moveParent\n * \n * Specifies if the parent should be moved if <resizeParent> is enabled.\n * Default is false.\n */\nmxSwimlaneLayout.prototype.moveParent = false;\n\n/**\n * Variable: parentBorder\n * \n * The border to be added around the children if the parent is to be\n * resized using <resizeParent>. Default is 30.\n */\nmxSwimlaneLayout.prototype.parentBorder = 30;\n\n/**\n * Variable: intraCellSpacing\n * \n * The spacing buffer added between cells on the same layer. Default is 30.\n */\nmxSwimlaneLayout.prototype.intraCellSpacing = 30;\n\n/**\n * Variable: interRankCellSpacing\n * \n * The spacing buffer added between cell on adjacent layers. Default is 100.\n */\nmxSwimlaneLayout.prototype.interRankCellSpacing = 100;\n\n/**\n * Variable: interHierarchySpacing\n * \n * The spacing buffer between unconnected hierarchies. Default is 60.\n */\nmxSwimlaneLayout.prototype.interHierarchySpacing = 60;\n\n/**\n * Variable: parallelEdgeSpacing\n * \n * The distance between each parallel edge on each ranks for long edges.\n * Default is 10.\n */\nmxSwimlaneLayout.prototype.parallelEdgeSpacing = 10;\n\n/**\n * Variable: orientation\n * \n * The position of the root node(s) relative to the laid out graph in.\n * Default is <mxConstants.DIRECTION_NORTH>.\n */\nmxSwimlaneLayout.prototype.orientation = mxConstants.DIRECTION_NORTH;\n\n/**\n * Variable: fineTuning\n * \n * Whether or not to perform local optimisations and iterate multiple times\n * through the algorithm. Default is true.\n */\nmxSwimlaneLayout.prototype.fineTuning = true;\n\n/**\n * Variable: tightenToSource\n * \n * Whether or not to tighten the assigned ranks of vertices up towards\n * the source cells. Default is true.\n */\nmxSwimlaneLayout.prototype.tightenToSource = true;\n\n/**\n * Variable: disableEdgeStyle\n * \n * Specifies if the STYLE_NOEDGESTYLE flag should be set on edges that are\n * modified by the result. Default is true.\n */\nmxSwimlaneLayout.prototype.disableEdgeStyle = true;\n\n/**\n * Variable: traverseAncestors\n * \n * Whether or not to drill into child cells and layout in reverse\n * group order. This also cause the layout to navigate edges whose \n * terminal vertices have different parents but are in the same\n * ancestry chain. Default is true.\n */\nmxSwimlaneLayout.prototype.traverseAncestors = true;\n\n/**\n * Variable: model\n * \n * The internal <mxSwimlaneModel> formed of the layout.\n */\nmxSwimlaneLayout.prototype.model = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxSwimlaneLayout.prototype.edgesCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgeSourceTermCache = null;\n\n/**\n * Variable: edgesSet\n * \n * A cache of edges whose source terminal is the key\n */\nmxHierarchicalLayout.prototype.edgesTargetTermCache = null;\n\n/**\n * Variable: edgeStyle\n * \n * The style to apply between cell layers to edge segments.\n * Default is <mxHierarchicalEdgeStyle.POLYLINE>.\n */\nmxHierarchicalLayout.prototype.edgeStyle = mxHierarchicalEdgeStyle.POLYLINE;\n\n/**\n * Function: getModel\n * \n * Returns the internal <mxSwimlaneModel> for this layout algorithm.\n */\nmxSwimlaneLayout.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: execute\n * \n * Executes the layout for the children of the specified parent.\n * \n * Parameters:\n * \n * parent - Parent <mxCell> that contains the children to be laid out.\n * swimlanes - Ordered array of swimlanes to be laid out\n */\nmxSwimlaneLayout.prototype.execute = function(parent, swimlanes)\n{\n\tthis.parent = parent;\n\tvar model = this.graph.model;\n\tthis.edgesCache = new mxDictionary();\n\tthis.edgeSourceTermCache = new mxDictionary();\n\tthis.edgesTargetTermCache = new mxDictionary();\n\n\t// If the roots are set and the parent is set, only\n\t// use the roots that are some dependent of the that\n\t// parent.\n\t// If just the root are set, use them as-is\n\t// If just the parent is set use it's immediate\n\t// children as the initial set\n\n\tif (swimlanes == null || swimlanes.length < 1)\n\t{\n\t\t// TODO indicate the problem\n\t\treturn;\n\t}\n\n\tif (parent == null)\n\t{\n\t\tparent = model.getParent(swimlanes[0]);\n\t}\n\n\t//  Maintaining parent location\n\tthis.parentX = null;\n\tthis.parentY = null;\n\t\n\tif (parent != this.root && model.isVertex(parent) != null && this.maintainParentLocation)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tthis.parentX = geo.x;\n\t\t\tthis.parentY = geo.y;\n\t\t}\n\t}\n\n\tthis.swimlanes = swimlanes;\n\tvar dummyVertices = [];\n\t// Check the swimlanes all have vertices\n\t// in them\n\tfor (var i = 0; i < swimlanes.length; i++)\n\t{\n\t\tvar children = this.graph.getChildCells(swimlanes[i]);\n\t\t\n\t\tif (children == null || children.length == 0)\n\t\t{\n\t\t\tvar vertex = this.graph.insertVertex(swimlanes[i], null, null, 0, 0, this.dummyVertexWidth, 0);\n\t\t\tdummyVertices.push(vertex);\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tthis.run(parent);\n\t\t\n\t\tif (this.resizeParent && !this.graph.isCellCollapsed(parent))\n\t\t{\n\t\t\tthis.graph.updateGroupBounds([parent], this.parentBorder, this.moveParent);\n\t\t}\n\t\t\n\t\t// Maintaining parent location\n\t\tif (this.parentX != null && this.parentY != null)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(parent);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.x = this.parentX;\n\t\t\t\tgeo.y = this.parentY;\n\t\t\t\tmodel.setGeometry(parent, geo);\n\t\t\t}\n\t\t}\n\n\t\tthis.graph.removeCells(dummyVertices);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given array of groups so that it includes\n * all child vertices.\n * \n */\nmxSwimlaneLayout.prototype.updateGroupBounds = function()\n{\n\t// Get all vertices and edge in the layout\n\tvar cells = [];\n\tvar model = this.model;\n\t\n\tfor (var key in model.edgeMapper)\n\t{\n\t\tvar edge = model.edgeMapper[key];\n\t\t\n\t\tfor (var i = 0; i < edge.edges.length; i++)\n\t\t{\n\t\t\tcells.push(edge.edges[i]);\n\t\t}\n\t}\n\t\n\tvar layoutBounds = this.graph.getBoundingBoxFromGeometry(cells, true);\n\tvar childBounds = [];\n\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar bounds = this.graph.getBoundingBoxFromGeometry(children);\n\t\t\tchildBounds[i] = bounds;\n\t\t\tvar childrenY = bounds.y + geo.y - size.height - this.parentBorder;\n\t\t\tvar maxChildrenY = bounds.y + geo.y + bounds.height;\n\n\t\t\tif (layoutBounds == null)\n\t\t\t{\n\t\t\t\tlayoutBounds = new mxRectangle(0, childrenY, 0, maxChildrenY - childrenY);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlayoutBounds.y = Math.min(layoutBounds.y, childrenY);\n\t\t\t\tvar maxY = Math.max(layoutBounds.y + layoutBounds.height, maxChildrenY);\n\t\t\t\tlayoutBounds.height = maxY - layoutBounds.y;\n\t\t\t}\n\t\t}\n\t}\n\n\t\n\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t{\n\t\tvar lane = this.swimlanes[i];\n\t\tvar geo = this.graph.getCellGeometry(lane);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tvar children = this.graph.getChildCells(lane);\n\t\t\t\n\t\t\tvar size = (this.graph.isSwimlane(lane)) ?\n\t\t\t\t\tthis.graph.getStartSize(lane) : new mxRectangle();\n\n\t\t\tvar newGeo = geo.clone();\n\t\t\t\n\t\t\tvar leftGroupBorder = (i == 0) ? this.parentBorder : this.interRankCellSpacing/2;\n\t\t\tvar w = size.width + leftGroupBorder;\n\t\t\tvar x = childBounds[i].x - w;\n\t\t\tvar y = layoutBounds.y - this.parentBorder;\n\n\t\t\tnewGeo.x += x;\n\t\t\tnewGeo.y = y;\n\t\t\t\n\t\t\tnewGeo.width = childBounds[i].width + w + this.interRankCellSpacing/2;\n\t\t\tnewGeo.height = layoutBounds.height + size.height + 2 * this.parentBorder;\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(lane, newGeo);\n\t\t\tthis.graph.moveCells(children, -x, geo.y - y);\n\t\t}\n\t}\n};\n\n/**\n * Function: findRoots\n * \n * Returns all visible children in the given parent which do not have\n * incoming edges. If the result is empty then the children with the\n * maximum difference between incoming and outgoing edges are returned.\n * This takes into account edges that are being promoted to the given\n * root due to invisible children or collapsed cells.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * vertices - array of vertices to limit search to\n */\nmxSwimlaneLayout.prototype.findRoots = function(parent, vertices)\n{\n\tvar roots = [];\n\t\n\tif (parent != null && vertices != null)\n\t{\n\t\tvar model = this.graph.model;\n\t\tvar best = null;\n\t\tvar maxDiff = -100000;\n\t\t\n\t\tfor (var i in vertices)\n\t\t{\n\t\t\tvar cell = vertices[i];\n\n\t\t\tif (cell != null && model.isVertex(cell) && this.graph.isCellVisible(cell) && model.isAncestor(parent, cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getEdges(cell);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\n\t\t\t\tfor (var k = 0; k < conns.length; k++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.getVisibleTerminal(conns[k], true);\n\n\t\t\t\t\tif (src == cell)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Only count connection within this swimlane\n\t\t\t\t\t\tvar other = this.getVisibleTerminal(conns[k], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (model.isAncestor(parent, other))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfanOut++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (model.isAncestor(parent, src))\n\t\t\t\t\t{\n\t\t\t\t\t\tfanIn++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (fanIn == 0 && fanOut > 0)\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\n\t\t\t\tvar diff = fanOut - fanIn;\n\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: getEdges\n * \n * Returns the connected edges for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n */\nmxSwimlaneLayout.prototype.getEdges = function(cell)\n{\n\tvar cachedEdges = this.edgesCache.get(cell);\n\t\n\tif (cachedEdges != null)\n\t{\n\t\treturn cachedEdges;\n\t}\n\n\tvar model = this.graph.model;\n\tvar edges = [];\n\tvar isCollapsed = this.graph.isCellCollapsed(cell);\n\tvar childCount = model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\n\t\tif (this.isPort(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t\telse if (isCollapsed || !this.graph.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(model.getEdges(child, true, true));\n\t\t}\n\t}\n\n\tedges = edges.concat(model.getEdges(cell, true, true));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar source = this.getVisibleTerminal(edges[i], true);\n\t\tvar target = this.getVisibleTerminal(edges[i], false);\n\t\t\n\t\tif ((source == target) || ((source != target) && ((target == cell && (this.parent == null || this.graph.isValidAncestor(source, this.parent, this.traverseAncestors))) ||\n\t\t\t(source == cell && (this.parent == null ||\n\t\t\t\t\tthis.graph.isValidAncestor(target, this.parent, this.traverseAncestors))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\tthis.edgesCache.put(cell, result);\n\n\treturn result;\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Helper function to return visible terminal for edge allowing for ports\n * \n * Parameters:\n * \n * edge - <mxCell> whose edges should be returned.\n * source - Boolean that specifies whether the source or target terminal is to be returned\n */\nmxSwimlaneLayout.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar terminalCache = this.edgesTargetTermCache;\n\t\n\tif (source)\n\t{\n\t\tterminalCache = this.edgeSourceTermCache;\n\t}\n\n\tvar term = terminalCache.get(edge);\n\n\tif (term != null)\n\t{\n\t\treturn term;\n\t}\n\n\tvar state = this.graph.view.getState(edge);\n\t\n\tvar terminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t\n\tif (terminal == null)\n\t{\n\t\tterminal = (state != null) ? state.getVisibleTerminal(source) : this.graph.view.getVisibleTerminal(edge, source);\n\t}\n\n\tif (terminal != null)\n\t{\n\t\tif (this.isPort(terminal))\n\t\t{\n\t\t\tterminal = this.graph.model.getParent(terminal);\n\t\t}\n\t\t\n\t\tterminalCache.put(edge, terminal);\n\t}\n\n\treturn terminal;\n};\n\n/**\n * Function: run\n * \n * The API method used to exercise the layout upon the graph description\n * and produce a separate description of the vertex position and edge\n * routing changes made. It runs each stage of the layout that has been\n * created.\n */\nmxSwimlaneLayout.prototype.run = function(parent)\n{\n\t// Separate out unconnected hierarchies\n\tvar hierarchyVertices = [];\n\tvar allVertexSet = Object();\n\n\tif (this.swimlanes != null && this.swimlanes.length > 0 && parent != null)\n\t{\n\t\tvar filledVertexSet = Object();\n\t\t\n\t\tfor (var i = 0; i < this.swimlanes.length; i++)\n\t\t{\n\t\t\tthis.filterDescendants(this.swimlanes[i], filledVertexSet);\n\t\t}\n\n\t\tthis.roots = [];\n\t\tvar filledVertexSetEmpty = true;\n\n\t\t// Poor man's isSetEmpty\n\t\tfor (var key in filledVertexSet)\n\t\t{\n\t\t\tif (filledVertexSet[key] != null)\n\t\t\t{\n\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Only test for candidates in each swimlane in order\n\t\tvar laneCounter = 0;\n\n\t\twhile (!filledVertexSetEmpty && laneCounter < this.swimlanes.length)\n\t\t{\n\t\t\tvar candidateRoots = this.findRoots(this.swimlanes[laneCounter], filledVertexSet);\n\t\t\t\n\t\t\tif (candidateRoots.length == 0)\n\t\t\t{\n\t\t\t\tlaneCounter++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// If the candidate root is an unconnected group cell, remove it from\n\t\t\t// the layout. We may need a custom set that holds such groups and forces\n\t\t\t// them to be processed for resizing and/or moving.\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tvar vertexSet = Object();\n\t\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\t\tthis.traverse(candidateRoots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\t\thierarchyVertices, filledVertexSet, laneCounter);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < candidateRoots.length; i++)\n\t\t\t{\n\t\t\t\tthis.roots.push(candidateRoots[i]);\n\t\t\t}\n\t\t\t\n\t\t\tfilledVertexSetEmpty = true;\n\t\t\t\n\t\t\t// Poor man's isSetEmpty\n\t\t\tfor (var key in filledVertexSet)\n\t\t\t{\n\t\t\t\tif (filledVertexSet[key] != null)\n\t\t\t\t{\n\t\t\t\t\tfilledVertexSetEmpty = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Find vertex set as directed traversal from roots\n\n\t\tfor (var i = 0; i < this.roots.length; i++)\n\t\t{\n\t\t\tvar vertexSet = Object();\n\t\t\thierarchyVertices.push(vertexSet);\n\n\t\t\tthis.traverse(this.roots[i], true, null, allVertexSet, vertexSet,\n\t\t\t\t\thierarchyVertices, null);\n\t\t}\n\t}\n\n\tvar tmp = [];\n\t\n\tfor (var key in allVertexSet)\n\t{\n\t\ttmp.push(allVertexSet[key]);\n\t}\n\t\n\tthis.model = new mxSwimlaneModel(this, tmp, this.roots,\n\t\tparent, this.tightenToSource);\n\n\tthis.cycleStage(parent);\n\tthis.layeringStage();\n\t\n\tthis.crossingStage(parent);\n\tthis.placementStage(0, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Creates an array of descendant cells\n */\nmxSwimlaneLayout.prototype.filterDescendants = function(cell, result)\n{\n\tvar model = this.graph.model;\n\n\tif (model.isVertex(cell) && cell != this.parent && model.getParent(cell) != this.parent && this.graph.isCellVisible(cell))\n\t{\n\t\tresult[mxObjectIdentity.get(cell)] = cell;\n\t}\n\n\tif (this.traverseAncestors || cell == this.parent\n\t\t\t&& this.graph.isCellVisible(cell))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\n\t\t\t// Ignore ports in the layout vertex list, they are dealt with\n\t\t\t// in the traversal mechanisms\n\t\t\tif (!this.isPort(child))\n\t\t\t{\n\t\t\t\tthis.filterDescendants(child, result);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, its parent is the connecting vertex in terms of graph traversal\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxSwimlaneLayout.prototype.isPort = function(cell)\n{\n\tif (cell.geometry.relative)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and ports.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxSwimlaneLayout.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar src = this.getVisibleTerminal(edges[i], true);\n\t\tvar trg = this.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * allVertices - Array of cell paths for the visited cells.\n * swimlaneIndex - the laid out order index of the swimlane vertex is contained in\n */\nmxSwimlaneLayout.prototype.traverse = function(vertex, directed, edge, allVertices, currentComp,\n\t\t\t\t\t\t\t\t\t\t\thierarchyVertices, filledVertexSet, swimlaneIndex)\n{\n\tif (vertex != null && allVertices != null)\n\t{\n\t\t// Has this vertex been seen before in any traversal\n\t\t// And if the filled vertex set is populated, only \n\t\t// process vertices in that it contains\n\t\tvar vertexID = mxObjectIdentity.get(vertex);\n\t\t\n\t\tif ((allVertices[vertexID] == null)\n\t\t\t\t&& (filledVertexSet == null ? true : filledVertexSet[vertexID] != null))\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\tcurrentComp[vertexID] = vertex;\n\t\t\t}\n\t\t\tif (allVertices[vertexID] == null)\n\t\t\t{\n\t\t\t\tallVertices[vertexID] = vertex;\n\t\t\t}\n\n\t\t\tif (filledVertexSet !== null)\n\t\t\t{\n\t\t\t\tdelete filledVertexSet[vertexID];\n\t\t\t}\n\n\t\t\tvar edges = this.getEdges(vertex);\n\t\t\tvar model = this.graph.model;\n\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar otherVertex = this.getVisibleTerminal(edges[i], true);\n\t\t\t\tvar isSource = otherVertex == vertex;\n\t\t\t\t\n\t\t\t\tif (isSource)\n\t\t\t\t{\n\t\t\t\t\totherVertex = this.getVisibleTerminal(edges[i], false);\n\t\t\t\t}\n\n\t\t\t\tvar otherIndex = 0;\n\t\t\t\t// Get the swimlane index of the other terminal\n\t\t\t\tfor (otherIndex = 0; otherIndex < this.swimlanes.length; otherIndex++)\n\t\t\t\t{\n\t\t\t\t\tif (model.isAncestor(this.swimlanes[otherIndex], otherVertex))\n\t\t\t\t\t{\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (otherIndex >= this.swimlanes.length)\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Traverse if the other vertex is within the same swimlane as\n\t\t\t\t// as the current vertex, or if the swimlane index of the other\n\t\t\t\t// vertex is greater than that of this vertex\n\t\t\t\tif ((otherIndex > swimlaneIndex) ||\n\t\t\t\t\t\t((!directed || isSource) && otherIndex == swimlaneIndex))\n\t\t\t\t{\n\t\t\t\t\tcurrentComp = this.traverse(otherVertex, directed, edges[i], allVertices,\n\t\t\t\t\t\t\tcurrentComp, hierarchyVertices,\n\t\t\t\t\t\t\tfilledVertexSet, otherIndex);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (currentComp[vertexID] == null)\n\t\t\t{\n\t\t\t\t// We've seen this vertex before, but not in the current component\n\t\t\t\t// This component and the one it's in need to be merged\n\t\t\t\tfor (var i = 0; i < hierarchyVertices.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar comp = hierarchyVertices[i];\n\n\t\t\t\t\tif (comp[vertexID] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tfor (var key in comp)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrentComp[key] = comp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Remove the current component from the hierarchy set\n\t\t\t\t\t\thierarchyVertices.splice(i, 1);\n\t\t\t\t\t\treturn currentComp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn currentComp;\n};\n\n/**\n * Function: cycleStage\n * \n * Executes the cycle stage using mxMinimumCycleRemover.\n */\nmxSwimlaneLayout.prototype.cycleStage = function(parent)\n{\n\tvar cycleStage = new mxSwimlaneOrdering(this);\n\tcycleStage.execute(parent);\n};\n\n/**\n * Function: layeringStage\n * \n * Implements first stage of a Sugiyama layout.\n */\nmxSwimlaneLayout.prototype.layeringStage = function()\n{\n\tthis.model.initialRank();\n\tthis.model.fixRanks();\n};\n\n/**\n * Function: crossingStage\n * \n * Executes the crossing stage using mxMedianHybridCrossingReduction.\n */\nmxSwimlaneLayout.prototype.crossingStage = function(parent)\n{\n\tvar crossingStage = new mxMedianHybridCrossingReduction(this);\n\tcrossingStage.execute(parent);\n};\n\n/**\n * Function: placementStage\n * \n * Executes the placement stage using mxCoordinateAssignment.\n */\nmxSwimlaneLayout.prototype.placementStage = function(initialX, parent)\n{\n\tvar placementStage = new mxCoordinateAssignment(this, this.intraCellSpacing,\n\t\t\tthis.interRankCellSpacing, this.orientation, initialX,\n\t\t\tthis.parallelEdgeSpacing);\n\tplacementStage.fineTuning = this.fineTuning;\n\tplacementStage.execute(parent);\n\t\n\treturn placementStage.limitX + this.interHierarchySpacing;\n};\n\n__mxOutput.mxSwimlaneLayout = typeof mxSwimlaneLayout !== 'undefined' ? mxSwimlaneLayout : undefined;\n\n/**\n * Copyright (c) 2006-2018, JGraph Ltd\n * Copyright (c) 2006-2018, Gaudenz Alder\n */\n/**\n * Class: mxGraphModel\n * \n * Extends <mxEventSource> to implement a graph model. The graph model acts as\n * a wrapper around the cells which are in charge of storing the actual graph\n * datastructure. The model acts as a transactional wrapper with event\n * notification for all changes, whereas the cells contain the atomic\n * operations for updating the actual datastructure.\n * \n * Layers:\n * \n * The cell hierarchy in the model must have a top-level root cell which\n * contains the layers (typically one default layer), which in turn contain the\n * top-level cells of the layers. This means each cell is contained in a layer.\n * If no layers are required, then all new cells should be added to the default\n * layer.\n * \n * Layers are useful for hiding and showing groups of cells, or for placing\n * groups of cells on top of other cells in the display. To identify a layer,\n * the <isLayer> function is used. It returns true if the parent of the given\n * cell is the root of the model.\n * \n * Events:\n * \n * See events section for more details. There is a new set of events for\n * tracking transactional changes as they happen. The events are called\n * startEdit for the initial beginUpdate, executed for each executed change\n * and endEdit for the terminal endUpdate. The executed event contains a\n * property called change which represents the change after execution.\n * \n * Encoding the model:\n * \n * To encode a graph model, use the following code:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will create an XML node that contains all the model information.\n * \n * Encoding and decoding changes:\n * \n * For the encoding of changes, a graph model listener is required that encodes\n * each change from the given array of changes.\n * \n * (code)\n * model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n *   var nodes = [];\n *   var codec = new mxCodec();\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     nodes.push(codec.encode(changes[i]));\n *   }\n *   // do something with the nodes\n * });\n * (end)\n * \n * For the decoding and execution of changes, the codec needs a lookup function\n * that allows it to resolve cell IDs as follows:\n * \n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * }\n * (end)\n * \n * For each encoded change (represented by a node), the following code can be\n * used to carry out the decoding and create a change object.\n * \n * (code)\n * var changes = [];\n * var change = codec.decode(node);\n * change.model = model;\n * change.execute();\n * changes.push(change);\n * (end)\n * \n * The changes can then be dispatched using the model as follows.\n * \n * (code)\n * var edit = new mxUndoableEdit(model, false);\n * edit.changes = changes;\n * \n * edit.notify = function()\n * {\n *   edit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n *   \t'edit', edit, 'changes', edit.changes));\n *   edit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n *   \t'edit', edit, 'changes', edit.changes));\n * }\n * \n * model.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n * model.fireEvent(new mxEventObject(mxEvent.CHANGE,\n * \t\t'edit', edit, 'changes', changes));\n * (end)\n *\n * Event: mxEvent.CHANGE\n *\n * Fires when an undoable edit is dispatched. The <code>edit</code> property\n * contains the <mxUndoableEdit>. The <code>changes</code> property contains\n * the array of atomic changes inside the undoable edit. The changes property\n * is <strong>deprecated</strong>, please use edit.changes instead.\n *\n * Example:\n * \n * For finding newly inserted cells, the following code can be used:\n * \n * (code)\n * graph.model.addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var changes = evt.getProperty('edit').changes;\n * \n *   for (var i = 0; i < changes.length; i++)\n *   {\n *     var change = changes[i];\n *     \n *     if (change instanceof mxChildChange &&\n *       change.change.previous == null)\n *     {\n *       graph.startEditingAtCell(change.child);\n *       break;\n *     }\n *   }\n * });\n * (end)\n * \n * \n * Event: mxEvent.NOTIFY\n *\n * Same as <mxEvent.CHANGE>, this event can be used for classes that need to\n * implement a sync mechanism between this model and, say, a remote model. In\n * such a setup, only local changes should trigger a notify event and all\n * changes should trigger a change event.\n * \n * Event: mxEvent.EXECUTE\n * \n * Fires between begin- and endUpdate and after an atomic change was executed\n * in the model. The <code>change</code> property contains the atomic change\n * that was executed.\n * \n * Event: mxEvent.EXECUTED\n * \n * Fires between START_EDIT and END_EDIT after an atomic change was executed.\n * The <code>change</code> property contains the change that was executed.\n *\n * Event: mxEvent.BEGIN_UPDATE\n *\n * Fires after the <updateLevel> was incremented in <beginUpdate>. This event\n * contains no properties.\n * \n * Event: mxEvent.START_EDIT\n *\n * Fires after the <updateLevel> was changed from 0 to 1. This event\n * contains no properties.\n * \n * Event: mxEvent.END_UPDATE\n * \n * Fires after the <updateLevel> was decreased in <endUpdate> but before any\n * notification or change dispatching. The <code>edit</code> property contains\n * the <currentEdit>.\n * \n * Event: mxEvent.END_EDIT\n *\n * Fires after the <updateLevel> was changed from 1 to 0. This event\n * contains no properties.\n * \n * Event: mxEvent.BEFORE_UNDO\n * \n * Fires before the change is dispatched after the update level has reached 0\n * in <endUpdate>. The <code>edit</code> property contains the <curreneEdit>.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the change was dispatched in <endUpdate>. The <code>edit</code>\n * property contains the <currentEdit>.\n * \n * Constructor: mxGraphModel\n * \n * Constructs a new graph model. If no root is specified then a new root\n * <mxCell> with a default layer is created.\n * \n * Parameters:\n * \n * root - <mxCell> that represents the root cell.\n */\nfunction mxGraphModel(root)\n{\n\tthis.currentEdit = this.createUndoableEdit();\n\t\n\tif (root != null)\n\t{\n\t\tthis.setRoot(root);\n\t}\n\telse\n\t{\n\t\tthis.clear();\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphModel.prototype = new mxEventSource();\nmxGraphModel.prototype.constructor = mxGraphModel;\n\n/**\n * Variable: root\n * \n * Holds the root cell, which in turn contains the cells that represent the\n * layers of the diagram as child cells. That is, the actual elements of the\n * diagram are supposed to live in the third generation of cells and below.\n */\nmxGraphModel.prototype.root = null;\n\n/**\n * Variable: cells\n * \n * Maps from Ids to cells.\n */\nmxGraphModel.prototype.cells = null;\n\n/**\n * Variable: maintainEdgeParent\n * \n * Specifies if edges should automatically be moved into the nearest common\n * ancestor of their terminals. Default is true.\n */\nmxGraphModel.prototype.maintainEdgeParent = true;\n\n/**\n * Variable: ignoreRelativeEdgeParent\n * \n * Specifies if relative edge parents should be ignored for finding the nearest\n * common ancestors of an edge's terminals. Default is true.\n */\nmxGraphModel.prototype.ignoreRelativeEdgeParent = true;\n\n/**\n * Variable: createIds\n * \n * Specifies if the model should automatically create Ids for new cells.\n * Default is true.\n */\nmxGraphModel.prototype.createIds = true;\n\n/**\n * Variable: prefix\n * \n * Defines the prefix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.prefix = '';\n\n/**\n * Variable: postfix\n * \n * Defines the postfix of new Ids. Default is an empty string.\n */\nmxGraphModel.prototype.postfix = '';\n\n/**\n * Variable: nextId\n * \n * Specifies the next Id to be created. Initial value is 0.\n */\nmxGraphModel.prototype.nextId = 0;\n\n/**\n * Variable: currentEdit\n * \n * Holds the changes for the current transaction. If the transaction is\n * closed then a new object is created for this variable using\n * <createUndoableEdit>.\n */\nmxGraphModel.prototype.currentEdit = null;\n\n/**\n * Variable: updateLevel\n * \n * Counter for the depth of nested transactions. Each call to <beginUpdate>\n * will increment this number and each call to <endUpdate> will decrement\n * it. When the counter reaches 0, the transaction is closed and the\n * respective events are fired. Initial value is 0.\n */\nmxGraphModel.prototype.updateLevel = 0;\n\n/**\n * Variable: endingUpdate\n * \n * True if the program flow is currently inside endUpdate.\n */\nmxGraphModel.prototype.endingUpdate = false;\n\n/**\n * Function: clear\n *\n * Sets a new root using <createRoot>.\n */\nmxGraphModel.prototype.clear = function()\n{\n\tthis.setRoot(this.createRoot());\n};\n\n/**\n * Function: isCreateIds\n *\n * Returns <createIds>.\n */\nmxGraphModel.prototype.isCreateIds = function()\n{\n\treturn this.createIds;\n};\n\n/**\n * Function: setCreateIds\n *\n * Sets <createIds>.\n */\nmxGraphModel.prototype.setCreateIds = function(value)\n{\n\tthis.createIds = value;\n};\n\n/**\n * Function: createRoot\n *\n * Creates a new root cell with a default layer (child 0).\n */\nmxGraphModel.prototype.createRoot = function()\n{\n\tvar cell = new mxCell();\n\tcell.insert(new mxCell());\n\t\n\treturn cell;\n};\n\n/**\n * Function: getCell\n *\n * Returns the <mxCell> for the specified Id or null if no cell can be\n * found for the given Id.\n *\n * Parameters:\n * \n * id - A string representing the Id of the cell.\n */\nmxGraphModel.prototype.getCell = function(id)\n{\n\treturn (this.cells != null) ? this.cells[id] : null;\n};\n\n/**\n * Function: filterCells\n * \n * Returns the cells from the given array where the given filter function\n * returns true.\n */\nmxGraphModel.prototype.filterCells = function(cells, filter)\n{\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (filter(cells[i]))\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getDescendants\n * \n * Returns all descendants of the given cell and the cell itself in an array.\n * \n * Parameters:\n * \n * parent - <mxCell> whose descendants should be returned.\n */\nmxGraphModel.prototype.getDescendants = function(parent)\n{\n\treturn this.filterDescendants(null, parent);\n};\n\n/**\n * Function: filterDescendants\n * \n * Visits all cells recursively and applies the specified filter function\n * to each cell. If the function returns true then the cell is added\n * to the resulting array. The parent and result paramters are optional.\n * If parent is not specified then the recursion starts at <root>.\n * \n * Example:\n * The following example extracts all vertices from a given model:\n * (code)\n * var filter = function(cell)\n * {\n * \treturn model.isVertex(cell);\n * }\n * var vertices = model.filterDescendants(filter);\n * (end)\n * \n * Parameters:\n * \n * filter - JavaScript function that takes an <mxCell> as an argument\n * and returns a boolean.\n * parent - Optional <mxCell> that is used as the root of the recursion.\n */\nmxGraphModel.prototype.filterDescendants = function(filter, parent)\n{\n\t// Creates a new array for storing the result\n\tvar result = [];\n\n\t// Recursion starts at the root of the model\n\tparent = parent || this.getRoot();\n\t\n\t// Checks if the filter returns true for the cell\n\t// and adds it to the result array\n\tif (filter == null || filter(parent))\n\t{\n\t\tresult.push(parent);\n\t}\n\t\n\t// Visits the children of the cell\n\tvar childCount = this.getChildCount(parent);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\t\tresult = result.concat(this.filterDescendants(filter, child));\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root of the model or the topmost parent of the given cell.\n *\n * Parameters:\n * \n * cell - Optional <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.getRoot = function(cell)\n{\n\tvar root = cell || this.root;\n\t\n\tif (cell != null)\n\t{\n\t\twhile (cell != null)\n\t\t{\n\t\t\troot = cell;\n\t\t\tcell = this.getParent(cell);\n\t\t}\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: setRoot\n * \n * Sets the <root> of the model using <mxRootChange> and adds the change to\n * the current transaction. This resets all datastructures in the model and\n * is the preferred way of clearing an existing model. Returns the new\n * root.\n * \n * Example:\n * \n * (code)\n * var root = new mxCell();\n * root.insert(new mxCell());\n * model.setRoot(root);\n * (end)\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.setRoot = function(root)\n{\n\tthis.execute(new mxRootChange(this, root));\n\t\n\treturn root;\n};\n\n/**\n * Function: rootChanged\n * \n * Inner callback to change the root of the model and update the internal\n * datastructures, such as <cells> and <nextId>. Returns the previous root.\n *\n * Parameters:\n * \n * root - <mxCell> that specifies the new root.\n */\nmxGraphModel.prototype.rootChanged = function(root)\n{\n\tvar oldRoot = this.root;\n\tthis.root = root;\n\t\n\t// Resets counters and datastructures\n\tthis.nextId = 0;\n\tthis.cells = null;\n\tthis.cellAdded(root);\n\t\n\treturn oldRoot;\n};\n\n/**\n * Function: isRoot\n * \n * Returns true if the given cell is the root of the model and a non-null\n * value.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible root.\n */\nmxGraphModel.prototype.isRoot = function(cell)\n{\n\treturn cell != null && this.root == cell;\n};\n\n/**\n * Function: isLayer\n * \n * Returns true if <isRoot> returns true for the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible layer.\n */\nmxGraphModel.prototype.isLayer = function(cell)\n{\n\treturn this.isRoot(this.getParent(cell));\n};\n\n/**\n * Function: isAncestor\n * \n * Returns true if the given parent is an ancestor of the given child. Note \n * returns true if child == parent.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent.\n * child - <mxCell> that specifies the child.\n */\nmxGraphModel.prototype.isAncestor = function(parent, child)\n{\n\twhile (child != null && child != parent)\n\t{\n\t\tchild = this.getParent(child);\n\t}\n\t\n\treturn child == parent;\n};\n\n/**\n * Function: contains\n * \n * Returns true if the model contains the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n */\nmxGraphModel.prototype.contains = function(cell)\n{\n\treturn this.isAncestor(this.root, cell);\n};\n\n/**\n * Function: getParent\n * \n * Returns the parent of the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose parent should be returned.\n */\nmxGraphModel.prototype.getParent = function(cell)\n{\n\treturn (cell != null) ? cell.getParent() : null;\n};\n\n/**\n * Function: add\n * \n * Adds the specified child to the parent at the given index using\n * <mxChildChange> and adds the change to the current transaction. If no\n * index is specified then the child is appended to the parent's array of\n * children. Returns the inserted child.\n * \n * Parameters:\n * \n * parent - <mxCell> that specifies the parent to contain the child.\n * child - <mxCell> that specifies the child to be inserted.\n * index - Optional integer that specifies the index of the child.\n */\nmxGraphModel.prototype.add = function(parent, child, index)\n{\n\tif (child != parent && parent != null && child != null)\n\t{\t\n\t\t// Appends the child if no index was specified\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount(parent);\n\t\t}\n\t\t\n\t\tvar parentChanged = parent != this.getParent(child);\n\t\tthis.execute(new mxChildChange(this, parent, child, index));\n\n\t\t// Maintains the edges parents by moving the edges\n\t\t// into the nearest common ancestor of its terminals\n\t\tif (this.maintainEdgeParent && parentChanged)\n\t\t{\n\t\t\tthis.updateEdgeParents(child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: cellAdded\n * \n * Inner callback to update <cells> when a cell has been added. This\n * implementation resolves collisions by creating new Ids. To change the\n * ID of a cell after it was inserted into the model, use the following\n * code:\n * \n * (code\n * delete model.cells[cell.getId()];\n * cell.setId(newId);\n * model.cells[cell.getId()] = cell;\n * (end)\n *\n * If the change of the ID should be part of the command history, then the\n * cell should be removed from the model and a clone with the new ID should\n * be reinserted into the model instead.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been added.\n */\nmxGraphModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\t// Creates an Id for the cell if not Id exists\n\t\tif (cell.getId() == null && this.createIds)\n\t\t{\n\t\t\tcell.setId(this.createId(cell));\n\t\t}\n\t\t\n\t\tif (cell.getId() != null)\n\t\t{\n\t\t\tvar collision = this.getCell(cell.getId());\n\t\t\t\n\t\t\tif (collision != cell)\n\t\t\t{\t\n\t\t\t\t// Creates new Id for the cell\n\t\t\t\t// as long as there is a collision\n\t\t\t\twhile (collision != null)\n\t\t\t\t{\n\t\t\t\t\tcell.setId(this.createId(cell));\n\t\t\t\t\tcollision = this.getCell(cell.getId());\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Lazily creates the cells dictionary\n\t\t\t\tif (this.cells == null)\n\t\t\t\t{\n\t\t\t\t\tthis.cells = new Object();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cells[cell.getId()] = cell;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Makes sure IDs of deleted cells are not reused\n\t\tif (mxUtils.isNumeric(cell.getId()))\n\t\t{\n\t\t\tthis.nextId = Math.max(this.nextId, cell.getId());\n\t\t}\n\t\t\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tthis.cellAdded(this.getChildAt(cell, i));\n\t\t}\n\t}\n};\n\n/**\n * Function: createId\n * \n * Hook method to create an Id for the specified cell. This implementation\n * concatenates <prefix>, id and <postfix> to create the Id and increments\n * <nextId>. The cell is ignored by this implementation, but can be used in\n * overridden methods to prefix the Ids with eg. the cell type.\n *\n * Parameters:\n *\n * cell - <mxCell> to create the Id for.\n */\nmxGraphModel.prototype.createId = function(cell)\n{\n\tvar id = this.nextId;\n\tthis.nextId++;\n\t\n\treturn this.prefix + id + this.postfix;\n};\n\n/**\n * Function: updateEdgeParents\n * \n * Updates the parent for all edges that are connected to cell or one of\n * its descendants using <updateEdgeParent>.\n */\nmxGraphModel.prototype.updateEdgeParents = function(cell, root)\n{\n\t// Gets the topmost node of the hierarchy\n\troot = root || this.getRoot(cell);\n\t\n\t// Updates edges on children first\n\tvar childCount = this.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(cell, i);\n\t\tthis.updateEdgeParents(child, root);\n\t}\n\t\n\t// Updates the parents of all connected edges\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar edges = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tedges.push(this.getEdgeAt(cell, i));\n\t}\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar edge = edges[i];\n\t\t\n\t\t// Updates edge parent if edge and child have\n\t\t// a common root node (does not need to be the\n\t\t// model root node)\n\t\tif (this.isAncestor(root, edge))\n\t\t{\n\t\t\tthis.updateEdgeParent(edge, root);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateEdgeParent\n *\n * Inner callback to update the parent of the specified <mxCell> to the\n * nearest-common-ancestor of its two terminals.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * root - <mxCell> that represents the current root of the model.\n */\nmxGraphModel.prototype.updateEdgeParent = function(edge, root)\n{\n\tvar source = this.getTerminal(edge, true);\n\tvar target = this.getTerminal(edge, false);\n\tvar cell = null;\n\t\n\t// Uses the first non-relative descendants of the source terminal\n\twhile (source != null && !this.isEdge(source) &&\n\t\tsource.geometry != null && source.geometry.relative)\n\t{\n\t\tsource = this.getParent(source);\n\t}\n\t\n\t// Uses the first non-relative descendants of the target terminal\n\twhile (target != null && this.ignoreRelativeEdgeParent &&\n\t\t!this.isEdge(target) && target.geometry != null && \n\t\ttarget.geometry.relative)\n\t{\n\t\ttarget = this.getParent(target);\n\t}\n\t\n\tif (this.isAncestor(root, source) && this.isAncestor(root, target))\n\t{\n\t\tif (source == target)\n\t\t{\n\t\t\tcell = this.getParent(source);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcell = this.getNearestCommonAncestor(source, target);\n\t\t}\n\n\t\tif (cell != null && (this.getParent(cell) != this.root ||\n\t\t\tthis.isAncestor(cell, edge)) && this.getParent(edge) != cell)\n\t\t{\n\t\t\tvar geo = this.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar origin1 = this.getOrigin(this.getParent(edge));\n\t\t\t\tvar origin2 = this.getOrigin(cell);\n\t\t\t\t\n\t\t\t\tvar dx = origin2.x - origin1.x;\n\t\t\t\tvar dy = origin2.y - origin1.y;\n\t\t\t\t\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.translate(-dx, -dy);\n\t\t\t\tthis.setGeometry(edge, geo);\n\t\t\t}\n\n\t\t\tthis.add(cell, edge, this.getChildCount(cell));\n\t\t}\n\t}\n};\n\n/**\n * Function: getOrigin\n * \n * Returns the absolute, accumulated origin for the children inside the\n * given parent as an <mxPoint>.\n */\nmxGraphModel.prototype.getOrigin = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tresult = this.getOrigin(this.getParent(cell));\n\t\t\n\t\tif (!this.isEdge(cell))\n\t\t{\n\t\t\tvar geo = this.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tresult.x += geo.x;\n\t\t\t\tresult.y += geo.y;\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint();\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getNearestCommonAncestor\n * \n * Returns the nearest common ancestor for the specified cells.\n *\n * Parameters:\n * \n * cell1 - <mxCell> that specifies the first cell in the tree.\n * cell2 - <mxCell> that specifies the second cell in the tree.\n */\nmxGraphModel.prototype.getNearestCommonAncestor = function(cell1, cell2)\n{\n\tif (cell1 != null && cell2 != null)\n\t{\t\t\n\t\t// Creates the cell path for the second cell\n\t\tvar path = mxCellPath.create(cell2);\n\n\t\tif (path != null && path.length > 0)\n\t\t{\n\t\t\t// Bubbles through the ancestors of the first\n\t\t\t// cell to find the nearest common ancestor.\n\t\t\tvar cell = cell1;\n\t\t\tvar current = mxCellPath.create(cell);\n\t\t\t\n\t\t\t// Inverts arguments\n\t\t\tif (path.length < current.length)\n\t\t\t{\n\t\t\t\tcell = cell2;\n\t\t\t\tvar tmp = current;\n\t\t\t\tcurrent = path;\n\t\t\t\tpath = tmp;\n\t\t\t}\n\t\t\t\n\t\t\twhile (cell != null)\n\t\t\t{\n\t\t\t\tvar parent = this.getParent(cell);\n\t\t\t\t\n\t\t\t\t// Checks if the cell path is equal to the beginning of the given cell path\n\t\t\t\tif (path.indexOf(current + mxCellPath.PATH_SEPARATOR) == 0 && parent != null)\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrent = mxCellPath.getParentPath(current);\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: remove\n * \n * Removes the specified cell from the model using <mxChildChange> and adds\n * the change to the current transaction. This operation will remove the\n * cell and all of its children from the model. Returns the removed cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be removed.\n */\nmxGraphModel.prototype.remove = function(cell)\n{\n\tif (cell == this.root)\n\t{\n\t\tthis.setRoot(null);\n\t}\n\telse if (this.getParent(cell) != null)\n\t{\n\t\tthis.execute(new mxChildChange(this, null, cell));\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellRemoved\n * \n * Inner callback to update <cells> when a cell has been removed.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell that has been removed.\n */\nmxGraphModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null && this.cells != null)\n\t{\n\t\t// Recursively processes child cells\n\t\tvar childCount = this.getChildCount(cell);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tthis.cellRemoved(this.getChildAt(cell, i));\n\t\t}\n\t\t\n\t\t// Removes the dictionary entry for the cell\n\t\tif (this.cells != null && cell.getId() != null)\n\t\t{\n\t\t\tdelete this.cells[cell.getId()];\n\t\t}\n\t}\n};\n\n/**\n * Function: parentForCellChanged\n * \n * Inner callback to update the parent of a cell using <mxCell.insert>\n * on the parent and return the previous parent.\n *\n * Parameters:\n * \n * cell - <mxCell> to update the parent for.\n * parent - <mxCell> that specifies the new parent of the cell.\n * index - Optional integer that defines the index of the child\n * in the parent's child array.\n */\nmxGraphModel.prototype.parentForCellChanged = function(cell, parent, index)\n{\n\tvar previous = this.getParent(cell);\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent != previous || previous.getIndex(cell) != index)\n\t\t{\n\t\t\tparent.insert(cell, index);\n\t\t}\n\t}\n\telse if (previous != null)\n\t{\n\t\tvar oldIndex = previous.getIndex(cell);\n\t\tprevious.remove(oldIndex);\n\t}\n\t\n\t// Adds or removes the cell from the model\n\tvar par = this.contains(parent);\n\tvar pre = this.contains(previous);\n\t\n\tif (par && !pre)\n\t{\n\t\tthis.cellAdded(cell);\n\t}\n\telse if (pre && !par)\n\t{\n\t\tthis.cellRemoved(cell);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of children in the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> whose number of children should be returned.\n */\nmxGraphModel.prototype.getChildCount = function(cell)\n{\n\treturn (cell != null) ? cell.getChildCount() : 0;\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child of the given <mxCell> at the given index.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the parent.\n * index - Integer that specifies the index of the child to be returned.\n */\nmxGraphModel.prototype.getChildAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getChildAt(index) : null;\n};\n\n/**\n * Function: getChildren\n * \n * Returns all children of the given <mxCell> as an array of <mxCells>. The\n * return value should be only be read.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n */\nmxGraphModel.prototype.getChildren = function(cell)\n{\n\treturn (cell != null) ? cell.children : null;\n};\n\t\n/**\n * Function: getChildVertices\n * \n * Returns the child vertices of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child vertices should be returned.\n */\nmxGraphModel.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\t\n/**\n * Function: getChildEdges\n * \n * Returns the child edges of the given parent.\n *\n * Parameters:\n * \n * cell - <mxCell> whose child edges should be returned.\n */\nmxGraphModel.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the children of the given cell that are vertices and/or edges\n * depending on the arguments.\n *\n * Parameters:\n * \n * cell - <mxCell> the represents the parent.\n * vertices - Boolean indicating if child vertices should be returned.\n * Default is false.\n * edges - Boolean indicating if child edges should be returned.\n * Default is false.\n */\nmxGraphModel.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\t\n\tvar childCount = this.getChildCount(parent);\n\tvar result = [];\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.getChildAt(parent, i);\n\n\t\tif ((!edges && !vertices) || (edges && this.isEdge(child)) ||\n\t\t\t(vertices && this.isVertex(child)))\n\t\t{\n\t\t\tresult.push(child);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\t\n/**\n * Function: getTerminal\n * \n * Returns the source or target <mxCell> of the given edge depending on the\n * value of the boolean parameter.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * isSource - Boolean indicating which end of the edge should be returned.\n */\nmxGraphModel.prototype.getTerminal = function(edge, isSource)\n{\n\treturn (edge != null) ? edge.getTerminal(isSource) : null;\n};\n\n/**\n * Function: setTerminal\n * \n * Sets the source or target terminal of the given <mxCell> using\n * <mxTerminalChange> and adds the change to the current transaction.\n * This implementation updates the parent of the edge using <updateEdgeParent>\n * if required.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.setTerminal = function(edge, terminal, isSource)\n{\n\tvar terminalChanged = terminal != this.getTerminal(edge, isSource);\n\tthis.execute(new mxTerminalChange(this, edge, terminal, isSource));\n\t\n\tif (this.maintainEdgeParent && terminalChanged)\n\t{\n\t\tthis.updateEdgeParent(edge, this.getRoot());\n\t}\n\t\n\treturn terminal;\n};\n\t\n/**\n * Function: setTerminals\n * \n * Sets the source and target <mxCell> of the given <mxCell> in a single\n * transaction using <setTerminal> for each end of the edge.\n *\n * Parameters:\n * \n * edge - <mxCell> that specifies the edge.\n * source - <mxCell> that specifies the new source terminal.\n * target - <mxCell> that specifies the new target terminal.\n */\nmxGraphModel.prototype.setTerminals = function(edge, source, target)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tthis.setTerminal(edge, source, true);\n\t\tthis.setTerminal(edge, target, false);\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: terminalForCellChanged\n * \n * Inner helper function to update the terminal of the edge using\n * <mxCell.insertEdge> and return the previous terminal.\n * \n * Parameters:\n * \n * edge - <mxCell> that specifies the edge to be updated.\n * terminal - <mxCell> that specifies the new terminal.\n * isSource - Boolean indicating if the terminal is the new source or\n * target terminal of the edge.\n */\nmxGraphModel.prototype.terminalForCellChanged = function(edge, terminal, isSource)\n{\n\tvar previous = this.getTerminal(edge, isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.insertEdge(edge, isSource);\n\t}\n\telse if (previous != null)\n\t{\n\t\tprevious.removeEdge(edge, isSource);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: getEdgeCount\n * \n * Returns the number of distinct edges connected to the given cell.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the vertex.\n */\nmxGraphModel.prototype.getEdgeCount = function(cell)\n{\n\treturn (cell != null) ? cell.getEdgeCount() : 0;\n};\n\n/**\n * Function: getEdgeAt\n * \n * Returns the edge of cell at the given index.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the vertex.\n * index - Integer that specifies the index of the edge\n * to return.\n */\nmxGraphModel.prototype.getEdgeAt = function(cell, index)\n{\n\treturn (cell != null) ? cell.getEdgeAt(index) : null;\n};\n\t\n/**\n * Function: getDirectedEdgeCount\n * \n * Returns the number of incoming or outgoing edges, ignoring the given\n * edge.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edge count should be returned.\n * outgoing - Boolean that specifies if the number of outgoing or\n * incoming edges should be returned.\n * ignoredEdge - <mxCell> that represents an edge to be ignored.\n */\nmxGraphModel.prototype.getDirectedEdgeCount = function(cell, outgoing, ignoredEdge)\n{\n\tvar count = 0;\n\tvar edgeCount = this.getEdgeCount(cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\n\t\tif (edge != ignoredEdge && this.getTerminal(edge, outgoing) == cell)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n};\n\n/**\n * Function: getConnections\n * \n * Returns all edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * \n */\nmxGraphModel.prototype.getConnections = function(cell)\n{\n\treturn this.getEdges(cell, true, true, false);\n};\n\n/**\n * Function: getIncomingEdges\n * \n * Returns the incoming edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * \n */\nmxGraphModel.prototype.getIncomingEdges = function(cell)\n{\n\treturn this.getEdges(cell, true, false, false);\n};\n\n/**\n * Function: getOutgoingEdges\n * \n * Returns the outgoing edges of the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * \n */\nmxGraphModel.prototype.getOutgoingEdges = function(cell)\n{\n\treturn this.getEdges(cell, false, true, false);\n};\n\n/**\n * Function: getEdges\n * \n * Returns all distinct edges connected to this cell as a new array of\n * <mxCells>. If at least one of incoming or outgoing is true, then loops\n * are ignored, otherwise if both are false, then all edges connected to\n * the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> that specifies the cell.\n * incoming - Optional boolean that specifies if incoming edges should be\n * returned. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should be\n * returned. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be returned.\n * Default is true. \n */\nmxGraphModel.prototype.getEdges = function(cell, incoming, outgoing, includeLoops)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\t\n\tvar edgeCount = this.getEdgeCount(cell);\n\tvar result = [];\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(cell, i);\n\t\tvar source = this.getTerminal(edge, true);\n\t\tvar target = this.getTerminal(edge, false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming && target == cell) ||\n\t\t\t(outgoing && source == cell))))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns all edges between the given source and target pair. If directed\n * is true, then only edges from the source to the target are returned,\n * otherwise, all edges between the two cells are returned.\n * \n * Parameters:\n * \n * source - <mxCell> that defines the source terminal of the edge to be\n * returned.\n * target - <mxCell> that defines the target terminal of the edge to be\n * returned.\n * directed - Optional boolean that specifies if the direction of the\n * edge should be taken into account. Default is false.\n */\nmxGraphModel.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\t\n\tvar tmp1 = this.getEdgeCount(source);\n\tvar tmp2 = this.getEdgeCount(target);\n\t\n\t// Assumes the source has less connected edges\n\tvar terminal = source;\n\tvar edgeCount = tmp1;\n\t\n\t// Uses the smaller array of connected edges\n\t// for searching the edge\n\tif (tmp2 < tmp1)\n\t{\n\t\tedgeCount = tmp2;\n\t\tterminal = target;\n\t}\n\t\n\tvar result = [];\n\t\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar edge = this.getEdgeAt(terminal, i);\n\t\tvar src = this.getTerminal(edge, true);\n\t\tvar trg = this.getTerminal(edge, false);\n\t\tvar directedMatch = (src == source) && (trg == target);\n\t\tvar oppositeMatch = (trg == source) && (src == target);\n\n\t\tif (directedMatch || (!directed && oppositeMatch))\n\t\t{\n\t\t\tresult.push(edge);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all opposite vertices wrt terminal for the given edges, only\n * returning sources and/or targets as specified. The result is returned\n * as an array of <mxCells>.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contain the edges to be examined.\n * terminal - <mxCell> that specifies the known end of the edges.\n * sources - Boolean that specifies if source terminals should be contained\n * in the result. Default is true.\n * targets - Boolean that specifies if target terminals should be contained\n * in the result. Default is true.\n */\nmxGraphModel.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar source = this.getTerminal(edges[i], true);\n\t\t\tvar target = this.getTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of\n\t\t\t// the edge and if the target should be\n\t\t\t// stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tterminals.push(target);\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of\n\t\t\t// the edge and if the source should be\n\t\t\t// stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tterminals.push(source);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getTopmostCells\n * \n * Returns the topmost cells of the hierarchy in an array that contains no\n * descendants for each <mxCell> that it contains. Duplicates should be\n * removed in the cells array to improve performance.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose topmost ancestors should be returned.\n */\nmxGraphModel.prototype.getTopmostCells = function(cells)\n{\n\tvar dict = new mxDictionary();\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tdict.put(cells[i], true);\n\t}\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\t\tvar topmost = true;\n\t\tvar parent = this.getParent(cell);\n\t\t\n\t\twhile (parent != null)\n\t\t{\n\t\t\tif (dict.get(parent))\n\t\t\t{\n\t\t\t\ttopmost = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tparent = this.getParent(parent);\n\t\t}\n\t\t\n\t\tif (topmost)\n\t\t{\n\t\t\ttmp.push(cell);\n\t\t}\n\t}\n\t\n\treturn tmp;\n};\n\n/**\n * Function: isVertex\n * \n * Returns true if the given cell is a vertex.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible vertex.\n */\nmxGraphModel.prototype.isVertex = function(cell)\n{\n\treturn (cell != null) ? cell.isVertex() : false;\n};\n\n/**\n * Function: isEdge\n * \n * Returns true if the given cell is an edge.\n *\n * Parameters:\n * \n * cell - <mxCell> that represents the possible edge.\n */\nmxGraphModel.prototype.isEdge = function(cell)\n{\n\treturn (cell != null) ? cell.isEdge() : false;\n};\n\n/**\n * Function: isConnectable\n * \n * Returns true if the given <mxCell> is connectable. If <edgesConnectable>\n * is false, then this function returns false for all edges else it returns\n * the return value of <mxCell.isConnectable>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraphModel.prototype.isConnectable = function(cell)\n{\n\treturn (cell != null) ? cell.isConnectable() : false;\n};\n\n/**\n * Function: getValue\n * \n * Returns the user object of the given <mxCell> using <mxCell.getValue>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be returned.\n */\nmxGraphModel.prototype.getValue = function(cell)\n{\n\treturn (cell != null) ? cell.getValue() : null;\n};\n\n/**\n * Function: setValue\n * \n * Sets the user object of then given <mxCell> using <mxValueChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose user object should be changed.\n * value - Object that defines the new user object.\n */\nmxGraphModel.prototype.setValue = function(cell, value)\n{\n\tthis.execute(new mxValueChange(this, cell, value));\n\t\n\treturn value;\n};\n\n/**\n * Function: valueForCellChanged\n * \n * Inner callback to update the user object of the given <mxCell>\n * using <mxCell.valueChanged> and return the previous value,\n * that is, the return value of <mxCell.valueChanged>.\n * \n * To change a specific attribute in an XML node, the following code can be\n * used.\n * \n * (code)\n * graph.getModel().valueForCellChanged = function(cell, value)\n * {\n *   var previous = cell.value.getAttribute('label');\n *   cell.value.setAttribute('label', value);\n *   \n *   return previous;\n * };\n * (end) \n */\nmxGraphModel.prototype.valueForCellChanged = function(cell, value)\n{\n\treturn cell.valueChanged(value);\n};\n\n/**\n * Function: getGeometry\n * \n * Returns the <mxGeometry> of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraphModel.prototype.getGeometry = function(cell)\n{\n\treturn (cell != null) ? cell.getGeometry() : null;\n};\n\n/**\n * Function: setGeometry\n * \n * Sets the <mxGeometry> of the given <mxCell>. The actual update\n * of the cell is carried out in <geometryForCellChanged>. The\n * <mxGeometryChange> action is used to encapsulate the change.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be changed.\n * geometry - <mxGeometry> that defines the new geometry.\n */\nmxGraphModel.prototype.setGeometry = function(cell, geometry)\n{\n\tif (geometry != this.getGeometry(cell))\n\t{\n\t\tthis.execute(new mxGeometryChange(this, cell, geometry));\n\t}\n\t\n\treturn geometry;\n};\n\n/**\n * Function: geometryForCellChanged\n * \n * Inner callback to update the <mxGeometry> of the given <mxCell> using\n * <mxCell.setGeometry> and return the previous <mxGeometry>.\n */\nmxGraphModel.prototype.geometryForCellChanged = function(cell, geometry)\n{\n\tvar previous = this.getGeometry(cell);\n\tcell.setGeometry(geometry);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getStyle\n * \n * Returns the style of the given <mxCell>.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be returned.\n */\nmxGraphModel.prototype.getStyle = function(cell)\n{\n\treturn (cell != null) ? cell.getStyle() : null;\n};\n\n/**\n * Function: setStyle\n * \n * Sets the style of the given <mxCell> using <mxStyleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose style should be changed.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.setStyle = function(cell, style)\n{\n\tif (style != this.getStyle(cell))\n\t{\n\t\tthis.execute(new mxStyleChange(this, cell, style));\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: styleForCellChanged\n * \n * Inner callback to update the style of the given <mxCell>\n * using <mxCell.setStyle> and return the previous style.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * style - String of the form [stylename;|key=value;] to specify\n * the new cell style.\n */\nmxGraphModel.prototype.styleForCellChanged = function(cell, style)\n{\n\tvar previous = this.getStyle(cell);\n\tcell.setStyle(style);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isCollapsed\n * \n * Returns true if the given <mxCell> is collapsed.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraphModel.prototype.isCollapsed = function(cell)\n{\n\treturn (cell != null) ? cell.isCollapsed() : false;\n};\n\n/**\n * Function: setCollapsed\n * \n * Sets the collapsed state of the given <mxCell> using <mxCollapseChange>\n * and adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be changed.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.setCollapsed = function(cell, collapsed)\n{\n\tif (collapsed != this.isCollapsed(cell))\n\t{\n\t\tthis.execute(new mxCollapseChange(this, cell, collapsed));\n\t}\n\t\n\treturn collapsed;\n};\n\t\n/**\n * Function: collapsedStateForCellChanged\n *\n * Inner callback to update the collapsed state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous collapsed state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * collapsed - Boolean that specifies the new collpased state.\n */\nmxGraphModel.prototype.collapsedStateForCellChanged = function(cell, collapsed)\n{\n\tvar previous = this.isCollapsed(cell);\n\tcell.setCollapsed(collapsed);\n\t\n\treturn previous;\n};\n\n/**\n * Function: isVisible\n * \n * Returns true if the given <mxCell> is visible.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraphModel.prototype.isVisible = function(cell)\n{\n\treturn (cell != null) ? cell.isVisible() : false;\n};\n\n/**\n * Function: setVisible\n * \n * Sets the visible state of the given <mxCell> using <mxVisibleChange> and\n * adds the change to the current transaction.\n *\n * Parameters:\n * \n * cell - <mxCell> whose visible state should be changed.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.setVisible = function(cell, visible)\n{\n\tif (visible != this.isVisible(cell))\n\t{\n\t\tthis.execute(new mxVisibleChange(this, cell, visible));\n\t}\n\t\n\treturn visible;\n};\n\t\n/**\n * Function: visibleStateForCellChanged\n *\n * Inner callback to update the visible state of the\n * given <mxCell> using <mxCell.setCollapsed> and return\n * the previous visible state.\n *\n * Parameters:\n * \n * cell - <mxCell> that specifies the cell to be updated.\n * visible - Boolean that specifies the new visible state.\n */\nmxGraphModel.prototype.visibleStateForCellChanged = function(cell, visible)\n{\n\tvar previous = this.isVisible(cell);\n\tcell.setVisible(visible);\n\t\n\treturn previous;\n};\n\n/**\n * Function: execute\n * \n * Executes the given edit and fires events if required. The edit object\n * requires an execute function which is invoked. The edit is added to the\n * <currentEdit> between <beginUpdate> and <endUpdate> calls, so that\n * events will be fired if this execute is an individual transaction, that\n * is, if no previous <beginUpdate> calls have been made without calling\n * <endUpdate>. This implementation fires an <execute> event before\n * executing the given change.\n * \n * Parameters:\n * \n * change - Object that described the change.\n */\nmxGraphModel.prototype.execute = function(change)\n{\n\tchange.execute();\n\tthis.beginUpdate();\n\tthis.currentEdit.add(change);\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTE, 'change', change));\n\t// New global executed event\n\tthis.fireEvent(new mxEventObject(mxEvent.EXECUTED, 'change', change));\n\tthis.endUpdate();\n};\n\n/**\n * Function: beginUpdate\n * \n * Increments the <updateLevel> by one. The event notification\n * is queued until <updateLevel> reaches 0 by use of\n * <endUpdate>.\n *\n * All changes on <mxGraphModel> are transactional,\n * that is, they are executed in a single undoable change\n * on the model (without transaction isolation).\n * Therefore, if you want to combine any\n * number of changes into a single undoable change,\n * you should group any two or more API calls that\n * modify the graph model between <beginUpdate>\n * and <endUpdate> calls as shown here:\n * \n * (code)\n * var model = graph.getModel();\n * var parent = graph.getDefaultParent();\n * var index = model.getChildCount(parent);\n * model.beginUpdate();\n * try\n * {\n *   model.add(parent, v1, index);\n *   model.add(parent, v2, index+1);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * Of course there is a shortcut for appending a\n * sequence of cells into the default parent:\n * \n * (code)\n * graph.addCells([v1, v2]).\n * (end)\n */\nmxGraphModel.prototype.beginUpdate = function()\n{\n\tthis.updateLevel++;\n\tthis.fireEvent(new mxEventObject(mxEvent.BEGIN_UPDATE));\n\t\n\tif (this.updateLevel == 1)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDIT));\n\t}\n};\n\n/**\n * Function: endUpdate\n * \n * Decrements the <updateLevel> by one and fires an <undo>\n * event if the <updateLevel> reaches 0. This function\n * indirectly fires a <change> event by invoking the notify\n * function on the <currentEdit> und then creates a new\n * <currentEdit> using <createUndoableEdit>.\n *\n * The <undo> event is fired only once per edit, whereas\n * the <change> event is fired whenever the notify\n * function is invoked, that is, on undo and redo of\n * the edit.\n */\nmxGraphModel.prototype.endUpdate = function()\n{\n\tthis.updateLevel--;\n\t\n\tif (this.updateLevel == 0)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_EDIT));\n\t}\n\t\n\tif (!this.endingUpdate)\n\t{\n\t\tthis.endingUpdate = this.updateLevel == 0;\n\t\tthis.fireEvent(new mxEventObject(mxEvent.END_UPDATE, 'edit', this.currentEdit));\n\n\t\ttry\n\t\t{\t\t\n\t\t\tif (this.endingUpdate && !this.currentEdit.isEmpty())\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_UNDO, 'edit', this.currentEdit));\n\t\t\t\tvar tmp = this.currentEdit;\n\t\t\t\tthis.currentEdit = this.createUndoableEdit();\n\t\t\t\ttmp.notify();\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', tmp));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.endingUpdate = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: createUndoableEdit\n * \n * Creates a new <mxUndoableEdit> that implements the\n * notify function to fire a <change> and <notify> event\n * through the <mxUndoableEdit>'s source.\n * \n * Parameters:\n * \n * significant - Optional boolean that specifies if the edit to be created is\n * significant. Default is true.\n */\nmxGraphModel.prototype.createUndoableEdit = function(significant)\n{\n\tvar edit = new mxUndoableEdit(this, (significant != null) ? significant : true);\n\t\n\tedit.notify = function()\n\t{\n\t\t// LATER: Remove changes property (deprecated)\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t\tedit.source.fireEvent(new mxEventObject(mxEvent.NOTIFY,\n\t\t\t'edit', edit, 'changes', edit.changes));\n\t};\n\t\n\treturn edit;\n};\n\n/**\n * Function: mergeChildren\n * \n * Merges the children of the given cell into the given target cell inside\n * this model. All cells are cloned unless there is a corresponding cell in\n * the model with the same id, in which case the source cell is ignored and\n * all edges are connected to the corresponding cell in this model. Edges\n * are considered to have no identity and are always cloned unless the\n * cloneAllEdges flag is set to false, in which case edges with the same\n * id in the target model are reconnected to reflect the terminals of the\n * source edges.\n */\nmxGraphModel.prototype.mergeChildren = function(from, to, cloneAllEdges)\n{\n\tcloneAllEdges = (cloneAllEdges != null) ? cloneAllEdges : true;\n\t\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar mapping = new Object();\n\t\tthis.mergeChildrenImpl(from, to, cloneAllEdges, mapping);\n\t\t\n\t\t// Post-processes all edges in the mapping and\n\t\t// reconnects the terminals to the corresponding\n\t\t// cells in the target model\n\t\tfor (var key in mapping)\n\t\t{\n\t\t\tvar cell = mapping[key];\n\t\t\tvar terminal = this.getTerminal(cell, true);\n\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, true);\n\t\t\t}\n\t\t\t\n\t\t\tterminal = this.getTerminal(cell, false);\n\t\t\t\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tterminal = mapping[mxCellPath.create(terminal)];\n\t\t\t\tthis.setTerminal(cell, terminal, false);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: mergeChildren\n * \n * Clones the children of the source cell into the given target cell in\n * this model and adds an entry to the mapping that maps from the source\n * cell to the target cell with the same id or the clone of the source cell\n * that was inserted into this model.\n */\nmxGraphModel.prototype.mergeChildrenImpl = function(from, to, cloneAllEdges, mapping)\n{\n\tthis.beginUpdate();\n\ttry\n\t{\n\t\tvar childCount = from.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar cell = from.getChildAt(i);\n\t\t\t\n\t\t\tif (typeof(cell.getId) == 'function')\n\t\t\t{\n\t\t\t\tvar id = cell.getId();\n\t\t\t\tvar target = (id != null && (!this.isEdge(cell) || !cloneAllEdges)) ?\n\t\t\t\t\t\tthis.getCell(id) : null;\n\t\t\t\t\n\t\t\t\t// Clones and adds the child if no cell exists for the id\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar clone = cell.clone();\n\t\t\t\t\tclone.setId(id);\n\t\t\t\t\t\n\t\t\t\t\t// Sets the terminals from the original cell to the clone\n\t\t\t\t\t// because the lookup uses strings not cells in JS\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(true), true);\n\t\t\t\t\tclone.setTerminal(cell.getTerminal(false), false);\n\t\t\t\t\t\n\t\t\t\t\t// Do *NOT* use model.add as this will move the edge away\n\t\t\t\t\t// from the parent in updateEdgeParent if maintainEdgeParent\n\t\t\t\t\t// is enabled in the target model\n\t\t\t\t\ttarget = to.insert(clone);\n\t\t\t\t\tthis.cellAdded(target);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Stores the mapping for later reconnecting edges\n\t\t\t\tmapping[mxCellPath.create(cell)] = target;\n\t\t\t\t\n\t\t\t\t// Recurses\n\t\t\t\tthis.mergeChildrenImpl(cell, target, cloneAllEdges, mapping);\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.endUpdate();\n\t}\n};\n\n/**\n * Function: getParents\n * \n * Returns an array that represents the set (no duplicates) of all parents\n * for the given array of cells.\n * \n * Parameters:\n * \n * cells - Array of cells whose parents should be returned.\n */\nmxGraphModel.prototype.getParents = function(cells)\n{\n\tvar parents = [];\n\t\n\tif (cells != null)\n\t{\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = this.getParent(cells[i]);\n\t\t\t\n\t\t\tif (parent != null && !dict.get(parent))\n\t\t\t{\n\t\t\t\tdict.put(parent, true);\n\t\t\t\tparents.push(parent);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn parents;\n};\n\n//\n// Cell Cloning\n//\n\n/**\n * Function: cloneCell\n * \n * Returns a deep clone of the given <mxCell> (including\n * the children) which is created using <cloneCells>.\n *\n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n */\nmxGraphModel.prototype.cloneCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn this.cloneCells([cell], true)[0];\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: cloneCells\n * \n * Returns an array of clones for the given array of <mxCells>.\n * Depending on the value of includeChildren, a deep clone is created for\n * each cell. Connections are restored based if the corresponding\n * cell is contained in the passed in array.\n *\n * Parameters:\n * \n * cells - Array of <mxCell> to be cloned.\n * includeChildren - Boolean indicating if the cells should be cloned\n * with all descendants.\n * mapping - Optional mapping for existing clones.\n */\nmxGraphModel.prototype.cloneCells = function(cells, includeChildren, mapping)\n{\n\tmapping = (mapping != null) ? mapping : new Object();\n\tvar clones = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (cells[i] != null)\n\t\t{\n\t\t\tclones.push(this.cloneCellImpl(cells[i], mapping, includeChildren));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones.push(null);\n\t\t}\n\t}\n\t\n\tfor (var i = 0; i < clones.length; i++)\n\t{\n\t\tif (clones[i] != null)\n\t\t{\n\t\t\tthis.restoreClone(clones[i], cells[i], mapping);\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\t\t\t\n/**\n * Function: cloneCellImpl\n * \n * Inner helper method for cloning cells recursively.\n */\nmxGraphModel.prototype.cloneCellImpl = function(cell, mapping, includeChildren)\n{\n\tvar ident = mxObjectIdentity.get(cell);\n\tvar clone = mapping[ident];\n\t\n\tif (clone == null)\n\t{\n\t\tclone = this.cellCloned(cell);\n\t\tmapping[ident] = clone;\n\n\t\tif (includeChildren)\n\t\t{\n\t\t\tvar childCount = this.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cloneChild = this.cloneCellImpl(\n\t\t\t\t\tthis.getChildAt(cell, i), mapping, true);\n\t\t\t\tclone.insert(cloneChild);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn clone;\n};\n\n/**\n * Function: cellCloned\n * \n * Hook for cloning the cell. This returns cell.clone() or\n * any possible exceptions.\n */\nmxGraphModel.prototype.cellCloned = function(cell)\n{\n\treturn cell.clone();\n};\n\n/**\n * Function: restoreClone\n * \n * Inner helper method for restoring the connections in\n * a network of cloned cells.\n */\nmxGraphModel.prototype.restoreClone = function(clone, cell, mapping)\n{\n\tvar source = this.getTerminal(cell, true);\n\t\n\tif (source != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(source)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\ttmp.insertEdge(clone, true);\n\t\t}\n\t}\n\t\n\tvar target = this.getTerminal(cell, false);\n\t\n\tif (target != null)\n\t{\n\t\tvar tmp = mapping[mxObjectIdentity.get(target)];\n\t\t\n\t\tif (tmp != null)\n\t\t{\t\n\t\t\ttmp.insertEdge(clone, false);\n\t\t}\n\t}\n\t\n\tvar childCount = this.getChildCount(clone);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.restoreClone(this.getChildAt(clone, i),\n\t\t\tthis.getChildAt(cell, i), mapping);\n\t}\n};\n\n//\n// Atomic changes\n//\n\n/**\n * Class: mxRootChange\n * \n * Action to change the root in a model.\n *\n * Constructor: mxRootChange\n * \n * Constructs a change of the root in the\n * specified model.\n */\nfunction mxRootChange(model, root)\n{\n\tthis.model = model;\n\tthis.root = root;\n\tthis.previous = root;\n};\n\n/**\n * Function: execute\n * \n * Carries out a change of the root using\n * <mxGraphModel.rootChanged>.\n */\nmxRootChange.prototype.execute = function()\n{\n\tthis.root = this.previous;\n\tthis.previous = this.model.rootChanged(this.previous);\n};\n\n/**\n * Class: mxChildChange\n * \n * Action to add or remove a child in a model.\n *\n * Constructor: mxChildChange\n * \n * Constructs a change of a child in the\n * specified model.\n */\nfunction mxChildChange(model, parent, child, index)\n{\n\tthis.model = model;\n\tthis.parent = parent;\n\tthis.previous = parent;\n\tthis.child = child;\n\tthis.index = index;\n\tthis.previousIndex = index;\n};\n\n/**\n * Function: execute\n * \n * Changes the parent of <child> using\n * <mxGraphModel.parentForCellChanged> and\n * removes or restores the cell's\n * connections.\n */\nmxChildChange.prototype.execute = function()\n{\n\tif (this.child != null)\n\t{\n\t\tvar tmp = this.model.getParent(this.child);\n\t\tvar tmp2 = (tmp != null) ? tmp.getIndex(this.child) : 0;\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.connect(this.child, false);\n\t\t}\n\t\t\n\t\ttmp = this.model.parentForCellChanged(\n\t\t\tthis.child, this.previous, this.previousIndex);\n\t\t\t\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.connect(this.child, true);\n\t\t}\n\t\t\n\t\tthis.parent = this.previous;\n\t\tthis.previous = tmp;\n\t\tthis.index = this.previousIndex;\n\t\tthis.previousIndex = tmp2;\n\t}\n};\n\n/**\n * Function: disconnect\n * \n * Disconnects the given cell recursively from its\n * terminals and stores the previous terminal in the\n * cell's terminals.\n */\nmxChildChange.prototype.connect = function(cell, isConnect)\n{\n\tisConnect = (isConnect != null) ? isConnect : true;\n\t\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\t\n\tif (source != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, source, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, true);\n\t\t}\n\t}\n\t\n\tif (target != null)\n\t{\n\t\tif (isConnect)\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, target, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.terminalForCellChanged(cell, null, false);\n\t\t}\n\t}\n\t\n\tcell.setTerminal(source, true);\n\tcell.setTerminal(target, false);\n\t\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i=0; i<childCount; i++)\n\t{\n\t\tthis.connect(this.model.getChildAt(cell, i), isConnect);\n\t}\n};\n\n/**\n * Class: mxTerminalChange\n * \n * Action to change a terminal in a model.\n *\n * Constructor: mxTerminalChange\n * \n * Constructs a change of a terminal in the \n * specified model.\n */\nfunction mxTerminalChange(model, cell, terminal, source)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.terminal = terminal;\n\tthis.previous = terminal;\n\tthis.source = source;\n};\n\n/**\n * Function: execute\n * \n * Changes the terminal of <cell> to <previous> using\n * <mxGraphModel.terminalForCellChanged>.\n */\nmxTerminalChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.terminal = this.previous;\n\t\tthis.previous = this.model.terminalForCellChanged(\n\t\t\tthis.cell, this.previous, this.source);\n\t}\n};\n\n/**\n * Class: mxValueChange\n * \n * Action to change a user object in a model.\n *\n * Constructor: mxValueChange\n * \n * Constructs a change of a user object in the \n * specified model.\n */\nfunction mxValueChange(model, cell, value)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the value of <cell> to <previous> using\n * <mxGraphModel.valueForCellChanged>.\n */\nmxValueChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.value = this.previous;\n\t\tthis.previous = this.model.valueForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxStyleChange\n * \n * Action to change a cell's style in a model.\n *\n * Constructor: mxStyleChange\n * \n * Constructs a change of a style in the\n * specified model.\n */\nfunction mxStyleChange(model, cell, style)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.style = style;\n\tthis.previous = style;\n};\n\n/**\n * Function: execute\n * \n * Changes the style of <cell> to <previous> using\n * <mxGraphModel.styleForCellChanged>.\n */\nmxStyleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.style = this.previous;\n\t\tthis.previous = this.model.styleForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxGeometryChange\n * \n * Action to change a cell's geometry in a model.\n *\n * Constructor: mxGeometryChange\n * \n * Constructs a change of a geometry in the\n * specified model.\n */\nfunction mxGeometryChange(model, cell, geometry)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.geometry = geometry;\n\tthis.previous = geometry;\n};\n\n/**\n * Function: execute\n * \n * Changes the geometry of <cell> ro <previous> using\n * <mxGraphModel.geometryForCellChanged>.\n */\nmxGeometryChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.geometry = this.previous;\n\t\tthis.previous = this.model.geometryForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCollapseChange\n * \n * Action to change a cell's collapsed state in a model.\n *\n * Constructor: mxCollapseChange\n * \n * Constructs a change of a collapsed state in the\n * specified model.\n */\nfunction mxCollapseChange(model, cell, collapsed)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.collapsed = collapsed;\n\tthis.previous = collapsed;\n};\n\n/**\n * Function: execute\n * \n * Changes the collapsed state of <cell> to <previous> using\n * <mxGraphModel.collapsedStateForCellChanged>.\n */\nmxCollapseChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.collapsed = this.previous;\n\t\tthis.previous = this.model.collapsedStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxVisibleChange\n * \n * Action to change a cell's visible state in a model.\n *\n * Constructor: mxVisibleChange\n * \n * Constructs a change of a visible state in the\n * specified model.\n */\nfunction mxVisibleChange(model, cell, visible)\n{\n\tthis.model = model;\n\tthis.cell = cell;\n\tthis.visible = visible;\n\tthis.previous = visible;\n};\n\n/**\n * Function: execute\n * \n * Changes the visible state of <cell> to <previous> using\n * <mxGraphModel.visibleStateForCellChanged>.\n */\nmxVisibleChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tthis.visible = this.previous;\n\t\tthis.previous = this.model.visibleStateForCellChanged(\n\t\t\tthis.cell, this.previous);\n\t}\n};\n\n/**\n * Class: mxCellAttributeChange\n * \n * Action to change the attribute of a cell's user object.\n * There is no method on the graph model that uses this\n * action. To use the action, you can use the code shown\n * in the example below.\n * \n * Example:\n * \n * To change the attributeName in the cell's user object\n * to attributeValue, use the following code:\n * \n * (code)\n * model.beginUpdate();\n * try\n * {\n *   var edit = new mxCellAttributeChange(\n *     cell, attributeName, attributeValue);\n *   model.execute(edit);\n * }\n * finally\n * {\n *   model.endUpdate();\n * } \n * (end)\n *\n * Constructor: mxCellAttributeChange\n * \n * Constructs a change of a attribute of the DOM node\n * stored as the value of the given <mxCell>.\n */\nfunction mxCellAttributeChange(cell, attribute, value)\n{\n\tthis.cell = cell;\n\tthis.attribute = attribute;\n\tthis.value = value;\n\tthis.previous = value;\n};\n\n/**\n * Function: execute\n * \n * Changes the attribute of the cell's user object by\n * using <mxCell.setAttribute>.\n */\nmxCellAttributeChange.prototype.execute = function()\n{\n\tif (this.cell != null)\n\t{\n\t\tvar tmp = this.cell.getAttribute(this.attribute);\n\t\t\n\t\tif (this.previous == null)\n\t\t{\n\t\t\tthis.cell.value.removeAttribute(this.attribute);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.cell.setAttribute(this.attribute, this.previous);\n\t\t}\n\t\t\n\t\tthis.previous = tmp;\n\t}\n};\n\n__mxOutput.mxGraphModel = typeof mxGraphModel !== 'undefined' ? mxGraphModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCell\n *\n * Cells are the elements of the graph model. They represent the state\n * of the groups, vertices and edges in a graph.\n * \n * Custom attributes:\n * \n * For custom attributes we recommend using an XML node as the value of a cell.\n * The following code can be used to create a cell with an XML node as the\n * value:\n * \n * (code)\n * var doc = mxUtils.createXmlDocument();\n * var node = doc.createElement('MyNode')\n * node.setAttribute('label', 'MyLabel');\n * node.setAttribute('attribute1', 'value1');\n * graph.insertVertex(graph.getDefaultParent(), null, node, 40, 40, 80, 30);\n * (end)\n * \n * For the label to work, <mxGraph.convertValueToString> and\n * <mxGraph.cellLabelChanged> should be overridden as follows:\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     return cell.getAttribute('label', '')\n *   }\n * };\n * \n * var cellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n *   if (mxUtils.isNode(cell.value))\n *   {\n *     // Clones the value for correct undo/redo\n *     var elt = cell.value.cloneNode(true);\n *     elt.setAttribute('label', newValue);\n *     newValue = elt;\n *   }\n *   \n *   cellLabelChanged.apply(this, arguments);\n * };\n * (end)\n * \n * Callback: onInit\n *\n * Called from within the constructor.\n * \n * Constructor: mxCell\n *\n * Constructs a new cell to be used in a graph model.\n * This method invokes <onInit> upon completion.\n * \n * Parameters:\n * \n * value - Optional object that represents the cell value.\n * geometry - Optional <mxGeometry> that specifies the geometry.\n * style - Optional formatted string that defines the style.\n */\nfunction mxCell(value, geometry, style)\n{\n\tthis.value = value;\n\tthis.setGeometry(geometry);\n\tthis.setStyle(style);\n\t\n\tif (this.onInit != null)\n\t{\n\t\tthis.onInit();\n\t}\n};\n\n/**\n * Variable: id\n *\n * Holds the Id. Default is null.\n */\nmxCell.prototype.id = null;\n\n/**\n * Variable: value\n *\n * Holds the user object. Default is null.\n */\nmxCell.prototype.value = null;\n\n/**\n * Variable: geometry\n *\n * Holds the <mxGeometry>. Default is null.\n */\nmxCell.prototype.geometry = null;\n\n/**\n * Variable: style\n *\n * Holds the style as a string of the form [(stylename|key=value);]. Default is\n * null.\n */\nmxCell.prototype.style = null;\n\n/**\n * Variable: vertex\n *\n * Specifies whether the cell is a vertex. Default is false.\n */\nmxCell.prototype.vertex = false;\n\n/**\n * Variable: edge\n *\n * Specifies whether the cell is an edge. Default is false.\n */\nmxCell.prototype.edge = false;\n\n/**\n * Variable: connectable\n *\n * Specifies whether the cell is connectable. Default is true.\n */\nmxCell.prototype.connectable = true;\n\n/**\n * Variable: visible\n *\n * Specifies whether the cell is visible. Default is true.\n */\nmxCell.prototype.visible = true;\n\n/**\n * Variable: collapsed\n *\n * Specifies whether the cell is collapsed. Default is false.\n */\nmxCell.prototype.collapsed = false;\n\n/**\n * Variable: parent\n *\n * Reference to the parent cell.\n */\nmxCell.prototype.parent = null;\n\n/**\n * Variable: source\n *\n * Reference to the source terminal.\n */\nmxCell.prototype.source = null;\n\n/**\n * Variable: target\n *\n * Reference to the target terminal.\n */\nmxCell.prototype.target = null;\n\n/**\n * Variable: children\n *\n * Holds the child cells.\n */\nmxCell.prototype.children = null;\n\n/**\n * Variable: edges\n *\n * Holds the edges.\n */\nmxCell.prototype.edges = null;\n\n/**\n * Variable: mxTransient\n *\n * List of members that should not be cloned inside <clone>. This field is\n * passed to <mxUtils.clone> and is not made persistent in <mxCellCodec>.\n * This is not a convention for all classes, it is only used in this class\n * to mark transient fields since transient modifiers are not supported by\n * the language.\n */\nmxCell.prototype.mxTransient = ['id', 'value', 'parent', 'source',\n                                'target', 'children', 'edges'];\n\n/**\n * Function: getId\n *\n * Returns the Id of the cell as a string.\n */\nmxCell.prototype.getId = function()\n{\n\treturn this.id;\n};\n\t\t\n/**\n * Function: setId\n *\n * Sets the Id of the cell to the given string.\n */\nmxCell.prototype.setId = function(id)\n{\n\tthis.id = id;\n};\n\n/**\n * Function: getValue\n *\n * Returns the user object of the cell. The user\n * object is stored in <value>.\n */\nmxCell.prototype.getValue = function()\n{\n\treturn this.value;\n};\n\t\t\n/**\n * Function: setValue\n *\n * Sets the user object of the cell. The user object\n * is stored in <value>.\n */\nmxCell.prototype.setValue = function(value)\n{\n\tthis.value = value;\n};\n\n/**\n * Function: valueChanged\n *\n * Changes the user object after an in-place edit\n * and returns the previous value. This implementation\n * replaces the user object with the given value and\n * returns the old user object.\n */\nmxCell.prototype.valueChanged = function(newValue)\n{\n\tvar previous = this.getValue();\n\tthis.setValue(newValue);\n\t\n\treturn previous;\n};\n\n/**\n * Function: getGeometry\n *\n * Returns the <mxGeometry> that describes the <geometry>.\n */\nmxCell.prototype.getGeometry = function()\n{\n\treturn this.geometry;\n};\n\n/**\n * Function: setGeometry\n *\n * Sets the <mxGeometry> to be used as the <geometry>.\n */\nmxCell.prototype.setGeometry = function(geometry)\n{\n\tthis.geometry = geometry;\n};\n\n/**\n * Function: getStyle\n *\n * Returns a string that describes the <style>.\n */\nmxCell.prototype.getStyle = function()\n{\n\treturn this.style;\n};\n\n/**\n * Function: setStyle\n *\n * Sets the string to be used as the <style>.\n */\nmxCell.prototype.setStyle = function(style)\n{\n\tthis.style = style;\n};\n\n/**\n * Function: isVertex\n *\n * Returns true if the cell is a vertex.\n */\nmxCell.prototype.isVertex = function()\n{\n\treturn this.vertex != 0;\n};\n\n/**\n * Function: setVertex\n *\n * Specifies if the cell is a vertex. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * vertex - Boolean that specifies if the cell is a vertex.\n */\nmxCell.prototype.setVertex = function(vertex)\n{\n\tthis.vertex = vertex;\n};\n\n/**\n * Function: isEdge\n *\n * Returns true if the cell is an edge.\n */\nmxCell.prototype.isEdge = function()\n{\n\treturn this.edge != 0;\n};\n\t\n/**\n * Function: setEdge\n * \n * Specifies if the cell is an edge. This should only be assigned at\n * construction of the cell and not be changed during its lifecycle.\n * \n * Parameters:\n * \n * edge - Boolean that specifies if the cell is an edge.\n */\nmxCell.prototype.setEdge = function(edge)\n{\n\tthis.edge = edge;\n};\n\n/**\n * Function: isConnectable\n *\n * Returns true if the cell is connectable.\n */\nmxCell.prototype.isConnectable = function()\n{\n\treturn this.connectable != 0;\n};\n\n/**\n * Function: setConnectable\n *\n * Sets the connectable state.\n * \n * Parameters:\n * \n * connectable - Boolean that specifies the new connectable state.\n */\nmxCell.prototype.setConnectable = function(connectable)\n{\n\tthis.connectable = connectable;\n};\n\n/**\n * Function: isVisible\n *\n * Returns true if the cell is visibile.\n */\nmxCell.prototype.isVisible = function()\n{\n\treturn this.visible != 0;\n};\n\n/**\n * Function: setVisible\n *\n * Specifies if the cell is visible.\n * \n * Parameters:\n * \n * visible - Boolean that specifies the new visible state.\n */\nmxCell.prototype.setVisible = function(visible)\n{\n\tthis.visible = visible;\n};\n\n/**\n * Function: isCollapsed\n *\n * Returns true if the cell is collapsed.\n */\nmxCell.prototype.isCollapsed = function()\n{\n\treturn this.collapsed != 0;\n};\n\n/**\n * Function: setCollapsed\n *\n * Sets the collapsed state.\n * \n * Parameters:\n * \n * collapsed - Boolean that specifies the new collapsed state.\n */\nmxCell.prototype.setCollapsed = function(collapsed)\n{\n\tthis.collapsed = collapsed;\n};\n\n/**\n * Function: getParent\n *\n * Returns the cell's parent.\n */\nmxCell.prototype.getParent = function()\n{\n\treturn this.parent;\n};\n\n/**\n * Function: setParent\n *\n * Sets the parent cell.\n * \n * Parameters:\n * \n * parent - <mxCell> that represents the new parent.\n */\nmxCell.prototype.setParent = function(parent)\n{\n\tthis.parent = parent;\n};\n\n/**\n * Function: getTerminal\n *\n * Returns the source or target terminal.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source terminal should be\n * returned.\n */\nmxCell.prototype.getTerminal = function(source)\n{\n\treturn (source) ? this.source : this.target;\n};\n\n/**\n * Function: setTerminal\n *\n * Sets the source or target terminal and returns the new terminal.\n * \n * Parameters:\n * \n * terminal - <mxCell> that represents the new source or target terminal.\n * isSource - Boolean that specifies if the source or target terminal\n * should be set.\n */\nmxCell.prototype.setTerminal = function(terminal, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.source = terminal;\n\t}\n\telse\n\t{\n\t\tthis.target = terminal;\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getChildCount\n *\n * Returns the number of child cells.\n */\nmxCell.prototype.getChildCount = function()\n{\n\treturn (this.children == null) ? 0 : this.children.length;\n};\n\n/**\n * Function: getIndex\n *\n * Returns the index of the specified child in the child array.\n * \n * Parameters:\n * \n * child - Child whose index should be returned.\n */\nmxCell.prototype.getIndex = function(child)\n{\n\treturn mxUtils.indexOf(this.children, child);\n};\n\n/**\n * Function: getChildAt\n *\n * Returns the child at the specified index.\n * \n * Parameters:\n * \n * index - Integer that specifies the child to be returned.\n */\nmxCell.prototype.getChildAt = function(index)\n{\n\treturn (this.children == null) ? null : this.children[index];\n};\n\n/**\n * Function: insert\n *\n * Inserts the specified child into the child array at the specified index\n * and updates the parent reference of the child. If not childIndex is\n * specified then the child is appended to the child array. Returns the\n * inserted child.\n * \n * Parameters:\n * \n * child - <mxCell> to be inserted or appended to the child array.\n * index - Optional integer that specifies the index at which the child\n * should be inserted into the child array.\n */\nmxCell.prototype.insert = function(child, index)\n{\n\tif (child != null)\n\t{\n\t\tif (index == null)\n\t\t{\n\t\t\tindex = this.getChildCount();\n\t\t\t\n\t\t\tif (child.getParent() == this)\n\t\t\t{\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\tchild.removeFromParent();\n\t\tchild.setParent(this);\n\t\t\n\t\tif (this.children == null)\n\t\t{\n\t\t\tthis.children = [];\n\t\t\tthis.children.push(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.children.splice(index, 0, child);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: remove\n *\n * Removes the child at the specified index from the child array and\n * returns the child that was removed. Will remove the parent reference of\n * the child.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the child to be\n * removed.\n */\nmxCell.prototype.remove = function(index)\n{\n\tvar child = null;\n\t\n\tif (this.children != null && index >= 0)\n\t{\n\t\tchild = this.getChildAt(index);\n\t\t\n\t\tif (child != null)\n\t\t{\n\t\t\tthis.children.splice(index, 1);\n\t\t\tchild.setParent(null);\n\t\t}\n\t}\n\t\n\treturn child;\n};\n\n/**\n * Function: removeFromParent\n *\n * Removes the cell from its parent.\n */\nmxCell.prototype.removeFromParent = function()\n{\n\tif (this.parent != null)\n\t{\n\t\tvar index = this.parent.getIndex(this);\n\t\tthis.parent.remove(index);\n\t}\n};\n\n/**\n * Function: getEdgeCount\n *\n * Returns the number of edges in the edge array.\n */\nmxCell.prototype.getEdgeCount = function()\n{\n\treturn (this.edges == null) ? 0 : this.edges.length;\n};\n\n/**\n * Function: getEdgeIndex\n *\n * Returns the index of the specified edge in <edges>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose index in <edges> should be returned.\n */\nmxCell.prototype.getEdgeIndex = function(edge)\n{\n\treturn mxUtils.indexOf(this.edges, edge);\n};\n\n/**\n * Function: getEdgeAt\n *\n * Returns the edge at the specified index in <edges>.\n * \n * Parameters:\n * \n * index - Integer that specifies the index of the edge to be returned.\n */\nmxCell.prototype.getEdgeAt = function(index)\n{\n\treturn (this.edges == null) ? null : this.edges[index];\n};\n\n/**\n * Function: insertEdge\n *\n * Inserts the specified edge into the edge array and returns the edge.\n * Will update the respective terminal reference of the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.insertEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tedge.removeFromTerminal(isOutgoing);\n\t\tedge.setTerminal(this, isOutgoing);\n\t\t\n\t\tif (this.edges == null ||\n\t\t\tedge.getTerminal(!isOutgoing) != this ||\n\t\t\tmxUtils.indexOf(this.edges, edge) < 0)\n\t\t{\n\t\t\tif (this.edges == null)\n\t\t\t{\n\t\t\t\tthis.edges = [];\n\t\t\t}\n\t\t\t\n\t\t\tthis.edges.push(edge);\n\t\t}\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeEdge\n *\n * Removes the specified edge from the edge array and returns the edge.\n * Will remove the respective terminal reference from the edge.\n * \n * Parameters:\n * \n * edge - <mxCell> to be removed from the edge array.\n * isOutgoing - Boolean that specifies if the edge is outgoing.\n */\nmxCell.prototype.removeEdge = function(edge, isOutgoing)\n{\n\tif (edge != null)\n\t{\n\t\tif (edge.getTerminal(!isOutgoing) != this &&\n\t\t\tthis.edges != null)\n\t\t{\n\t\t\tvar index = this.getEdgeIndex(edge);\n\t\t\t\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\tthis.edges.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge.setTerminal(null, isOutgoing);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: removeFromTerminal\n *\n * Removes the edge from its source or target terminal.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the edge should be removed from its\n * source or target terminal.\n */\nmxCell.prototype.removeFromTerminal = function(isSource)\n{\n\tvar terminal = this.getTerminal(isSource);\n\t\n\tif (terminal != null)\n\t{\n\t\tterminal.removeEdge(this, isSource);\n\t}\n};\n\n/**\n * Function: hasAttribute\n * \n * Returns true if the user object is an XML node that contains the given\n * attribute.\n * \n * Parameters:\n * \n * name - Name of the attribute.\n */\nmxCell.prototype.hasAttribute = function(name)\n{\n\tvar userObject = this.getValue();\n\t\n\treturn (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT && userObject.hasAttribute) ?\n\t\tuserObject.hasAttribute(name) : userObject.getAttribute(name) != null;\n};\n\n/**\n * Function: getAttribute\n *\n * Returns the specified attribute from the user object if it is an XML\n * node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be returned.\n * defaultValue - Optional default value to use if the attribute has no\n * value.\n */\nmxCell.prototype.getAttribute = function(name, defaultValue)\n{\n\tvar userObject = this.getValue();\n\t\n\tvar val = (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT) ?\n\t\tuserObject.getAttribute(name) : null;\n\t\t\n\treturn val || defaultValue;\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the specified attribute on the user object if it is an XML node.\n * \n * Parameters:\n * \n * name - Name of the attribute whose value should be set.\n * value - New value of the attribute.\n */\nmxCell.prototype.setAttribute = function(name, value)\n{\n\tvar userObject = this.getValue();\n\t\n\tif (userObject != null &&\n\t\tuserObject.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tuserObject.setAttribute(name, value);\n\t}\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of the cell. Uses <cloneValue> to clone\n * the user object. All fields in <mxTransient> are ignored\n * during the cloning.\n */\nmxCell.prototype.clone = function()\n{\n\tvar clone = mxUtils.clone(this, this.mxTransient);\n\tclone.setValue(this.cloneValue());\n\t\n\treturn clone;\n};\n\n/**\n * Function: cloneValue\n *\n * Returns a clone of the cell's user object.\n */\nmxCell.prototype.cloneValue = function()\n{\n\tvar value = this.getValue();\n\t\n\tif (value != null)\n\t{\n\t\tif (typeof(value.clone) == 'function')\n\t\t{\n\t\t\tvalue = value.clone();\n\t\t}\n\t\telse if (!isNaN(value.nodeType))\n\t\t{\n\t\t\tvalue = value.cloneNode(true);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n__mxOutput.mxCell = typeof mxCell !== 'undefined' ? mxCell : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGeometry\n * \n * Extends <mxRectangle> to represent the geometry of a cell.\n * \n * For vertices, the geometry consists of the x- and y-location, and the width\n * and height. For edges, the geometry consists of the optional terminal- and\n * control points. The terminal points are only required if an edge is\n * unconnected, and are stored in the sourcePoint> and <targetPoint>\n * variables, respectively.\n * \n * Example:\n * \n * If an edge is unconnected, that is, it has no source or target terminal,\n * then a geometry with terminal points for a new edge can be defined as\n * follows.\n * \n * (code)\n * geometry.setTerminalPoint(new mxPoint(x1, y1), true);\n * geometry.points = [new mxPoint(x2, y2)];\n * geometry.setTerminalPoint(new mxPoint(x3, y3), false);\n * (end)\n * \n * Control points are used regardless of the connected state of an edge and may\n * be ignored or interpreted differently depending on the edge's <mxEdgeStyle>.\n * \n * To disable automatic reset of control points after a cell has been moved or\n * resized, the the <mxGraph.resizeEdgesOnMove> and\n * <mxGraph.resetEdgesOnResize> may be used.\n *\n * Edge Labels:\n * \n * Using the x- and y-coordinates of a cell's geometry, it is possible to\n * position the label on edges on a specific location on the actual edge shape\n * as it appears on the screen. The x-coordinate of an edge's geometry is used\n * to describe the distance from the center of the edge from -1 to 1 with 0\n * being the center of the edge and the default value. The y-coordinate of an\n * edge's geometry is used to describe the absolute, orthogonal distance in\n * pixels from that point. In addition, the <mxGeometry.offset> is used as an\n * absolute offset vector from the resulting point.\n * \n * This coordinate system is applied if <relative> is true, otherwise the\n * offset defines the absolute vector from the edge's center point to the\n * label and the values for <x> and <y> are ignored.\n * \n * The width and height parameter for edge geometries can be used to set the\n * label width and height (eg. for word wrapping).\n * \n * Ports:\n * \n * The term \"port\" refers to a relatively positioned, connectable child cell,\n * which is used to specify the connection between the parent and another cell\n * in the graph. Ports are typically modeled as vertices with relative\n * geometries.\n * \n * Offsets:\n * \n * The <offset> field is interpreted in 3 different ways, depending on the cell\n * and the geometry. For edges, the offset defines the absolute offset for the\n * edge label. For relative geometries, the offset defines the absolute offset\n * for the origin (top, left corner) of the vertex, otherwise the offset\n * defines the absolute offset for the label inside the vertex or group.\n * \n * Constructor: mxGeometry\n *\n * Constructs a new object to describe the size and location of a vertex or\n * the control points of an edge.\n */\nfunction mxGeometry(x, y, width, height)\n{\n\tmxRectangle.call(this, x, y, width, height);\n};\n\n/**\n * Extends mxRectangle.\n */\nmxGeometry.prototype = new mxRectangle();\nmxGeometry.prototype.constructor = mxGeometry;\n\n/**\n * Variable: TRANSLATE_CONTROL_POINTS\n * \n * Global switch to translate the points in translate. Default is true.\n */\nmxGeometry.prototype.TRANSLATE_CONTROL_POINTS = true;\n\n/**\n * Variable: alternateBounds\n *\n * Stores alternate values for x, y, width and height in a rectangle. See\n * <swap> to exchange the values. Default is null.\n */\nmxGeometry.prototype.alternateBounds = null;\n\n/**\n * Variable: sourcePoint\n *\n * Defines the source <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a source vertex. Otherwise it is\n * ignored. Default is  null.\n */\nmxGeometry.prototype.sourcePoint = null;\n\n/**\n * Variable: targetPoint\n *\n * Defines the target <mxPoint> of the edge. This is used if the\n * corresponding edge does not have a target vertex. Otherwise it is\n * ignored. Default is null.\n */\nmxGeometry.prototype.targetPoint = null;\n\n/**\n * Variable: points\n *\n * Array of <mxPoints> which specifies the control points along the edge.\n * These points are the intermediate points on the edge, for the endpoints\n * use <targetPoint> and <sourcePoint> or set the terminals of the edge to\n * a non-null value. Default is null.\n */\nmxGeometry.prototype.points = null;\n\n/**\n * Variable: offset\n *\n * For edges, this holds the offset (in pixels) from the position defined\n * by <x> and <y> on the edge. For relative geometries (for vertices), this\n * defines the absolute offset from the point defined by the relative\n * coordinates. For absolute geometries (for vertices), this defines the\n * offset for the label. Default is null.\n */\nmxGeometry.prototype.offset = null;\n\n/**\n * Variable: relative\n *\n * Specifies if the coordinates in the geometry are to be interpreted as\n * relative coordinates. For edges, this is used to define the location of\n * the edge label relative to the edge as rendered on the display. For\n * vertices, this specifies the relative location inside the bounds of the\n * parent cell.\n * \n * If this is false, then the coordinates are relative to the origin of the\n * parent cell or, for edges, the edge label position is relative to the\n * center of the edge as rendered on screen.\n * \n * Default is false.\n */\nmxGeometry.prototype.relative = false;\n\n/**\n * Function: swap\n * \n * Swaps the x, y, width and height with the values stored in\n * <alternateBounds> and puts the previous values into <alternateBounds> as\n * a rectangle. This operation is carried-out in-place, that is, using the\n * existing geometry instance. If this operation is called during a graph\n * model transactional change, then the geometry should be cloned before\n * calling this method and setting the geometry of the cell using\n * <mxGraphModel.setGeometry>.\n */\nmxGeometry.prototype.swap = function()\n{\n\tif (this.alternateBounds != null)\n\t{\n\t\tvar old = new mxRectangle(\n\t\t\tthis.x, this.y, this.width, this.height);\n\n\t\tthis.x = this.alternateBounds.x;\n\t\tthis.y = this.alternateBounds.y;\n\t\tthis.width = this.alternateBounds.width;\n\t\tthis.height = this.alternateBounds.height;\n\n\t\tthis.alternateBounds = old;\n\t}\n};\n\n/**\n * Function: getTerminalPoint\n * \n * Returns the <mxPoint> representing the source or target point of this\n * edge. This is only used if the edge has no source or target vertex.\n * \n * Parameters:\n * \n * isSource - Boolean that specifies if the source or target point\n * should be returned.\n */\nmxGeometry.prototype.getTerminalPoint = function(isSource)\n{\n\treturn (isSource) ? this.sourcePoint : this.targetPoint;\n};\n\n/**\n * Function: setTerminalPoint\n * \n * Sets the <sourcePoint> or <targetPoint> to the given <mxPoint> and\n * returns the new point.\n * \n * Parameters:\n * \n * point - Point to be used as the new source or target point.\n * isSource - Boolean that specifies if the source or target point\n * should be set.\n */\nmxGeometry.prototype.setTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tthis.sourcePoint = point;\n\t}\n\telse\n\t{\n\t\tthis.targetPoint = point;\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: rotate\n * \n * Rotates the geometry by the given angle around the given center. That is,\n * <x> and <y> of the geometry, the <sourcePoint>, <targetPoint> and all\n * <points> are translated by the given amount. <x> and <y> are only\n * translated if <relative> is false.\n * \n * Parameters:\n * \n * angle - Number that specifies the rotation angle in degrees.\n * cx - <mxPoint> that specifies the center of the rotation.\n */\nmxGeometry.prototype.rotate = function(angle, cx)\n{\n\tvar rad = mxUtils.toRadians(angle);\n\tvar cos = Math.cos(rad);\n\tvar sin = Math.sin(rad);\n\t\n\t// Rotates the geometry\n\tif (!this.relative)\n\t{\n\t\tvar ct = new mxPoint(this.getCenterX(), this.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\n\t\tthis.x = Math.round(pt.x - this.width / 2);\n\t\tthis.y = Math.round(pt.y - this.height / 2);\n\t}\n\n\t// Rotates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.sourcePoint, cos, sin, cx);\n\t\tthis.sourcePoint.x = Math.round(pt.x);\n\t\tthis.sourcePoint.y = Math.round(pt.y);\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tvar pt = mxUtils.getRotatedPoint(this.targetPoint, cos, sin, cx);\n\t\tthis.targetPoint.x = Math.round(pt.x);\n\t\tthis.targetPoint.y = Math.round(pt.y);\t\n\t}\n\t\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(this.points[i], cos, sin, cx);\n\t\t\t\tthis.points[i].x = Math.round(pt.x);\n\t\t\t\tthis.points[i].y = Math.round(pt.y);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: translate\n * \n * Translates the geometry by the specified amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are translated\n * by the given amount. <x> and <y> are only translated if <relative> is false.\n * If <TRANSLATE_CONTROL_POINTS> is false, then <points> are not modified by\n * this function.\n * \n * Parameters:\n * \n * dx - Number that specifies the x-coordinate of the translation.\n * dy - Number that specifies the y-coordinate of the translation.\n */\nmxGeometry.prototype.translate = function(dx, dy)\n{\n\tdx = parseFloat(dx);\n\tdy = parseFloat(dy);\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) + dx;\n\t\tthis.y = parseFloat(this.y) + dy;\n\t}\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) + dx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) + dy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) + dx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) + dy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.TRANSLATE_CONTROL_POINTS && this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) + dx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) + dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: scale\n * \n * Scales the geometry by the given amount. That is, <x> and <y> of the\n * geometry, the <sourcePoint>, <targetPoint> and all <points> are scaled\n * by the given amount. <x>, <y>, <width> and <height> are only scaled if\n * <relative> is false. If <fixedAspect> is true, then the smaller value\n * is used to scale the width and the height.\n * \n * Parameters:\n * \n * sx - Number that specifies the horizontal scale factor.\n * sy - Number that specifies the vertical scale factor.\n * fixedAspect - Optional boolean to keep the aspect ratio fixed.\n */\nmxGeometry.prototype.scale = function(sx, sy, fixedAspect)\n{\n\tsx = parseFloat(sx);\n\tsy = parseFloat(sy);\n\n\t// Translates the source point\n\tif (this.sourcePoint != null)\n\t{\n\t\tthis.sourcePoint.x = parseFloat(this.sourcePoint.x) * sx;\n\t\tthis.sourcePoint.y = parseFloat(this.sourcePoint.y) * sy;\n\t}\n\t\n\t// Translates the target point\n\tif (this.targetPoint != null)\n\t{\n\t\tthis.targetPoint.x = parseFloat(this.targetPoint.x) * sx;\n\t\tthis.targetPoint.y = parseFloat(this.targetPoint.y) * sy;\t\t\n\t}\n\n\t// Translate the control points\n\tif (this.points != null)\n\t{\n\t\tfor (var i = 0; i < this.points.length; i++)\n\t\t{\n\t\t\tif (this.points[i] != null)\n\t\t\t{\n\t\t\t\tthis.points[i].x = parseFloat(this.points[i].x) * sx;\n\t\t\t\tthis.points[i].y = parseFloat(this.points[i].y) * sy;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Translates the geometry\n\tif (!this.relative)\n\t{\n\t\tthis.x = parseFloat(this.x) * sx;\n\t\tthis.y = parseFloat(this.y) * sy;\n\n\t\tif (fixedAspect)\n\t\t{\n\t\t\tsy = sx = Math.min(sx, sy);\n\t\t}\n\t\t\n\t\tthis.width = parseFloat(this.width) * sx;\n\t\tthis.height = parseFloat(this.height) * sy;\n\t}\n};\n\n/**\n * Function: equals\n * \n * Returns true if the given object equals this geometry.\n */\nmxGeometry.prototype.equals = function(obj)\n{\n\treturn mxRectangle.prototype.equals.apply(this, arguments) &&\n\t\tthis.relative == obj.relative &&\n\t\t((this.sourcePoint == null && obj.sourcePoint == null) || (this.sourcePoint != null && this.sourcePoint.equals(obj.sourcePoint))) &&\n\t\t((this.targetPoint == null && obj.targetPoint == null) || (this.targetPoint != null && this.targetPoint.equals(obj.targetPoint))) &&\n\t\t((this.points == null && obj.points == null) || (this.points != null && mxUtils.equalPoints(this.points, obj.points))) &&\n\t\t((this.alternateBounds == null && obj.alternateBounds == null) || (this.alternateBounds != null && this.alternateBounds.equals(obj.alternateBounds))) &&\n\t\t((this.offset == null && obj.offset == null) || (this.offset != null && this.offset.equals(obj.offset)));\n};\n\n__mxOutput.mxGeometry = typeof mxGeometry !== 'undefined' ? mxGeometry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCellPath =\n{\n\n\t/**\n\t * Class: mxCellPath\n\t * \n\t * Implements a mechanism for temporary cell Ids.\n\t * \n\t * Variable: PATH_SEPARATOR\n\t * \n\t * Defines the separator between the path components. Default is \".\".\n\t */\n\tPATH_SEPARATOR: '.',\n\t\n\t/**\n\t * Function: create\n\t * \n\t * Creates the cell path for the given cell. The cell path is a\n\t * concatenation of the indices of all ancestors on the (finite) path to\n\t * the root, eg. \"0.0.0.1\".\n\t * \n\t * Parameters:\n\t * \n\t * cell - Cell whose path should be returned.\n\t */\n\tcreate: function(cell)\n\t{\n\t\tvar result = '';\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tvar parent = cell.getParent();\n\t\t\t\n\t\t\twhile (parent != null)\n\t\t\t{\n\t\t\t\tvar index = parent.getIndex(cell);\n\t\t\t\tresult = index + mxCellPath.PATH_SEPARATOR + result;\n\t\t\t\t\n\t\t\t\tcell = parent;\n\t\t\t\tparent = cell.getParent();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes trailing separator\n\t\tvar n = result.length;\n\t\t\n\t\tif (n > 1)\n\t\t{\n\t\t\tresult = result.substring(0, n - 1);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: getParentPath\n\t * \n\t * Returns the path for the parent of the cell represented by the given\n\t * path. Returns null if the given path has no parent.\n\t * \n\t * Parameters:\n\t * \n\t * path - Path whose parent path should be returned.\n\t */\n\tgetParentPath: function(path)\n\t{\n\t\tif (path != null)\n\t\t{\n\t\t\tvar index = path.lastIndexOf(mxCellPath.PATH_SEPARATOR);\n\n\t\t\tif (index >= 0)\n\t\t\t{\n\t\t\t\treturn path.substring(0, index);\n\t\t\t}\n\t\t\telse if (path.length > 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Function: resolve\n\t * \n\t * Returns the cell for the specified cell path using the given root as the\n\t * root of the path.\n\t * \n\t * Parameters:\n\t * \n\t * root - Root cell of the path to be resolved.\n\t * path - String that defines the path.\n\t */\n\tresolve: function(root, path)\n\t{\n\t\tvar parent = root;\n\t\t\n\t\tif (path != null)\n\t\t{\n\t\t\tvar tokens = path.split(mxCellPath.PATH_SEPARATOR);\n\t\t\t\n\t\t\tfor (var i=0; i<tokens.length; i++)\n\t\t\t{\n\t\t\t\tparent = parent.getChildAt(parseInt(tokens[i]));\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn parent;\n\t},\n\t\n\t/**\n\t * Function: compare\n\t * \n\t * Compares the given cell paths and returns -1 if p1 is smaller, 0 if\n\t * p1 is equal and 1 if p1 is greater than p2.\n\t */\n\tcompare: function(p1, p2)\n\t{\n\t\tvar min = Math.min(p1.length, p2.length);\n\t\tvar comp = 0;\n\t\t\n\t\tfor (var i = 0; i < min; i++)\n\t\t{\n\t\t\tif (p1[i] != p2[i])\n\t\t\t{\n\t\t\t\tif (p1[i].length == 0 ||\n\t\t\t\t\tp2[i].length == 0)\n\t\t\t\t{\n\t\t\t\t\tcomp = (p1[i] == p2[i]) ? 0 : ((p1[i] > p2[i]) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar t1 = parseInt(p1[i]);\n\t\t\t\t\tvar t2 = parseInt(p2[i]);\n\t\t\t\t\t\n\t\t\t\t\tcomp = (t1 == t2) ? 0 : ((t1 > t2) ? 1 : -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Compares path length if both paths are equal to this point\n\t\tif (comp == 0)\n\t\t{\n\t\t\tvar t1 = p1.length;\n\t\t\tvar t2 = p2.length;\n\t\t\t\n\t\t\tif (t1 != t2)\n\t\t\t{\n\t\t\t\tcomp = (t1 > t2) ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn comp;\n\t}\n\n};\n\n__mxOutput.mxCellPath = typeof mxCellPath !== 'undefined' ? mxCellPath : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxPerimeter =\n{\n\t/**\n\t * Class: mxPerimeter\n\t * \n\t * Provides various perimeter functions to be used in a style\n\t * as the value of <mxConstants.STYLE_PERIMETER>. Perimeters for\n\t * rectangle, circle, rhombus and triangle are available.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t * (end)\n\t * \n\t * Or programmatically:\n\t * \n\t * (code)\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\t * (end)\n\t * \n\t * When adding new perimeter functions, it is recommended to use the \n\t * mxPerimeter-namespace as follows:\n\t * \n\t * (code)\n\t * mxPerimeter.CustomPerimeter = function (bounds, vertex, next, orthogonal)\n\t * {\n\t *   var x = 0; // Calculate x-coordinate\n\t *   var y = 0; // Calculate y-coordainte\n\t *   \n\t *   return new mxPoint(x, y);\n\t * }\n\t * (end)\n\t * \n\t * The new perimeter should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('customPerimeter', mxPerimeter.CustomPerimeter);\n\t * (end)\n\t * \n\t * The custom perimeter above can now be used in a specific vertex as follows:\n\t * \n\t * (code)\n\t * model.setStyle(vertex, 'perimeter=customPerimeter');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxPerimeter.CustomPerimeter for the value in\n\t * the cell style above.\n\t * \n\t * Or it can be used for all vertices in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultVertexStyle();\n\t * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.CustomPerimeter;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * The parameters are explained in <RectanglePerimeter>.\n\t * \n\t * Function: RectanglePerimeter\n\t * \n\t * Describes a rectangular perimeter for the given bounds.\n\t *\n\t * Parameters:\n\t * \n\t * bounds - <mxRectangle> that represents the absolute bounds of the\n\t * vertex.\n\t * vertex - <mxCellState> that represents the vertex.\n\t * next - <mxPoint> that represents the nearest neighbour point on the\n\t * given edge.\n\t * orthogonal - Boolean that specifies if the orthogonal projection onto\n\t * the perimeter should be returned. If this is false then the intersection\n\t * of the perimeter and the line between the next and the center point is\n\t * returned.\n\t */\n\tRectanglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\t\tvar alpha = Math.atan2(dy, dx);\n\t\tvar p = new mxPoint(0, 0);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI/2;\n\t\tvar beta = pi2 - alpha;\n\t\tvar t = Math.atan2(bounds.height, bounds.width);\n\t\t\n\t\tif (alpha < -pi + t || alpha > pi - t)\n\t\t{\n\t\t\t// Left edge\n\t\t\tp.x = bounds.x;\n\t\t\tp.y = cy - bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse if (alpha < -t)\n\t\t{\n\t\t\t// Top Edge\n\t\t\tp.y = bounds.y;\n\t\t\tp.x = cx - bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\telse if (alpha < t)\n\t\t{\n\t\t\t// Right Edge\n\t\t\tp.x = bounds.x + bounds.width;\n\t\t\tp.y = cy + bounds.width * Math.tan(alpha) / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Bottom Edge\n\t\t\tp.y = bounds.y + bounds.height;\n\t\t\tp.x = cx + bounds.height * Math.tan(beta) / 2;\n\t\t}\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (next.x >= bounds.x &&\n\t\t\t\tnext.x <= bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = next.x;\n\t\t\t}\n\t\t\telse if (next.y >= bounds.y &&\n\t\t\t\t\t   next.y <= bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = next.y;\n\t\t\t}\n\t\t\tif (next.x < bounds.x)\n\t\t\t{\n\t\t\t\tp.x = bounds.x;\n\t\t\t}\n\t\t\telse if (next.x > bounds.x + bounds.width)\n\t\t\t{\n\t\t\t\tp.x = bounds.x + bounds.width;\n\t\t\t}\n\t\t\tif (next.y < bounds.y)\n\t\t\t{\n\t\t\t\tp.y = bounds.y;\n\t\t\t}\n\t\t\telse if (next.y > bounds.y + bounds.height)\n\t\t\t{\n\t\t\t\tp.y = bounds.y + bounds.height;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn p;\n\t},\n\n\t/**\n\t * Function: EllipsePerimeter\n\t * \n\t * Describes an elliptic perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tEllipsePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar a = bounds.width / 2;\n\t\tvar b = bounds.height / 2;\n\t\tvar cx = x + a;\n\t\tvar cy = y + b;\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\t\n\t\t// Calculates straight line equation through\n\t\t// point and ellipse center y = d * x + h\n\t\tvar dx = parseInt(px - cx);\n\t\tvar dy = parseInt(py - cy);\n\t\t\n\t\tif (dx == 0 && dy != 0)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy + b * dy / Math.abs(dy));\n\t\t}\n\t\telse if (dx == 0 && dy == 0)\n\t\t{\n\t\t\treturn new mxPoint(px, py);\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (py >= y && py <= y + bounds.height)\n\t\t\t{\n\t\t\t\tvar ty = py - cy;\n\t\t\t\tvar tx = Math.sqrt(a*a*(1-(ty*ty)/(b*b))) || 0;\n\t\t\t\t\n\t\t\t\tif (px <= x)\n\t\t\t\t{\n\t\t\t\t\ttx = -tx;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(cx+tx, py);\n\t\t\t}\n\t\t\t\n\t\t\tif (px >= x && px <= x + bounds.width)\n\t\t\t{\n\t\t\t\tvar tx = px - cx;\n\t\t\t\tvar ty = Math.sqrt(b*b*(1-(tx*tx)/(a*a))) || 0;\n\t\t\t\t\n\t\t\t\tif (py <= y)\n\t\t\t\t{\n\t\t\t\t\tty = -ty;\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxPoint(px, cy+ty);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Calculates intersection\n\t\tvar d = dy / dx;\n\t\tvar h = cy - d * cx;\n\t\tvar e = a * a * d * d + b * b;\n\t\tvar f = -2 * cx * e;\n\t\tvar g = a * a * d * d * cx * cx +\n\t\t\t\tb * b * cx * cx -\n\t\t\t\ta * a * b * b;\n\t\tvar det = Math.sqrt(f * f - 4 * e * g);\n\t\t\n\t\t// Two solutions (perimeter points)\n\t\tvar xout1 = (-f + det) / (2 * e);\n\t\tvar xout2 = (-f - det) / (2 * e);\n\t\tvar yout1 = d * xout1 + h;\n\t\tvar yout2 = d * xout2 + h;\n\t\tvar dist1 = Math.sqrt(Math.pow((xout1 - px), 2)\n\t\t\t\t\t+ Math.pow((yout1 - py), 2));\n\t\tvar dist2 = Math.sqrt(Math.pow((xout2 - px), 2)\n\t\t\t\t\t+ Math.pow((yout2 - py), 2));\n\t\t\t\t\t\n\t\t// Correct solution\n\t\tvar xout = 0;\n\t\tvar yout = 0;\n\t\t\n\t\tif (dist1 < dist2)\n\t\t{\n\t\t\txout = xout1;\n\t\t\tyout = yout1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\txout = xout2;\n\t\t\tyout = yout2;\n\t\t}\n\t\t\n\t\treturn new mxPoint(xout, yout);\n\t},\n\n\t/**\n\t * Function: RhombusPerimeter\n\t * \n\t * Describes a rhombus (aka diamond) perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tRhombusPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\n\t\t// Special case for intersecting the diamond's corners\n\t\tif (cx == px)\n\t\t{\n\t\t\tif (cy > py)\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y); // top\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(cx, y + h); // bottom\n\t\t\t}\n\t\t}\n\t\telse if (cy == py)\n\t\t{\n\t\t\tif (cx > px)\n\t\t\t{\n\t\t\t\treturn new mxPoint(x, cy); // left\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn new mxPoint(x + w, cy); // right\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tx = cx;\n\t\tvar ty = cy;\n\t\t\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// In which quadrant will the intersection be?\n\t\t// set the slope and offset of the border line accordingly\n\t\tif (px < cx)\n\t\t{\n\t\t\tif (py < cy)\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x, cy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x, cy);\n\t\t\t}\n\t\t}\n\t\telse if (py < cy)\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y, x + w, cy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxUtils.intersection(px, py, tx, ty, cx, y + h, x + w, cy);\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: TrianglePerimeter\n\t * \n\t * Describes a triangle perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tTrianglePerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar direction = (vertex != null) ?\n\t\t\tvertex.style[mxConstants.STYLE_DIRECTION] : null;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_SOUTH;\n\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\t\t\n\t\tvar cx = x + w / 2;\n\t\tvar cy = y + h / 2;\n\t\t\n\t\tvar start = new mxPoint(x, y);\n\t\tvar corner = new mxPoint(x + w, cy);\n\t\tvar end = new mxPoint(x, y + h);\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t{\n\t\t\tstart = end;\n\t\t\tcorner = new mxPoint(cx, y);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tcorner = new mxPoint(cx, y + h);\n\t\t\tend = new mxPoint(x + w, y);\n\t\t}\n\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tstart = new mxPoint(x + w, y);\n\t\t\tcorner = new mxPoint(x, cy);\n\t\t\tend = new mxPoint(x + w, y + h);\n\t\t}\n\n\t\tvar dx = next.x - cx;\n\t\tvar dy = next.y - cy;\n\n\t\tvar alpha = (vertical) ? Math.atan2(dx, dy) : Math.atan2(dy, dx);\n\t\tvar t = (vertical) ? Math.atan2(w, h) : Math.atan2(h, w);\n\t\t\n\t\tvar base = false;\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\tdirection == mxConstants.DIRECTION_WEST)\n\t\t{\n\t\t\tbase = alpha > -t && alpha < t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbase = alpha < -Math.PI + t || alpha > Math.PI - t;\t\n\t\t}\n\n\t\tvar result = null;\t\t\t\n\n\t\tif (base)\n\t\t{\n\t\t\tif (orthogonal && ((vertical && next.x >= start.x && next.x <= end.x) ||\n\t\t\t\t(!vertical && next.y >= start.y && next.y <= end.y)))\n\t\t\t{\n\t\t\t\tif (vertical)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(next.x, start.y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(start.x, next.y);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 + h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty + h);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w / 2 - h * Math.tan(alpha) / 2,\n\t\t\t\t\t\ty);\n\t\t\t\t}\n\t\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x + w, y + h / 2 +\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tresult = new mxPoint(x, y + h / 2 -\n\t\t\t\t\t\tw * Math.tan(alpha) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (orthogonal)\n\t\t\t{\n\t\t\t\tvar pt = new mxPoint(cx, cy);\n\t\t\n\t\t\t\tif (next.y >= y && next.y <= y + h)\n\t\t\t\t{\n\t\t\t\t\tpt.x = (vertical) ? cx : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_WEST) ?\n\t\t\t\t\t\t\tx + w : x);\n\t\t\t\t\tpt.y = next.y;\n\t\t\t\t}\n\t\t\t\telse if (next.x >= x && next.x <= x + w)\n\t\t\t\t{\n\t\t\t\t\tpt.x = next.x;\n\t\t\t\t\tpt.y = (!vertical) ? cy : (\n\t\t\t\t\t\t(direction == mxConstants.DIRECTION_NORTH) ?\n\t\t\t\t\t\t\ty + h : y);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Compute angle\n\t\t\t\tdx = next.x - pt.x;\n\t\t\t\tdy = next.y - pt.y;\n\t\t\t\t\n\t\t\t\tcx = pt.x;\n\t\t\t\tcy = pt.y;\n\t\t\t}\n\n\t\t\tif ((vertical && next.x <= x + w / 2) ||\n\t\t\t\t(!vertical && next.y <= y + h / 2))\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tstart.x, start.y, corner.x, corner.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = mxUtils.intersection(next.x, next.y, cx, cy,\n\t\t\t\t\tcorner.x, corner.y, end.x, end.y);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\tresult = new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t},\n\t\n\t/**\n\t * Function: HexagonPerimeter\n\t * \n\t * Describes a hexagon perimeter. See <RectanglePerimeter>\n\t * for a description of the parameters.\n\t */\n\tHexagonPerimeter: function (bounds, vertex, next, orthogonal)\n\t{\n\t\tvar x = bounds.x;\n\t\tvar y = bounds.y;\n\t\tvar w = bounds.width;\n\t\tvar h = bounds.height;\n\n\t\tvar cx = bounds.getCenterX();\n\t\tvar cy = bounds.getCenterY();\n\t\tvar px = next.x;\n\t\tvar py = next.y;\n\t\tvar dx = px - cx;\n\t\tvar dy = py - cy;\n\t\tvar alpha = -Math.atan2(dy, dx);\n\t\tvar pi = Math.PI;\n\t\tvar pi2 = Math.PI / 2;\n\n\t\tvar result = new mxPoint(cx, cy);\n\n\t\tvar direction = (vertex != null) ? mxUtils.getValue(\n\t\t\t\tvertex.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_EAST) : mxConstants.DIRECTION_EAST;\n\t\tvar vertical = direction == mxConstants.DIRECTION_NORTH\n\t\t\t\t|| direction == mxConstants.DIRECTION_SOUTH;\n\t\tvar a = new mxPoint();\n\t\tvar b = new mxPoint();\n\n\t\t//Only consider corrects quadrants for the orthogonal case.\n\t\tif ((px < x) && (py < y) || (px < x) && (py > y + h)\n\t\t\t\t|| (px > x + w) && (py < y) || (px > x + w) && (py > y + h))\n\t\t{\n\t\t\torthogonal = false;\n\t\t}\n\n\t\tif (orthogonal)\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (px == cx)\n\t\t\t\t{\n\t\t\t\t\tif (py <= y)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py >= y + h)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px < x)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py == y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py == y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\tif (py < cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 4);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + 3 * h / 4);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (py == y)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y);\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(cx, y + h);\n\t\t\t\t}\n\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (px > cx)\n\t\t\t\t{\n\t\t\t\t\tif ((py > y + h / 4) && (py < y + 3 * h / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py < y + h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > y + 3 * h / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (py == cy)\n\t\t\t\t{\n\t\t\t\t\tif (px <= x)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px >= x + w)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w, y + h / 2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py < y)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px == x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px == x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py == y + h)\n\t\t\t\t{\n\t\t\t\t\tif (px < cx)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (py > cy)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn new mxPoint(x + 3 * w / 4, y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (px == x)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, cy);\n\t\t\t\t}\n\t\t\t\telse if (px == x + w)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, cy);\n\t\t\t\t}\n\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (py > cy)\n\t\t\t\t{\n\t\t\t\t\tif ((px > x + w / 4) && (px < x + 3 * w / 4))\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t\t}\n\t\t\t\t\telse if (px < x + w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t}\n\t\t\t\t\telse if (px > x + 3 * w / 4)\n\t\t\t\t\t{\n\t\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tx = cx;\n\t\t\tvar ty = cy;\n\n\t\t\tif (px >= x && px <= x + w)\n\t\t\t{\n\t\t\t\ttx = px;\n\t\t\t\t\n\t\t\t\tif (py < cy)\n\t\t\t\t{\n\t\t\t\t\tty = y + h;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tty = y;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (py >= y && py <= y + h)\n\t\t\t{\n\t\t\t\tty = py;\n\t\t\t\t\n\t\t\t\tif (px < cx)\n\t\t\t\t{\n\t\t\t\t\ttx = x + w;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttx = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(tx, ty, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (vertical)\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 4, w / 2);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == pi2)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi2))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.5 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.75 * h));\n\t\t\t\t}\n\n\t\t\t\tif ((alpha < beta) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + w, y);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y - Math.floor(0.25 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha > pi2) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y - Math.floor(0.25 * h));\n\t\t\t\t}\n\t\t\t\telse if (((alpha > (pi - beta)) && (alpha <= pi))\n\t\t\t\t\t\t|| ((alpha < (-pi + beta)) && (alpha >= -pi)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > -pi2))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(1.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -pi2) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + w, y + Math.floor(1.25 * h));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar beta = Math.atan2(h / 2, w / 4);\n\n\t\t\t\t//Special cases where intersects with hexagon corners\n\t\t\t\tif (alpha == beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (pi - beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha == pi) || (alpha == -pi))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == 0)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + w, y + Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if (alpha == -beta)\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.75 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if (alpha == (-pi + beta))\n\t\t\t\t{\n\t\t\t\t\treturn new mxPoint(x + Math.floor(0.25 * w), y + h);\n\t\t\t\t}\n\n\t\t\t\tif ((alpha > 0) && (alpha < beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > beta) && (alpha < (pi - beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y);\n\t\t\t\t\tb = new mxPoint(x + w, y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha > (pi - beta)) && (alpha < pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y + h);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t- Math.floor(0.5 * h));\n\t\t\t\t}\n\t\t\t\telse if ((alpha < 0) && (alpha > -beta))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t\tb = new mxPoint(x + Math.floor(1.25 * w), y);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < -beta) && (alpha > (-pi + beta)))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x, y + h);\n\t\t\t\t\tb = new mxPoint(x + w, y + h);\n\t\t\t\t}\n\t\t\t\telse if ((alpha < (-pi + beta)) && (alpha > -pi))\n\t\t\t\t{\n\t\t\t\t\ta = new mxPoint(x - Math.floor(0.25 * w), y);\n\t\t\t\t\tb = new mxPoint(x + Math.floor(0.5 * w), y\n\t\t\t\t\t\t\t+ Math.floor(1.5 * h));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult = mxUtils.intersection(cx, cy, next.x, next.y, a.x, a.y, b.x, b.y);\n\t\t}\n\t\t\n\t\tif (result == null)\n\t\t{\n\t\t\treturn new mxPoint(cx, cy);\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxPerimeter = typeof mxPerimeter !== 'undefined' ? mxPerimeter : undefined;\n\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2017, draw.io AG\n */\n/**\n * Class: mxPrintPreview\n * \n * Implements printing of a diagram across multiple pages. The following opens\n * a print preview for an existing graph:\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.open();\n * (end)\n * \n * Use <mxUtils.getScaleForPageCount> as follows in order to print the graph\n * across a given number of pages:\n * \n * (code)\n * var pageCount = mxUtils.prompt('Enter page count', '1');\n * \n * if (pageCount != null)\n * {\n *   var scale = mxUtils.getScaleForPageCount(pageCount, graph);\n *   var preview = new mxPrintPreview(graph, scale);\n *   preview.open();\n * }\n * (end)\n * \n * Additional pages:\n * \n * To add additional pages before and after the output, <getCoverPages> and\n * <getAppendices> can be used, respectively.\n * \n * (code)\n * var preview = new mxPrintPreview(graph, 1);\n * \n * preview.getCoverPages = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Cover Page</p>'\n *   }))];\n * };\n * \n * preview.getAppendices = function(w, h)\n * {\n *   return [this.renderPage(w, h, 0, 0, mxUtils.bind(this, function(div)\n *   {\n *     div.innerHTML = '<div style=\"position:relative;margin:4px;\">Appendix</p>'\n *   }))];\n * };\n * \n * preview.open();\n * (end)\n * \n * CSS:\n * \n * The CSS from the original page is not carried over to the print preview.\n * To add CSS to the page, use the css argument in the <open> function or\n * override <writeHead> to add the respective link tags as follows:\n * \n * (code)\n * var writeHead = preview.writeHead;\n * preview.writeHead = function(doc, css)\n * {\n *   writeHead.apply(this, arguments);\n *   doc.writeln('<link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">');\n * };\n * (end)\n * \n * Padding:\n * \n * To add a padding to the page in the preview (but not the print output), use\n * the following code:\n * \n * (code)\n * preview.writeHead = function(doc)\n * {\n *   writeHead.apply(this, arguments);\n *   \n *   doc.writeln('<style type=\"text/css\">');\n *   doc.writeln('@media screen {');\n *   doc.writeln('  body > div { padding-top:30px;padding-left:40px;box-sizing:content-box; }');\n *   doc.writeln('}');\n *   doc.writeln('</style>');\n * };\n * (end)\n * \n * Headers:\n * \n * Apart from setting the title argument in the mxPrintPreview constructor you\n * can override <renderPage> as follows to add a header to any page:\n * \n * (code)\n * var oldRenderPage = mxPrintPreview.prototype.renderPage;\n * mxPrintPreview.prototype.renderPage = function(w, h, x, y, content, pageNumber)\n * {\n *   var div = oldRenderPage.apply(this, arguments);\n *   \n *   var header = document.createElement('div');\n *   header.style.position = 'absolute';\n *   header.style.top = '0px';\n *   header.style.width = '100%';\n *   header.style.textAlign = 'right';\n *   mxUtils.write(header, 'Your header here');\n *   div.firstChild.appendChild(header);\n *   \n *   return div;\n * };\n * (end)\n * \n * The pageNumber argument contains the number of the current page, starting at\n * 1. To display a header on the first page only, check pageNumber and add a\n * vertical offset in the constructor call for the height of the header.\n * \n * Page Format:\n * \n * For landscape printing, use <mxConstants.PAGE_FORMAT_A4_LANDSCAPE> as\n * the pageFormat in <mxUtils.getScaleForPageCount> and <mxPrintPreview>.\n * Keep in mind that one can not set the defaults for the print dialog\n * of the operating system from JavaScript so the user must manually choose\n * a page format that matches this setting.\n * \n * You can try passing the following CSS directive to <open> to set the\n * page format in the print dialog to landscape. However, this CSS\n * directive seems to be ignored in most major browsers, including IE.\n * \n * (code)\n * @page {\n *   size: landscape;\n * }\n * (end)\n * \n * Note that the print preview behaves differently in IE when used from the\n * filesystem or via HTTP so printing should always be tested via HTTP.\n * \n * If you are using a DOCTYPE in the source page you can override <getDoctype>\n * and provide the same DOCTYPE for the print preview if required. Here is\n * an example for IE8 standards mode.\n * \n * (code)\n * var preview = new mxPrintPreview(graph);\n * preview.getDoctype = function()\n * {\n *   return '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=5,IE=8\" ><![endif]-->';\n * };\n * preview.open();\n * (end)\n * \n * Constructor: mxPrintPreview\n *\n * Constructs a new print preview for the given parameters.\n * \n * Parameters:\n * \n * graph - <mxGraph> to be previewed.\n * scale - Optional scale of the output. Default is 1 / <mxGraph.pageScale>.\n * pageFormat - <mxRectangle> that specifies the page format (in pixels).\n * border - Border in pixels along each side of every page. Note that the\n * actual print function in the browser will add another border for\n * printing.\n * This should match the page format of the printer. Default uses the\n * <mxGraph.pageFormat> of the given graph.\n * x0 - Optional left offset of the output. Default is 0.\n * y0 - Optional top offset of the output. Default is 0.\n * borderColor - Optional color of the page border. Default is no border.\n * Note that a border is sometimes useful to highlight the printed page\n * border in the print preview of the browser.\n * title - Optional string that is used for the window title. Default\n * is 'Printer-friendly version'.\n * pageSelector - Optional boolean that specifies if the page selector\n * should appear in the window with the print preview. Default is true.\n */\nfunction mxPrintPreview(graph, scale, pageFormat, border, x0, y0, borderColor, title, pageSelector)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.border = (border != null) ? border : 0;\n\tthis.pageFormat = mxRectangle.fromRectangle((pageFormat != null) ? pageFormat : graph.pageFormat);\n\tthis.title = (title != null) ? title : 'Printer-friendly version';\n\tthis.x0 = (x0 != null) ? x0 : 0;\n\tthis.y0 = (y0 != null) ? y0 : 0;\n\tthis.borderColor = borderColor;\n\tthis.pageSelector = (pageSelector != null) ? pageSelector : true;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> that should be previewed.\n */\nmxPrintPreview.prototype.graph = null;\n\n/**\n * Variable: pageFormat\n *\n * Holds the <mxRectangle> that defines the page format.\n */\nmxPrintPreview.prototype.pageFormat = null;\n\n/**\n * Variable: scale\n * \n * Holds the scale of the print preview.\n */\nmxPrintPreview.prototype.scale = null;\n\n/**\n * Variable: border\n * \n * The border inset around each side of every page in the preview. This is set\n * to 0 if autoOrigin is false.\n */\nmxPrintPreview.prototype.border = 0;\n\n/**\n * Variable: marginTop\n * \n * The margin at the top of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginTop = 0;\n\n/**\n * Variable: marginBottom\n * \n * The margin at the bottom of the page (number). Default is 0.\n */\nmxPrintPreview.prototype.marginBottom = 0;\n\n/**\n * Variable: x0\n * \n * Holds the horizontal offset of the output.\n */\nmxPrintPreview.prototype.x0 = 0;\n\n/**\n * Variable: y0\n *\n * Holds the vertical offset of the output.\n */\nmxPrintPreview.prototype.y0 = 0;\n\n/**\n * Variable: autoOrigin\n * \n * Specifies if the origin should be automatically computed based on the top,\n * left corner of the actual diagram contents. The required offset will be added\n * to <x0> and <y0> in <open>. Default is true.\n */\nmxPrintPreview.prototype.autoOrigin = true;\n\n/**\n * Variable: printOverlays\n * \n * Specifies if overlays should be printed. Default is false.\n */\nmxPrintPreview.prototype.printOverlays = false;\n\n/**\n * Variable: printControls\n * \n * Specifies if controls (such as folding icons) should be printed. Default is\n * false.\n */\nmxPrintPreview.prototype.printControls = false;\n\n/**\n * Variable: printBackgroundImage\n * \n * Specifies if the background image should be printed. Default is false.\n */\nmxPrintPreview.prototype.printBackgroundImage = false;\n\n/**\n * Variable: backgroundColor\n * \n * Holds the color value for the page background color. Default is #ffffff.\n */\nmxPrintPreview.prototype.backgroundColor = '#ffffff';\n\n/**\n * Variable: borderColor\n * \n * Holds the color value for the page border.\n */\nmxPrintPreview.prototype.borderColor = null;\n\n/**\n * Variable: title\n * \n * Holds the title of the preview window.\n */\nmxPrintPreview.prototype.title = null;\n\n/**\n * Variable: pageSelector\n * \n * Boolean that specifies if the page selector should be\n * displayed. Default is true.\n */\nmxPrintPreview.prototype.pageSelector = null;\n\n/**\n * Variable: wnd\n * \n * Reference to the preview window.\n */\nmxPrintPreview.prototype.wnd = null;\n\n/**\n * Variable: targetWindow\n * \n * Assign any window here to redirect the rendering in <open>.\n */\nmxPrintPreview.prototype.targetWindow = null;\n\n/**\n * Variable: pageCount\n * \n * Holds the actual number of pages in the preview.\n */\nmxPrintPreview.prototype.pageCount = 0;\n\n/**\n * Variable: clipping\n * \n * Specifies is clipping should be used to avoid creating too many cell states\n * in large diagrams. The bounding box of the cells in the original diagram is\n * used if this is enabled. Default is true.\n */\nmxPrintPreview.prototype.clipping = true;\n\n/**\n * Function: getWindow\n * \n * Returns <wnd>.\n */\nmxPrintPreview.prototype.getWindow = function()\n{\n\treturn this.wnd;\n};\n\n/**\n * Function: getDocType\n * \n * Returns the string that should go before the HTML tag in the print preview\n * page. This implementation returns an X-UA meta tag for IE5 in quirks mode,\n * IE8 in IE8 standards mode and edge in IE9 standards mode.\n */\nmxPrintPreview.prototype.getDoctype = function()\n{\n\tvar dt = '';\n\t\n\tif (document.documentMode == 5)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=5\">';\n\t}\n\telse if (document.documentMode == 8)\n\t{\n\t\tdt = '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=8\">';\n\t}\n\telse if (document.documentMode > 8)\n\t{\n\t\t// Comment needed to make standards doctype apply in IE\n\t\tdt = '<!--[if IE]><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><![endif]-->';\n\t}\n\t\n\treturn dt;\n};\n\n/**\n * Function: appendGraph\n * \n * Adds the given graph to the existing print preview.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.appendGraph = function(graph, scale, x0, y0, forcePageBreaks, keepOpen)\n{\n\tthis.graph = graph;\n\tthis.scale = (scale != null) ? scale : 1 / graph.pageScale;\n\tthis.x0 = x0;\n\tthis.y0 = y0;\n\tthis.open(null, null, forcePageBreaks, keepOpen);\n};\n\n/**\n * Function: open\n * \n * Shows the print preview window. The window is created here if it does\n * not exist.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n * targetWindow - Optional window that should be used for rendering. If\n * this is specified then no HEAD tag, CSS and BODY tag will be written.\n */\nmxPrintPreview.prototype.open = function(css, targetWindow, forcePageBreaks, keepOpen)\n{\n\t// Closing the window while the page is being rendered may cause an\n\t// exception in IE. This and any other exceptions are simply ignored.\n\tvar previousInitializeOverlay = this.graph.cellRenderer.initializeOverlay;\n\tvar div = null;\n\t\n\ttry\n\t{\n\t\t// Temporarily overrides the method to redirect rendering of overlays\n\t\t// to the draw pane so that they are visible in the printout\n\t\tif (this.printOverlays)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initializeOverlay = function(state, overlay)\n\t\t\t{\n\t\t\t\toverlay.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tif (this.printControls)\n\t\t{\n\t\t\tthis.graph.cellRenderer.initControl = function(state, control, handleEvents, clickHandler)\n\t\t\t{\n\t\t\t\tcontrol.dialect = state.view.graph.dialect;\n\t\t\t\tcontrol.init(state.view.getDrawPane());\n\t\t\t};\n\t\t}\n\t\t\n\t\tthis.wnd = (targetWindow != null) ? targetWindow : this.wnd;\n\t\tvar isNewWindow = false;\n\t\t\n\t\tif (this.wnd == null)\n\t\t{\n\t\t\tisNewWindow = true;\n\t\t\tthis.wnd = window.open();\n\t\t}\n\t\t\n\t\tvar doc = this.wnd.document;\n\t\t\n\t\tif (isNewWindow)\n\t\t{\n\t\t\tvar dt = this.getDoctype();\n\t\t\t\n\t\t\tif (dt != null && dt.length > 0)\n\t\t\t{\n\t\t\t\tdoc.writeln(dt);\n\t\t\t}\n\t\t\t\n\t\t\tif (mxClient.IS_VML)\n\t\t\t{\n\t\t\t\tdoc.writeln('<html xmlns:v=\"urn:schemas-microsoft-com:vml\" xmlns:o=\"urn:schemas-microsoft-com:office:office\">');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (document.compatMode === 'CSS1Compat')\n\t\t\t\t{\n\t\t\t\t\tdoc.writeln('<!DOCTYPE html>');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdoc.writeln('<html>');\n\t\t\t}\n\t\t\t\n\t\t\tdoc.writeln('<head>');\n\t\t\tthis.writeHead(doc, css);\n\t\t\tdoc.writeln('</head>');\n\t\t\tdoc.writeln('<body class=\"mxPage\">');\n\t\t}\n\n\t\t// Computes the horizontal and vertical page count\n\t\tvar bounds = this.graph.getGraphBounds().clone();\n\t\tvar currentScale = this.graph.getView().getScale();\n\t\tvar sc = currentScale / this.scale;\n\t\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\t\t// Uses the absolute origin with no offset for all printing\n\t\tif (!this.autoOrigin)\n\t\t{\n\t\t\tthis.x0 -= tr.x * this.scale;\n\t\t\tthis.y0 -= tr.y * this.scale;\n\t\t\tbounds.width += bounds.x;\n\t\t\tbounds.height += bounds.y;\n\t\t\tbounds.x = 0;\n\t\t\tbounds.y = 0;\n\t\t\tthis.border = 0;\n\t\t}\n\t\t\n\t\t// Store the available page area\n\t\tvar availableWidth = this.pageFormat.width - (this.border * 2);\n\t\tvar availableHeight = this.pageFormat.height - (this.border * 2);\n\t\n\t\t// Adds margins to page format\n\t\tthis.pageFormat.height += this.marginTop + this.marginBottom;\n\n\t\t// Compute the unscaled, untranslated bounds to find\n\t\t// the number of vertical and horizontal pages\n\t\tbounds.width /= sc;\n\t\tbounds.height /= sc;\n\n\t\tvar hpages = Math.max(1, Math.ceil((bounds.width + this.x0) / availableWidth));\n\t\tvar vpages = Math.max(1, Math.ceil((bounds.height + this.y0) / availableHeight));\n\t\tthis.pageCount = hpages * vpages;\n\t\t\n\t\tvar writePageSelector = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.pageSelector && (vpages > 1 || hpages > 1))\n\t\t\t{\n\t\t\t\tvar table = this.createPageSelector(vpages, hpages);\n\t\t\t\tdoc.body.appendChild(table);\n\t\t\t\t\n\t\t\t\t// Implements position: fixed in IE quirks mode\n\t\t\t\tif (mxClient.IS_IE && doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7)\n\t\t\t\t{\n\t\t\t\t\ttable.style.position = 'absolute';\n\t\t\t\t\t\n\t\t\t\t\tvar update = function()\n\t\t\t\t\t{\n\t\t\t\t\t\ttable.style.top = ((doc.body.scrollTop || doc.documentElement.scrollTop) + 10) + 'px';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'scroll', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.addListener(this.wnd, 'resize', function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar addPage = mxUtils.bind(this, function(div, addBreak)\n\t\t{\n\t\t\t// Border of the DIV (aka page) inside the document\n\t\t\tif (this.borderColor != null)\n\t\t\t{\n\t\t\t\tdiv.style.borderColor = this.borderColor;\n\t\t\t\tdiv.style.borderStyle = 'solid';\n\t\t\t\tdiv.style.borderWidth = '1px';\n\t\t\t}\n\t\t\t\n\t\t\t// Needs to be assigned directly because IE doesn't support\n\t\t\t// child selectors, eg. body > div { background: white; }\n\t\t\tdiv.style.background = this.backgroundColor;\n\t\t\t\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tdiv.style.pageBreakAfter = 'always';\n\t\t\t}\n\n\t\t\t// NOTE: We are dealing with cross-window DOM here, which\n\t\t\t// is a problem in IE, so we copy the HTML markup instead.\n\t\t\t// The underlying problem is that the graph display markup\n\t\t\t// creation (in mxShape, mxGraphView) is hardwired to using\n\t\t\t// document.createElement and hence we must use this document\n\t\t\t// to create the complete page and then copy it over to the\n\t\t\t// new window.document. This can be fixed later by using the\n\t\t\t// ownerDocument of the container in mxShape and mxGraphView.\n\t\t\tif (isNewWindow && (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE))\n\t\t\t{\n\t\t\t\t// For some obscure reason, removing the DIV from the\n\t\t\t\t// parent before fetching its outerHTML has missing\n\t\t\t\t// fillcolor properties and fill children, so the div\n\t\t\t\t// must be removed afterwards to keep the fillcolors.\n\t\t\t\tdoc.writeln(div.outerHTML);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse if (mxClient.IS_IE || document.documentMode >= 11 || mxClient.IS_EDGE)\n\t\t\t{\n\t\t\t\tvar clone = doc.createElement('div');\n\t\t\t\tclone.innerHTML = div.outerHTML;\n\t\t\t\tclone = clone.getElementsByTagName('div')[0];\n\t\t\t\tdoc.body.appendChild(clone);\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdiv.parentNode.removeChild(div);\n\t\t\t\tdoc.body.appendChild(div);\n\t\t\t}\n\n\t\t\tif (forcePageBreaks || addBreak)\n\t\t\t{\n\t\t\t\tthis.addPageBreak(doc);\n\t\t\t}\n\t\t});\n\t\t\n\t\tvar cov = this.getCoverPages(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\tif (cov != null)\n\t\t{\n\t\t\tfor (var i = 0; i < cov.length; i++)\n\t\t\t{\n\t\t\t\taddPage(cov[i], true);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar apx = this.getAppendices(this.pageFormat.width, this.pageFormat.height);\n\t\t\n\t\t// Appends each page to the page output for printing, making\n\t\t// sure there will be a page break after each page (ie. div)\n\t\tfor (var i = 0; i < vpages; i++)\n\t\t{\n\t\t\tvar dy = i * availableHeight / this.scale - this.y0 / this.scale +\n\t\t\t\t\t(bounds.y - tr.y * currentScale) / currentScale;\n\t\t\t\n\t\t\tfor (var j = 0; j < hpages; j++)\n\t\t\t{\n\t\t\t\tif (this.wnd == null)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = j * availableWidth / this.scale - this.x0 / this.scale +\n\t\t\t\t\t\t(bounds.x - tr.x * currentScale) / currentScale;\n\t\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\t\tvar clip = new mxRectangle(dx, dy, availableWidth, availableHeight);\n\t\t\t\tdiv = this.renderPage(this.pageFormat.width, this.pageFormat.height, 0, 0, mxUtils.bind(this, function(div)\n\t\t\t\t{\n\t\t\t\t\tthis.addGraphFragment(-dx, -dy, this.scale, pageNum, div, clip);\n\t\t\t\t\t\n\t\t\t\t\tif (this.printBackgroundImage)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.insertBackgroundImage(div, -dx, -dy);\n\t\t\t\t\t}\n\t\t\t\t}), pageNum);\n\n\t\t\t\t// Gives the page a unique ID for later accessing the page\n\t\t\t\tdiv.setAttribute('id', 'mxPage-'+pageNum);\n\n\t\t\t\taddPage(div, apx != null || i < vpages - 1 || j < hpages - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (apx != null)\n\t\t{\n\t\t\tfor (var i = 0; i < apx.length; i++)\n\t\t\t{\n\t\t\t\taddPage(apx[i], i < apx.length - 1);\n\t\t\t}\n\t\t}\n\n\t\tif (isNewWindow && !keepOpen)\n\t\t{\n\t\t\tthis.closeDocument();\n\t\t\twritePageSelector();\n\t\t}\n\t\t\n\t\tthis.wnd.focus();\n\t}\n\tcatch (e)\n\t{\n\t\t// Removes the DIV from the document in case of an error\n\t\tif (div != null && div.parentNode != null)\n\t\t{\n\t\t\tdiv.parentNode.removeChild(div);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.graph.cellRenderer.initializeOverlay = previousInitializeOverlay;\n\t}\n\n\treturn this.wnd;\n};\n\n/**\n * Function: addPageBreak\n * \n * Adds a page break to the given document.\n */\nmxPrintPreview.prototype.addPageBreak = function(doc)\n{\n\tvar hr = doc.createElement('hr');\n\thr.className = 'mxPageBreak';\n\tdoc.body.appendChild(hr);\n};\n\n/**\n * Function: closeDocument\n * \n * Writes the closing tags for body and page after calling <writePostfix>.\n */\nmxPrintPreview.prototype.closeDocument = function()\n{\n\ttry\n\t{\n\t\tif (this.wnd != null && this.wnd.document != null)\n\t\t{\n\t\t\tvar doc = this.wnd.document;\n\t\t\t\n\t\t\tthis.writePostfix(doc);\n\t\t\tdoc.writeln('</body>');\n\t\t\tdoc.writeln('</html>');\n\t\t\tdoc.close();\n\t\t\t\n\t\t\t// Removes all event handlers in the print output\n\t\t\tmxEvent.release(doc.body);\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\t// ignore any errors resulting from wnd no longer being available\n\t}\n};\n\n/**\n * Function: writeHead\n * \n * Writes the HEAD section into the given document, without the opening\n * and closing HEAD tags.\n */\nmxPrintPreview.prototype.writeHead = function(doc, css)\n{\n\tif (this.title != null)\n\t{\n\t\tdoc.writeln('<title>' + this.title + '</title>');\n\t}\n\t\n\t// Adds required namespaces\n\tif (mxClient.IS_VML)\n\t{\n\t\tdoc.writeln('<style type=\"text/css\">v\\\\:*{behavior:url(#default#VML)}o\\\\:*{behavior:url(#default#VML)}</style>');\n\t}\n\n\t// Adds all required stylesheets\n\tmxClient.link('stylesheet', mxClient.basePath + '/css/common.css', doc);\n\n\t// Removes horizontal rules and page selector from print output\n\tdoc.writeln('<style type=\"text/css\">');\n\tdoc.writeln('@media print {');\n\tdoc.writeln('  * { -webkit-print-color-adjust: exact; }');\n\tdoc.writeln('  table.mxPageSelector { display: none; }');\n\tdoc.writeln('  hr.mxPageBreak { display: none; }');\n\tdoc.writeln('}');\n\tdoc.writeln('@media screen {');\n\t\n\t// NOTE: position: fixed is not supported in IE, so the page selector\n\t// position (absolute) needs to be updated in IE (see below)\n\tdoc.writeln('  table.mxPageSelector { position: fixed; right: 10px; top: 10px;' +\n\t\t\t'font-family: Arial; font-size:10pt; border: solid 1px darkgray;' +\n\t\t\t'background: white; border-collapse:collapse; }');\n\tdoc.writeln('  table.mxPageSelector td { border: solid 1px gray; padding:4px; }');\n\tdoc.writeln('  body.mxPage { background: gray; }');\n\tdoc.writeln('}');\n\t\n\tif (css != null)\n\t{\n\t\tdoc.writeln(css);\n\t}\n\t\n\tdoc.writeln('</style>');\n};\n\n/**\n * Function: writePostfix\n * \n * Called before closing the body of the page. This implementation is empty.\n */\nmxPrintPreview.prototype.writePostfix = function(doc)\n{\n\t// empty\n};\n\n/**\n * Function: createPageSelector\n * \n * Creates the page selector table.\n */\nmxPrintPreview.prototype.createPageSelector = function(vpages, hpages)\n{\n\tvar doc = this.wnd.document;\n\tvar table = doc.createElement('table');\n\ttable.className = 'mxPageSelector';\n\ttable.setAttribute('border', '0');\n\n\tvar tbody = doc.createElement('tbody');\n\t\n\tfor (var i = 0; i < vpages; i++)\n\t{\n\t\tvar row = doc.createElement('tr');\n\t\t\n\t\tfor (var j = 0; j < hpages; j++)\n\t\t{\n\t\t\tvar pageNum = i * hpages + j + 1;\n\t\t\tvar cell = doc.createElement('td');\n\t\t\tvar a = doc.createElement('a');\n\t\t\ta.setAttribute('href', '#mxPage-' + pageNum);\n\n\t\t\t// Workaround for FF where the anchor is appended to the URL of the original document\n\t\t\tif (mxClient.IS_NS && !mxClient.IS_SF && !mxClient.IS_GC)\n\t\t\t{\n\t\t\t\tvar js = 'var page = document.getElementById(\\'mxPage-' + pageNum + '\\');page.scrollIntoView(true);event.preventDefault();';\n\t\t\t\ta.setAttribute('onclick', js);\n\t\t\t}\n\t\t\t\n\t\t\tmxUtils.write(a, pageNum, doc);\n\t\t\tcell.appendChild(a);\n\t\t\trow.appendChild(cell);\n\t\t}\n\t\t\n\t\ttbody.appendChild(row);\n\t}\n\t\n\ttable.appendChild(tbody);\n\t\n\treturn table;\n};\n\n/**\n * Function: renderPage\n * \n * Creates a DIV that prints a single page of the given\n * graph using the given scale and returns the DIV that\n * represents the page.\n * \n * Parameters:\n * \n * w - Width of the page in pixels.\n * h - Height of the page in pixels.\n * dx - Optional horizontal page offset in pixels (used internally).\n * dy - Optional vertical page offset in pixels (used internally).\n * content - Callback that adds the HTML content to the inner div of a page.\n * Takes the inner div as the argument.\n * pageNumber - Integer representing the page number.\n */\nmxPrintPreview.prototype.renderPage = function(w, h, dx, dy, content, pageNumber)\n{\n\tvar doc = this.wnd.document;\n\tvar div = document.createElement('div');\n\tvar arg = null;\n\n\ttry\n\t{\n\t\t// Workaround for ignored clipping in IE 9 standards\n\t\t// when printing with page breaks and HTML labels.\n\t\tif (dx != 0 || dy != 0)\n\t\t{\n\t\t\tdiv.style.position = 'relative';\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.position = 'relative';\n\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\t\t\t\n\t\t\tvar viewport = document.createElement('div');\n\t\t\tviewport.style.position = 'relative';\n\t\t\tviewport.style.marginLeft = dx + 'px';\n\t\t\tviewport.style.marginTop = dy + 'px';\n\n\t\t\t// FIXME: IE8 standards output problems\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t\tviewport.style.position = 'absolute';\n\t\t\t}\n\t\t\n\t\t\tif (doc.documentMode == 10)\n\t\t\t{\n\t\t\t\tviewport.style.width = '100%';\n\t\t\t\tviewport.style.height = '100%';\n\t\t\t}\n\t\t\t\n\t\t\tinnerDiv.appendChild(viewport);\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = viewport;\n\t\t}\n\t\t// FIXME: IE10/11 too many pages\n\t\telse\n\t\t{\n\t\t\tdiv.style.width = w + 'px';\n\t\t\tdiv.style.height = h + 'px';\n\t\t\tdiv.style.overflow = 'hidden';\n\t\t\tdiv.style.pageBreakInside = 'avoid';\n\t\t\t\n\t\t\t// IE8 uses above branch currently\n\t\t\tif (doc.documentMode == 8)\n\t\t\t{\n\t\t\t\tdiv.style.position = 'relative';\n\t\t\t}\n\t\t\t\n\t\t\tvar innerDiv = document.createElement('div');\n\t\t\tinnerDiv.style.width = (w - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.height = (h - 2 * this.border) + 'px';\n\t\t\tinnerDiv.style.overflow = 'hidden';\n\n\t\t\tif (mxClient.IS_IE && (doc.documentMode == null || doc.documentMode == 5 || doc.documentMode == 8 || doc.documentMode == 7))\n\t\t\t{\n\t\t\t\tinnerDiv.style.marginTop = this.border + 'px';\n\t\t\t\tinnerDiv.style.marginLeft = this.border + 'px';\t\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinnerDiv.style.top = this.border + 'px';\n\t\t\t\tinnerDiv.style.left = this.border + 'px';\n\t\t\t}\n\t\n\t\t\tif (this.graph.dialect == mxConstants.DIALECT_VML)\n\t\t\t{\n\t\t\t\tinnerDiv.style.position = 'absolute';\n\t\t\t}\n\n\t\t\tdiv.appendChild(innerDiv);\n\t\t\tdocument.body.appendChild(div);\n\t\t\targ = innerDiv;\n\t\t}\n\t}\n\tcatch (e)\n\t{\n\t\tdiv.parentNode.removeChild(div);\n\t\tdiv = null;\n\t\t\n\t\tthrow e;\n\t}\n\n\tcontent(arg);\n\t \n\treturn div;\n};\n\n/**\n * Function: getRoot\n * \n * Returns the root cell for painting the graph.\n */\nmxPrintPreview.prototype.getRoot = function()\n{\n\tvar root = this.graph.view.currentRoot;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.graph.getModel().getRoot();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: addGraphFragment\n * \n * Adds a graph fragment to the given div.\n * \n * Parameters:\n * \n * dx - Horizontal translation for the diagram.\n * dy - Vertical translation for the diagram.\n * scale - Scale for the diagram.\n * pageNumber - Number of the page to be rendered.\n * div - Div that contains the output.\n * clip - Contains the clipping rectangle as an <mxRectangle>.\n */\nmxPrintPreview.prototype.addGraphFragment = function(dx, dy, scale, pageNumber, div, clip)\n{\n\tvar view = this.graph.getView();\n\tvar previousContainer = this.graph.container;\n\tthis.graph.container = div;\n\t\n\tvar canvas = view.getCanvas();\n\tvar backgroundPane = view.getBackgroundPane();\n\tvar drawPane = view.getDrawPane();\n\tvar overlayPane = view.getOverlayPane();\n\n\tif (this.graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tview.createSvg();\n\t\t\n\t\t// Uses CSS transform for scaling\n\t\tif (!mxClient.NO_FO)\n\t\t{\n\t\t\tvar g = view.getDrawPane().parentNode;\n\t\t\tvar prev = g.getAttribute('transform');\n\t\t\tg.setAttribute('transformOrigin', '0 0');\n\t\t\tg.setAttribute('transform', 'scale(' + scale + ',' + scale + ')' +\n\t\t\t\t'translate(' + dx + ',' + dy + ')');\n\t\t\t\n\t\t\tscale = 1;\n\t\t\tdx = 0;\n\t\t\tdy = 0;\n\t\t}\n\t}\n\telse if (this.graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tview.createVml();\n\t}\n\telse\n\t{\n\t\tview.createHtml();\n\t}\n\t\n\t// Disables events on the view\n\tvar eventsEnabled = view.isEventsEnabled();\n\tview.setEventsEnabled(false);\n\t\n\t// Disables the graph to avoid cursors\n\tvar graphEnabled = this.graph.isEnabled();\n\tthis.graph.setEnabled(false);\n\n\t// Resets the translation\n\tvar translate = view.getTranslate();\n\tview.translate = new mxPoint(dx, dy);\n\t\n\t// Redraws only states that intersect the clip\n\tvar redraw = this.graph.cellRenderer.redraw;\n\tvar states = view.states;\n\tvar s = view.scale;\n\n\t// Gets the transformed clip for intersection check below\n\tif (this.clipping)\n\t{\n\t\tvar tempClip = new mxRectangle((clip.x + translate.x) * s, (clip.y + translate.y) * s,\n\t\t\t\tclip.width * s / scale, clip.height * s / scale);\n\t\t\n\t\t// Checks clipping rectangle for speedup\n\t\t// Must create terminal states for edge clipping even if terminal outside of clip\n\t\tthis.graph.cellRenderer.redraw = function(state, force, rendering)\n\t\t{\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\t// Gets original state from graph to find bounding box\n\t\t\t\tvar orig = states.get(state.cell);\n\t\t\t\t\n\t\t\t\tif (orig != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = view.getBoundingBox(orig, false);\n\t\t\t\t\t\n\t\t\t\t\t// Stops rendering if outside clip for speedup\n\t\t\t\t\tif (bbox != null && !mxUtils.intersects(tempClip, bbox))\n\t\t\t\t\t{\n\t\t\t\t\t\t//return;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tredraw.apply(this, arguments);\n\t\t};\n\t}\n\t\n\tvar temp = null;\n\t\n\ttry\n\t{\n\t\t// Creates the temporary cell states in the view and\n\t\t// draws them onto the temporary DOM nodes in the view\n\t\tvar cells = [this.getRoot()];\n\t\ttemp = new mxTemporaryCellStates(view, scale, cells, null, mxUtils.bind(this, function(state)\n\t\t{\n\t\t\treturn this.getLinkForCellState(state);\n\t\t}));\n\t}\n\tfinally\n\t{\n\t\t// Removes overlay pane with selection handles\n\t\t// controls and icons from the print output\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tview.overlayPane.innerHTML = '';\n\t\t\tview.canvas.style.overflow = 'hidden';\n\t\t\tview.canvas.style.position = 'relative';\n\t\t\tview.canvas.style.top = this.marginTop + 'px';\n\t\t\tview.canvas.style.width = clip.width + 'px';\n\t\t\tview.canvas.style.height = clip.height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Removes everything but the SVG node\n\t\t\tvar tmp = div.firstChild;\n\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\tvar next = tmp.nextSibling;\n\t\t\t\tvar name = tmp.nodeName.toLowerCase();\n\n\t\t\t\t// Note: Width and height are required in FF 11\n\t\t\t\tif (name == 'svg')\n\t\t\t\t{\n\t\t\t\t\ttmp.style.overflow = 'hidden';\n\t\t\t\t\ttmp.style.position = 'relative';\n\t\t\t\t\ttmp.style.top = this.marginTop + 'px';\n\t\t\t\t\ttmp.setAttribute('width', clip.width);\n\t\t\t\t\ttmp.setAttribute('height', clip.height);\n\t\t\t\t\ttmp.style.width = '';\n\t\t\t\t\ttmp.style.height = '';\n\t\t\t\t}\n\t\t\t\t// Tries to fetch all text labels and only text labels\n\t\t\t\telse if (tmp.style.cursor != 'default' && name != 'div')\n\t\t\t\t{\n\t\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = next;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Puts background image behind SVG output\n\t\tif (this.printBackgroundImage)\n\t\t{\n\t\t\tvar svgs = div.getElementsByTagName('svg');\n\t\t\t\n\t\t\tif (svgs.length > 0)\n\t\t\t{\n\t\t\t\tsvgs[0].style.position = 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Completely removes the overlay pane to remove more handles\n\t\tview.overlayPane.parentNode.removeChild(view.overlayPane);\n\n\t\t// Restores the state of the view\n\t\tthis.graph.setEnabled(graphEnabled);\n\t\tthis.graph.container = previousContainer;\n\t\tthis.graph.cellRenderer.redraw = redraw;\n\t\tview.canvas = canvas;\n\t\tview.backgroundPane = backgroundPane;\n\t\tview.drawPane = drawPane;\n\t\tview.overlayPane = overlayPane;\n\t\tview.translate = translate;\n\t\ttemp.destroy();\n\t\tview.setEventsEnabled(eventsEnabled);\n\t}\n};\n\n/**\n * Function: getLinkForCellState\n * \n * Returns the link for the given cell state. This returns null.\n */\nmxPrintPreview.prototype.getLinkForCellState = function(state)\n{\n\treturn this.graph.getLinkForCell(state.cell);\n};\n\n/**\n * Function: insertBackgroundImage\n * \n * Inserts the background image into the given div.\n */\nmxPrintPreview.prototype.insertBackgroundImage = function(div, dx, dy)\n{\n\tvar bg = this.graph.backgroundImage;\n\t\n\tif (bg != null)\n\t{\n\t\tvar img = document.createElement('img');\n\t\timg.style.position = 'absolute';\n\t\timg.style.marginLeft = Math.round(dx * this.scale) + 'px';\n\t\timg.style.marginTop = Math.round(dy * this.scale) + 'px';\n\t\timg.setAttribute('width', Math.round(this.scale * bg.width));\n\t\timg.setAttribute('height', Math.round(this.scale * bg.height));\n\t\timg.src = bg.src;\n\t\t\n\t\tdiv.insertBefore(img, div.firstChild);\n\t}\n};\n\n/**\n * Function: getCoverPages\n * \n * Returns the pages to be added before the print output. This returns null.\n */\nmxPrintPreview.prototype.getCoverPages = function()\n{\n\treturn null;\n};\n\n/**\n * Function: getAppendices\n * \n * Returns the pages to be added after the print output. This returns null.\n */\nmxPrintPreview.prototype.getAppendices = function()\n{\n\treturn null;\n};\n\n/**\n * Function: print\n * \n * Opens the print preview and shows the print dialog.\n * \n * Parameters:\n * \n * css - Optional CSS string to be used in the head section.\n */\nmxPrintPreview.prototype.print = function(css)\n{\n\tvar wnd = this.open(css);\n\t\n\tif (wnd != null)\n\t{\n\t\twnd.print();\n\t}\n};\n\n/**\n * Function: close\n * \n * Closes the print preview window.\n */\nmxPrintPreview.prototype.close = function()\n{\n\tif (this.wnd != null)\n\t{\n\t\tthis.wnd.close();\n\t\tthis.wnd = null;\n\t}\n};\n\n__mxOutput.mxPrintPreview = typeof mxPrintPreview !== 'undefined' ? mxPrintPreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheet\n * \n * Defines the appearance of the cells in a graph. See <putCellStyle> for an\n * example of creating a new cell style. It is recommended to use objects, not\n * arrays for holding cell styles. Existing styles can be cloned using\n * <mxUtils.clone> and turned into a string for debugging using\n * <mxUtils.toString>.\n *\n * Default Styles:\n * \n * The stylesheet contains two built-in styles, which are used if no style is\n * defined for a cell:\n *\n *   defaultVertex - Default style for vertices\n *   defaultEdge - Default style for edges\n * \n * Example:\n * \n * (code)\n * var vertexStyle = stylesheet.getDefaultVertexStyle();\n * vertexStyle[mxConstants.ROUNDED] = true;\n * var edgeStyle = stylesheet.getDefaultEdgeStyle();\n * edgeStyle[mxConstants.STYLE_EDGE] = mxEdgeStyle.EntityRelation;\n * (end)\n * \n * Modifies the built-in default styles.\n * \n * To avoid the default style for a cell, add a leading semicolon\n * to the style definition, eg.\n * \n * (code)\n * ;shadow=1\n * (end)\n * \n * Removing keys:\n * \n * For removing a key in a cell style of the form [stylename;|key=value;] the\n * special value none can be used, eg. highlight;fillColor=none\n * \n * See also the helper methods in mxUtils to modify strings of this format,\n * namely <mxUtils.setStyle>, <mxUtils.indexOfStylename>,\n * <mxUtils.addStylename>, <mxUtils.removeStylename>,\n * <mxUtils.removeAllStylenames> and <mxUtils.setStyleFlag>.\n * \n * Constructor: mxStylesheet\n * \n * Constructs a new stylesheet and assigns default styles.\n */\nfunction mxStylesheet()\n{\n\tthis.styles = new Object();\n\t\n\tthis.putDefaultVertexStyle(this.createDefaultVertexStyle());\n\tthis.putDefaultEdgeStyle(this.createDefaultEdgeStyle());\n};\n\n/**\n * Function: styles\n * \n * Maps from names to cell styles. Each cell style is a map of key,\n * value pairs.\n */\nmxStylesheet.prototype.styles;\n\n/**\n * Function: createDefaultVertexStyle\n * \n * Creates and returns the default vertex style.\n */\nmxStylesheet.prototype.createDefaultVertexStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n\tstyle[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_FILLCOLOR] = '#C3D9FF';\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#774400';\n\t\n\treturn style;\n};\n\n/**\n * Function: createDefaultEdgeStyle\n * \n * Creates and returns the default edge style.\n */\nmxStylesheet.prototype.createDefaultEdgeStyle = function()\n{\n\tvar style = new Object();\n\t\n\tstyle[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_CONNECTOR;\n\tstyle[mxConstants.STYLE_ENDARROW] = mxConstants.ARROW_CLASSIC;\n\tstyle[mxConstants.STYLE_VERTICAL_ALIGN] = mxConstants.ALIGN_MIDDLE;\n\tstyle[mxConstants.STYLE_ALIGN] = mxConstants.ALIGN_CENTER;\n\tstyle[mxConstants.STYLE_STROKECOLOR] = '#6482B9';\n\tstyle[mxConstants.STYLE_FONTCOLOR] = '#446299';\n\t\n\treturn style;\n};\n\n/**\n * Function: putDefaultVertexStyle\n * \n * Sets the default style for vertices using defaultVertex as the\n * stylename.\n * \n * Parameters:\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putDefaultVertexStyle = function(style)\n{\n\tthis.putCellStyle('defaultVertex', style);\n};\n\n/**\n * Function: putDefaultEdgeStyle\n * \n * Sets the default style for edges using defaultEdge as the stylename.\n */\nmxStylesheet.prototype.putDefaultEdgeStyle = function(style)\n{\n\tthis.putCellStyle('defaultEdge', style);\n};\n\n/**\n * Function: getDefaultVertexStyle\n * \n * Returns the default style for vertices.\n */\nmxStylesheet.prototype.getDefaultVertexStyle = function()\n{\n\treturn this.styles['defaultVertex'];\n};\n\n/**\n * Function: getDefaultEdgeStyle\n * \n * Sets the default style for edges.\n */\nmxStylesheet.prototype.getDefaultEdgeStyle = function()\n{\n\treturn this.styles['defaultEdge'];\n};\n\n/**\n * Function: putCellStyle\n * \n * Stores the given map of key, value pairs under the given name in\n * <styles>.\n *\n * Example:\n * \n * The following example adds a new style called 'rounded' into an\n * existing stylesheet:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_RECTANGLE;\n * style[mxConstants.STYLE_PERIMETER] = mxPerimeter.RectanglePerimeter;\n * style[mxConstants.STYLE_ROUNDED] = true;\n * graph.getStylesheet().putCellStyle('rounded', style);\n * (end)\n * \n * In the above example, the new style is an object. The possible keys of\n * the object are all the constants in <mxConstants> that start with STYLE\n * and the values are either JavaScript objects, such as\n * <mxPerimeter.RightAngleRectanglePerimeter> (which is in fact a function)\n * or expressions, such as true. Note that not all keys will be\n * interpreted by all shapes (eg. the line shape ignores the fill color).\n * The final call to this method associates the style with a name in the\n * stylesheet. The style is used in a cell with the following code:\n * \n * (code)\n * model.setStyle(cell, 'rounded');\n * (end)\n * \n * Parameters:\n * \n * name - Name for the style to be stored.\n * style - Key, value pairs that define the style.\n */\nmxStylesheet.prototype.putCellStyle = function(name, style)\n{\n\tthis.styles[name] = style;\n};\n\n/**\n * Function: getCellStyle\n * \n * Returns the cell style for the specified stylename or the given\n * defaultStyle if no style can be found for the given stylename.\n * \n * Parameters:\n * \n * name - String of the form [(stylename|key=value);] that represents the\n * style.\n * defaultStyle - Default style to be returned if no style can be found.\n */\nmxStylesheet.prototype.getCellStyle = function(name, defaultStyle)\n{\n\tvar style = defaultStyle;\n\t\n\tif (name != null && name.length > 0)\n\t{\n\t\tvar pairs = name.split(';');\n\n\t\tif (style != null &&\n\t\t\tname.charAt(0) != ';')\n\t\t{\n\t\t\tstyle = mxUtils.clone(style);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstyle = new Object();\n\t\t}\n\n\t\t// Parses each key, value pair into the existing style\n\t \tfor (var i = 0; i < pairs.length; i++)\n\t \t{\n\t \t\tvar tmp = pairs[i];\n\t \t\tvar pos = tmp.indexOf('=');\n\t \t\t\n\t \t\tif (pos >= 0)\n\t \t\t{\n\t\t \t\tvar key = tmp.substring(0, pos);\n\t\t \t\tvar value = tmp.substring(pos + 1);\n\n\t\t \t\tif (value == mxConstants.NONE)\n\t\t \t\t{\n\t\t \t\t\tdelete style[key];\n\t\t \t\t}\n\t\t \t\telse if (mxUtils.isNumeric(value))\n\t\t \t\t{\n\t\t \t\t\tstyle[key] = parseFloat(value);\n\t\t \t\t}\n\t\t \t\telse\n\t\t \t\t{\n\t\t\t \t\tstyle[key] = value;\n\t\t \t\t}\n\t\t\t}\n\t \t\telse\n\t \t\t{\n\t \t\t\t// Merges the entries from a named style\n\t\t\t\tvar tmpStyle = this.styles[tmp];\n\t\t\t\t\n\t\t\t\tif (tmpStyle != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var key in tmpStyle)\n\t\t\t\t\t{\n\t\t\t\t\t\tstyle[key] = tmpStyle[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t \t\t}\n\t\t}\n\t}\n\t\n\treturn style;\n};\n\n__mxOutput.mxStylesheet = typeof mxStylesheet !== 'undefined' ? mxStylesheet : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellState\n * \n * Represents the current state of a cell in a given <mxGraphView>.\n * \n * For edges, the edge label position is stored in <absoluteOffset>.\n * \n * The size for oversize labels can be retrieved using the boundingBox property\n * of the <text> field as shown below.\n * \n * (code)\n * var bbox = (state.text != null) ? state.text.boundingBox : null;\n * (end)\n * \n * Constructor: mxCellState\n * \n * Constructs a new object that represents the current state of the given\n * cell in the specified view.\n * \n * Parameters:\n * \n * view - <mxGraphView> that contains the state.\n * cell - <mxCell> that this state represents.\n * style - Array of key, value pairs that constitute the style.\n */\nfunction mxCellState(view, cell, style)\n{\n\tthis.view = view;\n\tthis.cell = cell;\n\tthis.style = (style != null) ? style : {};\n\t\n\tthis.origin = new mxPoint();\n\tthis.absoluteOffset = new mxPoint();\n};\n\n/**\n * Extends mxRectangle.\n */\nmxCellState.prototype = new mxRectangle();\nmxCellState.prototype.constructor = mxCellState;\n\n/**\n * Variable: view\n * \n * Reference to the enclosing <mxGraphView>.\n */\nmxCellState.prototype.view = null;\n\n/**\n * Variable: cell\n *\n * Reference to the <mxCell> that is represented by this state.\n */\nmxCellState.prototype.cell = null;\n\n/**\n * Variable: style\n * \n * Contains an array of key, value pairs that represent the style of the\n * cell.\n */\nmxCellState.prototype.style = null;\n\n/**\n * Variable: invalidStyle\n * \n * Specifies if the style is invalid. Default is false.\n */\nmxCellState.prototype.invalidStyle = false;\n\n/**\n * Variable: invalid\n * \n * Specifies if the state is invalid. Default is true.\n */\nmxCellState.prototype.invalid = true;\n\n/**\n * Variable: origin\n *\n * <mxPoint> that holds the origin for all child cells. Default is a new\n * empty <mxPoint>.\n */\nmxCellState.prototype.origin = null;\n\n/**\n * Variable: absolutePoints\n * \n * Holds an array of <mxPoints> that represent the absolute points of an\n * edge.\n */\nmxCellState.prototype.absolutePoints = null;\n\n/**\n * Variable: absoluteOffset\n *\n * <mxPoint> that holds the absolute offset. For edges, this is the\n * absolute coordinates of the label position. For vertices, this is the\n * offset of the label relative to the top, left corner of the vertex. \n */\nmxCellState.prototype.absoluteOffset = null;\n\n/**\n * Variable: visibleSourceState\n * \n * Caches the visible source terminal state.\n */\nmxCellState.prototype.visibleSourceState = null;\n\n/**\n * Variable: visibleTargetState\n * \n * Caches the visible target terminal state.\n */\nmxCellState.prototype.visibleTargetState = null;\n\n/**\n * Variable: terminalDistance\n * \n * Caches the distance between the end points for an edge.\n */\nmxCellState.prototype.terminalDistance = 0;\n\n/**\n * Variable: length\n *\n * Caches the length of an edge.\n */\nmxCellState.prototype.length = 0;\n\n/**\n * Variable: segments\n * \n * Array of numbers that represent the cached length of each segment of the\n * edge.\n */\nmxCellState.prototype.segments = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the cell graphically.\n */\nmxCellState.prototype.shape = null;\n\n/**\n * Variable: text\n * \n * Holds the <mxText> that represents the label of the cell. Thi smay be\n * null if the cell has no label.\n */\nmxCellState.prototype.text = null;\n\n/**\n * Variable: unscaledWidth\n * \n * Holds the unscaled width of the state.\n */\nmxCellState.prototype.unscaledWidth = null;\n\n/**\n * Function: getPerimeterBounds\n * \n * Returns the <mxRectangle> that should be used as the perimeter of the\n * cell.\n * \n * Parameters:\n * \n * border - Optional border to be added around the perimeter bounds.\n * bounds - Optional <mxRectangle> to be used as the initial bounds.\n */\nmxCellState.prototype.getPerimeterBounds = function(border, bounds)\n{\n\tborder = border || 0;\n\tbounds = (bounds != null) ? bounds : new mxRectangle(this.x, this.y, this.width, this.height);\n\t\n\tif (this.shape != null && this.shape.stencil != null && this.shape.stencil.aspect == 'fixed')\n\t{\n\t\tvar aspect = this.shape.stencil.computeAspect(this.style, bounds.x, bounds.y, bounds.width, bounds.height);\n\t\t\n\t\tbounds.x = aspect.x;\n\t\tbounds.y = aspect.y;\n\t\tbounds.width = this.shape.stencil.w0 * aspect.width;\n\t\tbounds.height = this.shape.stencil.h0 * aspect.height;\n\t}\n\t\n\tif (border != 0)\n\t{\n\t\tbounds.grow(border);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: setAbsoluteTerminalPoint\n * \n * Sets the first or last point in <absolutePoints> depending on isSource.\n * \n * Parameters:\n * \n * point - <mxPoint> that represents the terminal point.\n * isSource - Boolean that specifies if the first or last point should\n * be assigned.\n */\nmxCellState.prototype.setAbsoluteTerminalPoint = function(point, isSource)\n{\n\tif (isSource)\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t}\n\t\t\n\t\tif (this.absolutePoints.length == 0)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[0] = point;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.absolutePoints == null)\n\t\t{\n\t\t\tthis.absolutePoints = [];\n\t\t\tthis.absolutePoints.push(null);\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse if (this.absolutePoints.length == 1)\n\t\t{\n\t\t\tthis.absolutePoints.push(point);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.absolutePoints[this.absolutePoints.length - 1] = point;\n\t\t}\n\t}\n};\n\n/**\n * Function: setCursor\n * \n * Sets the given cursor on the shape and text shape.\n */\nmxCellState.prototype.setCursor = function(cursor)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.setCursor(cursor);\n\t}\n\t\n\tif (this.text != null)\n\t{\n\t\tthis.text.setCursor(cursor);\n\t}\n};\n\n/**\n * Function: getVisibleTerminal\n * \n * Returns the visible source or target terminal cell.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target cell should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminal = function(source)\n{\n\tvar tmp = this.getVisibleTerminalState(source);\n\t\n\treturn (tmp != null) ? tmp.cell : null;\n};\n\n/**\n * Function: getVisibleTerminalState\n * \n * Returns the visible source or target terminal state.\n * \n * Parameters:\n * \n * source - Boolean that specifies if the source or target state should be\n * returned.\n */\nmxCellState.prototype.getVisibleTerminalState = function(source)\n{\n\treturn (source) ? this.visibleSourceState : this.visibleTargetState;\n};\n\n/**\n * Function: setVisibleTerminalState\n * \n * Sets the visible source or target terminal state.\n * \n * Parameters:\n * \n * terminalState - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the source or target state should be set.\n */\nmxCellState.prototype.setVisibleTerminalState = function(terminalState, source)\n{\n\tif (source)\n\t{\n\t\tthis.visibleSourceState = terminalState;\n\t}\n\telse\n\t{\n\t\tthis.visibleTargetState = terminalState;\n\t}\n};\n\n/**\n * Function: getCellBounds\n * \n * Returns the unscaled, untranslated bounds.\n */\nmxCellState.prototype.getCellBounds = function()\n{\n\treturn this.cellBounds;\n};\n\n/**\n * Function: getPaintBounds\n * \n * Returns the unscaled, untranslated paint bounds. This is the same as\n * <getCellBounds> but with a 90 degree rotation if the shape's\n * isPaintBoundsInverted returns true.\n */\nmxCellState.prototype.getPaintBounds = function()\n{\n\treturn this.paintBounds;\n};\n\n/**\n * Function: updateCachedBounds\n * \n * Updates the cellBounds and paintBounds.\n */\nmxCellState.prototype.updateCachedBounds = function()\n{\n\tvar tr = this.view.translate;\n\tvar s = this.view.scale;\n\tthis.cellBounds = new mxRectangle(this.x / s - tr.x, this.y / s - tr.y, this.width / s, this.height / s);\n\tthis.paintBounds = mxRectangle.fromRectangle(this.cellBounds);\n\t\n\tif (this.shape != null && this.shape.isPaintBoundsInverted())\n\t{\n\t\tthis.paintBounds.rotate90();\n\t}\n};\n\n/**\n * Destructor: setState\n * \n * Copies all fields from the given state to this state.\n */\nmxCellState.prototype.setState = function(state)\n{\n\tthis.view = state.view;\n\tthis.cell = state.cell;\n\tthis.style = state.style;\n\tthis.absolutePoints = state.absolutePoints;\n\tthis.origin = state.origin;\n\tthis.absoluteOffset = state.absoluteOffset;\n\tthis.boundingBox = state.boundingBox;\n\tthis.terminalDistance = state.terminalDistance;\n\tthis.segments = state.segments;\n\tthis.length = state.length;\n\tthis.x = state.x;\n\tthis.y = state.y;\n\tthis.width = state.width;\n\tthis.height = state.height;\n\tthis.unscaledWidth = state.unscaledWidth;\n};\n\n/**\n * Function: clone\n *\n * Returns a clone of this <mxPoint>.\n */\nmxCellState.prototype.clone = function()\n{\n \tvar clone = new mxCellState(this.view, this.cell, this.style);\n\n\t// Clones the absolute points\n\tif (this.absolutePoints != null)\n\t{\n\t\tclone.absolutePoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.absolutePoints.length; i++)\n\t\t{\n\t\t\tclone.absolutePoints[i] = this.absolutePoints[i].clone();\n\t\t}\n\t}\n\n\tif (this.origin != null)\n\t{\n\t\tclone.origin = this.origin.clone();\n\t}\n\n\tif (this.absoluteOffset != null)\n\t{\n\t\tclone.absoluteOffset = this.absoluteOffset.clone();\n\t}\n\n\tif (this.boundingBox != null)\n\t{\n\t\tclone.boundingBox = this.boundingBox.clone();\n\t}\n\n\tclone.terminalDistance = this.terminalDistance;\n\tclone.segments = this.segments;\n\tclone.length = this.length;\n\tclone.x = this.x;\n\tclone.y = this.y;\n\tclone.width = this.width;\n\tclone.height = this.height;\n\tclone.unscaledWidth = this.unscaledWidth;\n\t\n\treturn clone;\n};\n\n/**\n * Destructor: destroy\n * \n * Destroys the state and all associated resources.\n */\nmxCellState.prototype.destroy = function()\n{\n\tthis.view.graph.cellRenderer.destroy(this);\n};\n\n__mxOutput.mxCellState = typeof mxCellState !== 'undefined' ? mxCellState : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphSelectionModel\n *\n * Implements the selection model for a graph. Here is a listener that handles\n * all removed selection cells.\n * \n * (code)\n * graph.getSelectionModel().addListener(mxEvent.CHANGE, function(sender, evt)\n * {\n *   var cells = evt.getProperty('added');\n *   \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     // Handle cells[i]...\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the selection was changed in <changeSelection>. The\n * <code>edit</code> property contains the <mxUndoableEdit> which contains the\n * <mxSelectionChange>.\n * \n * Event: mxEvent.CHANGE\n * \n * Fires after the selection changes by executing an <mxSelectionChange>. The\n * <code>added</code> and <code>removed</code> properties contain arrays of\n * cells that have been added to or removed from the selection, respectively.\n * The names are inverted due to historic reasons. This cannot be changed.\n * \n * Constructor: mxGraphSelectionModel\n *\n * Constructs a new graph selection model for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphSelectionModel(graph)\n{\n\tthis.graph = graph;\n\tthis.cells = [];\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphSelectionModel.prototype = new mxEventSource();\nmxGraphSelectionModel.prototype.constructor = mxGraphSelectionModel;\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphSelectionModel.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Variable: updatingSelectionResource\n *\n * Specifies the resource key for the status message while the selection is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingSelection'.\n */\nmxGraphSelectionModel.prototype.updatingSelectionResource = (mxClient.language != 'none') ? 'updatingSelection' : '';\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphSelectionModel.prototype.graph = null;\n\n/**\n * Variable: singleSelection\n *\n * Specifies if only one selected item at a time is allowed.\n * Default is false.\n */\nmxGraphSelectionModel.prototype.singleSelection = false;\n\n/**\n * Function: isSingleSelection\n *\n * Returns <singleSelection> as a boolean.\n */\nmxGraphSelectionModel.prototype.isSingleSelection = function()\n{\n\treturn this.singleSelection;\n};\n\n/**\n * Function: setSingleSelection\n *\n * Sets the <singleSelection> flag.\n * \n * Parameters:\n * \n * singleSelection - Boolean that specifies the new value for\n * <singleSelection>.\n */\nmxGraphSelectionModel.prototype.setSingleSelection = function(singleSelection)\n{\n\tthis.singleSelection = singleSelection;\n};\n\n/**\n * Function: isSelected\n *\n * Returns true if the given <mxCell> is selected.\n */\nmxGraphSelectionModel.prototype.isSelected = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\treturn mxUtils.indexOf(this.cells, cell) >= 0;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isEmpty\n *\n * Returns true if no cells are currently selected.\n */\nmxGraphSelectionModel.prototype.isEmpty = function()\n{\n\treturn this.cells.length == 0;\n};\n\n/**\n * Function: clear\n *\n * Clears the selection and fires a <change> event if the selection was not\n * empty.\n */\nmxGraphSelectionModel.prototype.clear = function()\n{\n\tthis.changeSelection(null, this.cells);\n};\n\n/**\n * Function: setCell\n *\n * Selects the specified <mxCell> using <setCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraphSelectionModel.prototype.setCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.setCells([cell]);\n\t}\n};\n\n/**\n * Function: setCells\n *\n * Selects the given array of <mxCells> and fires a <change> event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraphSelectionModel.prototype.setCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\t\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, this.cells);\n\t}\n};\n\n/**\n * Function: getFirstSelectableCell\n *\n * Returns the first selectable cell in the given array of cells.\n */\nmxGraphSelectionModel.prototype.getFirstSelectableCell = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\treturn cells[i];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: addCell\n * \n * Adds the given <mxCell> to the selection and fires a <select> event.\n * \n * Parameters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.addCells([cell]);\n\t}\n};\n\n/**\n * Function: addCells\n * \n * Adds the given array of <mxCells> to the selection and fires a <select>\n * event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to add to the selection.\n */\nmxGraphSelectionModel.prototype.addCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar remove = null;\n\t\t\n\t\tif (this.singleSelection)\n\t\t{\n\t\t\tremove = this.cells;\n\t\t\tcells = [this.getFirstSelectableCell(cells)];\n\t\t}\n\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (!this.isSelected(cells[i]) &&\n\t\t\t\tthis.graph.isCellSelectable(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\t\n\t\t}\n\n\t\tthis.changeSelection(tmp, remove);\n\t}\n};\n\n/**\n * Function: removeCell\n *\n * Removes the specified <mxCell> from the selection and fires a <select>\n * event for the remaining cells.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.removeCell = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tthis.removeCells([cell]);\n\t}\n};\n\n/**\n * Function: removeCells\n */\nmxGraphSelectionModel.prototype.removeCells = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSelected(cells[i]))\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.changeSelection(null, tmp);\t\n\t}\n};\n\n/**\n * Function: changeSelection\n *\n * Adds/removes the specified arrays of <mxCell> to/from the selection.\n * \n * Parameters:\n * \n * added - Array of <mxCell> to add to the selection.\n * remove - Array of <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.changeSelection = function(added, removed)\n{\n\tif ((added != null &&\n\t\tadded.length > 0 &&\n\t\tadded[0] != null) ||\n\t\t(removed != null &&\n\t\tremoved.length > 0 &&\n\t\tremoved[0] != null))\n\t{\n\t\tvar change = new mxSelectionChange(this, added, removed);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, false);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t}\n};\n\n/**\n * Function: cellAdded\n *\n * Inner callback to add the specified <mxCell> to the selection. No event\n * is fired in this implementation.\n * \n * Paramters:\n * \n * cell - <mxCell> to add to the selection.\n */\nmxGraphSelectionModel.prototype.cellAdded = function(cell)\n{\n\tif (cell != null &&\n\t\t!this.isSelected(cell))\n\t{\n\t\tthis.cells.push(cell);\n\t}\n};\n\n/**\n * Function: cellRemoved\n *\n * Inner callback to remove the specified <mxCell> from the selection. No\n * event is fired in this implementation.\n * \n * Parameters:\n * \n * cell - <mxCell> to remove from the selection.\n */\nmxGraphSelectionModel.prototype.cellRemoved = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar index = mxUtils.indexOf(this.cells, cell);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tthis.cells.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Class: mxSelectionChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxSelectionChange(selectionModel, added, removed)\n{\n\tthis.selectionModel = selectionModel;\n\tthis.added = (added != null) ? added.slice() : null;\n\tthis.removed = (removed != null) ? removed.slice() : null;\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxSelectionChange.prototype.execute = function()\n{\n\tvar t0 = mxLog.enter('mxSelectionChange.execute');\n\twindow.status = mxResources.get(\n\t\tthis.selectionModel.updatingSelectionResource) ||\n\t\tthis.selectionModel.updatingSelectionResource;\n\n\tif (this.removed != null)\n\t{\n\t\tfor (var i = 0; i < this.removed.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellRemoved(this.removed[i]);\n\t\t}\n\t}\n\n\tif (this.added != null)\n\t{\n\t\tfor (var i = 0; i < this.added.length; i++)\n\t\t{\n\t\t\tthis.selectionModel.cellAdded(this.added[i]);\n\t\t}\n\t}\n\t\n\tvar tmp = this.added;\n\tthis.added = this.removed;\n\tthis.removed = tmp;\n\n\twindow.status = mxResources.get(this.selectionModel.doneResource) ||\n\t\tthis.selectionModel.doneResource;\n\tmxLog.leave('mxSelectionChange.execute', t0);\n\t\n\tthis.selectionModel.fireEvent(new mxEventObject(mxEvent.CHANGE,\n\t\t\t'added', this.added, 'removed', this.removed));\n};\n\n__mxOutput.mxGraphSelectionModel = typeof mxGraphSelectionModel !== 'undefined' ? mxGraphSelectionModel : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellEditor\n *\n * In-place editor for the graph. To control this editor, use\n * <mxGraph.invokesStopCellEditing>, <mxGraph.enterStopsCellEditing> and\n * <mxGraph.escapeEnabled>. If <mxGraph.enterStopsCellEditing> is true then\n * ctrl-enter or shift-enter can be used to create a linefeed. The F2 and\n * escape keys can always be used to stop editing.\n * \n * To customize the location of the textbox in the graph, override\n * <getEditorBounds> as follows:\n * \n * (code)\n * graph.cellEditor.getEditorBounds = function(state)\n * {\n *   var result = mxCellEditor.prototype.getEditorBounds.apply(this, arguments);\n *   \n *   if (this.graph.getModel().isEdge(state.cell))\n *   {\n *     result.x = state.getCenterX() - result.width / 2;\n *     result.y = state.getCenterY() - result.height / 2;\n *   }\n *   \n *   return result;\n * };\n * (end)\n * \n * Note that this hook is only called if <autoSize> is false. If <autoSize> is true,\n * then <mxShape.getLabelBounds> is used to compute the current bounds of the textbox.\n * \n * The textarea uses the mxCellEditor CSS class. You can modify this class in\n * your custom CSS. Note: You should modify the CSS after loading the client\n * in the page.\n *\n * Example:\n * \n * To only allow numeric input in the in-place editor, use the following code.\n *\n * (code)\n * var text = graph.cellEditor.textarea;\n * \n * mxEvent.addListener(text, 'keydown', function (evt)\n * {\n *   if (!(evt.keyCode >= 48 && evt.keyCode <= 57) &&\n *       !(evt.keyCode >= 96 && evt.keyCode <= 105))\n *   {\n *     mxEvent.consume(evt);\n *   }\n * }); \n * (end)\n * \n * Placeholder:\n * \n * To implement a placeholder for cells without a label, use the\n * <emptyLabelText> variable.\n * \n * Resize in Chrome:\n * \n * Resize of the textarea is disabled by default. If you want to enable\n * this feature extend <init> and set this.textarea.style.resize = ''.\n * \n * To start editing on a key press event, the container of the graph\n * should have focus or a focusable parent should be used to add the\n * key press handler as follows.\n * \n * (code)\n * mxEvent.addListener(graph.container, 'keypress', mxUtils.bind(this, function(evt)\n * {\n *   if (!graph.isEditing() && !graph.isSelectionEmpty() && evt.which !== 0 &&\n *       !mxEvent.isAltDown(evt) && !mxEvent.isControlDown(evt) && !mxEvent.isMetaDown(evt))\n *   {\n *     graph.startEditing();\n *     \n *     if (mxClient.IS_FF)\n *     {\n *       graph.cellEditor.textarea.value = String.fromCharCode(evt.which);\n *     }\n *   }\n * }));\n * (end)\n * \n * To allow focus for a DIV, and hence to receive key press events, some browsers\n * require it to have a valid tabindex attribute. In this case the following\n * code may be used to keep the container focused.\n * \n * (code)\n * var graphFireMouseEvent = graph.fireMouseEvent;\n * graph.fireMouseEvent = function(evtName, me, sender)\n * {\n *   if (evtName == mxEvent.MOUSE_DOWN)\n *   {\n *     this.container.focus();\n *   }\n *   \n *   graphFireMouseEvent.apply(this, arguments);\n * };\n * (end)\n *\n * Constructor: mxCellEditor\n *\n * Constructs a new in-place editor for the specified graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellEditor(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Stops editing after zoom changes\n\tthis.zoomHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (this.graph.isEditing())\n\t\t{\n\t\t\tthis.resize();\n\t\t}\n\t});\n\t\n\tthis.graph.view.addListener(mxEvent.SCALE, this.zoomHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.zoomHandler);\n\t\n\t// Adds handling of deleted cells while editing\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.editingCell != null && this.graph.getView().getState(this.editingCell) == null)\n\t\t{\n\t\t\tthis.stopEditing(true);\n\t\t}\n\t});\n\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellEditor.prototype.graph = null;\n\n/**\n * Variable: textarea\n *\n * Holds the DIV that is used for text editing. Note that this may be null before the first\n * edit. Instantiated in <init>.\n */\nmxCellEditor.prototype.textarea = null;\n\n/**\n * Variable: editingCell\n * \n * Reference to the <mxCell> that is currently being edited.\n */\nmxCellEditor.prototype.editingCell = null;\n\n/**\n * Variable: trigger\n * \n * Reference to the event that was used to start editing.\n */\nmxCellEditor.prototype.trigger = null;\n\n/**\n * Variable: modified\n * \n * Specifies if the label has been modified.\n */\nmxCellEditor.prototype.modified = false;\n\n/**\n * Variable: autoSize\n * \n * Specifies if the textarea should be resized while the text is being edited.\n * Default is true.\n */\nmxCellEditor.prototype.autoSize = true;\n\n/**\n * Variable: selectText\n * \n * Specifies if the text should be selected when editing starts. Default is\n * true.\n */\nmxCellEditor.prototype.selectText = true;\n\n/**\n * Variable: emptyLabelText\n * \n * Text to be displayed for empty labels. Default is '' or '<br>' in Firefox as\n * a workaround for the missing cursor bug for empty content editable. This can\n * be set to eg. \"[Type Here]\" to easier visualize editing of empty labels. The\n * value is only displayed before the first keystroke and is never used as the\n * actual editing value.\n */\nmxCellEditor.prototype.emptyLabelText = (mxClient.IS_FF) ? '<br>' : '';\n\n/**\n * Variable: escapeCancelsEditing\n * \n * If true, pressing the escape key will stop editing and not accept the new\n * value. Change this to false to accept the new value on escape, and cancel\n * editing on Shift+Escape instead. Default is true.\n */\nmxCellEditor.prototype.escapeCancelsEditing = true;\n\n/**\n * Variable: textNode\n * \n * Reference to the label DOM node that has been hidden.\n */\nmxCellEditor.prototype.textNode = '';\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the textarea. Default is 5.\n */\nmxCellEditor.prototype.zIndex = 5;\n\n/**\n * Variable: minResize\n * \n * Defines the minimum width and height to be used in <resize>. Default is 0x20px.\n */\nmxCellEditor.prototype.minResize = new mxRectangle(0, 20);\n\n/**\n * Variable: wordWrapPadding\n * \n * Correction factor for word wrapping width. Default is 2 in quirks, 0 in IE\n * 11 and 1 in all other browsers and modes.\n */\nmxCellEditor.prototype.wordWrapPadding = (mxClient.IS_QUIRKS) ? 2 : (!mxClient.IS_IE11) ? 1 : 0;\n\n/**\n * Variable: blurEnabled\n *\n * If <focusLost> should be called if <textarea> loses the focus. Default is false.\n */\nmxCellEditor.prototype.blurEnabled = false;\n\n/**\n * Variable: initialValue\n * \n * Holds the initial editing value to check if the current value was modified.\n */\nmxCellEditor.prototype.initialValue = null;\n\n/**\n * Variable: align\n * \n * Holds the current temporary horizontal alignment for the cell style. If this\n * is modified then the current text alignment is changed and the cell style is\n * updated when the value is applied.\n */\nmxCellEditor.prototype.align = null;\n\n/**\n * Function: init\n *\n * Creates the <textarea> and installs the event listeners. The key handler\n * updates the <modified> state.\n */\nmxCellEditor.prototype.init = function ()\n{\n\tthis.textarea = document.createElement('div');\n\tthis.textarea.className = 'mxCellEditor mxPlainTextEditor';\n\tthis.textarea.contentEditable = true;\n\t\n\t// Workaround for selection outside of DIV if height is 0\n\tif (mxClient.IS_GC)\n\t{\n\t\tthis.textarea.style.minHeight = '1em';\n\t}\n\n\tthis.textarea.style.position = ((this.isLegacyEditor())) ? 'absolute' : 'relative';\n\tthis.installListeners(this.textarea);\n};\n\n/**\n * Function: applyValue\n * \n * Called in <stopEditing> if cancel is false to invoke <mxGraph.labelChanged>.\n */\nmxCellEditor.prototype.applyValue = function(state, value)\n{\n\tthis.graph.labelChanged(state.cell, value, this.trigger);\n};\n\n/**\n * Function: setAlign\n * \n * Sets the temporary horizontal alignment for the current editing session.\n */\nmxCellEditor.prototype.setAlign = function (align)\n{\n\tif (this.textarea != null)\n\t{\n\t\tthis.textarea.style.textAlign = align;\n\t}\n\t\n\tthis.align = align;\n\tthis.resize();\n};\n\n/**\n * Function: getInitialValue\n * \n * Gets the initial editing value for the given cell.\n */\nmxCellEditor.prototype.getInitialValue = function(state, trigger)\n{\n\tvar result = mxUtils.htmlEntities(this.graph.getEditingValue(state.cell, trigger), false);\n\t\n    // Workaround for trailing line breaks being ignored in the editor\n\tif (!mxClient.IS_QUIRKS && document.documentMode != 8 && document.documentMode != 9 &&\n\t\tdocument.documentMode != 10)\n\t{\n\t\tresult = mxUtils.replaceTrailingNewlines(result, '<div><br></div>');\n\t}\n    \n    return result.replace(/\\n/g, '<br>');\n};\n\n/**\n * Function: getCurrentValue\n * \n * Returns the current editing value.\n */\nmxCellEditor.prototype.getCurrentValue = function(state)\n{\n\treturn mxUtils.extractTextWithWhitespace(this.textarea.childNodes);\n};\n\n/**\n * Function: isCancelEditingKeyEvent\n * \n * Returns true if <escapeCancelsEditing> is true and shift, control and meta\n * are not pressed.\n */\nmxCellEditor.prototype.isCancelEditingKeyEvent = function(evt)\n{\n\treturn this.escapeCancelsEditing || mxEvent.isShiftDown(evt) || mxEvent.isControlDown(evt) || mxEvent.isMetaDown(evt);\n};\n\n/**\n * Function: installListeners\n * \n * Installs listeners for focus, change and standard key event handling.\n */\nmxCellEditor.prototype.installListeners = function(elt)\n{\n\t// Applies value if text is dragged\n\t// LATER: Gesture mouse events ignored for starting move\n\tmxEvent.addListener(elt, 'dragstart', mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.stopEditing(false);\n\t\tmxEvent.consume(evt);\n\t}));\n\n\t// Applies value if focus is lost\n\tmxEvent.addListener(elt, 'blur', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.blurEnabled)\n\t\t{\n\t\t\tthis.focusLost(evt);\n\t\t}\n\t}));\n\n\t// Updates modified state and handles placeholder text\n\tmxEvent.addListener(elt, 'keydown', mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt))\n\t\t{\n\t\t\tif (this.isStopEditingEvent(evt))\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(false);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t\telse if (evt.keyCode == 27 /* Escape */)\n\t\t\t{\n\t\t\t\tthis.graph.stopEditing(this.isCancelEditingKeyEvent(evt));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Keypress only fires if printable key was pressed and handles removing the empty placeholder\n\tvar keypressHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Clears the initial empty label on the first keystroke\n\t\t\t// and workaround for FF which fires keypress for delete and backspace\n\t\t\tif (this.clearOnChange && elt.innerHTML == this.getEmptyLabelText() &&\n\t\t\t\t(!mxClient.IS_FF || (evt.keyCode != 8 /* Backspace */ && evt.keyCode != 46 /* Delete */)))\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t\telt.innerHTML = '';\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, 'keypress', keypressHandler);\n\tmxEvent.addListener(elt, 'paste', keypressHandler);\n\t\n\t// Handler for updating the empty label text value after a change\n\tvar keyupHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null)\n\t\t{\n\t\t\t// Uses an optional text value for sempty labels which is cleared\n\t\t\t// when the first keystroke appears. This makes it easier to see\n\t\t\t// that a label is being edited even if the label is empty.\n\t\t\t// In Safari and FF, an empty text is represented by <BR> which isn't enough to force a valid size\n\t\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t\t{\n\t\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\t\tthis.clearOnChange = this.textarea.innerHTML.length > 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.clearOnChange = false;\n\t\t\t}\n\t\t}\n\t});\n\n\tmxEvent.addListener(elt, (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keyup', keyupHandler);\n\tmxEvent.addListener(elt, 'cut', keyupHandler);\n\tmxEvent.addListener(elt, 'paste', keyupHandler);\n\n\t// Adds automatic resizing of the textbox while typing using input, keyup and/or DOM change events\n\tvar evtName = (!mxClient.IS_IE11 && !mxClient.IS_IE) ? 'input' : 'keydown';\n\t\n\tvar resizeHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tif (this.editingCell != null && this.autoSize && !mxEvent.isConsumed(evt))\n\t\t{\n\t\t\t// Asynchronous is needed for keydown and shows better results for input events overall\n\t\t\t// (ie non-blocking and cases where the offsetWidth/-Height was wrong at this time)\n\t\t\tif (this.resizeThread != null)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.resizeThread);\n\t\t\t}\n\t\t\t\n\t\t\tthis.resizeThread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resizeThread = null;\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t});\n\t\n\tmxEvent.addListener(elt, evtName, resizeHandler);\n\tmxEvent.addListener(window, 'resize', resizeHandler);\n\n\tif (document.documentMode >= 9)\n\t{\n\t\tmxEvent.addListener(elt, 'DOMNodeRemoved', resizeHandler);\n\t\tmxEvent.addListener(elt, 'DOMNodeInserted', resizeHandler);\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(elt, 'cut', resizeHandler);\n\t\tmxEvent.addListener(elt, 'paste', resizeHandler);\n\t}\n};\n\n/**\n * Function: isStopEditingEvent\n * \n * Returns true if the given keydown event should stop cell editing. This\n * returns true if F2 is pressed of if <mxGraph.enterStopsCellEditing> is true\n * and enter is pressed without control or shift.\n */\nmxCellEditor.prototype.isStopEditingEvent = function(evt)\n{\n\treturn evt.keyCode == 113 /* F2 */ || (this.graph.isEnterStopsCellEditing() &&\n\t\tevt.keyCode == 13 /* Enter */ && !mxEvent.isControlDown(evt) &&\n\t\t!mxEvent.isShiftDown(evt));\n};\n\n/**\n * Function: isEventSource\n * \n * Returns true if this editor is the source for the given native event.\n */\nmxCellEditor.prototype.isEventSource = function(evt)\n{\n\treturn mxEvent.getSource(evt) == this.textarea;\n};\n\n/**\n * Function: resize\n * \n * Returns <modified>.\n */\nmxCellEditor.prototype.resize = function()\n{\n\tvar state = this.graph.getView().getState(this.editingCell);\n\t\n\tif (state == null)\n\t{\n\t\tthis.stopEditing(true);\n\t}\n\telse if (this.textarea != null)\n\t{\n\t\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n \t\tvar scale = this.graph.getView().scale;\n \t\tvar m = null;\n\t\t\n\t\tif (!this.autoSize || (state.style[mxConstants.STYLE_OVERFLOW] == 'fill'))\n\t\t{\n\t\t\t// Specifies the bounds of the editor box\n\t\t\tthis.bounds = this.getEditorBounds(state);\n\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + 'px';\n\t\t\tthis.textarea.style.height = Math.round(this.bounds.height / scale) + 'px';\n\t\t\t\n\t\t\t// FIXME: Offset when scaled\n\t\t\tif (document.documentMode == 8 || mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.round(this.bounds.x) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.round(this.bounds.y) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x + 1)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y + 1)) + 'px';\n\t\t\t}\n\t\t\t\n\t\t\t// Installs native word wrapping and avoids word wrap for empty label placeholder\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = Math.round(this.bounds.width / scale) + this.wordWrapPadding + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\t\n\t\t\t\tif (state.style[mxConstants.STYLE_OVERFLOW] != 'fill')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t \t{\n\t \t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\tm = (state.text != null && this.align == null) ? state.text.margin : null;\n\t\t\t\n\t\t\tif (m == null)\n\t\t\t{\n\t\t\t\tm = mxUtils.getAlignmentAsPoint(this.align || mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER),\n\t\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_ALIGN, mxConstants.ALIGN_MIDDLE));\n\t\t\t}\n\t\t\t\n\t \t\tif (isEdge)\n\t\t\t{\n\t\t\t\tthis.bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y, 0, 0);\n\t\t\t\t\n\t\t\t\tif (lw != null)\n\t\t\t \t{\n\t\t\t\t\tvar tmp = (parseFloat(lw) + 2) * scale;\n\t\t\t\t\tthis.bounds.width = tmp;\n\t\t\t\t\tthis.bounds.x += m.x * tmp;\n\t\t\t \t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar bds = mxRectangle.fromRectangle(state);\n\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\tbds = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(bds) : bds;\n\t\t\t \t\n\t\t\t \tif (lw != null)\n\t\t\t \t{\n\t\t\t \t\tbds.width = parseFloat(lw) * scale;\n\t\t\t \t}\n\t\t\t \t\n\t\t\t \tif (!state.view.graph.cellRenderer.legacySpacing || state.style[mxConstants.STYLE_OVERFLOW] != 'width')\n\t\t\t \t{\n\t\t\t\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 2) * scale;\n\t\t\t\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\t\t\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\t\t\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\t\t\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\t\t\t\t\n\t\t\t\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\t\t\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\n\t\t\t\t\tbds = new mxRectangle(bds.x + spacingLeft, bds.y + spacingTop,\n\t\t\t\t\t\tbds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (spacingLeft + spacingRight) : 0),\n\t\t\t\t\t\tbds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (spacingTop + spacingBottom) : 0));\n\t\t\t \t}\n\n\t\t\t\tthis.bounds = new mxRectangle(bds.x + state.absoluteOffset.x, bds.y + state.absoluteOffset.y, bds.width, bds.height);\n\t\t\t}\n\n\t\t\t// Needed for word wrap inside text blocks with oversize lines to match the final result where\n\t \t\t// the width of the longest line is used as the reference for text alignment in the cell\n\t \t\t// TODO: Fix word wrapping preview for edge labels in helloworld.html\n\t\t\tif (this.graph.isWrapping(state.cell) && (this.bounds.width >= 2 || this.bounds.height >= 2) &&\n\t\t\t\tthis.textarea.innerHTML != this.getEmptyLabelText())\n\t\t\t{\n\t\t\t\tthis.textarea.style.wordWrap = mxConstants.WORD_WRAP;\n\t\t\t\tthis.textarea.style.whiteSpace = 'normal';\n\t\t\t\t\n\t\t \t\t// Forces automatic reflow if text is removed from an oversize label and normal word wrap\n\t\t\t\tvar tmp = Math.round(this.bounds.width / ((document.documentMode == 8) ? scale : scale)) + this.wordWrapPadding;\n\n\t\t\t\tif (this.textarea.style.position != 'relative')\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.width = tmp + 'px';\n\t\t\t\t\t\n\t\t\t\t\tif (this.textarea.scrollWidth > tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.textarea.style.width = this.textarea.scrollWidth + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.textarea.style.maxWidth = tmp + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// KNOWN: Trailing cursor in IE9 quirks mode is not visible\n\t\t\t\tthis.textarea.style.whiteSpace = 'nowrap';\n\t\t\t\tthis.textarea.style.width = '';\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\t// Workaround for wrong measuring in IE8 standards\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\tthis.textarea.style.zoom = '1';\n\t\t\t\tthis.textarea.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tvar ow = this.textarea.scrollWidth;\n\t\t\tvar oh = this.textarea.scrollHeight;\n\t\t\t\n\t\t\t// TODO: Update CSS width and height if smaller than minResize or remove minResize\n\t\t\t//if (this.minResize != null)\n\t\t\t//{\n\t\t\t//\tow = Math.max(ow, this.minResize.width);\n\t\t\t//\toh = Math.max(oh, this.minResize.height);\n\t\t\t//}\n\t\t\t\n\t\t\t// LATER: Keep in visible area, add fine tuning for pixel precision\n\t\t\tif (document.documentMode == 8)\n\t\t\t{\n\t\t\t\t// LATER: Scaled wrapping and position is wrong in IE8\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil((this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2) / scale)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil((this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1) / scale)) + 'px';\n\t\t\t\t// Workaround for wrong event handling width and height\n\t\t\t\tthis.textarea.style.width = Math.round(ow * scale) + 'px';\n\t\t\t\tthis.textarea.style.height = Math.round(oh * scale) + 'px';\n\t\t\t}\n\t\t\telse if (mxClient.IS_QUIRKS)\n\t\t\t{\t\t\t\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.ceil(this.bounds.x - m.x * (this.bounds.width - (ow + 1) * scale) + ow * (scale - 1) * 0 + (m.x + 0.5) * 2)) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.ceil(this.bounds.y - m.y * (this.bounds.height - (oh + 0.5) * scale) + oh * (scale - 1) * 0 + Math.abs(m.y + 0.5) * 1)) + 'px';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.textarea.style.left = Math.max(0, Math.round(this.bounds.x - m.x * (this.bounds.width - 2)) + 1) + 'px';\n\t\t\t\tthis.textarea.style.top = Math.max(0, Math.round(this.bounds.y - m.y * (this.bounds.height - 4) + ((m.y == -1) ? 3 : 0)) + 1) + 'px';\n\t\t\t}\n\t \t}\n\n\t\tif (mxClient.IS_VML)\n\t\t{\n\t\t\tthis.textarea.style.zoom = scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transformOrigin', '0px 0px');\n\t\t\tmxUtils.setPrefixedStyle(this.textarea.style, 'transform',\n\t\t\t\t'scale(' + scale + ',' + scale + ')' + ((m == null) ? '' :\n\t\t\t\t' translate(' + (m.x * 100) + '%,' + (m.y * 100) + '%)'));\n\t\t}\n\t}\n};\n\n/**\n * Function: focusLost\n *\n * Called if the textarea has lost focus.\n */\nmxCellEditor.prototype.focusLost = function()\n{\n\tthis.stopEditing(!this.graph.isInvokesStopCellEditing());\n};\n\n/**\n * Function: getBackgroundColor\n * \n * Returns the background color for the in-place editor. This implementation\n * always returns null.\n */\nmxCellEditor.prototype.getBackgroundColor = function(state)\n{\n\treturn null;\n};\n\n/**\n * Function: isLegacyEditor\n * \n * Returns true if max-width is not supported or if the SVG root element in\n * in the graph does not have CSS position absolute. In these cases the text\n * editor must use CSS position absolute to avoid an offset but it will have\n * a less accurate line wrapping width during the text editing preview. This\n * implementation returns true for IE8- and quirks mode or if the CSS position\n * of the SVG element is not absolute.\n */\nmxCellEditor.prototype.isLegacyEditor = function()\n{\n\tif (mxClient.IS_VML)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\tvar absoluteRoot = false;\n\t\t\n\t\tif (mxClient.IS_SVG)\n\t\t{\n\t\t\tvar root = this.graph.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\tabsoluteRoot = mxUtils.getCurrentStyle(root).position == 'absolute';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn !absoluteRoot;\n\t}\n};\n\n/**\n * Function: startEditing\n *\n * Starts the editor for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to start editing.\n * trigger - Optional mouse event that triggered the editor.\n */\nmxCellEditor.prototype.startEditing = function(cell, trigger)\n{\n\tthis.stopEditing(true);\n\tthis.align = null;\n\t\n\t// Creates new textarea instance\n\tif (this.textarea == null)\n\t{\n\t\tthis.init();\n\t}\n\t\n\tif (this.graph.tooltipHandler != null)\n\t{\n\t\tthis.graph.tooltipHandler.hideTooltip();\n\t}\n\t\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\t// Configures the style of the in-place editor\n\t\tvar scale = this.graph.getView().scale;\n\t\tvar size = mxUtils.getValue(state.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n\t\tvar family = mxUtils.getValue(state.style, mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY);\n\t\tvar color = mxUtils.getValue(state.style, mxConstants.STYLE_FONTCOLOR, 'black');\n\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_LEFT);\n\t\tvar bold = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_BOLD) == mxConstants.FONT_BOLD;\n\t\tvar italic = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_ITALIC) == mxConstants.FONT_ITALIC;\n\t\tvar uline = (mxUtils.getValue(state.style, mxConstants.STYLE_FONTSTYLE, 0) &\n\t\t\t\tmxConstants.FONT_UNDERLINE) == mxConstants.FONT_UNDERLINE;\n\t\t\n\t\tthis.textarea.style.lineHeight = (mxConstants.ABSOLUTE_LINE_HEIGHT) ? Math.round(size * mxConstants.LINE_HEIGHT) + 'px' : mxConstants.LINE_HEIGHT;\n\t\tthis.textarea.style.backgroundColor = this.getBackgroundColor(state);\n\t\tthis.textarea.style.textDecoration = (uline) ? 'underline' : '';\n\t\tthis.textarea.style.fontWeight = (bold) ? 'bold' : 'normal';\n\t\tthis.textarea.style.fontStyle = (italic) ? 'italic' : '';\n\t\tthis.textarea.style.fontSize = Math.round(size) + 'px';\n\t\tthis.textarea.style.zIndex = this.zIndex;\n\t\tthis.textarea.style.fontFamily = family;\n\t\tthis.textarea.style.textAlign = align;\n\t\tthis.textarea.style.outline = 'none';\n\t\tthis.textarea.style.color = color;\n\t\t\n\t\tvar dir = this.textDirection = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_AUTO)\n\t\t{\n\t\t\tif (state != null && state.text != null && state.text.dialect != mxConstants.DIALECT_STRICTHTML &&\n\t\t\t\t!mxUtils.isNode(state.text.value))\n\t\t\t{\n\t\t\t\tdir = state.text.getAutoDirection();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (dir == mxConstants.TEXT_DIRECTION_LTR || dir == mxConstants.TEXT_DIRECTION_RTL)\n\t\t{\n\t\t\tthis.textarea.setAttribute('dir', dir);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.textarea.removeAttribute('dir');\n\t\t}\n\n\t\t// Sets the initial editing value\n\t\tthis.textarea.innerHTML = this.getInitialValue(state, trigger) || '';\n\t\tthis.initialValue = this.textarea.innerHTML;\n\n\t\t// Uses an optional text value for empty labels which is cleared\n\t\t// when the first keystroke appears. This makes it easier to see\n\t\t// that a label is being edited even if the label is empty.\n\t\tif (this.textarea.innerHTML.length == 0 || this.textarea.innerHTML == '<br>')\n\t\t{\n\t\t\tthis.textarea.innerHTML = this.getEmptyLabelText();\n\t\t\tthis.clearOnChange = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.clearOnChange = this.textarea.innerHTML == this.getEmptyLabelText();\n\t\t}\n\n\t\tthis.graph.container.appendChild(this.textarea);\n\t\t\n\t\t// Update this after firing all potential events that could update the cleanOnChange flag\n\t\tthis.editingCell = cell;\n\t\tthis.trigger = trigger;\n\t\tthis.textNode = null;\n\n\t\tif (state.text != null && this.isHideLabel(state))\n\t\t{\n\t\t\tthis.textNode = state.text.node;\n\t\t\tthis.textNode.style.visibility = 'hidden';\n\t\t}\n\n\t\t// Workaround for initial offsetHeight not ready for heading in markup\n\t\tif (this.autoSize && (this.graph.model.isEdge(state.cell) || state.style[mxConstants.STYLE_OVERFLOW] != 'fill'))\n\t\t{\n\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.resize();\n\t\t\t}), 0);\n\t\t}\n\t\t\n\t\tthis.resize();\n\t\t\n\t\t// Workaround for NS_ERROR_FAILURE in FF\n\t\ttry\n\t\t{\n\t\t\t// Prefers blinking cursor over no selected text if empty\n\t\t\tthis.textarea.focus();\n\t\t\t\n\t\t\tif (this.isSelectText() && this.textarea.innerHTML.length > 0 &&\n\t\t\t\t(this.textarea.innerHTML != this.getEmptyLabelText() || !this.clearOnChange))\n\t\t\t{\n\t\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t}\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.isSelectText = function()\n{\n\treturn this.selectText;\n};\n\n/**\n * Function: isSelectText\n * \n * Returns <selectText>.\n */\nmxCellEditor.prototype.clearSelection = function()\n{\n\tvar selection = null;\n\t\n\tif (window.getSelection)\n\t{\n\t\tselection = window.getSelection();\n\t}\n\telse if (document.selection)\n\t{\n\t\tselection = document.selection;\n\t}\n\t\n\tif (selection != null)\n\t{\n\t\tif (selection.empty)\n\t\t{\n\t\t\tselection.empty();\n\t\t}\n\t\telse if (selection.removeAllRanges)\n\t\t{\n\t\t\tselection.removeAllRanges();\n\t\t}\n\t}\n};\n\n/**\n * Function: stopEditing\n *\n * Stops the editor and applies the value if cancel is false.\n */\nmxCellEditor.prototype.stopEditing = function(cancel)\n{\n\tcancel = cancel || false;\n\t\n\tif (this.editingCell != null)\n\t{\n\t\tif (this.textNode != null)\n\t\t{\n\t\t\tthis.textNode.style.visibility = 'visible';\n\t\t\tthis.textNode = null;\n\t\t}\n\n\t\tvar state = (!cancel) ? this.graph.view.getState(this.editingCell) : null;\n\n\t\tvar initial = this.initialValue;\n\t\tthis.initialValue = null;\n\t\tthis.editingCell = null;\n\t\tthis.trigger = null;\n\t\tthis.bounds = null;\n\t\tthis.textarea.blur();\n\t\tthis.clearSelection();\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tif (this.clearOnChange && this.textarea.innerHTML == this.getEmptyLabelText())\n\t\t{\n\t\t\tthis.textarea.innerHTML = '';\n\t\t\tthis.clearOnChange = false;\n\t\t}\n\n\t\tif (state != null && (this.textarea.innerHTML != initial || this.align != null))\n\t\t{\n\t\t\tthis.prepareTextarea();\n\t\t\tvar value = this.getCurrentValue(state);\n\t\t\t\n\t\t\tthis.graph.getModel().beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (value != null)\n\t\t\t\t{\n\t\t\t\t\tthis.applyValue(state, value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.align != null)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ALIGN, this.align, [state.cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.graph.getModel().endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Forces new instance on next edit for undo history reset\n\t\tmxEvent.release(this.textarea);\n\t\tthis.textarea = null;\n\t\tthis.align = null;\n\t}\n};\n\n/**\n * Function: prepareTextarea\n * \n * Prepares the textarea for getting its value in <stopEditing>.\n * This implementation removes the extra trailing linefeed in Firefox.\n */\nmxCellEditor.prototype.prepareTextarea = function()\n{\n\tif (this.textarea.lastChild != null &&\n\t\tthis.textarea.lastChild.nodeName == 'BR')\n\t{\n\t\tthis.textarea.removeChild(this.textarea.lastChild);\n\t}\n};\n\n/**\n * Function: isHideLabel\n * \n * Returns true if the label should be hidden while the cell is being\n * edited.\n */\nmxCellEditor.prototype.isHideLabel = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMinimumSize\n * \n * Returns the minimum width and height for editing the given state.\n */\nmxCellEditor.prototype.getMinimumSize = function(state)\n{\n\tvar scale = this.graph.getView().scale;\n\t\n\treturn new mxRectangle(0, 0, (state.text == null) ? 30 : state.text.size * scale + 20,\n\t\t\t(this.textarea.style.textAlign == 'left') ? 120 : 40);\n};\n\n/**\n * Function: getEditorBounds\n * \n * Returns the <mxRectangle> that defines the bounds of the editor.\n */\nmxCellEditor.prototype.getEditorBounds = function(state)\n{\n\tvar isEdge = this.graph.getModel().isEdge(state.cell);\n\tvar scale = this.graph.getView().scale;\n\tvar minSize = this.getMinimumSize(state);\n\tvar minWidth = minSize.width;\n \tvar minHeight = minSize.height;\n \tvar result = null;\n \t\n \tif (!isEdge && state.view.graph.cellRenderer.legacySpacing && state.style[mxConstants.STYLE_OVERFLOW] == 'fill')\n \t{\n \t\tresult = state.shape.getLabelBounds(mxRectangle.fromRectangle(state));\n \t}\n \telse\n \t{\n\t\tvar spacing = parseInt(state.style[mxConstants.STYLE_SPACING] || 0) * scale;\n\t\tvar spacingTop = (parseInt(state.style[mxConstants.STYLE_SPACING_TOP] || 0) + mxText.prototype.baseSpacingTop) * scale + spacing;\n\t\tvar spacingRight = (parseInt(state.style[mxConstants.STYLE_SPACING_RIGHT] || 0) + mxText.prototype.baseSpacingRight) * scale + spacing;\n\t\tvar spacingBottom = (parseInt(state.style[mxConstants.STYLE_SPACING_BOTTOM] || 0) + mxText.prototype.baseSpacingBottom) * scale + spacing;\n\t\tvar spacingLeft = (parseInt(state.style[mxConstants.STYLE_SPACING_LEFT] || 0) + mxText.prototype.baseSpacingLeft) * scale + spacing;\n\t\n\t \tresult = new mxRectangle(state.x, state.y,\n\t \t\t Math.max(minWidth, state.width - spacingLeft - spacingRight),\n\t \t\t Math.max(minHeight, state.height - spacingTop - spacingBottom));\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tresult = (state.shape != null && hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE) ? state.shape.getLabelBounds(result) : result;\n\t\n\t\tif (isEdge)\n\t\t{\n\t\t\tresult.x = state.absoluteOffset.x;\n\t\t\tresult.y = state.absoluteOffset.y;\n\t\n\t\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t\t{\n\t\t\t\t// Workaround for label containing just spaces in which case\n\t\t\t\t// the bounding box location contains negative numbers \n\t\t\t\tif (state.text.boundingBox.x > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.x = state.text.boundingBox.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (state.text.boundingBox.y > 0)\n\t\t\t\t{\n\t\t\t\t\tresult.y = state.text.boundingBox.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tresult.x = Math.min(result.x, state.text.boundingBox.x);\n\t\t\tresult.y = Math.min(result.y, state.text.boundingBox.y);\n\t\t}\n\t\n\t\tresult.x += spacingLeft;\n\t\tresult.y += spacingTop;\n\t\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (!isEdge)\n\t\t\t{\n\t\t\t\tresult.width = Math.max(result.width, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(result.height, state.text.boundingBox.height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.width = Math.max(minWidth, state.text.boundingBox.width);\n\t\t\t\tresult.height = Math.max(minHeight, state.text.boundingBox.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Applies the horizontal and vertical label positions\n\t\tif (this.graph.getModel().isVertex(state.cell))\n\t\t{\n\t\t\tvar horizontal = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\n\t\t\tif (horizontal == mxConstants.ALIGN_LEFT)\n\t\t\t{\n\t\t\t\tresult.x -= state.width;\n\t\t\t}\n\t\t\telse if (horizontal == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tresult.x += state.width;\n\t\t\t}\n\t\n\t\t\tvar vertical = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\t\t\tif (vertical == mxConstants.ALIGN_TOP)\n\t\t\t{\n\t\t\t\tresult.y -= state.height;\n\t\t\t}\n\t\t\telse if (vertical == mxConstants.ALIGN_BOTTOM)\n\t\t\t{\n\t\t\t\tresult.y += state.height;\n\t\t\t}\n\t\t}\n \t}\n \t\n \treturn new mxRectangle(Math.round(result.x), Math.round(result.y), Math.round(result.width), Math.round(result.height));\n};\n\n/**\n * Function: getEmptyLabelText\n *\n * Returns the initial label value to be used of the label of the given\n * cell is empty. This label is displayed and cleared on the first keystroke.\n * This implementation returns <emptyLabelText>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a text for an empty editing box should be\n * returned.\n */\nmxCellEditor.prototype.getEmptyLabelText = function (cell)\n{\n\treturn this.emptyLabelText;\n};\n\n/**\n * Function: getEditingCell\n *\n * Returns the cell that is currently being edited or null if no cell is\n * being edited.\n */\nmxCellEditor.prototype.getEditingCell = function ()\n{\n\treturn this.editingCell;\n};\n\n/**\n * Function: destroy\n *\n * Destroys the editor and removes all associated resources.\n */\nmxCellEditor.prototype.destroy = function ()\n{\n\tif (this.textarea != null)\n\t{\n\t\tmxEvent.release(this.textarea);\n\t\t\n\t\tif (this.textarea.parentNode != null)\n\t\t{\n\t\t\tthis.textarea.parentNode.removeChild(this.textarea);\n\t\t}\n\t\t\n\t\tthis.textarea = null;\n\n\t}\n\t\t\t\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\n\tif (this.zoomHandler)\n\t{\n\t\tthis.graph.view.removeListener(this.zoomHandler);\n\t\tthis.zoomHandler = null;\n\t}\n};\n\n__mxOutput.mxCellEditor = typeof mxCellEditor !== 'undefined' ? mxCellEditor : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxCellRenderer\n * \n * Renders cells into a document object model. The <defaultShapes> is a global\n * map of shapename, constructor pairs that is used in all instances. You can\n * get a list of all available shape names using the following code.\n * \n * In general the cell renderer is in charge of creating, redrawing and\n * destroying the shape and label associated with a cell state, as well as\n * some other graphical objects, namely controls and overlays. The shape\n * hieararchy in the display (ie. the hierarchy in which the DOM nodes\n * appear in the document) does not reflect the cell hierarchy. The shapes\n * are a (flat) sequence of shapes and labels inside the draw pane of the\n * graph view, with some exceptions, namely the HTML labels being placed\n * directly inside the graph container for certain browsers.\n * \n * (code)\n * mxLog.show();\n * for (var i in mxCellRenderer.defaultShapes)\n * {\n *   mxLog.debug(i);\n * }\n * (end)\n *\n * Constructor: mxCellRenderer\n * \n * Constructs a new cell renderer with the following built-in shapes:\n * arrow, rectangle, ellipse, rhombus, image, line, label, cylinder,\n * swimlane, connector, actor and cloud.\n */\nfunction mxCellRenderer() { };\n\n/**\n * Variable: defaultShapes\n * \n * Static array that contains the globally registered shapes which are\n * known to all instances of this class. For adding new shapes you should\n * use the static <mxCellRenderer.registerShape> function.\n */\nmxCellRenderer.defaultShapes = new Object();\n\n/**\n * Variable: defaultEdgeShape\n * \n * Defines the default shape for edges. Default is <mxConnector>.\n */\nmxCellRenderer.prototype.defaultEdgeShape = mxConnector;\n\n/**\n * Variable: defaultVertexShape\n * \n * Defines the default shape for vertices. Default is <mxRectangleShape>.\n */\nmxCellRenderer.prototype.defaultVertexShape = mxRectangleShape;\n\n/**\n * Variable: defaultTextShape\n * \n * Defines the default shape for labels. Default is <mxText>.\n */\nmxCellRenderer.prototype.defaultTextShape = mxText;\n\n/**\n * Variable: legacyControlPosition\n * \n * Specifies if the folding icon should ignore the horizontal\n * orientation of a swimlane. Default is true.\n */\nmxCellRenderer.prototype.legacyControlPosition = true;\n\n/**\n * Variable: legacySpacing\n * \n * Specifies if spacing and label position should be ignored if overflow is\n * fill or width. Default is true for backwards compatiblity.\n */\nmxCellRenderer.prototype.legacySpacing = true;\n\n/**\n * Variable: antiAlias\n * \n * Anti-aliasing option for new shapes. Default is true.\n */\nmxCellRenderer.prototype.antiAlias = true;\n\n/**\n * Variable: minSvgStrokeWidth\n * \n * Minimum stroke width for SVG output.\n */\nmxCellRenderer.prototype.minSvgStrokeWidth = 1;\n\n/**\n * Variable: forceControlClickHandler\n * \n * Specifies if the enabled state of the graph should be ignored in the control\n * click handler (to allow folding in disabled graphs). Default is false.\n */\nmxCellRenderer.prototype.forceControlClickHandler = false;\n\n/**\n * Function: registerShape\n * \n * Registers the given constructor under the specified key in this instance\n * of the renderer.\n * \n * Example:\n * \n * (code)\n * mxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\n * (end)\n * \n * Parameters:\n * \n * key - String representing the shape name.\n * shape - Constructor of the <mxShape> subclass.\n */\nmxCellRenderer.registerShape = function(key, shape)\n{\n\tmxCellRenderer.defaultShapes[key] = shape;\n};\n\n// Adds default shapes into the default shapes array\nmxCellRenderer.registerShape(mxConstants.SHAPE_RECTANGLE, mxRectangleShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ELLIPSE, mxEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_RHOMBUS, mxRhombus);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CYLINDER, mxCylinder);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CONNECTOR, mxConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ACTOR, mxActor);\nmxCellRenderer.registerShape(mxConstants.SHAPE_TRIANGLE, mxTriangle);\nmxCellRenderer.registerShape(mxConstants.SHAPE_HEXAGON, mxHexagon);\nmxCellRenderer.registerShape(mxConstants.SHAPE_CLOUD, mxCloud);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LINE, mxLine);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW, mxArrow);\nmxCellRenderer.registerShape(mxConstants.SHAPE_ARROW_CONNECTOR, mxArrowConnector);\nmxCellRenderer.registerShape(mxConstants.SHAPE_DOUBLE_ELLIPSE, mxDoubleEllipse);\nmxCellRenderer.registerShape(mxConstants.SHAPE_SWIMLANE, mxSwimlane);\nmxCellRenderer.registerShape(mxConstants.SHAPE_IMAGE, mxImageShape);\nmxCellRenderer.registerShape(mxConstants.SHAPE_LABEL, mxLabel);\n\n/**\n * Function: initializeShape\n * \n * Initializes the shape in the given state by calling its init method with\n * the correct container after configuring it using <configureShape>.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be initialized.\n */\nmxCellRenderer.prototype.initializeShape = function(state)\n{\n\tstate.shape.dialect = state.view.graph.dialect;\n\tthis.configureShape(state);\n\tstate.shape.init(state.view.getDrawPane());\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be created.\n */\nmxCellRenderer.prototype.createShape = function(state)\n{\n\tvar shape = null;\n\t\n\tif (state.style != null)\n\t{\n\t\t// Checks if there is a stencil for the name and creates\n\t\t// a shape instance for the stencil if one exists\n\t\tvar stencil = mxStencilRegistry.getStencil(state.style[mxConstants.STYLE_SHAPE]);\n\t\t\n\t\tif (stencil != null)\n\t\t{\n\t\t\tshape = new mxShape(stencil);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar ctor = this.getShapeConstructor(state);\n\t\t\tshape = new ctor();\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: createIndicatorShape\n * \n * Creates the indicator shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the indicator shape should be created.\n */\nmxCellRenderer.prototype.createIndicatorShape = function(state)\n{\n\tstate.shape.indicatorShape = this.getShape(state.view.graph.getIndicatorShape(state));\n};\n\n/**\n * Function: getShape\n * \n * Returns the shape for the given name from <defaultShapes>.\n */\nmxCellRenderer.prototype.getShape = function(name)\n{\n\treturn (name != null) ? mxCellRenderer.defaultShapes[name] : null;\n};\n\n/**\n * Function: getShapeConstructor\n * \n * Returns the constructor to be used for creating the shape.\n */\nmxCellRenderer.prototype.getShapeConstructor = function(state)\n{\n\tvar ctor = this.getShape(state.style[mxConstants.STYLE_SHAPE]);\n\t\n\tif (ctor == null)\n\t{\n\t\tctor = (state.view.graph.getModel().isEdge(state.cell)) ?\n\t\t\tthis.defaultEdgeShape : this.defaultVertexShape;\n\t}\n\t\n\treturn ctor;\n};\n\n/**\n * Function: configureShape\n * \n * Configures the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shape should be configured.\n */\nmxCellRenderer.prototype.configureShape = function(state)\n{\n\tstate.shape.apply(state);\n\tstate.shape.image = state.view.graph.getImage(state);\n\tstate.shape.indicatorColor = state.view.graph.getIndicatorColor(state);\n\tstate.shape.indicatorStrokeColor = state.style[mxConstants.STYLE_INDICATOR_STROKECOLOR];\n\tstate.shape.indicatorGradientColor = state.view.graph.getIndicatorGradientColor(state);\n\tstate.shape.indicatorDirection = state.style[mxConstants.STYLE_INDICATOR_DIRECTION];\n\tstate.shape.indicatorImage = state.view.graph.getIndicatorImage(state);\n\n\tthis.postConfigureShape(state);\n};\n\n/**\n * Function: postConfigureShape\n * \n * Replaces any reserved words used for attributes, eg. inherit,\n * indicated or swimlane for colors in the shape for the given state.\n * This implementation resolves these keywords on the fill, stroke\n * and gradient color keys.\n */\nmxCellRenderer.prototype.postConfigureShape = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tthis.resolveColor(state, 'indicatorColor', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'indicatorGradientColor', mxConstants.STYLE_GRADIENTCOLOR);\n\t\tthis.resolveColor(state, 'fill', mxConstants.STYLE_FILLCOLOR);\n\t\tthis.resolveColor(state, 'stroke', mxConstants.STYLE_STROKECOLOR);\n\t\tthis.resolveColor(state, 'gradient', mxConstants.STYLE_GRADIENTCOLOR);\n\t}\n};\n\n/**\n * Function: checkPlaceholderStyles\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.checkPlaceholderStyles = function(state)\n{\n\t// LATER: Check if the color has actually changed\n\tif (state.style != null)\n\t{\n\t\tvar values = ['inherit', 'swimlane', 'indicated'];\n\t\tvar styles = [mxConstants.STYLE_FILLCOLOR, mxConstants.STYLE_STROKECOLOR, mxConstants.STYLE_GRADIENTCOLOR];\n\t\t\n\t\tfor (var i = 0; i < styles.length; i++)\n\t\t{\n\t\t\tif (mxUtils.indexOf(values, state.style[styles[i]]) >= 0)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: resolveColor\n * \n * Resolves special keywords 'inherit', 'indicated' and 'swimlane' and sets\n * the respective color on the shape.\n */\nmxCellRenderer.prototype.resolveColor = function(state, field, key)\n{\n\tvar value = state.shape[field];\n\tvar graph = state.view.graph;\n\tvar referenced = null;\n\t\n\tif (value == 'inherit')\n\t{\n\t\treferenced = graph.model.getParent(state.cell);\n\t}\n\telse if (value == 'swimlane')\n\t{\n\t\tstate.shape[field] = (key == mxConstants.STYLE_STROKECOLOR) ? '#000000' : '#ffffff';\n\t\t\n\t\tif (graph.model.getTerminal(state.cell, false) != null)\n\t\t{\n\t\t\treferenced = graph.model.getTerminal(state.cell, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treferenced = state.cell;\n\t\t}\n\t\t\n\t\treferenced = graph.getSwimlane(referenced);\n\t\tkey = graph.swimlaneIndicatorColorAttribute;\n\t}\n\telse if (value == 'indicated')\n\t{\n\t\tstate.shape[field] = state.shape.indicatorColor;\n\t}\n\t\n\tif (referenced != null)\n\t{\n\t\tvar rstate = graph.getView().getState(referenced);\n\t\tstate.shape[field] = null;\n\n\t\tif (rstate != null)\n\t\t{\n\t\t\tif (rstate.shape != null && field != 'indicatorColor')\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.shape[field];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape[field] = rstate.style[key];\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getLabelValue\n * \n * Returns the value to be used for the label.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.getLabelValue = function(state)\n{\n\treturn state.view.graph.getLabel(state.cell);\n};\n\n/**\n * Function: createLabel\n * \n * Creates the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the label should be created.\n */\nmxCellRenderer.prototype.createLabel = function(state, value)\n{\n\tvar graph = state.view.graph;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\t\n\tif (state.style[mxConstants.STYLE_FONTSIZE] > 0 || state.style[mxConstants.STYLE_FONTSIZE] == null)\n\t{\n\t\t// Avoids using DOM node for empty labels\n\t\tvar isForceHtml = (graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\n\t\tstate.text = new this.defaultTextShape(value, new mxRectangle(),\n\t\t\t\t(state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER),\n\t\t\t\tgraph.getVerticalAlign(state),\n\t\t\t\tstate.style[mxConstants.STYLE_FONTCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTFAMILY],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSIZE],\n\t\t\t\tstate.style[mxConstants.STYLE_FONTSTYLE],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_TOP],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_RIGHT],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_BOTTOM],\n\t\t\t\tstate.style[mxConstants.STYLE_SPACING_LEFT],\n\t\t\t\tstate.style[mxConstants.STYLE_HORIZONTAL],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BACKGROUNDCOLOR],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_BORDERCOLOR],\n\t\t\t\tgraph.isWrapping(state.cell) && graph.isHtmlLabel(state.cell),\n\t\t\t\tgraph.isLabelClipped(state.cell),\n\t\t\t\tstate.style[mxConstants.STYLE_OVERFLOW],\n\t\t\t\tstate.style[mxConstants.STYLE_LABEL_PADDING],\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION));\n\t\tstate.text.opacity = mxUtils.getValue(state.style, mxConstants.STYLE_TEXT_OPACITY, 100);\n\t\tstate.text.dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\t\tstate.text.style = state.style;\n\t\tstate.text.state = state;\n\t\tthis.initializeLabel(state, state.text);\n\t\t\n\t\t// Workaround for touch devices routing all events for a mouse gesture\n\t\t// (down, move, up) via the initial DOM node. IE additionally redirects\n\t\t// the event via the initial DOM node but the event source is the node\n\t\t// under the mouse, so we need to check if this is the case and force\n\t\t// getCellAt for the subsequent mouseMoves and the final mouseUp.\n\t\tvar forceGetCell = false;\n\t\t\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar result = state;\n\n\t\t\tif (mxClient.IS_TOUCH || forceGetCell)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t// TODO: Add handling for special touch device gestures\n\t\tmxEvent.addGestureListeners(state.text.node,\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\t\tforceGetCell = graph.dialect != mxConstants.DIALECT_SVG &&\n\t\t\t\t\t\tmxEvent.getSource(evt).nodeName == 'IMG';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t\t\tforceGetCell = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Uses double click timeout in mxGraph for quirks mode\n\t\tif (graph.nativeDblClickEnabled)\n\t\t{\n\t\t\tmxEvent.addListener(state.text.node, 'dblclick',\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isLabelEvent(state, evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Function: initializeLabel\n * \n * Initiailzes the label with a suitable container.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be initialized.\n */\nmxCellRenderer.prototype.initializeLabel = function(state, shape)\n{\n\tif (mxClient.IS_SVG && mxClient.NO_FO && shape.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.init(state.view.graph.container);\n\t}\n\telse\n\t{\n\t\tshape.init(state.view.getDrawPane());\n\t}\n};\n\n/**\n * Function: createCellOverlays\n * \n * Creates the actual shape for showing the overlay for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n */\nmxCellRenderer.prototype.createCellOverlays = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar overlays = graph.getCellOverlays(state.cell);\n\tvar dict = null;\n\t\n\tif (overlays != null)\n\t{\n\t\tdict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tvar shape = (state.overlays != null) ? state.overlays.remove(overlays[i]) : null;\n\t\t\t\n\t\t\tif (shape == null)\n\t\t\t{\n\t\t\t\tvar tmp = new mxImageShape(new mxRectangle(), overlays[i].image.src);\n\t\t\t\ttmp.dialect = state.view.graph.dialect;\n\t\t\t\ttmp.preserveImageAspect = false;\n\t\t\t\ttmp.overlay = overlays[i];\n\t\t\t\tthis.initializeOverlay(state, tmp);\n\t\t\t\tthis.installCellOverlayListeners(state, overlays[i], tmp);\n\t\n\t\t\t\tif (overlays[i].cursor != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.node.style.cursor = overlays[i].cursor;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tdict.put(overlays[i], tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdict.put(overlays[i], shape);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Removes unused\n\tif (state.overlays != null)\n\t{\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tshape.destroy();\n\t\t});\n\t}\n\t\n\tstate.overlays = dict;\n};\n\n/**\n * Function: initializeOverlay\n * \n * Initializes the given overlay.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the overlay should be created.\n * overlay - <mxImageShape> that represents the overlay.\n */\nmxCellRenderer.prototype.initializeOverlay = function(state, overlay)\n{\n\toverlay.init(state.view.getOverlayPane());\n};\n\n/**\n * Function: installOverlayListeners\n * \n * Installs the listeners for the given <mxCellState>, <mxCellOverlay> and\n * <mxShape> that represents the overlay.\n */\nmxCellRenderer.prototype.installCellOverlayListeners = function(state, overlay, shape)\n{\n\tvar graph  = state.view.graph;\n\t\n\tmxEvent.addListener(shape.node, 'click', function (evt)\n\t{\n\t\tif (graph.isEditing())\n\t\t{\n\t\t\tgraph.stopEditing(!graph.isInvokesStopCellEditing());\n\t\t}\n\t\t\n\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t'event', evt, 'cell', state.cell));\n\t});\n\t\n\tmxEvent.addGestureListeners(shape.node,\n\t\tfunction (evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t},\n\t\tfunction (evt)\n\t\t{\n\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE,\n\t\t\t\tnew mxMouseEvent(evt, state));\n\t\t});\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tmxEvent.addListener(shape.node, 'touchend', function (evt)\n\t\t{\n\t\t\toverlay.fireEvent(new mxEventObject(mxEvent.CLICK,\n\t\t\t\t\t'event', evt, 'cell', state.cell));\n\t\t});\n\t}\n};\n\n/**\n * Function: createControl\n * \n * Creates the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be created.\n */\nmxCellRenderer.prototype.createControl = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar image = graph.getFoldingImage(state);\n\t\n\tif (graph.foldingEnabled && image != null)\n\t{\n\t\tif (state.control == null)\n\t\t{\n\t\t\tvar b = new mxRectangle(0, 0, image.width, image.height);\n\t\t\tstate.control = new mxImageShape(b, image.src);\n\t\t\tstate.control.preserveImageAspect = false;\n\t\t\tstate.control.dialect = graph.dialect;\n\n\t\t\tthis.initControl(state, state.control, true, this.createControlClickHandler(state));\n\t\t}\n\t}\n\telse if (state.control != null)\n\t{\n\t\tstate.control.destroy();\n\t\tstate.control = null;\n\t}\n};\n\n/**\n * Function: createControlClickHandler\n * \n * Hook for creating the click handler for the folding icon.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control click handler should be returned.\n */\nmxCellRenderer.prototype.createControlClickHandler = function(state)\n{\n\tvar graph = state.view.graph;\n\t\n\treturn mxUtils.bind(this, function (evt)\n\t{\n\t\tif (this.forceControlClickHandler || graph.isEnabled())\n\t\t{\n\t\t\tvar collapse = !graph.isCellCollapsed(state.cell);\n\t\t\tgraph.foldCells(collapse, false, [state.cell], null, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t});\n};\n\n/**\n * Function: initControl\n * \n * Initializes the given control and returns the corresponding DOM node.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the control should be initialized.\n * control - <mxShape> to be initialized.\n * handleEvents - Boolean indicating if mousedown and mousemove should fire events via the graph.\n * clickHandler - Optional function to implement clicks on the control.\n */\nmxCellRenderer.prototype.initControl = function(state, control, handleEvents, clickHandler)\n{\n\tvar graph = state.view.graph;\n\t\n\t// In the special case where the label is in HTML and the display is SVG the image\n\t// should go into the graph container directly in order to be clickable. Otherwise\n\t// it is obscured by the HTML label that overlaps the cell.\n\tvar isForceHtml = graph.isHtmlLabel(state.cell) && mxClient.NO_FO &&\n\t\tgraph.dialect == mxConstants.DIALECT_SVG;\n\n\tif (isForceHtml)\n\t{\n\t\tcontrol.dialect = mxConstants.DIALECT_PREFERHTML;\n\t\tcontrol.init(graph.container);\n\t\tcontrol.node.style.zIndex = 1;\n\t}\n\telse\n\t{\n\t\tcontrol.init(state.view.getOverlayPane());\n\t}\n\n\tvar node = control.innerNode || control.node;\n\t\n\t// Workaround for missing click event on iOS is to check tolerance below\n\tif (clickHandler != null && !mxClient.IS_IOS)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tnode.style.cursor = 'pointer';\n\t\t}\n\t\t\n\t\tmxEvent.addListener(node, 'click', clickHandler);\n\t}\n\t\n\tif (handleEvents)\n\t{\n\t\tvar first = null;\n\n\t\tmxEvent.addGestureListeners(node,\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tfirst = new mxPoint(mxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, state));\n\t\t\t},\n\t\t\tfunction (evt)\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, state));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\t\t\n\t\t// Uses capture phase for event interception to stop bubble phase\n\t\tif (clickHandler != null && mxClient.IS_IOS)\n\t\t{\n\t\t\tnode.addEventListener('touchend', function(evt)\n\t\t\t{\n\t\t\t\tif (first != null)\n\t\t\t\t{\n\t\t\t\t\tvar tol = graph.tolerance;\n\t\t\t\t\t\n\t\t\t\t\tif (Math.abs(first.x - mxEvent.getClientX(evt)) < tol &&\n\t\t\t\t\t\tMath.abs(first.y - mxEvent.getClientY(evt)) < tol)\n\t\t\t\t\t{\n\t\t\t\t\t\tclickHandler.call(clickHandler, evt);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, true);\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: isShapeEvent\n * \n * Returns true if the event is for the shape of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shape fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isShapeEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: isLabelEvent\n * \n * Returns true if the event is for the label of the given state. This\n * implementation always returns true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label fired the event.\n * evt - Mouse event which was fired.\n */\nmxCellRenderer.prototype.isLabelEvent = function(state, evt)\n{\n\treturn true;\n};\n\n/**\n * Function: installListeners\n * \n * Installs the event listeners for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the event listeners should be isntalled.\n */\nmxCellRenderer.prototype.installListeners = function(state)\n{\n\tvar graph = state.view.graph;\n\n\t// Workaround for touch devices routing all events for a mouse\n\t// gesture (down, move, up) via the initial DOM node. Same for\n\t// HTML images in all IE versions (VML images are working).\n\tvar getState = function(evt)\n\t{\n\t\tvar result = state;\n\t\t\n\t\tif ((graph.dialect != mxConstants.DIALECT_SVG && mxEvent.getSource(evt).nodeName == 'IMG') || mxClient.IS_TOUCH)\n\t\t{\n\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\n\t\t\t// Dispatches the drop event to the graph which\n\t\t\t// consumes and executes the source function\n\t\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\tresult = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\tmxEvent.addGestureListeners(state.shape.node,\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt, state));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t})\n\t);\n\t\n\t// Uses double click timeout in mxGraph for quirks mode\n\tif (graph.nativeDblClickEnabled)\n\t{\n\t\tmxEvent.addListener(state.shape.node, 'dblclick',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tif (this.isShapeEvent(state, evt))\n\t\t\t\t{\n\t\t\t\t\tgraph.dblClick(evt, state.cell);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n};\n\n/**\n * Function: redrawLabel\n * \n * Redraws the label for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawLabel = function(state, forced)\n{\n\tvar graph = state.view.graph;\n\tvar value = this.getLabelValue(state);\n\tvar wrapping = graph.isWrapping(state.cell);\n\tvar clipping = graph.isLabelClipped(state.cell);\n\tvar isForceHtml = (state.view.graph.isHtmlLabel(state.cell) || (value != null && mxUtils.isNode(value)));\n\tvar dialect = (isForceHtml) ? mxConstants.DIALECT_STRICTHTML : state.view.graph.dialect;\n\tvar overflow = state.style[mxConstants.STYLE_OVERFLOW] || 'visible';\n\n\tif (state.text != null && (state.text.wrap != wrapping || state.text.clipped != clipping ||\n\t\tstate.text.overflow != overflow || state.text.dialect != dialect))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\t\n\tif (state.text == null && value != null && (mxUtils.isNode(value) || value.length > 0))\n\t{\n\t\tthis.createLabel(state, value);\n\t}\n\telse if (state.text != null && (value == null || value.length == 0))\n\t{\n\t\tstate.text.destroy();\n\t\tstate.text = null;\n\t}\n\n\tif (state.text != null)\n\t{\n\t\t// Forced is true if the style has changed, so to get the updated\n\t\t// result in getLabelBounds we apply the new style to the shape\n\t\tif (forced)\n\t\t{\n\t\t\t// Checks if a full repaint is needed\n\t\t\tif (state.text.lastValue != null && this.isTextShapeInvalid(state, state.text))\n\t\t\t{\n\t\t\t\t// Forces a full repaint\n\t\t\t\tstate.text.lastValue = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.resetStyles();\n\t\t\tstate.text.apply(state);\n\t\t\t\n\t\t\t// Special case where value is obtained via hook in graph\n\t\t\tstate.text.valign = graph.getVerticalAlign(state);\n\t\t}\n\t\t\n\t\tvar bounds = this.getLabelBounds(state);\n\t\tvar nextScale = this.getTextScale(state);\n\t\t\n\t\tif (forced || state.text.value != value || state.text.isWrapping != wrapping ||\n\t\t\tstate.text.overflow != overflow || state.text.isClipping != clipping ||\n\t\t\tstate.text.scale != nextScale || state.text.dialect != dialect ||\n\t\t\t!state.text.bounds.equals(bounds))\n\t\t{\n\t\t\t// Forces an update of the text bounding box\n\t\t\tif (state.text.bounds.width != 0 && state.unscaledWidth != null &&\n\t\t\t\tMath.round((state.text.bounds.width /\n\t\t\t\tstate.text.scale * nextScale) - bounds.width) != 0)\n\t\t\t{\n\t\t\t\tstate.unscaledWidth = null;\n\t\t\t}\n\t\t\t\n\t\t\tstate.text.dialect = dialect;\n\t\t\tstate.text.value = value;\n\t\t\tstate.text.bounds = bounds;\n\t\t\tstate.text.scale = nextScale;\n\t\t\tstate.text.wrap = wrapping;\n\t\t\tstate.text.clipped = clipping;\n\t\t\tstate.text.overflow = overflow;\n\t\t\t\n\t\t\t// Preserves visible state\n\t\t\tvar vis = state.text.node.style.visibility;\n\t\t\tthis.redrawLabelShape(state.text);\n\t\t\tstate.text.node.style.visibility = vis;\n\t\t}\n\t}\n};\n\n/**\n * Function: isTextShapeInvalid\n * \n * Returns true if the style for the text shape has changed.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be checked.\n * shape - <mxText> shape to be checked.\n */\nmxCellRenderer.prototype.isTextShapeInvalid = function(state, shape)\n{\n\tfunction check(property, stylename, defaultValue)\n\t{\n\t\tvar result = false;\n\t\t\n\t\t// Workaround for spacing added to directional spacing\n\t\tif (stylename == 'spacingTop' || stylename == 'spacingRight' ||\n\t\t\tstylename == 'spacingBottom' || stylename == 'spacingLeft')\n\t\t{\n\t\t\tresult = parseFloat(shape[property]) - parseFloat(shape.spacing) !=\n\t\t\t\t(state.style[stylename] || defaultValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = shape[property] != (state.style[stylename] || defaultValue);\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\treturn check('fontStyle', mxConstants.STYLE_FONTSTYLE, mxConstants.DEFAULT_FONTSTYLE) ||\n\t\tcheck('family', mxConstants.STYLE_FONTFAMILY, mxConstants.DEFAULT_FONTFAMILY) ||\n\t\tcheck('size', mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE) ||\n\t\tcheck('color', mxConstants.STYLE_FONTCOLOR, 'black') ||\n\t\tcheck('align', mxConstants.STYLE_ALIGN, '') ||\n\t\tcheck('valign', mxConstants.STYLE_VERTICAL_ALIGN, '') ||\n\t\tcheck('spacing', mxConstants.STYLE_SPACING, 2) ||\n\t\tcheck('spacingTop', mxConstants.STYLE_SPACING_TOP, 0) ||\n\t\tcheck('spacingRight', mxConstants.STYLE_SPACING_RIGHT, 0) ||\n\t\tcheck('spacingBottom', mxConstants.STYLE_SPACING_BOTTOM, 0) ||\n\t\tcheck('spacingLeft', mxConstants.STYLE_SPACING_LEFT, 0) ||\n\t\tcheck('horizontal', mxConstants.STYLE_HORIZONTAL, true) ||\n\t\tcheck('background', mxConstants.STYLE_LABEL_BACKGROUNDCOLOR) ||\n\t\tcheck('border', mxConstants.STYLE_LABEL_BORDERCOLOR) ||\n\t\tcheck('opacity', mxConstants.STYLE_TEXT_OPACITY, 100) ||\n\t\tcheck('textDirection', mxConstants.STYLE_TEXT_DIRECTION, mxConstants.DEFAULT_TEXT_DIRECTION);\n};\n\n/**\n * Function: redrawLabelShape\n * \n * Called to invoked redraw on the given text shape.\n * \n * Parameters:\n * \n * shape - <mxText> shape to be redrawn.\n */\nmxCellRenderer.prototype.redrawLabelShape = function(shape)\n{\n\tshape.redraw();\n};\n\n/**\n * Function: getTextScale\n * \n * Returns the scaling used for the label of the given state\n * \n * Parameters:\n * \n * state - <mxCellState> whose label scale should be returned.\n */\nmxCellRenderer.prototype.getTextScale = function(state)\n{\n\treturn state.view.scale;\n};\n\n/**\n * Function: getLabelBounds\n * \n * Returns the bounds to be used to draw the label of the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be returned.\n */\nmxCellRenderer.prototype.getLabelBounds = function(state)\n{\n\tvar graph = state.view.graph;\n\tvar scale = state.view.scale;\n\tvar isEdge = graph.getModel().isEdge(state.cell);\n\tvar bounds = new mxRectangle(state.absoluteOffset.x, state.absoluteOffset.y);\n\n\tif (isEdge)\n\t{\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * scale;\n\t\tbounds.y += spacing.y * scale;\n\t\t\n\t\tvar geo = graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tbounds.width = Math.max(0, geo.width * scale);\n\t\t\tbounds.height = Math.max(0, geo.height * scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\t// Inverts label position\n\t\tif (state.text.isPaintBoundsInverted())\n\t\t{\n\t\t\tvar tmp = bounds.x;\n\t\t\tbounds.x = bounds.y;\n\t\t\tbounds.y = tmp;\n\t\t}\n\t\t\n\t\tbounds.x += state.x;\n\t\tbounds.y += state.y;\n\t\t\n\t\t// Minimum of 1 fixes alignment bug in HTML labels\n\t\tbounds.width = Math.max(1, state.width);\n\t\tbounds.height = Math.max(1, state.height);\n\n\t\tvar sc = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\t\n\t\tif (sc != mxConstants.NONE && sc != '')\n\t\t{\n\t\t\tvar s = parseFloat(mxUtils.getValue(state.style, mxConstants.STYLE_STROKEWIDTH, 1)) * scale;\n\t\t\tvar dx = 1 + Math.floor((s - 1) / 2);\n\t\t\tvar dh = Math.floor(s + 1);\n\t\t\t\n\t\t\tbounds.x += dx;\n\t\t\tbounds.y += dx;\n\t\t\tbounds.width -= dh;\n\t\t\tbounds.height -= dh;\n\t\t}\n\t}\n\n\tif (state.text.isPaintBoundsInverted())\n\t{\n\t\t// Rotates around center of state\n\t\tvar t = (state.width - state.height) / 2;\n\t\tbounds.x += t;\n\t\tbounds.y -= t;\n\t\tvar tmp = bounds.width;\n\t\tbounds.width = bounds.height;\n\t\tbounds.height = tmp;\n\t}\n\t\n\t// Shape can modify its label bounds\n\tif (state.shape != null)\n\t{\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\t\n\t\tif (hpos == mxConstants.ALIGN_CENTER && vpos == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tbounds = state.shape.getLabelBounds(bounds);\n\t\t}\n\t}\n\t\n\t// Label width style overrides actual label width\n\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\n\tif (lw != null)\n\t{\n\t\tbounds.width = parseFloat(lw) * scale;\n\t}\n\t\n\tif (!isEdge)\n\t{\n\t\tthis.rotateLabelBounds(state, bounds);\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: rotateLabelBounds\n * \n * Adds the shape rotation to the given label bounds and\n * applies the alignment and offsets.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label bounds should be rotated.\n * bounds - <mxRectangle> the rectangle to be rotated.\n */\nmxCellRenderer.prototype.rotateLabelBounds = function(state, bounds)\n{\n\tbounds.y -= state.text.margin.y * bounds.height;\n\tbounds.x -= state.text.margin.x * bounds.width;\n\t\n\tif (!this.legacySpacing || (state.style[mxConstants.STYLE_OVERFLOW] != 'fill' && state.style[mxConstants.STYLE_OVERFLOW] != 'width'))\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar spacing = state.text.getSpacing();\n\t\tbounds.x += spacing.x * s;\n\t\tbounds.y += spacing.y * s;\n\t\t\n\t\tvar hpos = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\t\tvar vpos = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tbounds.width = Math.max(0, bounds.width - ((hpos == mxConstants.ALIGN_CENTER && lw == null) ? (state.text.spacingLeft * s + state.text.spacingRight * s) : 0));\n\t\tbounds.height = Math.max(0, bounds.height - ((vpos == mxConstants.ALIGN_MIDDLE) ? (state.text.spacingTop * s + state.text.spacingBottom * s) : 0));\n\t}\n\n\tvar theta = state.text.getTextRotation();\n\n\t// Only needed if rotated around another center\n\tif (theta != 0 && state != null && state.view.graph.model.isVertex(state.cell))\n\t{\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\t\n\t\tif (bounds.x != cx || bounds.y != cy)\n\t\t{\n\t\t\tvar rad = theta * (Math.PI / 180);\n\t\t\tpt = mxUtils.getRotatedPoint(new mxPoint(bounds.x, bounds.y),\n\t\t\t\t\tMath.cos(rad), Math.sin(rad), new mxPoint(cx, cy));\n\t\t\t\n\t\t\tbounds.x = pt.x;\n\t\t\tbounds.y = pt.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawCellOverlays\n * \n * Redraws the overlays for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose overlays should be redrawn.\n */\nmxCellRenderer.prototype.redrawCellOverlays = function(state, forced)\n{\n\tthis.createCellOverlays(state);\n\n\tif (state.overlays != null)\n\t{\n\t\tvar rot = mxUtils.mod(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0), 90);\n        var rad = mxUtils.toRadians(rot);\n        var cos = Math.cos(rad);\n        var sin = Math.sin(rad);\n\t\t\n\t\tstate.overlays.visit(function(id, shape)\n\t\t{\n\t\t\tvar bounds = shape.overlay.getBounds(state);\n\t\t\n\t\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t\t{\n\t\t\t\tif (state.shape != null && rot != 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = bounds.getCenterX();\n\t\t\t\t\tvar cy = bounds.getCenterY();\n\n\t\t\t\t\tvar point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t        bounds.x = Math.round(cx - bounds.width / 2);\n\t\t\t        bounds.y = Math.round(cy - bounds.height / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (forced || shape.bounds == null || shape.scale != state.view.scale ||\n\t\t\t\t!shape.bounds.equals(bounds))\n\t\t\t{\n\t\t\t\tshape.bounds = bounds;\n\t\t\t\tshape.scale = state.view.scale;\n\t\t\t\tshape.redraw();\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Function: redrawControl\n * \n * Redraws the control for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose control should be redrawn.\n */\nmxCellRenderer.prototype.redrawControl = function(state, forced)\n{\n\tvar image = state.view.graph.getFoldingImage(state);\n\t\n\tif (state.control != null && image != null)\n\t{\n\t\tvar bounds = this.getControlBounds(state, image.width, image.height);\n\t\tvar r = (this.legacyControlPosition) ?\n\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0) :\n\t\t\t\tstate.shape.getTextRotation();\n\t\tvar s = state.view.scale;\n\t\t\n\t\tif (forced || state.control.scale != s || !state.control.bounds.equals(bounds) ||\n\t\t\tstate.control.rotation != r)\n\t\t{\n\t\t\tstate.control.rotation = r;\n\t\t\tstate.control.bounds = bounds;\n\t\t\tstate.control.scale = s;\n\t\t\t\n\t\t\tstate.control.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getControlBounds\n * \n * Returns the bounds to be used to draw the control (folding icon) of the\n * given state.\n */\nmxCellRenderer.prototype.getControlBounds = function(state, w, h)\n{\n\tif (state.control != null)\n\t{\n\t\tvar s = state.view.scale;\n\t\tvar cx = state.getCenterX();\n\t\tvar cy = state.getCenterY();\n\t\n\t\tif (!state.view.graph.getModel().isEdge(state.cell))\n\t\t{\n\t\t\tcx = state.x + w * s;\n\t\t\tcy = state.y + h * s;\n\t\t\t\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\t// TODO: Factor out common code\n\t\t\t\tvar rot = state.shape.getShapeRotation();\n\t\t\t\t\n\t\t\t\tif (this.legacyControlPosition)\n\t\t\t\t{\n\t\t\t\t\trot = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (state.shape.isPaintBoundsInverted())\n\t\t\t\t\t{\n\t\t\t\t\t\tvar t = (state.width - state.height) / 2;\n\t\t\t\t\t\tcx += t;\n\t\t\t\t\t\tcy -= t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rot != 0)\n\t\t\t\t{\n\t\t\t        var rad = mxUtils.toRadians(rot);\n\t\t\t        var cos = Math.cos(rad);\n\t\t\t        var sin = Math.sin(rad);\n\t\t\t        \n\t\t\t        var point = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin,\n\t\t\t        \t\tnew mxPoint(state.getCenterX(), state.getCenterY()));\n\t\t\t        cx = point.x;\n\t\t\t        cy = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn (state.view.graph.getModel().isEdge(state.cell)) ? \n\t\t\tnew mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s))\n\t\t\t: new mxRectangle(Math.round(cx - w / 2 * s), Math.round(cy - h / 2 * s), Math.round(w * s), Math.round(h * s));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: insertStateAfter\n * \n * Inserts the given array of <mxShapes> after the given nodes in the DOM.\n * \n * Parameters:\n * \n * shapes - Array of <mxShapes> to be inserted.\n * node - Node in <drawPane> after which the shapes should be inserted.\n * htmlNode - Node in the graph container after which the shapes should be inserted that\n * will not go into the <drawPane> (eg. HTML labels without foreignObjects).\n */\nmxCellRenderer.prototype.insertStateAfter = function(state, node, htmlNode)\n{\n\tvar shapes = this.getShapesForState(state);\n\t\n\tfor (var i = 0; i < shapes.length; i++)\n\t{\n\t\tif (shapes[i] != null && shapes[i].node != null)\n\t\t{\n\t\t\tvar html = shapes[i].node.parentNode != state.view.getDrawPane() &&\n\t\t\t\tshapes[i].node.parentNode != state.view.getOverlayPane();\n\t\t\tvar temp = (html) ? htmlNode : node;\n\t\t\t\n\t\t\tif (temp != null && temp.nextSibling != shapes[i].node)\n\t\t\t{\n\t\t\t\tif (temp.nextSibling == null)\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.appendChild(shapes[i].node);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp.parentNode.insertBefore(shapes[i].node, temp.nextSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (temp == null)\n\t\t\t{\n\t\t\t\t// Special case: First HTML node should be first sibling after canvas\n\t\t\t\tif (shapes[i].node.parentNode == state.view.graph.container)\n\t\t\t\t{\n\t\t\t\t\tvar canvas = state.view.canvas;\n\t\t\t\t\t\n\t\t\t\t\twhile (canvas != null && canvas.parentNode != state.view.graph.container)\n\t\t\t\t\t{\n\t\t\t\t\t\tcanvas = canvas.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (canvas != null && canvas.nextSibling != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (canvas.nextSibling != shapes[i].node)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, canvas.nextSibling);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tshapes[i].node.parentNode.appendChild(shapes[i].node);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (shapes[i].node.parentNode.firstChild != null && shapes[i].node.parentNode.firstChild != shapes[i].node)\n\t\t\t\t{\n\t\t\t\t\t// Inserts the node as the first child of the parent to implement the order\n\t\t\t\t\tshapes[i].node.parentNode.insertBefore(shapes[i].node, shapes[i].node.parentNode.firstChild);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (html)\n\t\t\t{\n\t\t\t\thtmlNode = shapes[i].node;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tnode = shapes[i].node;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [node, htmlNode];\n};\n\n/**\n * Function: getShapesForState\n * \n * Returns the <mxShapes> for the given cell state in the order in which they should\n * appear in the DOM.\n * \n * Parameters:\n * \n * state - <mxCellState> whose shapes should be returned.\n */\nmxCellRenderer.prototype.getShapesForState = function(state)\n{\n\treturn [state.shape, state.text, state.control];\n};\n\n/**\n * Function: redraw\n * \n * Updates the bounds or points and scale of the shapes for the given cell\n * state. This is called in mxGraphView.validatePoints as the last step of\n * updating all cells.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be updated.\n * force - Optional boolean that specifies if the cell should be reconfiured\n * and redrawn without any additional checks.\n * rendering - Optional boolean that specifies if the cell should actually\n * be drawn into the DOM. If this is false then redraw and/or reconfigure\n * will not be called on the shape.\n */\nmxCellRenderer.prototype.redraw = function(state, force, rendering)\n{\n\tvar shapeChanged = this.redrawShape(state, force, rendering);\n\t\n\tif (state.shape != null && (rendering == null || rendering))\n\t{\n\t\tthis.redrawLabel(state, shapeChanged);\n\t\tthis.redrawCellOverlays(state, shapeChanged);\n\t\tthis.redrawControl(state, shapeChanged);\n\t}\n};\n\n/**\n * Function: redrawShape\n * \n * Redraws the shape for the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose label should be redrawn.\n */\nmxCellRenderer.prototype.redrawShape = function(state, force, rendering)\n{\n\tvar model = state.view.graph.model;\n\tvar shapeChanged = false;\n\n\t// Forces creation of new shape if shape style has changed\n\tif (state.shape != null && state.shape.style != null && state.style != null &&\n\t\tstate.shape.style[mxConstants.STYLE_SHAPE] != state.style[mxConstants.STYLE_SHAPE])\n\t{\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n\t\n\tif (state.shape == null && state.view.graph.container != null &&\n\t\tstate.cell != state.view.currentRoot &&\n\t\t(model.isVertex(state.cell) || model.isEdge(state.cell)))\n\t{\n\t\tstate.shape = this.createShape(state);\n\t\t\n\t\tif (state.shape != null)\n\t\t{\n\t\t\tstate.shape.minSvgStrokeWidth = this.minSvgStrokeWidth;\n\t\t\tstate.shape.antiAlias = this.antiAlias;\n\t\n\t\t\tthis.createIndicatorShape(state);\n\t\t\tthis.initializeShape(state);\n\t\t\tthis.createCellOverlays(state);\n\t\t\tthis.installListeners(state);\n\t\t\t\n\t\t\t// Forces a refresh of the handler if one exists\n\t\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\t}\n\t}\n\telse if (!force && state.shape != null && (!mxUtils.equalEntries(state.shape.style,\n\t\tstate.style) || this.checkPlaceholderStyles(state)))\n\t{\n\t\tstate.shape.resetStyles();\n\t\tthis.configureShape(state);\n\t\t// LATER: Ignore update for realtime to fix reset of current gesture\n\t\tstate.view.graph.selectionCellsHandler.updateHandler(state);\n\t\tforce = true;\n\t}\n\n\tif (state.shape != null)\n\t{\n\t\t// Handles changes of the collapse icon\n\t\tthis.createControl(state);\n\t\t\n\t\t// Redraws the cell if required, ignores changes to bounds if points are\n\t\t// defined as the bounds are updated for the given points inside the shape\n\t\tif (force || this.isShapeInvalid(state, state.shape))\n\t\t{\n\t\t\tif (state.absolutePoints != null)\n\t\t\t{\n\t\t\t\tstate.shape.points = state.absolutePoints.slice();\n\t\t\t\tstate.shape.bounds = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.points = null;\n\t\t\t\tstate.shape.bounds = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\t}\n\n\t\t\tstate.shape.scale = state.view.scale;\n\t\t\t\n\t\t\tif (rendering == null || rendering)\n\t\t\t{\n\t\t\t\tthis.doRedrawShape(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.shape.updateBoundingBox();\n\t\t\t}\n\t\t\t\n\t\t\tshapeChanged = true;\n\t\t}\n\t}\n\n\treturn shapeChanged;\n};\n\n/**\n * Function: doRedrawShape\n * \n * Invokes redraw on the shape of the given state.\n */\nmxCellRenderer.prototype.doRedrawShape = function(state)\n{\n\tstate.shape.redraw();\n};\n\n/**\n * Function: isShapeInvalid\n * \n * Returns true if the given shape must be repainted.\n */\nmxCellRenderer.prototype.isShapeInvalid = function(state, shape)\n{\n\treturn shape.bounds == null || shape.scale != state.view.scale ||\n\t\t(state.absolutePoints == null && !shape.bounds.equals(state)) ||\n\t\t(state.absolutePoints != null && !mxUtils.equalPoints(shape.points, state.absolutePoints))\n};\n\n/**\n * Function: destroy\n * \n * Destroys the shapes associated with the given cell state.\n * \n * Parameters:\n * \n * state - <mxCellState> for which the shapes should be destroyed.\n */\nmxCellRenderer.prototype.destroy = function(state)\n{\n\tif (state.shape != null)\n\t{\n\t\tif (state.text != null)\n\t\t{\t\t\n\t\t\tstate.text.destroy();\n\t\t\tstate.text = null;\n\t\t}\n\t\t\n\t\tif (state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\tshape.destroy();\n\t\t\t});\n\t\t\t\n\t\t\tstate.overlays = null;\n\t\t}\n\n\t\tif (state.control != null)\n\t\t{\n\t\t\tstate.control.destroy();\n\t\t\tstate.control = null;\n\t\t}\n\t\t\n\t\tstate.shape.destroy();\n\t\tstate.shape = null;\n\t}\n};\n\n__mxOutput.mxCellRenderer = typeof mxCellRenderer !== 'undefined' ? mxCellRenderer : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxEdgeStyle =\n{\n\t/**\n\t * Class: mxEdgeStyle\n\t * \n\t * Provides various edge styles to be used as the values for\n\t * <mxConstants.STYLE_EDGE> in a cell style.\n\t *\n\t * Example:\n\t * \n\t * (code)\n\t * var style = stylesheet.getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.ElbowConnector;\n\t * (end)\n\t * \n\t * Sets the default edge style to <ElbowConnector>.\n\t * \n\t * Custom edge style:\n\t * \n\t * To write a custom edge style, a function must be added to the mxEdgeStyle\n\t * object as follows:\n\t * \n\t * (code)\n\t * mxEdgeStyle.MyStyle = function(state, source, target, points, result)\n\t * {\n\t *   if (source != null && target != null)\n\t *   {\n\t *     var pt = new mxPoint(target.getCenterX(), source.getCenterY());\n\t * \n\t *     if (mxUtils.contains(source, pt.x, pt.y))\n\t *     {\n\t *       pt.y = source.y + source.height;\n\t *     }\n\t * \n\t *     result.push(pt);\n\t *   }\n\t * };\n\t * (end)\n\t * \n\t * In the above example, a right angle is created using a point on the\n\t * horizontal center of the target vertex and the vertical center of the source\n\t * vertex. The code checks if that point intersects the source vertex and makes\n\t * the edge straight if it does. The point is then added into the result array,\n\t * which acts as the return value of the function.\n\t *\n\t * The new edge style should then be registered in the <mxStyleRegistry> as follows:\n\t * (code)\n\t * mxStyleRegistry.putValue('myEdgeStyle', mxEdgeStyle.MyStyle);\n\t * (end)\n\t * \n\t * The custom edge style above can now be used in a specific edge as follows:\n\t * \n\t * (code)\n\t * model.setStyle(edge, 'edgeStyle=myEdgeStyle');\n\t * (end)\n\t * \n\t * Note that the key of the <mxStyleRegistry> entry for the function should\n\t * be used in string values, unless <mxGraphView.allowEval> is true, in\n\t * which case you can also use mxEdgeStyle.MyStyle for the value in the\n\t * cell style above.\n\t * \n\t * Or it can be used for all edges in the graph as follows:\n\t * \n\t * (code)\n\t * var style = graph.getStylesheet().getDefaultEdgeStyle();\n\t * style[mxConstants.STYLE_EDGE] = mxEdgeStyle.MyStyle;\n\t * (end)\n\t * \n\t * Note that the object can be used directly when programmatically setting\n\t * the value, but the key in the <mxStyleRegistry> should be used when\n\t * setting the value via a key, value pair in a cell style.\n\t * \n\t * Function: EntityRelation\n\t * \n\t * Implements an entity relation style for edges (as used in database\n\t * schema diagrams). At the time the function is called, the result\n\t * array contains a placeholder (null) for the first absolute point,\n\t * that is, the point where the edge and source terminal are connected.\n\t * The implementation of the style then adds all intermediate waypoints\n\t * except for the last point, that is, the connection point between the\n\t * edge and the target terminal. The first ant the last point in the\n\t * result array are then replaced with mxPoints that take into account\n\t * the terminal's perimeter and next point on the edge.\n\t *\n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t */\n\t EntityRelation: function (state, source, target, points, result)\n\t {\n\t\tvar view = state.view;\n\t \tvar graph = view.graph;\n\t \tvar segment = mxUtils.getValue(state.style,\n\t \t\t\tmxConstants.STYLE_SEGMENT,\n\t \t\t\tmxConstants.ENTITY_SEGMENT) * view.scale;\n\t \t\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t \tvar isSourceLeft = false;\n\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\telse if (source != null)\n\t\t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(source, state, true, mxConstants.DIRECTION_MASK_NONE);\n\t\t\t\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisSourceLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar sourceGeometry = graph.getCellGeometry(source.cell);\n\t\t\n\t\t\t \tif (sourceGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = sourceGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (target != null)\n\t\t\t \t{\n\t\t\t \t\tisSourceLeft = target.x + target.width < source.x;\n\t\t\t \t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn;\n\t\t}\n\t \t\n\t \tvar isTargetLeft = true;\n\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\telse if (target != null)\n\t \t{\n\t\t\tvar constraint = mxUtils.getPortConstraints(target, state, false, mxConstants.DIRECTION_MASK_NONE);\n\n\t\t\tif (constraint != mxConstants.DIRECTION_MASK_NONE && constraint != mxConstants.DIRECTION_MASK_WEST +\n\t\t\t\tmxConstants.DIRECTION_MASK_EAST)\n\t\t\t{\n\t\t\t\tisTargetLeft = constraint == mxConstants.DIRECTION_MASK_WEST;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t \tvar targetGeometry = graph.getCellGeometry(target.cell);\n\t\n\t\t\t \tif (targetGeometry.relative)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = targetGeometry.x <= 0.5;\n\t\t\t \t}\n\t\t\t \telse if (source != null)\n\t\t\t \t{\n\t\t\t \t\tisTargetLeft = source.x + source.width < target.x;\n\t\t\t \t}\n\t\t\t}\n\t \t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar x0 = (isSourceLeft) ? source.x : source.x + source.width;\n\t\t\tvar y0 = view.getRoutingCenterY(source);\n\t\t\t\n\t\t\tvar xe = (isTargetLeft) ? target.x : target.x + target.width;\n\t\t\tvar ye = view.getRoutingCenterY(target);\n\t\n\t\t\tvar seg = segment;\n\t\n\t\t\tvar dx = (isSourceLeft) ? -seg : seg;\n\t\t\tvar dep = new mxPoint(x0 + dx, y0);\n\t\t\t\t\t\n\t\t\tdx = (isTargetLeft) ? -seg : seg;\n\t\t\tvar arr = new mxPoint(xe + dx, ye);\n\t\n\t\t\t// Adds intermediate points if both go out on same side\n\t\t\tif (isSourceLeft == isTargetLeft)\n\t\t\t{\n\t\t\t\tvar x = (isSourceLeft) ?\n\t\t\t\t\tMath.min(x0, xe)-segment :\n\t\t\t\t\tMath.max(x0, xe)+segment;\n\t\n\t\t\t\tresult.push(new mxPoint(x, y0));\n\t\t\t\tresult.push(new mxPoint(x, ye));\n\t\t\t}\n\t\t\telse if ((dep.x < arr.x) == isSourceLeft)\n\t\t\t{\n\t\t\t\tvar midY = y0 + (ye - y0) / 2;\n\t\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(new mxPoint(dep.x, midY));\n\t\t\t\tresult.push(new mxPoint(arr.x, midY));\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.push(dep);\n\t\t\t\tresult.push(arr);\n\t\t\t}\n\t\t}\n\t },\n\n\t /**\n\t * Function: Loop\n\t * \n\t * Implements a self-reference, aka. loop.\n\t */\n\tLoop: function (state, source, target, points, result)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tif (points != null && points.length > 0)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar pt = points[i];\n\t\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\tresult.push(new mxPoint(pt.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tvar view = state.view;\n\t\t\tvar graph = view.graph;\n\t\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tif (mxUtils.contains(source, pt.x, pt.y))\n\t\t\t\t{\n\t\t\t\t\tpt = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = 0;\n\t\t\tvar dx = 0;\n\t\t\tvar y = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t \tvar seg = mxUtils.getValue(state.style, mxConstants.STYLE_SEGMENT,\n\t\t \t\tgraph.gridSize) * view.scale;\n\t\t\tvar dir = mxUtils.getValue(state.style, mxConstants.STYLE_DIRECTION,\n\t\t\t\tmxConstants.DIRECTION_WEST);\n\t\t\t\n\t\t\tif (dir == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdir == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = seg;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ty = view.getRoutingCenterY(source);\n\t\t\t\tdy = seg;\n\t\t\t}\n\t\t\t\n\t\t\tif (pt == null ||\n\t\t\t\tpt.x < source.x ||\n\t\t\t\tpt.x > source.x + source.width)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tx = pt.x;\n\t\t\t\t\tdy = Math.max(Math.abs(y - pt.y), dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y - 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_SOUTH)\n\t\t\t\t\t{\n\t\t\t\t\t\ty = source.y + source.height + 2 * dx;\n\t\t\t\t\t}\n\t\t\t\t\telse if (dir == mxConstants.DIRECTION_EAST)\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x - 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tx = source.x + source.width + 2 * dy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pt != null)\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(source);\n\t\t\t\tdx = Math.max(Math.abs(x - pt.x), dy);\n\t\t\t\ty = pt.y;\n\t\t\t\tdy = 0;\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(x - dx, y - dy));\n\t\t\tresult.push(new mxPoint(x + dx, y + dy));\n\t\t}\n\t},\n\t\n\t/**\n\t * Function: ElbowConnector\n\t * \n\t * Uses either <SideToSide> or <TopToBottom> depending on the horizontal\n\t * flag in the cell style. <SideToSide> is used if horizontal is true or\n\t * unspecified. See <EntityRelation> for a description of the\n\t * parameters.\n\t */\n\tElbowConnector: function (state, source, target, points, result)\n\t{\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\n\t\tvar vertical = false;\n\t\tvar horizontal = false;\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar left = Math.min(source.x, target.x);\n\t\t\t\tvar right = Math.max(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\n\t\t\t\tvar top = Math.min(source.y, target.y);\n\t\t\t\tvar bottom = Math.max(source.y + source.height,\n\t\t\t\t\ttarget.y + target.height);\n\n\t\t\t\tpt = state.view.transformControlPoint(state, pt);\n\t\t\t\t\t\n\t\t\t\tvertical = pt.y < top || pt.y > bottom;\n\t\t\t\thorizontal = pt.x < left || pt.x > right;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar left = Math.max(source.x, target.x);\n\t\t\t\tvar right = Math.min(source.x + source.width,\n\t\t\t\t\ttarget.x + target.width);\n\t\t\t\t\t\n\t\t\t\tvertical = left == right;\n\t\t\t\t\n\t\t\t\tif (!vertical)\n\t\t\t\t{\n\t\t\t\t\tvar top = Math.max(source.y, target.y);\n\t\t\t\t\tvar bottom = Math.min(source.y + source.height,\n\t\t\t\t\t\ttarget.y + target.height);\n\t\t\t\t\t\t\n\t\t\t\t\thorizontal = top == bottom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontal && (vertical ||\n\t\t\tstate.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL))\n\t\t{\n\t\t\tmxEdgeStyle.TopToBottom(state, source, target, points, result);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxEdgeStyle.SideToSide(state, source, target, points, result);\n\t\t}\n\t},\n\n\t/**\n\t * Function: SideToSide\n\t * \n\t * Implements a vertical elbow edge. See <EntityRelation> for a description\n\t * of the parameters.\n\t */\n\tSideToSide: function (state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\t\t\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\n\t\t\tvar x = (pt != null) ? pt.x : Math.round(r + (l - r) / 2);\n\t\n\t\t\tvar y1 = view.getRoutingCenterY(source);\n\t\t\tvar y2 = view.getRoutingCenterY(target);\n\t\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tif (pt.y >= source.y && pt.y <= source.y + source.height)\n\t\t\t\t{\n\t\t\t\t\ty1 = pt.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (pt.y >= target.y && pt.y <= target.y + target.height)\n\t\t\t\t{\n\t\t\t\t\ty2 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y1) &&\n\t\t\t\t!mxUtils.contains(source, x, y1))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x,  y1));\n\t\t\t}\n\t\n\t\t\tif (!mxUtils.contains(target, x, y2) &&\n\t\t\t\t!mxUtils.contains(source, x, y2))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y2));\n\t\t\t}\n\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, x, pt.y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, x, pt.y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(x, pt.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\t\n\t\t\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(x, t + (b - t) / 2));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: TopToBottom\n\t * \n\t * Implements a horizontal elbow edge. See <EntityRelation> for a\n\t * description of the parameters.\n\t */\n\tTopToBottom: function(state, source, target, points, result)\n\t{\n\t\tvar view = state.view;\n\t\tvar pt = (points != null && points.length > 0) ? points[0] : null;\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = view.transformControlPoint(state, pt);\n\t\t}\n\t\t\n\t\tif (p0 != null)\n\t\t{\n\t\t\tsource = new mxCellState();\n\t\t\tsource.x = p0.x;\n\t\t\tsource.y = p0.y;\n\t\t}\n\t\t\n\t\tif (pe != null)\n\t\t{\n\t\t\ttarget = new mxCellState();\n\t\t\ttarget.x = pe.x;\n\t\t\ttarget.y = pe.y;\n\t\t}\n\n\t\tif (source != null && target != null)\n\t\t{\n\t\t\tvar t = Math.max(source.y, target.y);\n\t\t\tvar b = Math.min(source.y + source.height,\n\t\t\t\t\t\t\t target.y + target.height);\n\t\n\t\t\tvar x = view.getRoutingCenterX(source);\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= source.x &&\n\t\t\t\tpt.x <= source.x + source.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\t\n\t\t\tvar y = (pt != null) ? pt.y : Math.round(b + (t - b) / 2);\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (pt != null &&\n\t\t\t\tpt.x >= target.x &&\n\t\t\t\tpt.x <= target.x + target.width)\n\t\t\t{\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tx = view.getRoutingCenterX(target);\n\t\t\t}\n\t\t\t\n\t\t\tif (!mxUtils.contains(target, x, y) &&\n\t\t\t\t!mxUtils.contains(source, x, y))\n\t\t\t{\n\t\t\t\tresult.push(new mxPoint(x, y));\t\t\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif (result.length == 1)\n\t\t\t{\n\t\t\t\tif (pt != null && result.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.contains(target, pt.x, y) &&\n\t\t\t\t\t\t!mxUtils.contains(source, pt.x, y))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(new mxPoint(pt.x, y));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar l = Math.max(source.x, target.x);\n\t\t\t\t\tvar r = Math.min(source.x + source.width,\n\t\t\t\t\t\t\t target.x + target.width);\n\t\t\t\t\t\t \n\t\t\t\t\tresult.push(new mxPoint(l + (r - l) / 2, y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Function: SegmentConnector\n\t * \n\t * Implements an orthogonal edge style. Use <mxEdgeSegmentHandler>\n\t * as an interactive handler for this style.\n\t */\n\tSegmentConnector: function(state, source, target, hints, result)\n\t{\n\t\t// Creates array of all way- and terminalpoints\n\t\tvar pts = state.absolutePoints;\n\t\tvar tol = Math.max(1, state.view.scale);\n\t\t\n\t\t// Whether the first segment outgoing from the source end is horizontal\n\t\tvar lastPushed = (result.length > 0) ? result[0] : null;\n\t\tvar horizontal = true;\n\t\tvar hint = null;\n\t\t\n\t\t// Adds waypoints only if outside of tolerance\n\t\tfunction pushPoint(pt)\n\t\t{\n\t\t\tif (lastPushed == null || Math.abs(lastPushed.x - pt.x) >= tol || Math.abs(lastPushed.y - pt.y) >= tol)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t\tlastPushed = pt;\n\t\t\t}\n\t\t\t\n\t\t\treturn lastPushed;\n\t\t};\n\n\t\t// Adds the first point\n\t\tvar pt = pts[0];\n\t\t\n\t\tif (pt == null && source != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(source), state.view.getRoutingCenterY(source));\n\t\t}\n\t\telse if (pt != null)\n\t\t{\n\t\t\tpt = pt.clone();\n\t\t}\n\t\t\n\t\tpt.x = Math.round(pt.x);\n\t\tpt.y = Math.round(pt.y);\n\t\t\n\t\tvar lastInx = pts.length - 1;\n\n\t\t// Adds the waypoints\n\t\tif (hints != null && hints.length > 0)\n\t\t{\n\t\t\t// Converts all hints and removes nulls\n\t\t\tvar newHints = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\tvar tmp = state.view.transformControlPoint(state, hints[i]);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\ttmp.x = Math.round(tmp.x);\n\t\t\t\t\ttmp.y = Math.round(tmp.y);\n\t\t\t\t\tnewHints.push(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (newHints.length == 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\thints = newHints;\n\t\t\t\n\t\t\t// Aligns source and target hint to fixed points\n\t\t\tif (pt != null && hints[0] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[0].x - pt.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].x = pt.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[0].y - pt.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[0].y = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pe = pts[lastInx];\n\t\t\t\n\t\t\tif (pe != null && hints[hints.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(hints[hints.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(hints[hints.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\thints[hints.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\thint = hints[0];\n\n\t\t\tvar currentTerm = source;\n\t\t\tvar currentPt = pts[0];\n\t\t\tvar hozChan = false;\n\t\t\tvar vertChan = false;\n\t\t\tvar currentHint = hint;\n\t\t\t\n\t\t\tif (currentPt != null)\n\t\t\t{\n\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\tcurrentTerm = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for alignment with fixed points and with channels\n\t\t\t// at source and target segments only\n\t\t\tfor (var i = 0; i < 2; i++)\n\t\t\t{\n\t\t\t\tvar fixedVertAlign = currentPt != null && currentPt.x == currentHint.x;\n\t\t\t\tvar fixedHozAlign = currentPt != null && currentPt.y == currentHint.y;\n\t\t\t\t\n\t\t\t\tvar inHozChan = currentTerm != null && (currentHint.y >= currentTerm.y &&\n\t\t\t\t\t\tcurrentHint.y <= currentTerm.y + currentTerm.height);\n\t\t\t\tvar inVertChan = currentTerm != null && (currentHint.x >= currentTerm.x &&\n\t\t\t\t\t\tcurrentHint.x <= currentTerm.x + currentTerm.width);\n\n\t\t\t\thozChan = fixedHozAlign || (currentPt == null && inHozChan);\n\t\t\t\tvertChan = fixedVertAlign || (currentPt == null && inVertChan);\n\t\t\t\t\n\t\t\t\t// If the current hint falls in both the hor and vert channels in the case\n\t\t\t\t// of a floating port, or if the hint is exactly co-incident with a \n\t\t\t\t// fixed point, ignore the source and try to work out the orientation\n\t\t\t\t// from the target end\n\t\t\t\tif (i==0 && ((hozChan && vertChan) || (fixedVertAlign && fixedHozAlign)))\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (currentPt != null && (!fixedHozAlign && !fixedVertAlign) && (inHozChan || inVertChan)) \n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = inHozChan ? false : true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\tif (vertChan || hozChan)\n\t\t\t\t\t{\n\t\t\t\t\t\thorizontal = hozChan;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (i == 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Work back from target end\n\t\t\t\t\t\t\thorizontal = hints.length % 2 == 0 ? hozChan : vertChan;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentTerm = target;\n\t\t\t\tcurrentPt = pts[lastInx];\n\t\t\t\t\n\t\t\t\tif (currentPt != null)\n\t\t\t\t{\n\t\t\t\t\tcurrentPt.x = Math.round(currentPt.x);\n\t\t\t\t\tcurrentPt.y = Math.round(currentPt.y);\n\t\t\t\t\tcurrentTerm = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcurrentHint = hints[hints.length - 1];\n\t\t\t\t\n\t\t\t\tif (fixedVertAlign && fixedHozAlign)\n\t\t\t\t{\n\t\t\t\t\thints = hints.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (horizontal && ((pts[0] != null && pts[0].y != hint.y) ||\n\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t(hint.y < source.y || hint.y > source.y + source.height))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t}\n\t\t\telse if (!horizontal && ((pts[0] != null && pts[0].x != hint.x) ||\n\t\t\t\t\t(pts[0] == null && source != null &&\n\t\t\t\t\t(hint.x < source.x || hint.x > source.x + source.width))))\n\t\t\t{\n\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\tif (horizontal)\n\t\t\t{\n\t\t\t\tpt.y = hint.y;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tpt.x = hint.x;\n\t\t\t}\n\t\t\n\t\t\tfor (var i = 0; i < hints.length; i++)\n\t\t\t{\n\t\t\t\thorizontal = !horizontal;\n\t\t\t\thint = hints[i];\n\t\t\t\t\n//\t\t\t\tmxLog.show();\n//\t\t\t\tmxLog.debug('hint', i, hint.x, hint.y);\n\t\t\t\t\n\t\t\t\tif (horizontal)\n\t\t\t\t{\n\t\t\t\t\tpt.y = hint.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpt.x = hint.x;\n\t\t\t\t}\n\t\t\n\t\t\t\tpushPoint(pt.clone());\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\thint = pt;\n\t\t\t// FIXME: First click in connect preview toggles orientation\n\t\t\thorizontal = true;\n\t\t}\n\n\t\t// Adds the last point\n\t\tpt = pts[lastInx];\n\n\t\tif (pt == null && target != null)\n\t\t{\n\t\t\tpt = new mxPoint(state.view.getRoutingCenterX(target), state.view.getRoutingCenterY(target));\n\t\t}\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt.x = Math.round(pt.x);\n\t\t\tpt.y = Math.round(pt.y);\n\t\t\t\n\t\t\tif (hint != null)\n\t\t\t{\n\t\t\t\tif (horizontal && ((pts[lastInx] != null && pts[lastInx].y != hint.y) ||\n\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t(hint.y < target.y || hint.y > target.y + target.height))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(pt.x, hint.y));\n\t\t\t\t}\n\t\t\t\telse if (!horizontal && ((pts[lastInx] != null && pts[lastInx].x != hint.x) ||\n\t\t\t\t\t\t(pts[lastInx] == null && target != null &&\n\t\t\t\t\t\t(hint.x < target.x || hint.x > target.x + target.width))))\n\t\t\t\t{\n\t\t\t\t\tpushPoint(new mxPoint(hint.x, pt.y));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the source terminal for floating ports\n\t\tif (pts[0] == null && source != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[1] != null &&\n\t\t\t\tmxUtils.contains(source, result[1].x, result[1].y))\n\t\t\t{\n\t\t\t\tresult.splice(1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes bends inside the target terminal\n\t\tif (pts[lastInx] == null && target != null)\n\t\t{\n\t\t\twhile (result.length > 1 && result[result.length - 1] != null &&\n\t\t\t\tmxUtils.contains(target, result[result.length - 1].x, result[result.length - 1].y))\n\t\t\t{\n\t\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Removes last point if inside tolerance with end point\n\t\tif (pe != null && result[result.length - 1] != null &&\n\t\t\tMath.abs(pe.x - result[result.length - 1].x) <= tol &&\n\t\t\tMath.abs(pe.y - result[result.length - 1].y) <= tol)\n\t\t{\n\t\t\tresult.splice(result.length - 1, 1);\n\t\t\t\n\t\t\t// Lines up second last point in result with end point\n\t\t\tif (result[result.length - 1] != null)\n\t\t\t{\n\t\t\t\tif (Math.abs(result[result.length - 1].x - pe.x) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].x = pe.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(result[result.length - 1].y - pe.y) < tol)\n\t\t\t\t{\n\t\t\t\t\tresult[result.length - 1].y = pe.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\n\torthBuffer: 10,\n\t\n\torthPointsFallback: true,\n\n\tdirVectors: [ [ -1, 0 ],\n\t\t\t[ 0, -1 ], [ 1, 0 ], [ 0, 1 ], [ -1, 0 ], [ 0, -1 ], [ 1, 0 ] ],\n\n\twayPoints1: [ [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0], [ 0, 0],  [ 0, 0],\n\t              [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0], [ 0, 0],  [ 0, 0] ],\n\n\troutePatterns: [\n\t\t[ [ 513, 2308, 2081, 2562 ], [ 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 513, 1090, 514, 2564, 2184, 2562 ],\n\t\t\t[ 513, 2308, 2561, 1090, 514, 2568, 2308 ] ],\n\t[ [ 514, 1057, 513, 2308, 2081, 2562 ], [ 514, 2184, 2114, 2561 ],\n\t\t\t[ 514, 2184, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 514, 1057, 513, 2568, 2308, 2561 ] ],\n\t[ [ 1090, 514, 1057, 513, 2308, 2081, 2562 ], [ 2114, 2561 ],\n\t\t\t[ 1090, 2562, 1057, 513, 2564, 2184 ],\n\t\t\t[ 1090, 514, 1057, 513, 2308, 2561, 2568 ] ],\n\t[ [ 2081, 2562 ], [ 1057, 513, 1090, 514, 2184, 2114, 2561 ],\n\t\t\t[ 1057, 513, 1090, 514, 2184, 2562, 2564 ],\n\t\t\t[ 1057, 2561, 1090, 514, 2568, 2308 ] ] ],\n\t\n\tinlineRoutePatterns: [\n\t\t\t[ null, [ 2114, 2568 ], null, null ],\n\t\t\t[ null, [ 514, 2081, 2114, 2568 ] , null, null ],\n\t\t\t[ null, [ 2114, 2561 ], null, null ],\n\t\t\t[ [ 2081, 2562 ], [ 1057, 2114, 2568 ],\n\t\t\t\t\t[ 2184, 2562 ],\n\t\t\t\t\tnull ] ],\n\tvertexSeperations: [],\n\n\tlimits: [\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],\n\t       [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ],\n\n\tLEFT_MASK: 32,\n\n\tTOP_MASK: 64,\n\n\tRIGHT_MASK: 128,\n\n\tBOTTOM_MASK: 256,\n\n\tLEFT: 1,\n\n\tTOP: 2,\n\n\tRIGHT: 4,\n\n\tBOTTOM: 8,\n\n\t// TODO remove magic numbers\n\tSIDE_MASK: 480,\n\t//mxEdgeStyle.LEFT_MASK | mxEdgeStyle.TOP_MASK | mxEdgeStyle.RIGHT_MASK\n\t//| mxEdgeStyle.BOTTOM_MASK,\n\n\tCENTER_MASK: 512,\n\n\tSOURCE_MASK: 1024,\n\n\tTARGET_MASK: 2048,\n\n\tVERTEX_MASK: 3072,\n\t// mxEdgeStyle.SOURCE_MASK | mxEdgeStyle.TARGET_MASK,\n\t\n\tgetJettySize: function(state, source, target, points, isSource)\n\t{\n\t\tvar value = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_SOURCE_JETTY_SIZE :\n\t\t\tmxConstants.STYLE_TARGET_JETTY_SIZE, mxUtils.getValue(state.style,\n\t\t\t\t\tmxConstants.STYLE_JETTY_SIZE, mxEdgeStyle.orthBuffer));\n\t\t\n\t\tif (value == 'auto')\n\t\t{\n\t\t\t// Computes the automatic jetty size\n\t\t\tvar type = mxUtils.getValue(state.style, (isSource) ? mxConstants.STYLE_STARTARROW : mxConstants.STYLE_ENDARROW, mxConstants.NONE);\n\t\t\t\n\t\t\tif (type != mxConstants.NONE)\n\t\t\t{\n\t\t\t\tvar size = mxUtils.getNumber(state.style, (isSource) ? mxConstants.STYLE_STARTSIZE : mxConstants.STYLE_ENDSIZE, mxConstants.DEFAULT_MARKERSIZE);\n\t\t\t\tvalue = Math.max(2, Math.ceil((size + mxEdgeStyle.orthBuffer) / mxEdgeStyle.orthBuffer)) * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue = 2 * mxEdgeStyle.orthBuffer;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn value;\n\t},\n\n\t/**\n\t * Function: OrthConnector\n\t * \n\t * Implements a local orthogonal router between the given\n\t * cells.\n\t * \n\t * Parameters:\n\t * \n\t * state - <mxCellState> that represents the edge to be updated.\n\t * source - <mxCellState> that represents the source terminal.\n\t * target - <mxCellState> that represents the target terminal.\n\t * points - List of relative control points.\n\t * result - Array of <mxPoints> that represent the actual points of the\n\t * edge.\n\t * \n\t */\n\tOrthConnector: function(state, source, target, points, result)\n\t{\n\t\tvar graph = state.view.graph;\n\t\tvar sourceEdge = source == null ? false : graph.getModel().isEdge(source.cell);\n\t\tvar targetEdge = target == null ? false : graph.getModel().isEdge(target.cell);\n\n\t\tvar pts = state.absolutePoints;\n\t\tvar p0 = pts[0];\n\t\tvar pe = pts[pts.length-1];\n\n\t\tvar sourceX = source != null ? source.x : p0.x;\n\t\tvar sourceY = source != null ? source.y : p0.y;\n\t\tvar sourceWidth = source != null ? source.width : 0;\n\t\tvar sourceHeight = source != null ? source.height : 0;\n\t\t\n\t\tvar targetX = target != null ? target.x : pe.x;\n\t\tvar targetY = target != null ? target.y : pe.y;\n\t\tvar targetWidth = target != null ? target.width : 0;\n\t\tvar targetHeight = target != null ? target.height : 0;\n\n\t\tvar scaledSourceBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, true);\n\t\tvar scaledTargetBuffer = state.view.scale * mxEdgeStyle.getJettySize(state, source, target, points, false);\n\t\t\n\t\t// Workaround for loop routing within buffer zone\n\t\tif (source != null && target == source)\n\t\t{\n\t\t\tscaledTargetBuffer = Math.max(scaledSourceBuffer, scaledTargetBuffer);\n\t\t\tscaledSourceBuffer = scaledTargetBuffer;\n\t\t}\n\t\t\n\t\tvar totalBuffer = scaledTargetBuffer + scaledSourceBuffer;\n\t\tvar tooShort = false;\n\t\t\n\t\t// Checks minimum distance for fixed points and falls back to segment connector\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\n\t\t\ttooShort = dx * dx + dy * dy < totalBuffer * totalBuffer;\n\t\t}\n\n\t\tif (tooShort || (mxEdgeStyle.orthPointsFallback && (points != null &&\n\t\t\tpoints.length > 0)) || sourceEdge || targetEdge)\n\t\t{\n\t\t\tmxEdgeStyle.SegmentConnector(state, source, target, points, result);\n\t\t\t\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine the side(s) of the source and target vertices\n\t\t// that the edge may connect to\n\t\t// portConstraint [source, target]\n\t\tvar portConstraint = [mxConstants.DIRECTION_MASK_ALL, mxConstants.DIRECTION_MASK_ALL];\n\t\tvar rotation = 0;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tportConstraint[0] = mxUtils.getPortConstraints(source, state, true, \n\t\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(source.style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(sourceX, sourceY, sourceWidth, sourceHeight), rotation);\n\t\t\t\tsourceX = newRect.x; \n\t\t\t\tsourceY = newRect.y;\n\t\t\t\tsourceWidth = newRect.width;\n\t\t\t\tsourceHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\tif (target != null)\n\t\t{\n\t\t\tportConstraint[1] = mxUtils.getPortConstraints(target, state, false,\n\t\t\t\tmxConstants.DIRECTION_MASK_ALL);\n\t\t\trotation = mxUtils.getValue(target.style, mxConstants.STYLE_ROTATION, 0);\n\n\t\t\tif (rotation != 0)\n\t\t\t{\n\t\t\t\tvar newRect = mxUtils.getBoundingBox(new mxRectangle(targetX, targetY, targetWidth, targetHeight), rotation);\n\t\t\t\ttargetX = newRect.x;\n\t\t\t\ttargetY = newRect.y;\n\t\t\t\ttargetWidth = newRect.width;\n\t\t\t\ttargetHeight = newRect.height;\n\t\t\t}\n\t\t}\n\n\t\t// Avoids floating point number errors\n\t\tsourceX = Math.round(sourceX * 10) / 10;\n\t\tsourceY = Math.round(sourceY * 10) / 10;\n\t\tsourceWidth = Math.round(sourceWidth * 10) / 10;\n\t\tsourceHeight = Math.round(sourceHeight * 10) / 10;\n\t\t\n\t\ttargetX = Math.round(targetX * 10) / 10;\n\t\ttargetY = Math.round(targetY * 10) / 10;\n\t\ttargetWidth = Math.round(targetWidth * 10) / 10;\n\t\ttargetHeight = Math.round(targetHeight * 10) / 10;\n\t\t\n\t\tvar dir = [0, 0];\n\n\t\t// Work out which faces of the vertices present against each other\n\t\t// in a way that would allow a 3-segment connection if port constraints\n\t\t// permitted.\n\t\t// geo -> [source, target] [x, y, width, height]\n\t\tvar geo = [ [sourceX, sourceY, sourceWidth, sourceHeight] ,\n\t\t            [targetX, targetY, targetWidth, targetHeight] ];\n\t\tvar buffer = [scaledSourceBuffer, scaledTargetBuffer];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tmxEdgeStyle.limits[i][1] = geo[i][0] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][2] = geo[i][1] - buffer[i];\n\t\t\tmxEdgeStyle.limits[i][4] = geo[i][0] + geo[i][2] + buffer[i];\n\t\t\tmxEdgeStyle.limits[i][8] = geo[i][1] + geo[i][3] + buffer[i];\n\t\t}\n\t\t\n\t\t// Work out which quad the target is in\n\t\tvar sourceCenX = geo[0][0] + geo[0][2] / 2.0;\n\t\tvar sourceCenY = geo[0][1] + geo[0][3] / 2.0;\n\t\tvar targetCenX = geo[1][0] + geo[1][2] / 2.0;\n\t\tvar targetCenY = geo[1][1] + geo[1][3] / 2.0;\n\t\t\n\t\tvar dx = sourceCenX - targetCenX;\n\t\tvar dy = sourceCenY - targetCenY;\n\n\t\tvar quad = 0;\n\n\t\tif (dx < 0)\n\t\t{\n\t\t\tif (dy < 0)\n\t\t\t{\n\t\t\t\tquad = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tquad = 1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (dy <= 0)\n\t\t\t{\n\t\t\t\tquad = 3;\n\t\t\t\t\n\t\t\t\t// Special case on x = 0 and negative y\n\t\t\t\tif (dx == 0)\n\t\t\t\t{\n\t\t\t\t\tquad = 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for connection constraints\n\t\tvar currentTerm = null;\n\t\t\n\t\tif (source != null)\n\t\t{\n\t\t\tcurrentTerm = p0;\n\t\t}\n\n\t\tvar constraint = [ [0.5, 0.5] , [0.5, 0.5] ];\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (currentTerm != null)\n\t\t\t{\n\t\t\t\tconstraint[i][0] = (currentTerm.x - geo[i][0]) / geo[i][2];\n\t\t\t\t\n\t\t\t\tif (Math.abs(currentTerm.x - geo[i][0]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_WEST;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.x - geo[i][0] - geo[i][2]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_EAST;\n\t\t\t\t}\n\n\t\t\t\tconstraint[i][1] = (currentTerm.y - geo[i][1]) / geo[i][3];\n\n\t\t\t\tif (Math.abs(currentTerm.y - geo[i][1]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_NORTH;\n\t\t\t\t}\n\t\t\t\telse if (Math.abs(currentTerm.y - geo[i][1] - geo[i][3]) <= 1)\n\t\t\t\t{\n\t\t\t\t\tdir[i] = mxConstants.DIRECTION_MASK_SOUTH;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentTerm = null;\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tcurrentTerm = pe;\n\t\t\t}\n\t\t}\n\n\t\tvar sourceTopDist = geo[0][1] - (geo[1][1] + geo[1][3]);\n\t\tvar sourceLeftDist = geo[0][0] - (geo[1][0] + geo[1][2]);\n\t\tvar sourceBottomDist = geo[1][1] - (geo[0][1] + geo[0][3]);\n\t\tvar sourceRightDist = geo[1][0] - (geo[0][0] + geo[0][2]);\n\n\t\tmxEdgeStyle.vertexSeperations[1] = Math.max(sourceLeftDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[2] = Math.max(sourceTopDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[4] = Math.max(sourceBottomDist - totalBuffer, 0);\n\t\tmxEdgeStyle.vertexSeperations[3] = Math.max(sourceRightDist - totalBuffer, 0);\n\t\t\t\t\n\t\t//==============================================================\n\t\t// Start of source and target direction determination\n\n\t\t// Work through the preferred orientations by relative positioning\n\t\t// of the vertices and list them in preferred and available order\n\t\t\n\t\tvar dirPref = [];\n\t\tvar horPref = [];\n\t\tvar vertPref = [];\n\n\t\thorPref[0] = (sourceLeftDist >= sourceRightDist) ? mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t: mxConstants.DIRECTION_MASK_EAST;\n\t\tvertPref[0] = (sourceTopDist >= sourceBottomDist) ? mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t: mxConstants.DIRECTION_MASK_SOUTH;\n\n\t\thorPref[1] = mxUtils.reversePortConstraints(horPref[0]);\n\t\tvertPref[1] = mxUtils.reversePortConstraints(vertPref[0]);\n\t\t\n\t\tvar preferredHorizDist = sourceLeftDist >= sourceRightDist ? sourceLeftDist\n\t\t\t\t: sourceRightDist;\n\t\tvar preferredVertDist = sourceTopDist >= sourceBottomDist ? sourceTopDist\n\t\t\t\t: sourceBottomDist;\n\n\t\tvar prefOrdering = [ [0, 0] , [0, 0] ];\n\t\tvar preferredOrderSet = false;\n\n\t\t// If the preferred port isn't available, switch it\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((horPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\thorPref[i] = mxUtils.reversePortConstraints(horPref[i]);\n\t\t\t}\n\n\t\t\tif ((vertPref[i] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tvertPref[i] = mxUtils\n\t\t\t\t\t\t.reversePortConstraints(vertPref[i]);\n\t\t\t}\n\n\t\t\tprefOrdering[i][0] = vertPref[i];\n\t\t\tprefOrdering[i][1] = horPref[i];\n\t\t}\n\n\t\tif (preferredVertDist > 0\n\t\t\t\t&& preferredHorizDist > 0)\n\t\t{\n\t\t\t// Possibility of two segment edge connection\n\t\t\tif (((horPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((vertPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t\telse if (((vertPref[0] & portConstraint[0]) > 0)\n\t\t\t\t\t&& ((horPref[1] & portConstraint[1]) > 0))\n\t\t\t{\n\t\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\t\tpreferredOrderSet = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (preferredVertDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = vertPref[0];\n\t\t\tprefOrdering[0][1] = horPref[0];\n\t\t\tprefOrdering[1][0] = vertPref[1];\n\t\t\tprefOrdering[1][1] = horPref[1];\n\t\t\tpreferredOrderSet = true;\n\n\t\t}\n\t\t\n\t\tif (preferredHorizDist > 0 && !preferredOrderSet)\n\t\t{\n\t\t\tprefOrdering[0][0] = horPref[0];\n\t\t\tprefOrdering[0][1] = vertPref[0];\n\t\t\tprefOrdering[1][0] = horPref[1];\n\t\t\tprefOrdering[1][1] = vertPref[1];\n\t\t\tpreferredOrderSet = true;\n\t\t}\n\n\t\t// The source and target prefs are now an ordered list of\n\t\t// the preferred port selections\n\t\t// If the list contains gaps, compact it\n\n\t\tfor (var i = 0; i < 2; i++)\n\t\t{\n\t\t\tif (dir[i] != 0x0)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((prefOrdering[i][0] & portConstraint[i]) == 0)\n\t\t\t{\n\t\t\t\tprefOrdering[i][0] = prefOrdering[i][1];\n\t\t\t}\n\n\t\t\tdirPref[i] = prefOrdering[i][0] & portConstraint[i];\n\t\t\tdirPref[i] |= (prefOrdering[i][1] & portConstraint[i]) << 8;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][i] & portConstraint[i]) << 16;\n\t\t\tdirPref[i] |= (prefOrdering[1 - i][1 - i] & portConstraint[i]) << 24;\n\n\t\t\tif ((dirPref[i] & 0xF) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = dirPref[i] << 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF00) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xF) | dirPref[i] >> 8;\n\t\t\t}\n\t\t\t\n\t\t\tif ((dirPref[i] & 0xF0000) == 0)\n\t\t\t{\n\t\t\t\tdirPref[i] = (dirPref[i] & 0xFFFF)\n\t\t\t\t\t\t| ((dirPref[i] & 0xF000000) >> 8);\n\t\t\t}\n\n\t\t\tdir[i] = dirPref[i] & 0xF;\n\n\t\t\tif (portConstraint[i] == mxConstants.DIRECTION_MASK_WEST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_NORTH\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_EAST\n\t\t\t\t\t|| portConstraint[i] == mxConstants.DIRECTION_MASK_SOUTH)\n\t\t\t{\n\t\t\t\tdir[i] = portConstraint[i];\n\t\t\t}\n\t\t}\n\n\t\t//==============================================================\n\t\t// End of source and target direction determination\n\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\t\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar routePattern = mxEdgeStyle.routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tmxEdgeStyle.wayPoints1[0][0] = geo[0][0];\n\t\tmxEdgeStyle.wayPoints1[0][1] = geo[0][1];\n\n\t\tswitch (dir[0])\n\t\t{\n\t\t\tcase mxConstants.DIRECTION_MASK_WEST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] -= scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_SOUTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += geo[0][3] + scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_EAST:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += geo[0][2] + scaledSourceBuffer;\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] += constraint[0][1] * geo[0][3];\n\t\t\t\tbreak;\n\t\t\tcase mxConstants.DIRECTION_MASK_NORTH:\n\t\t\t\tmxEdgeStyle.wayPoints1[0][0] += constraint[0][0] * geo[0][2];\n\t\t\t\tmxEdgeStyle.wayPoints1[0][1] -= scaledSourceBuffer;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar currentIndex = 0;\n\n\t\t// Orientation, 0 horizontal, 1 vertical\n\t\tvar lastOrientation = (dir[0] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t: 1;\n\t\tvar initialOrientation = lastOrientation;\n\t\tvar currentOrientation = 0;\n\n\t\tfor (var i = 0; i < routePattern.length; i++)\n\t\t{\n\t\t\tvar nextDirection = routePattern[i] & 0xF;\n\n\t\t\t// Rotate the index of this direction by the quad\n\t\t\t// to get the real direction\n\t\t\tvar directionIndex = nextDirection == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t\t: nextDirection;\n\n\t\t\tdirectionIndex += quad;\n\n\t\t\tif (directionIndex > 4)\n\t\t\t{\n\t\t\t\tdirectionIndex -= 4;\n\t\t\t}\n\n\t\t\tvar direction = mxEdgeStyle.dirVectors[directionIndex - 1];\n\n\t\t\tcurrentOrientation = (directionIndex % 2 > 0) ? 0 : 1;\n\t\t\t// Only update the current index if the point moved\n\t\t\t// in the direction of the current segment move,\n\t\t\t// otherwise the same point is moved until there is \n\t\t\t// a segment direction change\n\t\t\tif (currentOrientation != lastOrientation)\n\t\t\t{\n\t\t\t\tcurrentIndex++;\n\t\t\t\t// Copy the previous way point into the new one\n\t\t\t\t// We can't base the new position on index - 1\n\t\t\t\t// because sometime elbows turn out not to exist,\n\t\t\t\t// then we'd have to rewind.\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] = mxEdgeStyle.wayPoints1[currentIndex - 1][0];\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] = mxEdgeStyle.wayPoints1[currentIndex - 1][1];\n\t\t\t}\n\n\t\t\tvar tar = (routePattern[i] & mxEdgeStyle.TARGET_MASK) > 0;\n\t\t\tvar sou = (routePattern[i] & mxEdgeStyle.SOURCE_MASK) > 0;\n\t\t\tvar side = (routePattern[i] & mxEdgeStyle.SIDE_MASK) >> 5;\n\t\t\tside = side << quad;\n\n\t\t\tif (side > 0xF)\n\t\t\t{\n\t\t\t\tside = side >> 4;\n\t\t\t}\n\n\t\t\tvar center = (routePattern[i] & mxEdgeStyle.CENTER_MASK) > 0;\n\n\t\t\tif ((sou || tar) && side < 9)\n\t\t\t{\n\t\t\t\tvar limit = 0;\n\t\t\t\tvar souTar = sou ? 0 : 1;\n\n\t\t\t\tif (center && currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][0] + constraint[souTar][0] * geo[souTar][2];\n\t\t\t\t}\n\t\t\t\telse if (center)\n\t\t\t\t{\n\t\t\t\t\tlimit = geo[souTar][1] + constraint[souTar][1] * geo[souTar][3];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlimit = mxEdgeStyle.limits[souTar][side];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (currentOrientation == 0)\n\t\t\t\t{\n\t\t\t\t\tvar lastX = mxEdgeStyle.wayPoints1[currentIndex][0];\n\t\t\t\t\tvar deltaX = (limit - lastX) * direction[0];\n\n\t\t\t\t\tif (deltaX > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t\t\t* deltaX;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar lastY = mxEdgeStyle.wayPoints1[currentIndex][1];\n\t\t\t\t\tvar deltaY = (limit - lastY) * direction[1];\n\n\t\t\t\t\tif (deltaY > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t\t\t* deltaY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (center)\n\t\t\t{\n\t\t\t\t// Which center we're travelling to depend on the current direction\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][0] += direction[0]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t\tmxEdgeStyle.wayPoints1[currentIndex][1] += direction[1]\n\t\t\t\t\t\t* Math.abs(mxEdgeStyle.vertexSeperations[directionIndex] / 2);\n\t\t\t}\n\n\t\t\tif (currentIndex > 0\n\t\t\t\t\t&& mxEdgeStyle.wayPoints1[currentIndex][currentOrientation] == mxEdgeStyle.wayPoints1[currentIndex - 1][currentOrientation])\n\t\t\t{\n\t\t\t\tcurrentIndex--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlastOrientation = currentOrientation;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= currentIndex; i++)\n\t\t{\n\t\t\tif (i == currentIndex)\n\t\t\t{\n\t\t\t\t// Last point can cause last segment to be in\n\t\t\t\t// same direction as jetty/approach. If so,\n\t\t\t\t// check the number of points is consistent\n\t\t\t\t// with the relative orientation of source and target\n\t\t\t\t// jx. Same orientation requires an even\n\t\t\t\t// number of turns (points), different requires\n\t\t\t\t// odd.\n\t\t\t\tvar targetOrientation = (dir[1] & (mxConstants.DIRECTION_MASK_EAST | mxConstants.DIRECTION_MASK_WEST)) > 0 ? 0\n\t\t\t\t\t\t: 1;\n\t\t\t\tvar sameOrient = targetOrientation == initialOrientation ? 0 : 1;\n\n\t\t\t\t// (currentIndex + 1) % 2 is 0 for even number of points,\n\t\t\t\t// 1 for odd\n\t\t\t\tif (sameOrient != (currentIndex + 1) % 2)\n\t\t\t\t{\n\t\t\t\t\t// The last point isn't required\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult.push(new mxPoint(Math.round(mxEdgeStyle.wayPoints1[i][0]), Math.round(mxEdgeStyle.wayPoints1[i][1])));\n\t\t}\n\t\t\n\t\t// Removes duplicates\n\t\tvar index = 1;\n\t\t\n\t\twhile (index < result.length)\n\t\t{\n\t\t\tif (result[index - 1] == null || result[index] == null ||\n\t\t\t\tresult[index - 1].x != result[index].x ||\n\t\t\t\tresult[index - 1].y != result[index].y)\n\t\t\t{\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult.splice(index, 1);\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetRoutePattern: function(dir, quad, dx, dy)\n\t{\n\t\tvar sourceIndex = dir[0] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[0];\n\t\tvar targetIndex = dir[1] == mxConstants.DIRECTION_MASK_EAST ? 3\n\t\t\t\t: dir[1];\n\n\t\tsourceIndex -= quad;\n\t\ttargetIndex -= quad;\n\n\t\tif (sourceIndex < 1)\n\t\t{\n\t\t\tsourceIndex += 4;\n\t\t}\n\t\tif (targetIndex < 1)\n\t\t{\n\t\t\ttargetIndex += 4;\n\t\t}\n\n\t\tvar result = routePatterns[sourceIndex - 1][targetIndex - 1];\n\n\t\tif (dx == 0 || dy == 0)\n\t\t{\n\t\t\tif (inlineRoutePatterns[sourceIndex - 1][targetIndex - 1] != null)\n\t\t\t{\n\t\t\t\tresult = inlineRoutePatterns[sourceIndex - 1][targetIndex - 1];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n__mxOutput.mxEdgeStyle = typeof mxEdgeStyle !== 'undefined' ? mxEdgeStyle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxStyleRegistry =\n{\n\t/**\n\t * Class: mxStyleRegistry\n\t *\n\t * Singleton class that acts as a global converter from string to object values\n\t * in a style. This is currently only used to perimeters and edge styles.\n\t * \n\t * Variable: values\n\t *\n\t * Maps from strings to objects.\n\t */\n\tvalues: [],\n\n\t/**\n\t * Function: putValue\n\t *\n\t * Puts the given object into the registry under the given name.\n\t */\n\tputValue: function(name, obj)\n\t{\n\t\tmxStyleRegistry.values[name] = obj;\n\t},\n\n\t/**\n\t * Function: getValue\n\t *\n\t * Returns the value associated with the given name.\n\t */\n\tgetValue: function(name)\n\t{\n\t\treturn mxStyleRegistry.values[name];\n\t},\n\t\n\t/**\n\t * Function: getName\n\t * \n\t * Returns the name for the given value.\n\t */\n\tgetName: function(value)\n\t{\n\t\tfor (var key in mxStyleRegistry.values)\n\t\t{\n\t\t\tif (mxStyleRegistry.values[key] == value)\n\t\t\t{\n\t\t\t\treturn key;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n\n};\n\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ELBOW, mxEdgeStyle.ElbowConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ENTITY_RELATION, mxEdgeStyle.EntityRelation);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_LOOP, mxEdgeStyle.Loop);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SIDETOSIDE, mxEdgeStyle.SideToSide);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_TOPTOBOTTOM, mxEdgeStyle.TopToBottom);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_ORTHOGONAL, mxEdgeStyle.OrthConnector);\nmxStyleRegistry.putValue(mxConstants.EDGESTYLE_SEGMENT, mxEdgeStyle.SegmentConnector);\n\nmxStyleRegistry.putValue(mxConstants.PERIMETER_ELLIPSE, mxPerimeter.EllipsePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RECTANGLE, mxPerimeter.RectanglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_RHOMBUS, mxPerimeter.RhombusPerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_TRIANGLE, mxPerimeter.TrianglePerimeter);\nmxStyleRegistry.putValue(mxConstants.PERIMETER_HEXAGON, mxPerimeter.HexagonPerimeter);\n\n__mxOutput.mxStyleRegistry = typeof mxStyleRegistry !== 'undefined' ? mxStyleRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphView\n *\n * Extends <mxEventSource> to implement a view for a graph. This class is in\n * charge of computing the absolute coordinates for the relative child\n * geometries, the points for perimeters and edge styles and keeping them\n * cached in <mxCellStates> for faster retrieval. The states are updated\n * whenever the model or the view state (translate, scale) changes. The scale\n * and translate are honoured in the bounds.\n * \n * Event: mxEvent.UNDO\n * \n * Fires after the root was changed in <setCurrentRoot>. The <code>edit</code>\n * property contains the <mxUndoableEdit> which contains the\n * <mxCurrentRootChange>.\n * \n * Event: mxEvent.SCALE_AND_TRANSLATE\n * \n * Fires after the scale and translate have been changed in <scaleAndTranslate>.\n * The <code>scale</code>, <code>previousScale</code>, <code>translate</code>\n * and <code>previousTranslate</code> properties contain the new and previous\n * scale and translate, respectively.\n * \n * Event: mxEvent.SCALE\n * \n * Fires after the scale was changed in <setScale>. The <code>scale</code> and\n * <code>previousScale</code> properties contain the new and previous scale.\n * \n * Event: mxEvent.TRANSLATE\n * \n * Fires after the translate was changed in <setTranslate>. The\n * <code>translate</code> and <code>previousTranslate</code> properties contain\n * the new and previous value for translate.\n * \n * Event: mxEvent.DOWN and mxEvent.UP\n * \n * Fire if the current root is changed by executing an <mxCurrentRootChange>.\n * The event name depends on the location of the root in the cell hierarchy\n * with respect to the current root. The <code>root</code> and\n * <code>previous</code> properties contain the new and previous root,\n * respectively.\n * \n * Constructor: mxGraphView\n *\n * Constructs a new view for the given <mxGraph>.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphView(graph)\n{\n\tthis.graph = graph;\n\tthis.translate = new mxPoint();\n\tthis.graphBounds = new mxRectangle();\n\tthis.states = new mxDictionary();\n};\n\n/**\n * Extends mxEventSource.\n */\nmxGraphView.prototype = new mxEventSource();\nmxGraphView.prototype.constructor = mxGraphView;\n\n/**\n *\n */\nmxGraphView.prototype.EMPTY_POINT = new mxPoint();\n\n/**\n * Variable: doneResource\n * \n * Specifies the resource key for the status message after a long operation.\n * If the resource for this key does not exist then the value is used as\n * the status message. Default is 'done'.\n */\nmxGraphView.prototype.doneResource = (mxClient.language != 'none') ? 'done' : '';\n\n/**\n * Function: updatingDocumentResource\n *\n * Specifies the resource key for the status message while the document is\n * being updated. If the resource for this key does not exist then the\n * value is used as the status message. Default is 'updatingDocument'.\n */\nmxGraphView.prototype.updatingDocumentResource = (mxClient.language != 'none') ? 'updatingDocument' : '';\n\n/**\n * Variable: allowEval\n * \n * Specifies if string values in cell styles should be evaluated using\n * <mxUtils.eval>. This will only be used if the string values can't be mapped\n * to objects using <mxStyleRegistry>. Default is false. NOTE: Enabling this\n * switch carries a possible security risk.\n */\nmxGraphView.prototype.allowEval = false;\n\n/**\n * Variable: captureDocumentGesture\n * \n * Specifies if a gesture should be captured when it goes outside of the\n * graph container. Default is true.\n */\nmxGraphView.prototype.captureDocumentGesture = true;\n\n/**\n * Variable: optimizeVmlReflows\n * \n * Specifies if the <canvas> should be hidden while rendering in IE8 standards\n * mode and quirks mode. This will significantly improve rendering performance.\n * Default is true.\n */\nmxGraphView.prototype.optimizeVmlReflows = true;\n\n/**\n * Variable: rendering\n * \n * Specifies if shapes should be created, updated and destroyed using the\n * methods of <mxCellRenderer> in <graph>. Default is true.\n */\nmxGraphView.prototype.rendering = true;\n\n/**\n * Variable: graph\n *\n * Reference to the enclosing <mxGraph>.\n */\nmxGraphView.prototype.graph = null;\n\n/**\n * Variable: currentRoot\n *\n * <mxCell> that acts as the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.currentRoot = null;\n\n/**\n * Variable: graphBounds\n *\n * <mxRectangle> that caches the scales, translated bounds of the current view.\n */\nmxGraphView.prototype.graphBounds = null;\n\n/**\n * Variable: scale\n * \n * Specifies the scale. Default is 1 (100%).\n */\nmxGraphView.prototype.scale = 1;\n\t\n/**\n * Variable: translate\n *\n * <mxPoint> that specifies the current translation. Default is a new\n * empty <mxPoint>.\n */\nmxGraphView.prototype.translate = null;\n\n/**\n * Variable: states\n * \n * <mxDictionary> that maps from cell IDs to <mxCellStates>.\n */\nmxGraphView.prototype.states = null;\n\n/**\n * Variable: updateStyle\n * \n * Specifies if the style should be updated in each validation step. If this\n * is false then the style is only updated if the state is created or if the\n * style of the cell was changed. Default is false.\n */\nmxGraphView.prototype.updateStyle = false;\n\n/**\n * Variable: lastNode\n * \n * During validation, this contains the last DOM node that was processed.\n */\nmxGraphView.prototype.lastNode = null;\n\n/**\n * Variable: lastHtmlNode\n * \n * During validation, this contains the last HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastHtmlNode = null;\n\n/**\n * Variable: lastForegroundNode\n * \n * During validation, this contains the last edge's DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundNode = null;\n\n/**\n * Variable: lastForegroundHtmlNode\n * \n * During validation, this contains the last edge HTML DOM node that was processed.\n */\nmxGraphView.prototype.lastForegroundHtmlNode = null;\n\n/**\n * Function: getGraphBounds\n *\n * Returns <graphBounds>.\n */\nmxGraphView.prototype.getGraphBounds = function()\n{\n\treturn this.graphBounds;\n};\n\n/**\n * Function: setGraphBounds\n *\n * Sets <graphBounds>.\n */\nmxGraphView.prototype.setGraphBounds = function(value)\n{\n\tthis.graphBounds = value;\n};\n\n/**\n * Function: getBounds\n * \n * Returns the union of all <mxCellStates> for the given array of <mxCells>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounds should be returned.\n */\nmxGraphView.prototype.getBounds = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(state);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(state);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: setCurrentRoot\n *\n * Sets and returns the current root and fires an <undo> event before\n * calling <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * root - <mxCell> that specifies the root of the displayed cell hierarchy.\n */\nmxGraphView.prototype.setCurrentRoot = function(root)\n{\n\tif (this.currentRoot != root)\n\t{\n\t\tvar change = new mxCurrentRootChange(this, root);\n\t\tchange.execute();\n\t\tvar edit = new mxUndoableEdit(this, true);\n\t\tedit.add(change);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UNDO, 'edit', edit));\n\t\tthis.graph.sizeDidChange();\n\t}\n\t\n\treturn root;\n};\n\n/**\n * Function: scaleAndTranslate\n *\n * Sets the scale and translation and fires a <scale> and <translate> event\n * before calling <revalidate> followed by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * scale - Decimal value that specifies the new scale (1 is 100%).\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.scaleAndTranslate = function(scale, dx, dy)\n{\n\tvar previousScale = this.scale;\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.scale != scale || this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.scale = scale;\n\t\t\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE_AND_TRANSLATE,\n\t\t'scale', scale, 'previousScale', previousScale,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: getScale\n * \n * Returns the <scale>.\n */\nmxGraphView.prototype.getScale = function()\n{\n\treturn this.scale;\n};\n\n/**\n * Function: setScale\n *\n * Sets the scale and fires a <scale> event before calling <revalidate> followed\n * by <mxGraph.sizeDidChange>.\n *\n * Parameters:\n *\n * value - Decimal value that specifies the new scale (1 is 100%).\n */\nmxGraphView.prototype.setScale = function(value)\n{\n\tvar previousScale = this.scale;\n\t\n\tif (this.scale != value)\n\t{\n\t\tthis.scale = value;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.SCALE,\n\t\t'scale', value, 'previousScale', previousScale));\n};\n\n/**\n * Function: getTranslate\n * \n * Returns the <translate>.\n */\nmxGraphView.prototype.getTranslate = function()\n{\n\treturn this.translate;\n};\n\n/**\n * Function: setTranslate\n *\n * Sets the translation and fires a <translate> event before calling\n * <revalidate> followed by <mxGraph.sizeDidChange>. The translation is the\n * negative of the origin.\n *\n * Parameters:\n *\n * dx - X-coordinate of the translation.\n * dy - Y-coordinate of the translation.\n */\nmxGraphView.prototype.setTranslate = function(dx, dy)\n{\n\tvar previousTranslate = new mxPoint(this.translate.x, this.translate.y);\n\t\n\tif (this.translate.x != dx || this.translate.y != dy)\n\t{\n\t\tthis.translate.x = dx;\n\t\tthis.translate.y = dy;\n\n\t\tif (this.isEventsEnabled())\n\t\t{\n\t\t\tthis.viewStateChanged();\n\t\t}\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.TRANSLATE,\n\t\t'translate', this.translate, 'previousTranslate', previousTranslate));\n};\n\n/**\n * Function: viewStateChanged\n * \n * Invoked after <scale> and/or <translate> has changed.\n */\nmxGraphView.prototype.viewStateChanged = function()\n{\n\tthis.revalidate();\n\tthis.graph.sizeDidChange();\n};\n\n/**\n * Function: refresh\n *\n * Clears the view if <currentRoot> is not null and revalidates.\n */\nmxGraphView.prototype.refresh = function()\n{\n\tif (this.currentRoot != null)\n\t{\n\t\tthis.clear();\n\t}\n\t\n\tthis.revalidate();\n};\n\n/**\n * Function: revalidate\n *\n * Revalidates the complete view with all cell states.\n */\nmxGraphView.prototype.revalidate = function()\n{\n\tthis.invalidate();\n\tthis.validate();\n};\n\n/**\n * Function: clear\n *\n * Removes the state of the given cell and all descendants if the given\n * cell is not the current root.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the state should be removed. Default\n * is the root of the model.\n * force - Boolean indicating if the current root should be ignored for\n * recursion.\n */\nmxGraphView.prototype.clear = function(cell, force, recurse)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\tforce = (force != null) ? force : false;\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tthis.removeState(cell);\n\t\n\tif (recurse && (force || cell != this.currentRoot))\n\t{\n\t\tvar childCount = model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.clear(model.getChildAt(cell, i), force);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.invalidate(cell);\n\t}\n};\n\n/**\n * Function: invalidate\n * \n * Invalidates the state of the given cell, all its descendants and\n * connected edges.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be invalidated. Default is the root of the\n * model.\n */\nmxGraphView.prototype.invalidate = function(cell, recurse, includeEdges)\n{\n\tvar model = this.graph.getModel();\n\tcell = cell || model.getRoot();\n\trecurse = (recurse != null) ? recurse : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar state = this.getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tstate.invalid = true;\n\t}\n\t\n\t// Avoids infinite loops for invalid graphs\n\tif (!cell.invalidating)\n\t{\n\t\tcell.invalidating = true;\n\t\t\n\t\t// Recursively invalidates all descendants\n\t\tif (recurse)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = model.getChildAt(cell, i);\n\t\t\t\tthis.invalidate(child, recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Propagates invalidation to all connected edges\n\t\tif (includeEdges)\n\t\t{\n\t\t\tvar edgeCount = model.getEdgeCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t{\n\t\t\t\tthis.invalidate(model.getEdgeAt(cell, i), recurse, includeEdges);\n\t\t\t}\n\t\t}\n\t\t\n\t\tdelete cell.invalidating;\n\t}\n};\n\n/**\n * Function: validate\n * \n * Calls <validateCell> and <validateCellState> and updates the <graphBounds>\n * using <getBoundingBox>. Finally the background is validated using\n * <validateBackground>.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the root of the validation.\n * Default is <currentRoot> or the root of the model.\n */\nmxGraphView.prototype.validate = function(cell)\n{\n\tvar t0 = mxLog.enter('mxGraphView.validate');\n\twindow.status = mxResources.get(this.updatingDocumentResource) ||\n\t\tthis.updatingDocumentResource;\n\t\n\tthis.resetValidationState();\n\t\n\t// Improves IE rendering speed by minimizing reflows\n\tvar prevDisplay = null;\n\t\n\tif (this.optimizeVmlReflows && this.canvas != null && this.textDiv == null &&\n\t\t((document.documentMode == 8 && !mxClient.IS_EM) || mxClient.IS_QUIRKS))\n\t{\n\t\t// Placeholder keeps scrollbar positions when canvas is hidden\n\t\tthis.placeholder = document.createElement('div');\n\t\tthis.placeholder.style.position = 'absolute';\n\t\tthis.placeholder.style.width = this.canvas.clientWidth + 'px';\n\t\tthis.placeholder.style.height = this.canvas.clientHeight + 'px';\n\t\tthis.canvas.parentNode.appendChild(this.placeholder);\n\n\t\tprevDisplay = this.drawPane.style.display;\n\t\tthis.canvas.style.display = 'none';\n\t\t\n\t\t// Creates temporary DIV used for text measuring in mxText.updateBoundingBox\n\t\tthis.textDiv = document.createElement('div');\n\t\tthis.textDiv.style.position = 'absolute';\n\t\tthis.textDiv.style.whiteSpace = 'nowrap';\n\t\tthis.textDiv.style.visibility = 'hidden';\n\t\tthis.textDiv.style.display = (mxClient.IS_QUIRKS) ? 'inline' : 'inline-block';\n\t\tthis.textDiv.style.zoom = '1';\n\t\t\n\t\tdocument.body.appendChild(this.textDiv);\n\t}\n\t\n\tvar graphBounds = this.getBoundingBox(this.validateCellState(\n\t\tthis.validateCell(cell || ((this.currentRoot != null) ?\n\t\t\tthis.currentRoot : this.graph.getModel().getRoot()))));\n\tthis.setGraphBounds((graphBounds != null) ? graphBounds : this.getEmptyBounds());\n\tthis.validateBackground();\n\t\n\tif (prevDisplay != null)\n\t{\n\t\tthis.canvas.style.display = prevDisplay;\n\t\tthis.textDiv.parentNode.removeChild(this.textDiv);\n\t\t\n\t\tif (this.placeholder != null)\n\t\t{\n\t\t\tthis.placeholder.parentNode.removeChild(this.placeholder);\n\t\t}\n\t\t\t\t\n\t\t// Textdiv cannot be reused\n\t\tthis.textDiv = null;\n\t}\n\t\n\tthis.resetValidationState();\n\t\n\twindow.status = mxResources.get(this.doneResource) ||\n\t\tthis.doneResource;\n\tmxLog.leave('mxGraphView.validate', t0);\n};\n\n/**\n * Function: getEmptyBounds\n * \n * Returns the bounds for an empty graph. This returns a rectangle at\n * <translate> with the size of 0 x 0.\n */\nmxGraphView.prototype.getEmptyBounds = function()\n{\n\treturn new mxRectangle(this.translate.x * this.scale, this.translate.y * this.scale);\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box of the shape and the label for the given\n * <mxCellState> and its children if recurse is true.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounding box should be returned.\n * recurse - Optional boolean indicating if the children should be included.\n * Default is true.\n */\nmxGraphView.prototype.getBoundingBox = function(state, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar bbox = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (state.shape != null && state.shape.boundingBox != null)\n\t\t{\n\t\t\tbbox = state.shape.boundingBox.clone();\n\t\t}\n\t\t\n\t\t// Adds label bounding box to graph bounds\n\t\tif (state.text != null && state.text.boundingBox != null)\n\t\t{\n\t\t\tif (bbox != null)\n\t\t\t{\n\t\t\t\tbbox.add(state.text.boundingBox);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox = state.text.boundingBox.clone();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (recurse)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(state.cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar bounds = this.getBoundingBox(this.getState(model.getChildAt(state.cell, i)));\n\t\t\t\t\n\t\t\t\tif (bounds != null)\n\t\t\t\t{\n\t\t\t\t\tif (bbox == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = bounds;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox.add(bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn bbox;\n};\n\n/**\n * Function: createBackgroundPageShape\n *\n * Creates and returns the shape used as the background page.\n * \n * Parameters:\n * \n * bounds - <mxRectangle> that represents the bounds of the shape.\n */\nmxGraphView.prototype.createBackgroundPageShape = function(bounds)\n{\n\treturn new mxRectangleShape(bounds, 'white', 'black');\n};\n\n/**\n * Function: validateBackground\n *\n * Calls <validateBackgroundImage> and <validateBackgroundPage>.\n */\nmxGraphView.prototype.validateBackground = function()\n{\n\tthis.validateBackgroundImage();\n\tthis.validateBackgroundPage();\n};\n\n/**\n * Function: validateBackgroundImage\n * \n * Validates the background image.\n */\nmxGraphView.prototype.validateBackgroundImage = function()\n{\n\tvar bg = this.graph.getBackgroundImage();\n\t\n\tif (bg != null)\n\t{\n\t\tif (this.backgroundImage == null || this.backgroundImage.image != bg.src)\n\t\t{\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tthis.backgroundImage.destroy();\n\t\t\t}\n\t\t\t\n\t\t\tvar bounds = new mxRectangle(0, 0, 1, 1);\n\t\t\t\n\t\t\tthis.backgroundImage = new mxImageShape(bounds, bg.src);\n\t\t\tthis.backgroundImage.dialect = this.graph.dialect;\n\t\t\tthis.backgroundImage.init(this.backgroundPane);\n\t\t\tthis.backgroundImage.redraw();\n\n\t\t\t// Workaround for ignored event on background in IE8 standards mode\n\t\t\tif (document.documentMode == 8 && !mxClient.IS_EM)\n\t\t\t{\n\t\t\t\tmxEvent.addGestureListeners(this.backgroundImage.node,\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}),\n\t\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.redrawBackgroundImage(this.backgroundImage, bg);\n\t}\n\telse if (this.backgroundImage != null)\n\t{\n\t\tthis.backgroundImage.destroy();\n\t\tthis.backgroundImage = null;\n\t}\n};\n\n/**\n * Function: validateBackgroundPage\n * \n * Validates the background page.\n */\nmxGraphView.prototype.validateBackgroundPage = function()\n{\n\tif (this.graph.pageVisible)\n\t{\n\t\tvar bounds = this.getBackgroundPageBounds();\n\t\t\n\t\tif (this.backgroundPageShape == null)\n\t\t{\n\t\t\tthis.backgroundPageShape = this.createBackgroundPageShape(bounds);\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.isShadow = true;\n\t\t\tthis.backgroundPageShape.dialect = this.graph.dialect;\n\t\t\tthis.backgroundPageShape.init(this.backgroundPane);\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t\t\n\t\t\t// Adds listener for double click handling on background\n\t\t\tif (this.graph.nativeDblClickEnabled)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(this.backgroundPageShape.node, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.dblClick(evt);\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t\t// container and finishing the handling of a single gesture\n\t\t\tmxEvent.addGestureListeners(this.backgroundPageShape.node,\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\t\t\tif (this.graph.tooltipHandler != null && this.graph.tooltipHandler.isHideOnHover())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.tooltipHandler.hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.graph.isMouseDown && !mxEvent.isConsumed(evt))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.backgroundPageShape.scale = this.scale;\n\t\t\tthis.backgroundPageShape.bounds = bounds;\n\t\t\tthis.backgroundPageShape.redraw();\n\t\t}\n\t}\n\telse if (this.backgroundPageShape != null)\n\t{\n\t\tthis.backgroundPageShape.destroy();\n\t\tthis.backgroundPageShape = null;\n\t}\n};\n\n/**\n * Function: getBackgroundPageBounds\n * \n * Returns the bounds for the background page.\n */\nmxGraphView.prototype.getBackgroundPageBounds = function()\n{\n\tvar fmt = this.graph.pageFormat;\n\tvar ps = this.scale * this.graph.pageScale;\n\tvar bounds = new mxRectangle(this.scale * this.translate.x, this.scale * this.translate.y,\n\t\t\tfmt.width * ps, fmt.height * ps);\n\t\n\treturn bounds;\n};\n\n/**\n * Function: redrawBackgroundImage\n *\n * Updates the bounds and redraws the background image.\n * \n * Example:\n * \n * If the background image should not be scaled, this can be replaced with\n * the following.\n * \n * (code)\n * mxGraphView.prototype.redrawBackground = function(backgroundImage, bg)\n * {\n *   backgroundImage.bounds.x = this.translate.x;\n *   backgroundImage.bounds.y = this.translate.y;\n *   backgroundImage.bounds.width = bg.width;\n *   backgroundImage.bounds.height = bg.height;\n *\n *   backgroundImage.redraw();\n * };\n * (end)\n * \n * Parameters:\n * \n * backgroundImage - <mxImageShape> that represents the background image.\n * bg - <mxImage> that specifies the image and its dimensions.\n */\nmxGraphView.prototype.redrawBackgroundImage = function(backgroundImage, bg)\n{\n\tbackgroundImage.scale = this.scale;\n\tbackgroundImage.bounds.x = this.scale * this.translate.x;\n\tbackgroundImage.bounds.y = this.scale * this.translate.y;\n\tbackgroundImage.bounds.width = this.scale * bg.width;\n\tbackgroundImage.bounds.height = this.scale * bg.height;\n\n\tbackgroundImage.redraw();\n};\n\n/**\n * Function: validateCell\n * \n * Recursively creates the cell state for the given cell if visible is true and\n * the given cell is visible. If the cell is not visible but the state exists\n * then it is removed using <removeState>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be created.\n * visible - Optional boolean indicating if the cell should be visible. Default\n * is true.\n */\nmxGraphView.prototype.validateCell = function(cell, visible)\n{\n\tvisible = (visible != null) ? visible : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvisible = visible && this.graph.isCellVisible(cell);\n\t\tvar state = this.getState(cell, visible);\n\t\t\n\t\tif (state != null && !visible)\n\t\t{\n\t\t\tthis.removeState(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tthis.validateCell(model.getChildAt(cell, i), visible &&\n\t\t\t\t\t(!this.isCellCollapsed(cell) || cell == this.currentRoot));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: validateCellState\n * \n * Validates and repaints the <mxCellState> for the given <mxCell>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose <mxCellState> should be validated.\n * recurse - Optional boolean indicating if the children of the cell should be\n * validated. Default is true.\n */\nmxGraphView.prototype.validateCellState = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tvar model = this.graph.getModel();\n\t\t\t\n\t\t\tif (state.invalid)\n\t\t\t{\n\t\t\t\tstate.invalid = false;\n\t\t\t\t\n\t\t\t\tif (state.style == null || state.invalidStyle)\n\t\t\t\t{\n\t\t\t\t\tstate.style = this.graph.getCellStyle(state.cell);\n\t\t\t\t\tstate.invalidStyle = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (cell != this.currentRoot)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getParent(cell), false);\n\t\t\t\t}\n\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, true), false), true);\n\t\t\t\tstate.setVisibleTerminalState(this.validateCellState(this.getVisibleTerminal(cell, false), false), false);\n\t\t\t\t\n\t\t\t\tthis.updateCellState(state);\n\t\t\t\t\n\t\t\t\t// Repaint happens immediately after the cell is validated\n\t\t\t\tif (cell != this.currentRoot && !state.invalid)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.cellRenderer.redraw(state, false, this.isRendering());\n\n\t\t\t\t\t// Handles changes to invertex paintbounds after update of rendering shape\n\t\t\t\t\tstate.updateCachedBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (recurse && !state.invalid)\n\t\t\t{\n\t\t\t\t// Updates order in DOM if recursively traversing\n\t\t\t\tif (state.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.stateValidated(state);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tthis.validateCellState(model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: updateCellState\n * \n * Updates the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to be updated.\n */\nmxGraphView.prototype.updateCellState = function(state)\n{\n\tstate.absoluteOffset.x = 0;\n\tstate.absoluteOffset.y = 0;\n\tstate.origin.x = 0;\n\tstate.origin.y = 0;\n\tstate.length = 0;\n\t\n\tif (state.cell != this.currentRoot)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\tvar pState = this.getState(model.getParent(state.cell)); \n\t\t\n\t\tif (pState != null && pState.cell != this.currentRoot)\n\t\t{\n\t\t\tstate.origin.x += pState.origin.x;\n\t\t\tstate.origin.y += pState.origin.y;\n\t\t}\n\t\t\n\t\tvar offset = this.graph.getChildOffsetForCell(state.cell);\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tstate.origin.x += offset.x;\n\t\t\tstate.origin.y += offset.y;\n\t\t}\n\t\t\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\t\t\t\t\n\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tif (!model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\toffset = geo.offset || this.EMPTY_POINT;\n\t\n\t\t\t\tif (geo.relative && pState != null)\n\t\t\t\t{\n\t\t\t\t\tif (model.isEdge(pState.cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar origin = this.getPoint(pState, geo);\n\n\t\t\t\t\t\tif (origin != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate.origin.x += (origin.x / this.scale) - pState.origin.x - this.translate.x;\n\t\t\t\t\t\t\tstate.origin.y += (origin.y / this.scale) - pState.origin.y - this.translate.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstate.origin.x += geo.x * pState.width / this.scale + offset.x;\n\t\t\t\t\t\tstate.origin.y += geo.y * pState.height / this.scale + offset.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tstate.absoluteOffset.x = this.scale * offset.x;\n\t\t\t\t\tstate.absoluteOffset.y = this.scale * offset.y;\n\t\t\t\t\tstate.origin.x += geo.x;\n\t\t\t\t\tstate.origin.y += geo.y;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tstate.x = this.scale * (this.translate.x + state.origin.x);\n\t\t\tstate.y = this.scale * (this.translate.y + state.origin.y);\n\t\t\tstate.width = this.scale * geo.width;\n\t\t\tstate.unscaledWidth = geo.width;\n\t\t\tstate.height = this.scale * geo.height;\n\t\t\t\n\t\t\tif (model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateVertexState(state, geo);\n\t\t\t}\n\t\t\t\n\t\t\tif (model.isEdge(state.cell))\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(state, geo);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate.updateCachedBounds();\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the children of the given cell should not be visible in the\n * view. This implementation uses <mxGraph.isCellVisible> but it can be\n * overidden to use a separate condition.\n */\nmxGraphView.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.graph.isCellCollapsed(cell);\n};\n\n/**\n * Function: updateVertexState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateVertexState = function(state, geo)\n{\n\tvar model = this.graph.getModel();\n\tvar pState = this.getState(model.getParent(state.cell));\n\t\n\tif (geo.relative && pState != null && !model.isEdge(pState.cell))\n\t{\n\t\tvar alpha = mxUtils.toRadians(pState.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(ct, cos, sin, cx);\n\t\t\tstate.x = pt.x - state.width / 2;\n\t\t\tstate.y = pt.y - state.height / 2;\n\t\t}\n\t}\n\t\n\tthis.updateVertexLabelOffset(state);\n};\n\n/**\n * Function: updateEdgeState\n * \n * Validates the given cell state.\n */\nmxGraphView.prototype.updateEdgeState = function(state, geo)\n{\n\tvar source = state.getVisibleTerminalState(true);\n\tvar target = state.getVisibleTerminalState(false);\n\t\n\t// This will remove edges with no terminals and no terminal points\n\t// as such edges are invalid and produce NPEs in the edge styles.\n\t// Also removes connected edges that have no visible terminals.\n\tif ((this.graph.model.getTerminal(state.cell, true) != null && source == null) ||\n\t\t(source == null && geo.getTerminalPoint(true) == null) ||\n\t\t(this.graph.model.getTerminal(state.cell, false) != null && target == null) ||\n\t\t(target == null && geo.getTerminalPoint(false) == null))\n\t{\n\t\tthis.clear(state.cell, true);\n\t}\n\telse\n\t{\n\t\tthis.updateFixedTerminalPoints(state, source, target);\n\t\tthis.updatePoints(state, geo.points, source, target);\n\t\tthis.updateFloatingTerminalPoints(state, source, target);\n\t\t\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (state.cell != this.currentRoot && (pts == null || pts.length < 2 ||\n\t\t\tpts[0] == null || pts[pts.length - 1] == null))\n\t\t{\n\t\t\t// This will remove edges with invalid points from the list of states in the view.\n\t\t\t// Happens if the one of the terminals and the corresponding terminal point is null.\n\t\t\tthis.clear(state.cell, true);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.updateEdgeBounds(state);\n\t\t\tthis.updateEdgeLabelOffset(state);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateVertexLabelOffset\n * \n * Updates the absoluteOffset of the given vertex cell state. This takes\n * into account the label position styles.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateVertexLabelOffset = function(state)\n{\n\tvar h = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_POSITION, mxConstants.ALIGN_CENTER);\n\n\tif (h == mxConstants.ALIGN_LEFT)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\tlw *= this.scale;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlw = state.width;\n\t\t}\n\t\t\n\t\tstate.absoluteOffset.x -= lw;\n\t}\n\telse if (h == mxConstants.ALIGN_RIGHT)\n\t{\n\t\tstate.absoluteOffset.x += state.width;\n\t}\n\telse if (h == mxConstants.ALIGN_CENTER)\n\t{\n\t\tvar lw = mxUtils.getValue(state.style, mxConstants.STYLE_LABEL_WIDTH, null);\n\t\t\n\t\tif (lw != null)\n\t\t{\n\t\t\t// Aligns text block with given width inside the vertex width\n\t\t\tvar align = mxUtils.getValue(state.style, mxConstants.STYLE_ALIGN, mxConstants.ALIGN_CENTER);\n\t\t\tvar dx = 0;\n\t\t\t\n\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t{\n\t\t\t\tdx = 0.5;\n\t\t\t}\n\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t{\n\t\t\t\tdx = 1;\n\t\t\t}\n\t\t\t\n\t\t\tif (dx != 0)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset.x -= (lw * this.scale - state.width) * dx;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar v = mxUtils.getValue(state.style, mxConstants.STYLE_VERTICAL_LABEL_POSITION, mxConstants.ALIGN_MIDDLE);\n\t\n\tif (v == mxConstants.ALIGN_TOP)\n\t{\n\t\tstate.absoluteOffset.y -= state.height;\n\t}\n\telse if (v == mxConstants.ALIGN_BOTTOM)\n\t{\n\t\tstate.absoluteOffset.y += state.height;\n\t}\n};\n\n/**\n * Function: resetValidationState\n *\n * Resets the current validation state.\n */\nmxGraphView.prototype.resetValidationState = function()\n{\n\tthis.lastNode = null;\n\tthis.lastHtmlNode = null;\n\tthis.lastForegroundNode = null;\n\tthis.lastForegroundHtmlNode = null;\n};\n\n/**\n * Function: stateValidated\n * \n * Invoked when a state has been processed in <validatePoints>. This is used\n * to update the order of the DOM nodes of the shape.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n */\nmxGraphView.prototype.stateValidated = function(state)\n{\n\tvar fg = (this.graph.getModel().isEdge(state.cell) && this.graph.keepEdgesInForeground) ||\n\t\t(this.graph.getModel().isVertex(state.cell) && this.graph.keepEdgesInBackground);\n\tvar htmlNode = (fg) ? this.lastForegroundHtmlNode || this.lastHtmlNode : this.lastHtmlNode;\n\tvar node = (fg) ? this.lastForegroundNode || this.lastNode : this.lastNode;\n\tvar result = this.graph.cellRenderer.insertStateAfter(state, node, htmlNode);\n\n\tif (fg)\n\t{\n\t\tthis.lastForegroundHtmlNode = result[1];\n\t\tthis.lastForegroundNode = result[0];\n\t}\n\telse\n\t{\n\t\tthis.lastHtmlNode = result[1];\n\t\tthis.lastNode = result[0];\n\t}\n};\n\n/**\n * Function: updateFixedTerminalPoints\n *\n * Sets the initial absolute terminal points in the given state before the edge\n * style is computed.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose initial terminal points should be updated.\n * source - <mxCellState> which represents the source terminal.\n * target - <mxCellState> which represents the target terminal.\n */\nmxGraphView.prototype.updateFixedTerminalPoints = function(edge, source, target)\n{\n\tthis.updateFixedTerminalPoint(edge, source, true,\n\t\tthis.graph.getConnectionConstraint(edge, source, true));\n\tthis.updateFixedTerminalPoint(edge, target, false,\n\t\tthis.graph.getConnectionConstraint(edge, target, false));\n};\n\n/**\n * Function: updateFixedTerminalPoint\n *\n * Sets the fixed source or target terminal point on the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.updateFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFixedTerminalPoint(edge, terminal, source, constraint), source);\n};\n\n/**\n * Function: getFixedTerminalPoint\n *\n * Returns the fixed source or target terminal point for the given edge.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * terminal - <mxCellState> which represents the actual terminal.\n * source - Boolean that specifies if the terminal is the source.\n * constraint - <mxConnectionConstraint> that specifies the connection.\n */\nmxGraphView.prototype.getFixedTerminalPoint = function(edge, terminal, source, constraint)\n{\n\tvar pt = null;\n\t\n\tif (constraint != null)\n\t{\n\t\tpt = this.graph.getConnectionPoint(terminal, constraint, this.graph.isOrthogonal(edge));\n\t}\n\t\n\tif (pt == null && terminal == null)\n\t{\n\t\tvar s = this.scale;\n\t\tvar tr = this.translate;\n\t\tvar orig = edge.origin;\n\t\tvar geo = this.graph.getCellGeometry(edge.cell);\n\t\tpt = geo.getTerminalPoint(source);\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tpt = new mxPoint(s * (tr.x + pt.x + orig.x),\n\t\t\t\t\t\t\t s * (tr.y + pt.y + orig.y));\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: updateBoundsFromStencil\n * \n * Updates the bounds of the given cell state to reflect the bounds of the stencil\n * if it has a fixed aspect and returns the previous bounds as an <mxRectangle> if\n * the bounds have been modified or null otherwise.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateBoundsFromStencil = function(state)\n{\n\tvar previous = null;\n\t\n\tif (state != null && state.shape != null && state.shape.stencil != null && state.shape.stencil.aspect == 'fixed')\n\t{\n\t\tprevious = mxRectangle.fromRectangle(state);\n\t\tvar asp = state.shape.stencil.computeAspect(state.style, state.x, state.y, state.width, state.height);\n\t\tstate.setRect(asp.x, asp.y, state.shape.stencil.w0 * asp.width, state.shape.stencil.h0 * asp.height);\n\t}\n\t\n\treturn previous;\n};\n\n/**\n * Function: updatePoints\n *\n * Updates the absolute points in the given state using the specified array\n * of <mxPoints> as the relative points.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose absolute points should be updated.\n * points - Array of <mxPoints> that constitute the relative points.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updatePoints = function(edge, points, source, target)\n{\n\tif (edge != null)\n\t{\n\t\tvar pts = [];\n\t\tpts.push(edge.absolutePoints[0]);\n\t\tvar edgeStyle = this.getEdgeStyle(edge, points, source, target);\n\t\t\n\t\tif (edgeStyle != null)\n\t\t{\n\t\t\tvar src = this.getTerminalPort(edge, source, true);\n\t\t\tvar trg = this.getTerminalPort(edge, target, false);\n\t\t\t\n\t\t\t// Uses the stencil bounds for routing and restores after routing\n\t\t\tvar srcBounds = this.updateBoundsFromStencil(src);\n\t\t\tvar trgBounds = this.updateBoundsFromStencil(trg);\n\n\t\t\tedgeStyle(edge, src, trg, points, pts);\n\t\t\t\n\t\t\t// Restores previous bounds\n\t\t\tif (srcBounds != null)\n\t\t\t{\n\t\t\t\tsrc.setRect(srcBounds.x, srcBounds.y, srcBounds.width, srcBounds.height);\n\t\t\t}\n\t\t\t\n\t\t\tif (trgBounds != null)\n\t\t\t{\n\t\t\t\ttrg.setRect(trgBounds.x, trgBounds.y, trgBounds.width, trgBounds.height);\n\t\t\t}\n\t\t}\n\t\telse if (points != null)\n\t\t{\n\t\t\tfor (var i = 0; i < points.length; i++)\n\t\t\t{\n\t\t\t\tif (points[i] != null)\n\t\t\t\t{\n\t\t\t\t\tvar pt = mxUtils.clone(points[i]);\n\t\t\t\t\tpts.push(this.transformControlPoint(edge, pt));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar tmp = edge.absolutePoints;\n\t\tpts.push(tmp[tmp.length-1]);\n\n\t\tedge.absolutePoints = pts;\n\t}\n};\n\n/**\n * Function: transformControlPoint\n *\n * Transforms the given control point to an absolute point.\n */\nmxGraphView.prototype.transformControlPoint = function(state, pt)\n{\n\tif (state != null && pt != null)\n\t{\n\t\tvar orig = state.origin;\n\t\t\n\t    return new mxPoint(this.scale * (pt.x + this.translate.x + orig.x),\n\t    \tthis.scale * (pt.y + this.translate.y + orig.y));\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: isLoopStyleEnabled\n * \n * Returns true if the given edge should be routed with <mxGraph.defaultLoopStyle>\n * or the <mxConstants.STYLE_LOOP> defined for the given edge. This implementation\n * returns true if the given edge is a loop and does not have connections constraints\n * associated.\n */\nmxGraphView.prototype.isLoopStyleEnabled = function(edge, points, source, target)\n{\n\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\n\tif ((points == null || points.length < 2) &&\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_ORTHOGONAL_LOOP, false) ||\n\t\t((sc == null || sc.point == null) && (tc == null || tc.point == null))))\n\t{\n\t\treturn source != null && source == target;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns the edge style function to be used to render the given edge state.\n */\nmxGraphView.prototype.getEdgeStyle = function(edge, points, source, target)\n{\n\tvar edgeStyle = this.isLoopStyleEnabled(edge, points, source, target) ?\n\t\tmxUtils.getValue(edge.style, mxConstants.STYLE_LOOP, this.graph.defaultLoopStyle) :\n\t\t(!mxUtils.getValue(edge.style, mxConstants.STYLE_NOEDGESTYLE, false) ?\n\t\tedge.style[mxConstants.STYLE_EDGE] : null);\n\n\t// Converts string values to objects\n\tif (typeof(edgeStyle) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(edgeStyle);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(edgeStyle);\n\t\t}\n\t\t\n\t\tedgeStyle = tmp;\n\t}\n\t\n\tif (typeof(edgeStyle) == \"function\")\n\t{\n\t\treturn edgeStyle;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: updateFloatingTerminalPoints\n *\n * Updates the terminal points in the given state after the edge style was\n * computed for the edge.\n * \n * Parameters:\n * \n * state - <mxCellState> whose terminal points should be updated.\n * source - <mxCellState> that represents the source terminal.\n * target - <mxCellState> that represents the target terminal.\n */\nmxGraphView.prototype.updateFloatingTerminalPoints = function(state, source, target)\n{\n\tvar pts = state.absolutePoints;\n\tvar p0 = pts[0];\n\tvar pe = pts[pts.length - 1];\n\n\tif (pe == null && target != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, target, source, false);\n\t}\n\t\n\tif (p0 == null && source != null)\n\t{\n\t\tthis.updateFloatingTerminalPoint(state, source, target, true);\n\t}\n};\n\n/**\n * Function: updateFloatingTerminalPoint\n *\n * Updates the absolute terminal point in the given state for the given\n * start and end state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be updated.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.updateFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tedge.setAbsoluteTerminalPoint(this.getFloatingTerminalPoint(edge, start, end, source), source);\n};\n\n/**\n * Function: getFloatingTerminalPoint\n * \n * Returns the floating terminal point for the given edge, start and end\n * state, where start is the source if source is true.\n * \n * Parameters:\n * \n * edge - <mxCellState> whose terminal point should be returned.\n * start - <mxCellState> for the terminal on \"this\" side of the edge.\n * end - <mxCellState> for the terminal on the other side of the edge.\n * source - Boolean indicating if start is the source terminal state.\n */\nmxGraphView.prototype.getFloatingTerminalPoint = function(edge, start, end, source)\n{\n\tstart = this.getTerminalPort(edge, start, source);\n\tvar next = this.getNextPoint(edge, end, source);\n\t\n\tvar orth = this.graph.isOrthogonal(edge);\n\tvar alpha = mxUtils.toRadians(Number(start.style[mxConstants.STYLE_ROTATION] || '0'));\n\tvar center = new mxPoint(start.getCenterX(), start.getCenterY());\n\t\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(-alpha);\n\t\tvar sin = Math.sin(-alpha);\n\t\tnext = mxUtils.getRotatedPoint(next, cos, sin, center);\n\t}\n\t\n\tvar border = parseFloat(edge.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\tborder += parseFloat(edge.style[(source) ?\n\t\tmxConstants.STYLE_SOURCE_PERIMETER_SPACING :\n\t\tmxConstants.STYLE_TARGET_PERIMETER_SPACING] || 0);\n\tvar pt = this.getPerimeterPoint(start, next, alpha == 0 && orth, border);\n\n\tif (alpha != 0)\n\t{\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, center);\n\t}\n\n\treturn pt;\n};\n\n/**\n * Function: getTerminalPort\n * \n * Returns an <mxCellState> that represents the source or target terminal or\n * port for the given edge.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the given terminal is the source terminal.\n */\nmxGraphView.prototype.getTerminalPort = function(state, terminal, source)\n{\n\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\tmxConstants.STYLE_TARGET_PORT;\n\tvar id = mxUtils.getValue(state.style, key);\n\t\n\tif (id != null)\n\t{\n\t\tvar tmp = this.getState(this.graph.getModel().getCell(id));\n\t\t\n\t\t// Only uses ports where a cell state exists\n\t\tif (tmp != null)\n\t\t{\n\t\t\tterminal = tmp;\n\t\t}\n\t}\n\t\n\treturn terminal;\n};\n\n/**\n * Function: getPerimeterPoint\n *\n * Returns an <mxPoint> that defines the location of the intersection point between\n * the perimeter and the line between the center of the shape and the given point.\n * \n * Parameters:\n * \n * terminal - <mxCellState> for the source or target terminal.\n * next - <mxPoint> that lies outside of the given terminal.\n * orthogonal - Boolean that specifies if the orthogonal projection onto\n * the perimeter should be returned. If this is false then the intersection\n * of the perimeter and the line between the next and the center point is\n * returned.\n * border - Optional border between the perimeter and the shape.\n */\nmxGraphView.prototype.getPerimeterPoint = function(terminal, next, orthogonal, border)\n{\n\tvar point = null;\n\t\n\tif (terminal != null)\n\t{\n\t\tvar perimeter = this.getPerimeterFunction(terminal);\n\t\t\n\t\tif (perimeter != null && next != null)\n\t\t{\n\t\t\tvar bounds = this.getPerimeterBounds(terminal, border);\n\n\t\t\tif (bounds.width > 0 || bounds.height > 0)\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(next.x, next.y);\n\t\t\t\tvar flipH = false;\n\t\t\t\tvar flipV = false;\t\n\t\t\t\t\n\t\t\t\tif (this.graph.model.isVertex(terminal.cell))\n\t\t\t\t{\n\t\t\t\t\tflipH = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tflipV = mxUtils.getValue(terminal.style, mxConstants.STYLE_FLIPV, 0) == 1;\t\n\t\n\t\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\t\tif (terminal.shape != null && terminal.shape.stencil != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflipH = (mxUtils.getValue(terminal.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\t\tflipV = (mxUtils.getValue(terminal.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpoint = perimeter(bounds, terminal, point, orthogonal);\n\n\t\t\t\tif (point != null)\n\t\t\t\t{\n\t\t\t\t\tif (flipH)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (flipV)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (point == null)\n\t\t{\n\t\t\tpoint = this.getPoint(terminal);\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getRoutingCenterX\n * \n * Returns the x-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterX = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_X]) || 0 : 0;\n\n\treturn state.getCenterX() + f * state.width;\n};\n\n/**\n * Function: getRoutingCenterY\n * \n * Returns the y-coordinate of the center point for automatic routing.\n */\nmxGraphView.prototype.getRoutingCenterY = function (state)\n{\n\tvar f = (state.style != null) ? parseFloat(state.style\n\t\t[mxConstants.STYLE_ROUTING_CENTER_Y]) || 0 : 0;\n\n\treturn state.getCenterY() + f * state.height;\n};\n\n/**\n * Function: getPerimeterBounds\n *\n * Returns the perimeter bounds for the given terminal, edge pair as an\n * <mxRectangle>.\n * \n * If you have a model where each terminal has a relative child that should\n * act as the graphical endpoint for a connection from/to the terminal, then\n * this method can be replaced as follows:\n * \n * (code)\n * var oldGetPerimeterBounds = mxGraphView.prototype.getPerimeterBounds;\n * mxGraphView.prototype.getPerimeterBounds = function(terminal, edge, isSource)\n * {\n *   var model = this.graph.getModel();\n *   var childCount = model.getChildCount(terminal.cell);\n * \n *   if (childCount > 0)\n *   {\n *     var child = model.getChildAt(terminal.cell, 0);\n *     var geo = model.getGeometry(child);\n *\n *     if (geo != null &&\n *         geo.relative)\n *     {\n *       var state = this.getState(child);\n *       \n *       if (state != null)\n *       {\n *         terminal = state;\n *       }\n *     }\n *   }\n *   \n *   return oldGetPerimeterBounds.apply(this, arguments);\n * };\n * (end)\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * border - Number that adds a border between the shape and the perimeter.\n */\nmxGraphView.prototype.getPerimeterBounds = function(terminal, border)\n{\n\tborder = (border != null) ? border : 0;\n\n\tif (terminal != null)\n\t{\n\t\tborder += parseFloat(terminal.style[mxConstants.STYLE_PERIMETER_SPACING] || 0);\n\t}\n\n\treturn terminal.getPerimeterBounds(border * this.scale);\n};\n\n/**\n * Function: getPerimeterFunction\n *\n * Returns the perimeter function for the given state.\n */\nmxGraphView.prototype.getPerimeterFunction = function(state)\n{\n\tvar perimeter = state.style[mxConstants.STYLE_PERIMETER];\n\n\t// Converts string values to objects\n\tif (typeof(perimeter) == \"string\")\n\t{\n\t\tvar tmp = mxStyleRegistry.getValue(perimeter);\n\t\t\n\t\tif (tmp == null && this.isAllowEval())\n\t\t{\n \t\t\ttmp = mxUtils.eval(perimeter);\n\t\t}\n\n\t\tperimeter = tmp;\n\t}\n\t\n\tif (typeof(perimeter) == \"function\")\n\t{\n\t\treturn perimeter;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getNextPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * opposite - <mxCellState> that represents the opposite terminal.\n * source - Boolean indicating if the next point for the source or target\n * should be returned.\n */\nmxGraphView.prototype.getNextPoint = function(edge, opposite, source)\n{\n\tvar pts = edge.absolutePoints;\n\tvar point = null;\n\t\n\tif (pts != null && pts.length >= 2)\n\t{\n\t\tvar count = pts.length;\n\t\tpoint = pts[(source) ? Math.min(1, count - 1) : Math.max(0, count - 2)];\n\t}\n\t\n\tif (point == null && opposite != null)\n\t{\n\t\tpoint = new mxPoint(opposite.getCenterX(), opposite.getCenterY());\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getVisibleTerminal\n *\n * Returns the nearest ancestor terminal that is visible. The edge appears\n * to be connected to this terminal on the display. The result of this method\n * is cached in <mxCellState.getVisibleTerminalState>.\n * \n * Parameters:\n * \n * edge - <mxCell> whose visible terminal should be returned.\n * source - Boolean that specifies if the source or target terminal\n * should be returned.\n */\nmxGraphView.prototype.getVisibleTerminal = function(edge, source)\n{\n\tvar model = this.graph.getModel();\n\tvar result = model.getTerminal(edge, source);\n\tvar best = result;\n\t\n\twhile (result != null && result != this.currentRoot)\n\t{\n\t\tif (!this.graph.isCellVisible(best) || this.isCellCollapsed(result))\n\t\t{\n\t\t\tbest = result;\n\t\t}\n\t\t\n\t\tresult = model.getParent(result);\n\t}\n\n\t// Checks if the result is valid for the current view state\n\tif (best != null && (!model.contains(best) ||\n\t\tmodel.getParent(best) == model.getRoot() ||\n\t\tbest == this.currentRoot))\n\t{\n\t\tbest = null;\n\t}\n\t\n\treturn best;\n};\n\n/**\n * Function: updateEdgeBounds\n *\n * Updates the given state using the bounding box of t\n * he absolute points.\n * Also updates <mxCellState.terminalDistance>, <mxCellState.length> and\n * <mxCellState.segments>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose bounds should be updated.\n */\nmxGraphView.prototype.updateEdgeBounds = function(state)\n{\n\tvar points = state.absolutePoints;\n\tvar p0 = points[0];\n\tvar pe = points[points.length - 1];\n\t\n\tif (p0.x != pe.x || p0.y != pe.y)\n\t{\n\t\tvar dx = pe.x - p0.x;\n\t\tvar dy = pe.y - p0.y;\n\t\tstate.terminalDistance = Math.sqrt(dx * dx + dy * dy);\n\t}\n\telse\n\t{\n\t\tstate.terminalDistance = 0;\n\t}\n\t\n\tvar length = 0;\n\tvar segments = [];\n\tvar pt = p0;\n\t\n\tif (pt != null)\n\t{\n\t\tvar minX = pt.x;\n\t\tvar minY = pt.y;\n\t\tvar maxX = minX;\n\t\tvar maxY = minY;\n\t\t\n\t\tfor (var i = 1; i < points.length; i++)\n\t\t{\n\t\t\tvar tmp = points[i];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar dx = pt.x - tmp.x;\n\t\t\t\tvar dy = pt.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar segment = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tsegments.push(segment);\n\t\t\t\tlength += segment;\n\t\t\t\t\n\t\t\t\tpt = tmp;\n\t\t\t\t\n\t\t\t\tminX = Math.min(pt.x, minX);\n\t\t\t\tminY = Math.min(pt.y, minY);\n\t\t\t\tmaxX = Math.max(pt.x, maxX);\n\t\t\t\tmaxY = Math.max(pt.y, maxY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tstate.length = length;\n\t\tstate.segments = segments;\n\t\t\n\t\tvar markerSize = 1; // TODO: include marker size\n\t\t\n\t\tstate.x = minX;\n\t\tstate.y = minY;\n\t\tstate.width = Math.max(markerSize, maxX - minX);\n\t\tstate.height = Math.max(markerSize, maxY - minY);\n\t}\n};\n\n/**\n * Function: getPoint\n *\n * Returns the absolute point on the edge for the given relative\n * <mxGeometry> as an <mxPoint>. The edge is represented by the given\n * <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * geometry - <mxGeometry> that represents the relative location.\n */\nmxGraphView.prototype.getPoint = function(state, geometry)\n{\n\tvar x = state.getCenterX();\n\tvar y = state.getCenterY();\n\t\n\tif (state.segments != null && (geometry == null || geometry.relative))\n\t{\n\t\tvar gx = (geometry != null) ? geometry.x / 2 : 0;\n\t\tvar pointCount = state.absolutePoints.length;\n\t\tvar dist = Math.round((gx + 0.5) * state.length);\n\t\tvar segment = state.segments[0];\n\t\tvar length = 0;\t\t\t\t\n\t\tvar index = 1;\n\n\t\twhile (dist >= Math.round(length + segment) && index < pointCount - 1)\n\t\t{\n\t\t\tlength += segment;\n\t\t\tsegment = state.segments[index++];\n\t\t}\n\n\t\tvar factor = (segment == 0) ? 0 : (dist - length) / segment;\n\t\tvar p0 = state.absolutePoints[index-1];\n\t\tvar pe = state.absolutePoints[index];\n\n\t\tif (p0 != null && pe != null)\n\t\t{\n\t\t\tvar gy = 0;\n\t\t\tvar offsetX = 0;\n\t\t\tvar offsetY = 0;\n\n\t\t\tif (geometry != null)\n\t\t\t{\n\t\t\t\tgy = geometry.y;\n\t\t\t\tvar offset = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (offset != null)\n\t\t\t\t{\n\t\t\t\t\toffsetX = offset.x;\n\t\t\t\t\toffsetY = offset.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dx = pe.x - p0.x;\n\t\t\tvar dy = pe.y - p0.y;\n\t\t\tvar nx = (segment == 0) ? 0 : dy / segment;\n\t\t\tvar ny = (segment == 0) ? 0 : dx / segment;\n\t\t\t\n\t\t\tx = p0.x + dx * factor + (nx * gy + offsetX) * this.scale;\n\t\t\ty = p0.y + dy * factor - (ny * gy - offsetY) * this.scale;\n\t\t}\n\t}\n\telse if (geometry != null)\n\t{\n\t\tvar offset = geometry.offset;\n\t\t\n\t\tif (offset != null)\n\t\t{\n\t\t\tx += offset.x;\n\t\t\ty += offset.y;\n\t\t}\n\t}\n\t\n\treturn new mxPoint(x, y);\t\t\n};\n\n/**\n * Function: getRelativePoint\n *\n * Gets the relative point that describes the given, absolute label\n * position for the given edge state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the state of the parent edge.\n * x - Specifies the x-coordinate of the absolute label location.\n * y - Specifies the y-coordinate of the absolute label location.\n */\nmxGraphView.prototype.getRelativePoint = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar pointCount = edgeState.absolutePoints.length;\n\t\t\n\t\tif (geometry.relative && pointCount > 1)\n\t\t{\n\t\t\tvar totalLength = edgeState.length;\n\t\t\tvar segments = edgeState.segments;\n\n\t\t\t// Works which line segment the point of the label is closest to\n\t\t\tvar p0 = edgeState.absolutePoints[0];\n\t\t\tvar pe = edgeState.absolutePoints[1];\n\t\t\tvar minDist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tvar index = 0;\n\t\t\tvar tmp = 0;\n\t\t\tvar length = 0;\n\t\t\t\n\t\t\tfor (var i = 2; i < pointCount; i++)\n\t\t\t{\n\t\t\t\ttmp += segments[i - 2];\n\t\t\t\tpe = edgeState.absolutePoints[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\t\tif (dist <= minDist)\n\t\t\t\t{\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tindex = i - 1;\n\t\t\t\t\tlength = tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tp0 = pe;\n\t\t\t}\n\t\t\t\n\t\t\tvar seg = segments[index];\n\t\t\tp0 = edgeState.absolutePoints[index];\n\t\t\tpe = edgeState.absolutePoints[index + 1];\n\t\t\t\n\t\t\tvar x2 = p0.x;\n\t\t\tvar y2 = p0.y;\n\t\t\t\n\t\t\tvar x1 = pe.x;\n\t\t\tvar y1 = pe.y;\n\t\t\t\n\t\t\tvar px = x;\n\t\t\tvar py = y;\n\t\t\t\n\t\t\tvar xSegment = x2 - x1;\n\t\t\tvar ySegment = y2 - y1;\n\t\t\t\n\t\t\tpx -= x1;\n\t\t\tpy -= y1;\n\t\t\tvar projlenSq = 0;\n\t\t\t\n\t\t\tpx = xSegment - px;\n\t\t\tpy = ySegment - py;\n\t\t\tvar dotprod = px * xSegment + py * ySegment;\n\n\t\t\tif (dotprod <= 0.0)\n\t\t\t{\n\t\t\t\tprojlenSq = 0;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tprojlenSq = dotprod * dotprod\n\t\t\t\t\t\t/ (xSegment * xSegment + ySegment * ySegment);\n\t\t\t}\n\n\t\t\tvar projlen = Math.sqrt(projlenSq);\n\n\t\t\tif (projlen > seg)\n\t\t\t{\n\t\t\t\tprojlen = seg;\n\t\t\t}\n\n\t\t\tvar yDistance = Math.sqrt(mxUtils.ptSegDistSq(p0.x, p0.y, pe\n\t\t\t\t\t.x, pe.y, x, y));\n\t\t\tvar direction = mxUtils.relativeCcw(p0.x, p0.y, pe.x, pe.y, x, y);\n\n\t\t\tif (direction == -1)\n\t\t\t{\n\t\t\t\tyDistance = -yDistance;\n\t\t\t}\n\n\t\t\t// Constructs the relative point for the label\n\t\t\treturn new mxPoint(((totalLength / 2 - length - projlen) / totalLength) * -2,\n\t\t\t\t\t\tyDistance / this.scale);\n\t\t}\n\t}\n\t\n\treturn new mxPoint();\n};\n\n/**\n * Function: updateEdgeLabelOffset\n *\n * Updates <mxCellState.absoluteOffset> for the given state. The absolute\n * offset is normally used for the position of the edge label. Is is\n * calculated from the geometry as an absolute offset from the center\n * between the two endpoints if the geometry is absolute, or as the\n * relative distance between the center along the line and the absolute\n * orthogonal distance if the geometry is relative.\n * \n * Parameters:\n * \n * state - <mxCellState> whose absolute offset should be updated.\n */\nmxGraphView.prototype.updateEdgeLabelOffset = function(state)\n{\n\tvar points = state.absolutePoints;\n\t\n\tstate.absoluteOffset.x = state.getCenterX();\n\tstate.absoluteOffset.y = state.getCenterY();\n\n\tif (points != null && points.length > 0 && state.segments != null)\n\t{\n\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\tvar offset = this.getPoint(state, geometry);\n\t\t\t\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\tstate.absoluteOffset = offset;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar dx = pe.x - p0.x;\n\t\t\t\tvar dy = pe.y - p0.y;\n\t\t\t\tvar x0 = 0;\n\t\t\t\tvar y0 = 0;\n\n\t\t\t\tvar off = geometry.offset;\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tx0 = off.x;\n\t\t\t\t\ty0 = off.y;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar x = p0.x + dx / 2 + x0 * this.scale;\n\t\t\t\tvar y = p0.y + dy / 2 + y0 * this.scale;\n\t\t\t\t\n\t\t\t\tstate.absoluteOffset.x = x;\n\t\t\t\tstate.absoluteOffset.y = y;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getState\n *\n * Returns the <mxCellState> for the given cell. If create is true, then\n * the state is created if it does not yet exist.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be returned.\n * create - Optional boolean indicating if a new state should be created\n * if it does not yet exist. Default is false.\n */\nmxGraphView.prototype.getState = function(cell, create)\n{\n\tcreate = create || false;\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.get(cell);\n\t\t\n\t\tif (create && (state == null || this.updateStyle) && this.graph.isCellVisible(cell))\n\t\t{\n\t\t\tif (state == null)\n\t\t\t{\n\t\t\t\tstate = this.createState(cell);\n\t\t\t\tthis.states.put(cell, state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.style = this.graph.getCellStyle(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn state;\n};\n\n/**\n * Function: isRendering\n *\n * Returns <rendering>.\n */\nmxGraphView.prototype.isRendering = function()\n{\n\treturn this.rendering;\n};\n\n/**\n * Function: setRendering\n *\n * Sets <rendering>.\n */\nmxGraphView.prototype.setRendering = function(value)\n{\n\tthis.rendering = value;\n};\n\n/**\n * Function: isAllowEval\n *\n * Returns <allowEval>.\n */\nmxGraphView.prototype.isAllowEval = function()\n{\n\treturn this.allowEval;\n};\n\n/**\n * Function: setAllowEval\n *\n * Sets <allowEval>.\n */\nmxGraphView.prototype.setAllowEval = function(value)\n{\n\tthis.allowEval = value;\n};\n\n/**\n * Function: getStates\n *\n * Returns <states>.\n */\nmxGraphView.prototype.getStates = function()\n{\n\treturn this.states;\n};\n\n/**\n * Function: setStates\n *\n * Sets <states>.\n */\nmxGraphView.prototype.setStates = function(value)\n{\n\tthis.states = value;\n};\n\n/**\n * Function: getCellStates\n *\n * Returns the <mxCellStates> for the given array of <mxCells>. The array\n * contains all states that are not null, that is, the returned array may\n * have less elements than the given array. If no argument is given, then\n * this returns <states>.\n */\nmxGraphView.prototype.getCellStates = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\treturn this.states;\n\t}\n\telse\n\t{\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar state = this.getState(cells[i]);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tresult.push(state);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: removeState\n *\n * Removes and returns the <mxCellState> for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the <mxCellState> should be removed.\n */\nmxGraphView.prototype.removeState = function(cell)\n{\n\tvar state = null;\n\t\n\tif (cell != null)\n\t{\n\t\tstate = this.states.remove(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.graph.cellRenderer.destroy(state);\n\t\t\tstate.invalid = true;\n\t\t\tstate.destroy();\n\t\t}\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: createState\n *\n * Creates and returns an <mxCellState> for the given cell and initializes\n * it using <mxCellRenderer.initialize>.\n * \n * Parameters:\n * \n * cell - <mxCell> for which a new <mxCellState> should be created.\n */\nmxGraphView.prototype.createState = function(cell)\n{\n\treturn new mxCellState(this, cell, this.graph.getCellStyle(cell));\n};\n\n/**\n * Function: getCanvas\n *\n * Returns the DOM node that contains the background-, draw- and\n * overlay- and decoratorpanes.\n */\nmxGraphView.prototype.getCanvas = function()\n{\n\treturn this.canvas;\n};\n\n/**\n * Function: getBackgroundPane\n *\n * Returns the DOM node that represents the background layer.\n */\nmxGraphView.prototype.getBackgroundPane = function()\n{\n\treturn this.backgroundPane;\n};\n\n/**\n * Function: getDrawPane\n *\n * Returns the DOM node that represents the main drawing layer.\n */\nmxGraphView.prototype.getDrawPane = function()\n{\n\treturn this.drawPane;\n};\n\n/**\n * Function: getOverlayPane\n *\n * Returns the DOM node that represents the layer above the drawing layer.\n */\nmxGraphView.prototype.getOverlayPane = function()\n{\n\treturn this.overlayPane;\n};\n\n/**\n * Function: getDecoratorPane\n *\n * Returns the DOM node that represents the topmost drawing layer.\n */\nmxGraphView.prototype.getDecoratorPane = function()\n{\n\treturn this.decoratorPane;\n};\n\n/**\n * Function: isContainerEvent\n * \n * Returns true if the event origin is one of the drawing panes or\n * containers of the view.\n */\nmxGraphView.prototype.isContainerEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\n\treturn (source == this.graph.container ||\n\t\tsource.parentNode == this.backgroundPane ||\n\t\t(source.parentNode != null &&\n\t\tsource.parentNode.parentNode == this.backgroundPane) ||\n\t\tsource == this.canvas.parentNode ||\n\t\tsource == this.canvas ||\n\t\tsource == this.backgroundPane ||\n\t\tsource == this.drawPane ||\n\t\tsource == this.overlayPane ||\n\t\tsource == this.decoratorPane);\n};\n\n/**\n * Function: isScrollEvent\n * \n * Returns true if the event origin is one of the scrollbars of the\n * container in IE. Such events are ignored.\n */\n mxGraphView.prototype.isScrollEvent = function(evt)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar pt = new mxPoint(evt.clientX - offset.x, evt.clientY - offset.y);\n\n\tvar outWidth = this.graph.container.offsetWidth;\n\tvar inWidth = this.graph.container.clientWidth;\n\n\tif (outWidth > inWidth && pt.x > inWidth + 2 && pt.x <= outWidth)\n\t{\n\t\treturn true;\n\t}\n\n\tvar outHeight = this.graph.container.offsetHeight;\n\tvar inHeight = this.graph.container.clientHeight;\n\t\n\tif (outHeight > inHeight && pt.y > inHeight + 2 && pt.y <= outHeight)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: init\n *\n * Initializes the graph event dispatch loop for the specified container\n * and invokes <create> to create the required DOM nodes for the display.\n */\nmxGraphView.prototype.init = function()\n{\n\tthis.installListeners();\n\t\n\t// Creates the DOM nodes for the respective display dialect\n\tvar graph = this.graph;\n\t\n\tif (graph.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tthis.createSvg();\n\t}\n\telse if (graph.dialect == mxConstants.DIALECT_VML)\n\t{\n\t\tthis.createVml();\n\t}\n\telse\n\t{\n\t\tthis.createHtml();\n\t}\n};\n\n/**\n * Function: installListeners\n *\n * Installs the required listeners in the container.\n */\nmxGraphView.prototype.installListeners = function()\n{\n\tvar graph = this.graph;\n\tvar container = graph.container;\n\t\n\tif (container != null)\n\t{\n\t\t// Support for touch device gestures (eg. pinch to zoom)\n\t\t// Double-tap handling is implemented in mxGraph.fireMouseEvent\n\t\tif (mxClient.IS_TOUCH)\n\t\t{\n\t\t\tmxEvent.addListener(container, 'gesturestart', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t\t\n\t\t\tmxEvent.addListener(container, 'gesturechange', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\n\t\t\tmxEvent.addListener(container, 'gestureend', mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tgraph.fireGestureEvent(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}));\n\t\t}\n\t\t\n\t\t// Adds basic listeners for graph event dispatching\n\t\tmxEvent.addGestureListeners(container, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Condition to avoid scrollbar events starting a rubberband selection\n\t\t\tif (this.isContainerEvent(evt) && ((!mxClient.IS_IE && !mxClient.IS_IE11 && !mxClient.IS_GC &&\n\t\t\t\t!mxClient.IS_OP && !mxClient.IS_SF) || !this.isScrollEvent(evt)))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}),\n\t\tmxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Adds listener for double click handling on background, this does always\n\t\t// use native event handler, we assume that the DOM of the background\n\t\t// does not change during the double click\n\t\tmxEvent.addListener(container, 'dblclick', mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.isContainerEvent(evt))\n\t\t\t{\n\t\t\t\tgraph.dblClick(evt);\n\t\t\t}\n\t\t}));\n\n\t\t// Workaround for touch events which started on some DOM node\n\t\t// on top of the container, in which case the cells under the\n\t\t// mouse for the move and up events are not detected.\n\t\tvar getState = function(evt)\n\t\t{\n\t\t\tvar state = null;\n\t\t\t\n\t\t\t// Workaround for touch events which started on some DOM node\n\t\t\t// on top of the container, in which case the cells under the\n\t\t\t// mouse for the move and up events are not detected.\n\t\t\tif (mxClient.IS_TOUCH)\n\t\t\t{\n\t\t\t\tvar x = mxEvent.getClientX(evt);\n\t\t\t\tvar y = mxEvent.getClientY(evt);\n\t\t\t\t\n\t\t\t\t// Dispatches the drop event to the graph which\n\t\t\t\t// consumes and executes the source function\n\t\t\t\tvar pt = mxUtils.convertPoint(container, x, y);\n\t\t\t\tstate = graph.view.getState(graph.getCellAt(pt.x, pt.y));\n\t\t\t}\n\t\t\t\n\t\t\treturn state;\n\t\t};\n\t\t\n\t\t// Adds basic listeners for graph event dispatching outside of the\n\t\t// container and finishing the handling of a single gesture\n\t\t// Implemented via graph event dispatch loop to avoid duplicate events\n\t\t// in Firefox and Chrome\n\t\tgraph.addMouseListener(\n\t\t{\n\t\t\tmouseDown: function(sender, me)\n\t\t\t{\n\t\t\t\tgraph.popupMenuHandler.hideMenu();\n\t\t\t},\n\t\t\tmouseMove: function() { },\n\t\t\tmouseUp: function() { }\n\t\t});\n\t\t\n\t\tthis.moveHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\t// Hides the tooltip if mouse is outside container\n\t\t\tif (graph.tooltipHandler != null && graph.tooltipHandler.isHideOnHover())\n\t\t\t{\n\t\t\t\tgraph.tooltipHandler.hide();\n\t\t\t}\n\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden' && !mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, getState(evt)));\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.endHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (this.captureDocumentGesture && graph.isMouseDown && graph.container != null &&\n\t\t\t\t!this.isContainerEvent(evt) && graph.container.style.display != 'none' &&\n\t\t\t\tgraph.container.style.visibility != 'hidden')\n\t\t\t{\n\t\t\t\tgraph.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t\t}\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t}\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the HTML display.\n */\nmxGraphView.prototype.createHtml = function()\n{\n\tvar container = this.graph.container;\n\t\n\tif (container != null)\n\t{\n\t\tthis.canvas = this.createHtmlPane('100%', '100%');\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\n\t\t// Uses minimal size for inner DIVs on Canvas. This is required\n\t\t// for correct event processing in IE. If we have an overlapping\n\t\t// DIV then the events on the cells are only fired for labels.\n\t\tthis.backgroundPane = this.createHtmlPane('1px', '1px');\n\t\tthis.drawPane = this.createHtmlPane('1px', '1px');\n\t\tthis.overlayPane = this.createHtmlPane('1px', '1px');\n\t\tthis.decoratorPane = this.createHtmlPane('1px', '1px');\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\n\t\tcontainer.appendChild(this.canvas);\n\t\tthis.updateContainerStyle(container);\n\t\t\n\t\t// Implements minWidth/minHeight in quirks mode\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tvar onResize = mxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\tvar bounds = this.getGraphBounds();\n\t\t\t\tvar width = bounds.x + bounds.width + this.graph.border;\n\t\t\t\tvar height = bounds.y + bounds.height + this.graph.border;\n\t\t\t\t\n\t\t\t\tthis.updateHtmlCanvasSize(width, height);\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(window, 'resize', onResize);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHtmlCanvasSize\n * \n * Updates the size of the HTML canvas.\n */\nmxGraphView.prototype.updateHtmlCanvasSize = function(width, height)\n{\n\tif (this.graph.container != null)\n\t{\n\t\tvar ow = this.graph.container.offsetWidth;\n\t\tvar oh = this.graph.container.offsetHeight;\n\n\t\tif (ow < width)\n\t\t{\n\t\t\tthis.canvas.style.width = width + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.width = '100%';\n\t\t}\n\n\t\tif (oh < height)\n\t\t{\n\t\t\tthis.canvas.style.height = height + 'px';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.canvas.style.height = '100%';\n\t\t}\n\t}\n};\n\n/**\n * Function: createHtmlPane\n * \n * Creates and returns a drawing pane in HTML (DIV).\n */\nmxGraphView.prototype.createHtmlPane = function(width, height)\n{\n\tvar pane = document.createElement('DIV');\n\t\n\tif (width != null && height != null)\n\t{\n\t\tpane.style.position = 'absolute';\n\t\tpane.style.left = '0px';\n\t\tpane.style.top = '0px';\n\n\t\tpane.style.width = width;\n\t\tpane.style.height = height;\n\t}\n\telse\n\t{\n\t\tpane.style.position = 'relative';\n\t}\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates the DOM nodes for the VML display.\n */\nmxGraphView.prototype.createVml = function()\n{\n\tvar container = this.graph.container;\n\n\tif (container != null)\n\t{\n\t\tvar width = container.offsetWidth;\n\t\tvar height = container.offsetHeight;\n\t\tthis.canvas = this.createVmlPane(width, height);\n\t\tthis.canvas.style.overflow = 'hidden';\n\t\t\n\t\tthis.backgroundPane = this.createVmlPane(width, height);\n\t\tthis.drawPane = this.createVmlPane(width, height);\n\t\tthis.overlayPane = this.createVmlPane(width, height);\n\t\tthis.decoratorPane = this.createVmlPane(width, height);\n\t\t\n\t\tthis.canvas.appendChild(this.backgroundPane);\n\t\tthis.canvas.appendChild(this.drawPane);\n\t\tthis.canvas.appendChild(this.overlayPane);\n\t\tthis.canvas.appendChild(this.decoratorPane);\n\t\t\n\t\tcontainer.appendChild(this.canvas);\n\t}\n};\n\n/**\n * Function: createVmlPane\n * \n * Creates a drawing pane in VML (group).\n */\nmxGraphView.prototype.createVmlPane = function(width, height)\n{\n\tvar pane = document.createElement(mxClient.VML_PREFIX + ':group');\n\t\n\t// At this point the width and height are potentially\n\t// uninitialized. That's OK.\n\tpane.style.position = 'absolute';\n\tpane.style.left = '0px';\n\tpane.style.top = '0px';\n\n\tpane.style.width = width + 'px';\n\tpane.style.height = height + 'px';\n\n\tpane.setAttribute('coordsize', width + ',' + height);\n\tpane.setAttribute('coordorigin', '0,0');\n\t\n\treturn pane;\n};\n\n/**\n * Function: create\n *\n * Creates and returns the DOM nodes for the SVG display.\n */\nmxGraphView.prototype.createSvg = function()\n{\n\tvar container = this.graph.container;\n\tthis.canvas = document.createElementNS(mxConstants.NS_SVG, 'g');\n\t\n\t// For background image\n\tthis.backgroundPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.backgroundPane);\n\n\t// Adds two layers (background is early feature)\n\tthis.drawPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.drawPane);\n\n\tthis.overlayPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.overlayPane);\n\t\n\tthis.decoratorPane = document.createElementNS(mxConstants.NS_SVG, 'g');\n\tthis.canvas.appendChild(this.decoratorPane);\n\t\n\tvar root = document.createElementNS(mxConstants.NS_SVG, 'svg');\n\troot.style.left = '0px';\n\troot.style.top = '0px';\n\troot.style.width = '100%';\n\troot.style.height = '100%';\n\t\n\t// NOTE: In standards mode, the SVG must have block layout\n\t// in order for the container DIV to not show scrollbars.\n\troot.style.display = 'block';\n\troot.appendChild(this.canvas);\n\t\n\t// Workaround for scrollbars in IE11 and below\n\tif (mxClient.IS_IE || mxClient.IS_IE11)\n\t{\n\t\troot.style.overflow = 'hidden';\n\t}\n\n\tif (container != null)\n\t{\n\t\tcontainer.appendChild(root);\n\t\tthis.updateContainerStyle(container);\n\t}\n};\n\n/**\n * Function: updateContainerStyle\n * \n * Updates the style of the container after installing the SVG DOM elements.\n */\nmxGraphView.prototype.updateContainerStyle = function(container)\n{\n\t// Workaround for offset of container\n\tvar style = mxUtils.getCurrentStyle(container);\n\t\n\tif (style != null && style.position == 'static')\n\t{\n\t\tcontainer.style.position = 'relative';\n\t}\n\t\n\t// Disables built-in pan and zoom in IE10 and later\n\tif (mxClient.IS_POINTER)\n\t{\n\t\tcontainer.style.touchAction = 'none';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the view and all its resources.\n */\nmxGraphView.prototype.destroy = function()\n{\n\tvar root = (this.canvas != null) ? this.canvas.ownerSVGElement : null;\n\t\n\tif (root == null)\n\t{\n\t\troot = this.canvas;\n\t}\n\t\n\tif (root != null && root.parentNode != null)\n\t{\n\t\tthis.clear(this.currentRoot, true);\n\t\tmxEvent.removeGestureListeners(document, null, this.moveHandler, this.endHandler);\n\t\tmxEvent.release(this.graph.container);\n\t\troot.parentNode.removeChild(root);\n\t\t\n\t\tthis.moveHandler = null;\n\t\tthis.endHandler = null;\n\t\tthis.canvas = null;\n\t\tthis.backgroundPane = null;\n\t\tthis.drawPane = null;\n\t\tthis.overlayPane = null;\n\t\tthis.decoratorPane = null;\n\t}\n};\n\n/**\n * Class: mxCurrentRootChange\n *\n * Action to change the current root in a view.\n *\n * Constructor: mxCurrentRootChange\n *\n * Constructs a change of the current root in the given view.\n */\nfunction mxCurrentRootChange(view, root)\n{\n\tthis.view = view;\n\tthis.root = root;\n\tthis.previous = root;\n\tthis.isUp = root == null;\n\t\n\tif (!this.isUp)\n\t{\n\t\tvar tmp = this.view.currentRoot;\n\t\tvar model = this.view.graph.getModel();\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp == root)\n\t\t\t{\n\t\t\t\tthis.isUp = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = model.getParent(tmp);\n\t\t}\n\t}\n};\n\n/**\n * Function: execute\n *\n * Changes the current root of the view.\n */\nmxCurrentRootChange.prototype.execute = function()\n{\n\tvar tmp = this.view.currentRoot;\n\tthis.view.currentRoot = this.previous;\n\tthis.previous = tmp;\n\n\tvar translate = this.view.graph.getTranslateForRoot(this.view.currentRoot);\n\t\n\tif (translate != null)\n\t{\n\t\tthis.view.translate = new mxPoint(-translate.x, -translate.y);\n\t}\n\n\tif (this.isUp)\n\t{\n\t\tthis.view.clear(this.view.currentRoot, true);\n\t\tthis.view.validate();\n\t}\n\telse\n\t{\n\t\tthis.view.refresh();\n\t}\n\t\n\tvar name = (this.isUp) ? mxEvent.UP : mxEvent.DOWN;\n\tthis.view.fireEvent(new mxEventObject(name,\n\t\t'root', this.view.currentRoot, 'previous', this.previous));\n\tthis.isUp = !this.isUp;\n};\n\n__mxOutput.mxGraphView = typeof mxGraphView !== 'undefined' ? mxGraphView : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraph\n *\n * Extends <mxEventSource> to implement a graph component for\n * the browser. This is the main class of the package. To activate\n * panning and connections use <setPanning> and <setConnectable>.\n * For rubberband selection you must create a new instance of\n * <mxRubberband>. The following listeners are added to\n * <mouseListeners> by default:\n * \n * - <tooltipHandler>: <mxTooltipHandler> that displays tooltips\n * - <panningHandler>: <mxPanningHandler> for panning and popup menus\n * - <connectionHandler>: <mxConnectionHandler> for creating connections\n * - <graphHandler>: <mxGraphHandler> for moving and cloning cells\n * \n * These listeners will be called in the above order if they are enabled.\n *\n * Background Images:\n * \n * To display a background image, set the image, image width and\n * image height using <setBackgroundImage>. If one of the\n * above values has changed then the <view>'s <mxGraphView.validate>\n * should be invoked.\n * \n * Cell Images:\n * \n * To use images in cells, a shape must be specified in the default\n * vertex style (or any named style). Possible shapes are\n * <mxConstants.SHAPE_IMAGE> and <mxConstants.SHAPE_LABEL>.\n * The code to change the shape used in the default vertex style,\n * the following code is used:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_IMAGE;\n * (end)\n * \n * For the default vertex style, the image to be displayed can be\n * specified in a cell's style using the <mxConstants.STYLE_IMAGE>\n * key and the image URL as a value, for example:\n * \n * (code)\n * image=http://www.example.com/image.gif\n * (end)\n * \n * For a named style, the the stylename must be the first element\n * of the cell style:\n * \n * (code)\n * stylename;image=http://www.example.com/image.gif\n * (end)\n * \n * A cell style can have any number of key=value pairs added, divided\n * by a semicolon as follows:\n * \n * (code)\n * [stylename;|key=value;]\n * (end)\n *\n * Labels:\n * \n * The cell labels are defined by <getLabel> which uses <convertValueToString>\n * if <labelsVisible> is true. If a label must be rendered as HTML markup, then\n * <isHtmlLabel> should return true for the respective cell. If all labels\n * contain HTML markup, <htmlLabels> can be set to true. NOTE: Enabling HTML\n * labels carries a possible security risk (see the section on security in\n * the manual).\n * \n * If wrapping is needed for a label, then <isHtmlLabel> and <isWrapping> must\n * return true for the cell whose label should be wrapped. See <isWrapping> for\n * an example.\n * \n * If clipping is needed to keep the rendering of a HTML label inside the\n * bounds of its vertex, then <isClipping> should return true for the\n * respective cell.\n * \n * By default, edge labels are movable and vertex labels are fixed. This can be\n * changed by setting <edgeLabelsMovable> and <vertexLabelsMovable>, or by\n * overriding <isLabelMovable>.\n *\n * In-place Editing:\n * \n * In-place editing is started with a doubleclick or by typing F2.\n * Programmatically, <edit> is used to check if the cell is editable\n * (<isCellEditable>) and call <startEditingAtCell>, which invokes\n * <mxCellEditor.startEditing>. The editor uses the value returned\n * by <getEditingValue> as the editing value.\n * \n * After in-place editing, <labelChanged> is called, which invokes\n * <mxGraphModel.setValue>, which in turn calls\n * <mxGraphModel.valueForCellChanged> via <mxValueChange>.\n * \n * The event that triggers in-place editing is passed through to the\n * <cellEditor>, which may take special actions depending on the type of the\n * event or mouse location, and is also passed to <getEditingValue>. The event\n * is then passed back to the event processing functions which can perform\n * specific actions based on the trigger event.\n * \n * Tooltips:\n * \n * Tooltips are implemented by <getTooltip>, which calls <getTooltipForCell>\n * if a cell is under the mousepointer. The default implementation checks if\n * the cell has a getTooltip function and calls it if it exists. Hence, in order\n * to provide custom tooltips, the cell must provide a getTooltip function, or \n * one of the two above functions must be overridden.\n * \n * Typically, for custom cell tooltips, the latter function is overridden as\n * follows:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * When using a config file, the function is overridden in the mxGraph section\n * using the following entry:\n * \n * (code)\n * <add as=\"getTooltipForCell\"><![CDATA[\n *   function(cell)\n *   {\n *     var label = this.convertValueToString(cell);\n *     return 'Tooltip for '+label;\n *   }\n * ]]></add>\n * (end)\n * \n * \"this\" refers to the graph in the implementation, so for example to check if \n * a cell is an edge, you use this.getModel().isEdge(cell)\n *\n * For replacing the default implementation of <getTooltipForCell> (rather than \n * replacing the function on a specific instance), the following code should be \n * used after loading the JavaScript files, but before creating a new mxGraph \n * instance using <mxGraph>:\n * \n * (code)\n * mxGraph.prototype.getTooltipForCell = function(cell)\n * {\n *   var label = this.convertValueToString(cell);\n *   return 'Tooltip for '+label;\n * }\n * (end)\n * \n * Shapes & Styles:\n * \n * The implementation of new shapes is demonstrated in the examples. We'll assume\n * that we have implemented a custom shape with the name BoxShape which we want\n * to use for drawing vertices. To use this shape, it must first be registered in\n * the cell renderer as follows:\n * \n * (code)\n * mxCellRenderer.registerShape('box', BoxShape);\n * (end)\n * \n * The code registers the BoxShape constructor under the name box in the cell\n * renderer of the graph. The shape can now be referenced using the shape-key in\n * a style definition. (The cell renderer contains a set of additional shapes,\n * namely one for each constant with a SHAPE-prefix in <mxConstants>.)\n *\n * Styles are a collection of key, value pairs and a stylesheet is a collection\n * of named styles. The names are referenced by the cellstyle, which is stored\n * in <mxCell.style> with the following format: [stylename;|key=value;]. The\n * string is resolved to a collection of key, value pairs, where the keys are\n * overridden with the values in the string.\n *\n * When introducing a new shape, the name under which the shape is registered\n * must be used in the stylesheet. There are three ways of doing this:\n * \n *   - By changing the default style, so that all vertices will use the new\n * \t\tshape\n *   - By defining a new style, so that only vertices with the respective\n * \t\tcellstyle will use the new shape\n *   - By using shape=box in the cellstyle's optional list of key, value pairs\n * \t\tto be overridden\n *\n * In the first case, the code to fetch and modify the default style for\n * vertices is as follows:\n * \n * (code)\n * var style = graph.getStylesheet().getDefaultVertexStyle();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * (end)\n * \n * The code takes the default vertex style, which is used for all vertices that\n * do not have a specific cellstyle, and modifies the value for the shape-key\n * in-place to use the new BoxShape for drawing vertices. This is done by\n * assigning the box value in the second line, which refers to the name of the\n * BoxShape in the cell renderer.\n * \n * In the second case, a collection of key, value pairs is created and then\n * added to the stylesheet under a new name. In order to distinguish the\n * shapename and the stylename we'll use boxstyle for the stylename:\n * \n * (code)\n * var style = new Object();\n * style[mxConstants.STYLE_SHAPE] = 'box';\n * style[mxConstants.STYLE_STROKECOLOR] = '#000000';\n * style[mxConstants.STYLE_FONTCOLOR] = '#000000';\n * graph.getStylesheet().putCellStyle('boxstyle', style);\n * (end)\n * \n * The code adds a new style with the name boxstyle to the stylesheet. To use\n * this style with a cell, it must be referenced from the cellstyle as follows:\n * \n * (code)\n * var vertex = graph.insertVertex(parent, null, 'Hello, World!', 20, 20, 80, 20,\n * \t\t\t\t'boxstyle');\n * (end)\n * \n * To summarize, each new shape must be registered in the <mxCellRenderer> with\n * a unique name. That name is then used as the value of the shape-key in a\n * default or custom style. If there are multiple custom shapes, then there\n * should be a separate style for each shape.\n * \n * Inheriting Styles:\n * \n * For fill-, stroke-, gradient- and indicatorColors special keywords can be\n * used. The inherit keyword for one of these colors will inherit the color\n * for the same key from the parent cell. The swimlane keyword does the same,\n * but inherits from the nearest swimlane in the ancestor hierarchy. Finally,\n * the indicated keyword will use the color of the indicator as the color for\n * the given key.\n * \n * Scrollbars:\n * \n * The <containers> overflow CSS property defines if scrollbars are used to\n * display the graph. For values of 'auto' or 'scroll', the scrollbars will\n * be shown. Note that the <resizeContainer> flag is normally not used\n * together with scrollbars, as it will resize the container to match the\n * size of the graph after each change.\n * \n * Multiplicities and Validation:\n * \n * To control the possible connections in mxGraph, <getEdgeValidationError> is\n * used. The default implementation of the function uses <multiplicities>,\n * which is an array of <mxMultiplicity>. Using this class allows to establish\n * simple multiplicities, which are enforced by the graph.\n * \n * The <mxMultiplicity> uses <mxCell.is> to determine for which terminals it\n * applies. The default implementation of <mxCell.is> works with DOM nodes (XML\n * nodes) and checks if the given type parameter matches the nodeName of the\n * node (case insensitive). Optionally, an attributename and value can be\n * specified which are also checked.\n * \n * <getEdgeValidationError> is called whenever the connectivity of an edge\n * changes. It returns an empty string or an error message if the edge is\n * invalid or null if the edge is valid. If the returned string is not empty\n * then it is displayed as an error message.\n * \n * <mxMultiplicity> allows to specify the multiplicity between a terminal and\n * its possible neighbors. For example, if any rectangle may only be connected\n * to, say, a maximum of two circles you can add the following rule to\n * <multiplicities>:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only shape targets allowed'));\n * (end)\n * \n * This will display the first error message whenever a rectangle is connected\n * to more than two circles and the second error message if a rectangle is\n * connected to anything but a circle.\n * \n * For certain multiplicities, such as a minimum of 1 connection, which cannot\n * be enforced at cell creation time (unless the cell is created together with\n * the connection), mxGraph offers <validate> which checks all multiplicities\n * for all cells and displays the respective error messages in an overlay icon\n * on the cells.\n * \n * If a cell is collapsed and contains validation errors, a respective warning\n * icon is attached to the collapsed cell.\n * \n * Auto-Layout:\n * \n * For automatic layout, the <getLayout> hook is provided in <mxLayoutManager>.\n * It can be overridden to return a layout algorithm for the children of a\n * given cell.\n * \n * Unconnected edges:\n * \n * The default values for all switches are designed to meet the requirements of\n * general diagram drawing applications. A very typical set of settings to\n * avoid edges that are not connected is the following:\n * \n * (code)\n * graph.setAllowDanglingEdges(false);\n * graph.setDisconnectOnMove(false);\n * (end)\n * \n * Setting the <cloneInvalidEdges> switch to true is optional. This switch\n * controls if edges are inserted after a copy, paste or clone-drag if they are\n * invalid. For example, edges are invalid if copied or control-dragged without \n * having selected the corresponding terminals and allowDanglingEdges is\n * false, in which case the edges will not be cloned if the switch is false.\n * \n * Output:\n * \n * To produce an XML representation for a diagram, the following code can be\n * used.\n * \n * (code)\n * var enc = new mxCodec(mxUtils.createXmlDocument());\n * var node = enc.encode(graph.getModel());\n * (end)\n * \n * This will produce an XML node than can be handled using the DOM API or\n * turned into a string representation using the following code:\n * \n * (code)\n * var xml = mxUtils.getXml(node);\n * (end)\n * \n * To obtain a formatted string, mxUtils.getPrettyXml can be used instead.\n * \n * This string can now be stored in a local persistent storage (for example\n * using Google Gears) or it can be passed to a backend using mxUtils.post as\n * follows. The url variable is the URL of the Java servlet, PHP page or HTTP\n * handler, depending on the server.\n * \n * (code)\n * var xmlString = encodeURIComponent(mxUtils.getXml(node));\n * mxUtils.post(url, 'xml='+xmlString, function(req)\n * {\n *   // Process server response using req of type mxXmlRequest\n * });\n * (end)\n * \n * Input:\n * \n * To load an XML representation of a diagram into an existing graph object\n * mxUtils.load can be used as follows. The url variable is the URL of the Java\n * servlet, PHP page or HTTP handler that produces the XML string.\n * \n * (code)\n * var xmlDoc = mxUtils.load(url).getXml();\n * var node = xmlDoc.documentElement;\n * var dec = new mxCodec(node.ownerDocument);\n * dec.decode(node, graph.getModel());\n * (end)\n * \n * For creating a page that loads the client and a diagram using a single\n * request please refer to the deployment examples in the backends.\n * \n * Functional dependencies:\n * \n * (see images/callgraph.png)\n * \n * Resources:\n *\n * resources/graph - Language resources for mxGraph\n *\n * Group: Events\n * \n * Event: mxEvent.ROOT\n * \n * Fires if the root in the model has changed. This event has no properties.\n * \n * Event: mxEvent.ALIGN_CELLS\n * \n * Fires between begin- and endUpdate in <alignCells>. The <code>cells</code>\n * and <code>align</code> properties contain the respective arguments that were\n * passed to <alignCells>.\n *\n * Event: mxEvent.FLIP_EDGE\n *\n * Fires between begin- and endUpdate in <flipEdge>. The <code>edge</code>\n * property contains the edge passed to <flipEdge>.\n * \n * Event: mxEvent.ORDER_CELLS\n * \n * Fires between begin- and endUpdate in <orderCells>. The <code>cells</code>\n * and <code>back</code> properties contain the respective arguments that were\n * passed to <orderCells>.\n *\n * Event: mxEvent.CELLS_ORDERED\n *\n * Fires between begin- and endUpdate in <cellsOrdered>. The <code>cells</code>\n * and <code>back</code> arguments contain the respective arguments that were\n * passed to <cellsOrdered>.\n * \n * Event: mxEvent.GROUP_CELLS\n * \n * Fires between begin- and endUpdate in <groupCells>. The <code>group</code>,\n * <code>cells</code> and <code>border</code> arguments contain the respective\n * arguments that were passed to <groupCells>.\n * \n * Event: mxEvent.UNGROUP_CELLS\n * \n * Fires between begin- and endUpdate in <ungroupCells>. The <code>cells</code>\n * property contains the array of cells that was passed to <ungroupCells>.\n * \n * Event: mxEvent.REMOVE_CELLS_FROM_PARENT\n * \n * Fires between begin- and endUpdate in <removeCellsFromParent>. The\n * <code>cells</code> property contains the array of cells that was passed to\n * <removeCellsFromParent>.\n * \n * Event: mxEvent.ADD_CELLS\n * \n * Fires between begin- and endUpdate in <addCells>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code> and\n * <code>target</code> properties contain the respective arguments that were\n * passed to <addCells>.\n * \n * Event: mxEvent.CELLS_ADDED\n * \n * Fires between begin- and endUpdate in <cellsAdded>. The <code>cells</code>,\n * <code>parent</code>, <code>index</code>, <code>source</code>,\n * <code>target</code> and <code>absolute</code> properties contain the\n * respective arguments that were passed to <cellsAdded>.\n * \n * Event: mxEvent.REMOVE_CELLS\n * \n * Fires between begin- and endUpdate in <removeCells>. The <code>cells</code>\n * and <code>includeEdges</code> arguments contain the respective arguments\n * that were passed to <removeCells>.\n * \n * Event: mxEvent.CELLS_REMOVED\n * \n * Fires between begin- and endUpdate in <cellsRemoved>. The <code>cells</code>\n * argument contains the array of cells that was removed.\n * \n * Event: mxEvent.SPLIT_EDGE\n * \n * Fires between begin- and endUpdate in <splitEdge>. The <code>edge</code>\n * property contains the edge to be splitted, the <code>cells</code>,\n * <code>newEdge</code>, <code>dx</code> and <code>dy</code> properties contain\n * the respective arguments that were passed to <splitEdge>.\n * \n * Event: mxEvent.TOGGLE_CELLS\n * \n * Fires between begin- and endUpdate in <toggleCells>. The <code>show</code>,\n * <code>cells</code> and <code>includeEdges</code> properties contain the\n * respective arguments that were passed to <toggleCells>.\n * \n * Event: mxEvent.FOLD_CELLS\n * \n * Fires between begin- and endUpdate in <foldCells>. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to <foldCells>.\n * \n * Event: mxEvent.CELLS_FOLDED\n * \n * Fires between begin- and endUpdate in cellsFolded. The\n * <code>collapse</code>, <code>cells</code> and <code>recurse</code>\n * properties contain the respective arguments that were passed to\n * <cellsFolded>.\n * \n * Event: mxEvent.UPDATE_CELL_SIZE\n * \n * Fires between begin- and endUpdate in <updateCellSize>. The\n * <code>cell</code> and <code>ignoreChildren</code> properties contain the\n * respective arguments that were passed to <updateCellSize>.\n * \n * Event: mxEvent.RESIZE_CELLS\n * \n * Fires between begin- and endUpdate in <resizeCells>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <resizeCells>.\n * \n * Event: mxEvent.CELLS_RESIZED\n * \n * Fires between begin- and endUpdate in <cellsResized>. The <code>cells</code>\n * and <code>bounds</code> properties contain the respective arguments that\n * were passed to <cellsResized>.\n * \n * Event: mxEvent.MOVE_CELLS\n * \n * Fires between begin- and endUpdate in <moveCells>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code>, <code>clone</code>, <code>target</code>\n * and <code>event</code> properties contain the respective arguments that\n * were passed to <moveCells>.\n * \n * Event: mxEvent.CELLS_MOVED\n * \n * Fires between begin- and endUpdate in <cellsMoved>. The <code>cells</code>,\n * <code>dx</code>, <code>dy</code> and <code>disconnect</code> properties\n * contain the respective arguments that were passed to <cellsMoved>.\n * \n * Event: mxEvent.CONNECT_CELL\n * \n * Fires between begin- and endUpdate in <connectCell>. The <code>edge</code>,\n * <code>terminal</code> and <code>source</code> properties contain the\n * respective arguments that were passed to <connectCell>.\n * \n * Event: mxEvent.CELL_CONNECTED\n * \n * Fires between begin- and endUpdate in <cellConnected>. The\n * <code>edge</code>, <code>terminal</code> and <code>source</code> properties\n * contain the respective arguments that were passed to <cellConnected>.\n * \n * Event: mxEvent.REFRESH\n * \n * Fires after <refresh> was executed. This event has no properties.\n *\n * Event: mxEvent.CLICK\n * \n * Fires in <click> after a click event. The <code>event</code> property\n * contains the original mouse event and <code>cell</code> property contains\n * the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.DOUBLE_CLICK\n *\n * Fires in <dblClick> after a double click. The <code>event</code> property\n * contains the original mouse event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n * \n * Event: mxEvent.GESTURE\n *\n * Fires in <fireGestureEvent> after a touch gesture. The <code>event</code>\n * property contains the original gesture end event and the <code>cell</code>\n * property contains the optional cell associated with the gesture.\n *\n * Event: mxEvent.TAP_AND_HOLD\n *\n * Fires in <tapAndHold> if a tap and hold event was detected. The <code>event</code>\n * property contains the initial touch event and the <code>cell</code> property\n * contains the cell under the mouse or null if the background was clicked.\n *\n * Event: mxEvent.FIRE_MOUSE_EVENT\n *\n * Fires in <fireMouseEvent> before the mouse listeners are invoked. The\n * <code>eventName</code> property contains the event name and the\n * <code>event</code> property contains the <mxMouseEvent>.\n *\n * Event: mxEvent.SIZE\n *\n * Fires after <sizeDidChange> was executed. The <code>bounds</code> property\n * contains the new graph bounds.\n *\n * Event: mxEvent.START_EDITING\n *\n * Fires before the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STARTED\n *\n * Fires after the in-place editor starts in <startEditingAtCell>. The\n * <code>cell</code> property contains the cell that is being edited and the\n * <code>event</code> property contains the optional event argument that was\n * passed to <startEditingAtCell>.\n * \n * Event: mxEvent.EDITING_STOPPED\n *\n * Fires after the in-place editor stops in <stopEditing>.\n *\n * Event: mxEvent.LABEL_CHANGED\n *\n * Fires between begin- and endUpdate in <cellLabelChanged>. The\n * <code>cell</code> property contains the cell, the <code>value</code>\n * property contains the new value for the cell, the <code>old</code> property\n * contains the old value and the optional <code>event</code> property contains\n * the mouse event that started the edit.\n * \n * Event: mxEvent.ADD_OVERLAY\n *\n * Fires after an overlay is added in <addCellOverlay>. The <code>cell</code>\n * property contains the cell and the <code>overlay</code> property contains\n * the <mxCellOverlay> that was added.\n *\n * Event: mxEvent.REMOVE_OVERLAY\n *\n * Fires after an overlay is removed in <removeCellOverlay> and\n * <removeCellOverlays>. The <code>cell</code> property contains the cell and\n * the <code>overlay</code> property contains the <mxCellOverlay> that was\n * removed.\n * \n * Constructor: mxGraph\n * \n * Constructs a new mxGraph in the specified container. Model is an optional\n * mxGraphModel. If no model is provided, a new mxGraphModel instance is \n * used as the model. The container must have a valid owner document prior \n * to calling this function in Internet Explorer. RenderHint is a string to\n * affect the display performance and rendering in IE, but not in SVG-based \n * browsers. The parameter is mapped to <dialect>, which may \n * be one of <mxConstants.DIALECT_SVG> for SVG-based browsers, \n * <mxConstants.DIALECT_STRICTHTML> for fastest display mode,\n * <mxConstants.DIALECT_PREFERHTML> for faster display mode,\n * <mxConstants.DIALECT_MIXEDHTML> for fast and <mxConstants.DIALECT_VML> \n * for exact display mode (slowest). The dialects are defined in mxConstants.\n * The default values are DIALECT_SVG for SVG-based browsers and\n * DIALECT_MIXED for IE.\n *\n * The possible values for the renderingHint parameter are explained below:\n * \n * fast - The parameter is based on the fact that the display performance is \n * highly improved in IE if the VML is not contained within a VML group \n * element. The lack of a group element only slightly affects the display while \n * panning, but improves the performance by almost a factor of 2, while keeping \n * the display sufficiently accurate. This also allows to render certain shapes as HTML \n * if the display accuracy is not affected, which is implemented by \n * <mxShape.isMixedModeHtml>. This is the default setting and is mapped to\n * DIALECT_MIXEDHTML.\n * faster - Same as fast, but more expensive shapes are avoided. This is \n * controlled by <mxShape.preferModeHtml>. The default implementation will \n * avoid gradients and rounded rectangles, but more significant shapes, such \n * as rhombus, ellipse, actor and cylinder will be rendered accurately. This \n * setting is mapped to DIALECT_PREFERHTML.\n * fastest - Almost anything will be rendered in Html. This allows for \n * rectangles, labels and images. This setting is mapped to\n * DIALECT_STRICTHTML.\n * exact - If accurate panning is required and if the diagram is small (up\n * to 100 cells), then this value should be used. In this mode, a group is \n * created that contains the VML. This allows for accurate panning and is \n * mapped to DIALECT_VML.\n *\n * Example:\n * \n * To create a graph inside a DOM node with an id of graph:\n * (code)\n * var container = document.getElementById('graph');\n * var graph = new mxGraph(container);\n * (end)\n * \n * Parameters:\n * \n * container - Optional DOM node that acts as a container for the graph.\n * If this is null then the container can be initialized later using\n * <init>.\n * model - Optional <mxGraphModel> that constitutes the graph data.\n * renderHint - Optional string that specifies the display accuracy and\n * performance. Default is mxConstants.DIALECT_MIXEDHTML (for IE).\n * stylesheet - Optional <mxStylesheet> to be used in the graph.\n */\nfunction mxGraph(container, model, renderHint, stylesheet)\n{\n\t// Initializes the variable in case the prototype has been\n\t// modified to hold some listeners (which is possible because\n\t// the createHandlers call is executed regardless of the\n\t// arguments passed into the ctor).\n\tthis.mouseListeners = null;\n\t\n\t// Converts the renderHint into a dialect\n\tthis.renderHint = renderHint;\n\n\tif (mxClient.IS_SVG)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_SVG;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_EXACT && mxClient.IS_VML)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_VML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTEST)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_STRICTHTML;\n\t}\n\telse if (renderHint == mxConstants.RENDERING_HINT_FASTER)\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_PREFERHTML;\n\t}\n\telse // default for VML\n\t{\n\t\tthis.dialect = mxConstants.DIALECT_MIXEDHTML;\n\t}\n\t\n\t// Initializes the main members that do not require a container\n\tthis.model = (model != null) ? model : new mxGraphModel();\n\tthis.multiplicities = [];\n\tthis.imageBundles = [];\n\tthis.cellRenderer = this.createCellRenderer();\n\tthis.setSelectionModel(this.createSelectionModel());\n\tthis.setStylesheet((stylesheet != null) ? stylesheet : this.createStylesheet());\n\tthis.view = this.createGraphView();\n\t\n\t// Adds a graph model listener to update the view\n\tthis.graphModelChangeListener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.graphModelChanged(evt.getProperty('edit').changes);\n\t});\n\t\n\tthis.model.addListener(mxEvent.CHANGE, this.graphModelChangeListener);\n\n\t// Installs basic event handlers with disabled default settings.\n\tthis.createHandlers();\n\t\n\t// Initializes the display if a container was specified\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n\t\n\tthis.view.revalidate();\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/graph');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/graph');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxGraph.prototype = new mxEventSource();\nmxGraph.prototype.constructor = mxGraph;\n\n/**\n * Group: Variables\n */\n\n/**\n * Variable: mouseListeners\n * \n * Holds the mouse event listeners. See <fireMouseEvent>.\n */\nmxGraph.prototype.mouseListeners = null;\n\n/**\n * Variable: isMouseDown\n * \n * Holds the state of the mouse button.\n */\nmxGraph.prototype.isMouseDown = false;\n\n/**\n * Variable: model\n * \n * Holds the <mxGraphModel> that contains the cells to be displayed.\n */\nmxGraph.prototype.model = null;\n\n/**\n * Variable: view\n * \n * Holds the <mxGraphView> that caches the <mxCellStates> for the cells.\n */\nmxGraph.prototype.view = null;\n\n/**\n * Variable: stylesheet\n * \n * Holds the <mxStylesheet> that defines the appearance of the cells.\n * \n * \n * Example:\n * \n * Use the following code to read a stylesheet into an existing graph.\n * \n * (code)\n * var req = mxUtils.load('stylesheet.xml');\n * var root = req.getDocumentElement();\n * var dec = new mxCodec(root.ownerDocument);\n * dec.decode(root, graph.stylesheet);\n * (end)\n */\nmxGraph.prototype.stylesheet = null;\n\t\n/**\n * Variable: selectionModel\n * \n * Holds the <mxGraphSelectionModel> that models the current selection.\n */\nmxGraph.prototype.selectionModel = null;\n\n/**\n * Variable: cellEditor\n * \n * Holds the <mxCellEditor> that is used as the in-place editing.\n */\nmxGraph.prototype.cellEditor = null;\n\n/**\n * Variable: cellRenderer\n * \n * Holds the <mxCellRenderer> for rendering the cells in the graph.\n */\nmxGraph.prototype.cellRenderer = null;\n\n/**\n * Variable: multiplicities\n * \n * An array of <mxMultiplicities> describing the allowed\n * connections in a graph.\n */\nmxGraph.prototype.multiplicities = null;\n\n/**\n * Variable: renderHint\n * \n * RenderHint as it was passed to the constructor.\n */\nmxGraph.prototype.renderHint = null;\n\n/**\n * Variable: dialect\n * \n * Dialect to be used for drawing the graph. Possible values are all\n * constants in <mxConstants> with a DIALECT-prefix.\n */\nmxGraph.prototype.dialect = null;\n\n/**\n * Variable: gridSize\n * \n * Specifies the grid size. Default is 10.\n */\nmxGraph.prototype.gridSize = 10;\n\t\n/**\n * Variable: gridEnabled\n * \n * Specifies if the grid is enabled. This is used in <snap>. Default is\n * true.\n */\nmxGraph.prototype.gridEnabled = true;\n\n/**\n * Variable: portsEnabled\n * \n * Specifies if ports are enabled. This is used in <cellConnected> to update\n * the respective style. Default is true.\n */\nmxGraph.prototype.portsEnabled = true;\n\n/**\n * Variable: nativeDoubleClickEnabled\n * \n * Specifies if native double click events should be detected. Default is true.\n */\nmxGraph.prototype.nativeDblClickEnabled = true;\n\n/**\n * Variable: doubleTapEnabled\n * \n * Specifies if double taps on touch-based devices should be handled as a\n * double click. Default is true.\n */\nmxGraph.prototype.doubleTapEnabled = true;\n\n/**\n * Variable: doubleTapTimeout\n * \n * Specifies the timeout for double taps and non-native double clicks. Default\n * is 500 ms.\n */\nmxGraph.prototype.doubleTapTimeout = 500;\n\n/**\n * Variable: doubleTapTolerance\n * \n * Specifies the tolerance for double taps and double clicks in quirks mode.\n * Default is 25 pixels.\n */\nmxGraph.prototype.doubleTapTolerance = 25;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the x-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchX\n * \n * Holds the y-coordinate of the last touch event for double tap detection.\n */\nmxGraph.prototype.lastTouchY = 0;\n\n/**\n * Variable: lastTouchTime\n * \n * Holds the time of the last touch event for double click detection.\n */\nmxGraph.prototype.lastTouchTime = 0;\n\n/**\n * Variable: tapAndHoldEnabled\n * \n * Specifies if tap and hold should be used for starting connections on touch-based\n * devices. Default is true.\n */\nmxGraph.prototype.tapAndHoldEnabled = true;\n\n/**\n * Variable: tapAndHoldDelay\n * \n * Specifies the time for a tap and hold. Default is 500 ms.\n */\nmxGraph.prototype.tapAndHoldDelay = 500;\n\n/**\n * Variable: tapAndHoldInProgress\n * \n * True if the timer for tap and hold events is running.\n */\nmxGraph.prototype.tapAndHoldInProgress = false;\n\n/**\n * Variable: tapAndHoldValid\n * \n * True as long as the timer is running and the touch events\n * stay within the given <tapAndHoldTolerance>.\n */\nmxGraph.prototype.tapAndHoldValid = false;\n\n/**\n * Variable: initialTouchX\n * \n * Holds the x-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchX = 0;\n\n/**\n * Variable: initialTouchY\n * \n * Holds the y-coordinate of the intial touch event for tap and hold.\n */\nmxGraph.prototype.initialTouchY = 0;\n\n/**\n * Variable: tolerance\n * \n * Tolerance for a move to be handled as a single click.\n * Default is 4 pixels.\n */\nmxGraph.prototype.tolerance = 4;\n\n/**\n * Variable: defaultOverlap\n * \n * Value returned by <getOverlap> if <isAllowOverlapParent> returns\n * true for the given cell. <getOverlap> is used in <constrainChild> if\n * <isConstrainChild> returns true. The value specifies the\n * portion of the child which is allowed to overlap the parent.\n */\nmxGraph.prototype.defaultOverlap = 0.5;\n\n/**\n * Variable: defaultParent\n * \n * Specifies the default parent to be used to insert new cells.\n * This is used in <getDefaultParent>. Default is null.\n */\nmxGraph.prototype.defaultParent = null;\n\n/**\n * Variable: alternateEdgeStyle\n * \n * Specifies the alternate edge style to be used if the main control point\n * on an edge is being doubleclicked. Default is null.\n */\nmxGraph.prototype.alternateEdgeStyle = null;\n\n/**\n * Variable: backgroundImage\n *\n * Specifies the <mxImage> to be returned by <getBackgroundImage>. Default\n * is null.\n * \n * Example:\n *\n * (code)\n * var img = new mxImage('http://www.example.com/maps/examplemap.jpg', 1024, 768);\n * graph.setBackgroundImage(img);\n * graph.view.validate();\n * (end)\n */\nmxGraph.prototype.backgroundImage = null;\n\n/**\n * Variable: pageVisible\n *\n * Specifies if the background page should be visible. Default is false.\n * Not yet implemented.\n */\nmxGraph.prototype.pageVisible = false;\n\n/**\n * Variable: pageBreaksVisible\n * \n * Specifies if a dashed line should be drawn between multiple pages. Default\n * is false. If you change this value while a graph is being displayed then you\n * should call <sizeDidChange> to force an update of the display.\n */\nmxGraph.prototype.pageBreaksVisible = false;\n\n/**\n * Variable: pageBreakColor\n * \n * Specifies the color for page breaks. Default is 'gray'.\n */\nmxGraph.prototype.pageBreakColor = 'gray';\n\n/**\n * Variable: pageBreakDashed\n * \n * Specifies the page breaks should be dashed. Default is true.\n */\nmxGraph.prototype.pageBreakDashed = true;\n\n/**\n * Variable: minPageBreakDist\n * \n * Specifies the minimum distance for page breaks to be visible. Default is\n * 20 (in pixels).\n */\nmxGraph.prototype.minPageBreakDist = 20;\n\n/**\n * Variable: preferPageSize\n * \n * Specifies if the graph size should be rounded to the next page number in\n * <sizeDidChange>. This is only used if the graph container has scrollbars.\n * Default is false.\n */\nmxGraph.prototype.preferPageSize = false;\n\n/**\n * Variable: pageFormat\n *\n * Specifies the page format for the background page. Default is\n * <mxConstants.PAGE_FORMAT_A4_PORTRAIT>. This is used as the default in\n * <mxPrintPreview> and for painting the background page if <pageVisible> is\n * true and the pagebreaks if <pageBreaksVisible> is true.\n */\nmxGraph.prototype.pageFormat = mxConstants.PAGE_FORMAT_A4_PORTRAIT;\n\n/**\n * Variable: pageScale\n *\n * Specifies the scale of the background page. Default is 1.5.\n * Not yet implemented.\n */\nmxGraph.prototype.pageScale = 1.5;\n\n/**\n * Variable: enabled\n * \n * Specifies the return value for <isEnabled>. Default is true.\n */\nmxGraph.prototype.enabled = true;\n\n/**\n * Variable: escapeEnabled\n * \n * Specifies if <mxKeyHandler> should invoke <escape> when the escape key\n * is pressed. Default is true.\n */\nmxGraph.prototype.escapeEnabled = true;\n\n/**\n * Variable: invokesStopCellEditing\n * \n * If true, when editing is to be stopped by way of selection changing,\n * data in diagram changing or other means stopCellEditing is invoked, and\n * changes are saved. This is implemented in a focus handler in\n * <mxCellEditor>. Default is true.\n */\nmxGraph.prototype.invokesStopCellEditing = true;\n\n/**\n * Variable: enterStopsCellEditing\n * \n * If true, pressing the enter key without pressing control or shift will stop\n * editing and accept the new value. This is used in <mxCellEditor> to stop\n * cell editing. Note: You can always use F2 and escape to stop editing.\n * Default is false.\n */\nmxGraph.prototype.enterStopsCellEditing = false;\n\n/**\n * Variable: useScrollbarsForPanning\n * \n * Specifies if scrollbars should be used for panning in <panGraph> if\n * any scrollbars are available. If scrollbars are enabled in CSS, but no\n * scrollbars appear because the graph is smaller than the container size,\n * then no panning occurs if this is true. Default is true.\n */\nmxGraph.prototype.useScrollbarsForPanning = true;\n\n/**\n * Variable: exportEnabled\n * \n * Specifies the return value for <canExportCell>. Default is true.\n */\nmxGraph.prototype.exportEnabled = true;\n\n/**\n * Variable: importEnabled\n * \n * Specifies the return value for <canImportCell>. Default is true.\n */\nmxGraph.prototype.importEnabled = true;\n\n/**\n * Variable: cellsLocked\n * \n * Specifies the return value for <isCellLocked>. Default is false.\n */\nmxGraph.prototype.cellsLocked = false;\n\n/**\n * Variable: cellsCloneable\n * \n * Specifies the return value for <isCellCloneable>. Default is true.\n */\nmxGraph.prototype.cellsCloneable = true;\n\n/**\n * Variable: foldingEnabled\n * \n * Specifies if folding (collapse and expand via an image icon in the graph\n * should be enabled). Default is true.\n */\nmxGraph.prototype.foldingEnabled = true;\n\n/**\n * Variable: cellsEditable\n * \n * Specifies the return value for <isCellEditable>. Default is true.\n */\nmxGraph.prototype.cellsEditable = true;\n\t\t\n/**\n * Variable: cellsDeletable\n * \n * Specifies the return value for <isCellDeletable>. Default is true.\n */\nmxGraph.prototype.cellsDeletable = true;\n\n/**\n * Variable: cellsMovable\n * \n * Specifies the return value for <isCellMovable>. Default is true.\n */\nmxGraph.prototype.cellsMovable = true;\n\t\n/**\n * Variable: edgeLabelsMovable\n * \n * Specifies the return value for edges in <isLabelMovable>. Default is true.\n */\nmxGraph.prototype.edgeLabelsMovable = true;\n\t\n/**\n * Variable: vertexLabelsMovable\n * \n * Specifies the return value for vertices in <isLabelMovable>. Default is false.\n */\nmxGraph.prototype.vertexLabelsMovable = false;\n\n/**\n * Variable: dropEnabled\n * \n * Specifies the return value for <isDropEnabled>. Default is false.\n */\nmxGraph.prototype.dropEnabled = false;\n\n/**\n * Variable: splitEnabled\n * \n * Specifies if dropping onto edges should be enabled. This is ignored if\n * <dropEnabled> is false. If enabled, it will call <splitEdge> to carry\n * out the drop operation. Default is true.\n */\nmxGraph.prototype.splitEnabled = true;\n\n/**\n * Variable: cellsResizable\n * \n * Specifies the return value for <isCellResizable>. Default is true.\n */\nmxGraph.prototype.cellsResizable = true;\n\n/**\n * Variable: cellsBendable\n * \n * Specifies the return value for <isCellsBendable>. Default is true.\n */\nmxGraph.prototype.cellsBendable = true;\n\n/**\n * Variable: cellsSelectable\n * \n * Specifies the return value for <isCellSelectable>. Default is true.\n */\nmxGraph.prototype.cellsSelectable = true;\n\n/**\n * Variable: cellsDisconnectable\n * \n * Specifies the return value for <isCellDisconntable>. Default is true.\n */\nmxGraph.prototype.cellsDisconnectable = true;\n\n/**\n * Variable: autoSizeCells\n * \n * Specifies if the graph should automatically update the cell size after an\n * edit. This is used in <isAutoSizeCell>. Default is false.\n */\nmxGraph.prototype.autoSizeCells = false;\n\n/**\n * Variable: autoSizeCellsOnAdd\n * \n * Specifies if autoSize style should be applied when cells are added. Default is false.\n */\nmxGraph.prototype.autoSizeCellsOnAdd = false;\n\n/**\n * Variable: autoScroll\n * \n * Specifies if the graph should automatically scroll if the mouse goes near\n * the container edge while dragging. This is only taken into account if the\n * container has scrollbars. Default is true.\n * \n * If you need this to work without scrollbars then set <ignoreScrollbars> to\n * true. Please consult the <ignoreScrollbars> for details. In general, with\n * no scrollbars, the use of <allowAutoPanning> is recommended.\n */\nmxGraph.prototype.autoScroll = true;\n\n/**\n * Variable: ignoreScrollbars\n * \n * Specifies if the graph should automatically scroll regardless of the\n * scrollbars. This will scroll the container using positive values for\n * scroll positions (ie usually only rightwards and downwards). To avoid\n * possible conflicts with panning, set <translateToScrollPosition> to true.\n */\nmxGraph.prototype.ignoreScrollbars = false;\n\n/**\n * Variable: translateToScrollPosition\n * \n * Specifies if the graph should automatically convert the current scroll\n * position to a translate in the graph view when a mouseUp event is received.\n * This can be used to avoid conflicts when using <autoScroll> and\n * <ignoreScrollbars> with no scrollbars in the container.\n */\nmxGraph.prototype.translateToScrollPosition = false;\n\n/**\n * Variable: timerAutoScroll\n * \n * Specifies if autoscrolling should be carried out via mxPanningManager even\n * if the container has scrollbars. This disables <scrollPointToVisible> and\n * uses <mxPanningManager> instead. If this is true then <autoExtend> is\n * disabled. It should only be used with a scroll buffer or when scollbars\n * are visible and scrollable in all directions. Default is false.\n */\nmxGraph.prototype.timerAutoScroll = false;\n\n/**\n * Variable: allowAutoPanning\n * \n * Specifies if panning via <panGraph> should be allowed to implement autoscroll\n * if no scrollbars are available in <scrollPointToVisible>. To enable panning\n * inside the container, near the edge, set <mxPanningManager.border> to a\n * positive value. Default is false.\n */\nmxGraph.prototype.allowAutoPanning = false;\n\n/**\n * Variable: autoExtend\n * \n * Specifies if the size of the graph should be automatically extended if the\n * mouse goes near the container edge while dragging. This is only taken into\n * account if the container has scrollbars. Default is true. See <autoScroll>.\n */\nmxGraph.prototype.autoExtend = true;\n\n/**\n * Variable: maximumGraphBounds\n * \n * <mxRectangle> that specifies the area in which all cells in the diagram\n * should be placed. Uses in <getMaximumGraphBounds>. Use a width or height of\n * 0 if you only want to give a upper, left corner.\n */\nmxGraph.prototype.maximumGraphBounds = null;\n\n/**\n * Variable: minimumGraphSize\n * \n * <mxRectangle> that specifies the minimum size of the graph. This is ignored\n * if the graph container has no scrollbars. Default is null.\n */\nmxGraph.prototype.minimumGraphSize = null;\n\n/**\n * Variable: minimumContainerSize\n * \n * <mxRectangle> that specifies the minimum size of the <container> if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.minimumContainerSize = null;\n\t\t\n/**\n * Variable: maximumContainerSize\n * \n * <mxRectangle> that specifies the maximum size of the container if\n * <resizeContainer> is true.\n */\nmxGraph.prototype.maximumContainerSize = null;\n\n/**\n * Variable: resizeContainer\n * \n * Specifies if the container should be resized to the graph size when\n * the graph size has changed. Default is false.\n */\nmxGraph.prototype.resizeContainer = false;\n\n/**\n * Variable: border\n * \n * Border to be added to the bottom and right side when the container is\n * being resized after the graph has been changed. Default is 0.\n */\nmxGraph.prototype.border = 0;\n\t\t\n/**\n * Variable: keepEdgesInForeground\n * \n * Specifies if edges should appear in the foreground regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInForeground = false;\n\n/**\n * Variable: keepEdgesInBackground\n * \n * Specifies if edges should appear in the background regardless of their order\n * in the model. If <keepEdgesInForeground> and <keepEdgesInBackground> are\n * both true then the normal order is applied. Default is false.\n */\nmxGraph.prototype.keepEdgesInBackground = false;\n\n/**\n * Variable: allowNegativeCoordinates\n * \n * Specifies if negative coordinates for vertices are allowed. Default is true.\n */\nmxGraph.prototype.allowNegativeCoordinates = true;\n\n/**\n * Variable: constrainChildren\n * \n * Specifies if a child should be constrained inside the parent bounds after a\n * move or resize of the child. Default is true.\n */\nmxGraph.prototype.constrainChildren = true;\n\n/**\n * Variable: constrainRelativeChildren\n * \n * Specifies if child cells with relative geometries should be constrained\n * inside the parent bounds, if <constrainChildren> is true, and/or the\n * <maximumGraphBounds>. Default is false.\n */\nmxGraph.prototype.constrainRelativeChildren = false;\n\n/**\n * Variable: extendParents\n * \n * Specifies if a parent should contain the child bounds after a resize of\n * the child. Default is true. This has precedence over <constrainChildren>.\n */\nmxGraph.prototype.extendParents = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is true.\n */\nmxGraph.prototype.extendParentsOnAdd = true;\n\n/**\n * Variable: extendParentsOnAdd\n * \n * Specifies if parents should be extended according to the <extendParents>\n * switch if cells are added. Default is false for backwards compatiblity.\n */\nmxGraph.prototype.extendParentsOnMove = false;\n\n/**\n * Variable: recursiveResize\n * \n * Specifies the return value for <isRecursiveResize>. Default is\n * false for backwards compatiblity.\n */\nmxGraph.prototype.recursiveResize = false;\n\n/**\n * Variable: collapseToPreferredSize\n * \n * Specifies if the cell size should be changed to the preferred size when\n * a cell is first collapsed. Default is true.\n */\nmxGraph.prototype.collapseToPreferredSize = true;\n\n/**\n * Variable: zoomFactor\n * \n * Specifies the factor used for <zoomIn> and <zoomOut>. Default is 1.2\n * (120%).\n */\nmxGraph.prototype.zoomFactor = 1.2;\n\n/**\n * Variable: keepSelectionVisibleOnZoom\n * \n * Specifies if the viewport should automatically contain the selection cells\n * after a zoom operation. Default is false.\n */\nmxGraph.prototype.keepSelectionVisibleOnZoom = false;\n\n/**\n * Variable: centerZoom\n * \n * Specifies if the zoom operations should go into the center of the actual\n * diagram rather than going from top, left. Default is true.\n */\nmxGraph.prototype.centerZoom = true;\n\n/**\n * Variable: resetViewOnRootChange\n * \n * Specifies if the scale and translate should be reset if the root changes in\n * the model. Default is true.\n */\nmxGraph.prototype.resetViewOnRootChange = true;\n\n/**\n * Variable: resetEdgesOnResize\n * \n * Specifies if edge control points should be reset after the resize of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnResize = false;\n\n/**\n * Variable: resetEdgesOnMove\n * \n * Specifies if edge control points should be reset after the move of a\n * connected cell. Default is false.\n */\nmxGraph.prototype.resetEdgesOnMove = false;\n\n/**\n * Variable: resetEdgesOnConnect\n * \n * Specifies if edge control points should be reset after the the edge has been\n * reconnected. Default is true.\n */\nmxGraph.prototype.resetEdgesOnConnect = true;\n\n/**\n * Variable: allowLoops\n * \n * Specifies if loops (aka self-references) are allowed. Default is false.\n */\nmxGraph.prototype.allowLoops = false;\n\t\n/**\n * Variable: defaultLoopStyle\n * \n * <mxEdgeStyle> to be used for loops. This is a fallback for loops if the\n * <mxConstants.STYLE_LOOP> is undefined. Default is <mxEdgeStyle.Loop>.\n */\nmxGraph.prototype.defaultLoopStyle = mxEdgeStyle.Loop;\n\n/**\n * Variable: multigraph\n * \n * Specifies if multiple edges in the same direction between the same pair of\n * vertices are allowed. Default is true.\n */\nmxGraph.prototype.multigraph = true;\n\n/**\n * Variable: connectableEdges\n * \n * Specifies if edges are connectable. Default is false. This overrides the\n * connectable field in edges.\n */\nmxGraph.prototype.connectableEdges = false;\n\n/**\n * Variable: allowDanglingEdges\n * \n * Specifies if edges with disconnected terminals are allowed in the graph.\n * Default is true.\n */\nmxGraph.prototype.allowDanglingEdges = true;\n\n/**\n * Variable: cloneInvalidEdges\n * \n * Specifies if edges that are cloned should be validated and only inserted\n * if they are valid. Default is true.\n */\nmxGraph.prototype.cloneInvalidEdges = false;\n\n/**\n * Variable: disconnectOnMove\n * \n * Specifies if edges should be disconnected from their terminals when they\n * are moved. Default is true.\n */\nmxGraph.prototype.disconnectOnMove = true;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible. This is used in <getLabel>. Default\n * is true.\n */\nmxGraph.prototype.labelsVisible = true;\n\t\n/**\n * Variable: htmlLabels\n * \n * Specifies the return value for <isHtmlLabel>. Default is false.\n */\nmxGraph.prototype.htmlLabels = false;\n\n/**\n * Variable: swimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selectable via the content if the\n * mouse is released. Default is true.\n */\nmxGraph.prototype.swimlaneSelectionEnabled = true;\n\n/**\n * Variable: swimlaneNesting\n * \n * Specifies if nesting of swimlanes is allowed. Default is true.\n */\nmxGraph.prototype.swimlaneNesting = true;\n\t\n/**\n * Variable: swimlaneIndicatorColorAttribute\n * \n * The attribute used to find the color for the indicator if the indicator\n * color is set to 'swimlane'. Default is <mxConstants.STYLE_FILLCOLOR>.\n */\nmxGraph.prototype.swimlaneIndicatorColorAttribute = mxConstants.STYLE_FILLCOLOR;\n\n/**\n * Variable: imageBundles\n * \n * Holds the list of image bundles.\n */\nmxGraph.prototype.imageBundles = null;\n\n/**\n * Variable: minFitScale\n * \n * Specifies the minimum scale to be applied in <fit>. Default is 0.1. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.minFitScale = 0.1;\n\n/**\n * Variable: maxFitScale\n * \n * Specifies the maximum scale to be applied in <fit>. Default is 8. Set this\n * to null to allow any value.\n */\nmxGraph.prototype.maxFitScale = 8;\n\n/**\n * Variable: panDx\n * \n * Current horizontal panning value. Default is 0.\n */\nmxGraph.prototype.panDx = 0;\n\n/**\n * Variable: panDy\n * \n * Current vertical panning value. Default is 0.\n */\nmxGraph.prototype.panDy = 0;\n\n/**\n * Variable: collapsedImage\n * \n * Specifies the <mxImage> to indicate a collapsed state.\n * Default value is mxClient.imageBasePath + '/collapsed.gif'\n */\nmxGraph.prototype.collapsedImage = new mxImage(mxClient.imageBasePath + '/collapsed.gif', 9, 9);\n\n/**\n * Variable: expandedImage\n * \n * Specifies the <mxImage> to indicate a expanded state.\n * Default value is mxClient.imageBasePath + '/expanded.gif'\n */\nmxGraph.prototype.expandedImage = new mxImage(mxClient.imageBasePath + '/expanded.gif', 9, 9);\n\n/**\n * Variable: warningImage\n * \n * Specifies the <mxImage> for the image to be used to display a warning\n * overlay. See <setCellWarning>. Default value is mxClient.imageBasePath +\n * '/warning'.  The extension for the image depends on the platform. It is\n * '.png' on the Mac and '.gif' on all other platforms.\n */\nmxGraph.prototype.warningImage = new mxImage(mxClient.imageBasePath + '/warning'+\n\t((mxClient.IS_MAC) ? '.png' : '.gif'), 16, 16);\n\n/**\n * Variable: alreadyConnectedResource\n * \n * Specifies the resource key for the error message to be displayed in\n * non-multigraphs when two vertices are already connected. If the resource\n * for this key does not exist then the value is used as the error message.\n * Default is 'alreadyConnected'.\n */\nmxGraph.prototype.alreadyConnectedResource = (mxClient.language != 'none') ? 'alreadyConnected' : '';\n\n/**\n * Variable: containsValidationErrorsResource\n * \n * Specifies the resource key for the warning message to be displayed when\n * a collapsed cell contains validation errors. If the resource for this\n * key does not exist then the value is used as the warning message.\n * Default is 'containsValidationErrors'.\n */\nmxGraph.prototype.containsValidationErrorsResource = (mxClient.language != 'none') ? 'containsValidationErrors' : '';\n\n/**\n * Variable: collapseExpandResource\n * \n * Specifies the resource key for the tooltip on the collapse/expand icon.\n * If the resource for this key does not exist then the value is used as\n * the tooltip. Default is 'collapse-expand'.\n */\nmxGraph.prototype.collapseExpandResource = (mxClient.language != 'none') ? 'collapse-expand' : '';\n\n/**\n * Function: init\n * \n * Initializes the <container> and creates the respective datastructures.\n * \n * Parameters:\n * \n * container - DOM node that will contain the graph display.\n */\nmxGraph.prototype.init = function(container)\n{\n\tthis.container = container;\n\t\n\t// Initializes the in-place editor\n\tthis.cellEditor = this.createCellEditor();\t\n\n\t// Initializes the container using the view\n\tthis.view.init();\n\t\n\t// Updates the size of the container for the current graph\n\tthis.sizeDidChange();\n\t\n\t// Hides tooltips and resets tooltip timer if mouse leaves container\n\tmxEvent.addListener(container, 'mouseleave', mxUtils.bind(this, function()\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t}));\n\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t\t\n\t\t// Disable shift-click for text\n\t\tmxEvent.addListener(container, 'selectstart',\n\t\t\tmxUtils.bind(this, function(evt)\n\t\t\t{\n\t\t\t\treturn this.isEditing() || (!this.isMouseDown && !mxEvent.isShiftDown(evt));\n\t\t\t})\n\t\t);\n\t}\n\t\n\t// Workaround for missing last shape and connect preview in IE8 standards\n\t// mode if no initial graph displayed or no label for shape defined\n\tif (document.documentMode == 8)\n\t{\n\t\tcontainer.insertAdjacentHTML('beforeend', '<' + mxClient.VML_PREFIX + ':group' +\n\t\t\t' style=\"DISPLAY: none;\"></' + mxClient.VML_PREFIX + ':group>');\n\t}\n};\n\n/**\n * Function: createHandlers\n * \n * Creates the tooltip-, panning-, connection- and graph-handler (in this\n * order). This is called in the constructor before <init> is called.\n */\nmxGraph.prototype.createHandlers = function()\n{\n\tthis.tooltipHandler = this.createTooltipHandler();\n\tthis.tooltipHandler.setEnabled(false);\n\tthis.selectionCellsHandler = this.createSelectionCellsHandler();\n\tthis.connectionHandler = this.createConnectionHandler();\n\tthis.connectionHandler.setEnabled(false);\n\tthis.graphHandler = this.createGraphHandler();\n\tthis.panningHandler = this.createPanningHandler();\n\tthis.panningHandler.panningEnabled = false;\n\tthis.popupMenuHandler = this.createPopupMenuHandler();\n};\n\n/**\n * Function: createTooltipHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createTooltipHandler = function()\n{\n\treturn new mxTooltipHandler(this);\n};\n\n/**\n * Function: createSelectionCellsHandler\n * \n * Creates and returns a new <mxTooltipHandler> to be used in this graph.\n */\nmxGraph.prototype.createSelectionCellsHandler = function()\n{\n\treturn new mxSelectionCellsHandler(this);\n};\n\n/**\n * Function: createConnectionHandler\n * \n * Creates and returns a new <mxConnectionHandler> to be used in this graph.\n */\nmxGraph.prototype.createConnectionHandler = function()\n{\n\treturn new mxConnectionHandler(this);\n};\n\n/**\n * Function: createGraphHandler\n * \n * Creates and returns a new <mxGraphHandler> to be used in this graph.\n */\nmxGraph.prototype.createGraphHandler = function()\n{\n\treturn new mxGraphHandler(this);\n};\n\n/**\n * Function: createPanningHandler\n * \n * Creates and returns a new <mxPanningHandler> to be used in this graph.\n */\nmxGraph.prototype.createPanningHandler = function()\n{\n\treturn new mxPanningHandler(this);\n};\n\n/**\n * Function: createPopupMenuHandler\n * \n * Creates and returns a new <mxPopupMenuHandler> to be used in this graph.\n */\nmxGraph.prototype.createPopupMenuHandler = function()\n{\n\treturn new mxPopupMenuHandler(this);\n};\n\n/**\n * Function: createSelectionModel\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createSelectionModel = function()\n{\n\treturn new mxGraphSelectionModel(this);\n};\n\n/**\n * Function: createStylesheet\n * \n * Creates a new <mxGraphSelectionModel> to be used in this graph.\n */\nmxGraph.prototype.createStylesheet = function()\n{\n\treturn new mxStylesheet();\n};\n\n/**\n * Function: createGraphView\n * \n * Creates a new <mxGraphView> to be used in this graph.\n */\nmxGraph.prototype.createGraphView = function()\n{\n\treturn new mxGraphView(this);\n};\n \n/**\n * Function: createCellRenderer\n * \n * Creates a new <mxCellRenderer> to be used in this graph.\n */\nmxGraph.prototype.createCellRenderer = function()\n{\n\treturn new mxCellRenderer();\n};\n\n/**\n * Function: createCellEditor\n * \n * Creates a new <mxCellEditor> to be used in this graph.\n */\nmxGraph.prototype.createCellEditor = function()\n{\n\treturn new mxCellEditor(this);\n};\n\n/**\n * Function: getModel\n * \n * Returns the <mxGraphModel> that contains the cells.\n */\nmxGraph.prototype.getModel = function()\n{\n\treturn this.model;\n};\n\n/**\n * Function: getView\n * \n * Returns the <mxGraphView> that contains the <mxCellStates>.\n */\nmxGraph.prototype.getView = function()\n{\n\treturn this.view;\n};\n\n/**\n * Function: getStylesheet\n * \n * Returns the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.getStylesheet = function()\n{\n\treturn this.stylesheet;\n};\n\n/**\n * Function: setStylesheet\n * \n * Sets the <mxStylesheet> that defines the style.\n */\nmxGraph.prototype.setStylesheet = function(stylesheet)\n{\n\tthis.stylesheet = stylesheet;\n};\n\n/**\n * Function: getSelectionModel\n * \n * Returns the <mxGraphSelectionModel> that contains the selection.\n */\nmxGraph.prototype.getSelectionModel = function()\n{\n\treturn this.selectionModel;\n};\n\n/**\n * Function: setSelectionModel\n * \n * Sets the <mxSelectionModel> that contains the selection.\n */\nmxGraph.prototype.setSelectionModel = function(selectionModel)\n{\n\tthis.selectionModel = selectionModel;\n};\n\n/**\n * Function: getSelectionCellsForChanges\n * \n * Returns the cells to be selected for the given array of changes.\n */\nmxGraph.prototype.getSelectionCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar cells = [];\n\t\n\tvar addCell = mxUtils.bind(this, function(cell)\n\t{\n\t\tif (!dict.get(cell) && this.model.contains(cell))\n\t\t{\n\t\t\tif (this.model.isEdge(cell) || this.model.isVertex(cell))\n\t\t\t{\n\t\t\t\tdict.put(cell, true);\n\t\t\t\tcells.push(cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t{\n\t\t\t\t\taddCell(this.model.getChildAt(cell, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change.constructor != mxRootChange)\n\t\t{\n\t\t\tvar cell = null;\n\n\t\t\tif (change instanceof mxChildChange)\n\t\t\t{\n\t\t\t\tcell = change.child;\n\t\t\t}\n\t\t\telse if (change.cell != null && change.cell instanceof mxCell)\n\t\t\t{\n\t\t\t\tcell = change.cell;\n\t\t\t}\n\t\t\t\n\t\t\tif (cell != null)\n\t\t\t{\n\t\t\t\taddCell(cell);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: graphModelChanged\n * \n * Called when the graph model changes. Invokes <processChange> on each\n * item of the given array to update the view accordingly.\n * \n * Parameters:\n * \n * changes - Array that contains the individual changes.\n */\nmxGraph.prototype.graphModelChanged = function(changes)\n{\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tthis.processChange(changes[i]);\n\t}\n\n\tthis.updateSelection();\n\tthis.view.validate();\n\tthis.sizeDidChange();\n};\n\n/**\n * Function: updateSelection\n * \n * Removes selection cells that are not in the model from the selection.\n */\nmxGraph.prototype.updateSelection = function()\n{\n\tvar cells = this.getSelectionCells();\n\tvar removed = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (!this.model.contains(cells[i]) || !this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tremoved.push(cells[i]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar par = this.model.getParent(cells[i]);\n\t\t\t\n\t\t\twhile (par != null && par != this.view.currentRoot)\n\t\t\t{\n\t\t\t\tif (this.isCellCollapsed(par) || !this.isCellVisible(par))\n\t\t\t\t{\n\t\t\t\t\tremoved.push(cells[i]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpar = this.model.getParent(par);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.removeSelectionCells(removed);\n};\n\n/**\n * Function: processChange\n * \n * Processes the given change and invalidates the respective cached data\n * in <view>. This fires a <root> event if the root has changed in the\n * model.\n * \n * Parameters:\n * \n * change - Object that represents the change on the model.\n */\nmxGraph.prototype.processChange = function(change)\n{\n\t// Resets the view settings, removes all cells and clears\n\t// the selection if the root changes.\n\tif (change instanceof mxRootChange)\n\t{\n\t\tthis.clearSelection();\n\t\tthis.setDefaultParent(null);\n\t\tthis.removeStateForCell(change.previous);\n\t\t\n\t\tif (this.resetViewOnRootChange)\n\t\t{\n\t\t\tthis.view.scale = 1;\n\t\t\tthis.view.translate.x = 0;\n\t\t\tthis.view.translate.y = 0;\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t}\n\t\n\t// Adds or removes a child to the view by online invaliding\n\t// the minimal required portions of the cache, namely, the\n\t// old and new parent and the child.\n\telse if (change instanceof mxChildChange)\n\t{\n\t\tvar newParent = this.model.getParent(change.child);\n\t\tthis.view.invalidate(change.child, true, true);\n\t\t\n\t\tif (!this.model.contains(newParent) || this.isCellCollapsed(newParent))\n\t\t{\n\t\t\tthis.view.invalidate(change.child, true, true);\n\t\t\tthis.removeStateForCell(change.child);\n\t\t\t\n\t\t\t// Handles special case of current root of view being removed\n\t\t\tif (this.view.currentRoot == change.child)\n\t\t\t{\n\t\t\t\tthis.home();\n\t\t\t}\n\t\t}\n \n\t\tif (newParent != change.previous)\n\t\t{\n\t\t\t// Refreshes the collapse/expand icons on the parents\n\t\t\tif (newParent != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(newParent, false, false);\n\t\t\t}\n\t\t\t\n\t\t\tif (change.previous != null)\n\t\t\t{\n\t\t\t\tthis.view.invalidate(change.previous, false, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handles two special cases where the shape does not need to be\n\t// recreated from scratch, it only needs to be invalidated.\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\t// Checks if the geometry has changed to avoid unnessecary revalidation\n\t\tif (change instanceof mxTerminalChange || ((change.previous == null && change.geometry != null) ||\n\t\t\t(change.previous != null && !change.previous.equals(change.geometry))))\n\t\t{\n\t\t\tthis.view.invalidate(change.cell);\n\t\t}\n\t}\n\n\t// Handles two special cases where only the shape, but no\n\t// descendants need to be recreated\n\telse if (change instanceof mxValueChange)\n\t{\n\t\tthis.view.invalidate(change.cell, false, false);\n\t}\n\t\n\t// Requires a new mxShape in JavaScript\n\telse if (change instanceof mxStyleChange)\n\t{\n\t\tthis.view.invalidate(change.cell, true, true);\n\t\tvar state = this.view.getState(change.cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tstate.invalidStyle = true;\n\t\t}\n\t}\n\t\n\t// Removes the state from the cache by default\n\telse if (change.cell != null && change.cell instanceof mxCell)\n\t{\n\t\tthis.removeStateForCell(change.cell);\n\t}\n};\n\n/**\n * Function: removeStateForCell\n * \n * Removes all cached information for the given cell and its descendants.\n * This is called when a cell was removed from the model.\n * \n * Paramters:\n * \n * cell - <mxCell> that was removed from the model.\n */\nmxGraph.prototype.removeStateForCell = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.removeStateForCell(this.model.getChildAt(cell, i));\n\t}\n\n\tthis.view.invalidate(cell, false, true);\n\tthis.view.removeState(cell);\n};\n\n/**\n * Group: Overlays\n */\n\n/**\n * Function: addCellOverlay\n * \n * Adds an <mxCellOverlay> for the specified cell. This method fires an\n * <addoverlay> event and returns the new <mxCellOverlay>.\n * \n * Parameters:\n * \n * cell - <mxCell> to add the overlay for.\n * overlay - <mxCellOverlay> to be added for the cell.\n */\nmxGraph.prototype.addCellOverlay = function(cell, overlay)\n{\n\tif (cell.overlays == null)\n\t{\n\t\tcell.overlays = [];\n\t}\n\t\n\tcell.overlays.push(overlay);\n\n\tvar state = this.view.getState(cell);\n\n\t// Immediately updates the cell display if the state exists\n\tif (state != null)\n\t{\n\t\tthis.cellRenderer.redraw(state);\n\t}\n\t\n\tthis.fireEvent(new mxEventObject(mxEvent.ADD_OVERLAY,\n\t\t\t'cell', cell, 'overlay', overlay));\n\t\n\treturn overlay;\n};\n\n/**\n * Function: getCellOverlays\n * \n * Returns the array of <mxCellOverlays> for the given cell or null, if\n * no overlays are defined.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be returned.\n */\nmxGraph.prototype.getCellOverlays = function(cell)\n{\n\treturn cell.overlays;\n};\n\n/**\n * Function: removeCellOverlay\n * \n * Removes and returns the given <mxCellOverlay> from the given cell. This\n * method fires a <removeoverlay> event. If no overlay is given, then all\n * overlays are removed using <removeOverlays>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlay should be removed.\n * overlay - Optional <mxCellOverlay> to be removed.\n */\nmxGraph.prototype.removeCellOverlay = function(cell, overlay)\n{\n\tif (overlay == null)\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\telse\n\t{\n\t\tvar index = mxUtils.indexOf(cell.overlays, overlay);\n\t\t\n\t\tif (index >= 0)\n\t\t{\n\t\t\tcell.overlays.splice(index, 1);\n\t\t\t\n\t\t\tif (cell.overlays.length == 0)\n\t\t\t{\n\t\t\t\tcell.overlays = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Immediately updates the cell display if the state exists\n\t\t\tvar state = this.view.getState(cell);\n\t\t\t\n\t\t\tif (state != null)\n\t\t\t{\n\t\t\t\tthis.cellRenderer.redraw(state);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlay));\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\toverlay = null;\n\t\t}\n\t}\n\t\n\treturn overlay;\n};\n\n/**\n * Function: removeCellOverlays\n * \n * Removes all <mxCellOverlays> from the given cell. This method\n * fires a <removeoverlay> event for each <mxCellOverlay> and returns\n * the array of <mxCellOverlays> that was removed from the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose overlays should be removed\n */\nmxGraph.prototype.removeCellOverlays = function(cell)\n{\n\tvar overlays = cell.overlays;\n\t\n\tif (overlays != null)\n\t{\n\t\tcell.overlays = null;\n\t\t\n\t\t// Immediately updates the cell display if the state exists\n\t\tvar state = this.view.getState(cell);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.cellRenderer.redraw(state);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < overlays.length; i++)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_OVERLAY,\n\t\t\t\t\t'cell', cell, 'overlay', overlays[i]));\n\t\t}\n\t}\n\t\n\treturn overlays;\n};\n\n/**\n * Function: clearCellOverlays\n * \n * Removes all <mxCellOverlays> in the graph for the given cell and all its\n * descendants. If no cell is specified then all overlays are removed from\n * the graph. This implementation uses <removeCellOverlays> to remove the\n * overlays from the individual cells.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> that represents the root of the subtree to\n * remove the overlays from. Default is the root in the model.\n */\nmxGraph.prototype.clearCellOverlays = function(cell)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tthis.removeCellOverlays(cell);\n\t\n\t// Recursively removes all overlays from the children\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\t\tthis.clearCellOverlays(child); // recurse\n\t}\n};\n\n/**\n * Function: setCellWarning\n * \n * Creates an overlay for the given cell using the warning and image or\n * <warningImage> and returns the new <mxCellOverlay>. The warning is\n * displayed as a tooltip in a red font and may contain HTML markup. If\n * the warning is null or a zero length string, then all overlays are\n * removed from the cell.\n * \n * Example:\n * \n * (code)\n * graph.setCellWarning(cell, '<b>Warning:</b>: Hello, World!');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose warning should be set.\n * warning - String that represents the warning to be displayed.\n * img - Optional <mxImage> to be used for the overlay. Default is\n * <warningImage>.\n * isSelect - Optional boolean indicating if a click on the overlay\n * should select the corresponding cell. Default is false.\n */\nmxGraph.prototype.setCellWarning = function(cell, warning, img, isSelect)\n{\n\tif (warning != null && warning.length > 0)\n\t{\n\t\timg = (img != null) ? img : this.warningImage;\n\t\t\n\t\t// Creates the overlay with the image and warning\n\t\tvar overlay = new mxCellOverlay(img,\n\t\t\t'<font color=red>'+warning+'</font>');\n\t\t\n\t\t// Adds a handler for single mouseclicks to select the cell\n\t\tif (isSelect)\n\t\t{\n\t\t\toverlay.addListener(mxEvent.CLICK,\n\t\t\t\tmxUtils.bind(this, function(sender, evt)\n\t\t\t\t{\n\t\t\t\t\tif (this.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setSelectionCell(cell);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t\n\t\t// Sets and returns the overlay in the graph\n\t\treturn this.addCellOverlay(cell, overlay);\n\t}\n\telse\n\t{\n\t\tthis.removeCellOverlays(cell);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: In-place editing\n */\n\n/**\n * Function: startEditing\n * \n * Calls <startEditingAtCell> using the given cell or the first selection\n * cell.\n * \n * Parameters:\n * \n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditing = function(evt)\n{\n\tthis.startEditingAtCell(null, evt);\n};\n\n/**\n * Function: startEditingAtCell\n * \n * Fires a <startEditing> event and invokes <mxCellEditor.startEditing>\n * on <editor>. After editing was started, a <editingStarted> event is\n * fired.\n * \n * Parameters:\n * \n * cell - <mxCell> to start the in-place editor for.\n * evt - Optional mouse event that triggered the editing.\n */\nmxGraph.prototype.startEditingAtCell = function(cell, evt)\n{\n\tif (evt == null || !mxEvent.isMultiTouchEvent(evt))\n\t{\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.getSelectionCell();\n\t\t\t\n\t\t\tif (cell != null && !this.isCellEditable(cell))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.START_EDITING,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t\tthis.cellEditor.startEditing(cell, evt);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STARTED,\n\t\t\t\t\t'cell', cell, 'event', evt));\n\t\t}\n\t}\n};\n\n/**\n * Function: getEditingValue\n * \n * Returns the initial value for in-place editing. This implementation\n * returns <convertValueToString> for the given cell. If this function is\n * overridden, then <mxGraphModel.valueForCellChanged> should take care\n * of correctly storing the actual new value inside the user object.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the initial editing value should be returned.\n * evt - Optional mouse event that triggered the editor.\n */\nmxGraph.prototype.getEditingValue = function(cell, evt)\n{\n\treturn this.convertValueToString(cell);\n};\n\n/**\n * Function: stopEditing\n * \n * Stops the current editing  and fires a <editingStopped> event.\n * \n * Parameters:\n * \n * cancel - Boolean that specifies if the current editing value\n * should be stored.\n */\nmxGraph.prototype.stopEditing = function(cancel)\n{\n\tthis.cellEditor.stopEditing(cancel);\n\tthis.fireEvent(new mxEventObject(mxEvent.EDITING_STOPPED, 'cancel', cancel));\n};\n\n/**\n * Function: labelChanged\n * \n * Sets the label of the specified cell to the given value using\n * <cellLabelChanged> and fires <mxEvent.LABEL_CHANGED> while the\n * transaction is in progress. Returns the cell whose label was changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * evt - Optional event that triggered the change.\n */\nmxGraph.prototype.labelChanged = function(cell, value, evt)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar old = cell.value;\n\t\tthis.cellLabelChanged(cell, value, this.isAutoSizeCell(cell));\n\t\tthis.fireEvent(new mxEventObject(mxEvent.LABEL_CHANGED,\n\t\t\t'cell', cell, 'value', value, 'old', old, 'event', evt));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellLabelChanged\n * \n * Sets the new label for a cell. If autoSize is true then\n * <cellSizeUpdated> will be called.\n * \n * In the following example, the function is extended to map changes to\n * attributes in an XML node, as shown in <convertValueToString>.\n * Alternatively, the handling of this can be implemented as shown in\n * <mxGraphModel.valueForCellChanged> without the need to clone the\n * user object.\n * \n * (code)\n * var graphCellLabelChanged = graph.cellLabelChanged;\n * graph.cellLabelChanged = function(cell, newValue, autoSize)\n * {\n * \t// Cloned for correct undo/redo\n * \tvar elt = cell.value.cloneNode(true);\n *  elt.setAttribute('label', newValue);\n *  \n *  newValue = elt;\n *  graphCellLabelChanged.apply(this, arguments);\n * };\n * (end) \n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be changed.\n * value - New label to be assigned.\n * autoSize - Boolean that specifies if <cellSizeUpdated> should be called.\n */\nmxGraph.prototype.cellLabelChanged = function(cell, value, autoSize)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.model.setValue(cell, value);\n\t\t\n\t\tif (autoSize)\n\t\t{\n\t\t\tthis.cellSizeUpdated(cell, false);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n};\n\n/**\n * Group: Event processing\n */\n\n/**\n * Function: escape\n * \n * Processes an escape keystroke.\n * \n * Parameters:\n * \n * evt - Mouseevent that represents the keystroke.\n */\nmxGraph.prototype.escape = function(evt)\n{\n\tthis.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n};\n\n/**\n * Function: click\n * \n * Processes a singleclick on an optional cell and fires a <click> event.\n * The click event is fired initially. If the graph is enabled and the\n * event has not been consumed, then the cell is selected using\n * <selectCellForEvent> or the selection is cleared using\n * <clearSelection>. The events consumed state is set to true if the\n * corresponding <mxMouseEvent> has been consumed.\n *\n * To handle a click event, use the following code.\n * \n * (code)\n * graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event'); // mouse event\n *   var cell = evt.getProperty('cell'); // cell may be null\n *   \n *   if (cell != null)\n *   {\n *     // Do something useful with cell and consume the event\n *     evt.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the single click.\n */\nmxGraph.prototype.click = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar cell = me.getCell();\n\tvar mxe = new mxEventObject(mxEvent.CLICK, 'event', evt, 'cell', cell);\n\t\n\tif (me.isConsumed())\n\t{\n\t\tmxe.consume();\n\t}\n\t\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n\t{\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isTransparentClickEvent(evt))\n\t\t\t{\n\t\t\t\tvar active = false;\n\t\t\t\t\n\t\t\t\tvar tmp = this.getCellAt(me.graphX, me.graphY, null, null, null, mxUtils.bind(this, function(state)\n\t\t\t\t{\n\t\t\t\t\tvar selected = this.isCellSelected(state.cell);\n\t\t\t\t\tactive = active || selected;\n\t\t\t\t\t\n\t\t\t\t\treturn !active || selected;\n\t\t\t\t}));\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tcell = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.selectCellForEvent(cell, evt);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar swimlane = null;\n\t\t\t\n\t\t\tif (this.isSwimlaneSelectionEnabled())\n\t\t\t{\n\t\t\t\t// Gets the swimlane at the location (includes\n\t\t\t\t// content area of swimlanes)\n\t\t\t\tswimlane = this.getSwimlaneAt(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\n\t\t\t// Selects the swimlane and consumes the event\n\t\t\tif (swimlane != null)\n\t\t\t{\n\t\t\t\tthis.selectCellForEvent(swimlane, evt);\n\t\t\t}\n\t\t\t\n\t\t\t// Ignores the event if the control key is pressed\n\t\t\telse if (!this.isToggleEvent(evt))\n\t\t\t{\n\t\t\t\tthis.clearSelection();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: dblClick\n * \n * Processes a doubleclick on an optional cell and fires a <dblclick>\n * event. The event is fired initially. If the graph is enabled and the\n * event has not been consumed, then <edit> is called with the given\n * cell. The event is ignored if no cell was specified.\n *\n * Example for overriding this method.\n *\n * (code)\n * graph.dblClick = function(evt, cell)\n * {\n *   var mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n *   this.fireEvent(mxe);\n *   \n *   if (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed())\n *   {\n * \t   mxUtils.alert('Hello, World!');\n *     mxe.consume();\n *   }\n * }\n * (end)\n * \n * Example listener for this event.\n * \n * (code)\n * graph.addListener(mxEvent.DOUBLE_CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   // do something with the cell and consume the\n *   // event to prevent in-place editing from start\n * });\n * (end) \n * \n * Parameters:\n * \n * evt - Mouseevent that represents the doubleclick.\n * cell - Optional <mxCell> under the mousepointer.\n */\nmxGraph.prototype.dblClick = function(evt, cell)\n{\n\tvar mxe = new mxEventObject(mxEvent.DOUBLE_CLICK, 'event', evt, 'cell', cell);\n\tthis.fireEvent(mxe);\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() &&\n\t\tcell != null && this.isCellEditable(cell) && !this.isEditing(cell))\n\t{\n\t\tthis.startEditingAtCell(cell, evt);\n\t\tmxEvent.consume(evt);\n\t}\n};\n\n/**\n * Function: tapAndHold\n * \n * Handles the <mxMouseEvent> by highlighting the <mxCellState>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> that represents the touch event.\n * state - Optional <mxCellState> that is associated with the event.\n */\nmxGraph.prototype.tapAndHold = function(me)\n{\n\tvar evt = me.getEvent();\n\tvar mxe = new mxEventObject(mxEvent.TAP_AND_HOLD, 'event', evt, 'cell', me.getCell());\n\n\t// LATER: Check if event should be consumed if me is consumed\n\tthis.fireEvent(mxe);\n\n\tif (mxe.isConsumed())\n\t{\n\t\t// Resets the state of the panning handler\n\t\tthis.panningHandler.panningTrigger = false;\n\t}\n\t\n\t// Handles the event if it has not been consumed\n\tif (this.isEnabled() && !mxEvent.isConsumed(evt) && !mxe.isConsumed() && this.connectionHandler.isEnabled())\n\t{\n\t\tvar state = this.view.getState(this.connectionHandler.marker.getCell(me));\n\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.connectionHandler.marker.currentColor = this.connectionHandler.marker.validColor;\n\t\t\tthis.connectionHandler.marker.markedState = state;\n\t\t\tthis.connectionHandler.marker.mark();\n\t\t\t\n\t\t\tthis.connectionHandler.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\tthis.connectionHandler.edgeState = this.connectionHandler.createEdgeState(me);\n\t\t\tthis.connectionHandler.previous = state;\n\t\t\tthis.connectionHandler.fireEvent(new mxEventObject(mxEvent.START, 'state', this.connectionHandler.previous));\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollPointToVisible\n * \n * Scrolls the graph to the given point, extending the graph container if\n * specified.\n */\nmxGraph.prototype.scrollPointToVisible = function(x, y, extend, border)\n{\n\tif (!this.timerAutoScroll && (this.ignoreScrollbars || mxUtils.hasScrollbars(this.container)))\n\t{\n\t\tvar c = this.container;\n\t\tborder = (border != null) ? border : 20;\n\t\t\n\t\tif (x >= c.scrollLeft && y >= c.scrollTop && x <= c.scrollLeft + c.clientWidth &&\n\t\t\ty <= c.scrollTop + c.clientHeight)\n\t\t{\n\t\t\tvar dx = c.scrollLeft + c.clientWidth - x;\n\t\t\t\n\t\t\tif (dx < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollLeft;\n\t\t\t\tc.scrollLeft += border - dx;\n\n\t\t\t\t// Automatically extends the canvas size to the bottom, right\n\t\t\t\t// if the event is outside of the canvas and the edge of the\n\t\t\t\t// canvas has been reached. Notes: Needs fix for IE.\n\t\t\t\tif (extend && old == c.scrollLeft)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar width = this.container.scrollWidth + border - dx;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar width = Math.max(c.clientWidth, c.scrollWidth) + border - dx;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollLeft += border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = x - c.scrollLeft;\n\t\t\t\t\n\t\t\t\tif (dx < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft -= border - dx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar dy = c.scrollTop + c.clientHeight - y;\n\t\t\t\n\t\t\tif (dy < border)\n\t\t\t{\n\t\t\t\tvar old = c.scrollTop;\n\t\t\t\tc.scrollTop += border - dy;\n\n\t\t\t\tif (old == c.scrollTop && extend)\n\t\t\t\t{\n\t\t\t\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\t\t\tvar height = this.container.scrollHeight + border - dy;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Updates the clipping region. This is an expensive\n\t\t\t\t\t\t// operation that should not be executed too often.\n\t\t\t\t\t\troot.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar height = Math.max(c.clientHeight, c.scrollHeight) + border - dy;\n\t\t\t\t\t\tvar canvas = this.view.getCanvas();\n\t\t\t\t\t\tcanvas.style.height = height + 'px';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tc.scrollTop += border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = y - c.scrollTop;\n\t\t\t\t\n\t\t\t\tif (dy < border)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop -= border - dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.allowAutoPanning && !this.panningHandler.isActive())\n\t{\n\t\tif (this.panningManager == null)\n\t\t{\n\t\t\tthis.panningManager = this.createPanningManager();\n\t\t}\n\n\t\tthis.panningManager.panTo(x + this.panDx, y + this.panDy);\n\t}\n};\n\n\n/**\n * Function: createPanningManager\n * \n * Creates and returns an <mxPanningManager>.\n */\nmxGraph.prototype.createPanningManager = function()\n{\n\treturn new mxPanningManager(this);\n};\n\n/**\n * Function: getBorderSizes\n * \n * Returns the size of the border and padding on all four sides of the\n * container. The left, top, right and bottom borders are stored in the x, y,\n * width and height of the returned <mxRectangle>, respectively.\n */\nmxGraph.prototype.getBorderSizes = function()\n{\n\tvar css = mxUtils.getCurrentStyle(this.container);\n\t\n\treturn new mxRectangle(mxUtils.parseCssNumber(css.paddingLeft) +\n\t\t\t((css.borderLeftStyle != 'none') ? mxUtils.parseCssNumber(css.borderLeftWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingTop) +\n\t\t\t((css.borderTopStyle != 'none') ? mxUtils.parseCssNumber(css.borderTopWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingRight) +\n\t\t\t((css.borderRightStyle != 'none') ? mxUtils.parseCssNumber(css.borderRightWidth) : 0),\n\t\tmxUtils.parseCssNumber(css.paddingBottom) +\n\t\t\t((css.borderBottomStyle != 'none') ? mxUtils.parseCssNumber(css.borderBottomWidth) : 0));\n};\n\n/**\n * Function: getPreferredPageSize\n * \n * Returns the preferred size of the background page if <preferPageSize> is true.\n */\nmxGraph.prototype.getPreferredPageSize = function(bounds, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = this.pageScale;\n\tvar page = new mxRectangle(0, 0, Math.ceil(fmt.width * ps), Math.ceil(fmt.height * ps));\n\t\n\tvar hCount = (this.pageBreaksVisible) ? Math.ceil(width / page.width) : 1;\n\tvar vCount = (this.pageBreaksVisible) ? Math.ceil(height / page.height) : 1;\n\t\n\treturn new mxRectangle(0, 0, hCount * page.width + 2 + tr.x, vCount * page.height + 2 + tr.y);\n};\n\n/**\n * Function: fit\n *\n * Scales the graph such that the complete diagram fits into <container> and\n * returns the current scale in the view. To fit an initial graph prior to\n * rendering, set <mxGraphView.rendering> to false prior to changing the model\n * and execute the following after changing the model.\n * \n * (code)\n * graph.fit();\n * graph.view.rendering = true;\n * graph.refresh();\n * (end)\n * \n * To fit and center the graph, the following code can be used.\n * \n * (code)\n * var margin = 2;\n * var max = 3;\n * \n * var bounds = graph.getGraphBounds();\n * var cw = graph.container.clientWidth - margin;\n * var ch = graph.container.clientHeight - margin;\n * var w = bounds.width / graph.view.scale;\n * var h = bounds.height / graph.view.scale;\n * var s = Math.min(max, Math.min(cw / w, ch / h));\n * \n * graph.view.scaleAndTranslate(s,\n *   (margin + cw - w * s) / (2 * s) - bounds.x / graph.view.scale,\n *   (margin + ch - h * s) / (2 * s) - bounds.y / graph.view.scale);\n * (end)\n * \n * Parameters:\n * \n * border - Optional number that specifies the border. Default is <border>.\n * keepOrigin - Optional boolean that specifies if the translate should be\n * changed. Default is false.\n * margin - Optional margin in pixels. Default is 0.\n * enabled - Optional boolean that specifies if the scale should be set or\n * just returned. Default is true.\n * ignoreWidth - Optional boolean that specifies if the width should be\n * ignored. Default is false.\n * ignoreHeight - Optional boolean that specifies if the height should be\n * ignored. Default is false.\n * maxHeight - Optional maximum height.\n */\nmxGraph.prototype.fit = function(border, keepOrigin, margin, enabled, ignoreWidth, ignoreHeight, maxHeight)\n{\n\tif (this.container != null)\n\t{\n\t\tborder = (border != null) ? border : this.getBorder();\n\t\tkeepOrigin = (keepOrigin != null) ? keepOrigin : false;\n\t\tmargin = (margin != null) ? margin : 0;\n\t\tenabled = (enabled != null) ? enabled : true;\n\t\tignoreWidth = (ignoreWidth != null) ? ignoreWidth : false;\n\t\tignoreHeight = (ignoreHeight != null) ? ignoreHeight : false;\n\t\t\n\t\t// Adds spacing and border from css\n\t\tvar cssBorder = this.getBorderSizes();\n\t\tvar w1 = this.container.offsetWidth - cssBorder.x - cssBorder.width - 1;\n\t\tvar h1 = (maxHeight != null) ? maxHeight : this.container.offsetHeight - cssBorder.y - cssBorder.height - 1;\n\t\tvar bounds = this.view.getGraphBounds();\n\t\t\n\t\tif (bounds.width > 0 && bounds.height > 0)\n\t\t{\n\t\t\tif (keepOrigin && bounds.x != null && bounds.y != null)\n\t\t\t{\n\t\t\t\tbounds = bounds.clone();\n\t\t\t\tbounds.width += bounds.x;\n\t\t\t\tbounds.height += bounds.y;\n\t\t\t\tbounds.x = 0;\n\t\t\t\tbounds.y = 0;\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Use unscaled bounding boxes to fix rounding errors\n\t\t\tvar s = this.view.scale;\n\t\t\tvar w2 = bounds.width / s;\n\t\t\tvar h2 = bounds.height / s;\n\t\t\t\n\t\t\t// Fits to the size of the background image if required\n\t\t\tif (this.backgroundImage != null)\n\t\t\t{\n\t\t\t\tw2 = Math.max(w2, this.backgroundImage.width - bounds.x / s);\n\t\t\t\th2 = Math.max(h2, this.backgroundImage.height - bounds.y / s);\n\t\t\t}\n\t\t\t\n\t\t\tvar b = ((keepOrigin) ? border : 2 * border) + margin + 1;\n\n\t\t\tw1 -= b;\n\t\t\th1 -= b;\n\t\t\t\n\t\t\tvar s2 = (((ignoreWidth) ? h1 / h2 : (ignoreHeight) ? w1 / w2 :\n\t\t\t\tMath.min(w1 / w2, h1 / h2)));\n\t\t\t\n\t\t\tif (this.minFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.max(s2, this.minFitScale);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.maxFitScale != null)\n\t\t\t{\n\t\t\t\ts2 = Math.min(s2, this.maxFitScale);\n\t\t\t}\n\t\n\t\t\tif (enabled)\n\t\t\t{\n\t\t\t\tif (!keepOrigin)\n\t\t\t\t{\n\t\t\t\t\tif (!mxUtils.hasScrollbars(this.container))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar x0 = (bounds.x != null) ? Math.floor(this.view.translate.x - bounds.x / s + border / s2 + margin / 2) : border;\n\t\t\t\t\t\tvar y0 = (bounds.y != null) ? Math.floor(this.view.translate.y - bounds.y / s + border / s2 + margin / 2) : border;\n\n\t\t\t\t\t\tthis.view.scaleAndTranslate(s2, x0, y0);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t\t\tvar b2 = this.getGraphBounds();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.x != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollLeft = b2.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (b2.y != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.container.scrollTop = b2.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.view.scale != s2)\n\t\t\t\t{\n\t\t\t\t\tthis.view.setScale(s2);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn s2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn this.view.scale;\n};\n\n/**\n * Function: sizeDidChange\n * \n * Called when the size of the graph has changed. This implementation fires\n * a <size> event after updating the clipping region of the SVG element in\n * SVG-bases browsers.\n */\nmxGraph.prototype.sizeDidChange = function()\n{\n\tvar bounds = this.getGraphBounds();\n\t\n\tif (this.container != null)\n\t{\n\t\tvar border = this.getBorder();\n\t\t\n\t\tvar width = Math.max(0, bounds.x + bounds.width + border);\n\t\tvar height = Math.max(0, bounds.y + bounds.height + border);\n\t\t\n\t\tif (this.minimumContainerSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumContainerSize.width);\n\t\t\theight = Math.max(height, this.minimumContainerSize.height);\n\t\t}\n\n\t\tif (this.resizeContainer)\n\t\t{\n\t\t\tthis.doResizeContainer(width, height);\n\t\t}\n\n\t\tif (this.preferPageSize || (!mxClient.IS_IE && this.pageVisible))\n\t\t{\n\t\t\tvar size = this.getPreferredPageSize(bounds, Math.max(1, width), Math.max(1, height));\n\t\t\t\n\t\t\tif (size != null)\n\t\t\t{\n\t\t\t\twidth = size.width * this.view.scale;\n\t\t\t\theight = size.height * this.view.scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.minimumGraphSize != null)\n\t\t{\n\t\t\twidth = Math.max(width, this.minimumGraphSize.width * this.view.scale);\n\t\t\theight = Math.max(height, this.minimumGraphSize.height * this.view.scale);\n\t\t}\n\n\t\twidth = Math.ceil(width);\n\t\theight = Math.ceil(height);\n\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\tvar root = this.view.getDrawPane().ownerSVGElement;\n\t\t\t\n\t\t\tif (root != null)\n\t\t\t{\n\t\t\t\troot.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\troot.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t\troot.style.width = '100%';\n\t\t\t\troot.style.height = '100%';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t{\n\t\t\t\t// Quirks mode does not support minWidth/-Height\n\t\t\t\tthis.view.updateHtmlCanvasSize(Math.max(1, width), Math.max(1, height));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.view.canvas.style.minWidth = Math.max(1, width) + 'px';\n\t\t\t\tthis.view.canvas.style.minHeight = Math.max(1, height) + 'px';\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.updatePageBreaks(this.pageBreaksVisible, width, height);\n\t}\n\n\tthis.fireEvent(new mxEventObject(mxEvent.SIZE, 'bounds', bounds));\n};\n\n/**\n * Function: doResizeContainer\n * \n * Resizes the container for the given graph width and height.\n */\nmxGraph.prototype.doResizeContainer = function(width, height)\n{\n\tif (this.maximumContainerSize != null)\n\t{\n\t\twidth = Math.min(this.maximumContainerSize.width, width);\n\t\theight = Math.min(this.maximumContainerSize.height, height);\n\t}\n\n\tthis.container.style.width = Math.ceil(width) + 'px';\n\tthis.container.style.height = Math.ceil(height) + 'px';\n};\n\n/**\n * Function: updatePageBreaks\n * \n * Invokes from <sizeDidChange> to redraw the page breaks.\n * \n * Parameters:\n * \n * visible - Boolean that specifies if page breaks should be shown.\n * width - Specifies the width of the container in pixels.\n * height - Specifies the height of the container in pixels.\n */\nmxGraph.prototype.updatePageBreaks = function(visible, width, height)\n{\n\tvar scale = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar fmt = this.pageFormat;\n\tvar ps = scale * this.pageScale;\n\tvar bounds = new mxRectangle(0, 0, fmt.width * ps, fmt.height * ps);\n\n\tvar gb = mxRectangle.fromRectangle(this.getGraphBounds());\n\tgb.width = Math.max(1, gb.width);\n\tgb.height = Math.max(1, gb.height);\n\t\n\tbounds.x = Math.floor((gb.x - tr.x * scale) / bounds.width) * bounds.width + tr.x * scale;\n\tbounds.y = Math.floor((gb.y - tr.y * scale) / bounds.height) * bounds.height + tr.y * scale;\n\t\n\tgb.width = Math.ceil((gb.width + (gb.x - bounds.x)) / bounds.width) * bounds.width;\n\tgb.height = Math.ceil((gb.height + (gb.y - bounds.y)) / bounds.height) * bounds.height;\n\t\n\t// Does not show page breaks if the scale is too small\n\tvisible = visible && Math.min(bounds.width, bounds.height) > this.minPageBreakDist;\n\n\tvar horizontalCount = (visible) ? Math.ceil(gb.height / bounds.height) + 1 : 0;\n\tvar verticalCount = (visible) ? Math.ceil(gb.width / bounds.width) + 1 : 0;\n\tvar right = (verticalCount - 1) * bounds.width;\n\tvar bottom = (horizontalCount - 1) * bounds.height;\n\t\n\tif (this.horizontalPageBreaks == null && horizontalCount > 0)\n\t{\n\t\tthis.horizontalPageBreaks = [];\n\t}\n\n\tif (this.verticalPageBreaks == null && verticalCount > 0)\n\t{\n\t\tthis.verticalPageBreaks = [];\n\t}\n\t\n\tvar drawPageBreaks = mxUtils.bind(this, function(breaks)\n\t{\n\t\tif (breaks != null)\n\t\t{\n\t\t\tvar count = (breaks == this.horizontalPageBreaks) ? horizontalCount : verticalCount; \n\t\t\t\n\t\t\tfor (var i = 0; i <= count; i++)\n\t\t\t{\n\t\t\t\tvar pts = (breaks == this.horizontalPageBreaks) ?\n\t\t\t\t\t[new mxPoint(Math.round(bounds.x), Math.round(bounds.y + i * bounds.height)),\n\t\t\t         new mxPoint(Math.round(bounds.x + right), Math.round(bounds.y + i * bounds.height))] :\n\t\t\t        [new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y)),\n\t\t\t         new mxPoint(Math.round(bounds.x + i * bounds.width), Math.round(bounds.y + bottom))];\n\n\t\t\t\tif (breaks[i] != null)\n\t\t\t\t{\n\t\t\t\t\tbreaks[i].points = pts;\n\t\t\t\t\tbreaks[i].redraw();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pageBreak = new mxPolyline(pts, this.pageBreakColor);\n\t\t\t\t\tpageBreak.dialect = this.dialect;\n\t\t\t\t\tpageBreak.pointerEvents = false;\n\t\t\t\t\tpageBreak.isDashed = this.pageBreakDashed;\n\t\t\t\t\tpageBreak.init(this.view.backgroundPane);\n\t\t\t\t\tpageBreak.redraw();\n\t\t\t\t\t\n\t\t\t\t\tbreaks[i] = pageBreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = count; i < breaks.length; i++)\n\t\t\t{\n\t\t\t\tbreaks[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tbreaks.splice(count, breaks.length - count);\n\t\t}\n\t});\n\t\n\tdrawPageBreaks(this.horizontalPageBreaks);\n\tdrawPageBreaks(this.verticalPageBreaks);\n};\n\n/**\n * Group: Cell styles\n */\n\n/**\n * Function: getCellStyle\n * \n * Returns an array of key, value pairs representing the cell style for the\n * given cell. If no string is defined in the model that specifies the\n * style, then the default style for the cell is returned or an empty object,\n * if no style can be found. Note: You should try and get the cell state\n * for the given cell and use the cached style in the state before using\n * this method.\n * \n * Parameters:\n * \n * cell - <mxCell> whose style should be returned as an array.\n */\nmxGraph.prototype.getCellStyle = function(cell)\n{\n\tvar stylename = this.model.getStyle(cell);\n\tvar style = null;\n\t\n\t// Gets the default style for the cell\n\tif (this.model.isEdge(cell))\n\t{\n\t\tstyle = this.stylesheet.getDefaultEdgeStyle();\n\t}\n\telse\n\t{\n\t\tstyle = this.stylesheet.getDefaultVertexStyle();\n\t}\n\t\n\t// Resolves the stylename using the above as the default\n\tif (stylename != null)\n\t{\n\t\tstyle = this.postProcessCellStyle(this.stylesheet.getCellStyle(stylename, style));\n\t}\n\t\n\t// Returns a non-null value if no style can be found\n\tif (style == null)\n\t{\n\t\tstyle = new Object();\n\t}\n\t\n\treturn style;\n};\n\n/**\n * Function: postProcessCellStyle\n * \n * Tries to resolve the value for the image style in the image bundles and\n * turns short data URIs as defined in mxImageBundle to data URIs as\n * defined in RFC 2397 of the IETF.\n */\nmxGraph.prototype.postProcessCellStyle = function(style)\n{\n\tif (style != null)\n\t{\n\t\tvar key = style[mxConstants.STYLE_IMAGE];\n\t\tvar image = this.getImageFromBundles(key);\n\n\t\tif (image != null)\n\t\t{\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t\telse\n\t\t{\n\t\t\timage = key;\n\t\t}\n\t\t\n\t\t// Converts short data uris to normal data uris\n\t\tif (image != null && image.substring(0, 11) == 'data:image/')\n\t\t{\n\t\t\tif (image.substring(0, 20) == 'data:image/svg+xml,<')\n\t\t\t{\n\t\t\t\t// Required for FF and IE11\n\t\t\t\timage = image.substring(0, 19) + encodeURIComponent(image.substring(19));\n\t\t\t}\n\t\t\telse if (image.substring(0, 22) != 'data:image/svg+xml,%3C')\n\t\t\t{\n\t\t\t\tvar comma = image.indexOf(',');\n\t\t\t\t\n\t\t\t\t// Adds base64 encoding prefix if needed\n\t\t\t\tif (comma > 0 && image.substring(comma - 7, comma + 1) != ';base64,')\n\t\t\t\t{\n\t\t\t\t\timage = image.substring(0, comma) + ';base64,'\n\t\t\t\t\t\t+ image.substring(comma + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tstyle[mxConstants.STYLE_IMAGE] = image;\n\t\t}\n\t}\n\n\treturn style;\n};\n\n/**\n * Function: setCellStyle\n * \n * Sets the style of the specified cells. If no cells are given, then the\n * selection cells are changed.\n * \n * Parameters:\n * \n * style - String representing the new style of the cells.\n * cells - Optional array of <mxCells> to set the style for. Default is the\n * selection cells.\n */\nmxGraph.prototype.setCellStyle = function(style, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(cells[i], style);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: toggleCellStyle\n * \n * Toggles the boolean value for the given key in the style of the given cell\n * and returns the new value as 0 or 1. If no cell is specified then the\n * selection cell is used.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cell - Optional <mxCell> whose style should be modified. Default is\n * the selection cell.\n */\nmxGraph.prototype.toggleCellStyle = function(key, defaultValue, cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\treturn this.toggleCellStyles(key, defaultValue, [cell]);\n};\n\n/**\n * Function: toggleCellStyles\n * \n * Toggles the boolean value for the given key in the style of the given cells\n * and returns the new value as 0 or 1. If no cells are specified, then the\n * selection cells are used. For example, this can be used to toggle\n * <mxConstants.STYLE_ROUNDED> or any other style with a boolean value.\n * \n * Parameter:\n * \n * key - String representing the key for the boolean value to be toggled.\n * defaultValue - Optional boolean default value if no value is defined.\n * Default is false.\n * cells - Optional array of <mxCells> whose styles should be modified.\n * Default is the selection cells.\n */\nmxGraph.prototype.toggleCellStyles = function(key, defaultValue, cells)\n{\n\tdefaultValue = (defaultValue != null) ? defaultValue : false;\n\tcells = cells || this.getSelectionCells();\n\tvar value = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar state = this.view.getState(cells[0]);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\n\t\tif (style != null)\n\t\t{\n\t\t\tvalue = (mxUtils.getValue(style, key, defaultValue)) ? 0 : 1;\n\t\t\tthis.setCellStyles(key, value, cells);\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: setCellStyles\n * \n * Sets the key to value in the styles of the given cells. This will modify\n * the existing cell styles in-place and override any existing assignment\n * for the given key. If no cells are specified, then the selection cells\n * are changed. If no value is specified, then the respective key is\n * removed from the styles.\n * \n * Parameters:\n * \n * key - String representing the key to be assigned.\n * value - String representing the new value for the key.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyles = function(key, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\tmxUtils.setCellStyles(this.model, cells, key, value);\n};\n\n/**\n * Function: toggleCellStyleFlags\n * \n * Toggles the given bit for the given key in the styles of the specified\n * cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.toggleCellStyleFlags = function(key, flag, cells)\n{\n\tthis.setCellStyleFlags(key, flag, null, cells);\n};\n\n/**\n * Function: setCellStyleFlags\n * \n * Sets or toggles the given bit for the given key in the styles of the\n * specified cells.\n * \n * Parameters:\n * \n * key - String representing the key to toggle the flag in.\n * flag - Integer that represents the bit to be toggled.\n * value - Boolean value to be used or null if the value should be toggled.\n * cells - Optional array of <mxCells> to change the style for. Default is\n * the selection cells.\n */\nmxGraph.prototype.setCellStyleFlags = function(key, flag, value, cells)\n{\n\tcells = cells || this.getSelectionCells();\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tif (value == null)\n\t\t{\n\t\t\tvar state = this.view.getState(cells[0]);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cells[0]);\n\t\t\t\n\t\t\tif (style != null)\n\t\t\t{\n\t\t\t\tvar current = parseInt(style[key] || 0);\n\t\t\t\tvalue = !((current & flag) == flag);\n\t\t\t}\n\t\t}\n\n\t\tmxUtils.setCellStyleFlags(this.model, cells, key, flag, value);\n\t}\n};\n\n/**\n * Group: Cell alignment and orientation\n */\n\n/**\n * Function: alignCells\n * \n * Aligns the given cells vertically or horizontally according to the given\n * alignment using the optional parameter as the coordinate.\n * \n * Parameters:\n * \n * align - Specifies the alignment. Possible values are all constants in\n * mxConstants with an ALIGN prefix.\n * cells - Array of <mxCells> to be aligned.\n * param - Optional coordinate for the alignment.\n */\nmxGraph.prototype.alignCells = function(align, cells, param)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tif (cells != null && cells.length > 1)\n\t{\n\t\t// Finds the required coordinate for the alignment\n\t\tif (param == null)\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\n\t\t\t\tif (state != null && !this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tif (param == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x + state.width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.y + state.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = state.x;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.x + state.width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.max(param, state.y + state.height);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparam = Math.min(param, state.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Aligns the cells to the coordinate\n\t\tif (param != null)\n\t\t{\n\t\t\tvar s = this.view.scale;\n\n\t\t\tthis.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo != null && !this.model.isEdge(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x - state.width) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_TOP)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height / 2) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (align == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.y += (param - state.y - state.height) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x += (param - state.x) / s;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.resizeCell(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ALIGN_CELLS,\n\t\t\t\t\t\t'align', align, 'cells', cells));\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.model.endUpdate();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: flipEdge\n * \n * Toggles the style of the given edge between null (or empty) and\n * <alternateEdgeStyle>. This method fires <mxEvent.FLIP_EDGE> while the\n * transaction is in progress. Returns the edge that was flipped.\n * \n * Here is an example that overrides this implementation to invert the\n * value of <mxConstants.STYLE_ELBOW> without removing any existing styles.\n * \n * (code)\n * graph.flipEdge = function(edge)\n * {\n *   if (edge != null)\n *   {\n *     var state = this.view.getState(edge);\n *     var style = (state != null) ? state.style : this.getCellStyle(edge);\n *     \n *     if (style != null)\n *     {\n *       var elbow = mxUtils.getValue(style, mxConstants.STYLE_ELBOW,\n *           mxConstants.ELBOW_HORIZONTAL);\n *       var value = (elbow == mxConstants.ELBOW_HORIZONTAL) ?\n *           mxConstants.ELBOW_VERTICAL : mxConstants.ELBOW_HORIZONTAL;\n *       this.setCellStyles(mxConstants.STYLE_ELBOW, value, [edge]);\n *     }\n *   }\n * };\n * (end)\n * \n * Parameters:\n * \n * edge - <mxCell> whose style should be changed.\n */\nmxGraph.prototype.flipEdge = function(edge)\n{\n\tif (edge != null &&\n\t\tthis.alternateEdgeStyle != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar style = this.model.getStyle(edge);\n\n\t\t\tif (style == null || style.length == 0)\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, this.alternateEdgeStyle);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.model.setStyle(edge, null);\n\t\t\t}\n\n\t\t\t// Removes all existing control points\n\t\t\tthis.resetEdge(edge);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.FLIP_EDGE, 'edge', edge));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: addImageBundle\n *\n * Adds the specified <mxImageBundle>.\n */\nmxGraph.prototype.addImageBundle = function(bundle)\n{\n\tthis.imageBundles.push(bundle);\n};\n\n/**\n * Function: removeImageBundle\n * \n * Removes the specified <mxImageBundle>.\n */\nmxGraph.prototype.removeImageBundle = function(bundle)\n{\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t{\n\t\tif (this.imageBundles[i] != bundle)\n\t\t{\n\t\t\ttmp.push(this.imageBundles[i]);\n\t\t}\n\t}\n\t\n\tthis.imageBundles = tmp;\n};\n\n/**\n * Function: getImageFromBundles\n *\n * Searches all <imageBundles> for the specified key and returns the value\n * for the first match or null if the key is not found.\n */\nmxGraph.prototype.getImageFromBundles = function(key)\n{\n\tif (key != null)\n\t{\n\t\tfor (var i = 0; i < this.imageBundles.length; i++)\n\t\t{\n\t\t\tvar image = this.imageBundles[i].getImage(key);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\treturn image;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Group: Order\n */\n\n/**\n * Function: orderCells\n * \n * Moves the given cells to the front or back. The change is carried out\n * using <cellsOrdered>. This method fires <mxEvent.ORDER_CELLS> while the\n * transaction is in progress.\n * \n * Parameters:\n * \n * back - Boolean that specifies if the cells should be moved to back.\n * cells - Array of <mxCells> to move to the background. If null is\n * specified then the selection cells are used.\n */\nmxGraph.prototype.orderCells = function(back, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsOrdered(cells, back);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ORDER_CELLS,\n\t\t\t\t'back', back, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsOrdered\n * \n * Moves the given cells to the front or back. This method fires\n * <mxEvent.CELLS_ORDERED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose order should be changed.\n * back - Boolean that specifies if the cells should be moved to back.\n */\nmxGraph.prototype.cellsOrdered = function(cells, back)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\n\t\t\t\tif (back)\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i], i);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.model.add(parent, cells[i],\n\t\t\t\t\t\t\tthis.model.getChildCount(parent) - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ORDERED,\n\t\t\t\t\t'back', back, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Grouping\n */\n\n/**\n * Function: groupCells\n * \n * Adds the cells into the given group. The change is carried out using\n * <cellsAdded>, <cellsMoved> and <cellsResized>. This method fires\n * <mxEvent.GROUP_CELLS> while the transaction is in progress. Returns the\n * new group. A group is only created if there is at least one entry in the\n * given array of cells.\n * \n * Parameters:\n * \n * group - <mxCell> that represents the target group. If null is specified\n * then a new group is created using <createGroupCell>.\n * border - Optional integer that specifies the border between the child\n * area and the group bounds. Default is 0.\n * cells - Optional array of <mxCells> to be grouped. If null is specified\n * then the selection cells are used.\n */\nmxGraph.prototype.groupCells = function(group, border, cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = mxUtils.sortCells(this.getSelectionCells(), true);\n\t}\n\n\tcells = this.getCellsForGroup(cells);\n\n\tif (group == null)\n\t{\n\t\tgroup = this.createGroupCell(cells);\n\t}\n\n\tvar bounds = this.getBoundsForGroup(group, cells, border);\n\n\tif (cells.length > 0 && bounds != null)\n\t{\n\t\t// Uses parent of group or previous parent of first child\n\t\tvar parent = this.model.getParent(group);\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.model.getParent(cells[0]);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Checks if the group has a geometry and\n\t\t\t// creates one if one does not exist\n\t\t\tif (this.getCellGeometry(group) == null)\n\t\t\t{\n\t\t\t\tthis.model.setGeometry(group, new mxGeometry());\n\t\t\t}\n\n\t\t\t// Adds the group into the parent\n\t\t\tvar index = this.model.getChildCount(parent);\n\t\t\tthis.cellsAdded([group], parent, index, null, null, false, false, false);\n\n\t\t\t// Adds the children into the group and moves\n\t\t\tindex = this.model.getChildCount(group);\n\t\t\tthis.cellsAdded(cells, group, index, null, null, false, false, false);\n\t\t\tthis.cellsMoved(cells, -bounds.x, -bounds.y, false, false, false);\n\n\t\t\t// Resizes the group\n\t\t\tthis.cellsResized([group], [bounds], false);\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.GROUP_CELLS,\n\t\t\t\t\t'group', group, 'border', border, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn group;\n};\n\n/**\n * Function: getCellsForGroup\n * \n * Returns the cells with the same parent as the first cell\n * in the given array.\n */\nmxGraph.prototype.getCellsForGroup = function(cells)\n{\n\tvar result = [];\n\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar parent = this.model.getParent(cells[0]);\n\t\tresult.push(cells[0]);\n\n\t\t// Filters selection cells with the same parent\n\t\tfor (var i = 1; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getParent(cells[i]) == parent)\n\t\t\t{\n\t\t\t\tresult.push(cells[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getBoundsForGroup\n * \n * Returns the bounds to be used for the given group and children.\n */\nmxGraph.prototype.getBoundsForGroup = function(group, children, border)\n{\n\tvar result = this.getBoundingBoxFromGeometry(children, true);\n\t\n\tif (result != null)\n\t{\n\t\tif (this.isSwimlane(group))\n\t\t{\n\t\t\tvar size = this.getStartSize(group);\n\t\t\t\n\t\t\tresult.x -= size.width;\n\t\t\tresult.y -= size.height;\n\t\t\tresult.width += size.width;\n\t\t\tresult.height += size.height;\n\t\t}\n\t\t\n\t\t// Adds the border\n\t\tif (border != null)\n\t\t{\n\t\t\tresult.x -= border;\n\t\t\tresult.y -= border;\n\t\t\tresult.width += 2 * border;\n\t\t\tresult.height += 2 * border;\n\t\t}\n\t}\t\t\t\n\t\n\treturn result;\n};\n\n/**\n * Function: createGroupCell\n * \n * Hook for creating the group cell to hold the given array of <mxCells> if\n * no group cell was given to the <group> function.\n * \n * The following code can be used to set the style of new group cells.\n * \n * (code)\n * var graphCreateGroupCell = graph.createGroupCell;\n * graph.createGroupCell = function(cells)\n * {\n *   var group = graphCreateGroupCell.apply(this, arguments);\n *   group.setStyle('group');\n *   \n *   return group;\n * };\n */\nmxGraph.prototype.createGroupCell = function(cells)\n{\n\tvar group = new mxCell('');\n\tgroup.setVertex(true);\n\tgroup.setConnectable(false);\n\t\n\treturn group;\n};\n\n/**\n * Function: ungroupCells\n * \n * Ungroups the given cells by moving the children the children to their\n * parents parent and removing the empty groups. Returns the children that\n * have been removed from the groups.\n * \n * Parameters:\n * \n * cells - Array of cells to be ungrouped. If null is specified then the\n * selection cells are used.\n */\nmxGraph.prototype.ungroupCells = function(cells)\n{\n\tvar result = [];\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\n\t\t// Finds the cells with children\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.getChildCount(cells[i]) > 0)\n\t\t\t{\n\t\t\t\ttmp.push(cells[i]);\n\t\t\t}\n\t\t}\n\n\t\tcells = tmp;\n\t}\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tchildren = children.slice();\n\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\tvar index = this.model.getChildCount(parent);\n\n\t\t\t\t\tthis.cellsAdded(children, parent, index, null, null, true);\n\t\t\t\t\tresult = result.concat(children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.removeCellsAfterUngroup(cells);\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.UNGROUP_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: removeCellsAfterUngroup\n * \n * Hook to remove the groups after <ungroupCells>.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> that were ungrouped.\n */\nmxGraph.prototype.removeCellsAfterUngroup = function(cells)\n{\n\tthis.cellsRemoved(this.addAllEdges(cells));\n};\n\n/**\n * Function: removeCellsFromParent\n * \n * Removes the specified cells from their parents and adds them to the\n * default parent. Returns the cells that were removed from their parents.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from their parents.\n */\nmxGraph.prototype.removeCellsFromParent = function(cells)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar parent = this.getDefaultParent();\n\t\tvar index = this.model.getChildCount(parent);\n\n\t\tthis.cellsAdded(cells, parent, index, null, null, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS_FROM_PARENT, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: updateGroupBounds\n * \n * Updates the bounds of the given groups to include all children and returns\n * the passed-in cells. Call this with the groups in parent to child order,\n * top-most group first, the cells are processed in reverse order and cells\n * with no children are ignored.\n * \n * Parameters:\n * \n * cells - The groups whose bounds should be updated. If this is null, then\n * the selection cells are used.\n * border - Optional border to be added in the group. Default is 0.\n * moveGroup - Optional boolean that allows the group to be moved. Default\n * is false.\n * topBorder - Optional top border to be added in the group. Default is 0.\n * rightBorder - Optional top border to be added in the group. Default is 0.\n * bottomBorder - Optional top border to be added in the group. Default is 0.\n * leftBorder - Optional top border to be added in the group. Default is 0.\n */\nmxGraph.prototype.updateGroupBounds = function(cells, border, moveGroup, topBorder, rightBorder, bottomBorder, leftBorder)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\t\n\tborder = (border != null) ? border : 0;\n\tmoveGroup = (moveGroup != null) ? moveGroup : false;\n\ttopBorder = (topBorder != null) ? topBorder : 0;\n\trightBorder = (rightBorder != null) ? rightBorder : 0;\n\tbottomBorder = (bottomBorder != null) ? bottomBorder : 0;\n\tleftBorder = (leftBorder != null) ? leftBorder : 0;\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar children = this.getChildCells(cells[i]);\n\t\t\t\t\n\t\t\t\tif (children != null && children.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.getBoundingBoxFromGeometry(children, true);\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null && bounds.width > 0 && bounds.height > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar left = 0;\n\t\t\t\t\t\tvar top = 0;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Adds the size of the title area for swimlanes\n\t\t\t\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.getStartSize(cells[i]);\n\t\t\t\t\t\t\tleft = size.width;\n\t\t\t\t\t\t\ttop = size.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (moveGroup)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x = Math.round(geo.x + bounds.x - border - left - leftBorder);\n\t\t\t\t\t\t\tgeo.y = Math.round(geo.y + bounds.y - border - top - topBorder);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tgeo.width = Math.round(bounds.width + 2 * border + left + leftBorder + rightBorder);\n\t\t\t\t\t\tgeo.height = Math.round(bounds.height + 2 * border + top + topBorder + bottomBorder);\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\tthis.moveCells(children, border + left - bounds.x + leftBorder,\n\t\t\t\t\t\t\t\tborder + top - bounds.y + topBorder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the bounding box for the given array of <mxCells>. The bounding box for\n * each cell and its descendants is computed using <mxGraphView.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraph.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.model.isVertex(cells[i]) || this.model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar bbox = this.view.getBoundingBox(this.view.getState(cells[i]), true);\n\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Group: Cell cloning, insertion and removal\n */\n\n/**\n * Function: cloneCell\n * \n * Returns the clone for the given cell. Uses <cloneCells>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCell = function(cell, allowInvalidEdges, mapping, keepPosition)\n{\n\treturn this.cloneCells([cell], allowInvalidEdges, mapping, keepPosition)[0];\n};\n\n/**\n * Function: cloneCells\n * \n * Returns the clones for the given cells. The clones are created recursively\n * using <mxGraphModel.cloneCells>. If the terminal of an edge is not in the\n * given array, then the respective end is assigned a terminal point and the\n * terminal is removed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be cloned.\n * allowInvalidEdges - Optional boolean that specifies if invalid edges\n * should be cloned. Default is true.\n * mapping - Optional mapping for existing clones.\n * keepPosition - Optional boolean indicating if the position of the cells should\n * be updated to reflect the lost parent cell. Default is false.\n */\nmxGraph.prototype.cloneCells = function(cells, allowInvalidEdges, mapping, keepPosition)\n{\n\tallowInvalidEdges = (allowInvalidEdges != null) ? allowInvalidEdges : true;\n\tvar clones = null;\n\t\n\tif (cells != null)\n\t{\n\t\t// Creates a dictionary for fast lookups\n\t\tvar dict = new mxDictionary();\n\t\tvar tmp = [];\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t\ttmp.push(cells[i]);\n\t\t}\n\t\t\n\t\tif (tmp.length > 0)\n\t\t{\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar trans = this.view.translate;\n\t\t\tclones = this.model.cloneCells(cells, true, mapping);\n\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!allowInvalidEdges && this.model.isEdge(clones[i]) &&\n\t\t\t\t\tthis.getEdgeValidationError(clones[i],\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], true),\n\t\t\t\t\t\tthis.model.getTerminal(clones[i], false)) != null)\n\t\t\t\t{\n\t\t\t\t\tclones[i] = null;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar g = this.model.getGeometry(clones[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (g != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(this.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null && pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = (keepPosition) ? 0 : pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = (keepPosition) ? 0 : pstate.origin.y;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isEdge(clones[i]))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (pts != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// Checks if the source is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (src == null && pts[0] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - trans.y), true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Checks if the target is cloned or sets the terminal point\n\t\t\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (trg == null && pts[n] != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tg.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - trans.x,\n\t\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - trans.y), false);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// Translates the control points\n\t\t\t\t\t\t\t\t\tvar points = g.points;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (points != null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tfor (var j = 0; j < points.length; j++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].x += dx;\n\t\t\t\t\t\t\t\t\t\t\tpoints[j].y += dy;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tg.translate(dx, dy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tclones = [];\n\t\t}\n\t}\n\t\n\treturn clones;\n};\n\n/**\n * Function: insertVertex\n * \n * Adds a new vertex into the given parent <mxCell> using value as the user\n * object and the given coordinates as the <mxGeometry> of the new vertex.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * When adding new vertices from a mouse event, one should take into\n * account the offset of the graph container and the scale and translation\n * of the view in order to find the correct unscaled, untranslated\n * coordinates using <mxGraph.getPointForEvent> as follows:\n * \n * (code)\n * var pt = graph.getPointForEvent(evt);\n * var parent = graph.getDefaultParent();\n * graph.insertVertex(parent, null,\n * \t\t\t'Hello, World!', x, y, 220, 30);\n * (end)\n * \n * For adding image cells, the style parameter can be assigned as\n * \n * (code)\n * stylename;image=imageUrl\n * (end)\n * \n * See <mxGraph> for more information on using images.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new vertex.\n * id - Optional string that defines the Id of the new vertex.\n * value - Object to be used as the user object.\n * x - Integer that defines the x coordinate of the vertex.\n * y - Integer that defines the y coordinate of the vertex.\n * width - Integer that defines the width of the vertex.\n * height - Integer that defines the height of the vertex.\n * style - Optional string that defines the cell style.\n * relative - Optional boolean that specifies if the geometry is relative.\n * Default is false.\n */\nmxGraph.prototype.insertVertex = function(parent, id, value,\n\tx, y, width, height, style, relative)\n{\n\tvar vertex = this.createVertex(parent, id, value, x, y, width, height, style, relative);\n\n\treturn this.addCell(vertex, parent);\n};\n\n/**\n * Function: createVertex\n * \n * Hook method that creates the new vertex for <insertVertex>.\n */\nmxGraph.prototype.createVertex = function(parent, id, value,\n\t\tx, y, width, height, style, relative)\n{\n\t// Creates the geometry for the vertex\n\tvar geometry = new mxGeometry(x, y, width, height);\n\tgeometry.relative = (relative != null) ? relative : false;\n\t\n\t// Creates the vertex\n\tvar vertex = new mxCell(value, geometry, style);\n\tvertex.setId(id);\n\tvertex.setVertex(true);\n\tvertex.setConnectable(true);\n\t\n\treturn vertex;\n};\n\t\n/**\n * Function: insertEdge\n * \n * Adds a new edge into the given parent <mxCell> using value as the user\n * object and the given source and target as the terminals of the new edge.\n * The id and style are used for the respective properties of the new\n * <mxCell>, which is returned.\n *\n * Parameters:\n * \n * parent - <mxCell> that specifies the parent of the new edge.\n * id - Optional string that defines the Id of the new edge.\n * value - JavaScript object to be used as the user object.\n * source - <mxCell> that defines the source of the edge.\n * target - <mxCell> that defines the target of the edge.\n * style - Optional string that defines the cell style.\n */\nmxGraph.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tvar edge = this.createEdge(parent, id, value, source, target, style);\n\t\n\treturn this.addEdge(edge, parent, source, target);\n};\n\n/**\n * Function: createEdge\n * \n * Hook method that creates the new edge for <insertEdge>. This\n * implementation does not set the source and target of the edge, these\n * are set when the edge is added to the model.\n * \n */\nmxGraph.prototype.createEdge = function(parent, id, value, source, target, style)\n{\n\t// Creates the edge\n\tvar edge = new mxCell(value, new mxGeometry(), style);\n\tedge.setId(id);\n\tedge.setEdge(true);\n\tedge.geometry.relative = true;\n\t\n\treturn edge;\n};\n\n/**\n * Function: addEdge\n * \n * Adds the edge to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the edge that was\n * added.\n * \n * Parameters:\n * \n * edge - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n * index - Optional index to insert the cells at. Default is to append.\n */\nmxGraph.prototype.addEdge = function(edge, parent, source, target, index)\n{\n\treturn this.addCell(edge, parent, index, source, target);\n};\n\n/**\n * Function: addCell\n * \n * Adds the cell to the parent and connects it to the given source and\n * target terminals. This is a shortcut method. Returns the cell that was\n * added.\n * \n * Parameters:\n * \n * cell - <mxCell> to be inserted into the given parent.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional <mxCell> that represents the source terminal.\n * target - Optional <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.addCell = function(cell, parent, index, source, target)\n{\n\treturn this.addCells([cell], parent, index, source, target)[0];\n};\n\n/**\n * Function: addCells\n * \n * Adds the cells to the parent at the given index, connecting each cell to\n * the optional source and target terminal. The change is carried out using\n * <cellsAdded>. This method fires <mxEvent.ADD_CELLS> while the\n * transaction is in progress. Returns the cells that were added.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be inserted.\n * parent - <mxCell> that represents the new parent. If no parent is\n * given then the default parent is used.\n * index - Optional index to insert the cells at. Default is to append.\n * source - Optional source <mxCell> for all inserted cells.\n * target - Optional target <mxCell> for all inserted cells.\n */\nmxGraph.prototype.addCells = function(cells, parent, index, source, target)\n{\n\tif (parent == null)\n\t{\n\t\tparent = this.getDefaultParent();\n\t}\n\t\n\tif (index == null)\n\t{\n\t\tindex = this.model.getChildCount(parent);\n\t}\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsAdded(cells, parent, index, source, target, false, true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_CELLS, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsAdded\n * \n * Adds the specified cells to the given parent. This method fires\n * <mxEvent.CELLS_ADDED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsAdded = function(cells, parent, index, source, target, absolute, constrain, extend)\n{\n\tif (cells != null && parent != null && index != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar parentState = (absolute) ? this.view.getState(parent) : null;\n\t\t\tvar o1 = (parentState != null) ? parentState.origin : null;\n\t\t\tvar zero = new mxPoint(0, 0);\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] == null)\n\t\t\t\t{\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar previous = this.model.getParent(cells[i]);\n\t\n\t\t\t\t\t// Keeps the cell at its absolute location\n\t\t\t\t\tif (o1 != null && cells[i] != parent && parent != previous)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar oldState = this.view.getState(previous);\n\t\t\t\t\t\tvar o2 = (oldState != null) ? oldState.origin : zero;\n\t\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\n\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar dx = o2.x - o1.x;\n\t\t\t\t\t\t\tvar dy = o2.y - o1.y;\n\t\n\t\t\t\t\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t\t\t\t\t// to avoid forward references in sessions.\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tgeo.translate(dx, dy);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!geo.relative && this.model.isVertex(cells[i]) &&\n\t\t\t\t\t\t\t\t!this.isAllowNegativeCoordinates())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\t\t\t\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Decrements all following indices\n\t\t\t\t\t// if cell is already in parent\n\t\t\t\t\tif (parent == previous && index + i > this.model.getChildCount(parent))\n\t\t\t\t\t{\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.add(parent, cells[i], index + i);\n\t\t\t\t\t\n\t\t\t\t\tif (this.autoSizeCellsOnAdd)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.autoSizeCell(cells[i], true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Extends the parent or constrains the child\n\t\t\t\t\tif ((extend == null || extend) &&\n\t\t\t\t\t\tthis.isExtendParentsOnAdd(cells[i]) && this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Additionally constrains the child after extending the parent\n\t\t\t\t\tif (constrain == null || constrain)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the source terminal\n\t\t\t\t\tif (source != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], source, true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Sets the target terminal\n\t\t\t\t\tif (target != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.cellConnected(cells[i], target, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_ADDED, 'cells', cells,\n\t\t\t\t'parent', parent, 'index', index, 'source', source, 'target', target,\n\t\t\t\t'absolute', absolute));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: autoSizeCell\n * \n * Resizes the specified cell to just fit around the its label and/or children\n * \n * Parameters:\n * \n * cell - <mxCells> to be resized.\n * recurse - Optional boolean which specifies if all descendants should be\n * autosized. Default is true.\n */\nmxGraph.prototype.autoSizeCell = function(cell, recurse)\n{\n\trecurse = (recurse != null) ? recurse : true;\n\t\n\tif (recurse)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.autoSizeCell(this.model.getChildAt(cell, i));\n\t\t}\n\t}\n\n\tif (this.getModel().isVertex(cell) && this.isAutoSizeCell(cell))\n\t{\n\t\tthis.updateCellSize(cell);\n\t}\n};\n\n/**\n * Function: removeCells\n * \n * Removes the given cells from the graph including all connected edges if\n * includeEdges is true. The change is carried out using <cellsRemoved>.\n * This method fires <mxEvent.REMOVE_CELLS> while the transaction is in\n * progress. The removed cells are returned as an array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove. If null is specified then the\n * selection cells which are deletable are used.\n * includeEdges - Optional boolean which specifies if all connected edges\n * should be removed as well. Default is true.\n */\nmxGraph.prototype.removeCells = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getDeletableCells(this.getSelectionCells());\n\t}\n\n\t// Adds all edges to the cells\n\tif (includeEdges)\n\t{\n\t\t// FIXME: Remove duplicate cells in result or do not add if\n\t\t// in cells or descendant of cells\n\t\tcells = this.getDeletableCells(this.addAllEdges(cells));\n\t}\n\telse\n\t{\n\t\tcells = cells.slice();\n\t\t\n\t\t// Removes edges that are currently not\n\t\t// visible as those cannot be updated\n\t\tvar edges = this.getDeletableCells(this.getAllEdges(cells));\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tif (this.view.getState(edges[i]) == null &&\n\t\t\t\t!dict.get(edges[i]))\n\t\t\t{\n\t\t\t\tdict.put(edges[i], true);\n\t\t\t\tcells.push(edges[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsRemoved(cells);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE_CELLS, \n\t\t\t\t'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cells;\n};\n\n/**\n * Function: cellsRemoved\n * \n * Removes the given cells from the model. This method fires\n * <mxEvent.CELLS_REMOVED> while the transaction is in progress.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to remove.\n */\nmxGraph.prototype.cellsRemoved = function(cells)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar scale = this.view.scale;\n\t\tvar tr = this.view.translate;\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Creates hashtable for faster lookup\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\t// Disconnects edges which are not being removed\n\t\t\t\tvar edges = this.getAllEdges([cells[i]]);\n\t\t\t\t\n\t\t\t\tvar disconnectTerminal = mxUtils.bind(this, function(edge, source)\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(edge);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Checks if terminal is being removed\n\t\t\t\t\t\tvar terminal = this.model.getTerminal(edge, source);\n\t\t\t\t\t\tvar connected = false;\n\t\t\t\t\t\tvar tmp = terminal;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (cells[i] == tmp)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconnected = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\ttmp = this.model.getParent(tmp);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (connected)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\tvar state = this.view.getState(edge);\n\n\t\t\t\t\t\t\tif (state != null && state.absolutePoints != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\t\t\t\t\t\t\t\tvar n = (source) ? 0 : pts.length - 1;\n\n\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\tpts[n].x / scale - tr.x - state.origin.x,\n\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y - state.origin.y), source);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// Fallback to center of terminal if routing\n\t\t\t\t\t\t\t\t// points are not available to add new point\n\t\t\t\t\t\t\t\t// KNOWN: Should recurse to find parent offset\n\t\t\t\t\t\t\t\t// of edge for nested groups but invisible edges\n\t\t\t\t\t\t\t\t// should be removed in removeCells step\n\t\t\t\t\t\t\t\tvar tstate = this.view.getState(terminal);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tstate != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(new mxPoint(\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterX() / scale - tr.x,\n\t\t\t\t\t\t\t\t\t\ttstate.getCenterY() / scale - tr.y), source);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t\t\t\tthis.model.setTerminal(edge, null, source);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (!dict.get(edges[j]))\n\t\t\t\t\t{\n\t\t\t\t\t\tdict.put(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], true);\n\t\t\t\t\t\tdisconnectTerminal(edges[j], false);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.model.remove(cells[i]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_REMOVED, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: splitEdge\n * \n * Splits the given edge by adding the newEdge between the previous source\n * and the given cell and reconnecting the source of the given edge to the\n * given cell. This method fires <mxEvent.SPLIT_EDGE> while the transaction\n * is in progress. Returns the new edge that was inserted.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that represents the cells to insert into the edge.\n * newEdge - <mxCell> that represents the edge to be inserted.\n * dx - Optional integer that specifies the vector to move the cells.\n * dy - Optional integer that specifies the vector to move the cells.\n */\nmxGraph.prototype.splitEdge = function(edge, cells, newEdge, dx, dy)\n{\n\tdx = dx || 0;\n\tdy = dy || 0;\n\n\tvar parent = this.model.getParent(edge);\n\tvar source = this.model.getTerminal(edge, true);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tif (newEdge == null)\n\t\t{\n\t\t\tnewEdge = this.cloneCell(edge);\n\t\t\t\n\t\t\t// Removes waypoints before/after new cell\n\t\t\tvar state = this.view.getState(edge);\n\t\t\tvar geo = this.getCellGeometry(newEdge);\n\t\t\t\n\t\t\tif (geo != null && geo.points != null && state != null)\n\t\t\t{\n\t\t\t\tvar t = this.view.translate;\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar idx = mxUtils.findNearestSegment(state, (dx + t.x) * s, (dy + t.y) * s);\n\t\t\t\tgeo.points = geo.points.slice(0, idx);\n\t\t\t\t\t\t\t\t\n\t\t\t\tgeo = this.getCellGeometry(edge);\n\t\t\t\t\n\t\t\t\tif (geo != null && geo.points != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.points = geo.points.slice(idx);\n\t\t\t\t\tthis.model.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.cellsMoved(cells, dx, dy, false, false);\n\t\tthis.cellsAdded(cells, parent, this.model.getChildCount(parent), null, null,\n\t\t\t\ttrue);\n\t\tthis.cellsAdded([newEdge], parent, this.model.getChildCount(parent),\n\t\t\t\tsource, cells[0], false);\n\t\tthis.cellConnected(edge, cells[0], true);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.SPLIT_EDGE, 'edge', edge,\n\t\t\t\t'cells', cells, 'newEdge', newEdge, 'dx', dx, 'dy', dy));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn newEdge;\n};\n\n/**\n * Group: Cell visibility\n */\n\n/**\n * Function: toggleCells\n * \n * Sets the visible state of the specified cells and all connected edges\n * if includeEdges is true. The change is carried out using <cellsToggled>.\n * This method fires <mxEvent.TOGGLE_CELLS> while the transaction is in\n * progress. Returns the cells whose visible state was changed.\n * \n * Parameters:\n * \n * show - Boolean that specifies the visible state to be assigned.\n * cells - Array of <mxCells> whose visible state should be changed. If\n * null is specified then the selection cells are used.\n * includeEdges - Optional boolean indicating if the visible state of all\n * connected edges should be changed as well. Default is true.\n */\nmxGraph.prototype.toggleCells = function(show, cells, includeEdges)\n{\n\tif (cells == null)\n\t{\n\t\tcells = this.getSelectionCells();\n\t}\n\n\t// Adds all connected edges recursively\n\tif (includeEdges)\n\t{\n\t\tcells = this.addAllEdges(cells);\n\t}\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsToggled(cells, show);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.TOGGLE_CELLS,\n\t\t\t'show', show, 'cells', cells, 'includeEdges', includeEdges));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsToggled\n * \n * Sets the visible state of the specified cells.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose visible state should be changed.\n * show - Boolean that specifies the visible state to be assigned.\n */\nmxGraph.prototype.cellsToggled = function(cells, show)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.model.setVisible(cells[i], show);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Folding\n */\n\n/**\n * Function: foldCells\n * \n * Sets the collapsed state of the specified cells and all descendants\n * if recurse is true. The change is carried out using <cellsFolded>.\n * This method fires <mxEvent.FOLD_CELLS> while the transaction is in\n * progress. Returns the cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Optional boolean indicating if the collapsed state of all\n * descendants should be set. Default is false.\n * cells - Array of <mxCells> whose collapsed state should be set. If\n * null is specified then the foldable selection cells are used.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n * evt - Optional native event that triggered the invocation.\n */\nmxGraph.prototype.foldCells = function(collapse, recurse, cells, checkFoldable, evt)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells == null)\n\t{\n\t\tcells = this.getFoldableCells(this.getSelectionCells(), collapse);\n\t}\n\n\tthis.stopEditing(false);\n\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsFolded(cells, collapse, recurse, checkFoldable);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FOLD_CELLS,\n\t\t\t'collapse', collapse, 'recurse', recurse, 'cells', cells));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsFolded\n * \n * Sets the collapsed state of the specified cells. This method fires\n * <mxEvent.CELLS_FOLDED> while the transaction is in progress. Returns the\n * cells whose collapsed state was changed.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose collapsed state should be set.\n * collapsed - Boolean indicating the collapsed state to be assigned.\n * recurse - Boolean indicating if the collapsed state of all descendants\n * should be set.\n * checkFoldable - Optional boolean indicating of isCellFoldable should be\n * checked. Default is false.\n */\nmxGraph.prototype.cellsFolded = function(cells, collapse, recurse, checkFoldable)\n{\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif ((!checkFoldable || this.isCellFoldable(cells[i], collapse)) &&\n\t\t\t\t\tcollapse != this.isCellCollapsed(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.model.setCollapsed(cells[i], collapse);\n\t\t\t\t\tthis.swapBounds(cells[i], collapse);\n\n\t\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (recurse)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\t\t\t\tthis.cellsFolded(children, collapse, recurse);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_FOLDED,\n\t\t\t\t'cells', cells, 'collapse', collapse, 'recurse', recurse));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swapBounds\n * \n * Swaps the alternate and the actual bounds in the geometry of the given\n * cell invoking <updateAlternateBounds> before carrying out the swap.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the bounds should be swapped.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.swapBounds = function(cell, willCollapse)\n{\n\tif (cell != null)\n\t{\n\t\tvar geo = this.model.getGeometry(cell);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tthis.updateAlternateBounds(cell, geo, willCollapse);\n\t\t\tgeo.swap();\n\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: updateAlternateBounds\n * \n * Updates or sets the alternate bounds in the given geometry for the given\n * cell depending on whether the cell is going to be collapsed. If no\n * alternate bounds are defined in the geometry and\n * <collapseToPreferredSize> is true, then the preferred size is used for\n * the alternate bounds. The top, left corner is always kept at the same\n * location.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the geometry is being udpated.\n * g - <mxGeometry> for which the alternate bounds should be updated.\n * willCollapse - Boolean indicating if the cell is going to be collapsed.\n */\nmxGraph.prototype.updateAlternateBounds = function(cell, geo, willCollapse)\n{\n\tif (cell != null && geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\tif (geo.alternateBounds == null)\n\t\t{\n\t\t\tvar bounds = geo;\n\t\t\t\n\t\t\tif (this.collapseToPreferredSize)\n\t\t\t{\n\t\t\t\tvar tmp = this.getPreferredSizeForCell(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tbounds = tmp;\n\n\t\t\t\t\tvar startSize = mxUtils.getValue(style, mxConstants.STYLE_STARTSIZE);\n\n\t\t\t\t\tif (startSize > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbounds.height = Math.max(bounds.height, startSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tgeo.alternateBounds = new mxRectangle(0, 0, bounds.width, bounds.height);\n\t\t}\n\t\t\n\t\tif (geo.alternateBounds != null)\n\t\t{\n\t\t\tgeo.alternateBounds.x = geo.x;\n\t\t\tgeo.alternateBounds.y = geo.y;\n\t\t\t\n\t\t\tvar alpha = mxUtils.toRadians(style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar dx = geo.alternateBounds.getCenterX() - geo.getCenterX();\n\t\t\t\tvar dy = geo.alternateBounds.getCenterY() - geo.getCenterY();\n\t\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\n\t\t\t\tvar dx2 = cos * dx - sin * dy;\n\t\t\t\tvar dy2 = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tgeo.alternateBounds.x += dx2 - dx;\n\t\t\t\tgeo.alternateBounds.y += dy2 - dy;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: addAllEdges\n * \n * Returns an array with the given cells and all edges that are connected\n * to a cell or one of its descendants.\n */\nmxGraph.prototype.addAllEdges = function(cells)\n{\n\tvar allCells = cells.slice();\n\t\n\treturn mxUtils.removeDuplicates(allCells.concat(this.getAllEdges(cells)));\n};\n\n/**\n * Function: getAllEdges\n * \n * Returns all edges connected to the given cells or its descendants.\n */\nmxGraph.prototype.getAllEdges = function(cells)\n{\n\tvar edges = [];\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar edgeCount = this.model.getEdgeCount(cells[i]);\n\t\t\t\n\t\t\tfor (var j = 0; j < edgeCount; j++)\n\t\t\t{\n\t\t\t\tedges.push(this.model.getEdgeAt(cells[i], j));\n\t\t\t}\n\n\t\t\t// Recurses\n\t\t\tvar children = this.model.getChildren(cells[i]);\n\t\t\tedges = edges.concat(this.getAllEdges(children));\n\t\t}\n\t}\n\t\n\treturn edges;\n};\n\n/**\n * Group: Cell sizing\n */\n\n/**\n * Function: updateCellSize\n * \n * Updates the size of the given cell in the model using <cellSizeUpdated>.\n * This method fires <mxEvent.UPDATE_CELL_SIZE> while the transaction is in\n * progress. Returns the cell whose size was updated.\n * \n * Parameters:\n * \n * cell - <mxCell> whose size should be updated.\n */\nmxGraph.prototype.updateCellSize = function(cell, ignoreChildren)\n{\n\tignoreChildren = (ignoreChildren != null) ? ignoreChildren : false;\n\t\n\tthis.model.beginUpdate();\t\t\t\t\n\ttry\n\t{\n\t\tthis.cellSizeUpdated(cell, ignoreChildren);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.UPDATE_CELL_SIZE,\n\t\t\t\t'cell', cell, 'ignoreChildren', ignoreChildren));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: cellSizeUpdated\n * \n * Updates the size of the given cell in the model using\n * <getPreferredSizeForCell> to get the new size.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the size should be changed.\n */\nmxGraph.prototype.cellSizeUpdated = function(cell, ignoreChildren)\n{\n\tif (cell != null)\n\t{\n\t\tthis.model.beginUpdate();\t\t\t\t\n\t\ttry\n\t\t{\n\t\t\tvar size = this.getPreferredSizeForCell(cell);\n\t\t\tvar geo = this.model.getGeometry(cell);\n\t\t\t\n\t\t\tif (size != null && geo != null)\n\t\t\t{\n\t\t\t\tvar collapsed = this.isCellCollapsed(cell);\n\t\t\t\tgeo = geo.clone();\n\n\t\t\t\tif (this.isSwimlane(cell))\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\t\t\tvar cellStyle = this.model.getStyle(cell);\n\n\t\t\t\t\tif (cellStyle == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.height + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.height = size.height + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tcellStyle = mxUtils.setStyle(cellStyle,\n\t\t\t\t\t\t\t\tmxConstants.STYLE_STARTSIZE, size.width + 8);\n\n\t\t\t\t\t\tif (collapsed)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.width = size.width + 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.model.setStyle(cell, cellStyle);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\t\t\t\tvar align = (state.style[mxConstants.STYLE_ALIGN] || mxConstants.ALIGN_CENTER);\n\t\t\t\t\t\n\t\t\t\t\tif (align == mxConstants.ALIGN_RIGHT)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += geo.width - size.width;\n\t\t\t\t\t}\n\t\t\t\t\telse if (align == mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.x += Math.round((geo.width - size.width) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar valign = this.getVerticalAlign(state);\n\t\t\t\t\t\n\t\t\t\t\tif (valign == mxConstants.ALIGN_BOTTOM)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += geo.height - size.height;\n\t\t\t\t\t}\n\t\t\t\t\telse if (valign == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.y += Math.round((geo.height - size.height) / 2);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeo.width = size.width;\n\t\t\t\t\tgeo.height = size.height;\n\t\t\t\t}\n\n\t\t\t\tif (!ignoreChildren && !collapsed)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = this.view.getBounds(this.model.getChildren(cell));\n\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tr = this.view.translate;\n\t\t\t\t\t\tvar scale = this.view.scale;\n\n\t\t\t\t\t\tvar width = (bounds.x + bounds.width) / scale - geo.x - tr.x;\n\t\t\t\t\t\tvar height = (bounds.y + bounds.height) / scale - geo.y - tr.y;\n\n\t\t\t\t\t\tgeo.width = Math.max(geo.width, width);\n\t\t\t\t\t\tgeo.height = Math.max(geo.height, height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.cellsResized([cell], [geo], false);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getPreferredSizeForCell\n * \n * Returns the preferred width and height of the given <mxCell> as an\n * <mxRectangle>. To implement a minimum width, add a new style eg.\n * minWidth in the vertex and override this method as follows.\n * \n * (code)\n * var graphGetPreferredSizeForCell = graph.getPreferredSizeForCell;\n * graph.getPreferredSizeForCell = function(cell)\n * {\n *   var result = graphGetPreferredSizeForCell.apply(this, arguments);\n *   var style = this.getCellStyle(cell);\n *   \n *   if (style['minWidth'] > 0)\n *   {\n *     result.width = Math.max(style['minWidth'], result.width);\n *   }\n * \n *   return result;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> for which the preferred size should be returned.\n */\nmxGraph.prototype.getPreferredSizeForCell = function(cell)\n{\n\tvar result = null;\n\t\n\tif (cell != null)\n\t{\n\t\tvar state = this.view.getState(cell) || this.view.createState(cell);\n\t\tvar style = state.style;\n\n\t\tif (!this.model.isEdge(cell))\n\t\t{\n\t\t\tvar fontSize = style[mxConstants.STYLE_FONTSIZE] || mxConstants.DEFAULT_FONTSIZE;\n\t\t\tvar dx = 0;\n\t\t\tvar dy = 0;\n\t\t\t\n\t\t\t// Adds dimension of image if shape is a label\n\t\t\tif (this.getImage(state) != null || style[mxConstants.STYLE_IMAGE] != null)\n\t\t\t{\n\t\t\t\tif (style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_LABEL)\n\t\t\t\t{\n\t\t\t\t\tif (style[mxConstants.STYLE_VERTICAL_ALIGN] == mxConstants.ALIGN_MIDDLE)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx += parseFloat(style[mxConstants.STYLE_IMAGE_WIDTH]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (style[mxConstants.STYLE_ALIGN] != mxConstants.ALIGN_CENTER)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy += parseFloat(style[mxConstants.STYLE_IMAGE_HEIGHT]) || mxLabel.prototype.imageSize;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adds spacings\n\t\t\tdx += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdx += style[mxConstants.STYLE_SPACING_LEFT] || 0;\n\t\t\tdx += style[mxConstants.STYLE_SPACING_RIGHT] || 0;\n\n\t\t\tdy += 2 * (style[mxConstants.STYLE_SPACING] || 0);\n\t\t\tdy += style[mxConstants.STYLE_SPACING_TOP] || 0;\n\t\t\tdy += style[mxConstants.STYLE_SPACING_BOTTOM] || 0;\n\t\t\t\n\t\t\t// Add spacing for collapse/expand icon\n\t\t\t// LATER: Check alignment and use constants\n\t\t\t// for image spacing\n\t\t\tvar image = this.getFoldingImage(state);\n\t\t\t\n\t\t\tif (image != null)\n\t\t\t{\n\t\t\t\tdx += image.width + 8;\n\t\t\t}\n\n\t\t\t// Adds space for label\n\t\t\tvar value = this.cellRenderer.getLabelValue(state);\n\n\t\t\tif (value != null && value.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.isHtmlLabel(state.cell))\n\t\t\t\t{\n\t\t\t\t\tvalue = mxUtils.htmlEntities(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvalue = value.replace(/\\n/g, '<br>');\n\t\t\t\t\n\t\t\t\tvar size = mxUtils.getSizeForString(value, fontSize, style[mxConstants.STYLE_FONTFAMILY]);\n\t\t\t\tvar width = size.width + dx;\n\t\t\t\tvar height = size.height + dy;\n\t\t\t\t\n\t\t\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t\t\t{\n\t\t\t\t\tvar tmp = height;\n\t\t\t\t\t\n\t\t\t\t\theight = width;\n\t\t\t\t\twidth = tmp;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (this.gridEnabled)\n\t\t\t\t{\n\t\t\t\t\twidth = this.snap(width + this.gridSize / 2);\n\t\t\t\t\theight = this.snap(height + this.gridSize / 2);\n\t\t\t\t}\n\n\t\t\t\tresult = new mxRectangle(0, 0, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gs2 = 4 * this.gridSize;\n\t\t\t\tresult = new mxRectangle(0, 0, gs2, gs2);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: resizeCell\n * \n * Sets the bounds of the given cell using <resizeCells>. Returns the\n * cell which was passed to the function.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangle> that represents the new bounds.\n */\nmxGraph.prototype.resizeCell = function(cell, bounds, recurse)\n{\n\treturn this.resizeCells([cell], [bounds], recurse)[0];\n};\n\n/**\n * Function: resizeCells\n * \n * Sets the bounds of the given cells and fires a <mxEvent.RESIZE_CELLS>\n * event while the transaction is in progress. Returns the cells which\n * have been passed to the function.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n */\nmxGraph.prototype.resizeCells = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : this.isRecursiveResize();\n\t\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tthis.cellsResized(cells, bounds, recurse);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.RESIZE_CELLS,\n\t\t\t\t'cells', cells, 'bounds', bounds));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsResized\n * \n * Sets the bounds of the given cells and fires a <mxEvent.CELLS_RESIZED>\n * event. If <extendParents> is true, then the parent is extended if a\n * child size is changed so that it overlaps with the parent.\n * \n * The following example shows how to control group resizes to make sure\n * that all child cells stay within the group.\n * \n * (code)\n * graph.addListener(mxEvent.CELLS_RESIZED, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n *   \n *   if (cells != null)\n *   {\n *     for (var i = 0; i < cells.length; i++)\n *     {\n *       if (graph.getModel().getChildCount(cells[i]) > 0)\n *       {\n *         var geo = graph.getCellGeometry(cells[i]);\n *         \n *         if (geo != null)\n *         {\n *           var children = graph.getChildCells(cells[i], true, true);\n *           var bounds = graph.getBoundingBoxFromGeometry(children, true);\n *           \n *           geo = geo.clone();\n *           geo.width = Math.max(geo.width, bounds.width);\n *           geo.height = Math.max(geo.height, bounds.height);\n *           \n *           graph.getModel().setGeometry(cells[i], geo);\n *         }\n *       }\n *     }\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be changed.\n * bounds - Array of <mxRectangles> that represent the new bounds.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellsResized = function(cells, bounds, recurse)\n{\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tif (cells != null && bounds != null && cells.length == bounds.length)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.cellResized(cells[i], bounds[i], false, recurse);\n\n\t\t\t\tif (this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnResize)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_RESIZED,\n\t\t\t\t\t'cells', cells, 'bounds', bounds));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: cellResized\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be changed.\n * bounds - <mxRectangles> that represent the new bounds.\n * ignoreRelative - Boolean that indicates if relative cells should be ignored.\n * recurse - Optional boolean that specifies if the children should be resized.\n */\nmxGraph.prototype.cellResized = function(cell, bounds, ignoreRelative, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null && (geo.x != bounds.x || geo.y != bounds.y ||\n\t\tgeo.width != bounds.width || geo.height != bounds.height))\n\t{\n\t\tgeo = geo.clone();\n\n\t\tif (!ignoreRelative && geo.relative)\n\t\t{\n\t\t\tvar offset = geo.offset;\n\n\t\t\tif (offset != null)\n\t\t\t{\n\t\t\t\toffset.x += bounds.x - geo.x;\n\t\t\t\toffset.y += bounds.y - geo.y;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.x = bounds.x;\n\t\t\tgeo.y = bounds.y;\n\t\t}\n\n\t\tgeo.width = bounds.width;\n\t\tgeo.height = bounds.height;\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, geo.x);\n\t\t\tgeo.y = Math.max(0, geo.y);\n\t\t}\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (recurse)\n\t\t\t{\n\t\t\t\tthis.resizeChildCells(cell, geo);\n\t\t\t}\n\t\t\t\t\t\t\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\tthis.constrainChildCells(cell);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeChildCells\n * \n * Resizes the child cells of the given cell for the given new geometry with\n * respect to the current geometry of the cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n * newGeo - <mxGeometry> that represents the new bounds.\n */\nmxGraph.prototype.resizeChildCells = function(cell, newGeo)\n{\n\tvar geo = this.model.getGeometry(cell);\n\tvar dx = newGeo.width / geo.width;\n\tvar dy = newGeo.height / geo.height;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.scaleCell(this.model.getChildAt(cell, i), dx, dy, true);\n\t}\n};\n\n/**\n * Function: constrainChildCells\n * \n * Constrains the children of the given cell using <constrainChild>.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.constrainChildCells = function(cell)\n{\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tthis.constrainChild(this.model.getChildAt(cell, i));\n\t}\n};\n\n/**\n * Function: scaleCell\n * \n * Scales the points, position and size of the given cell according to the\n * given vertical and horizontal scaling factors.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be scaled.\n * dx - Horizontal scaling factor.\n * dy - Vertical scaling factor.\n * recurse - Boolean indicating if the child cells should be scaled.\n */\nmxGraph.prototype.scaleCell = function(cell, dx, dy, recurse)\n{\n\tvar geo = this.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tgeo = geo.clone();\n\t\t\n\t\t// Stores values for restoring based on style\n\t\tvar x = geo.x;\n\t\tvar y = geo.y\n\t\tvar w = geo.width;\n\t\tvar h = geo.height;\n\t\t\n\t\tgeo.scale(dx, dy, style[mxConstants.STYLE_ASPECT] == 'fixed');\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_WIDTH] == '1')\n\t\t{\n\t\t\tgeo.width = w * dx;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_WIDTH] == '0')\n\t\t{\n\t\t\tgeo.width = w;\n\t\t}\n\t\t\n\t\tif (style[mxConstants.STYLE_RESIZE_HEIGHT] == '1')\n\t\t{\n\t\t\tgeo.height = h * dy;\n\t\t}\n\t\telse if (style[mxConstants.STYLE_RESIZE_HEIGHT] == '0')\n\t\t{\n\t\t\tgeo.height = h;\n\t\t}\n\t\t\n\t\tif (!this.isCellMovable(cell))\n\t\t{\n\t\t\tgeo.x = x;\n\t\t\tgeo.y = y;\n\t\t}\n\t\t\n\t\tif (!this.isCellResizable(cell))\n\t\t{\n\t\t\tgeo.width = w;\n\t\t\tgeo.height = h;\n\t\t}\n\n\t\tif (this.model.isVertex(cell))\n\t\t{\n\t\t\tthis.cellResized(cell, geo, true, recurse);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.model.setGeometry(cell, geo);\n\t\t}\n\t}\n};\n\n/**\n * Function: extendParent\n * \n * Resizes the parents recursively so that they contain the complete area\n * of the resized child cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.extendParent = function(cell)\n{\n\tif (cell != null)\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\tvar p = this.getCellGeometry(parent);\n\t\t\n\t\tif (parent != null && p != null && !this.isCellCollapsed(parent))\n\t\t{\n\t\t\tvar geo = this.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative &&\n\t\t\t\t(p.width < geo.x + geo.width ||\n\t\t\t\tp.height < geo.y + geo.height))\n\t\t\t{\n\t\t\t\tp = p.clone();\n\t\t\t\t\n\t\t\t\tp.width = Math.max(p.width, geo.x + geo.width);\n\t\t\t\tp.height = Math.max(p.height, geo.y + geo.height);\n\t\t\t\t\n\t\t\t\tthis.cellsResized([parent], [p], false);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Cell moving\n */\n\n/**\n * Function: importCells\n * \n * Clones and inserts the given cells into the graph using the move\n * method and returns the inserted cells. This shortcut is used if\n * cells are inserted via datatransfer.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be imported.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.importCells = function(cells, dx, dy, target, evt, mapping)\n{\t\n\treturn this.moveCells(cells, dx, dy, true, target, evt, mapping);\n};\n\n/**\n * Function: moveCells\n * \n * Moves or clones the specified cells and moves the cells or clones by the\n * given amount, adding them to the optional target cell. The evt is the\n * mouse event as the mouse was released. The change is carried out using\n * <cellsMoved>. This method fires <mxEvent.MOVE_CELLS> while the\n * transaction is in progress. Returns the cells that were moved.\n * \n * Use the following code to move all cells in the graph.\n * \n * (code)\n * graph.moveCells(graph.getChildCells(null, true, true), 10, 10);\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be moved, cloned or added to the target.\n * dx - Integer that specifies the x-coordinate of the vector. Default is 0.\n * dy - Integer that specifies the y-coordinate of the vector. Default is 0.\n * clone - Boolean indicating if the cells should be cloned. Default is false.\n * target - <mxCell> that represents the new parent of the cells.\n * evt - Mouseevent that triggered the invocation.\n * mapping - Optional mapping for existing clones.\n */\nmxGraph.prototype.moveCells = function(cells, dx, dy, clone, target, evt, mapping)\n{\n\tdx = (dx != null) ? dx : 0;\n\tdy = (dy != null) ? dy : 0;\n\tclone = (clone != null) ? clone : false;\n\t\n\tif (cells != null && (dx != 0 || dy != 0 || clone || target != null))\n\t{\n\t\t// Removes descendants with ancestors in cells to avoid multiple moving\n\t\tcells = this.model.getTopmostCells(cells);\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Faster cell lookups to remove relative edge labels with selected\n\t\t\t// terminals to avoid explicit and implicit move at same time\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tvar isSelected = mxUtils.bind(this, function(cell)\n\t\t\t{\n\t\t\t\twhile (cell != null)\n\t\t\t\t{\n\t\t\t\t\tif (dict.get(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcell = this.model.getParent(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\t// Removes relative edge labels with selected terminals\n\t\t\tvar checked = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\n\t\t\t\tif ((geo == null || !geo.relative) || !this.model.isEdge(parent) ||\n\t\t\t\t\t(!isSelected(this.model.getTerminal(parent, true)) &&\n\t\t\t\t\t!isSelected(this.model.getTerminal(parent, false))))\n\t\t\t\t{\n\t\t\t\t\tchecked.push(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcells = checked;\n\t\t\t\n\t\t\tif (clone)\n\t\t\t{\n\t\t\t\tcells = this.cloneCells(cells, this.isCloneInvalidEdges(), mapping);\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\ttarget = this.getDefaultParent();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// FIXME: Cells should always be inserted first before any other edit\n\t\t\t// to avoid forward references in sessions.\n\t\t\t// Need to disable allowNegativeCoordinates if target not null to\n\t\t\t// allow for temporary negative numbers until cellsAdded is called.\n\t\t\tvar previous = this.isAllowNegativeCoordinates();\n\t\t\t\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tthis.setAllowNegativeCoordinates(true);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cellsMoved(cells, dx, dy, !clone && this.isDisconnectOnMove()\n\t\t\t\t\t&& this.isAllowDanglingEdges(), target == null,\n\t\t\t\t\tthis.isExtendParentsOnMove() && target == null);\n\t\t\t\n\t\t\tthis.setAllowNegativeCoordinates(previous);\n\n\t\t\tif (target != null)\n\t\t\t{\n\t\t\t\tvar index = this.model.getChildCount(target);\n\t\t\t\tthis.cellsAdded(cells, target, index, null, null, true);\n\t\t\t}\n\n\t\t\t// Dispatches a move event\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.MOVE_CELLS, 'cells', cells,\n\t\t\t\t'dx', dx, 'dy', dy, 'clone', clone, 'target', target, 'event', evt));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n\n\treturn cells;\n};\n\n/**\n * Function: cellsMoved\n * \n * Moves the specified cells by the given vector, disconnecting the cells\n * using disconnectGraph is disconnect is true. This method fires\n * <mxEvent.CELLS_MOVED> while the transaction is in progress.\n */\nmxGraph.prototype.cellsMoved = function(cells, dx, dy, disconnect, constrain, extend)\n{\n\tif (cells != null && (dx != 0 || dy != 0))\n\t{\n\t\textend = (extend != null) ? extend : false;\n\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (disconnect)\n\t\t\t{\n\t\t\t\tthis.disconnectGraph(cells);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tthis.translateCell(cells[i], dx, dy);\n\t\t\t\t\n\t\t\t\tif (extend && this.isExtendParent(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.extendParent(cells[i]);\n\t\t\t\t}\n\t\t\t\telse if (constrain)\n\t\t\t\t{\n\t\t\t\t\tthis.constrainChild(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.resetEdgesOnMove)\n\t\t\t{\n\t\t\t\tthis.resetEdges(cells);\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELLS_MOVED,\n\t\t\t\t'cells', cells, 'dx', dx, 'dy', dy, 'disconnect', disconnect));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: translateCell\n * \n * Translates the geometry of the given cell and stores the new,\n * translated geometry in the model as an atomic change.\n */\nmxGraph.prototype.translateCell = function(cell, dx, dy)\n{\n\tvar geo = this.model.getGeometry(cell);\n\n\tif (geo != null)\n\t{\n\t\tdx = parseFloat(dx);\n\t\tdy = parseFloat(dy);\n\t\tgeo = geo.clone();\n\t\tgeo.translate(dx, dy);\n\n\t\tif (!geo.relative && this.model.isVertex(cell) && !this.isAllowNegativeCoordinates())\n\t\t{\n\t\t\tgeo.x = Math.max(0, parseFloat(geo.x));\n\t\t\tgeo.y = Math.max(0, parseFloat(geo.y));\n\t\t}\n\t\t\n\t\tif (geo.relative && !this.model.isEdge(cell))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar angle = 0;\n\t\t\t\n\t\t\tif (this.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\n\t\t\t\tangle = mxUtils.getValue(style, mxConstants.STYLE_ROTATION, 0);\n\t\t\t}\n\t\t\t\n\t\t\tif (angle != 0)\n\t\t\t{\n\t\t\t\tvar rad = mxUtils.toRadians(-angle);\n\t\t\t\tvar cos = Math.cos(rad);\n\t\t\t\tvar sin = Math.sin(rad);\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(dx, dy), cos, sin, new mxPoint(0, 0));\n\t\t\t\tdx = pt.x;\n\t\t\t\tdy = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x = parseFloat(geo.offset.x) + dx;\n\t\t\t\tgeo.offset.y = parseFloat(geo.offset.y) + dy;\n\t\t\t}\n\t\t}\n\n\t\tthis.model.setGeometry(cell, geo);\n\t}\n};\n\n/**\n * Function: getCellContainmentArea\n * \n * Returns the <mxRectangle> inside which a cell is to be kept.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the area should be returned.\n */\nmxGraph.prototype.getCellContainmentArea = function(cell)\n{\n\tif (cell != null && !this.model.isEdge(cell))\n\t{\n\t\tvar parent = this.model.getParent(cell);\n\t\t\n\t\tif (parent != null && parent != this.getDefaultParent())\n\t\t{\n\t\t\tvar g = this.model.getGeometry(parent);\n\t\t\t\n\t\t\tif (g != null)\n\t\t\t{\n\t\t\t\tvar x = 0;\n\t\t\t\tvar y = 0;\n\t\t\t\tvar w = g.width;\n\t\t\t\tvar h = g.height;\n\t\t\t\t\n\t\t\t\tif (this.isSwimlane(parent))\n\t\t\t\t{\n\t\t\t\t\tvar size = this.getStartSize(parent);\n\t\t\t\t\t\n\t\t\t\t\tvar state = this.view.getState(parent);\n\t\t\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(parent);\n\t\t\t\t\tvar dir = mxUtils.getValue(style, mxConstants.STYLE_DIRECTION, mxConstants.DIRECTION_EAST);\n\t\t\t\t\tvar flipH = mxUtils.getValue(style, mxConstants.STYLE_FLIPH, 0) == 1;\n\t\t\t\t\tvar flipV = mxUtils.getValue(style, mxConstants.STYLE_FLIPV, 0) == 1;\n\t\t\t\t\t\n\t\t\t\t\tif (dir == mxConstants.DIRECTION_SOUTH || dir == mxConstants.DIRECTION_NORTH)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = size.width;\n\t\t\t\t\t\tsize.width = size.height;\n\t\t\t\t\t\tsize.height = tmp;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((dir == mxConstants.DIRECTION_EAST && !flipV) || (dir == mxConstants.DIRECTION_NORTH && !flipH) ||\n\t\t\t\t\t\t(dir == mxConstants.DIRECTION_WEST && flipV) || (dir == mxConstants.DIRECTION_SOUTH && flipH))\n\t\t\t\t\t{\n\t\t\t\t\t\tx = size.width;\n\t\t\t\t\t\ty = size.height;\n\t\t\t\t\t}\n\n\t\t\t\t\tw -= size.width;\n\t\t\t\t\th -= size.height;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn new mxRectangle(x, y, w, h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getMaximumGraphBounds\n * \n * Returns the bounds inside which the diagram should be kept as an\n * <mxRectangle>.\n */\nmxGraph.prototype.getMaximumGraphBounds = function()\n{\n\treturn this.maximumGraphBounds;\n};\n\n/**\n * Function: constrainChild\n * \n * Keeps the given cell inside the bounds returned by\n * <getCellContainmentArea> for its parent, according to the rules defined by\n * <getOverlap> and <isConstrainChild>. This modifies the cell's geometry\n * in-place and does not clone it.\n * \n * Parameters:\n * \n * cells - <mxCell> which should be constrained.\n * sizeFirst - Specifies if the size should be changed first. Default is true.\n */\nmxGraph.prototype.constrainChild = function(cell, sizeFirst)\n{\n\tsizeFirst = (sizeFirst != null) ? sizeFirst : true;\n\t\n\tif (cell != null)\n\t{\n\t\tvar geo = this.getCellGeometry(cell);\n\t\t\n\t\tif (geo != null && (this.isConstrainRelativeChildren() || !geo.relative))\n\t\t{\n\t\t\tvar parent = this.model.getParent(cell);\n\t\t\tvar pgeo = this.getCellGeometry(parent);\n\t\t\tvar max = this.getMaximumGraphBounds();\n\t\t\t\n\t\t\t// Finds parent offset\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar off = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\n\t\t\t\tif (off != null)\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\n\t\t\t\t\tmax.x -= off.x;\n\t\t\t\t\tmax.y -= off.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (this.isConstrainChild(cell))\n\t\t\t{\n\t\t\t\tvar tmp = this.getCellContainmentArea(cell);\n\t\t\t\t\n\t\t\t\tif (tmp != null)\n\t\t\t\t{\n\t\t\t\t\tvar overlap = this.getOverlap(cell);\n\t\n\t\t\t\t\tif (overlap > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\t\n\t\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the intersection between max and tmp\n\t\t\t\t\tif (max == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (max != null)\n\t\t\t{\n\t\t\t\tvar cells = [cell];\n\t\t\t\t\n\t\t\t\tif (!this.isCellCollapsed(cell))\n\t\t\t\t{\n\t\t\t\t\tvar desc = this.model.getDescendants(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < desc.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.isCellVisible(desc[i]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcells.push(desc[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar bbox = this.getBoundingBoxFromGeometry(cells, false);\n\t\t\t\t\n\t\t\t\tif (bbox != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative horizontal movement\n\t\t\t\t\tvar dx = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.width > max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx = geo.width - max.width;\n\t\t\t\t\t\tgeo.width -= dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x + bbox.width > max.x + max.width)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x + bbox.width - max.x - max.width - dx;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Cumulative vertical movement\n\t\t\t\t\tvar dy = 0;\n\t\t\t\t\t\n\t\t\t\t\tif (geo.height > max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy = geo.height - max.height;\n\t\t\t\t\t\tgeo.height -= dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y + bbox.height > max.y + max.height)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y + bbox.height - max.y - max.height - dy;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.x < max.x)\n\t\t\t\t\t{\n\t\t\t\t\t\tdx -= bbox.x - max.x;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox.y < max.y)\n\t\t\t\t\t{\n\t\t\t\t\t\tdy -= bbox.y - max.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (dx != 0 || dy != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Relative geometries are moved via absolute offset\n\t\t\t\t\t\t\tif (geo.offset == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo.offset = new mxPoint();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tgeo.offset.x += dx;\n\t\t\t\t\t\t\tgeo.offset.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo.x += dx;\n\t\t\t\t\t\t\tgeo.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.model.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdges\n * \n * Resets the control points of the edges that are connected to the given\n * cells if not both ends of the edge are in the given cells array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> for which the connected edges should be\n * reset.\n */\nmxGraph.prototype.resetEdges = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\t// Prepares faster cells lookup\n\t\tvar dict = new mxDictionary();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tdict.put(cells[i], true);\n\t\t}\n\t\t\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar edges = this.model.getEdges(cells[i]);\n\t\t\t\t\n\t\t\t\tif (edges != null)\n\t\t\t\t{\n\t\t\t\t\tfor (var j = 0; j < edges.length; j++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(edges[j]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[j], true);\n\t\t\t\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[j], false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if one of the terminals is not in the given array\n\t\t\t\t\t\tif (!dict.get(source) || !dict.get(target))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.resetEdge(edges[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.resetEdges(this.model.getChildren(cells[i]));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resetEdge\n * \n * Resets the control points of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose points should be reset.\n */\nmxGraph.prototype.resetEdge = function(edge)\n{\n\tvar geo = this.model.getGeometry(edge);\n\t\n\t// Resets the control points\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tgeo = geo.clone();\n\t\tgeo.points = [];\n\t\tthis.model.setGeometry(edge, geo);\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Group: Cell connecting and connection constraints\n */\n\n/**\n * Function: getOutlineConstraint\n * \n * Returns the constraint used to connect to the outline of the given state.\n */\nmxGraph.prototype.getOutlineConstraint = function(point, terminalState, me)\n{\n\tif (terminalState.shape != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(terminalState);\n\t\tvar direction = terminalState.style[mxConstants.STYLE_DIRECTION];\n\t\t\n\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t{\n\t\t\tbounds.x += bounds.width / 2 - bounds.height / 2;\n\t\t\tbounds.y += bounds.height / 2 - bounds.width / 2;\n\t\t\tvar tmp = bounds.width;\n\t\t\tbounds.width = bounds.height;\n\t\t\tbounds.height = tmp;\n\t\t}\n\t\n\t\tvar alpha = mxUtils.toRadians(terminalState.shape.getShapeRotation());\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(-alpha);\n\t\t\tvar sin = Math.sin(-alpha);\n\t\n\t\t\tvar ct = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\t\tpoint = mxUtils.getRotatedPoint(point, cos, sin, ct);\n\t\t}\n\n\t\tvar sx = 1;\n\t\tvar sy = 1;\n\t\tvar dx = 0;\n\t\tvar dy = 0;\n\t\t\n\t\t// LATER: Add flipping support for image shapes\n\t\tif (this.getModel().isVertex(terminalState.cell))\n\t\t{\n\t\t\tvar flipH = terminalState.style[mxConstants.STYLE_FLIPH];\n\t\t\tvar flipV = terminalState.style[mxConstants.STYLE_FLIPV];\n\t\t\t\n\t\t\t// Legacy support for stencilFlipH/V\n\t\t\tif (terminalState.shape != null && terminalState.shape.stencil != null)\n\t\t\t{\n\t\t\t\tflipH = mxUtils.getValue(terminalState.style, 'stencilFlipH', 0) == 1 || flipH;\n\t\t\t\tflipV = mxUtils.getValue(terminalState.style, 'stencilFlipV', 0) == 1 || flipV;\n\t\t\t}\n\t\t\t\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH || direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tvar tmp = flipH;\n\t\t\t\tflipH = flipV;\n\t\t\t\tflipV = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipH)\n\t\t\t{\n\t\t\t\tsx = -1;\n\t\t\t\tdx = -bounds.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (flipV)\n\t\t\t{\n\t\t\t\tsy = -1;\n\t\t\t\tdy = -bounds.height ;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpoint = new mxPoint((point.x - bounds.x) * sx - dx + bounds.x, (point.y - bounds.y) * sy - dy + bounds.y);\n\t\t\n\t\tvar x = (bounds.width == 0) ? 0 : Math.round((point.x - bounds.x) * 1000 / bounds.width) / 1000;\n\t\tvar y = (bounds.height == 0) ? 0 : Math.round((point.y - bounds.y) * 1000 / bounds.height) / 1000;\n\t\t\n\t\treturn new mxConnectionConstraint(new mxPoint(x, y), false);\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getAllConnectionConstraints\n * \n * Returns an array of all <mxConnectionConstraints> for the given terminal. If\n * the shape of the given terminal is a <mxStencilShape> then the constraints\n * of the corresponding <mxStencil> are returned.\n * \n * Parameters:\n * \n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean that specifies if the terminal is the source or target.\n */\nmxGraph.prototype.getAllConnectionConstraints = function(terminal, source)\n{\n\tif (terminal != null && terminal.shape != null && terminal.shape.stencil != null)\n\t{\n\t\treturn terminal.shape.stencil.constraints;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: getConnectionConstraint\n * \n * Returns an <mxConnectionConstraint> that describes the given connection\n * point. This result can then be passed to <getConnectionPoint>.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n * terminal - <mxCellState> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n */\nmxGraph.prototype.getConnectionConstraint = function(edge, terminal, source)\n{\n\tvar point = null;\n\tvar x = edge.style[(source) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\n\tif (x != null)\n\t{\n\t\tvar y = edge.style[(source) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t\n\t\tif (y != null)\n\t\t{\n\t\t\tpoint = new mxPoint(parseFloat(x), parseFloat(y));\n\t\t}\n\t}\n\t\n\tvar perimeter = false;\n\tvar dx = 0, dy = 0;\n\t\n\tif (point != null)\n\t{\n\t\tperimeter = mxUtils.getValue(edge.style, (source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, true);\n\n\t\t//Add entry/exit offset\n\t\tdx = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DX : mxConstants.STYLE_ENTRY_DX]);\n\t\tdy = parseFloat(edge.style[(source) ? mxConstants.STYLE_EXIT_DY : mxConstants.STYLE_ENTRY_DY]);\n\t\t\n\t\tdx = isFinite(dx)? dx : 0;\n\t\tdy = isFinite(dy)? dy : 0;\n\t}\n\n\treturn new mxConnectionConstraint(point, perimeter, null, dx, dy);\n};\n\n/**\n * Function: setConnectionConstraint\n * \n * Sets the <mxConnectionConstraint> that describes the given connection point.\n * If no constraint is given then nothing is changed. To remove an existing\n * constraint from the given edge, use an empty constraint instead.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * terminal - <mxCell> that represents the terminal.\n * source - Boolean indicating if the terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.setConnectionConstraint = function(edge, terminal, source, constraint)\n{\n\tif (constraint != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\t\n\t\ttry\n\t\t{\n\t\t\tif (constraint == null || constraint.point == null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, null, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t}\n\t\t\telse if (constraint.point != null)\n\t\t\t{\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_X :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_X, constraint.point.x, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_Y :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_Y, constraint.point.y, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DX :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DX, constraint.dx, [edge]);\n\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_DY :\n\t\t\t\t\tmxConstants.STYLE_ENTRY_DY, constraint.dy, [edge]);\n\t\t\t\t\n\t\t\t\t// Only writes 0 since 1 is default\n\t\t\t\tif (!constraint.perimeter)\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, '0', [edge]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setCellStyles((source) ? mxConstants.STYLE_EXIT_PERIMETER :\n\t\t\t\t\t\tmxConstants.STYLE_ENTRY_PERIMETER, null, [edge]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: getConnectionPoint\n *\n * Returns the nearest point in the list of absolute points or the center\n * of the opposite terminal.\n * \n * Parameters:\n * \n * vertex - <mxCellState> that represents the vertex.\n * constraint - <mxConnectionConstraint> that represents the connection point\n * constraint as returned by <getConnectionConstraint>.\n */\nmxGraph.prototype.getConnectionPoint = function(vertex, constraint, round)\n{\n\tround = (round != null) ? round : true;\n\tvar point = null;\n\t\n\tif (vertex != null && constraint.point != null)\n\t{\n\t\tvar bounds = this.view.getPerimeterBounds(vertex);\n        var cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\t\tvar direction = vertex.style[mxConstants.STYLE_DIRECTION];\n\t\tvar r1 = 0;\n\t\t\n\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\tif (direction != null && mxUtils.getValue(vertex.style,\n\t\t\tmxConstants.STYLE_ANCHOR_POINT_DIRECTION, 1) == 1)\n\t\t{\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH)\n\t\t\t{\n\t\t\t\tr1 += 270;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_WEST)\n\t\t\t{\n\t\t\t\tr1 += 180;\n\t\t\t}\n\t\t\telse if (direction == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tr1 += 90;\n\t\t\t}\n\n\t\t\t// Bounds need to be rotated by 90 degrees for further computation\n\t\t\tif (direction == mxConstants.DIRECTION_NORTH ||\n\t\t\t\tdirection == mxConstants.DIRECTION_SOUTH)\n\t\t\t{\n\t\t\t\tbounds.rotate90();\n\t\t\t}\n\t\t}\n\n\t\tvar scale = this.view.scale;\n\t\tpoint = new mxPoint(bounds.x + constraint.point.x * bounds.width + constraint.dx * scale,\n\t\t\t\tbounds.y + constraint.point.y * bounds.height + constraint.dy * scale);\n\t\t\n\t\t// Rotation for direction before projection on perimeter\n\t\tvar r2 = vertex.style[mxConstants.STYLE_ROTATION] || 0;\n\t\t\n\t\tif (constraint.perimeter)\n\t\t{\n\t\t\tif (r1 != 0)\n\t\t\t{\n\t\t\t\t// Only 90 degrees steps possible here so no trig needed\n\t\t\t\tvar cos = 0;\n\t\t\t\tvar sin = 0;\n\t\t\t\t\n\t\t\t\tif (r1 == 90)\n\t\t\t\t{\n\t\t\t\t\tsin = 1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 180)\n\t\t\t\t{\n\t\t\t\t\tcos = -1;\n\t\t\t\t}\n\t\t\t\telse if (r1 == 270)\n\t\t\t\t{\n\t\t\t\t\tsin = -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t\t}\n\t\n\t\t\tpoint = this.view.getPerimeterPoint(vertex, point, false);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tr2 += r1;\n\t\t\t\n\t\t\tif (this.getModel().isVertex(vertex.cell))\n\t\t\t{\n\t\t\t\tvar flipH = vertex.style[mxConstants.STYLE_FLIPH] == 1;\n\t\t\t\tvar flipV = vertex.style[mxConstants.STYLE_FLIPV] == 1;\n\t\t\t\t\n\t\t\t\t// Legacy support for stencilFlipH/V\n\t\t\t\tif (vertex.shape != null && vertex.shape.stencil != null)\n\t\t\t\t{\n\t\t\t\t\tflipH = (mxUtils.getValue(vertex.style, 'stencilFlipH', 0) == 1) || flipH;\n\t\t\t\t\tflipV = (mxUtils.getValue(vertex.style, 'stencilFlipV', 0) == 1) || flipV;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipH)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = 2 * bounds.getCenterX() - point.x;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (flipV)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = 2 * bounds.getCenterY() - point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Generic rotation after projection on perimeter\n\t\tif (r2 != 0 && point != null)\n\t\t{\n\t        var rad = mxUtils.toRadians(r2);\n\t        var cos = Math.cos(rad);\n\t        var sin = Math.sin(rad);\n\t        \n\t        point = mxUtils.getRotatedPoint(point, cos, sin, cx);\n\t\t}\n\t}\n\t\n\tif (round && point != null)\n\t{\n\t\tpoint.x = Math.round(point.x);\n\t\tpoint.y = Math.round(point.y);\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: connectCell\n * \n * Connects the specified end of the given edge to the given terminal\n * using <cellConnected> and fires <mxEvent.CONNECT_CELL> while the\n * transaction is in progress. Returns the updated edge.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - Optional <mxConnectionConstraint> to be used for this\n * connection.\n */\nmxGraph.prototype.connectCell = function(edge, terminal, source, constraint)\n{\n\tthis.model.beginUpdate();\n\ttry\n\t{\n\t\tvar previous = this.model.getTerminal(edge, source);\n\t\tthis.cellConnected(edge, terminal, source, constraint);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT_CELL,\n\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t'previous', previous));\n\t}\n\tfinally\n\t{\n\t\tthis.model.endUpdate();\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: cellConnected\n * \n * Sets the new terminal for the given edge and resets the edge points if\n * <resetEdgesOnConnect> is true. This method fires\n * <mxEvent.CELL_CONNECTED> while the transaction is in progress.\n * \n * Parameters:\n * \n * edge - <mxCell> whose terminal should be updated.\n * terminal - <mxCell> that represents the new terminal to be used.\n * source - Boolean indicating if the new terminal is the source or target.\n * constraint - <mxConnectionConstraint> to be used for this connection.\n */\nmxGraph.prototype.cellConnected = function(edge, terminal, source, constraint)\n{\n\tif (edge != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar previous = this.model.getTerminal(edge, source);\n\n\t\t\t// Updates the constraint\n\t\t\tthis.setConnectionConstraint(edge, terminal, source, constraint);\n\t\t\t\n\t\t\t// Checks if the new terminal is a port, uses the ID of the port in the\n\t\t\t// style and the parent of the port as the actual terminal of the edge.\n\t\t\tif (this.isPortsEnabled())\n\t\t\t{\n\t\t\t\tvar id = null;\n\t\n\t\t\t\tif (this.isPort(terminal))\n\t\t\t\t{\n\t\t\t\t\tid = terminal.getId();\n\t\t\t\t\tterminal = this.getTerminalForPort(terminal, source);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Sets or resets all previous information for connecting to a child port\n\t\t\t\tvar key = (source) ? mxConstants.STYLE_SOURCE_PORT :\n\t\t\t\t\tmxConstants.STYLE_TARGET_PORT;\n\t\t\t\tthis.setCellStyles(key, id, [edge]);\n\t\t\t}\n\t\t\t\n\t\t\tthis.model.setTerminal(edge, terminal, source);\n\t\t\t\n\t\t\tif (this.resetEdgesOnConnect)\n\t\t\t{\n\t\t\t\tthis.resetEdge(edge);\n\t\t\t}\n\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CELL_CONNECTED,\n\t\t\t\t'edge', edge, 'terminal', terminal, 'source', source,\n\t\t\t\t'previous', previous));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: disconnectGraph\n * \n * Disconnects the given edges from the terminals which are not in the\n * given array.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be disconnected.\n */\nmxGraph.prototype.disconnectGraph = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tthis.model.beginUpdate();\n\t\ttry\n\t\t{\t\t\t\t\t\t\t\n\t\t\tvar scale = this.view.scale;\n\t\t\tvar tr = this.view.translate;\n\t\t\t\n\t\t\t// Fast lookup for finding cells in array\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = this.model.getGeometry(cells[i]);\n\t\t\t\t\t\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar state = this.view.getState(cells[i]);\n\t\t\t\t\t\tvar pstate = this.view.getState(\n\t\t\t\t\t\t\tthis.model.getParent(cells[i]));\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (state != null &&\n\t\t\t\t\t\t\tpstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar dx = -pstate.origin.x;\n\t\t\t\t\t\t\tvar dy = -pstate.origin.y;\n\t\t\t\t\t\t\tvar pts = state.absolutePoints;\n\n\t\t\t\t\t\t\tvar src = this.model.getTerminal(cells[i], true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (src != null && this.isCellDisconnectable(cells[i], src, true))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (src != null && !dict.get(src))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsrc = this.model.getParent(src);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (src == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[0].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[0].y / scale - tr.y + dy), true);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar trg = this.model.getTerminal(cells[i], false);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (trg != null && this.isCellDisconnectable(cells[i], trg, false))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\twhile (trg != null && !dict.get(trg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttrg = this.model.getParent(trg);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (trg == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar n = pts.length - 1;\n\t\t\t\t\t\t\t\t\tgeo.setTerminalPoint(\n\t\t\t\t\t\t\t\t\t\tnew mxPoint(pts[n].x / scale - tr.x + dx,\n\t\t\t\t\t\t\t\t\t\t\tpts[n].y / scale - tr.y + dy), false);\n\t\t\t\t\t\t\t\t\tthis.model.setTerminal(cells[i], null, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.model.setGeometry(cells[i], geo);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.model.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Group: Drilldown\n */\n\n/**\n * Function: getCurrentRoot\n * \n * Returns the current root of the displayed cell hierarchy. This is a\n * shortcut to <mxGraphView.currentRoot> in <view>.\n */\nmxGraph.prototype.getCurrentRoot = function()\n{\n\treturn this.view.currentRoot;\n};\n \n/**\n * Function: getTranslateForRoot\n * \n * Returns the translation to be used if the given cell is the root cell as\n * an <mxPoint>. This implementation returns null.\n * \n * Example:\n * \n * To keep the children at their absolute position while stepping into groups,\n * this function can be overridden as follows.\n * \n * (code)\n * var offset = new mxPoint(0, 0);\n * \n * while (cell != null)\n * {\n *   var geo = this.model.getGeometry(cell);\n * \n *   if (geo != null)\n *   {\n *     offset.x -= geo.x;\n *     offset.y -= geo.y;\n *   }\n * \n *   cell = this.model.getParent(cell);\n * }\n * \n * return offset;\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the root.\n */\nmxGraph.prototype.getTranslateForRoot = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: isPort\n * \n * Returns true if the given cell is a \"port\", that is, when connecting to\n * it, the cell returned by getTerminalForPort should be used as the\n * terminal and the port should be referenced by the ID in either the\n * mxConstants.STYLE_SOURCE_PORT or the or the\n * mxConstants.STYLE_TARGET_PORT. Note that a port should not be movable.\n * This implementation always returns false.\n * \n * A typical implementation is the following:\n * \n * (code)\n * graph.isPort = function(cell)\n * {\n *   var geo = this.getCellGeometry(cell);\n *   \n *   return (geo != null) ? geo.relative : false;\n * };\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n */\nmxGraph.prototype.isPort = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getTerminalForPort\n * \n * Returns the terminal to be used for a given port. This implementation\n * always returns the parent cell.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the port.\n * source - If the cell is the source or target port.\n */\nmxGraph.prototype.getTerminalForPort = function(cell, source)\n{\n\treturn this.model.getParent(cell);\n};\n\n/**\n * Function: getChildOffsetForCell\n * \n * Returns the offset to be used for the cells inside the given cell. The\n * root and layer cells may be identified using <mxGraphModel.isRoot> and\n * <mxGraphModel.isLayer>. For all other current roots, the\n * <mxGraphView.currentRoot> field points to the respective cell, so that\n * the following holds: cell == this.view.currentRoot. This implementation\n * returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose offset should be returned.\n */\nmxGraph.prototype.getChildOffsetForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: enterGroup\n * \n * Uses the given cell as the root of the displayed cell hierarchy. If no\n * cell is specified then the selection cell is used. The cell is only used\n * if <isValidRoot> returns true.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> to be used as the new root. Default is the\n * selection cell.\n */\nmxGraph.prototype.enterGroup = function(cell)\n{\n\tcell = cell || this.getSelectionCell();\n\t\n\tif (cell != null && this.isValidRoot(cell))\n\t{\n\t\tthis.view.setCurrentRoot(cell);\n\t\tthis.clearSelection();\n\t}\n};\n\n/**\n * Function: exitGroup\n * \n * Changes the current root to the next valid root in the displayed cell\n * hierarchy.\n */\nmxGraph.prototype.exitGroup = function()\n{\n\tvar root = this.model.getRoot();\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tvar next = this.model.getParent(current);\n\t\t\n\t\t// Finds the next valid root in the hierarchy\n\t\twhile (next != root && !this.isValidRoot(next) &&\n\t\t\t\tthis.model.getParent(next) != root)\n\t\t{\n\t\t\tnext = this.model.getParent(next);\n\t\t}\n\t\t\n\t\t// Clears the current root if the new root is\n\t\t// the model's root or one of the layers.\n\t\tif (next == root || this.model.getParent(next) == root)\n\t\t{\n\t\t\tthis.view.setCurrentRoot(null);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.view.setCurrentRoot(next);\n\t\t}\n\t\t\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\t// Selects the previous root in the graph\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: home\n * \n * Uses the root of the model as the root of the displayed cell hierarchy\n * and selects the previous root.\n */\nmxGraph.prototype.home = function()\n{\n\tvar current = this.getCurrentRoot();\n\t\n\tif (current != null)\n\t{\n\t\tthis.view.setCurrentRoot(null);\n\t\tvar state = this.view.getState(current);\n\t\t\n\t\tif (state != null)\n\t\t{\n\t\t\tthis.setSelectionCell(current);\n\t\t}\n\t}\n};\n\n/**\n * Function: isValidRoot\n * \n * Returns true if the given cell is a valid root for the cell display\n * hierarchy. This implementation returns true for all non-null values.\n * \n * Parameters:\n * \n * cell - <mxCell> which should be checked as a possible root.\n */\nmxGraph.prototype.isValidRoot = function(cell)\n{\n\treturn (cell != null);\n};\n\n/**\n * Group: Graph display\n */\n \n/**\n * Function: getGraphBounds\n * \n * Returns the bounds of the visible graph. Shortcut to\n * <mxGraphView.getGraphBounds>. See also: <getBoundingBoxFromGeometry>.\n */\n mxGraph.prototype.getGraphBounds = function()\n {\n \treturn this.view.getGraphBounds();\n };\n\n/**\n * Function: getCellBounds\n * \n * Returns the scaled, translated bounds for the given cell. See\n * <mxGraphView.getBounds> for arrays.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bounds should be returned.\n * includeEdge - Optional boolean that specifies if the bounds of\n * the connected edges should be included. Default is false.\n * includeDescendants - Optional boolean that specifies if the bounds\n * of all descendants should be included. Default is false.\n */\nmxGraph.prototype.getCellBounds = function(cell, includeEdges, includeDescendants)\n{\n\tvar cells = [cell];\n\t\n\t// Includes all connected edges\n\tif (includeEdges)\n\t{\n\t\tcells = cells.concat(this.model.getEdges(cell));\n\t}\n\t\n\tvar result = this.view.getBounds(cells);\n\t\n\t// Recursively includes the bounds of the children\n\tif (includeDescendants)\n\t{\n\t\tvar childCount = this.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar tmp = this.getCellBounds(this.model.getChildAt(cell, i),\n\t\t\t\tincludeEdges, true);\n\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\tresult.add(tmp);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresult = tmp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getBoundingBoxFromGeometry\n * \n * Returns the bounding box for the geometries of the vertices in the\n * given array of cells. This can be used to find the graph bounds during\n * a layout operation (ie. before the last endUpdate) as follows:\n * \n * (code)\n * var cells = graph.getChildCells(graph.getDefaultParent(), true, true);\n * var bounds = graph.getBoundingBoxFromGeometry(cells, true);\n * (end)\n * \n * This can then be used to move cells to the origin:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.moveCells(cells, -Math.min(bounds.x, 0), -Math.min(bounds.y, 0))\n * }\n * (end)\n * \n * Or to translate the graph view:\n * \n * (code)\n * if (bounds.x < 0 || bounds.y < 0)\n * {\n *   graph.view.setTranslate(-Math.min(bounds.x, 0), -Math.min(bounds.y, 0));\n * }\n * (end)\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose bounds should be returned.\n * includeEdges - Specifies if edge bounds should be included by computing\n * the bounding box for all points in geometry. Default is false.\n */\nmxGraph.prototype.getBoundingBoxFromGeometry = function(cells, includeEdges)\n{\n\tincludeEdges = (includeEdges != null) ? includeEdges : false;\n\tvar result = null;\n\t\n\tif (cells != null)\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (includeEdges || this.model.isVertex(cells[i]))\n\t\t\t{\n\t\t\t\t// Computes the bounding box for the points in the geometry\n\t\t\t\tvar geo = this.getCellGeometry(cells[i]);\n\t\t\t\t\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = null;\n\t\t\t\t\t\n\t\t\t\t\tif (this.model.isEdge(cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar addPoint = function(pt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (pt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (tmp == null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp = new mxRectangle(pt.x, pt.y, 0, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttmp.add(new mxRectangle(pt.x, pt.y, 0, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], true) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (this.model.getTerminal(cells[i], false) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddPoint(geo.getTerminalPoint(false));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar pts = geo.points;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pts != null && pts.length > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = new mxRectangle(pts[0].x, pts[0].y, 0, 0);\n\n\t\t\t\t\t\t\tfor (var j = 1; j < pts.length; j++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taddPoint(pts[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tbbox = tmp;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tvar parent = this.model.getParent(cells[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (geo.relative)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && parent != this.view.currentRoot)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox = new mxRectangle(geo.x * tmp.width, geo.y * tmp.height, geo.width, geo.height);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox = mxRectangle.fromRectangle(geo);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (this.model.isVertex(parent) && mxUtils.indexOf(cells, parent) >= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar tmp = this.getBoundingBoxFromGeometry([parent], false);\n\n\t\t\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbbox.x += tmp.x;\n\t\t\t\t\t\t\t\t\tbbox.y += tmp.y;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bbox != null && geo.offset != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbbox.x += geo.offset.x;\n\t\t\t\t\t\t\tbbox.y += geo.offset.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bbox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (result == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: refresh\n * \n * Clears all cell states or the states for the hierarchy starting at the\n * given cell and validates the graph. This fires a refresh event as the\n * last step.\n * \n * Parameters:\n * \n * cell - Optional <mxCell> for which the cell states should be cleared.\n */\nmxGraph.prototype.refresh = function(cell)\n{\n\tthis.view.clear(cell, cell == null);\n\tthis.view.validate();\n\tthis.sizeDidChange();\n\tthis.fireEvent(new mxEventObject(mxEvent.REFRESH));\n};\n\n/**\n * Function: snap\n * \n * Snaps the given numeric value to the grid if <gridEnabled> is true.\n * \n * Parameters:\n * \n * value - Numeric value to be snapped to the grid.\n */\nmxGraph.prototype.snap = function(value)\n{\n\tif (this.gridEnabled)\n\t{\n\t\tvalue = Math.round(value / this.gridSize ) * this.gridSize;\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: panGraph\n * \n * Shifts the graph display by the given amount. This is used to preview\n * panning operations, use <mxGraphView.setTranslate> to set a persistent\n * translation of the view. Fires <mxEvent.PAN>.\n * \n * Parameters:\n * \n * dx - Amount to shift the graph along the x-axis.\n * dy - Amount to shift the graph along the y-axis.\n */\nmxGraph.prototype.panGraph = function(dx, dy)\n{\n\tif (this.useScrollbarsForPanning && mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.container.scrollLeft = -dx;\n\t\tthis.container.scrollTop = -dy;\n\t}\n\telse\n\t{\n\t\tvar canvas = this.view.getCanvas();\n\t\t\n\t\tif (this.dialect == mxConstants.DIALECT_SVG)\n\t\t{\n\t\t\t// Puts everything inside the container in a DIV so that it\n\t\t\t// can be moved without changing the state of the container\n\t\t\tif (dx == 0 && dy == 0)\n\t\t\t{\n\t\t\t\t// Workaround for ignored removeAttribute on SVG element in IE9 standards\n\t\t\t\tif (mxClient.IS_IE)\n\t\t\t\t{\n\t\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tcanvas.removeAttribute('transform');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 != null)\n\t\t\t\t{\n\t\t\t\t\tvar child = this.shiftPreview1.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview1.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview1.parentNode.removeChild(this.shiftPreview1);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview1 = null;\n\t\t\t\t\t\n\t\t\t\t\tthis.container.appendChild(canvas.parentNode);\n\t\t\t\t\t\n\t\t\t\t\tchild = this.shiftPreview2.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\tthis.container.appendChild(child);\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shiftPreview2.parentNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shiftPreview2.parentNode.removeChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcanvas.setAttribute('transform', 'translate(' + dx + ',' + dy + ')');\n\t\t\t\t\n\t\t\t\tif (this.shiftPreview1 == null)\n\t\t\t\t{\n\t\t\t\t\t// Needs two divs for stuff before and after the SVG element\n\t\t\t\t\tthis.shiftPreview1 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview1.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview1.style.overflow = 'visible';\n\t\t\t\t\t\n\t\t\t\t\tthis.shiftPreview2 = document.createElement('div');\n\t\t\t\t\tthis.shiftPreview2.style.position = 'absolute';\n\t\t\t\t\tthis.shiftPreview2.style.overflow = 'visible';\n\n\t\t\t\t\tvar current = this.shiftPreview1;\n\t\t\t\t\tvar child = this.container.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (child != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// SVG element is moved via transform attribute\n\t\t\t\t\t\tif (child != canvas.parentNode)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent.appendChild(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = this.shiftPreview2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tchild = next;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Inserts elements only if not empty\n\t\t\t\t\tif (this.shiftPreview1.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.insertBefore(this.shiftPreview1, canvas.parentNode);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.shiftPreview2.firstChild != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.container.appendChild(this.shiftPreview2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.shiftPreview1.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview1.style.top = dy + 'px';\n\t\t\t\tthis.shiftPreview2.style.left = dx + 'px';\n\t\t\t\tthis.shiftPreview2.style.top = dy + 'px';\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcanvas.style.left = dx + 'px';\n\t\t\tcanvas.style.top = dy + 'px';\n\t\t}\n\t\t\n\t\tthis.panDx = dx;\n\t\tthis.panDy = dy;\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN));\n\t}\n};\n\n/**\n * Function: zoomIn\n * \n * Zooms into the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomIn = function()\n{\n\tthis.zoom(this.zoomFactor);\n};\n\n/**\n * Function: zoomOut\n * \n * Zooms out of the graph by <zoomFactor>.\n */\nmxGraph.prototype.zoomOut = function()\n{\n\tthis.zoom(1 / this.zoomFactor);\n};\n\n/**\n * Function: zoomActual\n * \n * Resets the zoom and panning in the view.\n */\nmxGraph.prototype.zoomActual = function()\n{\n\tif (this.view.scale == 1)\n\t{\n\t\tthis.view.setTranslate(0, 0);\n\t}\n\telse\n\t{\n\t\tthis.view.translate.x = 0;\n\t\tthis.view.translate.y = 0;\n\n\t\tthis.view.setScale(1);\n\t}\n};\n\n/**\n * Function: zoomTo\n * \n * Zooms the graph to the given scale with an optional boolean center\n * argument, which is passd to <zoom>.\n */\nmxGraph.prototype.zoomTo = function(scale, center)\n{\n\tthis.zoom(scale / this.view.scale, center);\n};\n\n/**\n * Function: center\n * \n * Centers the graph in the container.\n * \n * Parameters:\n * \n * horizontal - Optional boolean that specifies if the graph should be centered\n * horizontally. Default is true.\n * vertical - Optional boolean that specifies if the graph should be centered\n * vertically. Default is true.\n * cx - Optional float that specifies the horizontal center. Default is 0.5.\n * cy - Optional float that specifies the vertical center. Default is 0.5.\n */\nmxGraph.prototype.center = function(horizontal, vertical, cx, cy)\n{\n\thorizontal = (horizontal != null) ? horizontal : true;\n\tvertical = (vertical != null) ? vertical : true;\n\tcx = (cx != null) ? cx : 0.5;\n\tcy = (cy != null) ? cy : 0.5;\n\t\n\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\tvar padding = 2 * this.getBorder();\n\tvar cw = this.container.clientWidth - padding;\n\tvar ch = this.container.clientHeight - padding;\n\tvar bounds = this.getGraphBounds();\n\n\tvar t = this.view.translate;\n\tvar s = this.view.scale;\n\n\tvar dx = (horizontal) ? cw - bounds.width : 0;\n\tvar dy = (vertical) ? ch - bounds.height : 0;\n\t\n\tif (!hasScrollbars)\n\t{\n\t\tthis.view.setTranslate((horizontal) ? Math.floor(t.x - bounds.x * s + dx * cx / s) : t.x,\n\t\t\t(vertical) ? Math.floor(t.y - bounds.y * s + dy * cy / s) : t.y);\n\t}\n\telse\n\t{\n\t\tbounds.x -= t.x;\n\t\tbounds.y -= t.y;\n\t\n\t\tvar sw = this.container.scrollWidth;\n\t\tvar sh = this.container.scrollHeight;\n\t\t\n\t\tif (sw > cw)\n\t\t{\n\t\t\tdx = 0;\n\t\t}\n\t\t\n\t\tif (sh > ch)\n\t\t{\n\t\t\tdy = 0;\n\t\t}\n\n\t\tthis.view.setTranslate(Math.floor(dx / 2 - bounds.x), Math.floor(dy / 2 - bounds.y));\n\t\tthis.container.scrollLeft = (sw - cw) / 2;\n\t\tthis.container.scrollTop = (sh - ch) / 2;\n\t}\n};\n\n/**\n * Function: zoom\n * \n * Zooms the graph using the given factor. Center is an optional boolean\n * argument that keeps the graph scrolled to the center. If the center argument\n * is omitted, then <centerZoom> will be used as its value.\n */\nmxGraph.prototype.zoom = function(factor, center)\n{\n\tcenter = (center != null) ? center : this.centerZoom;\n\tvar scale = Math.round(this.view.scale * factor * 100) / 100;\n\tvar state = this.view.getState(this.getSelectionCell());\n\tfactor = scale / this.view.scale;\n\t\n\tif (this.keepSelectionVisibleOnZoom && state != null)\n\t{\n\t\tvar rect = new mxRectangle(state.x * factor, state.y * factor,\n\t\t\tstate.width * factor, state.height * factor);\n\t\t\n\t\t// Refreshes the display only once if a scroll is carried out\n\t\tthis.view.scale = scale;\n\t\t\n\t\tif (!this.scrollRectToVisible(rect))\n\t\t{\n\t\t\tthis.view.revalidate();\n\t\t\t\n\t\t\t// Forces an event to be fired but does not revalidate again\n\t\t\tthis.view.setScale(scale);\n\t\t}\n\t}\n\telse\n\t{\n\t\tvar hasScrollbars = mxUtils.hasScrollbars(this.container);\n\t\t\n\t\tif (center && !hasScrollbars)\n\t\t{\n\t\t\tvar dx = this.container.offsetWidth;\n\t\t\tvar dy = this.container.offsetHeight;\n\t\t\t\n\t\t\tif (factor > 1)\n\t\t\t{\n\t\t\t\tvar f = (factor - 1) / (scale * 2);\n\t\t\t\tdx *= -f;\n\t\t\t\tdy *= -f;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar f = (1 / factor - 1) / (this.view.scale * 2);\n\t\t\t\tdx *= f;\n\t\t\t\tdy *= f;\n\t\t\t}\n\n\t\t\tthis.view.scaleAndTranslate(scale,\n\t\t\t\tthis.view.translate.x + dx,\n\t\t\t\tthis.view.translate.y + dy);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Allows for changes of translate and scrollbars during setscale\n\t\t\tvar tx = this.view.translate.x;\n\t\t\tvar ty = this.view.translate.y;\n\t\t\tvar sl = this.container.scrollLeft;\n\t\t\tvar st = this.container.scrollTop;\n\t\t\t\n\t\t\tthis.view.setScale(scale);\n\t\t\t\n\t\t\tif (hasScrollbars)\n\t\t\t{\n\t\t\t\tvar dx = 0;\n\t\t\t\tvar dy = 0;\n\t\t\t\t\n\t\t\t\tif (center)\n\t\t\t\t{\n\t\t\t\t\tdx = this.container.offsetWidth * (factor - 1) / 2;\n\t\t\t\t\tdy = this.container.offsetHeight * (factor - 1) / 2;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.container.scrollLeft = (this.view.translate.x - tx) * this.view.scale + Math.round(sl * factor + dx);\n\t\t\t\tthis.container.scrollTop = (this.view.translate.y - ty) * this.view.scale + Math.round(st * factor + dy);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: zoomToRect\n * \n * Zooms the graph to the specified rectangle. If the rectangle does not have same aspect\n * ratio as the display container, it is increased in the smaller relative dimension only\n * until the aspect match. The original rectangle is centralised within this expanded one.\n * \n * Note that the input rectangular must be un-scaled and un-translated.\n * \n * Parameters:\n * \n * rect - The un-scaled and un-translated rectangluar region that should be just visible \n * after the operation\n */\nmxGraph.prototype.zoomToRect = function(rect)\n{\n\tvar scaleX = this.container.clientWidth / rect.width;\n\tvar scaleY = this.container.clientHeight / rect.height;\n\tvar aspectFactor = scaleX / scaleY;\n\n\t// Remove any overlap of the rect outside the client area\n\trect.x = Math.max(0, rect.x);\n\trect.y = Math.max(0, rect.y);\n\tvar rectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\tvar rectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\trect.width = rectRight - rect.x;\n\trect.height = rectBottom - rect.y;\n\n\t// The selection area has to be increased to the same aspect\n\t// ratio as the container, centred around the centre point of the \n\t// original rect passed in.\n\tif (aspectFactor < 1.0)\n\t{\n\t\t// Height needs increasing\n\t\tvar newHeight = rect.height / aspectFactor;\n\t\tvar deltaHeightBuffer = (newHeight - rect.height) / 2.0;\n\t\trect.height = newHeight;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar upperBuffer = Math.min(rect.y , deltaHeightBuffer);\n\t\trect.y = rect.y - upperBuffer;\n\t\t\n\t\t// Check if the bottom has extended too far\n\t\trectBottom = Math.min(this.container.scrollHeight, rect.y + rect.height);\n\t\trect.height = rectBottom - rect.y;\n\t}\n\telse\n\t{\n\t\t// Width needs increasing\n\t\tvar newWidth = rect.width * aspectFactor;\n\t\tvar deltaWidthBuffer = (newWidth - rect.width) / 2.0;\n\t\trect.width = newWidth;\n\t\t\n\t\t// Assign up to half the buffer to the upper part of the rect, not crossing 0\n\t\t// put the rest on the bottom\n\t\tvar leftBuffer = Math.min(rect.x , deltaWidthBuffer);\n\t\trect.x = rect.x - leftBuffer;\n\t\t\n\t\t// Check if the right hand side has extended too far\n\t\trectRight = Math.min(this.container.scrollWidth, rect.x + rect.width);\n\t\trect.width = rectRight - rect.x;\n\t}\n\n\tvar scale = this.container.clientWidth / rect.width;\n\tvar newScale = this.view.scale * scale;\n\n\tif (!mxUtils.hasScrollbars(this.container))\n\t{\n\t\tthis.view.scaleAndTranslate(newScale, (this.view.translate.x - rect.x / this.view.scale), (this.view.translate.y - rect.y / this.view.scale));\n\t}\n\telse\n\t{\n\t\tthis.view.setScale(newScale);\n\t\tthis.container.scrollLeft = Math.round(rect.x * scale);\n\t\tthis.container.scrollTop = Math.round(rect.y * scale);\n\t}\n};\n\n/**\n * Function: scrollCellToVisible\n * \n * Pans the graph so that it shows the given cell. Optionally the cell may\n * be centered in the container.\n * \n * To center a given graph if the <container> has no scrollbars, use the following code.\n * \n * [code]\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x - (bounds.width - container.clientWidth) / 2,\n * \t\t\t\t\t\t   -bounds.y - (bounds.height - container.clientHeight) / 2);\n * [/code]\n * \n * Parameters:\n * \n * cell - <mxCell> to be made visible.\n * center - Optional boolean flag. Default is false.\n */\nmxGraph.prototype.scrollCellToVisible = function(cell, center)\n{\n\tvar x = -this.view.translate.x;\n\tvar y = -this.view.translate.y;\n\n\tvar state = this.view.getState(cell);\n\n\tif (state != null)\n\t{\n\t\tvar bounds = new mxRectangle(x + state.x, y + state.y, state.width,\n\t\t\tstate.height);\n\n\t\tif (center && this.container != null)\n\t\t{\n\t\t\tvar w = this.container.clientWidth;\n\t\t\tvar h = this.container.clientHeight;\n\n\t\t\tbounds.x = bounds.getCenterX() - w / 2;\n\t\t\tbounds.width = w;\n\t\t\tbounds.y = bounds.getCenterY() - h / 2;\n\t\t\tbounds.height = h;\n\t\t}\n\t\t\n\t\tvar tr = new mxPoint(this.view.translate.x, this.view.translate.y);\n\n\t\tif (this.scrollRectToVisible(bounds))\n\t\t{\n\t\t\t// Triggers an update via the view's event source\n\t\t\tvar tr2 = new mxPoint(this.view.translate.x, this.view.translate.y);\n\t\t\tthis.view.translate.x = tr.x;\n\t\t\tthis.view.translate.y = tr.y;\n\t\t\tthis.view.setTranslate(tr2.x, tr2.y);\n\t\t}\n\t}\n};\n\n/**\n * Function: scrollRectToVisible\n * \n * Pans the graph so that it shows the given rectangle.\n * \n * Parameters:\n * \n * rect - <mxRectangle> to be made visible.\n */\nmxGraph.prototype.scrollRectToVisible = function(rect)\n{\n\tvar isChanged = false;\n\t\n\tif (rect != null)\n\t{\n\t\tvar w = this.container.offsetWidth;\n\t\tvar h = this.container.offsetHeight;\n\n        var widthLimit = Math.min(w, rect.width);\n        var heightLimit = Math.min(h, rect.height);\n\n\t\tif (mxUtils.hasScrollbars(this.container))\n\t\t{\n\t\t\tvar c = this.container;\n\t\t\trect.x += this.view.translate.x;\n\t\t\trect.y += this.view.translate.y;\n\t\t\tvar dx = c.scrollLeft - rect.x;\n\t\t\tvar ddx = Math.max(dx - c.scrollLeft, 0);\n\n\t\t\tif (dx > 0)\n\t\t\t{\n\t\t\t\tc.scrollLeft -= dx + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdx = rect.x + widthLimit - c.scrollLeft - c.clientWidth;\n\n\t\t\t\tif (dx > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollLeft += dx + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar dy = c.scrollTop - rect.y;\n\t\t\tvar ddy = Math.max(0, dy - c.scrollTop);\n\n\t\t\tif (dy > 0)\n\t\t\t{\n\t\t\t\tc.scrollTop -= dy + 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdy = rect.y + heightLimit - c.scrollTop - c.clientHeight;\n\n\t\t\t\tif (dy > 0)\n\t\t\t\t{\n\t\t\t\t\tc.scrollTop += dy + 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.useScrollbarsForPanning && (ddx != 0 || ddy != 0))\n\t\t\t{\n\t\t\t\tthis.view.setTranslate(ddx, ddy);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar x = -this.view.translate.x;\n\t\t\tvar y = -this.view.translate.y;\n\n\t\t\tvar s = this.view.scale;\n\n\t\t\tif (rect.x + widthLimit > x + w)\n\t\t\t{\n\t\t\t\tthis.view.translate.x -= (rect.x + widthLimit - w - x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y + heightLimit > y + h)\n\t\t\t{\n\t\t\t\tthis.view.translate.y -= (rect.y + heightLimit - h - y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.x < x)\n\t\t\t{\n\t\t\t\tthis.view.translate.x += (x - rect.x) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (rect.y  < y)\n\t\t\t{\n\t\t\t\tthis.view.translate.y += (y - rect.y) / s;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\n\t\t\tif (isChanged)\n\t\t\t{\n\t\t\t\tthis.view.refresh();\n\t\t\t\t\n\t\t\t\t// Repaints selection marker (ticket 18)\n\t\t\t\tif (this.selectionCellsHandler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.selectionCellsHandler.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn isChanged;\n};\n\n/**\n * Function: getCellGeometry\n * \n * Returns the <mxGeometry> for the given cell. This implementation uses\n * <mxGraphModel.getGeometry>. Subclasses can override this to implement\n * specific geometries for cells in only one graph, that is, it can return\n * geometries that depend on the current state of the view.\n * \n * Parameters:\n * \n * cell - <mxCell> whose geometry should be returned.\n */\nmxGraph.prototype.getCellGeometry = function(cell)\n{\n\treturn this.model.getGeometry(cell);\n};\n\n/**\n * Function: isCellVisible\n * \n * Returns true if the given cell is visible in this graph. This\n * implementation uses <mxGraphModel.isVisible>. Subclassers can override\n * this to implement specific visibility for cells in only one graph, that\n * is, without affecting the visible state of the cell.\n * \n * When using dynamic filter expressions for cell visibility, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose visible state should be returned.\n */\nmxGraph.prototype.isCellVisible = function(cell)\n{\n\treturn this.model.isVisible(cell);\n};\n\n/**\n * Function: isCellCollapsed\n * \n * Returns true if the given cell is collapsed in this graph. This\n * implementation uses <mxGraphModel.isCollapsed>. Subclassers can override\n * this to implement specific collapsed states for cells in only one graph,\n * that is, without affecting the collapsed state of the cell.\n * \n * When using dynamic filter expressions for the collapsed state, then the\n * graph should be revalidated after the filter expression has changed.\n * \n * Parameters:\n * \n * cell - <mxCell> whose collapsed state should be returned.\n */\nmxGraph.prototype.isCellCollapsed = function(cell)\n{\n\treturn this.model.isCollapsed(cell);\n};\n\n/**\n * Function: isCellConnectable\n * \n * Returns true if the given cell is connectable in this graph. This\n * implementation uses <mxGraphModel.isConnectable>. Subclassers can override\n * this to implement specific connectable states for cells in only one graph,\n * that is, without affecting the connectable state of the cell in the model.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connectable state should be returned.\n */\nmxGraph.prototype.isCellConnectable = function(cell)\n{\n\treturn this.model.isConnectable(cell);\n};\n\n/**\n * Function: isOrthogonal\n * \n * Returns true if perimeter points should be computed such that the\n * resulting edge has only horizontal or vertical segments.\n * \n * Parameters:\n * \n * edge - <mxCellState> that represents the edge.\n */\nmxGraph.prototype.isOrthogonal = function(edge)\n{\n\tvar orthogonal = edge.style[mxConstants.STYLE_ORTHOGONAL];\n\t\n\tif (orthogonal != null)\n\t{\n\t\treturn orthogonal;\n\t}\n\t\n\tvar tmp = this.view.getEdgeStyle(edge);\n\t\n\treturn tmp == mxEdgeStyle.SegmentConnector ||\n\t\ttmp == mxEdgeStyle.ElbowConnector ||\n\t\ttmp == mxEdgeStyle.SideToSide ||\n\t\ttmp == mxEdgeStyle.TopToBottom ||\n\t\ttmp == mxEdgeStyle.EntityRelation ||\n\t\ttmp == mxEdgeStyle.OrthConnector;\n};\n\n/**\n * Function: isLoop\n * \n * Returns true if the given cell state is a loop.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents a potential loop.\n */\nmxGraph.prototype.isLoop = function(state)\n{\n\tvar src = state.getVisibleTerminalState(true);\n\tvar trg = state.getVisibleTerminalState(false);\n\t\n\treturn (src != null && src == trg);\n};\n\n/**\n * Function: isCloneEvent\n * \n * Returns true if the given event is a clone event. This implementation\n * returns true if control is pressed.\n */\nmxGraph.prototype.isCloneEvent = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isTransparentClickEvent\n * \n * Hook for implementing click-through behaviour on selected cells. If this\n * returns true the cell behind the selected cell will be selected. This\n * implementation returns false;\n */\nmxGraph.prototype.isTransparentClickEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Function: isToggleEvent\n * \n * Returns true if the given event is a toggle event. This implementation\n * returns true if the meta key (Cmd) is pressed on Macs or if control is\n * pressed on any other platform.\n */\nmxGraph.prototype.isToggleEvent = function(evt)\n{\n\treturn (mxClient.IS_MAC) ? mxEvent.isMetaDown(evt) : mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: isGridEnabledEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isGridEnabledEvent = function(evt)\n{\n\treturn evt != null && !mxEvent.isAltDown(evt);\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the given mouse event should be aligned to the grid.\n */\nmxGraph.prototype.isConstrainedEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isIgnoreTerminalEvent\n * \n * Returns true if the given mouse event should not allow any connections to be\n * made. This implementation returns false.\n */\nmxGraph.prototype.isIgnoreTerminalEvent = function(evt)\n{\n\treturn false;\n};\n\n/**\n * Group: Validation\n */\n\n/**\n * Function: validationAlert\n * \n * Displays the given validation error in a dialog. This implementation uses\n * mxUtils.alert.\n */\nmxGraph.prototype.validationAlert = function(message)\n{\n\tmxUtils.alert(message);\n};\n\n/**\n * Function: isEdgeValid\n * \n * Checks if the return value of <getEdgeValidationError> for the given\n * arguments is null.\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.isEdgeValid = function(edge, source, target)\n{\n\treturn this.getEdgeValidationError(edge, source, target) == null;\n};\n\n/**\n * Function: getEdgeValidationError\n * \n * Returns the validation error message to be displayed when inserting or\n * changing an edges' connectivity. A return value of null means the edge\n * is valid, a return value of '' means it's not valid, but do not display\n * an error message. Any other (non-empty) string returned from this method\n * is displayed as an error message when trying to connect an edge to a\n * source and target. This implementation uses the <multiplicities>, and\n * checks <multigraph>, <allowDanglingEdges> and <allowLoops> to generate\n * validation errors.\n * \n * For extending this method with specific checks for source/target cells,\n * the method can be extended as follows. Returning an empty string means\n * the edge is invalid with no error message, a non-null string specifies\n * the error message, and null means the edge is valid.\n * \n * (code)\n * graph.getEdgeValidationError = function(edge, source, target)\n * {\n *   if (source != null && target != null &&\n *     this.model.getValue(source) != null &&\n *     this.model.getValue(target) != null)\n *   {\n *     if (target is not valid for source)\n *     {\n *       return 'Invalid Target';\n *     }\n *   }\n *   \n *   // \"Supercall\"\n *   return mxGraph.prototype.getEdgeValidationError.apply(this, arguments);\n * }\n * (end)\n *  \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.getEdgeValidationError = function(edge, source, target)\n{\n\tif (edge != null && !this.isAllowDanglingEdges() && (source == null || target == null))\n\t{\n\t\treturn '';\n\t}\n\t\n\tif (edge != null && this.model.getTerminal(edge, true) == null &&\n\t\tthis.model.getTerminal(edge, false) == null)\t\n\t{\n\t\treturn null;\n\t}\n\t\n\t// Checks if we're dealing with a loop\n\tif (!this.allowLoops && source == target && source != null)\n\t{\n\t\treturn '';\n\t}\n\t\n\t// Checks if the connection is generally allowed\n\tif (!this.isValidConnection(source, target))\n\t{\n\t\treturn '';\n\t}\n\n\tif (source != null && target != null)\n\t{\n\t\tvar error = '';\n\n\t\t// Checks if the cells are already connected\n\t\t// and adds an error message if required\t\t\t\n\t\tif (!this.multigraph)\n\t\t{\n\t\t\tvar tmp = this.model.getEdgesBetween(source, target, true);\n\t\t\t\n\t\t\t// Checks if the source and target are not connected by another edge\n\t\t\tif (tmp.length > 1 || (tmp.length == 1 && tmp[0] != edge))\n\t\t\t{\n\t\t\t\terror += (mxResources.get(this.alreadyConnectedResource) ||\n\t\t\t\t\tthis.alreadyConnectedResource)+'\\n';\n\t\t\t}\n\t\t}\n\n\t\t// Gets the number of outgoing edges from the source\n\t\t// and the number of incoming edges from the target\n\t\t// without counting the edge being currently changed.\n\t\tvar sourceOut = this.model.getDirectedEdgeCount(source, true, edge);\n\t\tvar targetIn = this.model.getDirectedEdgeCount(target, false, edge);\n\n\t\t// Checks the change against each multiplicity rule\n\t\tif (this.multiplicities != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t\t{\n\t\t\t\tvar err = this.multiplicities[i].check(this, edge, source,\n\t\t\t\t\ttarget, sourceOut, targetIn);\n\t\t\t\t\n\t\t\t\tif (err != null)\n\t\t\t\t{\n\t\t\t\t\terror += err;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Validates the source and target terminals independently\n\t\tvar err = this.validateEdge(edge, source, target);\n\t\t\n\t\tif (err != null)\n\t\t{\n\t\t\terror += err;\n\t\t}\n\t\t\n\t\treturn (error.length > 0) ? error : null;\n\t}\n\t\n\treturn (this.allowDanglingEdges) ? null : '';\n};\n\n/**\n * Function: validateEdge\n * \n * Hook method for subclassers to return an error message for the given\n * edge and terminals. This implementation returns null.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxGraph.prototype.validateEdge = function(edge, source, target)\n{\n\treturn null;\n};\n\n/**\n * Function: validateGraph\n * \n * Validates the graph by validating each descendant of the given cell or\n * the root of the model. Context is an object that contains the validation\n * state for the complete validation run. The validation errors are\n * attached to their cells using <setCellWarning>. Returns null in the case of\n * successful validation or an array of strings (warnings) in the case of\n * failed validations.\n * \n * Paramters:\n * \n * cell - Optional <mxCell> to start the validation recursion. Default is\n * the graph root.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateGraph = function(cell, context)\n{\n\tcell = (cell != null) ? cell : this.model.getRoot();\n\tcontext = (context != null) ? context : new Object();\n\t\n\tvar isValid = true;\n\tvar childCount = this.model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar tmp = this.model.getChildAt(cell, i);\n\t\tvar ctx = context;\n\t\t\n\t\tif (this.isValidRoot(tmp))\n\t\t{\n\t\t\tctx = new Object();\n\t\t}\n\t\t\n\t\tvar warn = this.validateGraph(tmp, ctx);\n\t\t\n\t\tif (warn != null)\n\t\t{\n\t\t\tthis.setCellWarning(tmp, warn.replace(/\\n/g, '<br>'));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setCellWarning(tmp, null);\n\t\t}\n\t\t\n\t\tisValid = isValid && warn == null;\n\t}\n\t\n\tvar warning = '';\n\t\n\t// Adds error for invalid children if collapsed (children invisible)\n\tif (this.isCellCollapsed(cell) && !isValid)\n\t{\n\t\twarning += (mxResources.get(this.containsValidationErrorsResource) ||\n\t\t\tthis.containsValidationErrorsResource) + '\\n';\n\t}\n\t\n\t// Checks edges and cells using the defined multiplicities\n\tif (this.model.isEdge(cell))\n\t{\n\t\twarning += this.getEdgeValidationError(cell,\n\t\tthis.model.getTerminal(cell, true),\n\t\tthis.model.getTerminal(cell, false)) || '';\n\t}\n\telse\n\t{\n\t\twarning += this.getCellValidationError(cell) || '';\n\t}\n\t\n\t// Checks custom validation rules\n\tvar err = this.validateCell(cell, context);\n\t\n\tif (err != null)\n\t{\n\t\twarning += err;\n\t}\n\t\n\t// Updates the display with the warning icons\n\t// before any potential alerts are displayed.\n\t// LATER: Move this into addCellOverlay. Redraw\n\t// should check if overlay was added or removed.\n\tif (this.model.getParent(cell) == null)\n\t{\n\t\tthis.view.validate();\n\t}\n\n\treturn (warning.length > 0 || !isValid) ? warning : null;\n};\n\n/**\n * Function: getCellValidationError\n * \n * Checks all <multiplicities> that cannot be enforced while the graph is\n * being modified, namely, all multiplicities that require a minimum of\n * 1 edge.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the multiplicities should be checked.\n */\nmxGraph.prototype.getCellValidationError = function(cell)\n{\n\tvar outCount = this.model.getDirectedEdgeCount(cell, true);\n\tvar inCount = this.model.getDirectedEdgeCount(cell, false);\n\tvar value = this.model.getValue(cell);\n\tvar error = '';\n\n\tif (this.multiplicities != null)\n\t{\n\t\tfor (var i = 0; i < this.multiplicities.length; i++)\n\t\t{\n\t\t\tvar rule = this.multiplicities[i];\n\t\t\t\n\t\t\tif (rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\trule.attr, rule.value) && (outCount > rule.max ||\n\t\t\t\toutCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t\telse if (!rule.source && mxUtils.isNode(value, rule.type,\n\t\t\t\t\trule.attr, rule.value) && (inCount > rule.max ||\n\t\t\t\t\tinCount < rule.min))\n\t\t\t{\n\t\t\t\terror += rule.countError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: validateCell\n * \n * Hook method for subclassers to return an error message for the given\n * cell and validation context. This implementation returns null. Any HTML\n * breaks will be converted to linefeeds in the calling method.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to validate.\n * context - Object that represents the global validation state.\n */\nmxGraph.prototype.validateCell = function(cell, context)\n{\n\treturn null;\n};\n\n/**\n * Group: Graph appearance\n */\n\n/**\n * Function: getBackgroundImage\n * \n * Returns the <backgroundImage> as an <mxImage>.\n */\nmxGraph.prototype.getBackgroundImage = function()\n{\n\treturn this.backgroundImage;\n};\n\n/**\n * Function: setBackgroundImage\n * \n * Sets the new <backgroundImage>.\n * \n * Parameters:\n * \n * image - New <mxImage> to be used for the background.\n */\nmxGraph.prototype.setBackgroundImage = function(image)\n{\n\tthis.backgroundImage = image;\n};\n\n/**\n * Function: getFoldingImage\n * \n * Returns the <mxImage> used to display the collapsed state of\n * the specified cell state. This returns null for all edges.\n */\nmxGraph.prototype.getFoldingImage = function(state)\n{\n\tif (state != null && this.foldingEnabled && !this.getModel().isEdge(state.cell))\n\t{\n\t\tvar tmp = this.isCellCollapsed(state.cell);\n\t\t\n\t\tif (this.isCellFoldable(state.cell, !tmp))\n\t\t{\n\t\t\treturn (tmp) ? this.collapsedImage : this.expandedImage;\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: convertValueToString\n * \n * Returns the textual representation for the given cell. This\n * implementation returns the nodename or string-representation of the user\n * object.\n *\n * Example:\n * \n * The following returns the label attribute from the cells user\n * object if it is an XML node.\n * \n * (code)\n * graph.convertValueToString = function(cell)\n * {\n * \treturn cell.getAttribute('label');\n * }\n * (end)\n * \n * See also: <cellLabelChanged>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose textual representation should be returned.\n */\nmxGraph.prototype.convertValueToString = function(cell)\n{\n\tvar value = this.model.getValue(cell);\n\t\n\tif (value != null)\n\t{\n\t\tif (mxUtils.isNode(value))\n\t\t{\n\t\t\treturn value.nodeName;\n\t\t}\n\t\telse if (typeof(value.toString) == 'function')\n\t\t{\n\t\t\treturn value.toString();\n\t\t}\n\t}\n\t\n\treturn '';\n};\n\n/**\n * Function: getLabel\n * \n * Returns a string or DOM node that represents the label for the given\n * cell. This implementation uses <convertValueToString> if <labelsVisible>\n * is true. Otherwise it returns an empty string.\n * \n * To truncate a label to match the size of the cell, the following code\n * can be used.\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var label = mxGraph.prototype.getLabel.apply(this, arguments);\n * \n *   if (label != null && this.model.isVertex(cell))\n *   {\n *     var geo = this.getCellGeometry(cell);\n * \n *     if (geo != null)\n *     {\n *       var max = parseInt(geo.width / 8);\n * \n *       if (label.length > max)\n *       {\n *         label = label.substring(0, max)+'...';\n *       }\n *     }\n *   } \n *   return mxUtils.htmlEntities(label);\n * }\n * (end)\n * \n * A resize listener is needed in the graph to force a repaint of the label\n * after a resize.\n * \n * (code)\n * graph.addListener(mxEvent.RESIZE_CELLS, function(sender, evt)\n * {\n *   var cells = evt.getProperty('cells');\n * \n *   for (var i = 0; i < cells.length; i++)\n *   {\n *     this.view.removeState(cells[i]);\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be returned.\n */\nmxGraph.prototype.getLabel = function(cell)\n{\n\tvar result = '';\n\t\n\tif (this.labelsVisible && cell != null)\n\t{\n\t\tvar state = this.view.getState(cell);\n\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\t\n\t\tif (!mxUtils.getValue(style, mxConstants.STYLE_NOLABEL, false))\n\t\t{\n\t\t\tresult = this.convertValueToString(cell);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isHtmlLabel\n * \n * Returns true if the label must be rendered as HTML markup. The default\n * implementation returns <htmlLabels>.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be displayed as HTML markup.\n */\nmxGraph.prototype.isHtmlLabel = function(cell)\n{\n\treturn this.isHtmlLabels();\n};\n \n/**\n * Function: isHtmlLabels\n * \n * Returns <htmlLabels>.\n */\nmxGraph.prototype.isHtmlLabels = function()\n{\n\treturn this.htmlLabels;\n};\n \n/**\n * Function: setHtmlLabels\n * \n * Sets <htmlLabels>.\n */\nmxGraph.prototype.setHtmlLabels = function(value)\n{\n\tthis.htmlLabels = value;\n};\n\n/**\n * Function: isWrapping\n * \n * This enables wrapping for HTML labels.\n * \n * Returns true if no white-space CSS style directive should be used for\n * displaying the given cells label. This implementation returns true if\n * <mxConstants.STYLE_WHITE_SPACE> in the style of the given cell is 'wrap'.\n * \n * This is used as a workaround for IE ignoring the white-space directive\n * of child elements if the directive appears in a parent element. It\n * should be overridden to return true if a white-space directive is used\n * in the HTML markup that represents the given cells label. In order for\n * HTML markup to work in labels, <isHtmlLabel> must also return true\n * for the given cell.\n * \n * Example:\n * \n * (code)\n * graph.getLabel = function(cell)\n * {\n *   var tmp = mxGraph.prototype.getLabel.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.model.isEdge(cell))\n *   {\n *     tmp = '<div style=\"width: 150px; white-space:normal;\">'+tmp+'</div>';\n *   }\n *   \n *   return tmp;\n * }\n * \n * graph.isWrapping = function(state)\n * {\n * \t return this.model.isEdge(state.cell);\n * }\n * (end)\n * \n * Makes sure no edge label is wider than 150 pixels, otherwise the content\n * is wrapped. Note: No width must be specified for wrapped vertex labels as\n * the vertex defines the width in its geometry.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be wrapped.\n */\nmxGraph.prototype.isWrapping = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_WHITE_SPACE] == 'wrap' : false;\n};\n\n/**\n * Function: isLabelClipped\n * \n * Returns true if the overflow portion of labels should be hidden. If this\n * returns true then vertex labels will be clipped to the size of the vertices.\n * This implementation returns true if <mxConstants.STYLE_OVERFLOW> in the\n * style of the given cell is 'hidden'.\n * \n * Parameters:\n * \n * state - <mxCell> whose label should be clipped.\n */\nmxGraph.prototype.isLabelClipped = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn (style != null) ? style[mxConstants.STYLE_OVERFLOW] == 'hidden' : false;\n};\n\n/**\n * Function: getTooltip\n * \n * Returns the string or DOM node that represents the tooltip for the given\n * state, node and coordinate pair. This implementation checks if the given\n * node is a folding icon or overlay and returns the respective tooltip. If\n * this does not result in a tooltip, the handler for the cell is retrieved\n * from <selectionCellsHandler> and the optional getTooltipForNode method is\n * called. If no special tooltip exists here then <getTooltipForCell> is used\n * with the cell in the given state as the argument to return a tooltip for the\n * given state.\n * \n * Parameters:\n * \n * state - <mxCellState> whose tooltip should be returned.\n * node - DOM node that is currently under the mouse.\n * x - X-coordinate of the mouse.\n * y - Y-coordinate of the mouse.\n */\nmxGraph.prototype.getTooltip = function(state, node, x, y)\n{\n\tvar tip = null;\n\t\n\tif (state != null)\n\t{\n\t\t// Checks if the mouse is over the folding icon\n\t\tif (state.control != null && (node == state.control.node ||\n\t\t\tnode.parentNode == state.control.node))\n\t\t{\n\t\t\ttip = this.collapseExpandResource;\n\t\t\ttip = mxUtils.htmlEntities(mxResources.get(tip) || tip).replace(/\\\\n/g, '<br>');\n\t\t}\n\n\t\tif (tip == null && state.overlays != null)\n\t\t{\n\t\t\tstate.overlays.visit(function(id, shape)\n\t\t\t{\n\t\t\t\t// LATER: Exit loop if tip is not null\n\t\t\t\tif (tip == null && (node == shape.node || node.parentNode == shape.node))\n\t\t\t\t{\n\t\t\t\t\ttip = shape.overlay.toString();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\tvar handler = this.selectionCellsHandler.getHandler(state.cell);\n\t\t\t\n\t\t\tif (handler != null && typeof(handler.getTooltipForNode) == 'function')\n\t\t\t{\n\t\t\t\ttip = handler.getTooltipForNode(node);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (tip == null)\n\t\t{\n\t\t\ttip = this.getTooltipForCell(state.cell);\n\t\t}\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getTooltipForCell\n * \n * Returns the string or DOM node to be used as the tooltip for the given\n * cell. This implementation uses the cells getTooltip function if it\n * exists, or else it returns <convertValueToString> for the cell.\n * \n * Example:\n * \n * (code)\n * graph.getTooltipForCell = function(cell)\n * {\n *   return 'Hello, World!';\n * }\n * (end)\n * \n * Replaces all tooltips with the string Hello, World!\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getTooltipForCell = function(cell)\n{\n\tvar tip = null;\n\t\n\tif (cell != null && cell.getTooltip != null)\n\t{\n\t\ttip = cell.getTooltip();\n\t}\n\telse\n\t{\n\t\ttip = this.convertValueToString(cell);\n\t}\n\t\n\treturn tip;\n};\n\n/**\n * Function: getLinkForCell\n * \n * Returns the string to be used as the link for the given cell. This\n * implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose tooltip should be returned.\n */\nmxGraph.prototype.getLinkForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getCursorForMouseEvent\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given event. This implementation calls <getCursorForCell>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForMouseEvent = function(me)\n{\n\treturn this.getCursorForCell(me.getCell());\n};\n\n/**\n * Function: getCursorForCell\n * \n * Returns the cursor value to be used for the CSS of the shape for the\n * given cell. This implementation returns null.\n * \n * Parameters:\n * \n * cell - <mxCell> whose cursor should be returned.\n */\nmxGraph.prototype.getCursorForCell = function(cell)\n{\n\treturn null;\n};\n\n/**\n * Function: getStartSize\n * \n * Returns the start size of the given swimlane, that is, the width or\n * height of the part that contains the title, depending on the\n * horizontal style. The return value is an <mxRectangle> with either\n * width or height set as appropriate.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose start size should be returned.\n */\nmxGraph.prototype.getStartSize = function(swimlane)\n{\n\tvar result = new mxRectangle();\n\tvar state = this.view.getState(swimlane);\n\tvar style = (state != null) ? state.style : this.getCellStyle(swimlane);\n\t\n\tif (style != null)\n\t{\n\t\tvar size = parseInt(mxUtils.getValue(style,\n\t\t\tmxConstants.STYLE_STARTSIZE, mxConstants.DEFAULT_STARTSIZE));\n\t\t\n\t\tif (mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, true))\n\t\t{\n\t\t\tresult.height = size;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult.width = size;\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getImage\n * \n * Returns the image URL for the given cell state. This implementation\n * returns the value stored under <mxConstants.STYLE_IMAGE> in the cell\n * style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose image URL should be returned.\n */\nmxGraph.prototype.getImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_IMAGE] : null;\n};\n\n/**\n * Function: getVerticalAlign\n * \n * Returns the vertical alignment for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_VERTICAL_ALIGN> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose vertical alignment should be\n * returned.\n */\nmxGraph.prototype.getVerticalAlign = function(state)\n{\n\treturn (state != null && state.style != null) ?\n\t\t(state.style[mxConstants.STYLE_VERTICAL_ALIGN] ||\n\t\tmxConstants.ALIGN_MIDDLE) : null;\n};\n\n/**\n * Function: getIndicatorColor\n * \n * Returns the indicator color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_COLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_COLOR] : null;\n};\n\n/**\n * Function: getIndicatorGradientColor\n * \n * Returns the indicator gradient color for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_GRADIENTCOLOR> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator gradient color should be\n * returned.\n */\nmxGraph.prototype.getIndicatorGradientColor = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_GRADIENTCOLOR] : null;\n};\n\n/**\n * Function: getIndicatorShape\n * \n * Returns the indicator shape for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_SHAPE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator shape should be returned.\n */\nmxGraph.prototype.getIndicatorShape = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_SHAPE] : null;\n};\n\n/**\n * Function: getIndicatorImage\n * \n * Returns the indicator image for the given cell state. This\n * implementation returns the value stored under\n * <mxConstants.STYLE_INDICATOR_IMAGE> in the cell style.\n * \n * Parameters:\n * \n * state - <mxCellState> whose indicator image should be returned.\n */\nmxGraph.prototype.getIndicatorImage = function(state)\n{\n\treturn (state != null && state.style != null) ? state.style[mxConstants.STYLE_INDICATOR_IMAGE] : null;\n};\n\n/**\n * Function: getBorder\n * \n * Returns the value of <border>.\n */\nmxGraph.prototype.getBorder = function()\n{\n\treturn this.border;\n};\n\n/**\n * Function: setBorder\n * \n * Sets the value of <border>.\n * \n * Parameters:\n * \n * value - Positive integer that represents the border to be used.\n */\nmxGraph.prototype.setBorder = function(value)\n{\n\tthis.border = value;\n};\n\n/**\n * Function: isSwimlane\n * \n * Returns true if the given cell is a swimlane in the graph. A swimlane is\n * a container cell with some specific behaviour. This implementation\n * checks if the shape associated with the given cell is a <mxSwimlane>.\n * \n * Parameters:\n * \n * cell - <mxCell> to be checked.\n */\nmxGraph.prototype.isSwimlane = function (cell)\n{\n\tif (cell != null)\n\t{\n\t\tif (this.model.getParent(cell) != this.model.getRoot())\n\t\t{\n\t\t\tvar state = this.view.getState(cell);\n\t\t\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\t\t\tif (style != null && !this.model.isEdge(cell))\n\t\t\t{\n\t\t\t\treturn style[mxConstants.STYLE_SHAPE] == mxConstants.SHAPE_SWIMLANE;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Group: Graph behaviour\n */\n\n/**\n * Function: isResizeContainer\n * \n * Returns <resizeContainer>.\n */\nmxGraph.prototype.isResizeContainer = function()\n{\n\treturn this.resizeContainer;\n};\n\n/**\n * Function: setResizeContainer\n * \n * Sets <resizeContainer>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the container should be resized.\n */\nmxGraph.prototype.setResizeContainer = function(value)\n{\n\tthis.resizeContainer = value;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if the graph is <enabled>.\n */\nmxGraph.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Specifies if the graph should allow any interactions. This\n * implementation updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be enabled.\n */\nmxGraph.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isEscapeEnabled\n * \n * Returns <escapeEnabled>.\n */\nmxGraph.prototype.isEscapeEnabled = function()\n{\n\treturn this.escapeEnabled;\n};\n\n/**\n * Function: setEscapeEnabled\n * \n * Sets <escapeEnabled>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if escape should be enabled.\n */\nmxGraph.prototype.setEscapeEnabled = function(value)\n{\n\tthis.escapeEnabled = value;\n};\n\n/**\n * Function: isInvokesStopCellEditing\n * \n * Returns <invokesStopCellEditing>.\n */\nmxGraph.prototype.isInvokesStopCellEditing = function()\n{\n\treturn this.invokesStopCellEditing;\n};\n\n/**\n * Function: setInvokesStopCellEditing\n * \n * Sets <invokesStopCellEditing>.\n */\nmxGraph.prototype.setInvokesStopCellEditing = function(value)\n{\n\tthis.invokesStopCellEditing = value;\n};\n\n/**\n * Function: isEnterStopsCellEditing\n * \n * Returns <enterStopsCellEditing>.\n */\nmxGraph.prototype.isEnterStopsCellEditing = function()\n{\n\treturn this.enterStopsCellEditing;\n};\n\n/**\n * Function: setEnterStopsCellEditing\n * \n * Sets <enterStopsCellEditing>.\n */\nmxGraph.prototype.setEnterStopsCellEditing = function(value)\n{\n\tthis.enterStopsCellEditing = value;\n};\n\n/**\n * Function: isCellLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellLocked = function(cell)\n{\n\tvar geometry = this.model.getGeometry(cell);\n\t\n\treturn this.isCellsLocked() || (geometry != null && this.model.isVertex(cell) && geometry.relative);\n};\n\n/**\n * Function: isCellsLocked\n * \n * Returns true if the given cell may not be moved, sized, bended,\n * disconnected, edited or selected. This implementation returns true for\n * all vertices with a relative geometry if <locked> is false.\n * \n * Parameters:\n * \n * cell - <mxCell> whose locked state should be returned.\n */\nmxGraph.prototype.isCellsLocked = function()\n{\n\treturn this.cellsLocked;\n};\n\n/**\n * Function: setCellsLocked\n * \n * Sets if any cell may be moved, sized, bended, disconnected, edited or\n * selected.\n * \n * Parameters:\n * \n * value - Boolean that defines the new value for <cellsLocked>.\n */\nmxGraph.prototype.setCellsLocked = function(value)\n{\n\tthis.cellsLocked = value;\n};\n\n/**\n * Function: getCloneableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getCloneableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellCloneable(cell);\n\t}));\n};\n\n/**\n * Function: isCellCloneable\n * \n * Returns true if the given cell is cloneable. This implementation returns\n * <isCellsCloneable> for all cells unless a cell style specifies\n * <mxConstants.STYLE_CLONEABLE> to be 0. \n * \n * Parameters:\n * \n * cell - Optional <mxCell> whose cloneable state should be returned.\n */\nmxGraph.prototype.isCellCloneable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsCloneable() && style[mxConstants.STYLE_CLONEABLE] != 0;\n};\n\n/**\n * Function: isCellsCloneable\n * \n * Returns <cellsCloneable>, that is, if the graph allows cloning of cells\n * by using control-drag.\n */\nmxGraph.prototype.isCellsCloneable = function()\n{\n\treturn this.cellsCloneable;\n};\n\n/**\n * Function: setCellsCloneable\n * \n * Specifies if the graph should allow cloning of cells by holding down the\n * control key while cells are being moved. This implementation updates\n * <cellsCloneable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should be cloneable.\n */\nmxGraph.prototype.setCellsCloneable = function(value)\n{\n\tthis.cellsCloneable = value;\n};\n\n/**\n * Function: getExportableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getExportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canExportCell(cell);\n\t}));\n};\n\n/**\n * Function: canExportCell\n * \n * Returns true if the given cell may be exported to the clipboard. This\n * implementation returns <exportEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be exported.\n */\nmxGraph.prototype.canExportCell = function(cell)\n{\n\treturn this.exportEnabled;\n};\n\n/**\n * Function: getImportableCells\n * \n * Returns the cells which may be imported in the given array of cells.\n */\nmxGraph.prototype.getImportableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.canImportCell(cell);\n\t}));\n};\n\n/**\n * Function: canImportCell\n * \n * Returns true if the given cell may be imported from the clipboard.\n * This implementation returns <importEnabled> for all cells.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the cell to be imported.\n */\nmxGraph.prototype.canImportCell = function(cell)\n{\n\treturn this.importEnabled;\n};\n\n/**\n * Function: isCellSelectable\n *\n * Returns true if the given cell is selectable. This implementation\n * returns <cellsSelectable>.\n * \n * To add a new style for making cells (un)selectable, use the following code.\n * \n * (code)\n * mxGraph.prototype.isCellSelectable = function(cell)\n * {\n *   var state = this.view.getState(cell);\n *   var style = (state != null) ? state.style : this.getCellStyle(cell);\n *   \n *   return this.isCellsSelectable() && !this.isCellLocked(cell) && style['selectable'] != 0;\n * };\n * (end)\n * \n * You can then use the new style as shown in this example.\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'selectable=0');\n * (end)\n * \n * Parameters:\n * \n * cell - <mxCell> whose selectable state should be returned.\n */\nmxGraph.prototype.isCellSelectable = function(cell)\n{\n\treturn this.isCellsSelectable();\n};\n\n/**\n * Function: isCellsSelectable\n *\n * Returns <cellsSelectable>.\n */\nmxGraph.prototype.isCellsSelectable = function()\n{\n\treturn this.cellsSelectable;\n};\n\n/**\n * Function: setCellsSelectable\n *\n * Sets <cellsSelectable>.\n */\nmxGraph.prototype.setCellsSelectable = function(value)\n{\n\tthis.cellsSelectable = value;\n};\n\n/**\n * Function: getDeletableCells\n * \n * Returns the cells which may be exported in the given array of cells.\n */\nmxGraph.prototype.getDeletableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellDeletable(cell);\n\t}));\n};\n\n/**\n * Function: isCellDeletable\n *\n * Returns true if the given cell is moveable. This returns\n * <cellsDeletable> for all given cells if a cells style does not specify\n * <mxConstants.STYLE_DELETABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose deletable state should be returned.\n */\nmxGraph.prototype.isCellDeletable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsDeletable() && style[mxConstants.STYLE_DELETABLE] != 0;\n};\n\n/**\n * Function: isCellsDeletable\n *\n * Returns <cellsDeletable>.\n */\nmxGraph.prototype.isCellsDeletable = function()\n{\n\treturn this.cellsDeletable;\n};\n\n/**\n * Function: setCellsDeletable\n * \n * Sets <cellsDeletable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow deletion of cells.\n */\nmxGraph.prototype.setCellsDeletable = function(value)\n{\n\tthis.cellsDeletable = value;\n};\n\n/**\n * Function: isLabelMovable\n *\n * Returns true if the given edges's label is moveable. This returns\n * <movable> for all given cells if <isLocked> does not return true\n * for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose label should be moved.\n */\nmxGraph.prototype.isLabelMovable = function(cell)\n{\n\treturn !this.isCellLocked(cell) &&\n\t\t((this.model.isEdge(cell) && this.edgeLabelsMovable) ||\n\t\t(this.model.isVertex(cell) && this.vertexLabelsMovable));\n};\n\n/**\n * Function: isCellRotatable\n *\n * Returns true if the given cell is rotatable. This returns true for the given\n * cell if its style does not specify <mxConstants.STYLE_ROTATABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose rotatable state should be returned.\n */\nmxGraph.prototype.isCellRotatable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn style[mxConstants.STYLE_ROTATABLE] != 0;\n};\n\n/**\n * Function: getMovableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getMovableCells = function(cells)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellMovable(cell);\n\t}));\n};\n\n/**\n * Function: isCellMovable\n *\n * Returns true if the given cell is moveable. This returns <cellsMovable>\n * for all given cells if <isCellLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_MOVABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose movable state should be returned.\n */\nmxGraph.prototype.isCellMovable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsMovable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_MOVABLE] != 0;\n};\n\n/**\n * Function: isCellsMovable\n *\n * Returns <cellsMovable>.\n */\nmxGraph.prototype.isCellsMovable = function()\n{\n\treturn this.cellsMovable;\n};\n\n/**\n * Function: setCellsMovable\n * \n * Specifies if the graph should allow moving of cells. This implementation\n * updates <cellsMsovable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow moving of cells.\n */\nmxGraph.prototype.setCellsMovable = function(value)\n{\n\tthis.cellsMovable = value;\n};\n\n/**\n * Function: isGridEnabled\n *\n * Returns <gridEnabled> as a boolean.\n */\nmxGraph.prototype.isGridEnabled = function()\n{\n\treturn this.gridEnabled;\n};\n\n/**\n * Function: setGridEnabled\n * \n * Specifies if the grid should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the grid should be enabled.\n */\nmxGraph.prototype.setGridEnabled = function(value)\n{\n\tthis.gridEnabled = value;\n};\n\n/**\n * Function: isPortsEnabled\n *\n * Returns <portsEnabled> as a boolean.\n */\nmxGraph.prototype.isPortsEnabled = function()\n{\n\treturn this.portsEnabled;\n};\n\n/**\n * Function: setPortsEnabled\n * \n * Specifies if the ports should be enabled.\n * \n * Parameters:\n * \n * value - Boolean indicating if the ports should be enabled.\n */\nmxGraph.prototype.setPortsEnabled = function(value)\n{\n\tthis.portsEnabled = value;\n};\n\n/**\n * Function: getGridSize\n *\n * Returns <gridSize>.\n */\nmxGraph.prototype.getGridSize = function()\n{\n\treturn this.gridSize;\n};\n\n/**\n * Function: setGridSize\n * \n * Sets <gridSize>.\n */\nmxGraph.prototype.setGridSize = function(value)\n{\n\tthis.gridSize = value;\n};\n\n/**\n * Function: getTolerance\n *\n * Returns <tolerance>.\n */\nmxGraph.prototype.getTolerance = function()\n{\n\treturn this.tolerance;\n};\n\n/**\n * Function: setTolerance\n * \n * Sets <tolerance>.\n */\nmxGraph.prototype.setTolerance = function(value)\n{\n\tthis.tolerance = value;\n};\n\n/**\n * Function: isVertexLabelsMovable\n *\n * Returns <vertexLabelsMovable>.\n */\nmxGraph.prototype.isVertexLabelsMovable = function()\n{\n\treturn this.vertexLabelsMovable;\n};\n\n/**\n * Function: setVertexLabelsMovable\n * \n * Sets <vertexLabelsMovable>.\n */\nmxGraph.prototype.setVertexLabelsMovable = function(value)\n{\n\tthis.vertexLabelsMovable = value;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n *\n * Returns <edgeLabelsMovable>.\n */\nmxGraph.prototype.isEdgeLabelsMovable = function()\n{\n\treturn this.edgeLabelsMovable;\n};\n\n/**\n * Function: isEdgeLabelsMovable\n * \n * Sets <edgeLabelsMovable>.\n */\nmxGraph.prototype.setEdgeLabelsMovable = function(value)\n{\n\tthis.edgeLabelsMovable = value;\n};\n\n/**\n * Function: isSwimlaneNesting\n *\n * Returns <swimlaneNesting> as a boolean.\n */\nmxGraph.prototype.isSwimlaneNesting = function()\n{\n\treturn this.swimlaneNesting;\n};\n\n/**\n * Function: setSwimlaneNesting\n * \n * Specifies if swimlanes can be nested by drag and drop. This is only\n * taken into account if dropEnabled is true.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes can be nested.\n */\nmxGraph.prototype.setSwimlaneNesting = function(value)\n{\n\tthis.swimlaneNesting = value;\n};\n\n/**\n * Function: isSwimlaneSelectionEnabled\n *\n * Returns <swimlaneSelectionEnabled> as a boolean.\n */\nmxGraph.prototype.isSwimlaneSelectionEnabled = function()\n{\n\treturn this.swimlaneSelectionEnabled;\n};\n\n/**\n * Function: setSwimlaneSelectionEnabled\n * \n * Specifies if swimlanes should be selected if the mouse is released\n * over their content area.\n * \n * Parameters:\n * \n * value - Boolean indicating if swimlanes content areas\n * should be selected when the mouse is released over them.\n */\nmxGraph.prototype.setSwimlaneSelectionEnabled = function(value)\n{\n\tthis.swimlaneSelectionEnabled = value;\n};\n\n/**\n * Function: isMultigraph\n *\n * Returns <multigraph> as a boolean.\n */\nmxGraph.prototype.isMultigraph = function()\n{\n\treturn this.multigraph;\n};\n\n/**\n * Function: setMultigraph\n * \n * Specifies if the graph should allow multiple connections between the\n * same pair of vertices.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph allows multiple connections\n * between the same pair of vertices.\n */\nmxGraph.prototype.setMultigraph = function(value)\n{\n\tthis.multigraph = value;\n};\n\n/**\n * Function: isAllowLoops\n *\n * Returns <allowLoops> as a boolean.\n */\nmxGraph.prototype.isAllowLoops = function()\n{\n\treturn this.allowLoops;\n};\n\n/**\n * Function: setAllowDanglingEdges\n * \n * Specifies if dangling edges are allowed, that is, if edges are allowed\n * that do not have a source and/or target terminal defined.\n * \n * Parameters:\n * \n * value - Boolean indicating if dangling edges are allowed.\n */\nmxGraph.prototype.setAllowDanglingEdges = function(value)\n{\n\tthis.allowDanglingEdges = value;\n};\n\n/**\n * Function: isAllowDanglingEdges\n *\n * Returns <allowDanglingEdges> as a boolean.\n */\nmxGraph.prototype.isAllowDanglingEdges = function()\n{\n\treturn this.allowDanglingEdges;\n};\n\n/**\n * Function: setConnectableEdges\n * \n * Specifies if edges should be connectable.\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be connectable.\n */\nmxGraph.prototype.setConnectableEdges = function(value)\n{\n\tthis.connectableEdges = value;\n};\n\n/**\n * Function: isConnectableEdges\n *\n * Returns <connectableEdges> as a boolean.\n */\nmxGraph.prototype.isConnectableEdges = function()\n{\n\treturn this.connectableEdges;\n};\n\n/**\n * Function: setCloneInvalidEdges\n * \n * Specifies if edges should be inserted when cloned but not valid wrt.\n * <getEdgeValidationError>. If false such edges will be silently ignored.\n * \n * Parameters:\n * \n * value - Boolean indicating if cloned invalid edges should be\n * inserted into the graph or ignored.\n */\nmxGraph.prototype.setCloneInvalidEdges = function(value)\n{\n\tthis.cloneInvalidEdges = value;\n};\n\n/**\n * Function: isCloneInvalidEdges\n *\n * Returns <cloneInvalidEdges> as a boolean.\n */\nmxGraph.prototype.isCloneInvalidEdges = function()\n{\n\treturn this.cloneInvalidEdges;\n};\n\n/**\n * Function: setAllowLoops\n * \n * Specifies if loops are allowed.\n * \n * Parameters:\n * \n * value - Boolean indicating if loops are allowed.\n */\nmxGraph.prototype.setAllowLoops = function(value)\n{\n\tthis.allowLoops = value;\n};\n\n/**\n * Function: isDisconnectOnMove\n *\n * Returns <disconnectOnMove> as a boolean.\n */\nmxGraph.prototype.isDisconnectOnMove = function()\n{\n\treturn this.disconnectOnMove;\n};\n\n/**\n * Function: setDisconnectOnMove\n * \n * Specifies if edges should be disconnected when moved. (Note: Cloned\n * edges are always disconnected.)\n * \n * Parameters:\n * \n * value - Boolean indicating if edges should be disconnected\n * when moved.\n */\nmxGraph.prototype.setDisconnectOnMove = function(value)\n{\n\tthis.disconnectOnMove = value;\n};\n\n/**\n * Function: isDropEnabled\n *\n * Returns <dropEnabled> as a boolean.\n */\nmxGraph.prototype.isDropEnabled = function()\n{\n\treturn this.dropEnabled;\n};\n\n/**\n * Function: setDropEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setDropEnabled = function(value)\n{\n\tthis.dropEnabled = value;\n};\n\n/**\n * Function: isSplitEnabled\n *\n * Returns <splitEnabled> as a boolean.\n */\nmxGraph.prototype.isSplitEnabled = function()\n{\n\treturn this.splitEnabled;\n};\n\n/**\n * Function: setSplitEnabled\n * \n * Specifies if the graph should allow dropping of cells onto or into other\n * cells.\n * \n * Parameters:\n * \n * dropEnabled - Boolean indicating if the graph should allow dropping\n * of cells into other cells.\n */\nmxGraph.prototype.setSplitEnabled = function(value)\n{\n\tthis.splitEnabled = value;\n};\n\n/**\n * Function: isCellResizable\n *\n * Returns true if the given cell is resizable. This returns\n * <cellsResizable> for all given cells if <isCellLocked> does not return\n * true for the given cell and its style does not specify\n * <mxConstants.STYLE_RESIZABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose resizable state should be returned.\n */\nmxGraph.prototype.isCellResizable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\n\treturn this.isCellsResizable() && !this.isCellLocked(cell) &&\n\t\tmxUtils.getValue(style, mxConstants.STYLE_RESIZABLE, '1') != '0';\n};\n\n/**\n * Function: isCellsResizable\n *\n * Returns <cellsResizable>.\n */\nmxGraph.prototype.isCellsResizable = function()\n{\n\treturn this.cellsResizable;\n};\n\n/**\n * Function: setCellsResizable\n * \n * Specifies if the graph should allow resizing of cells. This\n * implementation updates <cellsResizable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow resizing of\n * cells.\n */\nmxGraph.prototype.setCellsResizable = function(value)\n{\n\tthis.cellsResizable = value;\n};\n\n/**\n * Function: isTerminalPointMovable\n *\n * Returns true if the given terminal point is movable. This is independent\n * from <isCellConnectable> and <isCellDisconnectable> and controls if terminal\n * points can be moved in the graph if the edge is not connected. Note that it\n * is required for this to return true to connect unconnected edges. This\n * implementation returns true.\n * \n * Parameters:\n * \n * cell - <mxCell> whose terminal point should be moved.\n * source - Boolean indicating if the source or target terminal should be moved.\n */\nmxGraph.prototype.isTerminalPointMovable = function(cell, source)\n{\n\treturn true;\n};\n\n/**\n * Function: isCellBendable\n *\n * Returns true if the given cell is bendable. This returns <cellsBendable>\n * for all given cells if <isLocked> does not return true for the given\n * cell and its style does not specify <mxConstants.STYLE_BENDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose bendable state should be returned.\n */\nmxGraph.prototype.isCellBendable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsBendable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_BENDABLE] != 0;\n};\n\n/**\n * Function: isCellsBendable\n *\n * Returns <cellsBenadable>.\n */\nmxGraph.prototype.isCellsBendable = function()\n{\n\treturn this.cellsBendable;\n};\n\n/**\n * Function: setCellsBendable\n * \n * Specifies if the graph should allow bending of edges. This\n * implementation updates <bendable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow bending of\n * edges.\n */\nmxGraph.prototype.setCellsBendable = function(value)\n{\n\tthis.cellsBendable = value;\n};\n\n/**\n * Function: isCellEditable\n *\n * Returns true if the given cell is editable. This returns <cellsEditable> for\n * all given cells if <isCellLocked> does not return true for the given cell\n * and its style does not specify <mxConstants.STYLE_EDITABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose editable state should be returned.\n */\nmxGraph.prototype.isCellEditable = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isCellsEditable() && !this.isCellLocked(cell) && style[mxConstants.STYLE_EDITABLE] != 0;\n};\n\n/**\n * Function: isCellsEditable\n *\n * Returns <cellsEditable>.\n */\nmxGraph.prototype.isCellsEditable = function()\n{\n\treturn this.cellsEditable;\n};\n\n/**\n * Function: setCellsEditable\n * \n * Specifies if the graph should allow in-place editing for cell labels.\n * This implementation updates <cellsEditable>.\n * \n * Parameters:\n * \n * value - Boolean indicating if the graph should allow in-place\n * editing.\n */\nmxGraph.prototype.setCellsEditable = function(value)\n{\n\tthis.cellsEditable = value;\n};\n\n/**\n * Function: isCellDisconnectable\n *\n * Returns true if the given cell is disconnectable from the source or\n * target terminal. This returns <isCellsDisconnectable> for all given\n * cells if <isCellLocked> does not return true for the given cell.\n * \n * Parameters:\n * \n * cell - <mxCell> whose disconnectable state should be returned.\n * terminal - <mxCell> that represents the source or target terminal.\n * source - Boolean indicating if the source or target terminal is to be\n * disconnected.\n */\nmxGraph.prototype.isCellDisconnectable = function(cell, terminal, source)\n{\n\treturn this.isCellsDisconnectable() && !this.isCellLocked(cell);\n};\n\n/**\n * Function: isCellsDisconnectable\n *\n * Returns <cellsDisconnectable>.\n */\nmxGraph.prototype.isCellsDisconnectable = function()\n{\n\treturn this.cellsDisconnectable;\n};\n\n/**\n * Function: setCellsDisconnectable\n *\n * Sets <cellsDisconnectable>.\n */\nmxGraph.prototype.setCellsDisconnectable = function(value)\n{\n\tthis.cellsDisconnectable = value;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns true if the given cell is a valid source for new connections.\n * This implementation returns true for all non-null values and is\n * called by is called by <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible source or null.\n */\nmxGraph.prototype.isValidSource = function(cell)\n{\n\treturn (cell == null && this.allowDanglingEdges) ||\n\t\t(cell != null && (!this.model.isEdge(cell) ||\n\t\tthis.connectableEdges) && this.isCellConnectable(cell));\n};\n\t\n/**\n * Function: isValidTarget\n * \n * Returns <isValidSource> for the given cell. This is called by\n * <isValidConnection>.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents a possible target or null.\n */\nmxGraph.prototype.isValidTarget = function(cell)\n{\n\treturn this.isValidSource(cell);\n};\n\n/**\n * Function: isValidConnection\n * \n * Returns true if the given target cell is a valid target for source.\n * This is a boolean implementation for not allowing connections between\n * certain pairs of vertices and is called by <getEdgeValidationError>.\n * This implementation returns true if <isValidSource> returns true for\n * the source and <isValidTarget> returns true for the target.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source cell.\n * target - <mxCell> that represents the target cell.\n */\nmxGraph.prototype.isValidConnection = function(source, target)\n{\n\treturn this.isValidSource(source) && this.isValidTarget(target);\n};\n\n/**\n * Function: setConnectable\n * \n * Specifies if the graph should allow new connections. This implementation\n * updates <mxConnectionHandler.enabled> in <connectionHandler>.\n * \n * Parameters:\n * \n * connectable - Boolean indicating if new connections should be allowed.\n */\nmxGraph.prototype.setConnectable = function(connectable)\n{\n\tthis.connectionHandler.setEnabled(connectable);\n};\n\t\n/**\n * Function: isConnectable\n * \n * Returns true if the <connectionHandler> is enabled.\n */\nmxGraph.prototype.isConnectable = function()\n{\n\treturn this.connectionHandler.isEnabled();\n};\n\n/**\n * Function: setTooltips\n * \n * Specifies if tooltips should be enabled. This implementation updates\n * <mxTooltipHandler.enabled> in <tooltipHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if tooltips should be enabled.\n */\nmxGraph.prototype.setTooltips = function (enabled)\n{\n\tthis.tooltipHandler.setEnabled(enabled);\n};\n\n/**\n * Function: setPanning\n * \n * Specifies if panning should be enabled. This implementation updates\n * <mxPanningHandler.panningEnabled> in <panningHandler>.\n * \n * Parameters:\n * \n * enabled - Boolean indicating if panning should be enabled.\n */\nmxGraph.prototype.setPanning = function(enabled)\n{\n\tthis.panningHandler.panningEnabled = enabled;\n};\n\n/**\n * Function: isEditing\n * \n * Returns true if the given cell is currently being edited.\n * If no cell is specified then this returns true if any\n * cell is currently being edited.\n *\n * Parameters:\n * \n * cell - <mxCell> that should be checked.\n */\nmxGraph.prototype.isEditing = function(cell)\n{\n\tif (this.cellEditor != null)\n\t{\n\t\tvar editingCell = this.cellEditor.getEditingCell();\n\t\t\n\t\treturn (cell == null) ? editingCell != null : cell == editingCell;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: isAutoSizeCell\n * \n * Returns true if the size of the given cell should automatically be\n * updated after a change of the label. This implementation returns\n * <autoSizeCells> or checks if the cell style does specify\n * <mxConstants.STYLE_AUTOSIZE> to be 1.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be resized.\n */\nmxGraph.prototype.isAutoSizeCell = function(cell)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.isAutoSizeCells() || style[mxConstants.STYLE_AUTOSIZE] == 1;\n};\n\n/**\n * Function: isAutoSizeCells\n * \n * Returns <autoSizeCells>.\n */\nmxGraph.prototype.isAutoSizeCells = function()\n{\n\treturn this.autoSizeCells;\n};\n\n/**\n * Function: setAutoSizeCells\n * \n * Specifies if cell sizes should be automatically updated after a label\n * change. This implementation sets <autoSizeCells> to the given parameter.\n * To update the size of cells when the cells are added, set\n * <autoSizeCellsOnAdd> to true.\n * \n * Parameters:\n * \n * value - Boolean indicating if cells should be resized\n * automatically.\n */\nmxGraph.prototype.setAutoSizeCells = function(value)\n{\n\tthis.autoSizeCells = value;\n};\n\n/**\n * Function: isExtendParent\n * \n * Returns true if the parent of the given cell should be extended if the\n * child has been resized so that it overlaps the parent. This\n * implementation returns <isExtendParents> if the cell is not an edge.\n * \n * Parameters:\n * \n * cell - <mxCell> that has been resized.\n */\nmxGraph.prototype.isExtendParent = function(cell)\n{\n\treturn !this.getModel().isEdge(cell) && this.isExtendParents();\n};\n\n/**\n * Function: isExtendParents\n * \n * Returns <extendParents>.\n */\nmxGraph.prototype.isExtendParents = function()\n{\n\treturn this.extendParents;\n};\n\n/**\n * Function: setExtendParents\n * \n * Sets <extendParents>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParents>.\n */\nmxGraph.prototype.setExtendParents = function(value)\n{\n\tthis.extendParents = value;\n};\n\n/**\n * Function: isExtendParentsOnAdd\n * \n * Returns <extendParentsOnAdd>.\n */\nmxGraph.prototype.isExtendParentsOnAdd = function(cell)\n{\n\treturn this.extendParentsOnAdd;\n};\n\n/**\n * Function: setExtendParentsOnAdd\n * \n * Sets <extendParentsOnAdd>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnAdd = function(value)\n{\n\tthis.extendParentsOnAdd = value;\n};\n\n/**\n * Function: isExtendParentsOnMove\n * \n * Returns <extendParentsOnMove>.\n */\nmxGraph.prototype.isExtendParentsOnMove = function()\n{\n\treturn this.extendParentsOnMove;\n};\n\n/**\n * Function: setExtendParentsOnMove\n * \n * Sets <extendParentsOnMove>.\n * \n * Parameters:\n * \n * value - New boolean value for <extendParentsOnAdd>.\n */\nmxGraph.prototype.setExtendParentsOnMove = function(value)\n{\n\tthis.extendParentsOnMove = value;\n};\n\n/**\n * Function: isRecursiveResize\n * \n * Returns <recursiveResize>.\n * \n * Parameters:\n * \n * state - <mxCellState> that is being resized.\n */\nmxGraph.prototype.isRecursiveResize = function(state)\n{\n\treturn this.recursiveResize;\n};\n\n/**\n * Function: setRecursiveResize\n * \n * Sets <recursiveResize>.\n * \n * Parameters:\n * \n * value - New boolean value for <recursiveResize>.\n */\nmxGraph.prototype.setRecursiveResize = function(value)\n{\n\tthis.recursiveResize = value;\n};\n\n/**\n * Function: isConstrainChild\n * \n * Returns true if the given cell should be kept inside the bounds of its\n * parent according to the rules defined by <getOverlap> and\n * <isAllowOverlapParent>. This implementation returns false for all children\n * of edges and <isConstrainChildren> otherwise.\n * \n * Parameters:\n * \n * cell - <mxCell> that should be constrained.\n */\nmxGraph.prototype.isConstrainChild = function(cell)\n{\n\treturn this.isConstrainChildren() && !this.getModel().isEdge(this.getModel().getParent(cell));\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <constrainChildren>.\n */\nmxGraph.prototype.isConstrainChildren = function()\n{\n\treturn this.constrainChildren;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <constrainChildren>.\n */\nmxGraph.prototype.setConstrainChildren = function(value)\n{\n\tthis.constrainChildren = value;\n};\n\n/**\n * Function: isConstrainRelativeChildren\n * \n * Returns <constrainRelativeChildren>.\n */\nmxGraph.prototype.isConstrainRelativeChildren = function()\n{\n\treturn this.constrainRelativeChildren;\n};\n\n/**\n * Function: setConstrainRelativeChildren\n * \n * Sets <constrainRelativeChildren>.\n */\nmxGraph.prototype.setConstrainRelativeChildren = function(value)\n{\n\tthis.constrainRelativeChildren = value;\n};\n\n/**\n * Function: isConstrainChildren\n * \n * Returns <allowNegativeCoordinates>.\n */\nmxGraph.prototype.isAllowNegativeCoordinates = function()\n{\n\treturn this.allowNegativeCoordinates;\n};\n\n/**\n * Function: setConstrainChildren\n * \n * Sets <allowNegativeCoordinates>.\n */\nmxGraph.prototype.setAllowNegativeCoordinates = function(value)\n{\n\tthis.allowNegativeCoordinates = value;\n};\n\n/**\n * Function: getOverlap\n * \n * Returns a decimal number representing the amount of the width and height\n * of the given cell that is allowed to overlap its parent. A value of 0\n * means all children must stay inside the parent, 1 means the child is\n * allowed to be placed outside of the parent such that it touches one of\n * the parents sides. If <isAllowOverlapParent> returns false for the given\n * cell, then this method returns 0.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the overlap ratio should be returned.\n */\nmxGraph.prototype.getOverlap = function(cell)\n{\n\treturn (this.isAllowOverlapParent(cell)) ? this.defaultOverlap : 0;\n};\n\t\n/**\n * Function: isAllowOverlapParent\n * \n * Returns true if the given cell is allowed to be placed outside of the\n * parents area.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the child to be checked.\n */\nmxGraph.prototype.isAllowOverlapParent = function(cell)\n{\n\treturn false;\n};\n\n/**\n * Function: getFoldableCells\n * \n * Returns the cells which are movable in the given array of cells.\n */\nmxGraph.prototype.getFoldableCells = function(cells, collapse)\n{\n\treturn this.model.filterCells(cells, mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.isCellFoldable(cell, collapse);\n\t}));\n};\n\n/**\n * Function: isCellFoldable\n * \n * Returns true if the given cell is foldable. This implementation\n * returns true if the cell has at least one child and its style\n * does not specify <mxConstants.STYLE_FOLDABLE> to be 0.\n * \n * Parameters:\n * \n * cell - <mxCell> whose foldable state should be returned.\n */\nmxGraph.prototype.isCellFoldable = function(cell, collapse)\n{\n\tvar state = this.view.getState(cell);\n\tvar style = (state != null) ? state.style : this.getCellStyle(cell);\n\t\n\treturn this.model.getChildCount(cell) > 0 && style[mxConstants.STYLE_FOLDABLE] != 0;\n};\n\n/**\n * Function: isValidDropTarget\n *\n * Returns true if the given cell is a valid drop target for the specified\n * cells. If <splitEnabled> is true then this returns <isSplitTarget> for\n * the given arguments else it returns true if the cell is not collapsed\n * and its child count is greater than 0.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the possible drop target.\n * cells - <mxCells> that should be dropped into the target.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isValidDropTarget = function(cell, cells, evt)\n{\n\treturn cell != null && ((this.isSplitEnabled() &&\n\t\tthis.isSplitTarget(cell, cells, evt)) || (!this.model.isEdge(cell) &&\n\t\t(this.isSwimlane(cell) || (this.model.getChildCount(cell) > 0 &&\n\t\t!this.isCellCollapsed(cell)))));\n};\n\n/**\n * Function: isSplitTarget\n *\n * Returns true if the given edge may be splitted into two edges with the\n * given cell as a new terminal between the two.\n * \n * Parameters:\n * \n * target - <mxCell> that represents the edge to be splitted.\n * cells - <mxCells> that should split the edge.\n * evt - Mouseevent that triggered the invocation.\n */\nmxGraph.prototype.isSplitTarget = function(target, cells, evt)\n{\n\tif (this.model.isEdge(target) && cells != null && cells.length == 1 &&\n\t\tthis.isCellConnectable(cells[0]) && this.getEdgeValidationError(target,\n\t\t\tthis.model.getTerminal(target, true), cells[0]) == null)\n\t{\n\t\tvar src = this.model.getTerminal(target, true);\n\t\tvar trg = this.model.getTerminal(target, false);\n\n\t\treturn (!this.model.isAncestor(cells[0], src) &&\n\t\t\t\t!this.model.isAncestor(cells[0], trg));\n\t}\n\n\treturn false;\n};\n\n/**\n * Function: getDropTarget\n * \n * Returns the given cell if it is a drop target for the given cells or the\n * nearest ancestor that may be used as a drop target for the given cells.\n * If the given array contains a swimlane and <swimlaneNesting> is false\n * then this always returns null. If no cell is given, then the bottommost\n * swimlane at the location of the given event is returned.\n * \n * This function should only be used if <isDropEnabled> returns true.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> which are to be dropped onto the target.\n * evt - Mouseevent for the drag and drop.\n * cell - <mxCell> that is under the mousepointer.\n * clone - Optional boolean to indicate of cells will be cloned.\n */\nmxGraph.prototype.getDropTarget = function(cells, evt, cell, clone)\n{\n\tif (!this.isSwimlaneNesting())\n\t{\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (this.isSwimlane(cells[i]))\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n\n\tvar pt = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\tpt.x -= this.panDx;\n\tpt.y -= this.panDy;\n\tvar swimlane = this.getSwimlaneAt(pt.x, pt.y);\n\t\n\tif (cell == null)\n\t{\n\t\tcell = swimlane;\n\t}\n\telse if (swimlane != null)\n\t{\n\t\t// Checks if the cell is an ancestor of the swimlane\n\t\t// under the mouse and uses the swimlane in that case\n\t\tvar tmp = this.model.getParent(swimlane);\n\t\t\n\t\twhile (tmp != null && this.isSwimlane(tmp) && tmp != cell)\n\t\t{\n\t\t\ttmp = this.model.getParent(tmp);\n\t\t}\n\t\t\n\t\tif (tmp == cell)\n\t\t{\n\t\t\tcell = swimlane;\n\t\t}\n\t}\n\t\n\twhile (cell != null && !this.isValidDropTarget(cell, cells, evt) &&\n\t\t!this.model.isLayer(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\t// Checks if parent is dropped into child if not cloning\n\tif (clone == null || !clone)\n\t{\n\t\tvar parent = cell;\n\t\t\n\t\twhile (parent != null && mxUtils.indexOf(cells, parent) < 0)\n\t\t{\n\t\t\tparent = this.model.getParent(parent);\n\t\t}\n\t}\n\n\treturn (!this.model.isLayer(cell) && parent == null) ? cell : null;\n};\n\n/**\n * Group: Cell retrieval\n */\n\n/**\n * Function: getDefaultParent\n * \n * Returns <defaultParent> or <mxGraphView.currentRoot> or the first child\n * child of <mxGraphModel.root> if both are null. The value returned by\n * this function should be used as the parent for new cells (aka default\n * layer).\n */\nmxGraph.prototype.getDefaultParent = function()\n{\n\tvar parent = this.getCurrentRoot();\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.defaultParent;\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tvar root = this.model.getRoot();\n\t\t\tparent = this.model.getChildAt(root, 0);\n\t\t}\n\t}\n\t\n\treturn parent;\n};\n\n/**\n * Function: setDefaultParent\n * \n * Sets the <defaultParent> to the given cell. Set this to null to return\n * the first child of the root in getDefaultParent.\n */\nmxGraph.prototype.setDefaultParent = function(cell)\n{\n\tthis.defaultParent = cell;\n};\n\n/**\n * Function: getSwimlane\n * \n * Returns the nearest ancestor of the given cell which is a swimlane, or\n * the given cell, if it is itself a swimlane.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the ancestor swimlane should be returned.\n */\nmxGraph.prototype.getSwimlane = function(cell)\n{\n\twhile (cell != null && !this.isSwimlane(cell))\n\t{\n\t\tcell = this.model.getParent(cell);\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: getSwimlaneAt\n * \n * Returns the bottom-most swimlane that intersects the given point (x, y)\n * in the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.getSwimlaneAt = function (x, y, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getSwimlaneAt(x, y, child);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isSwimlane(child))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn child;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: getCellAt\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy starting at the given parent. This will also return\n * swimlanes if the given location intersects the content area of the\n * swimlane. If this is not desired, then the <hitsSwimlaneContent> may be\n * used if the returned cell is a swimlane to determine if the location\n * is inside the content area or on the actual title of the swimlane.\n * \n * Parameters:\n * \n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * vertices - Optional boolean indicating if vertices should be returned.\n * Default is true.\n * edges - Optional boolean indicating if edges should be returned. Default\n * is true.\n * ignoreFn - Optional function that returns true if cell should be ignored.\n * The function is passed the cell state and the x and y parameter.\n */\nmxGraph.prototype.getCellAt = function(x, y, parent, vertices, edges, ignoreFn)\n{\n\tvertices = (vertices != null) ? vertices : true;\n\tedges = (edges != null) ? edges : true;\n\n\tif (parent == null)\n\t{\n\t\tparent = this.getCurrentRoot();\n\t\t\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getModel().getRoot();\n\t\t}\n\t}\n\n\tif (parent != null)\n\t{\n\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\n\t\tfor (var i = childCount - 1; i >= 0; i--)\n\t\t{\n\t\t\tvar cell = this.model.getChildAt(parent, i);\n\t\t\tvar result = this.getCellAt(x, y, cell, vertices, edges, ignoreFn);\n\t\t\t\n\t\t\tif (result != null)\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\telse if (this.isCellVisible(cell) && (edges && this.model.isEdge(cell) ||\n\t\t\t\tvertices && this.model.isVertex(cell)))\n\t\t\t{\n\t\t\t\tvar state = this.view.getState(cell);\n\n\t\t\t\tif (state != null && (ignoreFn == null || !ignoreFn(state, x, y)) &&\n\t\t\t\t\tthis.intersects(state, x, y))\n\t\t\t\t{\n\t\t\t\t\treturn cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: intersects\n * \n * Returns the bottom-most cell that intersects the given point (x, y) in\n * the cell hierarchy that starts at the given parent.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the cell state.\n * x - X-coordinate of the location to be checked.\n * y - Y-coordinate of the location to be checked.\n */\nmxGraph.prototype.intersects = function(state, x, y)\n{\n\tif (state != null)\n\t{\n\t\tvar pts = state.absolutePoints;\n\n\t\tif (pts != null)\n\t\t{\n\t\t\tvar t2 = this.tolerance * this.tolerance;\n\t\t\tvar pt = pts[0];\n\t\t\t\n\t\t\tfor (var i = 1; i < pts.length; i++)\n\t\t\t{\n\t\t\t\tvar next = pts[i];\n\t\t\t\tvar dist = mxUtils.ptSegDistSq(pt.x, pt.y, next.x, next.y, x, y);\n\t\t\t\t\n\t\t\t\tif (dist <= t2)\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tpt = next;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(x, y), cos, sin, cx);\n\t\t\t\tx = pt.x;\n\t\t\t\ty = pt.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (mxUtils.contains(state, x, y))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: hitsSwimlaneContent\n * \n * Returns true if the given coordinate pair is inside the content\n * are of the given swimlane.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that specifies the swimlane.\n * x - X-coordinate of the mouse event.\n * y - Y-coordinate of the mouse event.\n */\nmxGraph.prototype.hitsSwimlaneContent = function(swimlane, x, y)\n{\n\tvar state = this.getView().getState(swimlane);\n\tvar size = this.getStartSize(swimlane);\n\t\n\tif (state != null)\n\t{\n\t\tvar scale = this.getView().getScale();\n\t\tx -= state.x;\n\t\ty -= state.y;\n\t\t\n\t\tif (size.width > 0 && x > 0 && x > size.width * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse if (size.height > 0 && y > 0 && y > size.height * scale)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: getChildVertices\n * \n * Returns the visible child vertices of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n */\nmxGraph.prototype.getChildVertices = function(parent)\n{\n\treturn this.getChildCells(parent, true, false);\n};\n\t\n/**\n * Function: getChildEdges\n * \n * Returns the visible child edges of the given parent.\n * \n * Parameters:\n * \n * parent - <mxCell> whose child vertices should be returned.\n */\nmxGraph.prototype.getChildEdges = function(parent)\n{\n\treturn this.getChildCells(parent, false, true);\n};\n\n/**\n * Function: getChildCells\n * \n * Returns the visible child vertices or edges in the given parent. If\n * vertices and edges is false, then all children are returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be returned.\n * vertices - Optional boolean that specifies if child vertices should\n * be returned. Default is false.\n * edges - Optional boolean that specifies if child edges should\n * be returned. Default is false.\n */\nmxGraph.prototype.getChildCells = function(parent, vertices, edges)\n{\n\tparent = (parent != null) ? parent : this.getDefaultParent();\n\tvertices = (vertices != null) ? vertices : false;\n\tedges = (edges != null) ? edges : false;\n\n\tvar cells = this.model.getChildCells(parent, vertices, edges);\n\tvar result = [];\n\n\t// Filters out the non-visible child cells\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tif (this.isCellVisible(cells[i]))\n\t\t{\n\t\t\tresult.push(cells[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\t\n/**\n * Function: getConnections\n * \n * Returns all visible edges connected to the given cell without loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose connections should be returned.\n * parent - Optional parent of the opposite end for a connection to be\n * returned.\n */\nmxGraph.prototype.getConnections = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, true, false);\n};\n\t\n/**\n * Function: getIncomingEdges\n * \n * Returns the visible incoming edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose incoming edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getIncomingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, true, false, false);\n};\n\t\n/**\n * Function: getOutgoingEdges\n * \n * Returns the visible outgoing edges for the given cell. If the optional\n * parent argument is specified, then only child edges of the given parent\n * are returned.\n * \n * Parameters:\n * \n * cell - <mxCell> whose outgoing edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n */\nmxGraph.prototype.getOutgoingEdges = function(cell, parent)\n{\n\treturn this.getEdges(cell, parent, false, true, false);\n};\n\t\n/**\n * Function: getEdges\n * \n * Returns the incoming and/or outgoing edges for the given cell.\n * If the optional parent argument is specified, then only edges are returned\n * where the opposite is in the given parent cell. If at least one of incoming\n * or outgoing is true, then loops are ignored, if both are false, then all\n * edges connected to the given cell are returned including loops.\n * \n * Parameters:\n * \n * cell - <mxCell> whose edges should be returned.\n * parent - Optional parent of the opposite end for an edge to be\n * returned.\n * incoming - Optional boolean that specifies if incoming edges should\n * be included in the result. Default is true.\n * outgoing - Optional boolean that specifies if outgoing edges should\n * be included in the result. Default is true.\n * includeLoops - Optional boolean that specifies if loops should be\n * included in the result. Default is true.\n * recurse - Optional boolean the specifies if the parent specified only \n * need be an ancestral parent, true, or the direct parent, false.\n * Default is false\n */\nmxGraph.prototype.getEdges = function(cell, parent, incoming, outgoing, includeLoops, recurse)\n{\n\tincoming = (incoming != null) ? incoming : true;\n\toutgoing = (outgoing != null) ? outgoing : true;\n\tincludeLoops = (includeLoops != null) ? includeLoops : true;\n\trecurse = (recurse != null) ? recurse : false;\n\t\n\tvar edges = [];\n\tvar isCollapsed = this.isCellCollapsed(cell);\n\tvar childCount = this.model.getChildCount(cell);\n\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = this.model.getChildAt(cell, i);\n\n\t\tif (isCollapsed || !this.isCellVisible(child))\n\t\t{\n\t\t\tedges = edges.concat(this.model.getEdges(child, incoming, outgoing));\n\t\t}\n\t}\n\n\tedges = edges.concat(this.model.getEdges(cell, incoming, outgoing));\n\tvar result = [];\n\t\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((includeLoops && source == target) || ((source != target) && ((incoming &&\n\t\t\ttarget == cell && (parent == null || this.isValidAncestor(source, parent, recurse))) ||\n\t\t\t(outgoing && source == cell && (parent == null ||\n\t\t\t\t\tthis.isValidAncestor(target, parent, recurse))))))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isValidAncestor\n * \n * Returns whether or not the specified parent is a valid\n * ancestor of the specified cell, either direct or indirectly\n * based on whether ancestor recursion is enabled.\n * \n * Parameters:\n * \n * cell - <mxCell> the possible child cell\n * parent - <mxCell> the possible parent cell\n * recurse - boolean whether or not to recurse the child ancestors\n */\nmxGraph.prototype.isValidAncestor = function(cell, parent, recurse)\n{\n\treturn (recurse ? this.model.isAncestor(parent, cell) : this.model\n\t\t\t.getParent(cell) == parent);\n};\n\n/**\n * Function: getOpposites\n * \n * Returns all distinct visible opposite cells for the specified terminal\n * on the given edges.\n * \n * Parameters:\n * \n * edges - Array of <mxCells> that contains the edges whose opposite\n * terminals should be returned.\n * terminal - Terminal that specifies the end whose opposite should be\n * returned.\n * source - Optional boolean that specifies if source terminals should be\n * included in the result. Default is true.\n * targets - Optional boolean that specifies if targer terminals should be\n * included in the result. Default is true.\n */\nmxGraph.prototype.getOpposites = function(edges, terminal, sources, targets)\n{\n\tsources = (sources != null) ? sources : true;\n\ttargets = (targets != null) ? targets : true;\n\t\n\tvar terminals = [];\n\t\n\t// Fast lookup to avoid duplicates in terminals array\n\tvar dict = new mxDictionary();\n\t\n\tif (edges != null)\n\t{\n\t\tfor (var i = 0; i < edges.length; i++)\n\t\t{\n\t\t\tvar state = this.view.getState(edges[i]);\n\t\t\t\n\t\t\tvar source = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\t\tvar target = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\t\t\t\n\t\t\t// Checks if the terminal is the source of the edge and if the\n\t\t\t// target should be stored in the result\n\t\t\tif (source == terminal && target != null && target != terminal && targets)\n\t\t\t{\n\t\t\t\tif (!dict.get(target))\n\t\t\t\t{\n\t\t\t\t\tdict.put(target, true);\n\t\t\t\t\tterminals.push(target);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Checks if the terminal is the taget of the edge and if the\n\t\t\t// source should be stored in the result\n\t\t\telse if (target == terminal && source != null && source != terminal && sources)\n\t\t\t{\n\t\t\t\tif (!dict.get(source))\n\t\t\t\t{\n\t\t\t\t\tdict.put(source, true);\n\t\t\t\t\tterminals.push(source);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn terminals;\n};\n\n/**\n * Function: getEdgesBetween\n * \n * Returns the edges between the given source and target. This takes into\n * account collapsed and invisible cells and returns the connected edges\n * as displayed on the screen.\n * \n * Parameters:\n * \n * source -\n * target -\n * directed -\n */\nmxGraph.prototype.getEdgesBetween = function(source, target, directed)\n{\n\tdirected = (directed != null) ? directed : false;\n\tvar edges = this.getEdges(source);\n\tvar result = [];\n\n\t// Checks if the edge is connected to the correct\n\t// cell and returns the first match\n\tfor (var i = 0; i < edges.length; i++)\n\t{\n\t\tvar state = this.view.getState(edges[i]);\n\t\t\n\t\tvar src = (state != null) ? state.getVisibleTerminal(true) : this.view.getVisibleTerminal(edges[i], true);\n\t\tvar trg = (state != null) ? state.getVisibleTerminal(false) : this.view.getVisibleTerminal(edges[i], false);\n\n\t\tif ((src == source && trg == target) || (!directed && src == target && trg == source))\n\t\t{\n\t\t\tresult.push(edges[i]);\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns an <mxPoint> representing the given event in the unscaled,\n * non-translated coordinate space of <container> and applies the grid.\n * \n * Parameters:\n * \n * evt - Mousevent that contains the mouse pointer location.\n * addOffset - Optional boolean that specifies if the position should be\n * offset by half of the <gridSize>. Default is true.\n */\n mxGraph.prototype.getPointForEvent = function(evt, addOffset)\n {\n\tvar p = mxUtils.convertPoint(this.container,\n\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\n\tvar s = this.view.scale;\n\tvar tr = this.view.translate;\n\tvar off = (addOffset != false) ? this.gridSize / 2 : 0;\n\t\n\tp.x = this.snap(p.x / s - tr.x - off);\n\tp.y = this.snap(p.y / s - tr.y - off);\n\t\n\treturn p;\n };\n\n/**\n * Function: getCells\n * \n * Returns the child vertices and edges of the given parent that are contained\n * in the given rectangle. The result is added to the optional result array,\n * which is returned. If no result array is specified then a new array is\n * created and returned.\n * \n * Parameters:\n * \n * x - X-coordinate of the rectangle.\n * y - Y-coordinate of the rectangle.\n * width - Width of the rectangle.\n * height - Height of the rectangle.\n * parent - <mxCell> that should be used as the root of the recursion.\n * Default is current root of the view or the root of the model.\n * result - Optional array to store the result in.\n */\nmxGraph.prototype.getCells = function(x, y, width, height, parent, result)\n{\n\tresult = (result != null) ? result : [];\n\t\n\tif (width > 0 || height > 0)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar right = x + width;\n\t\tvar bottom = y + height;\n\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getCurrentRoot();\n\t\t\t\n\t\t\tif (parent == null)\n\t\t\t{\n\t\t\t\tparent = model.getRoot();\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(cell);\n\t\t\t\t\n\t\t\t\tif (state != null && this.isCellVisible(cell))\n\t\t\t\t{\n\t\t\t\t\tvar deg = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0;\n\t\t\t\t\tvar box = state;\n\t\t\t\t\t\n\t\t\t\t\tif (deg != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tbox = mxUtils.getBoundingBox(box, deg);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif ((model.isEdge(cell) || model.isVertex(cell)) &&\n\t\t\t\t\t\tbox.x >= x && box.y + box.height <= bottom &&\n\t\t\t\t\t\tbox.y >= y && box.x + box.width <= right)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(cell);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.getCells(x, y, width, height, cell, result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsBeyond\n * \n * Returns the children of the given parent that are contained in the\n * halfpane from the given point (x0, y0) rightwards or downwards\n * depending on rightHalfpane and bottomHalfpane.\n * \n * Parameters:\n * \n * x0 - X-coordinate of the origin.\n * y0 - Y-coordinate of the origin.\n * parent - Optional <mxCell> whose children should be checked. Default is\n * <defaultParent>.\n * rightHalfpane - Boolean indicating if the cells in the right halfpane\n * from the origin should be returned.\n * bottomHalfpane - Boolean indicating if the cells in the bottom halfpane\n * from the origin should be returned.\n */\nmxGraph.prototype.getCellsBeyond = function(x0, y0, parent, rightHalfpane, bottomHalfpane)\n{\n\tvar result = [];\n\t\n\tif (rightHalfpane || bottomHalfpane)\n\t{\n\t\tif (parent == null)\n\t\t{\n\t\t\tparent = this.getDefaultParent();\n\t\t}\n\t\t\n\t\tif (parent != null)\n\t\t{\n\t\t\tvar childCount = this.model.getChildCount(parent);\n\t\t\t\n\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t{\n\t\t\t\tvar child = this.model.getChildAt(parent, i);\n\t\t\t\tvar state = this.view.getState(child);\n\t\t\t\t\n\t\t\t\tif (this.isCellVisible(child) && state != null)\n\t\t\t\t{\n\t\t\t\t\tif ((!rightHalfpane || state.x >= x0) &&\n\t\t\t\t\t\t(!bottomHalfpane || state.y >= y0))\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.push(child);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: findTreeRoots\n * \n * Returns all children in the given parent which do not have incoming\n * edges. If the result is empty then the with the greatest difference\n * between incoming and outgoing edges is returned.\n * \n * Parameters:\n * \n * parent - <mxCell> whose children should be checked.\n * isolate - Optional boolean that specifies if edges should be ignored if\n * the opposite end is not a child of the given parent cell. Default is\n * false.\n * invert - Optional boolean that specifies if outgoing or incoming edges\n * should be counted for a tree root. If false then outgoing edges will be\n * counted. Default is false.\n */\nmxGraph.prototype.findTreeRoots = function(parent, isolate, invert)\n{\n\tisolate = (isolate != null) ? isolate : false;\n\tinvert = (invert != null) ? invert : false;\n\tvar roots = [];\n\t\n\tif (parent != null)\n\t{\n\t\tvar model = this.getModel();\n\t\tvar childCount = model.getChildCount(parent);\n\t\tvar best = null;\n\t\tvar maxDiff = 0;\n\t\t\n\t\tfor (var i=0; i<childCount; i++)\n\t\t{\n\t\t\tvar cell = model.getChildAt(parent, i);\n\t\t\t\n\t\t\tif (this.model.isVertex(cell) && this.isCellVisible(cell))\n\t\t\t{\n\t\t\t\tvar conns = this.getConnections(cell, (isolate) ? parent : null);\n\t\t\t\tvar fanOut = 0;\n\t\t\t\tvar fanIn = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < conns.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar src = this.view.getVisibleTerminal(conns[j], true);\n\n                    if (src == cell)\n                    {\n                        fanOut++;\n                    }\n                    else\n                    {\n                        fanIn++;\n                    }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((invert && fanOut == 0 && fanIn > 0) ||\n\t\t\t\t\t(!invert && fanIn == 0 && fanOut > 0))\n\t\t\t\t{\n\t\t\t\t\troots.push(cell);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar diff = (invert) ? fanIn - fanOut : fanOut - fanIn;\n\t\t\t\t\n\t\t\t\tif (diff > maxDiff)\n\t\t\t\t{\n\t\t\t\t\tmaxDiff = diff;\n\t\t\t\t\tbest = cell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (roots.length == 0 && best != null)\n\t\t{\n\t\t\troots.push(best);\n\t\t}\n\t}\n\t\n\treturn roots;\n};\n\n/**\n * Function: traverse\n * \n * Traverses the (directed) graph invoking the given function for each\n * visited vertex and edge. The function is invoked with the current vertex\n * and the incoming edge as a parameter. This implementation makes sure\n * each vertex is only visited once. The function may return false if the\n * traversal should stop at the given vertex.\n * \n * Example:\n * \n * (code)\n * mxLog.show();\n * var cell = graph.getSelectionCell();\n * graph.traverse(cell, false, function(vertex, edge)\n * {\n *   mxLog.debug(graph.getLabel(vertex));\n * });\n * (end)\n * \n * Parameters:\n * \n * vertex - <mxCell> that represents the vertex where the traversal starts.\n * directed - Optional boolean indicating if edges should only be traversed\n * from source to target. Default is true.\n * func - Visitor function that takes the current vertex and the incoming\n * edge as arguments. The traversal stops if the function returns false.\n * edge - Optional <mxCell> that represents the incoming edge. This is\n * null for the first step of the traversal.\n * visited - Optional <mxDictionary> from cells to true for the visited cells.\n * inverse - Optional boolean to traverse in inverse direction. Default is false.\n * This is ignored if directed is false.\n */\nmxGraph.prototype.traverse = function(vertex, directed, func, edge, visited, inverse)\n{\n\tif (func != null && vertex != null)\n\t{\n\t\tdirected = (directed != null) ? directed : true;\n\t\tinverse = (inverse != null) ? inverse : false;\n\t\tvisited = visited || new mxDictionary();\n\t\t\n\t\tif (!visited.get(vertex))\n\t\t{\n\t\t\tvisited.put(vertex, true);\n\t\t\tvar result = func(vertex, edge);\n\t\t\t\n\t\t\tif (result == null || result)\n\t\t\t{\n\t\t\t\tvar edgeCount = this.model.getEdgeCount(vertex);\n\t\t\t\t\n\t\t\t\tif (edgeCount > 0)\n\t\t\t\t{\n\t\t\t\t\tfor (var i = 0; i < edgeCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar e = this.model.getEdgeAt(vertex, i);\n\t\t\t\t\t\tvar isSource = this.model.getTerminal(e, true) == vertex;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (!directed || (!inverse == isSource))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar next = this.model.getTerminal(e, !isSource);\n\t\t\t\t\t\t\tthis.traverse(next, directed, func, e, visited, inverse);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Group: Selection\n */\n\n/**\n * Function: isCellSelected\n * \n * Returns true if the given cell is selected.\n * \n * Parameters:\n * \n * cell - <mxCell> for which the selection state should be returned.\n */\nmxGraph.prototype.isCellSelected = function(cell)\n{\n\treturn this.getSelectionModel().isSelected(cell);\n};\n\n/**\n * Function: isSelectionEmpty\n * \n * Returns true if the selection is empty.\n */\nmxGraph.prototype.isSelectionEmpty = function()\n{\n\treturn this.getSelectionModel().isEmpty();\n};\n\n/**\n * Function: clearSelection\n * \n * Clears the selection using <mxGraphSelectionModel.clear>.\n */\nmxGraph.prototype.clearSelection = function()\n{\n\treturn this.getSelectionModel().clear();\n};\n\n/**\n * Function: getSelectionCount\n * \n * Returns the number of selected cells.\n */\nmxGraph.prototype.getSelectionCount = function()\n{\n\treturn this.getSelectionModel().cells.length;\n};\n\t\n/**\n * Function: getSelectionCell\n * \n * Returns the first cell from the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCell = function()\n{\n\treturn this.getSelectionModel().cells[0];\n};\n\n/**\n * Function: getSelectionCells\n * \n * Returns the array of selected <mxCells>.\n */\nmxGraph.prototype.getSelectionCells = function()\n{\n\treturn this.getSelectionModel().cells.slice();\n};\n\n/**\n * Function: setSelectionCell\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n */\nmxGraph.prototype.setSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().setCell(cell);\n};\n\n/**\n * Function: setSelectionCells\n * \n * Sets the selection cell.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n */\nmxGraph.prototype.setSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().setCells(cells);\n};\n\n/**\n * Function: addSelectionCell\n * \n * Adds the given cell to the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be add to the selection.\n */\nmxGraph.prototype.addSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().addCell(cell);\n};\n\n/**\n * Function: addSelectionCells\n * \n * Adds the given cells to the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be added to the selection.\n */\nmxGraph.prototype.addSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().addCells(cells);\n};\n\n/**\n * Function: removeSelectionCell\n * \n * Removes the given cell from the selection.\n * \n * Parameters:\n * \n * cell - <mxCell> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCell = function(cell)\n{\n\tthis.getSelectionModel().removeCell(cell);\n};\n\n/**\n * Function: removeSelectionCells\n * \n * Removes the given cells from the selection.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be removed from the selection.\n */\nmxGraph.prototype.removeSelectionCells = function(cells)\n{\n\tthis.getSelectionModel().removeCells(cells);\n};\n\n/**\n * Function: selectRegion\n * \n * Selects and returns the cells inside the given rectangle for the\n * specified event.\n * \n * Parameters:\n * \n * rect - <mxRectangle> that represents the region to be selected.\n * evt - Mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectRegion = function(rect, evt)\n{\n\tvar cells = this.getCells(rect.x, rect.y, rect.width, rect.height);\n\tthis.selectCellsForEvent(cells, evt);\n\t\n\treturn cells;\n};\n\n/**\n * Function: selectNextCell\n * \n * Selects the next cell.\n */\nmxGraph.prototype.selectNextCell = function()\n{\n\tthis.selectCell(true);\n};\n\n/**\n * Function: selectPreviousCell\n * \n * Selects the previous cell.\n */\nmxGraph.prototype.selectPreviousCell = function()\n{\n\tthis.selectCell();\n};\n\n/**\n * Function: selectParentCell\n * \n * Selects the parent cell.\n */\nmxGraph.prototype.selectParentCell = function()\n{\n\tthis.selectCell(false, true);\n};\n\n/**\n * Function: selectChildCell\n * \n * Selects the first child cell.\n */\nmxGraph.prototype.selectChildCell = function()\n{\n\tthis.selectCell(false, false, true);\n};\n\n/**\n * Function: selectCell\n * \n * Selects the next, parent, first child or previous cell, if all arguments\n * are false.\n * \n * Parameters:\n * \n * isNext - Boolean indicating if the next cell should be selected.\n * isParent - Boolean indicating if the parent cell should be selected.\n * isChild - Boolean indicating if the first child cell should be selected.\n */\nmxGraph.prototype.selectCell = function(isNext, isParent, isChild)\n{\n\tvar sel = this.selectionModel;\n\tvar cell = (sel.cells.length > 0) ? sel.cells[0] : null;\n\t\n\tif (sel.cells.length > 1)\n\t{\n\t\tsel.clear();\n\t}\n\t\n\tvar parent = (cell != null) ?\n\t\tthis.model.getParent(cell) :\n\t\tthis.getDefaultParent();\n\t\n\tvar childCount = this.model.getChildCount(parent);\n\t\n\tif (cell == null && childCount > 0)\n\t{\n\t\tvar child = this.model.getChildAt(parent, 0);\n\t\tthis.setSelectionCell(child);\n\t}\n\telse if ((cell == null || isParent) &&\n\t\tthis.view.getState(parent) != null &&\n\t\tthis.model.getGeometry(parent) != null)\n\t{\n\t\tif (this.getCurrentRoot() != parent)\n\t\t{\n\t\t\tthis.setSelectionCell(parent);\n\t\t}\n\t}\n\telse if (cell != null && isChild)\n\t{\n\t\tvar tmp = this.model.getChildCount(cell);\n\t\t\n\t\tif (tmp > 0)\n\t\t{\n\t\t\tvar child = this.model.getChildAt(cell, 0);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n\telse if (childCount > 0)\n\t{\n\t\tvar i = parent.getIndex(cell);\n\t\t\n\t\tif (isNext)\n\t\t{\n\t\t\ti++;\n\t\t\tvar child = this.model.getChildAt(parent, i % childCount);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti--;\n\t\t\tvar index =  (i < 0) ? childCount - 1 : i;\n\t\t\tvar child = this.model.getChildAt(parent, index);\n\t\t\tthis.setSelectionCell(child);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectAll\n * \n * Selects all children of the given parent cell or the children of the\n * default parent if no parent is specified. To select leaf vertices and/or\n * edges use <selectCells>.\n * \n * Parameters:\n * \n * parent - Optional <mxCell> whose children should be selected.\n * Default is <defaultParent>.\n * descendants - Optional boolean specifying whether all descendants should be\n * selected. Default is false.\n */\nmxGraph.prototype.selectAll = function(parent, descendants)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar cells = (descendants) ? this.model.filterDescendants(mxUtils.bind(this, function(cell)\n\t{\n\t\treturn cell != parent && this.view.getState(cell) != null;\n\t}), parent) : this.model.getChildren(parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectVertices = function(parent)\n{\n\tthis.selectCells(true, false, parent);\n};\n\n/**\n * Function: selectVertices\n * \n * Select all vertices inside the given parent or the default parent.\n */\nmxGraph.prototype.selectEdges = function(parent)\n{\n\tthis.selectCells(false, true, parent);\n};\n\n/**\n * Function: selectCells\n * \n * Selects all vertices and/or edges depending on the given boolean\n * arguments recursively, starting at the given parent or the default\n * parent if no parent is specified. Use <selectAll> to select all cells.\n * For vertices, only cells with no children are selected.\n * \n * Parameters:\n * \n * vertices - Boolean indicating if vertices should be selected.\n * edges - Boolean indicating if edges should be selected.\n * parent - Optional <mxCell> that acts as the root of the recursion.\n * Default is <defaultParent>.\n */\nmxGraph.prototype.selectCells = function(vertices, edges, parent)\n{\n\tparent = parent || this.getDefaultParent();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.view.getState(cell) != null &&\n\t\t\t((this.model.getChildCount(cell) == 0 && this.model.isVertex(cell) && vertices\n\t\t\t&& !this.model.isEdge(this.model.getParent(cell))) ||\n\t\t\t(this.model.isEdge(cell) && edges));\n\t});\n\t\n\tvar cells = this.model.filterDescendants(filter, parent);\n\t\n\tif (cells != null)\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Function: selectCellForEvent\n * \n * Selects the given cell by either adding it to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cell - <mxCell> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellForEvent = function(cell, evt)\n{\n\tvar isSelected = this.isCellSelected(cell);\n\t\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tif (isSelected)\n\t\t{\n\t\t\tthis.removeSelectionCell(cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.addSelectionCell(cell);\n\t\t}\n\t}\n\telse if (!isSelected || this.getSelectionCount() != 1)\n\t{\n\t\tthis.setSelectionCell(cell);\n\t}\n};\n\n/**\n * Function: selectCellsForEvent\n * \n * Selects the given cells by either adding them to the selection or\n * replacing the selection depending on whether the given mouse event is a\n * toggle event.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> to be selected.\n * evt - Optional mouseevent that triggered the selection.\n */\nmxGraph.prototype.selectCellsForEvent = function(cells, evt)\n{\n\tif (this.isToggleEvent(evt))\n\t{\n\t\tthis.addSelectionCells(cells);\n\t}\n\telse\n\t{\n\t\tthis.setSelectionCells(cells);\n\t}\n};\n\n/**\n * Group: Selection state\n */\n\n/**\n * Function: createHandler\n * \n * Creates a new handler for the given cell state. This implementation\n * returns a new <mxEdgeHandler> of the corresponding cell is an edge,\n * otherwise it returns an <mxVertexHandler>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose handler should be created.\n */\nmxGraph.prototype.createHandler = function(state)\n{\n\tvar result = null;\n\t\n\tif (state != null)\n\t{\n\t\tif (this.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar source = state.getVisibleTerminalState(true);\n\t\t\tvar target = state.getVisibleTerminalState(false);\n\t\t\tvar geo = this.getCellGeometry(state.cell);\n\t\t\t\n\t\t\tvar edgeStyle = this.view.getEdgeStyle(state, (geo != null) ? geo.points : null, source, target);\n\t\t\tresult = this.createEdgeHandler(state, edgeStyle);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = this.createVertexHandler(state);\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createVertexHandler\n * \n * Hooks to create a new <mxVertexHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createVertexHandler = function(state)\n{\n\treturn new mxVertexHandler(state);\n};\n\n/**\n * Function: createEdgeHandler\n * \n * Hooks to create a new <mxEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeHandler = function(state, edgeStyle)\n{\n\tvar result = null;\n\t\n\tif (edgeStyle == mxEdgeStyle.Loop ||\n\t\tedgeStyle == mxEdgeStyle.ElbowConnector ||\n\t\tedgeStyle == mxEdgeStyle.SideToSide ||\n\t\tedgeStyle == mxEdgeStyle.TopToBottom)\n\t{\n\t\tresult = this.createElbowEdgeHandler(state);\n\t}\n\telse if (edgeStyle == mxEdgeStyle.SegmentConnector || \n\t\t\tedgeStyle == mxEdgeStyle.OrthConnector)\n\t{\n\t\tresult = this.createEdgeSegmentHandler(state);\n\t}\n\telse\n\t{\n\t\tresult = new mxEdgeHandler(state);\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createEdgeSegmentHandler\n * \n * Hooks to create a new <mxEdgeSegmentHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createEdgeSegmentHandler = function(state)\n{\n\treturn new mxEdgeSegmentHandler(state);\n};\n\n/**\n * Function: createElbowEdgeHandler\n * \n * Hooks to create a new <mxElbowEdgeHandler> for the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> to create the handler for.\n */\nmxGraph.prototype.createElbowEdgeHandler = function(state)\n{\n\treturn new mxElbowEdgeHandler(state);\n};\n\n/**\n * Group: Graph events\n */\n\n/**\n * Function: addMouseListener\n * \n * Adds a listener to the graph event dispatch loop. The listener\n * must implement the mouseDown, mouseMove and mouseUp methods\n * as shown in the <mxMouseEvent> class.\n * \n * Parameters:\n * \n * listener - Listener to be added to the graph event listeners.\n */\nmxGraph.prototype.addMouseListener = function(listener)\n{\n\tif (this.mouseListeners == null)\n\t{\n\t\tthis.mouseListeners = [];\n\t}\n\t\n\tthis.mouseListeners.push(listener);\n};\n\n/**\n * Function: removeMouseListener\n * \n * Removes the specified graph listener.\n * \n * Parameters:\n * \n * listener - Listener to be removed from the graph event listeners.\n */\nmxGraph.prototype.removeMouseListener = function(listener)\n{\n\tif (this.mouseListeners != null)\n\t{\n\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t{\n\t\t\tif (this.mouseListeners[i] == listener)\n\t\t\t{\n\t\t\t\tthis.mouseListeners.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: updateMouseEvent\n * \n * Sets the graphX and graphY properties if the given <mxMouseEvent> if\n * required and returned the event.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> to be updated.\n * evtName - Name of the mouse event.\n */\nmxGraph.prototype.updateMouseEvent = function(me, evtName)\n{\n\tif (me.graphX == null || me.graphY == null)\n\t{\n\t\tvar pt = mxUtils.convertPoint(this.container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x - this.panDx;\n\t\tme.graphY = pt.y - this.panDy;\n\t\t\n\t\t// Searches for rectangles using method if native hit detection is disabled on shape\n\t\tif (me.getCell() == null && this.isMouseDown && evtName == mxEvent.MOUSE_MOVE)\n\t\t{\n\t\t\tme.state = this.view.getState(this.getCellAt(pt.x, pt.y, null, null, null, function(state)\n\t\t\t{\n\t\t\t\treturn state.shape == null || state.shape.paintBackground != mxRectangleShape.prototype.paintBackground ||\n\t\t\t\t\tmxUtils.getValue(state.style, mxConstants.STYLE_POINTER_EVENTS, '1') == '1' ||\n\t\t\t\t\t(state.shape.fill != null && state.shape.fill != mxConstants.NONE);\n\t\t\t}));\n\t\t}\n\t}\n\t\n\treturn me;\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the state for the given touch event.\n */\nmxGraph.prototype.getStateForTouchEvent = function(evt)\n{\n\tvar x = mxEvent.getClientX(evt);\n\tvar y = mxEvent.getClientY(evt);\n\t\n\t// Dispatches the drop event to the graph which\n\t// consumes and executes the source function\n\tvar pt = mxUtils.convertPoint(this.container, x, y);\n\n\treturn this.view.getState(this.getCellAt(pt.x, pt.y));\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>.\n */\nmxGraph.prototype.isEventIgnored = function(evtName, me, sender)\n{\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\tvar result = false;\n\n\t// Drops events that are fired more than once\n\tif (me.getEvent() == this.lastEvent)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\t{\n\t\tthis.lastEvent = me.getEvent();\n\t}\n\n\t// Installs event listeners to capture the complete gesture from the event source\n\t// for non-MS touch events as a workaround for all events for the same geture being\n\t// fired from the event source even if that was removed from the DOM.\n\tif (this.eventSource != null && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tmxEvent.removeGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t\tthis.mouseMoveRedirect = null;\n\t\tthis.mouseUpRedirect = null;\n\t\tthis.eventSource = null;\n\t}\n\telse if (!mxClient.IS_GC && this.eventSource != null && me.getSource() != this.eventSource)\n\t{\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_TOUCH && evtName == mxEvent.MOUSE_DOWN && !mouseEvent && !mxEvent.isPenEvent(me.getEvent()))\n\t{\n\t\tthis.eventSource = me.getSource();\n\n\t\tthis.mouseMoveRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\tthis.mouseUpRedirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt, this.getStateForTouchEvent(evt)));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(this.eventSource, null, this.mouseMoveRedirect, this.mouseUpRedirect);\n\t}\n\n\t// Factored out the workarounds for FF to make it easier to override/remove\n\t// Note this method has side-effects!\n\tif (this.isSyntheticEventIgnored(evtName, me, sender))\n\t{\n\t\tresult = true;\n\t}\n\n\t// Never fires mouseUp/-Down for double clicks\n\tif (!mxEvent.isPopupTrigger(this.lastEvent) && evtName != mxEvent.MOUSE_MOVE && this.lastEvent.detail == 2)\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Filters out of sequence events or mixed event types during a gesture\n\tif (evtName == mxEvent.MOUSE_UP && this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = false;\n\t}\n\telse if (evtName == mxEvent.MOUSE_DOWN && !this.isMouseDown)\n\t{\n\t\tthis.isMouseDown = true;\n\t\tthis.isMouseTrigger = mouseEvent;\n\t}\n\t// Drops mouse events that are fired during touch gestures as a workaround for Webkit\n\t// and mouse events that are not in sync with the current internal button state\n\telse if (!result && (((!mxClient.IS_FF || evtName != mxEvent.MOUSE_MOVE) &&\n\t\tthis.isMouseDown && this.isMouseTrigger != mouseEvent) ||\n\t\t(evtName == mxEvent.MOUSE_DOWN && this.isMouseDown) ||\n\t\t(evtName == mxEvent.MOUSE_UP && !this.isMouseDown)))\n\t{\n\t\tresult = true;\n\t}\n\t\n\tif (!result && evtName == mxEvent.MOUSE_DOWN)\n\t{\n\t\tthis.lastMouseX = me.getX();\n\t\tthis.lastMouseY = me.getY();\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isSyntheticEventIgnored\n * \n * Hook for ignoring synthetic mouse events after touchend in Firefox.\n */\nmxGraph.prototype.isSyntheticEventIgnored = function(evtName, me, sender)\n{\n\tvar result = false;\n\tvar mouseEvent = mxEvent.isMouseEvent(me.getEvent());\n\t\n\t// LATER: This does not cover all possible cases that can go wrong in FF\n\tif (this.ignoreMouseEvents && mouseEvent && evtName != mxEvent.MOUSE_MOVE)\n\t{\n\t\tthis.ignoreMouseEvents = evtName != mxEvent.MOUSE_UP;\n\t\tresult = true;\n\t}\n\telse if (mxClient.IS_FF && !mouseEvent && evtName == mxEvent.MOUSE_UP)\n\t{\n\t\tthis.ignoreMouseEvents = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: isEventSourceIgnored\n * \n * Returns true if the event should be ignored in <fireMouseEvent>. This\n * implementation returns true for select, option and input (if not of type\n * checkbox, radio, button, submit or file) event sources if the event is not\n * a mouse event or a left mouse button press event.\n * \n * Parameters:\n * \n * evtName - The name of the event.\n * me - <mxMouseEvent> that should be ignored.\n */\nmxGraph.prototype.isEventSourceIgnored = function(evtName, me)\n{\n\tvar source = me.getSource();\n\tvar name = (source.nodeName != null) ? source.nodeName.toLowerCase() : '';\n\tvar candidate = !mxEvent.isMouseEvent(me.getEvent()) || mxEvent.isLeftMouseButton(me.getEvent());\n\t\n\treturn evtName == mxEvent.MOUSE_DOWN && candidate && (name == 'select' || name == 'option' ||\n\t\t(name == 'input' && source.type != 'checkbox' && source.type != 'radio' &&\n\t\tsource.type != 'button' && source.type != 'submit' && source.type != 'file'));\n};\n\n/**\n * Function: getEventState\n * \n * Returns the <mxCellState> to be used when firing the mouse event for the\n * given state. This implementation returns the given state.\n * \n * Parameters:\n * \n * <mxCellState> - State whose event source should be returned.\n */\nmxGraph.prototype.getEventState = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: fireMouseEvent\n * \n * Dispatches the given event in the graph event dispatch loop. Possible\n * event names are <mxEvent.MOUSE_DOWN>, <mxEvent.MOUSE_MOVE> and\n * <mxEvent.MOUSE_UP>. All listeners are invoked for all events regardless\n * of the consumed state of the event.\n * \n * Parameters:\n * \n * evtName - String that specifies the type of event to be dispatched.\n * me - <mxMouseEvent> to be fired.\n * sender - Optional sender argument. Default is this.\n */\nmxGraph.prototype.fireMouseEvent = function(evtName, me, sender)\n{\n\tif (this.isEventSourceIgnored(evtName, me))\n\t{\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.hide();\n\t\t}\n\t\t\n\t\treturn;\n\t}\n\t\n\tif (sender == null)\n\t{\n\t\tsender = this;\n\t}\n\n\t// Updates the graph coordinates in the event\n\tme = this.updateMouseEvent(me, evtName);\n\n\t// Detects and processes double taps for touch-based devices which do not have native double click events\n\t// or where detection of double click is not always possible (quirks, IE10+). Note that this can only handle\n\t// double clicks on cells because the sequence of events in IE prevents detection on the background, it fires\n\t// two mouse ups, one of which without a cell but no mousedown for the second click which means we cannot\n\t// detect which mouseup(s) are part of the first click, ie we do not know when the first click ends.\n\tif ((!this.nativeDblClickEnabled && !mxEvent.isPopupTrigger(me.getEvent())) || (this.doubleTapEnabled &&\n\t\tmxClient.IS_TOUCH && (mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent()))))\n\t{\n\t\tvar currentTime = new Date().getTime();\n\t\t\n\t\t// NOTE: Second mouseDown for double click missing in quirks mode\n\t\tif ((!mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_DOWN) || (mxClient.IS_QUIRKS && evtName == mxEvent.MOUSE_UP && !this.fireDoubleClick))\n\t\t{\n\t\t\tif (this.lastTouchEvent != null && this.lastTouchEvent != me.getEvent() &&\n\t\t\t\tcurrentTime - this.lastTouchTime < this.doubleTapTimeout &&\n\t\t\t\tMath.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance &&\n\t\t\t\tthis.doubleClickCounter < 2)\n\t\t\t{\n\t\t\t\tthis.doubleClickCounter++;\n\t\t\t\tvar doubleClickFired = false;\n\t\t\t\t\n\t\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t{\n\t\t\t\t\tif (me.getCell() == this.lastTouchCell && this.lastTouchCell != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t\t\tvar cell = this.lastTouchCell;\n\t\t\t\t\t\tthis.lastTouchCell = null;\n\n\t\t\t\t\t\t// Fires native dblclick event via event source\n\t\t\t\t\t\t// NOTE: This fires two double click events on edges in quirks mode. While\n\t\t\t\t\t\t// trying to fix this, we realized that nativeDoubleClick can be disabled for\n\t\t\t\t\t\t// quirks and IE10+ (or we didn't find the case mentioned above where it\n\t\t\t\t\t\t// would not work), ie. all double clicks seem to be working without this.\n\t\t\t\t\t\tif (mxClient.IS_QUIRKS)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tme.getSource().fireEvent('ondblclick');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t\t\t\tdoubleClickFired = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.fireDoubleClick = true;\n\t\t\t\t\tthis.lastTouchTime = 0;\n\t\t\t\t}\n\n\t\t\t\t// Do not ignore mouse up in quirks in this case\n\t\t\t\tif (!mxClient.IS_QUIRKS || doubleClickFired)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.lastTouchEvent == null || this.lastTouchEvent != me.getEvent())\n\t\t\t{\n\t\t\t\tthis.lastTouchCell = me.getCell();\n\t\t\t\tthis.lastTouchX = me.getX();\n\t\t\t\tthis.lastTouchY = me.getY();\n\t\t\t\tthis.lastTouchTime = currentTime;\n\t\t\t\tthis.lastTouchEvent = me.getEvent();\n\t\t\t\tthis.doubleClickCounter = 0;\n\t\t\t}\n\t\t}\n\t\telse if ((this.isMouseDown || evtName == mxEvent.MOUSE_UP) && this.fireDoubleClick)\n\t\t{\n\t\t\tthis.fireDoubleClick = false;\n\t\t\tvar cell = this.lastTouchCell;\n\t\t\tthis.lastTouchCell = null;\n\t\t\tthis.isMouseDown = false;\n\t\t\t\n\t\t\t// Workaround for Chrome/Safari not firing native double click events for double touch on background\n\t\t\tvar valid = (cell != null) || ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\t\t(mxClient.IS_GC || mxClient.IS_SF));\n\t\t\t\n\t\t\tif (valid && Math.abs(this.lastTouchX - me.getX()) < this.doubleTapTolerance &&\n\t\t\t\tMath.abs(this.lastTouchY - me.getY()) < this.doubleTapTolerance)\n\t\t\t{\n\t\t\t\tthis.dblClick(me.getEvent(), cell);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.consume(me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (!this.isEventIgnored(evtName, me, sender))\n\t{\n\t\t// Updates the event state via getEventState\n\t\tme.state = this.getEventState(me.getState());\n\t\tthis.fireEvent(new mxEventObject(mxEvent.FIRE_MOUSE_EVENT, 'eventName', evtName, 'event', me));\n\t\t\n\t\tif ((mxClient.IS_OP || mxClient.IS_SF || mxClient.IS_GC || mxClient.IS_IE11 ||\n\t\t\t(mxClient.IS_IE && mxClient.IS_SVG) || me.getEvent().target != this.container))\n\t\t{\n\t\t\tif (evtName == mxEvent.MOUSE_MOVE && this.isMouseDown && this.autoScroll && !mxEvent.isMultiTouchEvent(me.getEvent))\n\t\t\t{\n\t\t\t\tthis.scrollPointToVisible(me.getGraphX(), me.getGraphY(), this.autoExtend);\n\t\t\t}\n\t\t\telse if (evtName == mxEvent.MOUSE_UP && this.ignoreScrollbars && this.translateToScrollPosition &&\n\t\t\t\t\t(this.container.scrollLeft != 0 || this.container.scrollTop != 0))\n\t\t\t{\n\t\t\t\tvar s = this.view.scale;\n\t\t\t\tvar tr = this.view.translate;\n\t\t\t\tthis.view.setTranslate(tr.x - this.container.scrollLeft / s, tr.y - this.container.scrollTop / s);\n\t\t\t\tthis.container.scrollLeft = 0;\n\t\t\t\tthis.container.scrollTop = 0;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.mouseListeners != null)\n\t\t\t{\n\t\t\t\tvar args = [sender, me];\n\t\n\t\t\t\t// Does not change returnValue in Opera\n\t\t\t\tif (!me.getEvent().preventDefault)\n\t\t\t\t{\n\t\t\t\t\tme.getEvent().returnValue = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this.mouseListeners.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar l = this.mouseListeners[i];\n\t\t\t\t\t\n\t\t\t\t\tif (evtName == mxEvent.MOUSE_DOWN)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseDown.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_MOVE)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseMove.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t\t\t\t{\n\t\t\t\t\t\tl.mouseUp.apply(l, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Invokes the click handler\n\t\t\tif (evtName == mxEvent.MOUSE_UP)\n\t\t\t{\n\t\t\t\tthis.click(me);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Detects tapAndHold events using a timer\n\t\tif ((mxEvent.isTouchEvent(me.getEvent()) || mxEvent.isPenEvent(me.getEvent())) &&\n\t\t\tevtName == mxEvent.MOUSE_DOWN && this.tapAndHoldEnabled && !this.tapAndHoldInProgress)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = true;\n\t\t\tthis.initialTouchX = me.getGraphX();\n\t\t\tthis.initialTouchY = me.getGraphY();\n\t\t\t\n\t\t\tvar handler = function()\n\t\t\t{\n\t\t\t\tif (this.tapAndHoldValid)\n\t\t\t\t{\n\t\t\t\t\tthis.tapAndHold(me);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\t\tthis.tapAndHoldValid = false;\n\t\t\t};\n\t\t\t\n\t\t\tif (this.tapAndHoldThread)\n\t\t\t{\n\t\t\t\twindow.clearTimeout(this.tapAndHoldThread);\n\t\t\t}\n\t\n\t\t\tthis.tapAndHoldThread = window.setTimeout(mxUtils.bind(this, handler), this.tapAndHoldDelay);\n\t\t\tthis.tapAndHoldValid = true;\n\t\t}\n\t\telse if (evtName == mxEvent.MOUSE_UP)\n\t\t{\n\t\t\tthis.tapAndHoldInProgress = false;\n\t\t\tthis.tapAndHoldValid = false;\n\t\t}\n\t\telse if (this.tapAndHoldValid)\n\t\t{\n\t\t\tthis.tapAndHoldValid =\n\t\t\t\tMath.abs(this.initialTouchX - me.getGraphX()) < this.tolerance &&\n\t\t\t\tMath.abs(this.initialTouchY - me.getGraphY()) < this.tolerance;\n\t\t}\n\n\t\t// Stops editing for all events other than from cellEditor\n\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isEditing() && !this.cellEditor.isEventSource(me.getEvent()))\n\t\t{\n\t\t\tthis.stopEditing(!this.isInvokesStopCellEditing());\n\t\t}\n\n\t\tthis.consumeMouseEvent(evtName, me, sender);\n\t}\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given <mxMouseEvent> if it's a touchStart event.\n */\nmxGraph.prototype.consumeMouseEvent = function(evtName, me, sender)\n{\n\t// Workaround for duplicate click in Windows 8 with Chrome/FF/Opera with touch\n\tif (evtName == mxEvent.MOUSE_DOWN && mxEvent.isTouchEvent(me.getEvent()))\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: fireGestureEvent\n * \n * Dispatches a <mxEvent.GESTURE> event. The following example will resize the\n * cell under the mouse based on the scale property of the native touch event.\n * \n * (code)\n * graph.addListener(mxEvent.GESTURE, function(sender, eo)\n * {\n *   var evt = eo.getProperty('event');\n *   var state = graph.view.getState(eo.getProperty('cell'));\n *   \n *   if (graph.isEnabled() && graph.isCellResizable(state.cell) && Math.abs(1 - evt.scale) > 0.2)\n *   {\n *     var scale = graph.view.scale;\n *     var tr = graph.view.translate;\n *     \n *     var w = state.width * evt.scale;\n *     var h = state.height * evt.scale;\n *     var x = state.x - (w - state.width) / 2;\n *     var y = state.y - (h - state.height) / 2;\n *     \n *     var bounds = new mxRectangle(graph.snap(x / scale) - tr.x,\n *     \t\tgraph.snap(y / scale) - tr.y, graph.snap(w / scale), graph.snap(h / scale));\n *     graph.resizeCell(state.cell, bounds);\n *     eo.consume();\n *   }\n * });\n * (end)\n * \n * Parameters:\n * \n * evt - Gestureend event that represents the gesture.\n * cell - Optional <mxCell> associated with the gesture.\n */\nmxGraph.prototype.fireGestureEvent = function(evt, cell)\n{\n\t// Resets double tap event handling when gestures take place\n\tthis.lastTouchTime = 0;\n\tthis.fireEvent(new mxEventObject(mxEvent.GESTURE, 'event', evt, 'cell', cell));\n};\n\n/**\n * Function: destroy\n * \n * Destroys the graph and all its resources.\n */\nmxGraph.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\t\n\t\tif (this.tooltipHandler != null)\n\t\t{\n\t\t\tthis.tooltipHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.selectionCellsHandler != null)\n\t\t{\n\t\t\tthis.selectionCellsHandler.destroy();\n\t\t}\n\n\t\tif (this.panningHandler != null)\n\t\t{\n\t\t\tthis.panningHandler.destroy();\n\t\t}\n\n\t\tif (this.popupMenuHandler != null)\n\t\t{\n\t\t\tthis.popupMenuHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.connectionHandler != null)\n\t\t{\n\t\t\tthis.connectionHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.graphHandler != null)\n\t\t{\n\t\t\tthis.graphHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.cellEditor != null)\n\t\t{\n\t\t\tthis.cellEditor.destroy();\n\t\t}\n\t\t\n\t\tif (this.view != null)\n\t\t{\n\t\t\tthis.view.destroy();\n\t\t}\n\n\t\tif (this.model != null && this.graphModelChangeListener != null)\n\t\t{\n\t\t\tthis.model.removeListener(this.graphModelChangeListener);\n\t\t\tthis.graphModelChangeListener = null;\n\t\t}\n\n\t\tthis.container = null;\n\t}\n};\n\n__mxOutput.mxGraph = typeof mxGraph !== 'undefined' ? mxGraph : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellOverlay\n *\n * Extends <mxEventSource> to implement a graph overlay, represented by an icon\n * and a tooltip. Overlays can handle and fire <click> events and are added to\n * the graph using <mxGraph.addCellOverlay>, and removed using\n * <mxGraph.removeCellOverlay>, or <mxGraph.removeCellOverlays> to remove all overlays.\n * The <mxGraph.getCellOverlays> function returns the array of overlays for a given\n * cell in a graph. If multiple overlays exist for the same cell, then\n * <getBounds> should be overridden in at least one of the overlays.\n * \n * Overlays appear on top of all cells in a special layer. If this is not\n * desirable, then the image must be rendered as part of the shape or label of\n * the cell instead.\n *\n * Example:\n * \n * The following adds a new overlays for a given vertex and selects the cell\n * if the overlay is clicked.\n *\n * (code)\n * var overlay = new mxCellOverlay(img, html);\n * graph.addCellOverlay(vertex, overlay);\n * overlay.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var cell = evt.getProperty('cell');\n *   graph.setSelectionCell(cell);\n * });\n * (end)\n * \n * For cell overlays to be printed use <mxPrintPreview.printOverlays>.\n *\n * Event: mxEvent.CLICK\n *\n * Fires when the user clicks on the overlay. The <code>event</code> property\n * contains the corresponding mouse event and the <code>cell</code> property\n * contains the cell. For touch devices this is fired if the element receives\n * a touchend event.\n * \n * Constructor: mxCellOverlay\n *\n * Constructs a new overlay using the given image and tooltip.\n * \n * Parameters:\n * \n * image - <mxImage> that represents the icon to be displayed.\n * tooltip - Optional string that specifies the tooltip.\n * align - Optional horizontal alignment for the overlay. Possible\n * values are <ALIGN_LEFT>, <ALIGN_CENTER> and <ALIGN_RIGHT>\n * (default).\n * verticalAlign - Vertical alignment for the overlay. Possible\n * values are <ALIGN_TOP>, <ALIGN_MIDDLE> and <ALIGN_BOTTOM>\n * (default).\n */\nfunction mxCellOverlay(image, tooltip, align, verticalAlign, offset, cursor)\n{\n\tthis.image = image;\n\tthis.tooltip = tooltip;\n\tthis.align = (align != null) ? align : this.align;\n\tthis.verticalAlign = (verticalAlign != null) ? verticalAlign : this.verticalAlign;\n\tthis.offset = (offset != null) ? offset : new mxPoint();\n\tthis.cursor = (cursor != null) ? cursor : 'help';\n};\n\n/**\n * Extends mxEventSource.\n */\nmxCellOverlay.prototype = new mxEventSource();\nmxCellOverlay.prototype.constructor = mxCellOverlay;\n\n/**\n * Variable: image\n *\n * Holds the <mxImage> to be used as the icon.\n */\nmxCellOverlay.prototype.image = null;\n\n/**\n * Variable: tooltip\n * \n * Holds the optional string to be used as the tooltip.\n */\nmxCellOverlay.prototype.tooltip = null;\n\n/**\n * Variable: align\n * \n * Holds the horizontal alignment for the overlay. Default is\n * <mxConstants.ALIGN_RIGHT>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.align = mxConstants.ALIGN_RIGHT;\n\n/**\n * Variable: verticalAlign\n * \n * Holds the vertical alignment for the overlay. Default is\n * <mxConstants.ALIGN_BOTTOM>. For edges, the overlay always appears in the\n * center of the edge.\n */\nmxCellOverlay.prototype.verticalAlign = mxConstants.ALIGN_BOTTOM;\n\n/**\n * Variable: offset\n * \n * Holds the offset as an <mxPoint>. The offset will be scaled according to the\n * current scale.\n */\nmxCellOverlay.prototype.offset = null;\n\n/**\n * Variable: cursor\n * \n * Holds the cursor for the overlay. Default is 'help'.\n */\nmxCellOverlay.prototype.cursor = null;\n\n/**\n * Variable: defaultOverlap\n * \n * Defines the overlapping for the overlay, that is, the proportional distance\n * from the origin to the point defined by the alignment. Default is 0.5.\n */\nmxCellOverlay.prototype.defaultOverlap = 0.5;\n\n/**\n * Function: getBounds\n * \n * Returns the bounds of the overlay for the given <mxCellState> as an\n * <mxRectangle>. This should be overridden when using multiple overlays\n * per cell so that the overlays do not overlap.\n * \n * The following example will place the overlay along an edge (where\n * x=[-1..1] from the start to the end of the edge and y is the\n * orthogonal offset in px).\n * \n * (code)\n * overlay.getBounds = function(state)\n * {\n *   var bounds = mxCellOverlay.prototype.getBounds.apply(this, arguments);\n *   \n *   if (state.view.graph.getModel().isEdge(state.cell))\n *   {\n *     var pt = state.view.getPoint(state, {x: 0, y: 0, relative: true});\n *     \n *     bounds.x = pt.x - bounds.width / 2;\n *     bounds.y = pt.y - bounds.height / 2;\n *   }\n *   \n *   return bounds;\n * };\n * (end)\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the current state of the\n * associated cell.\n */\nmxCellOverlay.prototype.getBounds = function(state)\n{\n\tvar isEdge = state.view.graph.getModel().isEdge(state.cell);\n\tvar s = state.view.scale;\n\tvar pt = null;\n\n\tvar w = this.image.width;\n\tvar h = this.image.height;\n\t\n\tif (isEdge)\n\t{\n\t\tvar pts = state.absolutePoints;\n\t\t\n\t\tif (pts.length % 2 == 1)\n\t\t{\n\t\t\tpt = pts[Math.floor(pts.length / 2)];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar idx = pts.length / 2;\n\t\t\tvar p0 = pts[idx-1];\n\t\t\tvar p1 = pts[idx];\n\t\t\tpt = new mxPoint(p0.x + (p1.x - p0.x) / 2,\n\t\t\t\tp0.y + (p1.y - p0.y) / 2);\n\t\t}\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint();\n\t\t\n\t\tif (this.align == mxConstants.ALIGN_LEFT)\n\t\t{\n\t\t\tpt.x = state.x;\n\t\t}\n\t\telse if (this.align == mxConstants.ALIGN_CENTER)\n\t\t{\n\t\t\tpt.x = state.x + state.width / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.x = state.x + state.width;\n\t\t}\n\t\t\n\t\tif (this.verticalAlign == mxConstants.ALIGN_TOP)\n\t\t{\n\t\t\tpt.y = state.y;\n\t\t}\n\t\telse if (this.verticalAlign == mxConstants.ALIGN_MIDDLE)\n\t\t{\n\t\t\tpt.y = state.y + state.height / 2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpt.y = state.y + state.height;\n\t\t}\n\t}\n\n\treturn new mxRectangle(Math.round(pt.x - (w * this.defaultOverlap - this.offset.x) * s),\n\t\tMath.round(pt.y - (h * this.defaultOverlap - this.offset.y) * s), w * s, h * s);\n};\n\n/**\n * Function: toString\n * \n * Returns the textual representation of the overlay to be used as the\n * tooltip. This implementation returns <tooltip>.\n */\nmxCellOverlay.prototype.toString = function()\n{\n\treturn this.tooltip;\n};\n\n__mxOutput.mxCellOverlay = typeof mxCellOverlay !== 'undefined' ? mxCellOverlay : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxOutline\n *\n * Implements an outline (aka overview) for a graph. Set <updateOnPan> to true\n * to enable updates while the source graph is panning.\n * \n * Example:\n * \n * (code)\n * var outline = new mxOutline(graph, div);\n * (end)\n * \n * If an outline is used in an <mxWindow> in IE8 standards mode, the following\n * code makes sure that the shadow filter is not inherited and that any\n * transparent elements in the graph do not show the page background, but the\n * background of the graph container.\n * \n * (code)\n * if (document.documentMode == 8)\n * {\n *   container.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n * }\n * (end)\n * \n * To move the graph to the top, left corner the following code can be used.\n * \n * (code)\n * var scale = graph.view.scale;\n * var bounds = graph.getGraphBounds();\n * graph.view.setTranslate(-bounds.x / scale, -bounds.y / scale);\n * (end)\n * \n * To toggle the suspended mode, the following can be used.\n * \n * (code)\n * outline.suspended = !outln.suspended;\n * if (!outline.suspended)\n * {\n *   outline.update(true);\n * }\n * (end)\n * \n * Constructor: mxOutline\n *\n * Constructs a new outline for the specified graph inside the given\n * container.\n * \n * Parameters:\n * \n * source - <mxGraph> to create the outline for.\n * container - DOM node that will contain the outline.\n */\nfunction mxOutline(source, container)\n{\n\tthis.source = source;\n\n\tif (container != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\n/**\n * Function: source\n * \n * Reference to the source <mxGraph>.\n */\nmxOutline.prototype.source = null;\n\n/**\n * Function: outline\n * \n * Reference to the <mxGraph> that renders the outline.\n */\nmxOutline.prototype.outline = null;\n\n/**\n * Function: graphRenderHint\n * \n * Renderhint to be used for the outline graph. Default is faster.\n */\nmxOutline.prototype.graphRenderHint = mxConstants.RENDERING_HINT_FASTER;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxOutline.prototype.enabled = true;\n\n/**\n * Variable: showViewport\n * \n * Specifies a viewport rectangle should be shown. Default is true.\n */\nmxOutline.prototype.showViewport = true;\n\n/**\n * Variable: border\n * \n * Border to be added at the bottom and right. Default is 10.\n */\nmxOutline.prototype.border = 10;\n\n/**\n * Variable: enabled\n * \n * Specifies the size of the sizer handler. Default is 8.\n */\nmxOutline.prototype.sizerSize = 8;\n\n/**\n * Variable: labelsVisible\n * \n * Specifies if labels should be visible in the outline. Default is false.\n */\nmxOutline.prototype.labelsVisible = false;\n\n/**\n * Variable: updateOnPan\n * \n * Specifies if <update> should be called for <mxEvent.PAN> in the source\n * graph. Default is false.\n */\nmxOutline.prototype.updateOnPan = false;\n\n/**\n * Variable: sizerImage\n * \n * Optional <mxImage> to be used for the sizer. Default is null.\n */\nmxOutline.prototype.sizerImage = null;\n\n/**\n * Variable: minScale\n * \n * Minimum scale to be used. Default is 0.0001.\n */\nmxOutline.prototype.minScale = 0.0001;\n\n/**\n * Variable: suspended\n * \n * Optional boolean flag to suspend updates. Default is false. This flag will\n * also suspend repaints of the outline. To toggle this switch, use the\n * following code.\n * \n * (code)\n * nav.suspended = !nav.suspended;\n * \n * if (!nav.suspended)\n * {\n *   nav.update(true);\n * }\n * (end)\n */\nmxOutline.prototype.suspended = false;\n\n/**\n * Variable: forceVmlHandles\n * \n * Specifies if VML should be used to render the handles in this control. This\n * is true for IE8 standards mode and false for all other browsers and modes.\n * This is a workaround for rendering issues of HTML elements over elements\n * with filters in IE 8 standards mode.\n */\nmxOutline.prototype.forceVmlHandles = document.documentMode == 8;\n\n/**\n * Function: createGraph\n * \n * Creates the <mxGraph> used in the outline.\n */\nmxOutline.prototype.createGraph = function(container)\n{\n\tvar graph = new mxGraph(container, this.source.getModel(), this.graphRenderHint, this.source.getStylesheet());\n\tgraph.foldingEnabled = false;\n\tgraph.autoScroll = false;\n\t\n\treturn graph;\n};\n\n/**\n * Function: init\n * \n * Initializes the outline inside the given container.\n */\nmxOutline.prototype.init = function(container)\n{\n\tthis.outline = this.createGraph(container);\n\t\n\t// Do not repaint when suspended\n\tvar outlineGraphModelChanged = this.outline.graphModelChanged;\n\tthis.outline.graphModelChanged = mxUtils.bind(this, function(changes)\n\t{\n\t\tif (!this.suspended && this.outline != null)\n\t\t{\n\t\t\toutlineGraphModelChanged.apply(this.outline, arguments);\n\t\t}\n\t});\n\n\t// Enables faster painting in SVG\n\tif (mxClient.IS_SVG)\n\t{\n\t\tvar node = this.outline.getView().getCanvas().parentNode;\n\t\tnode.setAttribute('shape-rendering', 'optimizeSpeed');\n\t\tnode.setAttribute('image-rendering', 'optimizeSpeed');\n\t}\n\t\n\t// Hides cursors and labels\n\tthis.outline.labelsVisible = this.labelsVisible;\n\tthis.outline.setEnabled(false);\n\t\n\tthis.updateHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (!this.suspended && !this.active)\n\t\t{\n\t\t\tthis.update();\n\t\t}\n\t});\n\t\n\t// Updates the scale of the outline after a change of the main graph\n\tthis.source.getModel().addListener(mxEvent.CHANGE, this.updateHandler);\n\tthis.outline.addMouseListener(this);\n\t\n\t// Adds listeners to keep the outline in sync with the source graph\n\tvar view = this.source.getView();\n\tview.addListener(mxEvent.SCALE, this.updateHandler);\n\tview.addListener(mxEvent.TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.SCALE_AND_TRANSLATE, this.updateHandler);\n\tview.addListener(mxEvent.DOWN, this.updateHandler);\n\tview.addListener(mxEvent.UP, this.updateHandler);\n\n\t// Updates blue rectangle on scroll\n\tmxEvent.addListener(this.source.container, 'scroll', this.updateHandler);\n\t\n\tthis.panHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.updateOnPan)\n\t\t{\n\t\t\tthis.updateHandler.apply(this, arguments);\n\t\t}\n\t});\n\tthis.source.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Refreshes the graph in the outline after a refresh of the main graph\n\tthis.refreshHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.outline.setStylesheet(this.source.getStylesheet());\n\t\tthis.outline.refresh();\n\t});\n\tthis.source.addListener(mxEvent.REFRESH, this.refreshHandler);\n\n\t// Creates the blue rectangle for the viewport\n\tthis.bounds = new mxRectangle(0, 0, 0, 0);\n\tthis.selectionBorder = new mxRectangleShape(this.bounds, null,\n\t\tmxConstants.OUTLINE_COLOR, mxConstants.OUTLINE_STROKEWIDTH);\n\tthis.selectionBorder.dialect = this.outline.dialect;\n\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.selectionBorder.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.selectionBorder.init(this.outline.getView().getOverlayPane());\n\n\t// Handles event by catching the initial pointer start and then listening to the\n\t// complete gesture on the event target. This is needed because all the events\n\t// are routed via the initial element even if that element is removed from the\n\t// DOM, which happens when we repaint the selection border and zoom handles.\n\tvar handler = mxUtils.bind(this, function(evt)\n\t{\n\t\tvar t = mxEvent.getSource(evt);\n\t\t\n\t\tvar redirect = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_MOVE, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tvar redirect2 = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tmxEvent.removeGestureListeners(t, null, redirect, redirect2);\n\t\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_UP, new mxMouseEvent(evt));\n\t\t});\n\t\t\n\t\tmxEvent.addGestureListeners(t, null, redirect, redirect2);\n\t\tthis.outline.fireMouseEvent(mxEvent.MOUSE_DOWN, new mxMouseEvent(evt));\n\t});\n\t\n\tmxEvent.addGestureListeners(this.selectionBorder.node, handler);\n\n\t// Creates a small blue rectangle for sizing (sizer handle)\n\tthis.sizer = this.createSizer();\n\t\n\tif (this.forceVmlHandles)\n\t{\n\t\tthis.sizer.isHtmlAllowed = function()\n\t\t{\n\t\t\treturn false;\n\t\t};\n\t}\n\t\n\tthis.sizer.init(this.outline.getView().getOverlayPane());\n\t\n\tif (this.enabled)\n\t{\n\t\tthis.sizer.node.style.cursor = 'nwse-resize';\n\t}\n\t\n\tmxEvent.addGestureListeners(this.sizer.node, handler);\n\n\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\tthis.sizer.node.style.display = this.selectionBorder.node.style.display;\n\tthis.selectionBorder.node.style.cursor = 'move';\n\n\tthis.update(false);\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxOutline.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: setZoomEnabled\n * \n * Enables or disables the zoom handling by showing or hiding the respective\n * handle.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new enabled state.\n */\nmxOutline.prototype.setZoomEnabled = function(value)\n{\n\tthis.sizer.node.style.visibility = (value) ? 'visible' : 'hidden';\n};\n\n/**\n * Function: refresh\n * \n * Invokes <update> and revalidate the outline. This method is deprecated.\n */\nmxOutline.prototype.refresh = function()\n{\n\tthis.update(true);\n};\n\n/**\n * Function: createSizer\n * \n * Creates the shape used as the sizer.\n */\nmxOutline.prototype.createSizer = function()\n{\n\tif (this.sizerImage != null)\n\t{\n\t\tvar sizer = new mxImageShape(new mxRectangle(0, 0, this.sizerImage.width, this.sizerImage.height), this.sizerImage.src);\n\t\tsizer.dialect = this.outline.dialect;\n\t\t\n\t\treturn sizer;\n\t}\n\telse\n\t{\n\t\tvar sizer = new mxRectangleShape(new mxRectangle(0, 0, this.sizerSize, this.sizerSize),\n\t\t\tmxConstants.OUTLINE_HANDLE_FILLCOLOR, mxConstants.OUTLINE_HANDLE_STROKECOLOR);\n\t\tsizer.dialect = this.outline.dialect;\n\t\n\t\treturn sizer;\n\t}\n};\n\n/**\n * Function: getSourceContainerSize\n * \n * Returns the size of the source container.\n */\nmxOutline.prototype.getSourceContainerSize = function()\n{\n\treturn new mxRectangle(0, 0, this.source.container.scrollWidth, this.source.container.scrollHeight);\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getOutlineOffset = function(scale)\n{\n\treturn null;\n};\n\n/**\n * Function: getOutlineOffset\n * \n * Returns the offset for drawing the outline graph.\n */\nmxOutline.prototype.getSourceGraphBounds = function()\n{\n\treturn this.source.getGraphBounds();\n};\n\n/**\n * Function: update\n * \n * Updates the outline.\n */\nmxOutline.prototype.update = function(revalidate)\n{\n\tif (this.source != null && this.source.container != null &&\n\t\tthis.outline != null && this.outline.container != null)\n\t{\n\t\tvar sourceScale = this.source.view.scale;\n\t\tvar scaledGraphBounds = this.getSourceGraphBounds();\n\t\tvar unscaledGraphBounds = new mxRectangle(scaledGraphBounds.x / sourceScale + this.source.panDx,\n\t\t\t\tscaledGraphBounds.y / sourceScale + this.source.panDy, scaledGraphBounds.width / sourceScale,\n\t\t\t\tscaledGraphBounds.height / sourceScale);\n\n\t\tvar unscaledFinderBounds = new mxRectangle(0, 0,\n\t\t\tthis.source.container.clientWidth / sourceScale,\n\t\t\tthis.source.container.clientHeight / sourceScale);\n\t\t\n\t\tvar union = unscaledGraphBounds.clone();\n\t\tunion.add(unscaledFinderBounds);\n\t\n\t\t// Zooms to the scrollable area if that is bigger than the graph\n\t\tvar size = this.getSourceContainerSize();\n\t\tvar completeWidth = Math.max(size.width / sourceScale, union.width);\n\t\tvar completeHeight = Math.max(size.height / sourceScale, union.height);\n\t\n\t\tvar availableWidth = Math.max(0, this.outline.container.clientWidth - this.border);\n\t\tvar availableHeight = Math.max(0, this.outline.container.clientHeight - this.border);\n\t\t\n\t\tvar outlineScale = Math.min(availableWidth / completeWidth, availableHeight / completeHeight);\n\t\tvar scale = (isNaN(outlineScale)) ? this.minScale : Math.max(this.minScale, outlineScale);\n\n\t\tif (scale > 0)\n\t\t{\n\t\t\tif (this.outline.getView().scale != scale)\n\t\t\t{\n\t\t\t\tthis.outline.getView().scale = scale;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\tvar navView = this.outline.getView();\n\t\t\t\n\t\t\tif (navView.currentRoot != this.source.getView().currentRoot)\n\t\t\t{\n\t\t\t\tnavView.setCurrentRoot(this.source.getView().currentRoot);\n\t\t\t}\n\n\t\t\tvar t = this.source.view.translate;\n\t\t\tvar tx = t.x + this.source.panDx;\n\t\t\tvar ty = t.y + this.source.panDy;\n\t\t\t\n\t\t\tvar off = this.getOutlineOffset(scale);\n\t\t\t\n\t\t\tif (off != null)\n\t\t\t{\n\t\t\t\ttx += off.x;\n\t\t\t\tty += off.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (unscaledGraphBounds.x < 0)\n\t\t\t{\n\t\t\t\ttx = tx - unscaledGraphBounds.x;\n\t\t\t}\n\t\t\tif (unscaledGraphBounds.y < 0)\n\t\t\t{\n\t\t\t\tty = ty - unscaledGraphBounds.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (navView.translate.x != tx || navView.translate.y != ty)\n\t\t\t{\n\t\t\t\tnavView.translate.x = tx;\n\t\t\t\tnavView.translate.y = ty;\n\t\t\t\trevalidate = true;\n\t\t\t}\n\t\t\n\t\t\t// Prepares local variables for computations\n\t\t\tvar t2 = navView.translate;\n\t\t\tscale = this.source.getView().scale;\n\t\t\tvar scale2 = scale / navView.scale;\n\t\t\tvar scale3 = 1.0 / navView.scale;\n\t\t\tvar container = this.source.container;\n\t\t\t\n\t\t\t// Updates the bounds of the viewrect in the navigation\n\t\t\tthis.bounds = new mxRectangle(\n\t\t\t\t(t2.x - t.x - this.source.panDx) / scale3,\n\t\t\t\t(t2.y - t.y - this.source.panDy) / scale3,\n\t\t\t\t(container.clientWidth / scale2),\n\t\t\t\t(container.clientHeight / scale2));\n\t\t\t\n\t\t\t// Adds the scrollbar offset to the finder\n\t\t\tthis.bounds.x += this.source.container.scrollLeft * navView.scale / scale;\n\t\t\tthis.bounds.y += this.source.container.scrollTop * navView.scale / scale;\n\t\t\t\n\t\t\tvar b = this.selectionBorder.bounds;\n\t\t\t\n\t\t\tif (b.x != this.bounds.x || b.y != this.bounds.y || b.width != this.bounds.width || b.height != this.bounds.height)\n\t\t\t{\n\t\t\t\tthis.selectionBorder.bounds = this.bounds;\n\t\t\t\tthis.selectionBorder.redraw();\n\t\t\t}\n\t\t\n\t\t\t// Updates the bounds of the zoom handle at the bottom right\n\t\t\tvar b = this.sizer.bounds;\n\t\t\tvar b2 = new mxRectangle(this.bounds.x + this.bounds.width - b.width / 2,\n\t\t\t\t\tthis.bounds.y + this.bounds.height - b.height / 2, b.width, b.height);\n\n\t\t\tif (b.x != b2.x || b.y != b2.y || b.width != b2.width || b.height != b2.height)\n\t\t\t{\n\t\t\t\tthis.sizer.bounds = b2;\n\t\t\t\t\n\t\t\t\t// Avoids update of visibility in redraw for VML\n\t\t\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t\t\t{\n\t\t\t\t\tthis.sizer.redraw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (revalidate)\n\t\t\t{\n\t\t\t\tthis.outline.view.revalidate();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by starting a translation or zoom.\n */\nmxOutline.prototype.mouseDown = function(sender, me)\n{\n\tif (this.enabled && this.showViewport)\n\t{\n\t\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.source.tolerance : 0;\n\t\tvar hit = (this.source.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\t\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\tthis.zoom = me.isSource(this.sizer) || (hit != null && mxUtils.intersects(shape.bounds, hit));\n\t\tthis.startX = me.getX();\n\t\tthis.startY = me.getY();\n\t\tthis.active = true;\n\n\t\tif (this.source.useScrollbarsForPanning && mxUtils.hasScrollbars(this.source.container))\n\t\t{\n\t\t\tthis.dx0 = this.source.container.scrollLeft;\n\t\t\tthis.dy0 = this.source.container.scrollTop;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.dx0 = 0;\n\t\t\tthis.dy0 = 0;\n\t\t}\n\t}\n\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by previewing the viewrect in <graph> and updating the\n * rectangle that represents the viewrect in the outline.\n */\nmxOutline.prototype.mouseMove = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tthis.selectionBorder.node.style.display = (this.showViewport) ? '' : 'none';\n\t\tthis.sizer.node.style.display = this.selectionBorder.node.style.display; \n\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar bounds = null;\n\t\t\n\t\tif (!this.zoom)\n\t\t{\n\t\t\t// Previews the panning on the source graph\n\t\t\tvar scale = this.outline.getView().scale;\n\t\t\tbounds = new mxRectangle(this.bounds.x + dx,\n\t\t\t\tthis.bounds.y + dy, this.bounds.width, this.bounds.height);\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t\tdx /= scale;\n\t\t\tdx *= this.source.getView().scale;\n\t\t\tdy /= scale;\n\t\t\tdy *= this.source.getView().scale;\n\t\t\tthis.source.panGraph(-dx - this.dx0, -dy - this.dy0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Does *not* preview zooming on the source graph\n\t\t\tvar container = this.source.container;\n\t\t\tvar viewRatio = container.clientWidth / container.clientHeight;\n\t\t\tdy = dx / viewRatio;\n\t\t\tbounds = new mxRectangle(this.bounds.x,\n\t\t\t\tthis.bounds.y,\n\t\t\t\tMath.max(1, this.bounds.width + dx),\n\t\t\t\tMath.max(1, this.bounds.height + dy));\n\t\t\tthis.selectionBorder.bounds = bounds;\n\t\t\tthis.selectionBorder.redraw();\n\t\t}\n\t\t\n\t\t// Updates the zoom handle\n\t\tvar b = this.sizer.bounds;\n\t\tthis.sizer.bounds = new mxRectangle(\n\t\t\tbounds.x + bounds.width - b.width / 2,\n\t\t\tbounds.y + bounds.height - b.height / 2,\n\t\t\tb.width, b.height);\n\t\t\n\t\t// Avoids update of visibility in redraw for VML\n\t\tif (this.sizer.node.style.visibility != 'hidden')\n\t\t{\n\t\t\tthis.sizer.redraw();\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: getTranslateForEvent\n * \n * Gets the translate for the given mouse event. Here is an example to limit\n * the outline to stay within positive coordinates:\n * \n * (code)\n * outline.getTranslateForEvent = function(me)\n * {\n *   var pt = new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n *   \n *   if (!this.zoom)\n *   {\n *     var tr = this.source.view.translate;\n *     pt.x = Math.max(tr.x * this.outline.view.scale, pt.x);\n *     pt.y = Math.max(tr.y * this.outline.view.scale, pt.y);\n *   }\n *   \n *   return pt;\n * };\n * (end)\n */\nmxOutline.prototype.getTranslateForEvent = function(me)\n{\n\treturn new mxPoint(me.getX() - this.startX, me.getY() - this.startY);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the translation or zoom to <graph>.\n */\nmxOutline.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tvar delta = this.getTranslateForEvent(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\t\n\t\tif (Math.abs(dx) > 0 || Math.abs(dy) > 0)\n\t\t{\n\t\t\tif (!this.zoom)\n\t\t\t{\n\t\t\t\t// Applies the new translation if the source\n\t\t\t\t// has no scrollbars\n\t\t\t\tif (!this.source.useScrollbarsForPanning ||\n\t\t\t\t\t!mxUtils.hasScrollbars(this.source.container))\n\t\t\t\t{\n\t\t\t\t\tthis.source.panGraph(0, 0);\n\t\t\t\t\tdx /= this.outline.getView().scale;\n\t\t\t\t\tdy /= this.outline.getView().scale;\n\t\t\t\t\tvar t = this.source.getView().translate;\n\t\t\t\t\tthis.source.getView().setTranslate(t.x - dx, t.y - dy);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Applies the new zoom\n\t\t\t\tvar w = this.selectionBorder.bounds.width;\n\t\t\t\tvar scale = this.source.getView().scale;\n\t\t\t\tthis.source.zoomTo(Math.max(this.minScale, scale - (dx * scale) / w), false);\n\t\t\t}\n\n\t\t\tthis.update();\n\t\t\tme.consume();\n\t\t}\n\t\t\t\n\t\t// Resets the state of the handler\n\t\tthis.index = null;\n\t\tthis.active = false;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroy this outline and removes all listeners from <source>.\n */\nmxOutline.prototype.destroy = function()\n{\n\tif (this.source != null)\n\t{\n\t\tthis.source.removeListener(this.panHandler);\n\t\tthis.source.removeListener(this.refreshHandler);\n\t\tthis.source.getModel().removeListener(this.updateHandler);\n\t\tthis.source.getView().removeListener(this.updateHandler);\n\t\tmxEvent.removeListener(this.source.container, 'scroll', this.updateHandler);\n\t\tthis.source = null;\n\t}\n\t\n\tif (this.outline != null)\n\t{\n\t\tthis.outline.removeMouseListener(this);\n\t\tthis.outline.destroy();\n\t\tthis.outline = null;\n\t}\n\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tif (this.sizer != null)\n\t{\n\t\tthis.sizer.destroy();\n\t\tthis.sizer = null;\n\t}\n};\n\n__mxOutput.mxOutline = typeof mxOutline !== 'undefined' ? mxOutline : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxMultiplicity\n * \n * Defines invalid connections along with the error messages that they produce.\n * To add or remove rules on a graph, you must add/remove instances of this\n * class to <mxGraph.multiplicities>.\n * \n * Example:\n * \n * (code)\n * graph.multiplicities.push(new mxMultiplicity(\n *   true, 'rectangle', null, null, 0, 2, ['circle'],\n *   'Only 2 targets allowed',\n *   'Only circle targets allowed'));\n * (end)\n * \n * Defines a rule where each rectangle must be connected to no more than 2\n * circles and no other types of targets are allowed.\n * \n * Constructor: mxMultiplicity\n * \n * Instantiate class mxMultiplicity in order to describe allowed\n * connections in a graph. Not all constraints can be enforced while\n * editing, some must be checked at validation time. The <countError> and\n * <typeError> are treated as resource keys in <mxResources>.\n * \n * Parameters:\n * \n * source - Boolean indicating if this rule applies to the source or target\n * terminal.\n * type - Type of the source or target terminal that this rule applies to.\n * See <type> for more information.\n * attr - Optional attribute name to match the source or target terminal.\n * value - Optional attribute value to match the source or target terminal.\n * min - Minimum number of edges for this rule. Default is 1.\n * max - Maximum number of edges for this rule. n means infinite. Default\n * is n.\n * validNeighbors - Array of types of the opposite terminal for which this\n * rule applies.\n * countError - Error to be displayed for invalid number of edges.\n * typeError - Error to be displayed for invalid opposite terminals.\n * validNeighborsAllowed - Optional boolean indicating if the array of\n * opposite types should be valid or invalid.\n */\nfunction mxMultiplicity(source, type, attr, value, min, max,\n\tvalidNeighbors, countError, typeError, validNeighborsAllowed)\n{\n\tthis.source = source;\n\tthis.type = type;\n\tthis.attr = attr;\n\tthis.value = value;\n\tthis.min = (min != null) ? min : 0;\n\tthis.max = (max != null) ? max : 'n';\n\tthis.validNeighbors = validNeighbors;\n\tthis.countError = mxResources.get(countError) || countError;\n\tthis.typeError = mxResources.get(typeError) || typeError;\n\tthis.validNeighborsAllowed = (validNeighborsAllowed != null) ?\n\t\tvalidNeighborsAllowed : true;\n};\n\n/**\n * Variable: type\n * \n * Defines the type of the source or target terminal. The type is a string\n * passed to <mxUtils.isNode> together with the source or target vertex\n * value as the first argument.\n */\nmxMultiplicity.prototype.type = null;\n\n/**\n * Variable: attr\n * \n * Optional string that specifies the attributename to be passed to\n * <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.attr = null;\n\n/**\n * Variable: value\n * \n * Optional string that specifies the value of the attribute to be passed\n * to <mxUtils.isNode> to check if the rule applies to a cell.\n */\nmxMultiplicity.prototype.value = null;\n\n/**\n * Variable: source\n * \n * Boolean that specifies if the rule is applied to the source or target\n * terminal of an edge.\n */\nmxMultiplicity.prototype.source = null;\n\n/**\n * Variable: min\n * \n * Defines the minimum number of connections for which this rule applies.\n * Default is 0.\n */\nmxMultiplicity.prototype.min = null;\n\n/**\n * Variable: max\n * \n * Defines the maximum number of connections for which this rule applies.\n * A value of 'n' means unlimited times. Default is 'n'. \n */\nmxMultiplicity.prototype.max = null;\n\n/**\n * Variable: validNeighbors\n * \n * Holds an array of strings that specify the type of neighbor for which\n * this rule applies. The strings are used in <mxCell.is> on the opposite\n * terminal to check if the rule applies to the connection.\n */\nmxMultiplicity.prototype.validNeighbors = null;\n\n/**\n * Variable: validNeighborsAllowed\n * \n * Boolean indicating if the list of validNeighbors are those that are allowed\n * for this rule or those that are not allowed for this rule.\n */\nmxMultiplicity.prototype.validNeighborsAllowed = true;\n\n/**\n * Variable: countError\n * \n * Holds the localized error message to be displayed if the number of\n * connections for which the rule applies is smaller than <min> or greater\n * than <max>.\n */\nmxMultiplicity.prototype.countError = null;\n\n/**\n * Variable: typeError\n * \n * Holds the localized error message to be displayed if the type of the\n * neighbor for a connection does not match the rule.\n */\nmxMultiplicity.prototype.typeError = null;\n\n/**\n * Function: check\n * \n * Checks the multiplicity for the given arguments and returns the error\n * for the given connection or null if the multiplicity does not apply.\n *  \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph> instance.\n * edge - <mxCell> that represents the edge to validate.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * sourceOut - Number of outgoing edges from the source terminal.\n * targetIn - Number of incoming edges for the target terminal.\n */\nmxMultiplicity.prototype.check = function(graph, edge, source, target, sourceOut, targetIn)\n{\n\tvar error = '';\n\n\tif ((this.source && this.checkTerminal(graph, source, edge)) ||\n\t\t(!this.source && this.checkTerminal(graph, target, edge)))\n\t{\n\t\tif (this.countError != null && \n\t\t\t((this.source && (this.max == 0 || (sourceOut >= this.max))) ||\n\t\t\t(!this.source && (this.max == 0 || (targetIn >= this.max)))))\n\t\t{\n\t\t\terror += this.countError + '\\n';\n\t\t}\n\n\t\tif (this.validNeighbors != null && this.typeError != null && this.validNeighbors.length > 0)\n\t\t{\n\t\t\tvar isValid = this.checkNeighbors(graph, edge, source, target);\n\n\t\t\tif (!isValid)\n\t\t\t{\n\t\t\t\terror += this.typeError + '\\n';\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (error.length > 0) ? error : null;\n};\n\n/**\n * Function: checkNeighbors\n * \n * Checks if there are any valid neighbours in <validNeighbors>. This is only\n * called if <validNeighbors> is a non-empty array.\n */\nmxMultiplicity.prototype.checkNeighbors = function(graph, edge, source, target)\n{\n\tvar sourceValue = graph.model.getValue(source);\n\tvar targetValue = graph.model.getValue(target);\n\tvar isValid = !this.validNeighborsAllowed;\n\tvar valid = this.validNeighbors;\n\t\n\tfor (var j = 0; j < valid.length; j++)\n\t{\n\t\tif (this.source &&\n\t\t\tthis.checkType(graph, targetValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t\telse if (!this.source && \n\t\t\tthis.checkType(graph, sourceValue, valid[j]))\n\t\t{\n\t\t\tisValid = this.validNeighborsAllowed;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn isValid;\n};\n\n/**\n * Function: checkTerminal\n * \n * Checks the given terminal cell and returns true if this rule applies. The\n * given cell is the source or target of the given edge, depending on\n * <source>. This implementation uses <checkType> on the terminal's value.\n */\nmxMultiplicity.prototype.checkTerminal = function(graph, terminal, edge)\n{\n\tvar value = graph.model.getValue(terminal);\n\t\n\treturn this.checkType(graph, value, this.type, this.attr, this.value);\n};\n\n/**\n * Function: checkType\n * \n * Checks the type of the given value.\n */\nmxMultiplicity.prototype.checkType = function(graph, value, type, attr, attrValue)\n{\n\tif (value != null)\n\t{\n\t\tif (!isNaN(value.nodeType)) // Checks if value is a DOM node\n\t\t{\n\t\t\treturn mxUtils.isNode(value, type, attr, attrValue);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn value == type;\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n__mxOutput.mxMultiplicity = typeof mxMultiplicity !== 'undefined' ? mxMultiplicity : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxLayoutManager\n * \n * Implements a layout manager that runs a given layout after any changes to the graph:\n * \n * Example:\n * \n * (code)\n * var layoutMgr = new mxLayoutManager(graph);\n * layoutMgr.getLayout = function(cell)\n * {\n *   return layout;\n * };\n * (end)\n * \n * Event: mxEvent.LAYOUT_CELLS\n * \n * Fires between begin- and endUpdate after all cells have been layouted in\n * <layoutCells>. The <code>cells</code> property contains all cells that have\n * been passed to <layoutCells>.\n * \n * Constructor: mxLayoutManager\n *\n * Constructs a new automatic layout for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxLayoutManager(graph)\n{\n\t// Executes the layout before the changes are dispatched\n\tthis.undoHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.beforeUndo(evt.getProperty('edit'));\n\t\t}\n\t});\n\t\n\t// Notifies the layout of a move operation inside a parent\n\tthis.moveHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.cellsMoved(evt.getProperty('cells'), evt.getProperty('event'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxLayoutManager.prototype = new mxEventSource();\nmxLayoutManager.prototype.constructor = mxLayoutManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxLayoutManager.prototype.graph = null;\n\n/**\n * Variable: bubbling\n * \n * Specifies if the layout should bubble along\n * the cell hierarchy. Default is true.\n */\nmxLayoutManager.prototype.bubbling = true;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxLayoutManager.prototype.enabled = true;\n\n/**\n * Variable: updateHandler\n * \n * Holds the function that handles the endUpdate event.\n */\nmxLayoutManager.prototype.updateHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxLayoutManager.prototype.moveHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxLayoutManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxLayoutManager.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isBubbling\n * \n * Returns true if a layout should bubble, that is, if the parent layout\n * should be executed whenever a cell layout (layout of the children of\n * a cell) has been executed. This implementation returns <bubbling>.\n */\nmxLayoutManager.prototype.isBubbling = function()\n{\n\treturn this.bubbling;\n};\n\n/**\n * Function: setBubbling\n * \n * Sets <bubbling>.\n */\nmxLayoutManager.prototype.setBubbling = function(value)\n{\n\tthis.bubbling = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this layout operates on.\n */\nmxLayoutManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the layouts operate on.\n */\nmxLayoutManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\t\n\t\tmodel.removeListener(this.undoHandler);\n\t\tthis.graph.removeListener(this.moveHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tvar model = this.graph.getModel();\t\n\t\tmodel.addListener(mxEvent.BEFORE_UNDO, this.undoHandler);\n\t\tthis.graph.addListener(mxEvent.MOVE_CELLS, this.moveHandler);\n\t}\n};\n\n/**\n * Function: getLayout\n * \n * Returns the layout to be executed for the given graph and parent.\n */\nmxLayoutManager.prototype.getLayout = function(parent)\n{\n\treturn null;\n};\n\n/**\n * Function: beforeUndo\n * \n * Called from the undoHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.beforeUndo = function(undoableEdit)\n{\n\tvar cells = this.getCellsForChanges(undoableEdit.changes);\n\tvar model = this.getGraph().getModel();\n\n\t// Adds all descendants\n\tvar tmp = [];\n\t\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\ttmp = tmp.concat(model.getDescendants(cells[i]));\n\t}\n\t\n\tcells = tmp;\n\t\n\t// Adds all parent ancestors\n\tif (this.isBubbling())\n\t{\n\t\ttmp = model.getParents(cells);\n\t\t\n\t\twhile (tmp.length > 0)\n\t\t{\n\t\t\tcells = cells.concat(tmp);\n\t\t\ttmp = model.getParents(tmp);\n\t\t}\n\t}\n\t\n\tthis.executeLayoutForCells(cells);\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayoutForCells = function(cells)\n{\n\t// Adds reverse to this array to avoid duplicate execution of leafes\n\t// Works like capture/bubble for events, first executes all layout\n\t// from top to bottom and in reverse order and removes duplicates.\n\tvar sorted = mxUtils.sortCells(cells, true);\n\tsorted = sorted.concat(sorted.slice().reverse());\n\tthis.layoutCells(sorted);\n};\n\n/**\n * Function: cellsMoved\n * \n * Called from the moveHandler.\n *\n * Parameters:\n * \n * cell - Array of <mxCells> that have been moved.\n * evt - Mouse event that represents the mousedown.\n */\nmxLayoutManager.prototype.cellsMoved = function(cells, evt)\n{\n\tif (cells != null && evt != null)\n\t{\n\t\tvar point = mxUtils.convertPoint(this.getGraph().container,\n\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\t// Checks if a layout exists to take care of the moving if the\n\t\t// parent itself is not being moved\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar parent = model.getParent(cells[i]);\n\t\t\t\n\t\t\tif (mxUtils.indexOf(cells, parent) < 0)\n\t\t\t{\n\t\t\t\tvar layout = this.getLayout(parent);\n\t\n\t\t\t\tif (layout != null)\n\t\t\t\t{\n\t\t\t\t\tlayout.moveCell(cells[i], point.x, point.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: getCellsForEdit\n * \n * Returns the cells to be layouted for the given sequence of changes.\n */\nmxLayoutManager.prototype.getCellsForChanges = function(changes)\n{\n\tvar dict = new mxDictionary();\n\tvar result = [];\n\t\n\tfor (var i = 0; i < changes.length; i++)\n\t{\n\t\tvar change = changes[i];\n\t\t\n\t\tif (change instanceof mxRootChange)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cells = this.getCellsForChange(change);\n\t\t\t\n\t\t\tfor (var j = 0; j < cells.length; j++)\n\t\t\t{\n\t\t\t\tif (cells[j] != null && !dict.get(cells[j]))\n\t\t\t\t{\n\t\t\t\t\tdict.put(cells[j], true);\n\t\t\t\t\tresult.push(cells[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getCellsForChange\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.getCellsForChange = function(change)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tif (change instanceof mxChildChange)\n\t{\n\t\treturn [change.child, change.previous, model.getParent(change.child)];\n\t}\n\telse if (change instanceof mxTerminalChange || change instanceof mxGeometryChange)\n\t{\n\t\treturn [change.cell, model.getParent(change.cell)];\n\t}\n\telse if (change instanceof mxVisibleChange || change instanceof mxStyleChange)\n\t{\n\t\treturn [change.cell];\n\t}\n\t\n\treturn [];\n};\n\n/**\n * Function: layoutCells\n * \n * Executes all layouts which have been scheduled during the\n * changes.\n */\nmxLayoutManager.prototype.layoutCells = function(cells)\n{\n\tif (cells.length > 0)\n\t{\n\t\t// Invokes the layouts while removing duplicates\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry \n\t\t{\n\t\t\tvar last = null;\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (cells[i] != model.getRoot() && cells[i] != last)\n\t\t\t\t{\n\t\t\t\t\tif (this.executeLayout(this.getLayout(cells[i]), cells[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlast = cells[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.LAYOUT_CELLS, 'cells', cells));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: executeLayout\n * \n * Executes the given layout on the given parent.\n */\nmxLayoutManager.prototype.executeLayout = function(layout, parent)\n{\n\tvar result = false;\n\t\n\tif (layout != null && parent != null)\n\t{\n\t\tlayout.execute(parent);\n\t\tresult = true;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxLayoutManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxLayoutManager = typeof mxLayoutManager !== 'undefined' ? mxLayoutManager : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSwimlaneManager\n * \n * Manager for swimlanes and nested swimlanes that sets the size of newly added\n * swimlanes to that of their siblings, and propagates changes to the size of a\n * swimlane to its siblings, if <siblings> is true, and its ancestors, if\n * <bubbling> is true.\n * \n * Constructor: mxSwimlaneManager\n *\n * Constructs a new swimlane manager for the given graph.\n *\n * Arguments:\n * \n * graph - Reference to the enclosing graph. \n */\nfunction mxSwimlaneManager(graph, horizontal, addEnabled, resizeEnabled)\n{\n\tthis.horizontal = (horizontal != null) ? horizontal : true;\n\tthis.addEnabled = (addEnabled != null) ? addEnabled : true;\n\tthis.resizeEnabled = (resizeEnabled != null) ? resizeEnabled : true;\n\n\tthis.addHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isAddEnabled())\n\t\t{\n\t\t\tthis.cellsAdded(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.resizeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled() && this.isResizeEnabled())\n\t\t{\n\t\t\tthis.cellsResized(evt.getProperty('cells'));\n\t\t}\n\t});\n\t\n\tthis.setGraph(graph);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxSwimlaneManager.prototype = new mxEventSource();\nmxSwimlaneManager.prototype.constructor = mxSwimlaneManager;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSwimlaneManager.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if event handling is enabled. Default is true.\n */\nmxSwimlaneManager.prototype.enabled = true;\n\n/**\n * Variable: horizontal\n * \n * Specifies the orientation of the swimlanes. Default is true.\n */\nmxSwimlaneManager.prototype.horizontal = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if newly added cells should be resized to match the size of their\n * existing siblings. Default is true.\n */\nmxSwimlaneManager.prototype.addEnabled = true;\n\n/**\n * Variable: resizeEnabled\n * \n * Specifies if resizing of swimlanes should be handled. Default is true.\n */\nmxSwimlaneManager.prototype.resizeEnabled = true;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.addHandler = null;\n\n/**\n * Variable: moveHandler\n * \n * Holds the function that handles the move event.\n */\nmxSwimlaneManager.prototype.resizeHandler = null;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxSwimlaneManager.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxSwimlaneManager.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isHorizontal\n * \n * Returns <horizontal>.\n */\nmxSwimlaneManager.prototype.isHorizontal = function()\n{\n\treturn this.horizontal;\n};\n\n/**\n * Function: setHorizontal\n * \n * Sets <horizontal>.\n */\nmxSwimlaneManager.prototype.setHorizontal = function(value)\n{\n\tthis.horizontal = value;\n};\n\n/**\n * Function: isAddEnabled\n * \n * Returns <addEnabled>.\n */\nmxSwimlaneManager.prototype.isAddEnabled = function()\n{\n\treturn this.addEnabled;\n};\n\n/**\n * Function: setAddEnabled\n * \n * Sets <addEnabled>.\n */\nmxSwimlaneManager.prototype.setAddEnabled = function(value)\n{\n\tthis.addEnabled = value;\n};\n\n/**\n * Function: isResizeEnabled\n * \n * Returns <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.isResizeEnabled = function()\n{\n\treturn this.resizeEnabled;\n};\n\n/**\n * Function: setResizeEnabled\n * \n * Sets <resizeEnabled>.\n */\nmxSwimlaneManager.prototype.setResizeEnabled = function(value)\n{\n\tthis.resizeEnabled = value;\n};\n\n/**\n * Function: getGraph\n * \n * Returns the graph that this manager operates on.\n */\nmxSwimlaneManager.prototype.getGraph = function()\n{\n\treturn this.graph;\n};\n\n/**\n * Function: setGraph\n * \n * Sets the graph that the manager operates on.\n */\nmxSwimlaneManager.prototype.setGraph = function(graph)\n{\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.removeListener(this.addHandler);\n\t\tthis.graph.removeListener(this.resizeHandler);\n\t}\n\t\n\tthis.graph = graph;\n\t\n\tif (this.graph != null)\n\t{\n\t\tthis.graph.addListener(mxEvent.ADD_CELLS, this.addHandler);\n\t\tthis.graph.addListener(mxEvent.CELLS_RESIZED, this.resizeHandler);\n\t}\n};\n\n/**\n * Function: isSwimlaneIgnored\n * \n * Returns true if the given swimlane should be ignored.\n */\nmxSwimlaneManager.prototype.isSwimlaneIgnored = function(swimlane)\n{\n\treturn !this.getGraph().isSwimlane(swimlane);\n};\n\n/**\n * Function: isCellHorizontal\n * \n * Returns true if the given cell is horizontal. If the given cell is not a\n * swimlane, then the global orientation is returned.\n */\nmxSwimlaneManager.prototype.isCellHorizontal = function(cell)\n{\n\tif (this.graph.isSwimlane(cell))\n\t{\n\t\tvar style = this.graph.getCellStyle(cell);\n\t\t\n\t\treturn mxUtils.getValue(style, mxConstants.STYLE_HORIZONTAL, 1) == 1;\n\t}\n\t\n\treturn !this.isHorizontal();\n};\n\n/**\n * Function: cellsAdded\n * \n * Called if any cells have been added.\n * \n * Parameters:\n * \n * cell - Array of <mxCells> that have been added.\n */\nmxSwimlaneManager.prototype.cellsAdded = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tthis.swimlaneAdded(cells[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: swimlaneAdded\n * \n * Updates the size of the given swimlane to match that of any existing\n * siblings swimlanes.\n * \n * Parameters:\n * \n * swimlane - <mxCell> that represents the new swimlane.\n */\nmxSwimlaneManager.prototype.swimlaneAdded = function(swimlane)\n{\n\tvar model = this.getGraph().getModel();\n\tvar parent = model.getParent(swimlane);\n\tvar childCount = model.getChildCount(parent);\n\tvar geo = null;\n\t\n\t// Finds the first valid sibling swimlane as reference\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(parent, i);\n\t\t\n\t\tif (child != swimlane && !this.isSwimlaneIgnored(child))\n\t\t{\n\t\t\tgeo = model.getGeometry(child);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\t\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Applies the size of the refernece to the newly added swimlane\n\tif (geo != null)\n\t{\n\t\tvar parentHorizontal = (parent != null) ? this.isCellHorizontal(parent) : this.horizontal;\n\t\tthis.resizeSwimlane(swimlane, geo.width, geo.height, parentHorizontal);\n\t}\n};\n\n/**\n * Function: cellsResized\n * \n * Called if any cells have been resizes. Calls <swimlaneResized> for all\n * swimlanes where <isSwimlaneIgnored> returns false.\n * \n * Parameters:\n * \n * cells - Array of <mxCells> whose size was changed.\n */\nmxSwimlaneManager.prototype.cellsResized = function(cells)\n{\n\tif (cells != null)\n\t{\n\t\tvar model = this.getGraph().getModel();\n\t\t\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\t// Finds the top-level swimlanes and adds offsets\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tif (!this.isSwimlaneIgnored(cells[i]))\n\t\t\t\t{\n\t\t\t\t\tvar geo = model.getGeometry(cells[i]);\n\n\t\t\t\t\tif (geo != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = new mxRectangle(0, 0, geo.width, geo.height);\n\t\t\t\t\t\tvar top = cells[i];\n\t\t\t\t\t\tvar current = top;\n\t\t\t\t\t\t\n\t\t\t\t\t\twhile (current != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttop = current;\n\t\t\t\t\t\t\tcurrent = model.getParent(current);\n\t\t\t\t\t\t\tvar tmp = (this.graph.isSwimlane(current)) ?\n\t\t\t\t\t\t\t\t\tthis.graph.getStartSize(current) :\n\t\t\t\t\t\t\t\t\tnew mxRectangle();\n\t\t\t\t\t\t\tsize.width += tmp.width;\n\t\t\t\t\t\t\tsize.height += tmp.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar parentHorizontal = (current != null) ? this.isCellHorizontal(current) : this.horizontal;\n\t\t\t\t\t\tthis.resizeSwimlane(top, size.width, size.height, parentHorizontal);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t}\n};\n\n/**\n * Function: resizeSwimlane\n * \n * Called from <cellsResized> for all swimlanes that are not ignored to update\n * the size of the siblings and the size of the parent swimlanes, recursively,\n * if <bubbling> is true.\n * \n * Parameters:\n * \n * swimlane - <mxCell> whose size has changed.\n */\nmxSwimlaneManager.prototype.resizeSwimlane = function(swimlane, w, h, parentHorizontal)\n{\n\tvar model = this.getGraph().getModel();\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar horizontal = this.isCellHorizontal(swimlane);\n\t\t\n\t\tif (!this.isSwimlaneIgnored(swimlane))\n\t\t{\n\t\t\tvar geo = model.getGeometry(swimlane);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tif ((parentHorizontal && geo.height != h) || (!parentHorizontal && geo.width != w))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tif (parentHorizontal)\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.height = h;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tgeo.width = w;\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel.setGeometry(swimlane, geo);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar tmp = (this.graph.isSwimlane(swimlane)) ?\n\t\t\t\tthis.graph.getStartSize(swimlane) :\n\t\t\t\tnew mxRectangle();\n\t\tw -= tmp.width;\n\t\th -= tmp.height;\n\t\t\n\t\tvar childCount = model.getChildCount(swimlane);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tvar child = model.getChildAt(swimlane, i);\n\t\t\tthis.resizeSwimlane(child, w, h, horizontal);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Removes all handlers from the <graph> and deletes the reference to it.\n */\nmxSwimlaneManager.prototype.destroy = function()\n{\n\tthis.setGraph(null);\n};\n\n__mxOutput.mxSwimlaneManager = typeof mxSwimlaneManager !== 'undefined' ? mxSwimlaneManager : undefined;\n\n/**\n * Copyright (c) 2006-2017, JGraph Ltd\n * Copyright (c) 2006-2017, Gaudenz Alder\n */\n/**\n * Class: mxTemporaryCellStates\n * \n * Creates a temporary set of cell states.\n */\nfunction mxTemporaryCellStates(view, scale, cells, isCellVisibleFn, getLinkForCellState)\n{\n\tscale = (scale != null) ? scale : 1;\n\tthis.view = view;\n\t\n\t// Stores the previous state\n\tthis.oldValidateCellState = view.validateCellState;\n\tthis.oldBounds = view.getGraphBounds();\n\tthis.oldStates = view.getStates();\n\tthis.oldScale = view.getScale();\n\tthis.oldDoRedrawShape = view.graph.cellRenderer.doRedrawShape;\n\n\tvar self = this;\n\n\t// Overrides doRedrawShape and paint shape to add links on shapes\n\tif (getLinkForCellState != null)\n\t{\n\t\tview.graph.cellRenderer.doRedrawShape = function(state)\n\t\t{\n\t\t\tvar oldPaint = state.shape.paint;\n\t\t\t\n\t\t\tstate.shape.paint = function(c)\n\t\t\t{\n\t\t\t\tvar link = getLinkForCellState(state);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(link);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\toldPaint.apply(this, arguments);\n\t\t\t\t\n\t\t\t\tif (link != null)\n\t\t\t\t{\n\t\t\t\t\tc.setLink(null);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tself.oldDoRedrawShape.apply(view.graph.cellRenderer, arguments);\n\t\t\tstate.shape.paint = oldPaint;\n\t\t};\n\t}\n\n\t// Overrides validateCellState to ignore invisible cells\n\tview.validateCellState = function(cell, resurse)\n\t{\n\t\tif (cell == null || isCellVisibleFn == null || isCellVisibleFn(cell))\n\t\t{\n\t\t\treturn self.oldValidateCellState.apply(view, arguments);\n\t\t}\n\t\t\n\t\treturn null;\n\t};\n\t\n\t// Creates space for new states\n\tview.setStates(new mxDictionary());\n\tview.setScale(scale);\n\t\n\tif (cells != null)\n\t{\n\t\tview.resetValidationState();\n\t\tvar bbox = null;\n\n\t\t// Validates the vertices and edges without adding them to\n\t\t// the model so that the original cells are not modified\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tvar bounds = view.getBoundingBox(view.validateCellState(view.validateCell(cells[i])));\n\t\t\t\n\t\t\tif (bbox == null)\n\t\t\t{\n\t\t\t\tbbox = bounds;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbbox.add(bounds);\n\t\t\t}\n\t\t}\n\n\t\tview.setGraphBounds(bbox || new mxRectangle());\n\t}\n};\n\n/**\n * Variable: view\n *\n * Holds the width of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.view = null;\n\n/**\n * Variable: oldStates\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldStates = null;\n\n/**\n * Variable: oldBounds\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldBounds = null;\n\n/**\n * Variable: oldScale\n *\n * Holds the height of the rectangle. Default is 0.\n */\nmxTemporaryCellStates.prototype.oldScale = null;\n\n/**\n * Function: destroy\n * \n * Returns the top, left corner as a new <mxPoint>.\n */\nmxTemporaryCellStates.prototype.destroy = function()\n{\n\tthis.view.setScale(this.oldScale);\n\tthis.view.setStates(this.oldStates);\n\tthis.view.setGraphBounds(this.oldBounds);\n\tthis.view.validateCellState = this.oldValidateCellState;\n\tthis.view.graph.cellRenderer.doRedrawShape = this.oldDoRedrawShape;\n};\n\n__mxOutput.mxTemporaryCellStates = typeof mxTemporaryCellStates !== 'undefined' ? mxTemporaryCellStates : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n *\n * Class: mxCellStatePreview\n * \n * Implements a live preview for moving cells.\n * \n * Constructor: mxCellStatePreview\n * \n * Constructs a move preview for the given graph.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxCellStatePreview(graph)\n{\n\tthis.deltas = new mxDictionary();\n\tthis.graph = graph;\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.graph = null;\n\n/**\n * Variable: deltas\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellStatePreview.prototype.deltas = null;\n\n/**\n * Variable: count\n * \n * Contains the number of entries in the map.\n */\nmxCellStatePreview.prototype.count = 0;\n\n/**\n * Function: isEmpty\n * \n * Returns true if this contains no entries.\n */\nmxCellStatePreview.prototype.isEmpty = function()\n{\n\treturn this.count == 0;\n};\n\n/**\n * Function: moveState\n */\nmxCellStatePreview.prototype.moveState = function(state, dx, dy, add, includeEdges)\n{\n\tadd = (add != null) ? add : true;\n\tincludeEdges = (includeEdges != null) ? includeEdges : true;\n\t\n\tvar delta = this.deltas.get(state.cell);\n\n\tif (delta == null)\n\t{\n\t\t// Note: Deltas stores the point and the state since the key is a string.\n\t\tdelta = {point: new mxPoint(dx, dy), state: state};\n\t\tthis.deltas.put(state.cell, delta);\n\t\tthis.count++;\n\t}\n\telse if (add)\n\t{\n\t\tdelta.point.x += dx;\n\t\tdelta.point.y += dy;\n\t}\n\telse\n\t{\n\t\tdelta.point.x = dx;\n\t\tdelta.point.y = dy;\n\t}\n\t\n\tif (includeEdges)\n\t{\n\t\tthis.addEdges(state);\n\t}\n\t\n\treturn delta.point;\n};\n\n/**\n * Function: show\n */\nmxCellStatePreview.prototype.show = function(visitor)\n{\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.translateState(delta.state, delta.point.x, delta.point.y);\n\t}));\n\t\n\tthis.deltas.visit(mxUtils.bind(this, function(key, delta)\n\t{\n\t\tthis.revalidateState(delta.state, delta.point.x, delta.point.y, visitor);\n\t}));\n};\n\n/**\n * Function: translateState\n */\nmxCellStatePreview.prototype.translateState = function(state, dx, dy)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tif (model.isVertex(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t\tvar geo = model.getGeometry(state.cell);\n\t\t\t\n\t\t\t// Moves selection cells and non-relative vertices in\n\t\t\t// the first phase so that edge terminal points will\n\t\t\t// be updated in the second phase\n\t\t\tif ((dx != 0 || dy != 0) && geo != null && (!geo.relative || this.deltas.get(state.cell) != null))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\t\t\t}\n\t\t}\n\t    \n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.translateState(state.view.getState(model.getChildAt(state.cell, i)), dx, dy);\n\t    }\n\t}\n};\n\n/**\n * Function: revalidateState\n */\nmxCellStatePreview.prototype.revalidateState = function(state, dx, dy, visitor)\n{\n\tif (state != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\t// Updates the edge terminal points and restores the\n\t\t// (relative) positions of any (relative) children\n\t\tif (model.isEdge(state.cell))\n\t\t{\n\t\t\tstate.view.updateCellState(state);\n\t\t}\n\n\t\tvar geo = this.graph.getCellGeometry(state.cell);\n\t\tvar pState = state.view.getState(model.getParent(state.cell));\n\t\t\n\t\t// Moves selection vertices which are relative\n\t\tif ((dx != 0 || dy != 0) && geo != null && geo.relative &&\n\t\t\tmodel.isVertex(state.cell) && (pState == null ||\n\t\t\tmodel.isVertex(pState.cell) || this.deltas.get(state.cell) != null))\n\t\t{\n\t\t\tstate.x += dx;\n\t\t\tstate.y += dy;\n\t\t}\n\t\t\n\t\tthis.graph.cellRenderer.redraw(state);\n\t\n\t\t// Invokes the visitor on the given state\n\t\tif (visitor != null)\n\t\t{\n\t\t\tvisitor(state);\n\t\t}\n\t\t\t\t\t\t\n\t    var childCount = model.getChildCount(state.cell);\n\t    \n\t    for (var i = 0; i < childCount; i++)\n\t    {\n\t    \tthis.revalidateState(this.graph.view.getState(model.getChildAt(state.cell, i)), dx, dy, visitor);\n\t    }\n\t}\n};\n\n/**\n * Function: addEdges\n */\nmxCellStatePreview.prototype.addEdges = function(state)\n{\n\tvar model = this.graph.getModel();\n\tvar edgeCount = model.getEdgeCount(state.cell);\n\n\tfor (var i = 0; i < edgeCount; i++)\n\t{\n\t\tvar s = state.view.getState(model.getEdgeAt(state.cell, i));\n\n\t\tif (s != null)\n\t\t{\n\t\t\tthis.moveState(s, 0, 0);\n\t\t}\n\t}\n};\n\n__mxOutput.mxCellStatePreview = typeof mxCellStatePreview !== 'undefined' ? mxCellStatePreview : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConnectionConstraint\n * \n * Defines an object that contains the constraints about how to connect one\n * side of an edge to its terminal.\n * \n * Constructor: mxConnectionConstraint\n * \n * Constructs a new connection constraint for the given point and boolean\n * arguments.\n * \n * Parameters:\n * \n * point - Optional <mxPoint> that specifies the fixed location of the point\n * in relative coordinates. Default is null.\n * perimeter - Optional boolean that specifies if the fixed point should be\n * projected onto the perimeter of the terminal. Default is true.\n */\nfunction mxConnectionConstraint(point, perimeter, name, dx, dy)\n{\n\tthis.point = point;\n\tthis.perimeter = (perimeter != null) ? perimeter : true;\n\tthis.name = name;\n\tthis.dx = dx? dx : 0;\n\tthis.dy = dy? dy : 0;\n};\n\n/**\n * Variable: point\n * \n * <mxPoint> that specifies the fixed location of the connection point.\n */\nmxConnectionConstraint.prototype.point = null;\n\n/**\n * Variable: perimeter\n * \n * Boolean that specifies if the point should be projected onto the perimeter\n * of the terminal.\n */\nmxConnectionConstraint.prototype.perimeter = null;\n\n/**\n * Variable: name\n * \n * Optional string that specifies the name of the constraint.\n */\nmxConnectionConstraint.prototype.name = null;\n\n/**\n * Variable: dx\n * \n * Optional float that specifies the horizontal offset of the constraint.\n */\nmxConnectionConstraint.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Optional float that specifies the vertical offset of the constraint.\n */\nmxConnectionConstraint.prototype.dy = null;\n\n\n__mxOutput.mxConnectionConstraint = typeof mxConnectionConstraint !== 'undefined' ? mxConnectionConstraint : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGraphHandler\n * \n * Graph event handler that handles selection. Individual cells are handled\n * separately using <mxVertexHandler> or one of the edge handlers. These\n * handlers are created using <mxGraph.createHandler> in\n * <mxGraphSelectionModel.cellAdded>.\n * \n * To avoid the container to scroll a moved cell into view, set\n * <scrollAfterMove> to false.\n * \n * Constructor: mxGraphHandler\n * \n * Constructs an event handler that creates handles for the\n * selection cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxGraphHandler(graph)\n{\n\tthis.graph = graph;\n\tthis.graph.addMouseListener(this);\n\t\n\t// Repaints the handler after autoscroll\n\tthis.panHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.updatePreview();\n\t\tthis.updateHint();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\n\t// Handles escape keystrokes\n\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t\n\t// Updates the preview box for remote changes\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.first != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\t\t\t\tthis.pBounds = this.getPreviewBounds(this.cells);\n\t\t\t\tthis.updatePreview(true);\n\t\t\t\t\n\t\t\t\t// Resets handlers after they have been refreshed\n\t\t\t\twindow.setTimeout(mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tif (this.livePreviewUsed)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setHandlesVisibleForCells(this.cells, false);\n\t\t\t\t\t\tthis.updatePreview();\n\t\t\t\t\t}\n\t\t\t\t}), 0);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// Resets the handler if cells have vanished\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxGraphHandler.prototype.graph = null;\n\n/**\n * Variable: maxCells\n * \n * Defines the maximum number of cells to paint subhandles\n * for. Default is 50 for Firefox and 20 for IE. Set this\n * to 0 if you want an unlimited number of handles to be\n * displayed. This is only recommended if the number of\n * cells in the graph is limited to a small number, eg.\n * 500.\n */\nmxGraphHandler.prototype.maxCells = (mxClient.IS_IE) ? 20 : 50;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxGraphHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightEnabled\n * \n * Specifies if drop targets under the mouse should be enabled. Default is\n * true.\n */\nmxGraphHandler.prototype.highlightEnabled = true;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxGraphHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: moveEnabled\n * \n * Specifies if moving is enabled. Default is true.\n */\nmxGraphHandler.prototype.moveEnabled = true;\n\n/**\n * Variable: guidesEnabled\n * \n * Specifies if other cells should be used for snapping the right, center or\n * left side of the current selection. Default is false.\n */\nmxGraphHandler.prototype.guidesEnabled = false;\n\n/**\n * Variable: guide\n * \n * Holds the <mxGuide> instance that is used for alignment.\n */\nmxGraphHandler.prototype.guide = null;\n\n/**\n * Variable: currentDx\n * \n * Stores the x-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDx = null;\n\n/**\n * Variable: currentDy\n * \n * Stores the y-coordinate of the current mouse move.\n */\nmxGraphHandler.prototype.currentDy = null;\n\n/**\n * Variable: updateCursor\n * \n * Specifies if a move cursor should be shown if the mouse is over a movable\n * cell. Default is true.\n */\nmxGraphHandler.prototype.updateCursor = true;\n\n/**\n * Variable: selectEnabled\n * \n * Specifies if selecting is enabled. Default is true.\n */\nmxGraphHandler.prototype.selectEnabled = true;\n\n/**\n * Variable: removeCellsFromParent\n * \n * Specifies if cells may be moved out of their parents. Default is true.\n */\nmxGraphHandler.prototype.removeCellsFromParent = true;\n\n/**\n * Variable: removeEmptyParents\n * \n * If empty parents should be removed from the model after all child cells\n * have been moved out. Default is true.\n */\nmxGraphHandler.prototype.removeEmptyParents = false;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if drop events are interpreted as new connections if no other\n * drop action is defined. Default is false.\n */\nmxGraphHandler.prototype.connectOnDrop = false;\n\n/**\n * Variable: scrollOnMove\n * \n * Specifies if the view should be scrolled so that a moved cell is\n * visible. Default is true.\n */\nmxGraphHandler.prototype.scrollOnMove = true;\n\n/**\n * Variable: minimumSize\n * \n * Specifies the minimum number of pixels for the width and height of a\n * selection border. Default is 6.\n */\nmxGraphHandler.prototype.minimumSize = 6;\n\n/**\n * Variable: previewColor\n * \n * Specifies the color of the preview shape. Default is black.\n */\nmxGraphHandler.prototype.previewColor = 'black';\n\n/**\n * Variable: htmlPreview\n * \n * Specifies if the graph container should be used for preview. If this is used\n * then drop target detection relies entirely on <mxGraph.getCellAt> because\n * the HTML preview does not \"let events through\". Default is false.\n */\nmxGraphHandler.prototype.htmlPreview = false;\n\n/**\n * Variable: shape\n * \n * Reference to the <mxShape> that represents the preview.\n */\nmxGraphHandler.prototype.shape = null;\n\n/**\n * Variable: scaleGrid\n * \n * Specifies if the grid should be scaled. Default is false.\n */\nmxGraphHandler.prototype.scaleGrid = false;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if the bounding box should allow for rotation. Default is true.\n */\nmxGraphHandler.prototype.rotationEnabled = true;\n\n/**\n * Variable: maxLivePreview\n * \n * Maximum number of cells for which live preview should be used. Default is 0\n * which means no live preview.\n */\nmxGraphHandler.prototype.maxLivePreview = 0;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxGraphHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxGraphHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: isCloneEnabled\n * \n * Returns <cloneEnabled>.\n */\nmxGraphHandler.prototype.isCloneEnabled = function()\n{\n\treturn this.cloneEnabled;\n};\n\n/**\n * Function: setCloneEnabled\n * \n * Sets <cloneEnabled>.\n * \n * Parameters:\n * \n * value - Boolean that specifies the new clone enabled state.\n */\nmxGraphHandler.prototype.setCloneEnabled = function(value)\n{\n\tthis.cloneEnabled = value;\n};\n\n/**\n * Function: isMoveEnabled\n * \n * Returns <moveEnabled>.\n */\nmxGraphHandler.prototype.isMoveEnabled = function()\n{\n\treturn this.moveEnabled;\n};\n\n/**\n * Function: setMoveEnabled\n * \n * Sets <moveEnabled>.\n */\nmxGraphHandler.prototype.setMoveEnabled = function(value)\n{\n\tthis.moveEnabled = value;\n};\n\n/**\n * Function: isSelectEnabled\n * \n * Returns <selectEnabled>.\n */\nmxGraphHandler.prototype.isSelectEnabled = function()\n{\n\treturn this.selectEnabled;\n};\n\n/**\n * Function: setSelectEnabled\n * \n * Sets <selectEnabled>.\n */\nmxGraphHandler.prototype.setSelectEnabled = function(value)\n{\n\tthis.selectEnabled = value;\n};\n\n/**\n * Function: isRemoveCellsFromParent\n * \n * Returns <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.isRemoveCellsFromParent = function()\n{\n\treturn this.removeCellsFromParent;\n};\n\n/**\n * Function: setRemoveCellsFromParent\n * \n * Sets <removeCellsFromParent>.\n */\nmxGraphHandler.prototype.setRemoveCellsFromParent = function(value)\n{\n\tthis.removeCellsFromParent = value;\n};\n\n/**\n * Function: getInitialCellForEvent\n * \n * Hook to return initial cell for the given event.\n */\nmxGraphHandler.prototype.getInitialCellForEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: isDelayedSelection\n * \n * Hook to return true for delayed selections.\n */\nmxGraphHandler.prototype.isDelayedSelection = function(cell, me)\n{\n\treturn this.graph.isCellSelected(cell);\n};\n\n/**\n * Function: consumeMouseEvent\n * \n * Consumes the given mouse event. NOTE: This may be used to enable click\n * events for links in labels on iOS as follows as consuming the initial\n * touchStart disables firing the subsequent click event on the link.\n * \n * <code>\n * mxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n * {\n *   var source = mxEvent.getSource(me.getEvent());\n *   \n *   if (!mxEvent.isTouchEvent(me.getEvent()) || source.nodeName != 'A')\n *   {\n *     me.consume();\n *   }\n * }\n * </code>\n */\nmxGraphHandler.prototype.consumeMouseEvent = function(evtName, me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by selecing the given cell and creating a handle for\n * it. By consuming the event all subsequent events of the gesture are\n * redirected to this handler.\n */\nmxGraphHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() != null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar cell = this.getInitialCellForEvent(me);\n\t\tthis.delayedSelection = this.isDelayedSelection(cell, me);\n\t\tthis.cell = null;\n\t\t\n\t\tif (this.isSelectEnabled() && !this.delayedSelection)\n\t\t{\n\t\t\tthis.graph.selectCellForEvent(cell, me.getEvent());\n\t\t}\n\n\t\tif (this.isMoveEnabled())\n\t\t{\n\t\t\tvar model = this.graph.model;\n\t\t\tvar geo = model.getGeometry(cell);\n\n\t\t\tif (this.graph.isCellMovable(cell) && ((!model.isEdge(cell) || this.graph.getSelectionCount() > 1 ||\n\t\t\t\t(geo.points != null && geo.points.length > 0) || model.getTerminal(cell, true) == null ||\n\t\t\t\tmodel.getTerminal(cell, false) == null) || this.graph.allowDanglingEdges || \n\t\t\t\t(this.graph.isCloneEvent(me.getEvent()) && this.graph.isCellsCloneable())))\n\t\t\t{\n\t\t\t\tthis.start(cell, me.getX(), me.getY());\n\t\t\t}\n\t\t\telse if (this.delayedSelection)\n\t\t\t{\n\t\t\t\tthis.cell = cell;\n\t\t\t}\n\n\t\t\tthis.cellWasClicked = true;\n\t\t\tthis.consumeMouseEvent(mxEvent.MOUSE_DOWN, me);\n\t\t}\n\t}\n};\n\n/**\n * Function: getGuideStates\n * \n * Creates an array of cell states which should be used as guides.\n */\nmxGraphHandler.prototype.getGuideStates = function()\n{\n\tvar parent = this.graph.getDefaultParent();\n\tvar model = this.graph.getModel();\n\t\n\tvar filter = mxUtils.bind(this, function(cell)\n\t{\n\t\treturn this.graph.view.getState(cell) != null &&\n\t\t\tmodel.isVertex(cell) &&\n\t\t\tmodel.getGeometry(cell) != null &&\n\t\t\t!model.getGeometry(cell).relative;\n\t});\n\t\n\treturn this.graph.view.getCellStates(model.filterDescendants(filter, parent));\n};\n\n/**\n * Function: getCells\n * \n * Returns the cells to be modified by this handler. This implementation\n * returns all selection cells that are movable, or the given initial cell if\n * the given cell is not selected and movable. This handles the case of moving\n * unselectable or unselected cells.\n * \n * Parameters:\n * \n * initialCell - <mxCell> that triggered this handler.\n */\nmxGraphHandler.prototype.getCells = function(initialCell)\n{\n\tif (!this.delayedSelection && this.graph.isCellMovable(initialCell))\n\t{\n\t\treturn [initialCell];\n\t}\n\telse\n\t{\n\t\treturn this.graph.getMovableCells(this.graph.getSelectionCells());\n\t}\n};\n\n/**\n * Function: getPreviewBounds\n * \n * Returns the <mxRectangle> used as the preview bounds for\n * moving the given cells.\n */\nmxGraphHandler.prototype.getPreviewBounds = function(cells)\n{\n\tvar bounds = this.getBoundingBox(cells);\n\t\n\tif (bounds != null)\n\t{\n\t\t// Corrects width and height\n\t\tbounds.width = Math.max(0, bounds.width - 1);\n\t\tbounds.height = Math.max(0, bounds.height - 1);\n\t\t\n\t\tif (bounds.width < this.minimumSize)\n\t\t{\n\t\t\tvar dx = this.minimumSize - bounds.width;\n\t\t\tbounds.x -= dx / 2;\n\t\t\tbounds.width = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.x = Math.round(bounds.x);\n\t\t\tbounds.width = Math.ceil(bounds.width);\n\t\t}\n\t\t\n\t\tvar tr = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (bounds.height < this.minimumSize)\n\t\t{\n\t\t\tvar dy = this.minimumSize - bounds.height;\n\t\t\tbounds.y -= dy / 2;\n\t\t\tbounds.height = this.minimumSize;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbounds.y = Math.round(bounds.y);\n\t\t\tbounds.height = Math.ceil(bounds.height);\n\t\t}\n\t}\n\t\n\treturn bounds;\n};\n\n/**\n * Function: getBoundingBox\n * \n * Returns the union of the <mxCellStates> for the given array of <mxCells>.\n * For vertices, this method uses the bounding box of the corresponding shape\n * if one exists. The bounding box of the corresponding text label and all\n * controls and overlays are ignored. See also: <mxGraphView.getBounds> and\n * <mxGraph.getBoundingBox>.\n *\n * Parameters:\n *\n * cells - Array of <mxCells> whose bounding box should be returned.\n */\nmxGraphHandler.prototype.getBoundingBox = function(cells)\n{\n\tvar result = null;\n\t\n\tif (cells != null && cells.length > 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\t\n\t\tfor (var i = 0; i < cells.length; i++)\n\t\t{\n\t\t\tif (model.isVertex(cells[i]) || model.isEdge(cells[i]))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cells[i]);\n\t\t\t\n\t\t\t\tif (state != null)\n\t\t\t\t{\n\t\t\t\t\tvar bbox = state;\n\t\t\t\t\t\n\t\t\t\t\tif (model.isVertex(cells[i]) && state.shape != null && state.shape.boundingBox != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tbbox = state.shape.boundingBox;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (result == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tresult = mxRectangle.fromRectangle(bbox);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresult.add(bbox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: createPreviewShape\n * \n * Creates the shape used to draw the preview for the given bounds.\n */\nmxGraphHandler.prototype.createPreviewShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.previewColor);\n\tshape.isDashed = true;\n\t\n\tif (this.htmlPreview)\n\t{\n\t\tshape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tshape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\t// Makes sure to use either VML or SVG shapes in order to implement\n\t\t// event-transparency on the background area of the rectangle since\n\t\t// HTML shapes do not let mouseevents through even when transparent\n\t\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\tshape.init(this.graph.getView().getOverlayPane());\n\t\tshape.pointerEvents = false;\n\t\t\n\t\t// Workaround for artifacts on iOS\n\t\tif (mxClient.IS_IOS)\n\t\t{\n\t\t\tshape.getSvgScreenOffset = function()\n\t\t\t{\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxGraphHandler.prototype.start = function(cell, x, y)\n{\n\tthis.cell = cell;\n\tthis.first = mxUtils.convertPoint(this.graph.container, x, y);\n\tthis.cells = this.getCells(this.cell);\n\tthis.bounds = this.graph.getView().getBounds(this.cells);\n\tthis.pBounds = this.getPreviewBounds(this.cells);\n\tthis.allCells = new mxDictionary();\n\tthis.cloning = false;\n\tthis.cellCount = 0;\n\t\n\tfor (var i = 0; i < this.cells.length; i++)\n\t{\n\t\tthis.cellCount += this.addStates(this.cells[i], this.allCells);\n\t}\n\t\n\tif (this.guidesEnabled)\n\t{\n\t\tthis.guide = new mxGuide(this.graph, this.getGuideStates());\n\t\tvar parent = this.graph.model.getParent(cell);\n\t\tvar ignore = this.graph.model.getChildCount(parent) < 2;\n\t\t\n\t\tthis.guide.isStateIgnored = mxUtils.bind(this, function(state)\n\t\t{\n\t\t\tvar p = this.graph.model.getParent(state.cell);\n\t\t\t\n\t\t\treturn (!this.cloning && this.isCellMoving(state.cell)) ||\n\t\t\t\t(state.cell != (this.target || parent) && !ignore &&\n\t\t\t\t(this.target == null || this.graph.model.getChildCount(\n\t\t\t\tthis.target) >= 2) && p != (this.target || parent));  \n\t\t});\n\t}\n};\n\n/**\n * Function: addStates\n * \n * Adds the states for the given cell recursively to the given dictionary.\n */\nmxGraphHandler.prototype.addStates = function(cell, dict)\n{\n\tvar state = this.graph.view.getState(cell);\n\tvar count = 0;\n\t\n\tif (state != null && dict.get(cell) == null)\n\t{\n\t\tdict.put(cell, state);\n\t\tcount++;\n\t\t\n\t\tvar childCount = this.graph.model.getChildCount(cell);\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tcount += this.addStates(this.graph.model.getChildAt(cell, i), dict);\n\t\t}\n\t}\n\t\n\treturn count;\n};\n\n/**\n * Function: isCellMoving\n * \n * Returns true if the given cell is currently being moved.\n */\nmxGraphHandler.prototype.isCellMoving = function(cell)\n{\n\treturn this.allCells.get(cell) != null;\n};\n\n/**\n * Function: useGuidesForEvent\n * \n * Returns true if the guides should be used for the given <mxMouseEvent>.\n * This implementation returns <mxGuide.isEnabledForEvent>.\n */\nmxGraphHandler.prototype.useGuidesForEvent = function(me)\n{\n\treturn (this.guide != null) ? this.guide.isEnabledForEvent(me.getEvent()) : true;\n};\n\n\n/**\n * Function: snap\n * \n * Snaps the given vector to the grid and returns the given mxPoint instance.\n */\nmxGraphHandler.prototype.snap = function(vector)\n{\n\tvar scale = (this.scaleGrid) ? this.graph.view.scale : 1;\n\t\n\tvector.x = this.graph.snap(vector.x / scale) * scale;\n\tvector.y = this.graph.snap(vector.y / scale) * scale;\n\t\n\treturn vector;\n};\n\n/**\n * Function: getDelta\n * \n * Returns an <mxPoint> that represents the vector for moving the cells\n * for the given <mxMouseEvent>.\n */\nmxGraphHandler.prototype.getDelta = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar s = this.graph.view.scale;\n\t\n\treturn new mxPoint(this.roundLength((point.x - this.first.x) / s) * s,\n\t\tthis.roundLength((point.y - this.first.y) / s) * s);\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxGraphHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxGraphHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled vector. This uses Math.round.\n */\nmxGraphHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length * 2) / 2;\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting possible drop targets and updating the\n * preview.\n */\nmxGraphHandler.prototype.mouseMove = function(sender, me)\n{\n\tvar graph = this.graph;\n\n\tif (!me.isConsumed() && graph.isMouseDown && this.cell != null &&\n\t\tthis.first != null && this.bounds != null)\n\t{\n\t\t// Stops moving if a multi touch event is received\n\t\tif (mxEvent.isMultiTouchEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.reset();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar delta = this.getDelta(me);\n\t\tvar dx = delta.x;\n\t\tvar dy = delta.y;\n\t\tvar tol = graph.tolerance;\n\n\t\tif (this.shape != null || this.livePreviewActive || Math.abs(dx) > tol || Math.abs(dy) > tol)\n\t\t{\n\t\t\t// Highlight is used for highlighting drop targets\n\t\t\tif (this.highlight == null)\n\t\t\t{\n\t\t\t\tthis.highlight = new mxCellHighlight(this.graph,\n\t\t\t\t\tmxConstants.DROP_TARGET_COLOR, 3);\n\t\t\t}\n\n\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\tvar gridEnabled = graph.isGridEnabledEvent(me.getEvent());\n\t\t\tvar hideGuide = true;\n\t\t\tthis.cloning = clone;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\n\t\t\tvar target = null;\n\t\t\tvar cell = me.getCell();\n\n\t\t\tif (graph.isDropEnabled() && this.highlightEnabled)\n\t\t\t{\n\t\t\t\t// Contains a call to getCellAt to find the cell under the mouse\n\t\t\t\ttarget = graph.getDropTarget(this.cells, me.getEvent(), cell, clone);\n\t\t\t}\n\n\t\t\tvar state = graph.getView().getState(target);\n\t\t\tvar highlight = false;\n\t\t\t\n\t\t\tif (state != null && (graph.model.getParent(this.cell) != target || clone))\n\t\t\t{\n\t\t\t    if (this.target != target)\n\t\t\t    {\n\t\t\t\t    this.target = target;\n\t\t\t\t    this.setHighlightColor(mxConstants.DROP_TARGET_COLOR);\n\t\t\t\t}\n\t\t\t    \n\t\t\t    highlight = true;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.target = null;\n\n\t\t\t\tif (this.connectOnDrop && cell != null && this.cells.length == 1 &&\n\t\t\t\t\tgraph.getModel().isVertex(cell) && graph.isCellConnectable(cell))\n\t\t\t\t{\n\t\t\t\t\tstate = graph.getView().getState(cell);\n\t\t\t\t\t\n\t\t\t\t\tif (state != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar error = graph.getEdgeValidationError(null, this.cell, cell);\n\t\t\t\t\t\tvar color = (error == null) ?\n\t\t\t\t\t\t\tmxConstants.VALID_COLOR :\n\t\t\t\t\t\t\tmxConstants.INVALID_CONNECT_TARGET_COLOR;\n\t\t\t\t\t\tthis.setHighlightColor(color);\n\t\t\t\t\t\thighlight = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (state != null && highlight)\n\t\t\t{\n\t\t\t\tthis.highlight.highlight(state);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.highlight.hide();\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tif (this.livePreviewActive && clone)\n\t\t\t{\n\t\t\t\tthis.resetLivePreview();\n\t\t\t\tthis.livePreviewActive = false;\n\t\t\t}\n\t\t\telse if (this.maxLivePreview >= this.cellCount && !this.livePreviewActive && mxClient.IS_SVG)\n\t\t\t{\n\t\t\t\tthis.setHandlesVisibleForCells(this.cells, false);\n\t\t\t\tthis.livePreviewActive = true;\n\t\t\t\tthis.livePreviewUsed = true;\n\t\t\t}\n\t\t\telse if (!this.livePreviewUsed && this.shape == null)\n\t\t\t{\n\t\t\t\tthis.shape = this.createPreviewShape(this.bounds);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && this.useGuidesForEvent(me))\n\t\t\t{\n\t\t\t\tdelta = this.guide.move(this.bounds, new mxPoint(dx, dy), gridEnabled, clone);\n\t\t\t\thideGuide = false;\n\t\t\t\tdx = delta.x;\n\t\t\t\tdy = delta.y;\n\t\t\t}\n\t\t\telse if (gridEnabled)\n\t\t\t{\n\t\t\t\tvar trx = graph.getView().translate;\n\t\t\t\tvar scale = graph.getView().scale;\t\t\t\t\n\t\t\t\t\n\t\t\t\tvar tx = this.bounds.x - (graph.snap(this.bounds.x / scale - trx.x) + trx.x) * scale;\n\t\t\t\tvar ty = this.bounds.y - (graph.snap(this.bounds.y / scale - trx.y) + trx.y) * scale;\n\t\t\t\tvar v = this.snap(new mxPoint(dx, dy));\n\t\t\t\n\t\t\t\tdx = v.x - tx;\n\t\t\t\tdy = v.y - ty;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.guide != null && hideGuide)\n\t\t\t{\n\t\t\t\tthis.guide.hide();\n\t\t\t}\n\n\t\t\t// Constrained movement if shift key is pressed\n\t\t\tif (graph.isConstrainedEvent(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(dx) > Math.abs(dy))\n\t\t\t\t{\n\t\t\t\t\tdy = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.currentDx = dx;\n\t\t\tthis.currentDy = dy;\n\t\t\tthis.updatePreview();\n\t\t}\n\n\t\tthis.updateHint(me);\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_MOVE, me);\n\t\t\n\t\t// Cancels the bubbling of events to the container so\n\t\t// that the droptarget is not reset due to an mouseMove\n\t\t// fired on the container with no associated state.\n\t\tmxEvent.consume(me.getEvent());\n\t}\n\telse if ((this.isMoveEnabled() || this.isCloneEnabled()) && this.updateCursor && !me.isConsumed() &&\n\t\t(me.getState() != null || me.sourceState != null) && !graph.isMouseDown)\n\t{\n\t\tvar cursor = graph.getCursorForMouseEvent(me);\n\t\t\n\t\tif (cursor == null && graph.isEnabled() && graph.isCellMovable(me.getCell()))\n\t\t{\n\t\t\tif (graph.getModel().isEdge(me.getCell()))\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_EDGE;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcursor = mxConstants.CURSOR_MOVABLE_VERTEX;\n\t\t\t}\n\t\t}\n\n\t\t// Sets the cursor on the original source state under the mouse\n\t\t// instead of the event source state which can be the parent\n\t\tif (cursor != null && me.sourceState != null)\n\t\t{\n\t\t\tme.sourceState.setCursor(cursor);\n\t\t}\n\t}\n};\n\n/**\n * Function: updatePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreview = function(remote)\n{\n\tif (this.livePreviewUsed && !remote)\n\t{\n\t\tif (this.cells != null)\n\t\t{\n\t\t\tthis.updateLivePreview(this.currentDx - this.graph.panDx,\n\t\t\t\tthis.currentDy - this.graph.panDy);\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.updatePreviewShape();\n\t}\n};\n\n/**\n * Function: updatePreviewShape\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updatePreviewShape = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.bounds = new mxRectangle(Math.round(this.pBounds.x + this.currentDx - this.graph.panDx),\n\t\t\t\tMath.round(this.pBounds.y + this.currentDy - this.graph.panDy), this.pBounds.width, this.pBounds.height);\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Updates the bounds of the preview shape.\n */\nmxGraphHandler.prototype.updateLivePreview = function(dx, dy)\n{\n\tvar states = [];\n\t\n\tif (this.allCells != null)\n\t{\n\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t{\n\t\t\t// Saves current state\n\t\t\tvar tempState = state.clone();\n\t\t\tstates.push([state, tempState]);\n\n\t\t\t// Makes transparent for events to detect drop targets\n\t\t\tif (state.shape != null)\n\t\t\t{\n\t\t\t\tif (state.shape.originalPointerEvents == null)\n\t\t\t\t{\n\t\t\t\t\tstate.shape.originalPointerEvents = state.shape.pointerEvents;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstate.shape.pointerEvents = false;\n\n\t\t\t\tif (state.text != null && state.text.node != null)\n\t\t\t\t{\n\t\t\t\t\tvar node = state.text.node;\n\t\t\t\t\t\n\t\t\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.firstChild.firstChild.setAttribute('pointer-events', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if (node.ownerSVGElement != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('pointer-events', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.pointerEvents = 'none';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Temporarily changes position\n\t\t\tif (this.graph.model.isVertex(state.cell))\n\t\t\t{\n\t\t\t\tstate.x += dx;\n\t\t\t\tstate.y += dy;\n\n\t\t\t\t// Draws the live preview\n\t\t\t\tif (!this.cloning)\n\t\t\t\t{\n\t\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t\t\t\n\t\t\t\t\t// Forces redraw of connected edges after all states\n\t\t\t\t\t// have been updated but avoids update of state\n\t\t\t\t\tstate.view.invalidate(state.cell);\n\t\t\t\t\tstate.invalid = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Hides folding icon\n\t\t\t\tif (state.control != null && state.control.node != null)\n\t\t\t\t{\n\t\t\t\t\tstate.control.node.style.visibility = 'hidden';\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\t// Redraws connected edges\n\tvar s = this.graph.view.scale;\n\t\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tvar state = states[i][0];\n\t\t\n\t\tif (this.graph.model.isEdge(state.cell))\n\t\t{\n\t\t\tvar geometry = this.graph.getCellGeometry(state.cell);\n\t\t\tvar points = [];\n\t\t\t\n\t\t\tif (geometry != null && geometry.points != null)\n\t\t\t{\n\t\t\t\tfor (var j = 0; j < geometry.points.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (geometry.points[j] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpoints.push(new mxPoint(\n\t\t\t\t\t\t\tgeometry.points[j].x + dx / s,\n\t\t\t\t\t\t\tgeometry.points[j].y + dy / s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar source = state.visibleSourceState;\n\t\t\tvar target = state.visibleTargetState;\n\t\t\tvar pts = states[i][1].absolutePoints;\n\t\t\t\n\t\t\tif (source == null || !this.isCellMoving(source.cell))\n\t\t\t{\n\t\t\t\tvar pt0 = pts[0];\n\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(pt0.x + dx, pt0.y + dy), true);\n\t\t\t\tsource = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.view.updateFixedTerminalPoint(state, source, true,\n\t\t\t\t\tthis.graph.getConnectionConstraint(state, source, true));\n\t\t\t}\n\t\t\t\n\t\t\tif (target == null || !this.isCellMoving(target.cell))\n\t\t\t{\n\t\t\t\tvar ptn = pts[pts.length - 1];\n\t\t\t\tstate.setAbsoluteTerminalPoint(new mxPoint(ptn.x + dx, ptn.y + dy), false);\n\t\t\t\ttarget = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstate.view.updateFixedTerminalPoint(state, target, false,\n\t\t\t\t\tthis.graph.getConnectionConstraint(state, target, false));\n\t\t\t}\n\t\t\t\n\t\t\tstate.view.updatePoints(state, points, source, target);\n\t\t\tstate.view.updateFloatingTerminalPoints(state, source, target);\n\t\t\tstate.invalid = false;\n\t\t\t\t\t\n\t\t\t// Draws the live preview but avoids update of state\n\t\t\tif (!this.cloning)\n\t\t\t{\n\t\t\t\tstate.view.graph.cellRenderer.redraw(state, true);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.graph.view.validate();\n\tthis.redrawHandles(states);\n\tthis.resetPreviewStates(states);\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the preview shape for the given states array.\n */\nmxGraphHandler.prototype.redrawHandles = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tvar handler = this.graph.selectionCellsHandler.getHandler(states[i][0].cell);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\thandler.redraw(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: resetPreviewStates\n * \n * Resets the given preview states array.\n */\nmxGraphHandler.prototype.resetPreviewStates = function(states)\n{\n\tfor (var i = 0; i < states.length; i++)\n\t{\n\t\tstates[i][0].setState(states[i][1]);\n\t}\n};\n\n/**\n * Function: resetLivePreview\n * \n * Resets the livew preview.\n */\nmxGraphHandler.prototype.resetLivePreview = function()\n{\n\tif (this.allCells != null)\n\t{\n\t\tthis.allCells.visit(mxUtils.bind(this, function(key, state)\n\t\t{\n\t\t\t// Restores event handling\n\t\t\tif (state.shape != null && state.shape.originalPointerEvents != null)\n\t\t\t{\n\t\t\t\tstate.shape.pointerEvents = state.shape.originalPointerEvents;\n\t\t\t\tstate.shape.originalPointerEvents = null;\n\t\t\t\t\n\t\t\t\t// Forces a repaint event if not moved\n\t\t\t\tstate.shape.bounds = null;\n\n\t\t\t\tif (state.text != null && state.text.node != null)\n\t\t\t\t{\n\t\t\t\t\tvar node = state.text.node;\n\t\t\t\t\t\n\t\t\t\t\tif (node.firstChild != null && node.firstChild.firstChild != null &&\n\t\t\t\t\t\tnode.firstChild.firstChild.nodeName == 'foreignObject')\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.firstChild.firstChild.setAttribute('pointer-events', 'all');\n\t\t\t\t\t}\n\t\t\t\t\telse if (node.ownerSVGElement != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.removeAttribute('pointer-events');\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.style.pointerEvents = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Shows folding icon\n\t\t\tif (state.control != null && state.control.node != null)\n\t\t\t{\n\t\t\t\tstate.control.node.style.visibility = '';\n\t\t\t}\n\t\t\t\n\t\t\t// Forces repaint of state and connected edges\n\t\t\tstate.view.invalidate(state.cell);\n\t\t}));\n\n\t\t// Repaints all invalid states\n\t\tthis.graph.view.validate();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.setHandlesVisibleForCells = function(cells, visible)\n{\n\tfor (var i = 0; i < cells.length; i++)\n\t{\n\t\tvar cell = cells[i];\n\n\t\tvar handler = this.graph.selectionCellsHandler.getHandler(cell);\n\t\t\n\t\tif (handler != null)\n\t\t{\n\t\t\thandler.setHandlesVisible(visible);\n\t\t\t\n\t\t\tif (visible)\n\t\t\t{\n\t\t\t\thandler.redraw();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxGraphHandler.prototype.setHighlightColor = function(color)\n{\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.setHighlightColor(color);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the selection cells.\n */\nmxGraphHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed())\n\t{\n\t\tif (this.livePreviewUsed)\n\t\t{\n\t\t\tthis.resetLivePreview();\n\t\t}\n\t\t\n\t\tif (this.cell != null && this.first != null && (this.shape != null || this.livePreviewUsed) &&\n\t\t\tthis.currentDx != null && this.currentDy != null)\n\t\t{\n\t\t\tvar graph = this.graph;\n\t\t\tvar cell = me.getCell();\n\t\t\t\n\t\t\tif (this.connectOnDrop && this.target == null && cell != null && graph.getModel().isVertex(cell) &&\n\t\t\t\tgraph.isCellConnectable(cell) && graph.isEdgeValid(null, this.cell, cell))\n\t\t\t{\n\t\t\t\tgraph.connectionHandler.connect(this.cell, cell, me.getEvent());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar clone = graph.isCloneEvent(me.getEvent()) && graph.isCellsCloneable() && this.isCloneEnabled();\n\t\t\t\tvar scale = graph.getView().scale;\n\t\t\t\tvar dx = this.roundLength(this.currentDx / scale);\n\t\t\t\tvar dy = this.roundLength(this.currentDy / scale);\n\t\t\t\tvar target = this.target;\n\t\t\t\t\n\t\t\t\tif (graph.isSplitEnabled() && graph.isSplitTarget(target, this.cells, me.getEvent()))\n\t\t\t\t{\n\t\t\t\t\tgraph.splitEdge(target, this.cells, null, dx, dy);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.moveCells(this.cells, dx, dy, clone, this.target, me.getEvent());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.isSelectEnabled() && this.delayedSelection && this.cell != null)\n\t\t{\n\t\t\tthis.selectDelayed(me);\n\t\t}\n\t}\n\n\t// Consumes the event if a cell was initially clicked\n\tif (this.cellWasClicked)\n\t{\n\t\tthis.consumeMouseEvent(mxEvent.MOUSE_UP, me);\n\t}\n\n\tthis.reset();\n};\n\n/**\n * Function: selectDelayed\n * \n * Implements the delayed selection for the given mouse event.\n */\nmxGraphHandler.prototype.selectDelayed = function(me)\n{\n\tif (!this.graph.isCellSelected(this.cell) || !this.graph.popupMenuHandler.isPopupTrigger(me))\n\t{\n\t\tthis.graph.selectCellForEvent(this.cell, me.getEvent());\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxGraphHandler.prototype.reset = function()\n{\n\tif (this.livePreviewUsed)\n\t{\n\t\tthis.resetLivePreview();\n\t\tthis.setHandlesVisibleForCells(this.cells, true);\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n\n\tthis.delayedSelection = false;\n\tthis.livePreviewActive = null;\n\tthis.livePreviewUsed = null;\n\tthis.cellWasClicked = false;\n\tthis.currentDx = null;\n\tthis.currentDy = null;\n\tthis.cellCount = null;\n\tthis.cloning = false;\n\tthis.allCells = null;\n\tthis.guides = null;\n\tthis.target = null;\n\tthis.first = null;\n\tthis.cells = null;\n\tthis.cell = null;\n};\n\n/**\n * Function: shouldRemoveCellsFromParent\n * \n * Returns true if the given cells should be removed from the parent for the specified\n * mousereleased event.\n */\nmxGraphHandler.prototype.shouldRemoveCellsFromParent = function(parent, cells, evt)\n{\n\tif (this.graph.getModel().isVertex(parent))\n\t{\n\t\tvar pState = this.graph.getView().getState(parent);\n\t\t\n\t\tif (pState != null)\n\t\t{\n\t\t\tvar pt = mxUtils.convertPoint(this.graph.container,\n\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(pState.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\t\n\t\t\tif (alpha != 0)\n\t\t\t{\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\tvar cx = new mxPoint(pState.getCenterX(), pState.getCenterY());\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, cx);\n\t\t\t}\n\t\t\n\t\t\treturn !mxUtils.contains(pState, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.moveCells = function(cells, dx, dy, clone, target, evt)\n{\n\tif (clone)\n\t{\n\t\tcells = this.graph.getCloneableCells(cells);\n\t}\n\t\n\t// Removes cells from parent\n\tvar parent = this.graph.getModel().getParent(this.cell);\n\t\n\tif (target == null && this.isRemoveCellsFromParent() &&\n\t\tthis.shouldRemoveCellsFromParent(parent, cells, evt))\n\t{\n\t\ttarget = this.graph.getDefaultParent();\n\t}\n\t\n\t// Cloning into locked cells is not allowed\n\tclone = clone && !this.graph.isCellLocked(target || this.graph.getDefaultParent());\n\n\tthis.graph.getModel().beginUpdate();\n\ttry\n\t{\n\t\tvar parents = [];\n\t\t\n\t\t// Removes parent if all child cells are removed\n\t\tif (!clone && target != null && this.removeEmptyParents)\n\t\t{\n\t\t\t// Collects all non-selected parents\n\t\t\tvar dict = new mxDictionary();\n\t\t\t\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tdict.put(cells[i], true);\n\t\t\t}\n\t\t\t\n\t\t\t// LATER: Recurse up the cell hierarchy\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t{\n\t\t\t\tvar par = this.graph.model.getParent(cells[i]);\n\n\t\t\t\tif (par != null && !dict.get(par))\n\t\t\t\t{\n\t\t\t\t\tdict.put(par, true);\n\t\t\t\t\tparents.push(par);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Passes all selected cells in order to correctly clone or move into\n\t\t// the target cell. The method checks for each cell if its movable.\n\t\tcells = this.graph.moveCells(cells, dx - this.graph.panDx / this.graph.view.scale,\n\t\t\t\tdy - this.graph.panDy / this.graph.view.scale, clone, target, evt);\n\n\t\t// Removes parent if all child cells are removed\n\t\tvar temp = [];\n\t\t\n\t\tfor (var i = 0; i < parents.length; i++)\n\t\t{\n\t\t\tif (this.shouldRemoveParent(parents[i]))\n\t\t\t{\n\t\t\t\ttemp.push(parents[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.graph.removeCells(temp, false);\n\t}\n\tfinally\n\t{\n\t\tthis.graph.getModel().endUpdate();\n\t}\n\n\t// Selects the new cells if cells have been cloned\n\tif (clone)\n\t{\n\t\tthis.graph.setSelectionCells(cells);\n\t}\n\n\tif (this.isSelectEnabled() && this.scrollOnMove)\n\t{\n\t\tthis.graph.scrollCellToVisible(cells[0]);\n\t}\n};\n\n/**\n * Function: moveCells\n * \n * Moves the given cells by the specified amount.\n */\nmxGraphHandler.prototype.shouldRemoveParent = function(parent)\n{\n\tvar state = this.graph.view.getState(parent);\n\t\n\tif (state != null && (this.graph.model.isEdge(state.cell) || this.graph.model.isVertex(state.cell)) &&\n\t\tthis.graph.isCellDeletable(state.cell) && this.graph.model.getChildCount(state.cell) == 0)\n\t{\n\t\tvar stroke = mxUtils.getValue(state.style, mxConstants.STYLE_STROKECOLOR, mxConstants.NONE);\n\t\tvar fill = mxUtils.getValue(state.style, mxConstants.STYLE_FILLCOLOR, mxConstants.NONE);\n\t\t\n\t\treturn stroke == mxConstants.NONE && fill == mxConstants.NONE;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: destroyShapes\n * \n * Destroy the preview and highlight shapes.\n */\nmxGraphHandler.prototype.destroyShapes = function()\n{\n\t// Destroys the preview dashed rectangle\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.guide != null)\n\t{\n\t\tthis.guide.destroy();\n\t\tthis.guide = null;\n\t}\n\t\n\t// Destroys the drop target highlight\n\tif (this.highlight != null)\n\t{\n\t\tthis.highlight.destroy();\n\t\tthis.highlight = null;\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxGraphHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.panHandler);\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n\t\n\tthis.destroyShapes();\n\tthis.removeHint();\n};\n\n__mxOutput.mxGraphHandler = typeof mxGraphHandler !== 'undefined' ? mxGraphHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPanningHandler\n * \n * Event handler that pans and creates popupmenus. To use the left\n * mousebutton for panning without interfering with cell moving and\n * resizing, use <isUseLeftButton> and <isIgnoreCell>. For grid size\n * steps while panning, use <useGrid>. This handler is built-into\n * <mxGraph.panningHandler> and enabled using <mxGraph.setPanning>.\n * \n * Constructor: mxPanningHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>\n * and pans the graph.\n *\n * Event: mxEvent.PAN_START\n *\n * Fires when the panning handler changes its <active> state to true. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN\n *\n * Fires while handle is processing events. The <code>event</code> property contains\n * the corresponding <mxMouseEvent>.\n *\n * Event: mxEvent.PAN_END\n *\n * Fires when the panning handler changes its <active> state to false. The\n * <code>event</code> property contains the corresponding <mxMouseEvent>.\n */\nfunction mxPanningHandler(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force panning event\n\t\tthis.forcePanningHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForcePanningEvent(me))\n\t\t\t{\n\t\t\t\tthis.start(me);\n\t\t\t\tthis.active = true;\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forcePanningHandler);\n\t\t\n\t\t// Handles pinch gestures\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.isPinchEnabled())\n\t\t\t{\n\t\t\t\tvar evt = eo.getProperty('event');\n\t\t\t\t\n\t\t\t\tif (!mxEvent.isConsumed(evt) && evt.type == 'gesturestart')\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\t\t// Forces start of panning when pinch gesture starts\n\t\t\t\t\tif (!this.active && this.mouseDownEvent != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.start(this.mouseDownEvent);\n\t\t\t\t\t\tthis.mouseDownEvent = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (evt.type == 'gestureend' && this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tthis.initialScale = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.initialScale != null)\n\t\t\t\t{\n\t\t\t\t\tvar value = Math.round(this.initialScale * evt.scale * 100) / 100;\n\t\t\t\t\t\n\t\t\t\t\tif (this.minScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.max(this.minScale, value);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this.maxScale != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue = Math.min(this.maxScale, value);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (this.graph.view.scale != value)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.graph.zoomTo(value);\n\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.mouseUpListener = mxUtils.bind(this, function()\n\t\t{\n\t\t    \tif (this.active)\n\t\t    \t{\n\t\t    \t\tthis.reset();\n\t\t    \t}\n\t\t});\n\t\t\n\t\t// Stops scrolling on every mouseup anywhere in the document\n\t\tmxEvent.addListener(document, 'mouseup', this.mouseUpListener);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxPanningHandler.prototype = new mxEventSource();\nmxPanningHandler.prototype.constructor = mxPanningHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPanningHandler.prototype.graph = null;\n\n/**\n * Variable: useLeftButtonForPanning\n * \n * Specifies if panning should be active for the left mouse button.\n * Setting this to true may conflict with <mxRubberband>. Default is false.\n */\nmxPanningHandler.prototype.useLeftButtonForPanning = false;\n\n/**\n * Variable: usePopupTrigger\n * \n * Specifies if <mxEvent.isPopupTrigger> should also be used for panning.\n */\nmxPanningHandler.prototype.usePopupTrigger = true;\n\n/**\n * Variable: ignoreCell\n * \n * Specifies if panning should be active even if there is a cell under the\n * mousepointer. Default is false.\n */\nmxPanningHandler.prototype.ignoreCell = false;\n\n/**\n * Variable: previewEnabled\n * \n * Specifies if the panning should be previewed. Default is true.\n */\nmxPanningHandler.prototype.previewEnabled = true;\n\n/**\n * Variable: useGrid\n * \n * Specifies if the panning steps should be aligned to the grid size.\n * Default is false.\n */\nmxPanningHandler.prototype.useGrid = false;\n\n/**\n * Variable: panningEnabled\n * \n * Specifies if panning should be enabled. Default is true.\n */\nmxPanningHandler.prototype.panningEnabled = true;\n\n/**\n * Variable: pinchEnabled\n * \n * Specifies if pinch gestures should be handled as zoom. Default is true.\n */\nmxPanningHandler.prototype.pinchEnabled = true;\n\n/**\n * Variable: maxScale\n * \n * Specifies the maximum scale. Default is 8.\n */\nmxPanningHandler.prototype.maxScale = 8;\n\n/**\n * Variable: minScale\n * \n * Specifies the minimum scale. Default is 0.01.\n */\nmxPanningHandler.prototype.minScale = 0.01;\n\n/**\n * Variable: dx\n * \n * Holds the current horizontal offset.\n */\nmxPanningHandler.prototype.dx = null;\n\n/**\n * Variable: dy\n * \n * Holds the current vertical offset.\n */\nmxPanningHandler.prototype.dy = null;\n\n/**\n * Variable: startX\n * \n * Holds the x-coordinate of the start point.\n */\nmxPanningHandler.prototype.startX = 0;\n\n/**\n * Variable: startY\n * \n * Holds the y-coordinate of the start point.\n */\nmxPanningHandler.prototype.startY = 0;\n\n/**\n * Function: isActive\n * \n * Returns true if the handler is currently active.\n */\nmxPanningHandler.prototype.isActive = function()\n{\n\treturn this.active || this.initialScale != null;\n};\n\n/**\n * Function: isPanningEnabled\n * \n * Returns <panningEnabled>.\n */\nmxPanningHandler.prototype.isPanningEnabled = function()\n{\n\treturn this.panningEnabled;\n};\n\n/**\n * Function: setPanningEnabled\n * \n * Sets <panningEnabled>.\n */\nmxPanningHandler.prototype.setPanningEnabled = function(value)\n{\n\tthis.panningEnabled = value;\n};\n\n/**\n * Function: isPinchEnabled\n * \n * Returns <pinchEnabled>.\n */\nmxPanningHandler.prototype.isPinchEnabled = function()\n{\n\treturn this.pinchEnabled;\n};\n\n/**\n * Function: setPinchEnabled\n * \n * Sets <pinchEnabled>.\n */\nmxPanningHandler.prototype.setPinchEnabled = function(value)\n{\n\tthis.pinchEnabled = value;\n};\n\n/**\n * Function: isPanningTrigger\n * \n * Returns true if the given event is a panning trigger for the optional\n * given cell. This returns true if control-shift is pressed or if\n * <usePopupTrigger> is true and the event is a popup trigger.\n */\nmxPanningHandler.prototype.isPanningTrigger = function(me)\n{\n\tvar evt = me.getEvent();\n\t\n\treturn (this.useLeftButtonForPanning && me.getState() == null &&\n\t\t\tmxEvent.isLeftMouseButton(evt)) || (mxEvent.isControlDown(evt) &&\n\t\t\tmxEvent.isShiftDown(evt)) || (this.usePopupTrigger && mxEvent.isPopupTrigger(evt));\n};\n\n/**\n * Function: isForcePanningEvent\n * \n * Returns true if the given <mxMouseEvent> should start panning. This\n * implementation always returns true if <ignoreCell> is true or for\n * multi touch events.\n */\nmxPanningHandler.prototype.isForcePanningEvent = function(me)\n{\n\treturn this.ignoreCell || mxEvent.isMultiTouchEvent(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPanningHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownEvent = me;\n\t\n\tif (!me.isConsumed() && this.isPanningEnabled() && !this.active && this.isPanningTrigger(me))\n\t{\n\t\tthis.start(me);\n\t\tthis.consumePanningTrigger(me);\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts panning at the given event.\n */\nmxPanningHandler.prototype.start = function(me)\n{\n\tthis.dx0 = -this.graph.container.scrollLeft;\n\tthis.dy0 = -this.graph.container.scrollTop;\n\n\t// Stores the location of the trigger event\n\tthis.startX = me.getX();\n\tthis.startY = me.getY();\n\tthis.dx = null;\n\tthis.dy = null;\n\t\n\tthis.panningTrigger = true;\n};\n\n/**\n * Function: consumePanningTrigger\n * \n * Consumes the given <mxMouseEvent> if it was a panning trigger in\n * <mouseDown>. The default is to invoke <mxMouseEvent.consume>. Note that this\n * will block any further event processing. If you haven't disabled built-in\n * context menus and require immediate selection of the cell on mouseDown in\n * Safari and/or on the Mac, then use the following code:\n * \n * (code)\n * mxPanningHandler.prototype.consumePanningTrigger = function(me)\n * {\n *   if (me.evt.preventDefault)\n *   {\n *     me.evt.preventDefault();\n *   }\n *   \n *   // Stops event processing in IE\n *   me.evt.returnValue = false;\n *   \n *   // Sets local consumed state\n *   if (!mxClient.IS_SF && !mxClient.IS_MAC)\n *   {\n *     me.consumed = true;\n *   }\n * };\n * (end)\n */\nmxPanningHandler.prototype.consumePanningTrigger = function(me)\n{\n\tme.consume();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPanningHandler.prototype.mouseMove = function(sender, me)\n{\n\tthis.dx = me.getX() - this.startX;\n\tthis.dy = me.getY() - this.startY;\n\t\n\tif (this.active)\n\t{\n\t\tif (this.previewEnabled)\n\t\t{\n\t\t\t// Applies the grid to the panning steps\n\t\t\tif (this.useGrid)\n\t\t\t{\n\t\t\t\tthis.dx = this.graph.snap(this.dx);\n\t\t\t\tthis.dy = this.graph.snap(this.dy);\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.panGraph(this.dx + this.dx0, this.dy + this.dy0);\n\t\t}\n\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN, 'event', me));\n\t}\n\telse if (this.panningTrigger)\n\t{\n\t\tvar tmp = this.active;\n\n\t\t// Panning is activated only if the mouse is moved\n\t\t// beyond the graph tolerance\n\t\tthis.active = Math.abs(this.dx) > this.graph.tolerance || Math.abs(this.dy) > this.graph.tolerance;\n\n\t\tif (!tmp && this.active)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_START, 'event', me));\n\t\t}\n\t}\n\t\n\tif (this.active || this.panningTrigger)\n\t{\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.active)\n\t{\n\t\tif (this.dx != null && this.dy != null)\n\t\t{\n\t\t\t// Ignores if scrollbars have been used for panning\n\t\t\tif (!this.graph.useScrollbarsForPanning || !mxUtils.hasScrollbars(this.graph.container))\n\t\t\t{\n\t\t\t\tvar scale = this.graph.getView().scale;\n\t\t\t\tvar t = this.graph.getView().translate;\n\t\t\t\tthis.graph.panGraph(0, 0);\n\t\t\t\tthis.panGraph(t.x + this.dx / scale, t.y + this.dy / scale);\n\t\t\t}\n\t\t\t\n\t\t\tme.consume();\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.PAN_END, 'event', me));\n\t}\n\t\n\tthis.reset();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPanningHandler.prototype.reset = function()\n{\n\tthis.panningTrigger = false;\n\tthis.mouseDownEvent = null;\n\tthis.active = false;\n\tthis.dx = null;\n\tthis.dy = null;\n};\n\n/**\n * Function: panGraph\n * \n * Pans <graph> by the given amount.\n */\nmxPanningHandler.prototype.panGraph = function(dx, dy)\n{\n\tthis.graph.getView().setTranslate(dx, dy);\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPanningHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.forcePanningHandler);\n\tthis.graph.removeListener(this.gestureHandler);\n\tmxEvent.removeListener(document, 'mouseup', this.mouseUpListener);\n};\n\n__mxOutput.mxPanningHandler = typeof mxPanningHandler !== 'undefined' ? mxPanningHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxPopupMenuHandler\n * \n * Event handler that creates popupmenus.\n * \n * Constructor: mxPopupMenuHandler\n * \n * Constructs an event handler that creates a <mxPopupMenu>.\n */\nfunction mxPopupMenuHandler(graph, factoryMethod)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.graph.addMouseListener(this);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\tthis.init();\n\t}\n};\n\n/**\n * Extends mxPopupMenu.\n */\nmxPopupMenuHandler.prototype = new mxPopupMenu();\nmxPopupMenuHandler.prototype.constructor = mxPopupMenuHandler;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxPopupMenuHandler.prototype.graph = null;\n\n/**\n * Variable: selectOnPopup\n * \n * Specifies if cells should be selected if a popupmenu is displayed for\n * them. Default is true.\n */\nmxPopupMenuHandler.prototype.selectOnPopup = true;\n\n/**\n * Variable: clearSelectionOnBackground\n * \n * Specifies if cells should be deselected if a popupmenu is displayed for\n * the diagram background. Default is true.\n */\nmxPopupMenuHandler.prototype.clearSelectionOnBackground = true;\n\n/**\n * Variable: triggerX\n * \n * X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerX = null;\n\n/**\n * Variable: triggerY\n * \n * Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.triggerY = null;\n\n/**\n * Variable: screenX\n * \n * Screen X-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenX = null;\n\n/**\n * Variable: screenY\n * \n * Screen Y-coordinate of the mouse down event.\n */\nmxPopupMenuHandler.prototype.screenY = null;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxPopupMenuHandler.prototype.init = function()\n{\n\t// Supercall\n\tmxPopupMenu.prototype.init.apply(this);\n\n\t// Hides the tooltip if the mouse is over\n\t// the context menu\n\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.graph.tooltipHandler.hide();\n\t}));\n};\n\n/**\n * Function: isSelectOnPopup\n * \n * Hook for returning if a cell should be selected for a given <mxMouseEvent>.\n * This implementation returns <selectOnPopup>.\n */\nmxPopupMenuHandler.prototype.isSelectOnPopup = function(me)\n{\n\treturn this.selectOnPopup;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating the panning. By consuming the event all\n * subsequent events of the gesture are redirected to this handler.\n */\nmxPopupMenuHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.isEnabled() && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\t// Hides the popupmenu if is is being displayed\n\t\tthis.hideMenu();\n\t\tthis.triggerX = me.getGraphX();\n\t\tthis.triggerY = me.getGraphY();\n\t\tthis.screenX = mxEvent.getMainEvent(me.getEvent()).screenX;\n\t\tthis.screenY = mxEvent.getMainEvent(me.getEvent()).screenY;\n\t\tthis.popupTrigger = this.isPopupTrigger(me);\n\t\tthis.inTolerance = true;\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the panning on the graph.\n */\nmxPopupMenuHandler.prototype.mouseMove = function(sender, me)\n{\n\t// Popup trigger may change on mouseUp so ignore it\n\tif (this.inTolerance && this.screenX != null && this.screenY != null)\n\t{\n\t\tif (Math.abs(mxEvent.getMainEvent(me.getEvent()).screenX - this.screenX) > this.graph.tolerance ||\n\t\t\tMath.abs(mxEvent.getMainEvent(me.getEvent()).screenY - this.screenY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by setting the translation on the view or showing the\n * popupmenu.\n */\nmxPopupMenuHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.popupTrigger && this.inTolerance && this.triggerX != null && this.triggerY != null)\n\t{\n\t\tvar cell = this.getCellForPopupEvent(me);\n\n\t\t// Selects the cell for which the context menu is being displayed\n\t\tif (this.graph.isEnabled() && this.isSelectOnPopup(me) &&\n\t\t\tcell != null && !this.graph.isCellSelected(cell))\n\t\t{\n\t\t\tthis.graph.setSelectionCell(cell);\n\t\t}\n\t\telse if (this.clearSelectionOnBackground && cell == null)\n\t\t{\n\t\t\tthis.graph.clearSelection();\n\t\t}\n\t\t\n\t\t// Hides the tooltip if there is one\n\t\tthis.graph.tooltipHandler.hide();\n\n\t\t// Menu is shifted by 1 pixel so that the mouse up event\n\t\t// is routed via the underlying shape instead of the DIV\n\t\tvar origin = mxUtils.getScrollOrigin();\n\t\tthis.popup(me.getX() + origin.x + 1, me.getY() + origin.y + 1, cell, me.getEvent());\n\t\tme.consume();\n\t}\n\t\n\tthis.popupTrigger = false;\n\tthis.inTolerance = false;\n};\n\n/**\n * Function: getCellForPopupEvent\n * \n * Hook to return the cell for the mouse up popup trigger handling.\n */\nmxPopupMenuHandler.prototype.getCellForPopupEvent = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxPopupMenuHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\tthis.graph.removeListener(this.gestureHandler);\n\t\n\t// Supercall\n\tmxPopupMenu.prototype.destroy.apply(this);\n};\n\n__mxOutput.mxPopupMenuHandler = typeof mxPopupMenuHandler !== 'undefined' ? mxPopupMenuHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellMarker\n * \n * A helper class to process mouse locations and highlight cells.\n * \n * Helper class to highlight cells. To add a cell marker to an existing graph\n * for highlighting all cells, the following code is used:\n * \n * (code)\n * var marker = new mxCellMarker(graph);\n * graph.addMouseListener({\n *   mouseDown: function() {},\n *   mouseMove: function(sender, me)\n *   {\n *     marker.process(me);\n *   },\n *   mouseUp: function() {}\n * });\n * (end)\n *\n * Event: mxEvent.MARK\n * \n * Fires after a cell has been marked or unmarked. The <code>state</code>\n * property contains the marked <mxCellState> or null if no state is marked.\n * \n * Constructor: mxCellMarker\n * \n * Constructs a new cell marker.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * validColor - Optional marker color for valid states. Default is\n * <mxConstants.DEFAULT_VALID_COLOR>.\n * invalidColor - Optional marker color for invalid states. Default is\n * <mxConstants.DEFAULT_INVALID_COLOR>.\n * hotspot - Portion of the width and hight where a state intersects a\n * given coordinate pair. A value of 0 means always highlight. Default is\n * <mxConstants.DEFAULT_HOTSPOT>.\n */\nfunction mxCellMarker(graph, validColor, invalidColor, hotspot)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.validColor = (validColor != null) ? validColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.invalidColor = (invalidColor != null) ? invalidColor : mxConstants.DEFAULT_INVALID_COLOR;\n\t\tthis.hotspot = (hotspot != null) ? hotspot : mxConstants.DEFAULT_HOTSPOT;\n\t\t\n\t\tthis.highlight = new mxCellHighlight(graph);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxCellMarker, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellMarker.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if the marker is enabled. Default is true.\n */\nmxCellMarker.prototype.enabled = true;\n\n/**\n * Variable: hotspot\n * \n * Specifies the portion of the width and height that should trigger\n * a highlight. The area around the center of the cell to be marked is used\n * as the hotspot. Possible values are between 0 and 1. Default is\n * mxConstants.DEFAULT_HOTSPOT.\n */\nmxCellMarker.prototype.hotspot = mxConstants.DEFAULT_HOTSPOT; \n\n/**\n * Variable: hotspotEnabled\n * \n * Specifies if the hotspot is enabled. Default is false.\n */\nmxCellMarker.prototype.hotspotEnabled = false;\n\n/**\n * Variable: validColor\n * \n * Holds the valid marker color.\n */\nmxCellMarker.prototype.validColor = null;\n\n/**\n * Variable: invalidColor\n * \n * Holds the invalid marker color.\n */\nmxCellMarker.prototype.invalidColor = null;\n\n/**\n * Variable: currentColor\n * \n * Holds the current marker color.\n */\nmxCellMarker.prototype.currentColor = null;\n\n/**\n * Variable: validState\n * \n * Holds the marked <mxCellState> if it is valid.\n */\nmxCellMarker.prototype.validState = null; \n\n/**\n * Variable: markedState\n * \n * Holds the marked <mxCellState>.\n */\nmxCellMarker.prototype.markedState = null;\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxCellMarker.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxCellMarker.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setHotspot\n * \n * Sets the <hotspot>.\n */\nmxCellMarker.prototype.setHotspot = function(hotspot)\n{\n\tthis.hotspot = hotspot;\n};\n\n/**\n * Function: getHotspot\n * \n * Returns the <hotspot>.\n */\nmxCellMarker.prototype.getHotspot = function()\n{\n\treturn this.hotspot;\n};\n\n/**\n * Function: setHotspotEnabled\n * \n * Specifies whether the hotspot should be used in <intersects>.\n */\nmxCellMarker.prototype.setHotspotEnabled = function(enabled)\n{\n\tthis.hotspotEnabled = enabled;\n};\n\n/**\n * Function: isHotspotEnabled\n * \n * Returns true if hotspot is used in <intersects>.\n */\nmxCellMarker.prototype.isHotspotEnabled = function()\n{\n\treturn this.hotspotEnabled;\n};\n\n/**\n * Function: hasValidState\n * \n * Returns true if <validState> is not null.\n */\nmxCellMarker.prototype.hasValidState = function()\n{\n\treturn this.validState != null;\n};\n\n/**\n * Function: getValidState\n * \n * Returns the <validState>.\n */\nmxCellMarker.prototype.getValidState = function()\n{\n\treturn this.validState;\n};\n\n/**\n * Function: getMarkedState\n * \n * Returns the <markedState>.\n */\nmxCellMarker.prototype.getMarkedState = function()\n{\n\treturn this.markedState;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the cell marker.\n */\nmxCellMarker.prototype.reset = function()\n{\n\tthis.validState = null;\n\t\n\tif (this.markedState != null)\n\t{\n\t\tthis.markedState = null;\n\t\tthis.unmark();\n\t}\n};\n\n/**\n * Function: process\n * \n * Processes the given event and cell and marks the state returned by\n * <getState> with the color returned by <getMarkerColor>. If the\n * markerColor is not null, then the state is stored in <markedState>. If\n * <isValidState> returns true, then the state is stored in <validState>\n * regardless of the marker color. The state is returned regardless of the\n * marker color and valid state. \n */\nmxCellMarker.prototype.process = function(me)\n{\n\tvar state = null;\n\t\n\tif (this.isEnabled())\n\t{\n\t\tstate = this.getState(me);\n\t\tthis.setCurrentState(state, me);\n\t}\n\t\n\treturn state;\n};\n\n/**\n * Function: setCurrentState\n * \n * Sets and marks the current valid state.\n */\nmxCellMarker.prototype.setCurrentState = function(state, me, color)\n{\n\tvar isValid = (state != null) ? this.isValidState(state) : false;\n\tcolor = (color != null) ? color : this.getMarkerColor(me.getEvent(), state, isValid);\n\t\n\tif (isValid)\n\t{\n\t\tthis.validState = state;\n\t}\n\telse\n\t{\n\t\tthis.validState = null;\n\t}\n\t\n\tif (state != this.markedState || color != this.currentColor)\n\t{\n\t\tthis.currentColor = color;\n\t\t\n\t\tif (state != null && this.currentColor != null)\n\t\t{\n\t\t\tthis.markedState = state;\n\t\t\tthis.mark();\t\t\n\t\t}\n\t\telse if (this.markedState != null)\n\t\t{\n\t\t\tthis.markedState = null;\n\t\t\tthis.unmark();\n\t\t}\n\t}\n};\n\n/**\n * Function: markCell\n * \n * Marks the given cell using the given color, or <validColor> if no color is specified.\n */\nmxCellMarker.prototype.markCell = function(cell, color)\n{\n\tvar state = this.graph.getView().getState(cell);\n\t\n\tif (state != null)\n\t{\n\t\tthis.currentColor = (color != null) ? color : this.validColor;\n\t\tthis.markedState = state;\n\t\tthis.mark();\n\t}\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellMarker.prototype.mark = function()\n{\n\tthis.highlight.setHighlightColor(this.currentColor);\n\tthis.highlight.highlight(this.markedState);\n\tthis.fireEvent(new mxEventObject(mxEvent.MARK, 'state', this.markedState));\n};\n\n/**\n * Function: unmark\n * \n * Hides the marker and fires a <mark> event.\n */\nmxCellMarker.prototype.unmark = function()\n{\n\tthis.mark();\n};\n\n/**\n * Function: isValidState\n * \n * Returns true if the given <mxCellState> is a valid state. If this\n * returns true, then the state is stored in <validState>. The return value\n * of this method is used as the argument for <getMarkerColor>.\n */\nmxCellMarker.prototype.isValidState = function(state)\n{\n\treturn true;\n};\n\n/**\n * Function: getMarkerColor\n * \n * Returns the valid- or invalidColor depending on the value of isValid.\n * The given <mxCellState> is ignored by this implementation.\n */\nmxCellMarker.prototype.getMarkerColor = function(evt, state, isValid)\n{\n\treturn (isValid) ? this.validColor : this.invalidColor;\n};\n\n/**\n * Function: getState\n * \n * Uses <getCell>, <getStateToMark> and <intersects> to return the\n * <mxCellState> for the given <mxMouseEvent>.\n */\nmxCellMarker.prototype.getState = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar cell = this.getCell(me);\n\tvar state = this.getStateToMark(view.getState(cell));\n\n\treturn (state != null && this.intersects(state, me)) ? state : null;\n};\n\n/**\n * Function: getCell\n * \n * Returns the <mxCell> for the given event and cell. This returns the\n * given cell.\n */\nmxCellMarker.prototype.getCell = function(me)\n{\n\treturn me.getCell();\n};\n\n/**\n * Function: getStateToMark\n * \n * Returns the <mxCellState> to be marked for the given <mxCellState> under\n * the mouse. This returns the given state.\n */\nmxCellMarker.prototype.getStateToMark = function(state)\n{\n\treturn state;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given coordinate pair intersects the given state.\n * This returns true if the <hotspot> is 0 or the coordinates are inside\n * the hotspot for the given cell state.\n */\nmxCellMarker.prototype.intersects = function(state, me)\n{\n\tif (this.hotspotEnabled)\n\t{\n\t\treturn mxUtils.intersectsHotspot(state, me.getGraphX(), me.getGraphY(),\n\t\t\tthis.hotspot, mxConstants.MIN_HOTSPOT_SIZE,\n\t\t\tmxConstants.MAX_HOTSPOT_SIZE);\n\t}\n\t\n\treturn true;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellMarker.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getModel().removeListener(this.resetHandler);\n\tthis.highlight.destroy();\n};\n\n__mxOutput.mxCellMarker = typeof mxCellMarker !== 'undefined' ? mxCellMarker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxSelectionCellsHandler\n * \n * An event handler that manages cell handlers and invokes their mouse event\n * processing functions.\n * \n * Group: Events\n * \n * Event: mxEvent.ADD\n * \n * Fires if a cell has been added to the selection. The <code>state</code>\n * property contains the <mxCellState> that has been added.\n * \n * Event: mxEvent.REMOVE\n * \n * Fires if a cell has been remove from the selection. The <code>state</code>\n * property contains the <mxCellState> that has been removed.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n */\nfunction mxSelectionCellsHandler(graph)\n{\n\tmxEventSource.call(this);\n\t\n\tthis.graph = graph;\n\tthis.handlers = new mxDictionary();\n\tthis.graph.addMouseListener(this);\n\t\n\tthis.refreshHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.isEnabled())\n\t\t{\n\t\t\tthis.refresh();\n\t\t}\n\t});\n\t\n\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.refreshHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.refreshHandler);\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxSelectionCellsHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxSelectionCellsHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxSelectionCellsHandler.prototype.enabled = true;\n\n/**\n * Variable: refreshHandler\n * \n * Keeps a reference to an event listener for later removal.\n */\nmxSelectionCellsHandler.prototype.refreshHandler = null;\n\n/**\n * Variable: maxHandlers\n * \n * Defines the maximum number of handlers to paint individually. Default is 100.\n */\nmxSelectionCellsHandler.prototype.maxHandlers = 100;\n\n/**\n * Variable: handlers\n * \n * <mxDictionary> that maps from cells to handlers.\n */\nmxSelectionCellsHandler.prototype.handlers = null;\n\n/**\n * Function: isEnabled\n * \n * Returns <enabled>.\n */\nmxSelectionCellsHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Sets <enabled>.\n */\nmxSelectionCellsHandler.prototype.setEnabled = function(value)\n{\n\tthis.enabled = value;\n};\n\n/**\n * Function: getHandler\n * \n * Returns the handler for the given cell.\n */\nmxSelectionCellsHandler.prototype.getHandler = function(cell)\n{\n\treturn this.handlers.get(cell);\n};\n\n/**\n * Function: reset\n * \n * Resets all handlers.\n */\nmxSelectionCellsHandler.prototype.reset = function()\n{\n\tthis.handlers.visit(function(key, handler)\n\t{\n\t\thandler.reset.apply(handler);\n\t});\n};\n\n/**\n * Function: refresh\n * \n * Reloads or updates all handlers.\n */\nmxSelectionCellsHandler.prototype.refresh = function()\n{\n\t// Removes all existing handlers\n\tvar oldHandlers = this.handlers;\n\tthis.handlers = new mxDictionary();\n\t\n\t// Creates handles for all selection cells\n\tvar tmp = this.graph.getSelectionCells();\n\n\tfor (var i = 0; i < tmp.length; i++)\n\t{\n\t\tvar state = this.graph.view.getState(tmp[i]);\n\n\t\tif (state != null)\n\t\t{\n\t\t\tvar handler = oldHandlers.remove(tmp[i]);\n\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tif (handler.state != state)\n\t\t\t\t{\n\t\t\t\t\thandler.destroy();\n\t\t\t\t\thandler = null;\n\t\t\t\t}\n\t\t\t\telse if (!this.isHandlerActive(handler))\n\t\t\t\t{\n\t\t\t\t\tif (handler.refresh != null)\n\t\t\t\t\t{\n\t\t\t\t\t\thandler.refresh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\thandler.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (handler == null)\n\t\t\t{\n\t\t\t\thandler = this.graph.createHandler(state);\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD, 'state', state));\n\t\t\t}\n\t\t\t\n\t\t\tif (handler != null)\n\t\t\t{\n\t\t\t\tthis.handlers.put(tmp[i], handler);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Destroys all unused handlers\n\toldHandlers.visit(mxUtils.bind(this, function(key, handler)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.REMOVE, 'state', handler.state));\n\t\thandler.destroy();\n\t}));\n};\n\n/**\n * Function: isHandlerActive\n * \n * Returns true if the given handler is active and should not be redrawn.\n */\nmxSelectionCellsHandler.prototype.isHandlerActive = function(handler)\n{\n\treturn handler.index != null;\n};\n\n/**\n * Function: updateHandler\n * \n * Updates the handler for the given shape if one exists.\n */\nmxSelectionCellsHandler.prototype.updateHandler = function(state)\n{\n\tvar handler = this.handlers.remove(state.cell);\n\t\n\tif (handler != null)\n\t{\n\t\t// Transfers the current state to the new handler\n\t\tvar index = handler.index;\n\t\tvar x = handler.startX;\n\t\tvar y = handler.startY;\n\t\t\n\t\thandler.destroy();\n\t\thandler = this.graph.createHandler(state);\n\n\t\tif (handler != null)\n\t\t{\n\t\t\tthis.handlers.put(state.cell, handler);\n\t\t\t\n\t\t\tif (index != null && x != null && y != null)\n\t\t\t{\n\t\t\t\thandler.start(x, y, index);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: mouseDown\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseDown = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseDown.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseMove.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Redirects the given event to the handlers.\n */\nmxSelectionCellsHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.graph.isEnabled() && this.isEnabled())\n\t{\n\t\tvar args = [sender, me];\n\n\t\tthis.handlers.visit(function(key, handler)\n\t\t{\n\t\t\thandler.mouseUp.apply(handler, args);\n\t\t});\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxSelectionCellsHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.refreshHandler != null)\n\t{\n\t\tthis.graph.getSelectionModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getModel().removeListener(this.refreshHandler);\n\t\tthis.graph.getView().removeListener(this.refreshHandler);\n\t\tthis.refreshHandler = null;\n\t}\n};\n\n__mxOutput.mxSelectionCellsHandler = typeof mxSelectionCellsHandler !== 'undefined' ? mxSelectionCellsHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxConnectionHandler\n *\n * Graph event handler that creates new connections. Uses <mxTerminalMarker>\n * for finding and highlighting the source and target vertices and\n * <factoryMethod> to create the edge instance. This handler is built-into\n * <mxGraph.connectionHandler> and enabled using <mxGraph.setConnectable>.\n *\n * Example:\n * \n * (code)\n * new mxConnectionHandler(graph, function(source, target, style)\n * {\n *   edge = new mxCell('', new mxGeometry());\n *   edge.setEdge(true);\n *   edge.setStyle(style);\n *   edge.geometry.relative = true;\n *   return edge;\n * });\n * (end)\n * \n * Here is an alternative solution that just sets a specific user object for\n * new edges by overriding <insertEdge>.\n *\n * (code)\n * mxConnectionHandlerInsertEdge = mxConnectionHandler.prototype.insertEdge;\n * mxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n * {\n *   value = 'Test';\n * \n *   return mxConnectionHandlerInsertEdge.apply(this, arguments);\n * };\n * (end)\n * \n * Using images to trigger connections:\n * \n * This handler uses mxTerminalMarker to find the source and target cell for\n * the new connection and creates a new edge using <connect>. The new edge is\n * created using <createEdge> which in turn uses <factoryMethod> or creates a\n * new default edge.\n * \n * The handler uses a \"highlight-paradigm\" for indicating if a cell is being\n * used as a source or target terminal, as seen in other diagramming products.\n * In order to allow both, moving and connecting cells at the same time,\n * <mxConstants.DEFAULT_HOTSPOT> is used in the handler to determine the hotspot\n * of a cell, that is, the region of the cell which is used to trigger a new\n * connection. The constant is a value between 0 and 1 that specifies the\n * amount of the width and height around the center to be used for the hotspot\n * of a cell and its default value is 0.5. In addition,\n * <mxConstants.MIN_HOTSPOT_SIZE> defines the minimum number of pixels for the\n * width and height of the hotspot.\n * \n * This solution, while standards compliant, may be somewhat confusing because\n * there is no visual indicator for the hotspot and the highlight is seen to\n * switch on and off while the mouse is being moved in and out. Furthermore,\n * this paradigm does not allow to create different connections depending on\n * the highlighted hotspot as there is only one hotspot per cell and it\n * normally does not allow cells to be moved and connected at the same time as\n * there is no clear indication of the connectable area of the cell.\n * \n * To come across these issues, the handle has an additional <createIcons> hook\n * with a default implementation that allows to create one icon to be used to\n * trigger new connections. If this icon is specified, then new connections can\n * only be created if the image is clicked while the cell is being highlighted.\n * The <createIcons> hook may be overridden to create more than one\n * <mxImageShape> for creating new connections, but the default implementation\n * supports one image and is used as follows:\n * \n * In order to display the \"connect image\" whenever the mouse is over the cell,\n * an DEFAULT_HOTSPOT of 1 should be used:\n * \n * (code)\n * mxConstants.DEFAULT_HOTSPOT = 1;\n * (end)\n * \n * In order to avoid confusion with the highlighting, the highlight color\n * should not be used with a connect image:\n * \n * (code)\n * mxConstants.HIGHLIGHT_COLOR = null;\n * (end)\n * \n * To install the image, the connectImage field of the mxConnectionHandler must\n * be assigned a new <mxImage> instance:\n * \n * (code)\n * mxConnectionHandler.prototype.connectImage = new mxImage('images/green-dot.gif', 14, 14);\n * (end)\n * \n * This will use the green-dot.gif with a width and height of 14 pixels as the\n * image to trigger new connections. In createIcons the icon field of the\n * handler will be set in order to remember the icon that has been clicked for\n * creating the new connection. This field will be available under selectedIcon\n * in the connect method, which may be overridden to take the icon that\n * triggered the new connection into account. This is useful if more than one\n * icon may be used to create a connection.\n *\n * Group: Events\n * \n * Event: mxEvent.START\n * \n * Fires when a new connection is being created by the user. The <code>state</code>\n * property contains the state of the source cell.\n * \n * Event: mxEvent.CONNECT\n * \n * Fires between begin- and endUpdate in <connect>. The <code>cell</code>\n * property contains the inserted edge, the <code>event</code> and <code>target</code> \n * properties contain the respective arguments that were passed to <connect> (where\n * target corresponds to the dropTarget argument). Finally, the <code>terminal</code>\n * property corresponds to the target argument in <connect> or the clone of the source\n * terminal if <createTarget> is enabled.\n * \n * Note that the target is the cell under the mouse where the mouse button was released.\n * Depending on the logic in the handler, this doesn't necessarily have to be the target\n * of the inserted edge. To print the source, target or any optional ports IDs that the\n * edge is connected to, the following code can be used. To get more details about the\n * actual connection point, <mxGraph.getConnectionConstraint> can be used. To resolve\n * the port IDs, use <mxGraphModel.getCell>.\n * \n * (code)\n * graph.connectionHandler.addListener(mxEvent.CONNECT, function(sender, evt)\n * {\n *   var edge = evt.getProperty('cell');\n *   var source = graph.getModel().getTerminal(edge, true);\n *   var target = graph.getModel().getTerminal(edge, false);\n *   \n *   var style = graph.getCellStyle(edge);\n *   var sourcePortId = style[mxConstants.STYLE_SOURCE_PORT];\n *   var targetPortId = style[mxConstants.STYLE_TARGET_PORT];\n *   \n *   mxLog.show();\n *   mxLog.debug('connect', edge, source.id, target.id, sourcePortId, targetPortId);\n * });\n * (end)\n *\n * Event: mxEvent.RESET\n * \n * Fires when the <reset> method is invoked.\n *\n * Constructor: mxConnectionHandler\n *\n * Constructs an event handler that connects vertices using the specified\n * factory method to create the new edges. Modify\n * <mxConstants.ACTIVE_REGION> to setup the region on a cell which triggers\n * the creation of a new connection or use connect icons as explained\n * above.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and an\n * optional cell style from the preview as the third argument. It returns\n * the <mxCell> that represents the new edge.\n */\nfunction mxConnectionHandler(graph, factoryMethod)\n{\n\tmxEventSource.call(this);\n\t\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.factoryMethod = factoryMethod;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Extends mxEventSource.\n */\nmxUtils.extend(mxConnectionHandler, mxEventSource);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConnectionHandler.prototype.graph = null;\n\n/**\n * Variable: factoryMethod\n * \n * Function that is used for creating new edges. The function takes the\n * source and target <mxCell> as the first and second argument and returns\n * a new <mxCell> that represents the edge. This is used in <createEdge>.\n */\nmxConnectionHandler.prototype.factoryMethod = true;\n\n/**\n * Variable: moveIconFront\n * \n * Specifies if icons should be displayed inside the graph container instead\n * of the overlay pane. This is used for HTML labels on vertices which hide\n * the connect icon. This has precendence over <moveIconBack> when set\n * to true. Default is false.\n */\nmxConnectionHandler.prototype.moveIconFront = false;\n\n/**\n * Variable: moveIconBack\n * \n * Specifies if icons should be moved to the back of the overlay pane. This can\n * be set to true if the icons of the connection handler conflict with other\n * handles, such as the vertex label move handle. Default is false.\n */\nmxConnectionHandler.prototype.moveIconBack = false;\n\n/**\n * Variable: connectImage\n * \n * <mxImage> that is used to trigger the creation of a new connection. This\n * is used in <createIcons>. Default is null.\n */\nmxConnectionHandler.prototype.connectImage = null;\n\n/**\n * Variable: targetConnectImage\n * \n * Specifies if the connect icon should be centered on the target state\n * while connections are being previewed. Default is false.\n */\nmxConnectionHandler.prototype.targetConnectImage = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConnectionHandler.prototype.enabled = true;\n\n/**\n * Variable: select\n * \n * Specifies if new edges should be selected. Default is true.\n */\nmxConnectionHandler.prototype.select = true;\n\n/**\n * Variable: createTarget\n * \n * Specifies if <createTargetVertex> should be called if no target was under the\n * mouse for the new connection. Setting this to true means the connection\n * will be drawn as valid if no target is under the mouse, and\n * <createTargetVertex> will be called before the connection is created between\n * the source cell and the newly created vertex in <createTargetVertex>, which\n * can be overridden to create a new target. Default is false.\n */\nmxConnectionHandler.prototype.createTarget = false;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> used for finding source and target cells.\n */\nmxConnectionHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxConnectionHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while connections are being created.\n */\nmxConnectionHandler.prototype.error = null;\n\n/**\n * Variable: waypointsEnabled\n * \n * Specifies if single clicks should add waypoints on the new edge. Default is\n * false.\n */\nmxConnectionHandler.prototype.waypointsEnabled = false;\n\n/**\n * Variable: ignoreMouseDown\n * \n * Specifies if the connection handler should ignore the state of the mouse\n * button when highlighting the source. Default is false, that is, the\n * handler only highlights the source if no button is being pressed.\n */\nmxConnectionHandler.prototype.ignoreMouseDown = false;\n\n/**\n * Variable: first\n * \n * Holds the <mxPoint> where the mouseDown took place while the handler is\n * active.\n */\nmxConnectionHandler.prototype.first = null;\n\n/**\n * Variable: connectIconOffset\n * \n * Holds the offset for connect icons during connection preview.\n * Default is mxPoint(0, <mxConstants.TOOLTIP_VERTICAL_OFFSET>).\n * Note that placing the icon under the mouse pointer with an\n * offset of (0,0) will affect hit detection.\n */\nmxConnectionHandler.prototype.connectIconOffset = new mxPoint(0, mxConstants.TOOLTIP_VERTICAL_OFFSET);\n\n/**\n * Variable: edgeState\n * \n * Optional <mxCellState> that represents the preview edge while the\n * handler is active. This is created in <createEdgeState>.\n */\nmxConnectionHandler.prototype.edgeState = null;\n\n/**\n * Variable: changeHandler\n * \n * Holds the change event listener for later removal.\n */\nmxConnectionHandler.prototype.changeHandler = null;\n\n/**\n * Variable: drillHandler\n * \n * Holds the drill event listener for later removal.\n */\nmxConnectionHandler.prototype.drillHandler = null;\n\n/**\n * Variable: mouseDownCounter\n * \n * Counts the number of mouseDown events since the start. The initial mouse\n * down event counts as 1.\n */\nmxConnectionHandler.prototype.mouseDownCounter = 0;\n\n/**\n * Variable: movePreviewAway\n * \n * Switch to enable moving the preview away from the mousepointer. This is required in browsers\n * where the preview cannot be made transparent to events and if the built-in hit detection on\n * the HTML elements in the page should be used. Default is the value of <mxClient.IS_VML>.\n */\nmxConnectionHandler.prototype.movePreviewAway = mxClient.IS_VML;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxConnectionHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: livePreview\n * \n * Specifies if the actual shape of the edge state should be used for the preview.\n * Default is false. (Ignored if no edge state is created in <createEdgeState>.)\n */\nmxConnectionHandler.prototype.livePreview = false;\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used while the handler is active. Default is null.\n */\nmxConnectionHandler.prototype.cursor = null;\n\n/**\n * Variable: insertBeforeSource\n * \n * Specifies if new edges should be inserted before the source vertex in the\n * cell hierarchy. Default is false for backwards compatibility.\n */\nmxConnectionHandler.prototype.insertBeforeSource = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConnectionHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConnectionHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isInsertBefore\n * \n * Returns <insertBeforeSource> for non-loops and false for loops.\n *\n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be inserted.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.isInsertBefore = function(edge, source, target, evt, dropTarget)\n{\n\treturn this.insertBeforeSource && source != target;\n};\n\n/**\n * Function: isCreateTarget\n * \n * Returns <createTarget>.\n *\n * Parameters:\n *\n * evt - Current active native pointer event.\n */\nmxConnectionHandler.prototype.isCreateTarget = function(evt)\n{\n\treturn this.createTarget;\n};\n\n/**\n * Function: setCreateTarget\n * \n * Sets <createTarget>.\n */\nmxConnectionHandler.prototype.setCreateTarget = function(value)\n{\n\tthis.createTarget = value;\n};\n\n/**\n * Function: createShape\n * \n * Creates the preview shape for new connections.\n */\nmxConnectionHandler.prototype.createShape = function()\n{\n\t// Creates the edge preview\n\tvar shape = (this.livePreview && this.edgeState != null) ?\n\t\tthis.graph.cellRenderer.createShape(this.edgeState) :\n\t\tnew mxPolyline([], mxConstants.INVALID_COLOR);\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.scale = this.graph.view.scale;\n\tshape.pointerEvents = false;\n\tshape.isDashed = true;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, null);\n\n\treturn shape;\n};\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this connection handler. This should\n * be invoked if <mxGraph.container> is assigned after the connection\n * handler has been created.\n */\nmxConnectionHandler.prototype.init = function()\n{\n\tthis.graph.addMouseListener(this);\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\n\t// Redraws the icons if the graph changes\n\tthis.changeHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.iconState = this.graph.getView().getState(this.iconState.cell);\n\t\t}\n\t\t\n\t\tif (this.iconState != null)\n\t\t{\n\t\t\tthis.redrawIcons(this.icons, this.iconState);\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != null && this.graph.view.getState(this.previous.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t});\n\t\n\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.changeHandler);\n\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.changeHandler);\n\t\n\t// Removes the icon if we step into/up or start editing\n\tthis.drillHandler = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.reset();\n\t});\n\t\n\tthis.graph.addListener(mxEvent.START_EDITING, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.DOWN, this.drillHandler);\n\tthis.graph.getView().addListener(mxEvent.UP, this.drillHandler);\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxConnectionHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxConnectionHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tmarker.hotspotEnabled = true;\n\n\t// Overrides to return cell at location only if valid (so that\n\t// there is no highlight for invalid cells)\n\tmarker.getCell = mxUtils.bind(this, function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(marker, arguments);\n\t\tthis.error = null;\n\t\t\n\t\t// Checks for cell at preview point (with grid)\n\t\tif (cell == null && this.currentPoint != null)\n\t\t{\n\t\t\tcell = this.graph.getCellAt(this.currentPoint.x, this.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && this.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, this.currentPoint.x, this.currentPoint.y)) ||\n\t\t\t!this.isConnectableCell(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (cell != null)\n\t\t{\n\t\t\tif (this.isConnecting())\n\t\t\t{\n\t\t\t\tif (this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tthis.error = this.validateConnection(this.previous.cell, cell);\n\t\t\t\t\t\n\t\t\t\t\tif (this.error != null && this.error.length == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tcell = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Enables create target inside groups\n\t\t\t\t\t\tif (this.isCreateTarget(me.getEvent()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.error = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (!this.isValidSource(cell, me))\n\t\t\t{\n\t\t\t\tcell = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.isConnecting() && !this.isCreateTarget(me.getEvent()) &&\n\t\t\t\t!this.graph.allowDanglingEdges)\n\t\t{\n\t\t\tthis.error = '';\n\t\t}\n\n\t\treturn cell;\n\t});\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = mxUtils.bind(this, function(state)\n\t{\n\t\tif (this.isConnecting())\n\t\t{\n\t\t\treturn this.error == null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn mxCellMarker.prototype.isValidState.apply(marker, arguments);\n\t\t}\n\t});\n\n\t// Overrides to use marker color only in highlight mode or for\n\t// target selection\n\tmarker.getMarkerColor = mxUtils.bind(this, function(evt, state, isValid)\n\t{\n\t\treturn (this.connectImage == null || this.isConnecting()) ?\n\t\t\tmxCellMarker.prototype.getMarkerColor.apply(marker, arguments) :\n\t\t\tnull;\n\t});\n\n\t// Overrides to use hotspot only for source selection otherwise\n\t// intersects always returns true when over a cell\n\tmarker.intersects = mxUtils.bind(this, function(state, evt)\n\t{\n\t\tif (this.connectImage != null || this.isConnecting())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxCellMarker.prototype.intersects.apply(marker, arguments);\n\t});\n\n\treturn marker;\n};\n\n/**\n * Function: start\n * \n * Starts a new connection for the given state and coordinates.\n */\nmxConnectionHandler.prototype.start = function(state, x, y, edgeState)\n{\n\tthis.previous = state;\n\tthis.first = new mxPoint(x, y);\n\tthis.edgeState = (edgeState != null) ? edgeState : this.createEdgeState(null);\n\t\n\t// Marks the source state\n\tthis.marker.currentColor = this.marker.validColor;\n\tthis.marker.markedState = state;\n\tthis.marker.mark();\n\n\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n};\n\n/**\n * Function: isConnecting\n * \n * Returns true if the source terminal has been clicked and a new\n * connection is currently being previewed.\n */\nmxConnectionHandler.prototype.isConnecting = function()\n{\n\treturn this.first != null && this.shape != null;\n};\n\n/**\n * Function: isValidSource\n * \n * Returns <mxGraph.isValidSource> for the given source terminal.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the source terminal.\n * me - <mxMouseEvent> that is associated with this call.\n */\nmxConnectionHandler.prototype.isValidSource = function(cell, me)\n{\n\treturn this.graph.isValidSource(cell);\n};\n\n/**\n * Function: isValidTarget\n * \n * Returns true. The call to <mxGraph.isValidTarget> is implicit by calling\n * <mxGraph.getEdgeValidationError> in <validateConnection>. This is an\n * additional hook for disabling certain targets in this specific handler.\n * \n * Parameters:\n * \n * cell - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.isValidTarget = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxConnectionHandler.prototype.validateConnection = function(source, target)\n{\n\tif (!this.isValidTarget(target))\n\t{\n\t\treturn '';\n\t}\n\t\n\treturn this.graph.getEdgeValidationError(null, source, target);\n};\n\n/**\n * Function: getConnectImage\n * \n * Hook to return the <mxImage> used for the connection icon of the given\n * <mxCellState>. This implementation returns <connectImage>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect image should be returned.\n */\nmxConnectionHandler.prototype.getConnectImage = function(state)\n{\n\treturn this.connectImage;\n};\n\n/**\n * Function: isMoveIconToFrontForState\n * \n * Returns true if the state has a HTML label in the graph's container, otherwise\n * it returns <moveIconFront>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.isMoveIconToFrontForState = function(state)\n{\n\tif (state.text != null && state.text.node.parentNode == this.graph.container)\n\t{\n\t\treturn true;\n\t}\n\t\n\treturn this.moveIconFront;\n};\n\n/**\n * Function: createIcons\n * \n * Creates the array <mxImageShapes> that represent the connect icons for\n * the given <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> whose connect icons should be returned.\n */\nmxConnectionHandler.prototype.createIcons = function(state)\n{\n\tvar image = this.getConnectImage(state);\n\t\n\tif (image != null && state != null)\n\t{\n\t\tthis.iconState = state;\n\t\tvar icons = [];\n\n\t\t// Cannot use HTML for the connect icons because the icon receives all\n\t\t// mouse move events in IE, must use VML and SVG instead even if the\n\t\t// connect-icon appears behind the selection border and the selection\n\t\t// border consumes the events before the icon gets a chance\n\t\tvar bounds = new mxRectangle(0, 0, image.width, image.height);\n\t\tvar icon = new mxImageShape(bounds, image.src, null, null, 0);\n\t\ticon.preserveImageAspect = false;\n\t\t\n\t\tif (this.isMoveIconToFrontForState(state))\n\t\t{\n\t\t\ticon.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\ticon.init(this.graph.container);\n\t\t}\n\t\telse\n\t\t{\n\t\t\ticon.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\ticon.init(this.graph.getView().getOverlayPane());\n\n\t\t\t// Move the icon back in the overlay pane\n\t\t\tif (this.moveIconBack && icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\t\t}\n\n\t\ticon.node.style.cursor = mxConstants.CURSOR_CONNECT;\n\n\t\t// Events transparency\n\t\tvar getState = mxUtils.bind(this, function()\n\t\t{\n\t\t\treturn (this.currentState != null) ? this.currentState : state;\n\t\t});\n\t\t\n\t\t// Updates the local icon before firing the mouse down event.\n\t\tvar mouseDown = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tif (!mxEvent.isConsumed(evt))\n\t\t\t{\n\t\t\t\tthis.icon = icon;\n\t\t\t\tthis.graph.fireMouseEvent(mxEvent.MOUSE_DOWN,\n\t\t\t\t\tnew mxMouseEvent(evt, getState()));\n\t\t\t}\n\t\t});\n\n\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState, mouseDown);\n\t\t\n\t\ticons.push(icon);\n\t\tthis.redrawIcons(icons, this.iconState);\n\t\t\n\t\treturn icons;\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.redrawIcons = function(icons, state)\n{\n\tif (icons != null && icons[0] != null && state != null)\n\t{\n\t\tvar pos = this.getIconPosition(icons[0], state);\n\t\ticons[0].bounds.x = pos.x;\n\t\ticons[0].bounds.y = pos.y;\n\t\ticons[0].redraw();\n\t}\n};\n\n/**\n * Function: redrawIcons\n * \n * Redraws the given array of <mxImageShapes>.\n * \n * Parameters:\n * \n * icons - Optional array of <mxImageShapes> to be redrawn.\n */\nmxConnectionHandler.prototype.getIconPosition = function(icon, state)\n{\n\tvar scale = this.graph.getView().scale;\n\tvar cx = state.getCenterX();\n\tvar cy = state.getCenterY();\n\t\n\tif (this.graph.isSwimlane(state.cell))\n\t{\n\t\tvar size = this.graph.getStartSize(state.cell);\n\t\t\n\t\tcx = (size.width != 0) ? state.x + size.width * scale / 2 : cx;\n\t\tcy = (size.height != 0) ? state.y + size.height * scale / 2 : cy;\n\t\t\n\t\tvar alpha = mxUtils.toRadians(mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION) || 0);\n\t\t\n\t\tif (alpha != 0)\n\t\t{\n\t\t\tvar cos = Math.cos(alpha);\n\t\t\tvar sin = Math.sin(alpha);\n\t\t\tvar ct = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(cx, cy), cos, sin, ct);\n\t\t\tcx = pt.x;\n\t\t\tcy = pt.y;\n\t\t}\n\t}\n\n\treturn new mxPoint(cx - icon.bounds.width / 2,\n\t\t\tcy - icon.bounds.height / 2);\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the connect icons and resets the respective state.\n */\nmxConnectionHandler.prototype.destroyIcons = function()\n{\n\tif (this.icons != null)\n\t{\n\t\tfor (var i = 0; i < this.icons.length; i++)\n\t\t{\n\t\t\tthis.icons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.icons = null;\n\t\tthis.icon = null;\n\t\tthis.selectedIcon = null;\n\t\tthis.iconState = null;\n\t}\n};\n\n/**\n * Function: isStartEvent\n * \n * Returns true if the given mouse down event should start this handler. The\n * This implementation returns true if the event does not force marquee\n * selection, and the currentConstraint and currentFocus of the\n * <constraintHandler> are not null, or <previous> and <error> are not null and\n * <icons> is null or <icons> and <icon> are not null.\n */\nmxConnectionHandler.prototype.isStartEvent = function(me)\n{\n\treturn ((this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null) ||\n\t\t(this.previous != null && this.error == null && (this.icons == null || (this.icons != null &&\n\t\tthis.icon != null))));\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a new connection.\n */\nmxConnectionHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.mouseDownCounter++;\n\t\n\tif (this.isEnabled() && this.graph.isEnabled() && !me.isConsumed() &&\n\t\t!this.isConnecting() && this.isStartEvent(me))\n\t{\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t{\n\t\t\tthis.sourceConstraint = this.constraintHandler.currentConstraint;\n\t\t\tthis.previous = this.constraintHandler.currentFocus;\n\t\t\tthis.first = this.constraintHandler.currentPoint.clone();\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Stores the location of the initial mousedown\n\t\t\tthis.first = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t}\n\t\n\t\tthis.edgeState = this.createEdgeState(me);\n\t\tthis.mouseDownCounter = 1;\n\t\t\n\t\tif (this.waypointsEnabled && this.shape == null)\n\t\t{\n\t\t\tthis.waypoints = null;\n\t\t\tthis.shape = this.createShape();\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t}\n\t\t}\n\n\t\t// Stores the starting point in the geometry of the preview\n\t\tif (this.previous == null && this.edgeState != null)\n\t\t{\n\t\t\tvar pt = this.graph.getPointForEvent(me.getEvent());\n\t\t\tthis.edgeState.cell.geometry.setTerminalPoint(pt, true);\n\t\t}\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.START, 'state', this.previous));\n\n\t\tme.consume();\n\t}\n\n\tthis.selectedIcon = this.icon;\n\tthis.icon = null;\n};\n\n/**\n * Function: isImmediateConnectSource\n * \n * Returns true if a tap on the given source state should immediately start\n * connecting. This implementation returns true if the state is not movable\n * in the graph. \n */\nmxConnectionHandler.prototype.isImmediateConnectSource = function(state)\n{\n\treturn !this.graph.isCellMovable(state.cell);\n};\n\n/**\n * Function: createEdgeState\n * \n * Hook to return an <mxCellState> which may be used during the preview.\n * This implementation returns null.\n * \n * Use the following code to create a preview for an existing edge style:\n * \n * (code)\n * graph.connectionHandler.createEdgeState = function(me)\n * {\n *   var edge = graph.createEdge(null, null, null, null, null, 'edgeStyle=elbowEdgeStyle');\n *   \n *   return new mxCellState(this.graph.view, edge, this.graph.getCellStyle(edge));\n * };\n * (end)\n */\nmxConnectionHandler.prototype.createEdgeState = function(me)\n{\n\treturn null;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxConnectionHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updateCurrentState\n * \n * Updates the current state for a given mouse move event by using\n * the <marker>.\n */\nmxConnectionHandler.prototype.updateCurrentState = function(me, point)\n{\n\tthis.constraintHandler.update(me, this.first == null, false, (this.first == null ||\n\t\tme.isSource(this.marker.highlight.shape)) ? null : point);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\n\t\t// Updates validation state\n\t\tif (this.previous != null)\n\t\t{\n\t\t\tthis.error = this.validateConnection(this.previous.cell, this.constraintHandler.currentFocus.cell);\n\t\t\t\n\t\t\tif (this.error == null)\n\t\t\t{\n\t\t\t\tthis.currentState = this.constraintHandler.currentFocus;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.constraintHandler.reset();\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t\tthis.currentState = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.process(me);\n\t\t\tthis.currentState = this.marker.getValidState();\n\t\t\t\n\t\t\tif (this.currentState != null && !this.isCellEnabled(this.currentState.cell))\n\t\t\t{\n\t\t\t\tthis.currentState = null;\n\t\t\t}\n\t\t}\n\n\t\tvar outline = this.isOutlineConnectEvent(me);\n\t\t\n\t\tif (this.currentState != null && outline)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tvar constraint = this.graph.getOutlineConstraint(point, this.currentState, me);\n\t\t\tthis.constraintHandler.setFocus(me, this.currentState, false);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\n\t\tif (this.outlineConnect)\n\t\t{\n\t\t\tif (this.marker.highlight != null && this.marker.highlight.shape != null)\n\t\t\t{\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.OUTLINE_HIGHLIGHT_COLOR;\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t} \n\t\t\t\telse if (this.marker.hasValidState())\n\t\t\t\t{\n\t\t\t\t\t// Handles special case where actual end point of edge and current mouse point\n\t\t\t\t\t// are not equal (due to grid snapping) and there is no hit on shape or highlight\n\t\t\t\t\tif (this.marker.getValidState() != me.getState())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\t\tthis.currentState = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.marker.highlight.shape.stroke = mxConstants.DEFAULT_VALID_COLOR;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellEnabled\n * \n * Returns true if the given cell does not allow new connections to be created.\n */\nmxConnectionHandler.prototype.isCellEnabled = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: convertWaypoint\n * \n * Converts the given point from screen coordinates to model coordinates.\n */\nmxConnectionHandler.prototype.convertWaypoint = function(point)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\n\tpoint.x = point.x / scale - tr.x;\n\tpoint.y = point.y / scale - tr.y;\n};\n\n/**\n * Function: snapToPreview\n * \n * Called to snap the given point to the current preview. This snaps to the\n * first point of the preview if alt is not pressed.\n */\nmxConnectionHandler.prototype.snapToPreview = function(me, point)\n{\n\tif (!mxEvent.isAltDown(me.getEvent()) && this.previous != null)\n\t{\n\t\tvar tol = this.graph.gridSize * this.graph.view.scale / 2;\t\n\t\tvar tmp = (this.sourceConstraint != null) ? this.first :\n\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\n\t\tif (Math.abs(tmp.x - me.getGraphX()) < tol)\n\t\t{\n\t\t\tpoint.x = tmp.x;\n\t\t}\n\t\t\n\t\tif (Math.abs(tmp.y - me.getGraphY()) < tol)\n\t\t{\n\t\t\tpoint.y = tmp.y;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview edge or by highlighting\n * a possible source or target terminal.\n */\nmxConnectionHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && (this.ignoreMouseDown || this.first != null || !this.graph.isMouseDown))\n\t{\n\t\t// Handles special case when handler is disabled during highlight\n\t\tif (!this.isEnabled() && this.currentState != null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\tthis.currentState = null;\n\t\t}\n\n\t\tvar view = this.graph.getView();\n\t\tvar scale = view.scale;\n\t\tvar tr = view.translate;\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tthis.error = null;\n\n\t\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t\t{\n\t\t\tpoint = new mxPoint((this.graph.snap(point.x / scale - tr.x) + tr.x) * scale,\n\t\t\t\t(this.graph.snap(point.y / scale - tr.y) + tr.y) * scale);\n\t\t}\n\t\t\n\t\tthis.snapToPreview(me, point);\n\t\tthis.currentPoint = point;\n\t\t\n\t\tif ((this.first != null || (this.isEnabled() && this.graph.isEnabled())) &&\n\t\t\t(this.shape != null || this.first == null ||\n\t\t\tMath.abs(me.getGraphX() - this.first.x) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.first.y) > this.graph.tolerance))\n\t\t{\n\t\t\tthis.updateCurrentState(me, point);\n\t\t}\n\n\t\tif (this.first != null)\n\t\t{\n\t\t\tvar constraint = null;\n\t\t\tvar current = point;\n\t\t\t\n\t\t\t// Uses the current point from the constraint handler if available\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tconstraint = this.constraintHandler.currentConstraint;\n\t\t\t\tcurrent = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.previous != null && !this.graph.isIgnoreTerminalEvent(me.getEvent()) &&\n\t\t\t\tmxEvent.isShiftDown(me.getEvent()))\n\t\t\t{\n\t\t\t\tif (Math.abs(this.previous.getCenterX() - point.x) <\n\t\t\t\t\tMath.abs(this.previous.getCenterY() - point.y))\n\t\t\t\t{\n\t\t\t\t\tpoint.x = this.previous.getCenterX();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tpoint.y = this.previous.getCenterY();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pt2 = this.first;\n\t\t\t\n\t\t\t// Moves the connect icon with the mouse\n\t\t\tif (this.selectedIcon != null)\n\t\t\t{\n\t\t\t\tvar w = this.selectedIcon.bounds.width;\n\t\t\t\tvar h = this.selectedIcon.bounds.height;\n\t\t\t\t\n\t\t\t\tif (this.currentState != null && this.targetConnectImage)\n\t\t\t\t{\n\t\t\t\t\tvar pos = this.getIconPosition(this.selectedIcon, this.currentState);\n\t\t\t\t\tthis.selectedIcon.bounds.x = pos.x;\n\t\t\t\t\tthis.selectedIcon.bounds.y = pos.y;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar bounds = new mxRectangle(me.getGraphX() + this.connectIconOffset.x,\n\t\t\t\t\t\tme.getGraphY() + this.connectIconOffset.y, w, h);\n\t\t\t\t\tthis.selectedIcon.bounds = bounds;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.selectedIcon.redraw();\n\t\t\t}\n\n\t\t\t// Uses edge state to compute the terminal points\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tthis.updateEdgeState(current, constraint);\n\t\t\t\tcurrent = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 1];\n\t\t\t\tpt2 = this.edgeState.absolutePoints[0];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (this.currentState != null)\n\t\t\t\t{\n\t\t\t\t\tif (this.constraintHandler.currentConstraint == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar tmp = this.getTargetPerimeterPoint(this.currentState, me);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcurrent = tmp;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Computes the source perimeter point\n\t\t\t\tif (this.sourceConstraint == null && this.previous != null)\n\t\t\t\t{\n\t\t\t\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\t\t\t\tthis.waypoints[0] : current;\n\t\t\t\t\tvar tmp = this.getSourcePerimeterPoint(this.previous, next, me);\n\t\t\t\t\t\n\t\t\t\t\tif (tmp != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt2 = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Makes sure the cell under the mousepointer can be detected\n\t\t\t// by moving the preview shape away from the mouse. This\n\t\t\t// makes sure the preview shape does not prevent the detection\n\t\t\t// of the cell under the mousepointer even for slow gestures.\n\t\t\tif (this.currentState == null && this.movePreviewAway)\n\t\t\t{\n\t\t\t\tvar tmp = pt2; \n\t\t\t\t\n\t\t\t\tif (this.edgeState != null && this.edgeState.absolutePoints.length >= 2)\n\t\t\t\t{\n\t\t\t\t\tvar tmp2 = this.edgeState.absolutePoints[this.edgeState.absolutePoints.length - 2];\n\t\t\t\t\t\n\t\t\t\t\tif (tmp2 != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = tmp2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar dx = current.x - tmp.x;\n\t\t\t\tvar dy = current.y - tmp.y;\n\t\t\t\t\n\t\t\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\t\n\t\t\t\tif (len == 0)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Stores old point to reuse when creating edge\n\t\t\t\tthis.originalPoint = current.clone();\n\t\t\t\tcurrent.x -= dx * 4 / len;\n\t\t\t\tcurrent.y -= dy * 4 / len;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.originalPoint = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the preview shape (lazy)\n\t\t\tif (this.shape == null)\n\t\t\t{\n\t\t\t\tvar dx = Math.abs(me.getGraphX() - this.first.x);\n\t\t\t\tvar dy = Math.abs(me.getGraphY() - this.first.y);\n\n\t\t\t\tif (dx > this.graph.tolerance || dy > this.graph.tolerance)\n\t\t\t\t{\n\t\t\t\t\tthis.shape = this.createShape();\n\n\t\t\t\t\tif (this.edgeState != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.shape.apply(this.edgeState);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Revalidates current connection\n\t\t\t\t\tthis.updateCurrentState(me, point);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Updates the points in the preview edge\n\t\t\tif (this.shape != null)\n\t\t\t{\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tthis.shape.points = this.edgeState.absolutePoints;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar pts = [pt2];\n\t\t\t\t\t\n\t\t\t\t\tif (this.waypoints != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpts = pts.concat(this.waypoints);\n\t\t\t\t\t}\n\n\t\t\t\t\tpts.push(current);\n\t\t\t\t\tthis.shape.points = pts;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.drawPreview();\n\t\t\t}\n\t\t\t\n\t\t\t// Makes sure endpoint of edge is visible during connect\n\t\t\tif (this.cursor != null)\n\t\t\t{\n\t\t\t\tthis.graph.container.style.cursor = this.cursor;\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(me.getEvent());\n\t\t\tme.consume();\n\t\t}\n\t\telse if (!this.isEnabled() || !this.graph.isEnabled())\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\telse if (this.previous != this.currentState && this.edgeState == null)\n\t\t{\n\t\t\tthis.destroyIcons();\n\t\t\t\n\t\t\t// Sets the cursor on the current shape\t\t\t\t\n\t\t\tif (this.currentState != null && this.error == null && this.constraintHandler.currentConstraint == null)\n\t\t\t{\n\t\t\t\tthis.icons = this.createIcons(this.currentState);\n\n\t\t\t\tif (this.icons == null)\n\t\t\t\t{\n\t\t\t\t\tthis.currentState.setCursor(mxConstants.CURSOR_CONNECT);\n\t\t\t\t\tme.consume();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previous = this.currentState;\n\t\t}\n\t\telse if (this.previous == this.currentState && this.currentState != null && this.icons == null &&\n\t\t\t!this.graph.isMouseDown)\n\t\t{\n\t\t\t// Makes sure that no cursors are changed\n\t\t\tme.consume();\n\t\t}\n\n\t\tif (!this.graph.isMouseDown && this.currentState != null && this.icons != null)\n\t\t{\n\t\t\tvar hitsIcon = false;\n\t\t\tvar target = me.getSource();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.icons.length && !hitsIcon; i++)\n\t\t\t{\n\t\t\t\thitsIcon = target == this.icons[i].node || target.parentNode == this.icons[i].node;\n\t\t\t}\n\n\t\t\tif (!hitsIcon)\n\t\t\t{\n\t\t\t\tthis.updateIcons(this.currentState, this.icons, me);\n\t\t\t}\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n};\n\n/**\n * Function: updateEdgeState\n * \n * Updates <edgeState>.\n */\nmxConnectionHandler.prototype.updateEdgeState = function(current, constraint)\n{\n\t// TODO: Use generic method for writing constraint to style\n\tif (this.sourceConstraint != null && this.sourceConstraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_X] = this.sourceConstraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_EXIT_Y] = this.sourceConstraint.point.y;\n\t}\n\n\tif (constraint != null && constraint.point != null)\n\t{\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\tthis.edgeState.style[mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t}\n\telse\n\t{\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_X];\n\t\tdelete this.edgeState.style[mxConstants.STYLE_ENTRY_Y];\n\t}\n\t\n\tthis.edgeState.absolutePoints = [null, (this.currentState != null) ? null : current];\n\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.previous, true, this.sourceConstraint);\n\t\n\tif (this.currentState != null)\n\t{\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = this.graph.getConnectionConstraint(this.edgeState, this.previous, false);\n\t\t}\n\t\t\n\t\tthis.edgeState.setAbsoluteTerminalPoint(null, false);\n\t\tthis.graph.view.updateFixedTerminalPoint(this.edgeState, this.currentState, false, constraint);\n\t}\n\t\n\t// Scales and translates the waypoints to the model\n\tvar realPoints = null;\n\t\n\tif (this.waypoints != null)\n\t{\n\t\trealPoints = [];\n\t\t\n\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t{\n\t\t\tvar pt = this.waypoints[i].clone();\n\t\t\tthis.convertWaypoint(pt);\n\t\t\trealPoints[i] = pt;\n\t\t}\n\t}\n\t\n\tthis.graph.view.updatePoints(this.edgeState, realPoints, this.previous, this.currentState);\n\tthis.graph.view.updateFloatingTerminalPoints(this.edgeState, this.previous, this.currentState);\n};\n\n/**\n * Function: getTargetPerimeterPoint\n * \n * Returns the perimeter point for the given target state.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getTargetPerimeterPoint = function(state, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar targetPerimeter = view.getPerimeterFunction(state);\n\t\n\tif (targetPerimeter != null)\n\t{\n\t\tvar next = (this.waypoints != null && this.waypoints.length > 0) ?\n\t\t\t\tthis.waypoints[this.waypoints.length - 1] :\n\t\t\t\tnew mxPoint(this.previous.getCenterX(), this.previous.getCenterY());\n\t\tvar tmp = targetPerimeter(view.getPerimeterBounds(state),\n\t\t\tthis.edgeState, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = new mxPoint(state.getCenterX(), state.getCenterY());\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: getSourcePerimeterPoint\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> that represents the target cell state.\n * next - <mxPoint> that represents the next point along the previewed edge.\n * me - <mxMouseEvent> that represents the mouse move.\n */\nmxConnectionHandler.prototype.getSourcePerimeterPoint = function(state, next, me)\n{\n\tvar result = null;\n\tvar view = state.view;\n\tvar sourcePerimeter = view.getPerimeterFunction(state);\n\tvar c = new mxPoint(state.getCenterX(), state.getCenterY());\n\t\n\tif (sourcePerimeter != null)\n\t{\n\t\tvar theta = mxUtils.getValue(state.style, mxConstants.STYLE_ROTATION, 0);\n\t\tvar rad = -theta * (Math.PI / 180);\n\t\t\n\t\tif (theta != 0)\n\t\t{\n\t\t\tnext = mxUtils.getRotatedPoint(new mxPoint(next.x, next.y), Math.cos(rad), Math.sin(rad), c);\n\t\t}\n\t\t\n\t\tvar tmp = sourcePerimeter(view.getPerimeterBounds(state), state, next, false);\n\t\t\t\n\t\tif (tmp != null)\n\t\t{\n\t\t\tif (theta != 0)\n\t\t\t{\n\t\t\t\ttmp = mxUtils.getRotatedPoint(new mxPoint(tmp.x, tmp.y), Math.cos(-rad), Math.sin(-rad), c);\n\t\t\t}\n\t\t\t\n\t\t\tresult = tmp;\n\t\t}\n\t}\n\telse\n\t{\n\t\tresult = c;\n\t}\n\t\n\treturn result;\n};\n\n\n/**\n * Function: updateIcons\n * \n * Hook to update the icon position(s) based on a mouseOver event. This is\n * an empty implementation.\n * \n * Parameters:\n * \n * state - <mxCellState> under the mouse.\n * icons - Array of currently displayed icons.\n * me - <mxMouseEvent> that contains the mouse event.\n */\nmxConnectionHandler.prototype.updateIcons = function(state, icons, me)\n{\n\t// empty\n};\n\n/**\n * Function: isStopEvent\n * \n * Returns true if the given mouse up event should stop this handler. The\n * connection will be created if <error> is null. Note that this is only\n * called if <waypointsEnabled> is true. This implemtation returns true\n * if there is a cell state in the given event.\n */\nmxConnectionHandler.prototype.isStopEvent = function(me)\n{\n\treturn me.getState() != null;\n};\n\n/**\n * Function: addWaypoint\n * \n * Adds the waypoint for the given event to <waypoints>.\n */\nmxConnectionHandler.prototype.addWaypointForEvent = function(me)\n{\n\tvar point = mxUtils.convertPoint(this.graph.container, me.getX(), me.getY());\n\tvar dx = Math.abs(point.x - this.first.x);\n\tvar dy = Math.abs(point.y - this.first.y);\n\tvar addPoint = this.waypoints != null || (this.mouseDownCounter > 1 &&\n\t\t\t(dx > this.graph.tolerance || dy > this.graph.tolerance));\n\n\tif (addPoint)\n\t{\n\t\tif (this.waypoints == null)\n\t\t{\n\t\t\tthis.waypoints = [];\n\t\t}\n\t\t\n\t\tvar scale = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.graph.snap(me.getGraphX() / scale) * scale,\n\t\t\t\tthis.graph.snap(me.getGraphY() / scale) * scale);\n\t\tthis.waypoints.push(point);\n\t}\n};\n\n/**\n * Function: checkConstraints\n * \n * Returns true if the connection for the given constraints is valid. This\n * implementation returns true if the constraints are not pointing to the\n * same fixed connection point.\n */\nmxConnectionHandler.prototype.checkConstraints = function(c1, c2)\n{\n\treturn (c1 == null || c2 == null || c1.point == null || c2.point == null ||\n\t\t!c1.point.equals(c2.point) || c1.dx != c2.dx || c1.dy != c2.dy ||\n\t\tc1.perimeter != c2.perimeter);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by inserting the new connection.\n */\nmxConnectionHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isConnecting())\n\t{\n\t\tif (this.waypointsEnabled && !this.isStopEvent(me))\n\t\t{\n\t\t\tthis.addWaypointForEvent(me);\n\t\t\tme.consume();\n\t\t\t\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar c1 = this.sourceConstraint;\n\t\tvar c2 = this.constraintHandler.currentConstraint;\n\n\t\tvar source = (this.previous != null) ? this.previous.cell : null;\n\t\tvar target = null;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\ttarget = this.constraintHandler.currentFocus.cell;\n\t\t}\n\t\t\n\t\tif (target == null && this.currentState != null)\n\t\t{\n\t\t\ttarget = this.currentState.cell;\n\t\t}\n\t\t\n\t\t// Inserts the edge if no validation error exists and if constraints differ\n\t\tif (this.error == null && (source == null || target == null ||\n\t\t\tsource != target || this.checkConstraints(c1, c2)))\n\t\t{\n\t\t\tthis.connect(source, target, me.getEvent(), me.getCell());\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Selects the source terminal for self-references\n\t\t\tif (this.previous != null && this.marker.validState != null &&\n\t\t\t\tthis.previous.cell == this.marker.validState.cell)\n\t\t\t{\n\t\t\t\tthis.graph.selectCellForEvent(this.marker.source, me.getEvent());\n\t\t\t}\n\t\t\t\n\t\t\t// Displays the error message if it is not an empty string,\n\t\t\t// for empty error messages, the event is silently dropped\n\t\t\tif (this.error != null && this.error.length > 0)\n\t\t\t{\n\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Redraws the connect icons and resets the handler state\n\t\tthis.destroyIcons();\n\t\tme.consume();\n\t}\n\n\tif (this.first != null)\n\t{\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConnectionHandler.prototype.reset = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\t// Resets the cursor on the container\n\tif (this.cursor != null && this.graph.container != null)\n\t{\n\t\tthis.graph.container.style.cursor = '';\n\t}\n\t\n\tthis.destroyIcons();\n\tthis.marker.reset();\n\tthis.constraintHandler.reset();\n\tthis.originalPoint = null;\n\tthis.currentPoint = null;\n\tthis.edgeState = null;\n\tthis.previous = null;\n\tthis.error = null;\n\tthis.sourceConstraint = null;\n\tthis.mouseDownCounter = 0;\n\tthis.first = null;\n\n\tthis.fireEvent(new mxEventObject(mxEvent.RESET));\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview edge using the color and width returned by\n * <getEdgeColor> and <getEdgeWidth>.\n */\nmxConnectionHandler.prototype.drawPreview = function()\n{\n\tthis.updatePreview(this.error == null);\n\tthis.shape.redraw();\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.updatePreview = function(valid)\n{\n\tthis.shape.strokewidth = this.getEdgeWidth(valid);\n\tthis.shape.stroke = this.getEdgeColor(valid);\n};\n\n/**\n * Function: getEdgeColor\n * \n * Returns the color used to draw the preview edge. This returns green if\n * there is no edge validation error and red otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the color for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeColor = function(valid)\n{\n\treturn (valid) ? mxConstants.VALID_COLOR : mxConstants.INVALID_COLOR;\n};\n\t\n/**\n * Function: getEdgeWidth\n * \n * Returns the width used to draw the preview edge. This returns 3 if\n * there is no edge validation error and 1 otherwise.\n * \n * Parameters:\n * \n * valid - Boolean indicating if the width for a valid edge should be\n * returned.\n */\nmxConnectionHandler.prototype.getEdgeWidth = function(valid)\n{\n\treturn (valid) ? 3 : 1;\n};\n\n/**\n * Function: connect\n * \n * Connects the given source and target using a new edge. This\n * implementation uses <createEdge> to create the edge.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * evt - Mousedown event of the connect gesture.\n * dropTarget - <mxCell> that represents the cell under the mouse when it was\n * released.\n */\nmxConnectionHandler.prototype.connect = function(source, target, evt, dropTarget)\n{\n\tif (target != null || this.isCreateTarget(evt) || this.graph.allowDanglingEdges)\n\t{\n\t\t// Uses the common parent of source and target or\n\t\t// the default parent to insert the edge\n\t\tvar model = this.graph.getModel();\n\t\tvar terminalInserted = false;\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (source != null && target == null && !this.graph.isIgnoreTerminalEvent(evt) && this.isCreateTarget(evt))\n\t\t\t{\n\t\t\t\ttarget = this.createTargetVertex(evt, source);\n\t\t\t\t\n\t\t\t\tif (target != null)\n\t\t\t\t{\n\t\t\t\t\tdropTarget = this.graph.getDropTarget([target], evt, dropTarget);\n\t\t\t\t\tterminalInserted = true;\n\t\t\t\t\t\n\t\t\t\t\t// Disables edges as drop targets if the target cell was created\n\t\t\t\t\t// FIXME: Should not shift if vertex was aligned (same in Java)\n\t\t\t\t\tif (dropTarget == null || !this.graph.getModel().isEdge(dropTarget))\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pstate = this.graph.getView().getState(dropTarget);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar tmp = model.getGeometry(target);\n\t\t\t\t\t\t\ttmp.x -= pstate.origin.x;\n\t\t\t\t\t\t\ttmp.y -= pstate.origin.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tdropTarget = this.graph.getDefaultParent();\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tthis.graph.addCell(target, dropTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parent = this.graph.getDefaultParent();\n\n\t\t\tif (source != null && target != null &&\n\t\t\t\tmodel.getParent(source) == model.getParent(target) &&\n\t\t\t\tmodel.getParent(model.getParent(source)) != model.getRoot())\n\t\t\t{\n\t\t\t\tparent = model.getParent(source);\n\n\t\t\t\tif ((source.geometry != null && source.geometry.relative) &&\n\t\t\t\t\t(target.geometry != null && target.geometry.relative))\n\t\t\t\t{\n\t\t\t\t\tparent = model.getParent(parent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Uses the value of the preview edge state for inserting\n\t\t\t// the new edge into the graph\n\t\t\tvar value = null;\n\t\t\tvar style = null;\n\t\t\t\n\t\t\tif (this.edgeState != null)\n\t\t\t{\n\t\t\t\tvalue = this.edgeState.cell.value;\n\t\t\t\tstyle = this.edgeState.cell.style;\n\t\t\t}\n\n\t\t\tedge = this.insertEdge(parent, null, value, source, target, style);\n\t\t\t\n\t\t\tif (edge != null)\n\t\t\t{\n\t\t\t\t// Updates the connection constraints\n\t\t\t\tthis.graph.setConnectionConstraint(edge, source, true, this.sourceConstraint);\n\t\t\t\tthis.graph.setConnectionConstraint(edge, target, false, this.constraintHandler.currentConstraint);\n\t\t\t\t\n\t\t\t\t// Uses geometry of the preview edge state\n\t\t\t\tif (this.edgeState != null)\n\t\t\t\t{\n\t\t\t\t\tmodel.setGeometry(edge, this.edgeState.cell.geometry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar parent = model.getParent(source);\n\t\t\t\t\n\t\t\t\t// Inserts edge before source\n\t\t\t\tif (this.isInsertBefore(edge, source, target, evt, dropTarget))\n\t\t\t\t{\n\t\t\t\t\tvar index = null;\n\t\t\t\t\tvar tmp = source;\n\n\t\t\t\t\twhile (tmp.parent != null && tmp.geometry != null &&\n\t\t\t\t\t\ttmp.geometry.relative && tmp.parent != edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\ttmp = this.graph.model.getParent(tmp);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tmp != null && tmp.parent != null && tmp.parent == edge.parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.add(parent, edge, tmp.parent.getIndex(tmp));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Makes sure the edge has a non-null, relative geometry\n\t\t\t\tvar geo = model.getGeometry(edge);\n\n\t\t\t\tif (geo == null)\n\t\t\t\t{\n\t\t\t\t\tgeo = new mxGeometry();\n\t\t\t\t\tgeo.relative = true;\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Uses scaled waypoints in geometry\n\t\t\t\tif (this.waypoints != null && this.waypoints.length > 0)\n\t\t\t\t{\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar tr = this.graph.view.translate;\n\t\t\t\t\tgeo.points = [];\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < this.waypoints.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pt = this.waypoints[i];\n\t\t\t\t\t\tgeo.points.push(new mxPoint(pt.x / s - tr.x, pt.y / s - tr.y));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (target == null)\n\t\t\t\t{\n\t\t\t\t\tvar t = this.graph.view.translate;\n\t\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\t\tvar pt = (this.originalPoint != null) ?\n\t\t\t\t\t\t\tnew mxPoint(this.originalPoint.x / s - t.x, this.originalPoint.y / s - t.y) :\n\t\t\t\t\t\tnew mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\tgeo.setTerminalPoint(pt, false);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.CONNECT, 'cell', edge, 'terminal', target,\n\t\t\t\t\t'event', evt, 'target', dropTarget, 'terminalInserted', terminalInserted));\n\t\t\t}\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxLog.show();\n\t\t\tmxLog.debug(e.message);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tif (this.select)\n\t\t{\n\t\t\tthis.selectCells(edge, (terminalInserted) ? target : null);\n\t\t}\n\t}\n};\n\n/**\n * Function: selectCells\n * \n * Selects the given edge after adding a new connection. The target argument\n * contains the target vertex if one has been inserted.\n */\nmxConnectionHandler.prototype.selectCells = function(edge, target)\n{\n\tthis.graph.setSelectionCell(edge);\n};\n\n/**\n * Function: insertEdge\n * \n * Creates, inserts and returns the new edge for the given parameters. This\n * implementation does only use <createEdge> if <factoryMethod> is defined,\n * otherwise <mxGraph.insertEdge> will be used.\n */\nmxConnectionHandler.prototype.insertEdge = function(parent, id, value, source, target, style)\n{\n\tif (this.factoryMethod == null)\n\t{\n\t\treturn this.graph.insertEdge(parent, id, value, source, target, style);\n\t}\n\telse\n\t{\n\t\tvar edge = this.createEdge(value, source, target, style);\n\t\tedge = this.graph.addEdge(edge, parent, source, target);\n\t\t\n\t\treturn edge;\n\t}\n};\n\n/**\n * Function: createTargetVertex\n * \n * Hook method for creating new vertices on the fly if no target was\n * under the mouse. This is only called if <createTarget> is true and\n * returns null.\n * \n * Parameters:\n * \n * evt - Mousedown event of the connect gesture.\n * source - <mxCell> that represents the source terminal.\n */\nmxConnectionHandler.prototype.createTargetVertex = function(evt, source)\n{\n\t// Uses the first non-relative source\n\tvar geo = this.graph.getCellGeometry(source);\n\t\n\twhile (geo != null && geo.relative)\n\t{\n\t\tsource = this.graph.getModel().getParent(source);\n\t\tgeo = this.graph.getCellGeometry(source);\n\t}\n\t\n\tvar clone = this.graph.cloneCell(source);\n\tvar geo = this.graph.getModel().getGeometry(clone);\n\t\n\tif (geo != null)\n\t{\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar point = new mxPoint(this.currentPoint.x / s - t.x, this.currentPoint.y / s - t.y);\n\t\tgeo.x = Math.round(point.x - geo.width / 2 - this.graph.panDx / s);\n\t\tgeo.y = Math.round(point.y - geo.height / 2 - this.graph.panDy / s);\n\n\t\t// Aligns with source if within certain tolerance\n\t\tvar tol = this.getAlignmentTolerance();\n\t\t\n\t\tif (tol > 0)\n\t\t{\n\t\t\tvar sourceState = this.graph.view.getState(source);\n\t\t\t\n\t\t\tif (sourceState != null)\n\t\t\t{\n\t\t\t\tvar x = sourceState.x / s - t.x;\n\t\t\t\tvar y = sourceState.y / s - t.y;\n\t\t\t\t\n\t\t\t\tif (Math.abs(x - geo.x) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.x = Math.round(x);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (Math.abs(y - geo.y) <= tol)\n\t\t\t\t{\n\t\t\t\t\tgeo.y = Math.round(y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn clone;\t\t\n};\n\n/**\n * Function: getAlignmentTolerance\n * \n * Returns the tolerance for aligning new targets to sources. This returns the grid size / 2.\n */\nmxConnectionHandler.prototype.getAlignmentTolerance = function(evt)\n{\n\treturn (this.graph.isGridEnabled()) ? this.graph.gridSize / 2 : this.graph.tolerance;\n};\n\n/**\n * Function: createEdge\n * \n * Creates and returns a new edge using <factoryMethod> if one exists. If\n * no factory method is defined, then a new default edge is returned. The\n * source and target arguments are informal, the actual connection is\n * setup later by the caller of this function.\n * \n * Parameters:\n * \n * value - Value to be used for creating the edge.\n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n * style - Optional style from the preview edge.\n */\nmxConnectionHandler.prototype.createEdge = function(value, source, target, style)\n{\n\tvar edge = null;\n\t\n\t// Creates a new edge using the factoryMethod\n\tif (this.factoryMethod != null)\n\t{\n\t\tedge = this.factoryMethod(source, target, style);\n\t}\n\t\n\tif (edge == null)\n\t{\n\t\tedge = new mxCell(value || '');\n\t\tedge.setEdge(true);\n\t\tedge.setStyle(style);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\tedge.setGeometry(geo);\n\t}\n\n\treturn edge;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This should be\n * called on all instances. It is called automatically for the built-in\n * instance created for each <mxGraph>.\n */\nmxConnectionHandler.prototype.destroy = function()\n{\n\tthis.graph.removeMouseListener(this);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\n\tif (this.changeHandler != null)\n\t{\n\t\tthis.graph.getModel().removeListener(this.changeHandler);\n\t\tthis.graph.getView().removeListener(this.changeHandler);\n\t\tthis.changeHandler = null;\n\t}\n\t\n\tif (this.drillHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.drillHandler);\n\t\tthis.graph.getView().removeListener(this.drillHandler);\n\t\tthis.drillHandler = null;\n\t}\n\t\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n};\n\n__mxOutput.mxConnectionHandler = typeof mxConnectionHandler !== 'undefined' ? mxConnectionHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxConstraintHandler\n *\n * Handles constraints on connection targets. This class is in charge of\n * showing fixed points when the mouse is over a vertex and handles constraints\n * to establish new connections.\n *\n * Constructor: mxConstraintHandler\n *\n * Constructs an new constraint handler.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * factoryMethod - Optional function to create the edge. The function takes\n * the source and target <mxCell> as the first and second argument and\n * returns the <mxCell> that represents the new edge.\n */\nfunction mxConstraintHandler(graph)\n{\n\tthis.graph = graph;\n\t\n\t// Adds a graph model listener to update the current focus on changes\n\tthis.resetHandler = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tif (this.currentFocus != null && this.graph.view.getState(this.currentFocus.cell) == null)\n\t\t{\n\t\t\tthis.reset();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.redraw();\n\t\t}\n\t});\n\t\n\tthis.graph.model.addListener(mxEvent.CHANGE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE_AND_TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.TRANSLATE, this.resetHandler);\n\tthis.graph.view.addListener(mxEvent.SCALE, this.resetHandler);\n\tthis.graph.addListener(mxEvent.ROOT, this.resetHandler);\n};\n\n/**\n * Variable: pointImage\n * \n * <mxImage> to be used as the image for fixed connection points.\n */\nmxConstraintHandler.prototype.pointImage = new mxImage(mxClient.imageBasePath + '/point.gif', 5, 5);\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxConstraintHandler.prototype.graph = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxConstraintHandler.prototype.enabled = true;\n\n/**\n * Variable: highlightColor\n * \n * Specifies the color for the highlight. Default is <mxConstants.DEFAULT_VALID_COLOR>.\n */\nmxConstraintHandler.prototype.highlightColor = mxConstants.DEFAULT_VALID_COLOR;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxConstraintHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxConstraintHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxConstraintHandler.prototype.reset = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t}\n\t\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n\t\n\tthis.currentConstraint = null;\n\tthis.currentFocusArea = null;\n\tthis.currentPoint = null;\n\tthis.currentFocus = null;\n\tthis.focusPoints = null;\n};\n\n/**\n * Function: getTolerance\n * \n * Returns the tolerance to be used for intersecting connection points. This\n * implementation returns <mxGraph.tolerance>.\n * \n * Parameters:\n * \n * me - <mxMouseEvent> whose tolerance should be returned.\n */\nmxConstraintHandler.prototype.getTolerance = function(me)\n{\n\treturn this.graph.getTolerance();\n};\n\n/**\n * Function: getImageForConstraint\n * \n * Returns the tolerance to be used for intersecting connection points.\n */\nmxConstraintHandler.prototype.getImageForConstraint = function(state, constraint, point)\n{\n\treturn this.pointImage;\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given <mxMouseEvent> should be ignored in <update>. This\n * implementation always returns false.\n */\nmxConstraintHandler.prototype.isEventIgnored = function(me, source)\n{\n\treturn false;\n};\n\n/**\n * Function: isStateIgnored\n * \n * Returns true if the given state should be ignored. This always returns false.\n */\nmxConstraintHandler.prototype.isStateIgnored = function(state, source)\n{\n\treturn false;\n};\n\n/**\n * Function: destroyIcons\n * \n * Destroys the <focusIcons> if they exist.\n */\nmxConstraintHandler.prototype.destroyIcons = function()\n{\n\tif (this.focusIcons != null)\n\t{\n\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t{\n\t\t\tthis.focusIcons[i].destroy();\n\t\t}\n\t\t\n\t\tthis.focusIcons = null;\n\t\tthis.focusPoints = null;\n\t}\n};\n\n/**\n * Function: destroyFocusHighlight\n * \n * Destroys the <focusHighlight> if one exists.\n */\nmxConstraintHandler.prototype.destroyFocusHighlight = function()\n{\n\tif (this.focusHighlight != null)\n\t{\n\t\tthis.focusHighlight.destroy();\n\t\tthis.focusHighlight = null;\n\t}\n};\n\n/**\n * Function: isKeepFocusEvent\n * \n * Returns true if the current focused state should not be changed for the given event.\n * This returns true if shift and alt are pressed.\n */\nmxConstraintHandler.prototype.isKeepFocusEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent());\n};\n\n/**\n * Function: getCellForEvent\n * \n * Returns the cell for the given event.\n */\nmxConstraintHandler.prototype.getCellForEvent = function(me, point)\n{\n\tvar cell = me.getCell();\n\t\n\t// Gets cell under actual point if different from event location\n\tif (cell == null && point != null && (me.getGraphX() != point.x || me.getGraphY() != point.y))\n\t{\n\t\tcell = this.graph.getCellAt(point.x, point.y);\n\t}\n\t\n\t// Uses connectable parent vertex if one exists\n\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t{\n\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\n\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t{\n\t\t\tcell = parent;\n\t\t}\n\t}\n\t\n\treturn (this.graph.isCellLocked(cell)) ? null : cell;\n};\n\n/**\n * Function: update\n * \n * Updates the state of this handler based on the given <mxMouseEvent>.\n * Source is a boolean indicating if the cell is a source or target.\n */\nmxConstraintHandler.prototype.update = function(me, source, existingEdge, point)\n{\n\tif (this.isEnabled() && !this.isEventIgnored(me))\n\t{\n\t\t// Lazy installation of mouseleave handler\n\t\tif (this.mouseleaveHandler == null && this.graph.container != null)\n\t\t{\n\t\t\tthis.mouseleaveHandler = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t});\n\n\t\t\tmxEvent.addListener(this.graph.container, 'mouseleave', this.resetHandler);\t\n\t\t}\n\t\t\n\t\tvar tol = this.getTolerance(me);\n\t\tvar x = (point != null) ? point.x : me.getGraphX();\n\t\tvar y = (point != null) ? point.y : me.getGraphY();\n\t\tvar grid = new mxRectangle(x - tol, y - tol, 2 * tol, 2 * tol);\n\t\tvar mouse = new mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol);\n\t\tvar state = this.graph.view.getState(this.getCellForEvent(me, point));\n\n\t\t// Keeps focus icons visible while over vertex bounds and no other cell under mouse or shift is pressed\n\t\tif (!this.isKeepFocusEvent(me) && (this.currentFocusArea == null || this.currentFocus == null ||\n\t\t\t(state != null) || !this.graph.getModel().isVertex(this.currentFocus.cell) ||\n\t\t\t!mxUtils.intersects(this.currentFocusArea, mouse)) && (state != this.currentFocus))\n\t\t{\n\t\t\tthis.currentFocusArea = null;\n\t\t\tthis.currentFocus = null;\n\t\t\tthis.setFocus(me, state, source);\n\t\t}\n\n\t\tthis.currentConstraint = null;\n\t\tthis.currentPoint = null;\n\t\tvar minDistSq = null;\n\t\t\n\t\tif (this.focusIcons != null && this.constraints != null &&\n\t\t\t(state == null || this.currentFocus == state))\n\t\t{\n\t\t\tvar cx = mouse.getCenterX();\n\t\t\tvar cy = mouse.getCenterY();\n\t\t\t\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tvar dx = cx - this.focusIcons[i].bounds.getCenterX();\n\t\t\t\tvar dy = cy - this.focusIcons[i].bounds.getCenterY();\n\t\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\t\n\t\t\t\tif ((this.intersects(this.focusIcons[i], mouse, source, existingEdge) || (point != null &&\n\t\t\t\t\tthis.intersects(this.focusIcons[i], grid, source, existingEdge))) &&\n\t\t\t\t\t(minDistSq == null || tmp < minDistSq))\n\t\t\t\t{\n\t\t\t\t\tthis.currentConstraint = this.constraints[i];\n\t\t\t\t\tthis.currentPoint = this.focusPoints[i];\n\t\t\t\t\tminDistSq = tmp;\n\t\t\t\t\t\n\t\t\t\t\tvar tmp = this.focusIcons[i].bounds.clone();\n\t\t\t\t\ttmp.grow(mxConstants.HIGHLIGHT_SIZE + 1);\n\t\t\t\t\ttmp.width -= 1;\n\t\t\t\t\ttmp.height -= 1;\n\t\t\t\t\t\n\t\t\t\t\tif (this.focusHighlight == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar hl = this.createHighlightShape();\n\t\t\t\t\t\thl.dialect = (this.graph.dialect == mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\t\t\tmxConstants.DIALECT_SVG : mxConstants.DIALECT_VML;\n\t\t\t\t\t\thl.pointerEvents = false;\n\n\t\t\t\t\t\thl.init(this.graph.getView().getOverlayPane());\n\t\t\t\t\t\tthis.focusHighlight = hl;\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\tmxEvent.redirectMouseEvents(hl.node, this.graph, getState);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.focusHighlight.bounds = tmp;\n\t\t\t\t\tthis.focusHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.currentConstraint == null)\n\t\t{\n\t\t\tthis.destroyFocusHighlight();\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.currentConstraint = null;\n\t\tthis.currentFocus = null;\n\t\tthis.currentPoint = null;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.redraw = function()\n{\n\tif (this.currentFocus != null && this.constraints != null && this.focusIcons != null)\n\t{\n\t\tvar state = this.graph.view.getState(this.currentFocus.cell);\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tthis.focusIcons[i].bounds = bounds;\n\t\t\tthis.focusIcons[i].redraw();\n\t\t\tthis.currentFocusArea.add(this.focusIcons[i].bounds);\n\t\t\tthis.focusPoints[i] = cp;\n\t\t}\n\t}\t\n};\n\n/**\n * Function: setFocus\n * \n * Transfers the focus to the given state as a source or target terminal. If\n * the handler is not enabled then the outline is painted, but the constraints\n * are ignored.\n */\nmxConstraintHandler.prototype.setFocus = function(me, state, source)\n{\n\tthis.constraints = (state != null && !this.isStateIgnored(state, source) &&\n\t\tthis.graph.isCellConnectable(state.cell)) ? ((this.isEnabled()) ?\n\t\t(this.graph.getAllConnectionConstraints(state, source) || []) : []) : null;\n\n\t// Only uses cells which have constraints\n\tif (this.constraints != null)\n\t{\n\t\tthis.currentFocus = state;\n\t\tthis.currentFocusArea = new mxRectangle(state.x, state.y, state.width, state.height);\n\t\t\n\t\tif (this.focusIcons != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.focusIcons.length; i++)\n\t\t\t{\n\t\t\t\tthis.focusIcons[i].destroy();\n\t\t\t}\n\t\t\t\n\t\t\tthis.focusIcons = null;\n\t\t\tthis.focusPoints = null;\n\t\t}\n\t\t\n\t\tthis.focusPoints = [];\n\t\tthis.focusIcons = [];\n\t\t\n\t\tfor (var i = 0; i < this.constraints.length; i++)\n\t\t{\n\t\t\tvar cp = this.graph.getConnectionPoint(state, this.constraints[i]);\n\t\t\tvar img = this.getImageForConstraint(state, this.constraints[i], cp);\n\n\t\t\tvar src = img.src;\n\t\t\tvar bounds = new mxRectangle(Math.round(cp.x - img.width / 2),\n\t\t\t\tMath.round(cp.y - img.height / 2), img.width, img.height);\n\t\t\tvar icon = new mxImageShape(bounds, src);\n\t\t\ticon.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\ticon.preserveImageAspect = false;\n\t\t\ticon.init(this.graph.getView().getDecoratorPane());\n\t\t\t\n\t\t\t// Fixes lost event tracking for images in quirks / IE8 standards\n\t\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t\t{\n\t\t\t\tmxEvent.addListener(icon.node, 'dragstart', function(evt)\n\t\t\t\t{\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// Move the icon behind all other overlays\n\t\t\tif (icon.node.previousSibling != null)\n\t\t\t{\n\t\t\t\ticon.node.parentNode.insertBefore(icon.node, icon.node.parentNode.firstChild);\n\t\t\t}\n\n\t\t\tvar getState = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\treturn (this.currentFocus != null) ? this.currentFocus : state;\n\t\t\t});\n\t\t\t\n\t\t\ticon.redraw();\n\n\t\t\tmxEvent.redirectMouseEvents(icon.node, this.graph, getState);\n\t\t\tthis.currentFocusArea.add(icon.bounds);\n\t\t\tthis.focusIcons.push(icon);\n\t\t\tthis.focusPoints.push(cp);\n\t\t}\n\t\t\n\t\tthis.currentFocusArea.grow(this.getTolerance(me));\n\t}\n\telse\n\t{\n\t\tthis.destroyIcons();\n\t\tthis.destroyFocusHighlight();\n\t}\n};\n\n/**\n * Function: createHighlightShape\n * \n * Create the shape used to paint the highlight.\n * \n * Returns true if the given icon intersects the given point.\n */\nmxConstraintHandler.prototype.createHighlightShape = function()\n{\n\tvar hl = new mxRectangleShape(null, this.highlightColor, this.highlightColor, mxConstants.HIGHLIGHT_STROKEWIDTH);\n\thl.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\t\n\treturn hl;\n};\n\n/**\n * Function: intersects\n * \n * Returns true if the given icon intersects the given rectangle.\n */\nmxConstraintHandler.prototype.intersects = function(icon, mouse, source, existingEdge)\n{\n\treturn mxUtils.intersects(icon.bounds, mouse);\n};\n\n/**\n * Function: destroy\n * \n * Destroy this handler.\n */\nmxConstraintHandler.prototype.destroy = function()\n{\n\tthis.reset();\n\t\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.graph.model.removeListener(this.resetHandler);\n\t\tthis.graph.view.removeListener(this.resetHandler);\n\t\tthis.graph.removeListener(this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.mouseleaveHandler != null && this.graph.container != null)\n\t{\n\t\tmxEvent.removeListener(this.graph.container, 'mouseleave', this.mouseleaveHandler);\n\t\tthis.mouseleaveHandler = null;\n\t}\n};\n\n__mxOutput.mxConstraintHandler = typeof mxConstraintHandler !== 'undefined' ? mxConstraintHandler : undefined;\n\n/**\n * Copyright (c) 2006-2016, JGraph Ltd\n * Copyright (c) 2006-2016, Gaudenz Alder\n */\n/**\n * Class: mxRubberband\n * \n * Event handler that selects rectangular regions. This is not built-into\n * <mxGraph>. To enable rubberband selection in a graph, use the following code.\n * \n * Example:\n * \n * (code)\n * var rubberband = new mxRubberband(graph);\n * (end)\n * \n * Constructor: mxRubberband\n * \n * Constructs an event handler that selects rectangular regions in the graph\n * using rubberband selection.\n */\nfunction mxRubberband(graph)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.graph.addMouseListener(this);\n\n\t\t// Handles force rubberband event\n\t\tthis.forceRubberbandHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar evtName = evt.getProperty('eventName');\n\t\t\tvar me = evt.getProperty('event');\n\t\t\t\n\t\t\tif (evtName == mxEvent.MOUSE_DOWN && this.isForceRubberbandEvent(me))\n\t\t\t{\n\t\t\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\t\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\t\t\torigin.x -= offset.x;\n\t\t\t\torigin.y -= offset.y;\n\t\t\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\t\t\t\tme.consume(false);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.FIRE_MOUSE_EVENT, this.forceRubberbandHandler);\n\t\t\n\t\t// Repaints the marquee after autoscroll\n\t\tthis.panHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.repaint();\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.PAN, this.panHandler);\n\t\t\n\t\t// Does not show menu if any touch gestures take place after the trigger\n\t\tthis.gestureHandler = mxUtils.bind(this, function(sender, eo)\n\t\t{\n\t\t\tif (this.first != null)\n\t\t\t{\n\t\t\t\tthis.reset();\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.graph.addListener(mxEvent.GESTURE, this.gestureHandler);\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: defaultOpacity\n * \n * Specifies the default opacity to be used for the rubberband div. Default\n * is 20.\n */\nmxRubberband.prototype.defaultOpacity = 20;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxRubberband.prototype.enabled = true;\n\n/**\n * Variable: div\n * \n * Holds the DIV element which is currently visible.\n */\nmxRubberband.prototype.div = null;\n\n/**\n * Variable: sharedDiv\n * \n * Holds the DIV element which is used to display the rubberband.\n */\nmxRubberband.prototype.sharedDiv = null;\n\n/**\n * Variable: currentX\n * \n * Holds the value of the x argument in the last call to <update>.\n */\nmxRubberband.prototype.currentX = 0;\n\n/**\n * Variable: currentY\n * \n * Holds the value of the y argument in the last call to <update>.\n */\nmxRubberband.prototype.currentY = 0;\n\n/**\n * Variable: fadeOut\n * \n * Optional fade out effect. Default is false.\n */\nmxRubberband.prototype.fadeOut = false;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxRubberband.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\t\t\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation updates\n * <enabled>.\n */\nmxRubberband.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isForceRubberbandEvent\n * \n * Returns true if the given <mxMouseEvent> should start rubberband selection.\n * This implementation returns true if the alt key is pressed.\n */\nmxRubberband.prototype.isForceRubberbandEvent = function(me)\n{\n\treturn mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxRubberband.prototype.mouseDown = function(sender, me)\n{\n\tif (!me.isConsumed() && this.isEnabled() && this.graph.isEnabled() &&\n\t\tme.getState() == null && !mxEvent.isMultiTouchEvent(me.getEvent()))\n\t{\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tthis.start(me.getX() + origin.x, me.getY() + origin.y);\n\n\t\t// Does not prevent the default for this event so that the\n\t\t// event processing chain is still executed even if we start\n\t\t// rubberbanding. This is required eg. in ExtJs to hide the\n\t\t// current context menu. In mouseMove we'll make sure we're\n\t\t// not selecting anything while we're rubberbanding.\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: start\n * \n * Sets the start point for the rubberband selection.\n */\nmxRubberband.prototype.start = function(x, y)\n{\n\tthis.first = new mxPoint(x, y);\n\n\tvar container = this.graph.container;\n\t\n\tfunction createMouseEvent(evt)\n\t{\n\t\tvar me = new mxMouseEvent(evt);\n\t\tvar pt = mxUtils.convertPoint(container, me.getX(), me.getY());\n\t\t\n\t\tme.graphX = pt.x;\n\t\tme.graphY = pt.y;\n\t\t\n\t\treturn me;\n\t};\n\n\tthis.dragHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseMove(this.graph, createMouseEvent(evt));\n\t});\n\n\tthis.dropHandler = mxUtils.bind(this, function(evt)\n\t{\n\t\tthis.mouseUp(this.graph, createMouseEvent(evt));\n\t});\n\n\t// Workaround for rubberband stopping if the mouse leaves the container in Firefox\n\tif (mxClient.IS_FF)\n\t{\n\t\tmxEvent.addGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\t}\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating therubberband selection.\n */\nmxRubberband.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.first != null)\n\t{\n\t\tvar origin = mxUtils.getScrollOrigin(this.graph.container);\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\torigin.x -= offset.x;\n\t\torigin.y -= offset.y;\n\t\tvar x = me.getX() + origin.x;\n\t\tvar y = me.getY() + origin.y;\n\t\tvar dx = this.first.x - x;\n\t\tvar dy = this.first.y - y;\n\t\tvar tol = this.graph.tolerance;\n\t\t\n\t\tif (this.div != null || Math.abs(dx) > tol ||  Math.abs(dy) > tol)\n\t\t{\n\t\t\tif (this.div == null)\n\t\t\t{\n\t\t\t\tthis.div = this.createShape();\n\t\t\t}\n\t\t\t\n\t\t\t// Clears selection while rubberbanding. This is required because\n\t\t\t// the event is not consumed in mouseDown.\n\t\t\tmxUtils.clearSelection();\n\t\t\t\n\t\t\tthis.update(x, y);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates the rubberband selection shape.\n */\nmxRubberband.prototype.createShape = function()\n{\n\tif (this.sharedDiv == null)\n\t{\n\t\tthis.sharedDiv = document.createElement('div');\n\t\tthis.sharedDiv.className = 'mxRubberband';\n\t\tmxUtils.setOpacity(this.sharedDiv, this.defaultOpacity);\n\t}\n\n\tthis.graph.container.appendChild(this.sharedDiv);\n\tvar result = this.sharedDiv;\n\t\n\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t{\n\t\tthis.sharedDiv = null;\n\t}\n\t\t\n\treturn result;\n};\n\n/**\n * Function: isActive\n * \n * Returns true if this handler is active.\n */\nmxRubberband.prototype.isActive = function(sender, me)\n{\n\treturn this.div != null && this.div.style.display != 'none';\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by selecting the region of the rubberband using\n * <mxGraph.selectRegion>.\n */\nmxRubberband.prototype.mouseUp = function(sender, me)\n{\n\tvar active = this.isActive();\n\tthis.reset();\n\t\n\tif (active)\n\t{\n\t\tthis.execute(me.getEvent());\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: execute\n * \n * Resets the state of this handler and selects the current region\n * for the given event.\n */\nmxRubberband.prototype.execute = function(evt)\n{\n\tvar rect = new mxRectangle(this.x, this.y, this.width, this.height);\n\tthis.graph.selectRegion(rect, evt);\n};\n\n/**\n * Function: reset\n * \n * Resets the state of the rubberband selection.\n */\nmxRubberband.prototype.reset = function()\n{\n\tif (this.div != null)\n\t{\n\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10) && this.fadeOut)\n\t\t{\n\t\t\tvar temp = this.div;\n\t\t\tmxUtils.setPrefixedStyle(temp.style, 'transition', 'all 0.2s linear');\n\t\t\ttemp.style.pointerEvents = 'none';\n\t\t\ttemp.style.opacity = 0;\n\t\t    \n\t\t    window.setTimeout(function()\n\t\t    \t{\n\t\t    \t\ttemp.parentNode.removeChild(temp);\n\t\t    \t}, 200);\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t}\n\n\tmxEvent.removeGestureListeners(document, null, this.dragHandler, this.dropHandler);\n\tthis.dragHandler = null;\n\tthis.dropHandler = null;\n\t\n\tthis.currentX = 0;\n\tthis.currentY = 0;\n\tthis.first = null;\n\tthis.div = null;\n};\n\n/**\n * Function: update\n * \n * Sets <currentX> and <currentY> and calls <repaint>.\n */\nmxRubberband.prototype.update = function(x, y)\n{\n\tthis.currentX = x;\n\tthis.currentY = y;\n\t\n\tthis.repaint();\n};\n\n/**\n * Function: repaint\n * \n * Computes the bounding box and updates the style of the <div>.\n */\nmxRubberband.prototype.repaint = function()\n{\n\tif (this.div != null)\n\t{\n\t\tvar x = this.currentX - this.graph.panDx;\n\t\tvar y = this.currentY - this.graph.panDy;\n\t\t\n\t\tthis.x = Math.min(this.first.x, x);\n\t\tthis.y = Math.min(this.first.y, y);\n\t\tthis.width = Math.max(this.first.x, x) - this.x;\n\t\tthis.height =  Math.max(this.first.y, y) - this.y;\n\n\t\tvar dx = (mxClient.IS_VML) ? this.graph.panDx : 0;\n\t\tvar dy = (mxClient.IS_VML) ? this.graph.panDy : 0;\n\t\t\n\t\tthis.div.style.left = (this.x + dx) + 'px';\n\t\tthis.div.style.top = (this.y + dy) + 'px';\n\t\tthis.div.style.width = Math.max(1, this.width) + 'px';\n\t\tthis.div.style.height = Math.max(1, this.height) + 'px';\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called, it is called automatically when the\n * window unloads.\n */\nmxRubberband.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\t\tthis.graph.removeMouseListener(this);\n\t\tthis.graph.removeListener(this.forceRubberbandHandler);\n\t\tthis.graph.removeListener(this.panHandler);\n\t\tthis.reset();\n\t\t\n\t\tif (this.sharedDiv != null)\n\t\t{\n\t\t\tthis.sharedDiv = null;\n\t\t}\n\t}\n};\n\n__mxOutput.mxRubberband = typeof mxRubberband !== 'undefined' ? mxRubberband : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxHandle\n * \n * Implements a single custom handle for vertices.\n * \n * Constructor: mxHandle\n * \n * Constructs a new handle for the given state.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxHandle(state, cursor, image)\n{\n\tthis.graph = state.view.graph;\n\tthis.state = state;\n\tthis.cursor = (cursor != null) ? cursor : this.cursor;\n\tthis.image = (image != null) ? image : this.image;\n\tthis.init();\n};\n\n/**\n * Variable: cursor\n * \n * Specifies the cursor to be used for this handle. Default is 'default'.\n */\nmxHandle.prototype.cursor = 'default';\n\n/**\n * Variable: image\n * \n * Specifies the <mxImage> to be used to render the handle. Default is null.\n */\nmxHandle.prototype.image = null;\n\n/**\n * Variable: ignoreGrid\n * \n * Default is false.\n */\nmxHandle.prototype.ignoreGrid = false;\n\n/**\n * Function: getPosition\n * \n * Hook for subclassers to return the current position of the handle.\n */\nmxHandle.prototype.getPosition = function(bounds) { };\n\n/**\n * Function: setPosition\n * \n * Hooks for subclassers to update the style in the <state>.\n */\nmxHandle.prototype.setPosition = function(bounds, pt, me) { };\n\n/**\n * Function: execute\n * \n * Hook for subclassers to execute the handle.\n */\nmxHandle.prototype.execute = function() { };\n\n/**\n * Function: copyStyle\n * \n * Sets the cell style with the given name to the corresponding value in <state>.\n */\nmxHandle.prototype.copyStyle = function(key)\n{\n\tthis.graph.setCellStyles(key, this.state.style[key], [this.state.cell]);\n};\n\n/**\n * Function: processEvent\n * \n * Processes the given <mxMouseEvent> and invokes <setPosition>.\n */\nmxHandle.prototype.processEvent = function(me)\n{\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\tvar pt = new mxPoint(me.getGraphX() / scale - tr.x, me.getGraphY() / scale - tr.y);\n\t\n\t// Center shape on mouse cursor\n\tif (this.shape != null && this.shape.bounds != null)\n\t{\n\t\tpt.x -= this.shape.bounds.width / scale / 4;\n\t\tpt.y -= this.shape.bounds.height / scale / 4;\n\t}\n\n\t// Snaps to grid for the rotated position then applies the rotation for the direction after that\n\tvar alpha1 = -mxUtils.toRadians(this.getRotation());\n\tvar alpha2 = -mxUtils.toRadians(this.getTotalRotation()) - alpha1;\n\tpt = this.flipPoint(this.rotatePoint(this.snapPoint(this.rotatePoint(pt, alpha1),\n\t\t\tthis.ignoreGrid || !this.graph.isGridEnabledEvent(me.getEvent())), alpha2));\n\tthis.setPosition(this.state.getPaintBounds(), pt, me);\n\tthis.positionChanged();\n\tthis.redraw();\n};\n\n/**\n * Function: positionChanged\n * \n * Called after <setPosition> has been called in <processEvent>. This repaints\n * the state using <mxCellRenderer>.\n */\nmxHandle.prototype.positionChanged = function()\n{\n\tif (this.state.text != null)\n\t{\n\t\tthis.state.text.apply(this.state);\n\t}\n\t\n\tif (this.state.shape != null)\n\t{\n\t\tthis.state.shape.apply(this.state);\n\t}\n\t\n\tthis.graph.cellRenderer.redraw(this.state, true);\n};\n\n/**\n * Function: getRotation\n * \n * Returns the rotation defined in the style of the cell.\n */\nmxHandle.prototype.getRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: getTotalRotation\n * \n * Returns the rotation from the style and the rotation from the direction of\n * the cell.\n */\nmxHandle.prototype.getTotalRotation = function()\n{\n\tif (this.state.shape != null)\n\t{\n\t\treturn this.state.shape.getShapeRotation();\n\t}\n\t\n\treturn 0;\n};\n\n/**\n * Function: init\n * \n * Creates and initializes the shapes required for this handle.\n */\nmxHandle.prototype.init = function()\n{\n\tvar html = this.isHtmlRequired();\n\t\n\tif (this.image != null)\n\t{\n\t\tthis.shape = new mxImageShape(new mxRectangle(0, 0, this.image.width, this.image.height), this.image.src);\n\t\tthis.shape.preserveImageAspect = false;\n\t}\n\telse\n\t{\n\t\tthis.shape = this.createShape(html);\n\t}\n\t\n\tthis.initShape(html);\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the shape for this handle.\n */\nmxHandle.prototype.createShape = function(html)\n{\n\tvar bounds = new mxRectangle(0, 0, mxConstants.HANDLE_SIZE, mxConstants.HANDLE_SIZE);\n\t\n\treturn new mxRectangleShape(bounds, mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n};\n\n/**\n * Function: initShape\n * \n * Initializes <shape> and sets its cursor.\n */\nmxHandle.prototype.initShape = function(html)\n{\n\tif (html && this.shape.isHtmlAllowed())\n\t{\n\t\tthis.shape.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tthis.shape.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\t\n\t\tif (this.cursor != null)\n\t\t{\n\t\t\tthis.shape.init(this.graph.getView().getOverlayPane());\n\t\t}\n\t}\n\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\tthis.shape.node.style.cursor = this.cursor;\n};\n\n/**\n * Function: redraw\n * \n * Renders the shape for this handle.\n */\nmxHandle.prototype.redraw = function()\n{\n\tif (this.shape != null && this.state.shape != null)\n\t{\n\t\tvar pt = this.getPosition(this.state.getPaintBounds());\n\t\t\n\t\tif (pt != null)\n\t\t{\n\t\t\tvar alpha = mxUtils.toRadians(this.getTotalRotation());\n\t\t\tpt = this.rotatePoint(this.flipPoint(pt), alpha);\n\t\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tvar tr = this.graph.view.translate;\n\t\t\tthis.shape.bounds.x = Math.floor((pt.x + tr.x) * scale - this.shape.bounds.width / 2);\n\t\t\tthis.shape.bounds.y = Math.floor((pt.y + tr.y) * scale - this.shape.bounds.height / 2);\n\t\t\t\n\t\t\t// Needed to force update of text bounds\n\t\t\tthis.shape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHtmlRequired\n * \n * Returns true if this handle should be rendered in HTML. This returns true if\n * the text node is in the graph container.\n */\nmxHandle.prototype.isHtmlRequired = function()\n{\n\treturn this.state.text != null && this.state.text.node.parentNode == this.graph.container;\n};\n\n/**\n * Function: rotatePoint\n * \n * Rotates the point by the given angle.\n */\nmxHandle.prototype.rotatePoint = function(pt, alpha)\n{\n\tvar bounds = this.state.getCellBounds();\n\tvar cx = new mxPoint(bounds.getCenterX(), bounds.getCenterY());\n\tvar cos = Math.cos(alpha);\n\tvar sin = Math.sin(alpha); \n\n\treturn mxUtils.getRotatedPoint(pt, cos, sin, cx);\n};\n\n/**\n * Function: flipPoint\n * \n * Flips the given point vertically and/or horizontally.\n */\nmxHandle.prototype.flipPoint = function(pt)\n{\n\tif (this.state.shape != null)\n\t{\n\t\tvar bounds = this.state.getCellBounds();\n\t\t\n\t\tif (this.state.shape.flipH)\n\t\t{\n\t\t\tpt.x = 2 * bounds.x + bounds.width - pt.x;\n\t\t}\n\t\t\n\t\tif (this.state.shape.flipV)\n\t\t{\n\t\t\tpt.y = 2 * bounds.y + bounds.height - pt.y;\n\t\t}\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: snapPoint\n * \n * Snaps the given point to the grid if ignore is false. This modifies\n * the given point in-place and also returns it.\n */\nmxHandle.prototype.snapPoint = function(pt, ignore)\n{\n\tif (!ignore)\n\t{\n\t\tpt.x = this.graph.snap(pt.x);\n\t\tpt.y = this.graph.snap(pt.y);\n\t}\n\t\n\treturn pt;\n};\n\n/**\n * Function: setVisible\n * \n * Shows or hides this handle.\n */\nmxHandle.prototype.setVisible = function(visible)\n{\n\tif (this.shape != null && this.shape.node != null)\n\t{\n\t\tthis.shape.node.style.display = (visible) ? '' : 'none';\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handle by setting its visibility to true.\n */\nmxHandle.prototype.reset = function()\n{\n\tthis.setVisible(true);\n\tthis.state.style = this.graph.getCellStyle(this.state.cell);\n\tthis.positionChanged();\n};\n\n/**\n * Function: destroy\n * \n * Destroys this handle.\n */\nmxHandle.prototype.destroy = function()\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxHandle = typeof mxHandle !== 'undefined' ? mxHandle : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxVertexHandler\n * \n * Event handler for resizing cells. This handler is automatically created in\n * <mxGraph.createHandler>.\n * \n * Constructor: mxVertexHandler\n * \n * Constructs an event handler that allows to resize vertices\n * and groups.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be resized.\n */\nfunction mxVertexHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tif (this.livePreview && this.index != null)\n\t\t\t{\n\t\t\t\t// Redraws the live preview\n\t\t\t\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\t\t\t\n\t\t\t\t// Redraws connected edges\n\t\t\t\tthis.state.view.invalidate(this.state.cell);\n\t\t\t\tthis.state.invalid = false;\n\t\t\t\tthis.state.view.validate();\n\t\t\t}\n\t\t\t\n\t\t\tthis.reset();\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxVertexHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxVertexHandler.prototype.state = null;\n\n/**\n * Variable: singleSizer\n * \n * Specifies if only one sizer handle at the bottom, right corner should be\n * used. Default is false.\n */\nmxVertexHandler.prototype.singleSizer = false;\n\n/**\n * Variable: index\n * \n * Holds the index of the current handle.\n */\nmxVertexHandler.prototype.index = null;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE or\n * if <tolerance> > 0. Default is true.\n */\nmxVertexHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxVertexHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxVertexHandler.prototype.tolerance = 0;\n\n/**\n * Variable: rotationEnabled\n * \n * Specifies if a rotation handle should be visible. Default is false.\n */\nmxVertexHandler.prototype.rotationEnabled = false;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxVertexHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: rotationRaster\n * \n * Specifies if rotation steps should be \"rasterized\" depening on the distance\n * to the handle. Default is true.\n */\nmxVertexHandler.prototype.rotationRaster = true;\n\n/**\n * Variable: rotationCursor\n * \n * Specifies the cursor for the rotation handle. Default is 'crosshair'.\n */\nmxVertexHandler.prototype.rotationCursor = 'crosshair';\n\n/**\n * Variable: livePreview\n * \n * Specifies if resize should change the cell in-place. This is an experimental\n * feature for non-touch devices. Default is false.\n */\nmxVertexHandler.prototype.livePreview = false;\n\n/**\n * Variable: manageSizers\n * \n * Specifies if sizers should be hidden and spaced if the vertex is small.\n * Default is false.\n */\nmxVertexHandler.prototype.manageSizers = false;\n\n/**\n * Variable: constrainGroupByChildren\n * \n * Specifies if the size of groups should be constrained by the children.\n * Default is false.\n */\nmxVertexHandler.prototype.constrainGroupByChildren = false;\n\n/**\n * Variable: rotationHandleVSpacing\n * \n * Vertical spacing for rotation icon. Default is -16.\n */\nmxVertexHandler.prototype.rotationHandleVSpacing = -16;\n\n/**\n * Variable: horizontalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset horizontally.\n */\nmxVertexHandler.prototype.horizontalOffset = 0;\n\n/**\n * Variable: verticalOffset\n * \n * The horizontal offset for the handles. This is updated in <redrawHandles>\n * if <manageSizers> is true and the sizers are offset vertically.\n */\nmxVertexHandler.prototype.verticalOffset = 0;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.selectionBorder = this.createSelectionShape(this.bounds);\n\t// VML dialect required here for event transparency in IE\n\tthis.selectionBorder.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tthis.selectionBorder.pointerEvents = false;\n\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tthis.selectionBorder.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(this.selectionBorder.node, this.graph, this.state);\n\t\n\tif (this.graph.isCellMovable(this.state.cell))\n\t{\n\t\tthis.selectionBorder.setCursor(mxConstants.CURSOR_MOVABLE_VERTEX);\n\t}\n\n\t// Adds the sizer handles\n\tif (mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells)\n\t{\n\t\tvar resizable = this.graph.isCellResizable(this.state.cell);\n\t\tthis.sizers = [];\n\n\t\tif (resizable || (this.graph.isLabelMovable(this.state.cell) &&\n\t\t\tthis.state.width >= 2 && this.state.height >= 2))\n\t\t{\n\t\t\tvar i = 0;\n\n\t\t\tif (resizable)\n\t\t\t{\n\t\t\t\tif (!this.singleSizer)\n\t\t\t\t{\n\t\t\t\t\tthis.sizers.push(this.createSizer('nw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('n-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('ne-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('w-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('e-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('sw-resize', i++));\n\t\t\t\t\tthis.sizers.push(this.createSizer('s-resize', i++));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sizers.push(this.createSizer('se-resize', i++));\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.model.getGeometry(this.state.cell);\n\t\t\t\n\t\t\tif (geo != null && !geo.relative && !this.graph.isSwimlane(this.state.cell) &&\n\t\t\t\tthis.graph.isLabelMovable(this.state.cell))\n\t\t\t{\n\t\t\t\t// Marks this as the label handle for getHandleForEvent\n\t\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_LABEL_HANDLE, mxEvent.LABEL_HANDLE, mxConstants.LABEL_HANDLE_SIZE, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\t\tthis.sizers.push(this.labelShape);\n\t\t\t}\n\t\t}\n\t\telse if (this.graph.isCellMovable(this.state.cell) && !this.graph.isCellResizable(this.state.cell) &&\n\t\t\tthis.state.width < 2 && this.state.height < 2)\n\t\t{\n\t\t\tthis.labelShape = this.createSizer(mxConstants.CURSOR_MOVABLE_VERTEX,\n\t\t\t\tmxEvent.LABEL_HANDLE, null, mxConstants.LABEL_HANDLE_FILLCOLOR);\n\t\t\tthis.sizers.push(this.labelShape);\n\t\t}\n\t}\n\t\n\t// Adds the rotation handler\n\tif (this.isRotationHandleVisible())\n\t{\n\t\tthis.rotationShape = this.createSizer(this.rotationCursor, mxEvent.ROTATION_HANDLE,\n\t\t\tmxConstants.HANDLE_SIZE + 3, mxConstants.HANDLE_FILLCOLOR);\n\t\tthis.sizers.push(this.rotationShape);\n\t}\n\n\tthis.customHandles = this.createCustomHandles();\n\tthis.redraw();\n\t\n\tif (this.constrainGroupByChildren)\n\t{\n\t\tthis.updateMinBounds();\n\t}\n};\n\n/**\n * Function: isRotationHandleVisible\n * \n * Returns true if the rotation handle should be showing.\n */\nmxVertexHandler.prototype.isRotationHandleVisible = function()\n{\n\treturn this.graph.isEnabled() && this.rotationEnabled && this.graph.isCellRotatable(this.state.cell) &&\n\t\t(mxGraphHandler.prototype.maxCells <= 0 || this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells) &&\n\t\tthis.state.width >= 2 && this.state.height >= 2;\n};\n\n/**\n * Function: isConstrainedEvent\n * \n * Returns true if the aspect ratio if the cell should be maintained.\n */\nmxVertexHandler.prototype.isConstrainedEvent = function(me)\n{\n\treturn mxEvent.isShiftDown(me.getEvent()) || this.state.style[mxConstants.STYLE_ASPECT] == 'fixed';\n};\n\n/**\n * Function: isCenteredEvent\n * \n * Returns true if the center of the vertex should be maintained during the resize.\n */\nmxVertexHandler.prototype.isCenteredEvent = function(state, me)\n{\n\treturn false;\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxVertexHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: updateMinBounds\n * \n * Initializes the shapes required for this vertex handler.\n */\nmxVertexHandler.prototype.updateMinBounds = function()\n{\n\tvar children = this.graph.getChildCells(this.state.cell);\n\t\n\tif (children.length > 0)\n\t{\n\t\tthis.minBounds = this.graph.view.getBounds(children);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tvar s = this.state.view.scale;\n\t\t\tvar t = this.state.view.translate;\n\n\t\t\tthis.minBounds.x -= this.state.x;\n\t\t\tthis.minBounds.y -= this.state.y;\n\t\t\tthis.minBounds.x /= s;\n\t\t\tthis.minBounds.y /= s;\n\t\t\tthis.minBounds.width /= s;\n\t\t\tthis.minBounds.height /= s;\n\t\t\tthis.x0 = this.state.x / s - t.x;\n\t\t\tthis.y0 = this.state.y / s - t.y;\n\t\t}\n\t}\n};\n\n/**\n * Function: getSelectionBounds\n * \n * Returns the mxRectangle that defines the bounds of the selection\n * border.\n */\nmxVertexHandler.prototype.getSelectionBounds = function(state)\n{\n\treturn new mxRectangle(Math.round(state.x), Math.round(state.y), Math.round(state.width), Math.round(state.height));\n};\n\n/**\n * Function: createParentHighlightShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\treturn this.createSelectionShape(bounds);\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxVertexHandler.prototype.createSelectionShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.VERTEX_SELECTION_COLOR>.\n */\nmxVertexHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.VERTEX_SELECTION_STROKEWIDTH>.\n */\nmxVertexHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.VERTEX_SELECTION_DASHED>.\n */\nmxVertexHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.VERTEX_SELECTION_DASHED;\n};\n\n/**\n * Function: createSizer\n * \n * Creates a sizer handle for the specified cursor and index and returns\n * the new <mxRectangleShape> that represents the handle.\n */\nmxVertexHandler.prototype.createSizer = function(cursor, index, size, fillColor)\n{\n\tsize = size || mxConstants.HANDLE_SIZE;\n\t\n\tvar bounds = new mxRectangle(0, 0, size, size);\n\tvar sizer = this.createSizerShape(bounds, index, fillColor);\n\n\tif (sizer.isHtmlAllowed() && this.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t{\n\t\tsizer.bounds.height -= 1;\n\t\tsizer.bounds.width -= 1;\n\t\tsizer.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tsizer.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tsizer.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tsizer.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(sizer.node, this.graph, this.state);\n\t\n\tif (this.graph.isEnabled())\n\t{\n\t\tsizer.setCursor(cursor);\n\t}\n\t\n\tif (!this.isSizerVisible(index))\n\t{\n\t\tsizer.visible = false;\n\t}\n\t\n\treturn sizer;\n};\n\n/**\n * Function: isSizerVisible\n * \n * Returns true if the sizer for the given index is visible.\n * This returns true for all given indices.\n */\nmxVertexHandler.prototype.isSizerVisible = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: createSizerShape\n * \n * Creates the shape used for the sizer handle for the specified bounds an\n * index. Only images and rectangles should be returned if support for HTML\n * labels with not foreign objects is required.\n */\nmxVertexHandler.prototype.createSizerShape = function(bounds, index, fillColor)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tbounds = new mxRectangle(bounds.x, bounds.y, this.handleImage.width, this.handleImage.height);\n\t\tvar shape = new mxImageShape(bounds, this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse if (index == mxEvent.ROTATION_HANDLE)\n\t{\n\t\treturn new mxEllipse(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n\telse\n\t{\n\t\treturn new mxRectangleShape(bounds, fillColor || mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createBounds\n * \n * Helper method to create an <mxRectangle> around the given centerpoint\n * with a width and height of 2*s or 6, if no s is given.\n */\nmxVertexHandler.prototype.moveSizerTo = function(shape, x, y)\n{\n\tif (shape != null)\n\t{\n\t\tshape.bounds.x = Math.floor(x - shape.bounds.width / 2);\n\t\tshape.bounds.y = Math.floor(y - shape.bounds.height / 2);\n\t\t\n\t\t// Fixes visible inactive handles in VML\n\t\tif (shape.node != null && shape.node.style.display != 'none')\n\t\t{\n\t\t\tshape.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event. This returns the index\n * of the sizer from where the event originated or <mxEvent.LABEL_INDEX>.\n */\nmxVertexHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\t\n\tfunction checkShape(shape)\n\t{\n\t\treturn shape != null && (me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit) &&\n\t\t\tshape.node.style.display != 'none' && shape.node.style.visibility != 'hidden'));\n\t}\n\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (checkShape(this.rotationShape))\n\t{\n\t\treturn mxEvent.ROTATION_HANDLE;\n\t}\n\telse if (checkShape(this.labelShape))\n\t{\n\t\treturn mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.sizers[i]))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxVertexHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event if a handle has been clicked. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxVertexHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 0;\n\t\n\tif (!me.isConsumed() && this.graph.isEnabled() && (tol > 0 || me.getState() == this.state))\n\t{\n\t\tvar handle = this.getHandleForEvent(me);\n\n\t\tif (handle != null)\n\t\t{\n\t\t\tthis.start(me.getGraphX(), me.getGraphY(), handle);\n\t\t\tme.consume();\n\t\t}\n\t}\n};\n\n/**\n * Function: isLivePreviewBorder\n * \n * Called if <livePreview> is enabled to check if a border should be painted.\n * This implementation returns true if the shape is transparent.\n */\nmxVertexHandler.prototype.isLivePreviewBorder = function()\n{\n\treturn this.state.shape != null && this.state.shape.fill == null && this.state.shape.stroke == null;\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.start = function(x, y, index)\n{\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.livePreviewActive = this.livePreview && this.graph.model.getChildCount(this.state.cell) == 0;\n\t\tthis.inTolerance = true;\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t\tthis.index = index;\n\t\tthis.startX = x;\n\t\tthis.startY = y;\n\t\t\n\t\t// Saves reference to parent state\n\t\tvar model = this.state.view.graph.model;\n\t\tvar parent = model.getParent(this.state.cell);\n\t\t\n\t\tif (this.state.view.currentRoot != parent && (model.isVertex(parent) || model.isEdge(parent)))\n\t\t{\n\t\t\tthis.parentState = this.state.view.graph.view.getState(parent);\n\t\t}\n\t\t\n\t\t// Creates a preview that can be on top of any HTML label\n\t\tthis.selectionBorder.node.style.display = (index == mxEvent.ROTATION_HANDLE) ? 'inline' : 'none';\n\t\t\n\t\t// Creates the border that represents the new bounds\n\t\tif (!this.livePreviewActive || this.isLivePreviewBorder())\n\t\t{\n\t\t\tthis.preview = this.createSelectionShape(this.bounds);\n\t\t\t\n\t\t\tif (!(mxClient.IS_SVG && Number(this.state.style[mxConstants.STYLE_ROTATION] || '0') != 0) &&\n\t\t\t\tthis.state.text != null && this.state.text.node.parentNode == this.graph.container)\n\t\t\t{\n\t\t\t\tthis.preview.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\t\t\tthis.preview.init(this.graph.container);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.preview.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\t\t\t\tmxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.preview.init(this.graph.view.getOverlayPane());\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Prepares the handles for live preview\n\t\tif (this.livePreviewActive)\n\t\t{\n\t\t\tthis.hideSizers();\n\t\t\t\n\t\t\tif (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotationShape.node.style.display = '';\n\t\t\t}\n\t\t\telse if (index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.labelShape.node.style.display = '';\n\t\t\t}\n\t\t\telse if (this.sizers != null && this.sizers[index] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[index].node.style.display = '';\n\t\t\t}\n\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].setVisible(true);\n\t\t\t}\n\t\t\t\n\t\t\t// Gets the array of connected edge handlers for redrawing\n\t\t\tvar edges = this.graph.getEdges(this.state.cell);\n\t\t\tthis.edgeHandlers = [];\n\t\t\t\n\t\t\tfor (var i = 0; i < edges.length; i++)\n\t\t\t{\n\t\t\t\tvar handler = this.graph.selectionCellsHandler.getHandler(edges[i]);\n\t\t\t\t\n\t\t\t\tif (handler != null)\n\t\t\t\t{\n\t\t\t\t\tthis.edgeHandlers.push(handler);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxVertexHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: hideSizers\n * \n * Hides all sizers except.\n * \n * Starts the handling of the mouse gesture.\n */\nmxVertexHandler.prototype.hideSizers = function()\n{\n\tthis.setHandlesVisible(false);\n};\n\n/**\n * Function: checkTolerance\n * \n * Checks if the coordinates for the given event are within the\n * <mxGraph.tolerance>. If the event is a mouse event then the tolerance is\n * ignored.\n */\nmxVertexHandler.prototype.checkTolerance = function(me)\n{\n\tif (this.inTolerance && this.startX != null && this.startY != null)\n\t{\n\t\tif (mxEvent.isMouseEvent(me.getEvent()) ||\n\t\t\tMath.abs(me.getGraphX() - this.startX) > this.graph.tolerance ||\n\t\t\tMath.abs(me.getGraphY() - this.startY) > this.graph.tolerance)\n\t\t{\n\t\t\tthis.inTolerance = false;\n\t\t}\n\t}\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxVertexHandler.prototype.updateHint = function(me) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxVertexHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundAngle\n * \n * Hook for rounding the angle. This uses Math.round.\n */\nmxVertexHandler.prototype.roundAngle = function(angle)\n{\n\treturn Math.round(angle * 10) / 10;\n};\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxVertexHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxVertexHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (!me.isConsumed() && this.index != null)\n\t{\n\t\t// Checks tolerance for ignoring single clicks\n\t\tthis.checkTolerance(me);\n\n\t\tif (!this.inTolerance)\n\t\t{\n\t\t\tif (this.index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.LABEL_HANDLE)\n\t\t\t{\n\t\t\t\tthis.moveLabel(me);\n\t\t\t}\n\t\t\telse if (this.index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tthis.rotateVertex(me);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.resizeVertex(me);\n\t\t\t}\n\n\t\t\tthis.updateHint(me);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (!this.graph.isMouseDown && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.moveLabel = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\t\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t}\n\n\tvar index = (this.rotationShape != null) ? this.sizers.length - 2 : this.sizers.length - 1;\n\tthis.moveSizerTo(this.sizers[index], point.x, point.y);\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.rotateVertex = function(me)\n{\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar dx = this.state.x + this.state.width / 2 - point.x;\n\tvar dy = this.state.y + this.state.height / 2 - point.y;\n\tthis.currentAlpha = (dx != 0) ? Math.atan(dy / dx) * 180 / Math.PI + 90 : ((dy < 0) ? 180 : 0);\n\t\n\tif (dx > 0)\n\t{\n\t\tthis.currentAlpha -= 180;\n\t}\n\n\t// Rotation raster\n\tif (this.rotationRaster && this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar dx = point.x - this.state.getCenterX();\n\t\tvar dy = point.y - this.state.getCenterY();\n\t\tvar dist = Math.abs(Math.sqrt(dx * dx + dy * dy) - 20) * 3;\n\t\tvar raster = Math.max(1, 5 * Math.min(3, Math.max(0, Math.round(80 / Math.abs(dist)))));\n\t\t\n\t\tthis.currentAlpha = Math.round(this.currentAlpha / raster) * raster;\n\t}\n\telse\n\t{\n\t\tthis.currentAlpha = this.roundAngle(this.currentAlpha);\n\t}\n\n\tthis.selectionBorder.rotation = this.currentAlpha;\n\tthis.selectionBorder.redraw();\n\t\t\t\t\t\n\tif (this.livePreviewActive)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: rotateVertex\n * \n * Rotates the vertex.\n */\nmxVertexHandler.prototype.resizeVertex = function(me)\n{\n\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\tvar tr = this.graph.view.translate;\n\tvar scale = this.graph.view.scale;\n\tvar cos = Math.cos(-alpha);\n\tvar sin = Math.sin(-alpha);\n\t\n\tvar dx = point.x - this.startX;\n\tvar dy = point.y - this.startY;\n\n\t// Rotates vector for mouse gesture\n\tvar tx = cos * dx - sin * dy;\n\tvar ty = sin * dx + cos * dy;\n\t\n\tdx = tx;\n\tdy = ty;\n\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tthis.unscaledBounds = this.union(geo, dx / scale, dy / scale, this.index,\n\t\tthis.graph.isGridEnabledEvent(me.getEvent()), 1,\n\t\tnew mxPoint(0, 0), this.isConstrainedEvent(me),\n\t\tthis.isCenteredEvent(this.state, me));\n\t\n\t// Keeps vertex within maximum graph or parent bounds\n\tif (!geo.relative)\n\t{\n\t\tvar max = this.graph.getMaximumGraphBounds();\n\t\t\n\t\t// Handles child cells\n\t\tif (max != null && this.parentState != null)\n\t\t{\n\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\n\t\t\tmax.x -= (this.parentState.x - tr.x * scale) / scale;\n\t\t\tmax.y -= (this.parentState.y - tr.y * scale) / scale;\n\t\t}\n\t\t\n\t\tif (this.graph.isConstrainChild(this.state.cell))\n\t\t{\n\t\t\tvar tmp = this.graph.getCellContainmentArea(this.state.cell);\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tvar overlap = this.graph.getOverlap(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (overlap > 0)\n\t\t\t\t{\n\t\t\t\t\ttmp = mxRectangle.fromRectangle(tmp);\n\t\t\t\t\t\n\t\t\t\t\ttmp.x -= tmp.width * overlap;\n\t\t\t\t\ttmp.y -= tmp.height * overlap;\n\t\t\t\t\ttmp.width += 2 * tmp.width * overlap;\n\t\t\t\t\ttmp.height += 2 * tmp.height * overlap;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (max == null)\n\t\t\t\t{\n\t\t\t\t\tmax = tmp;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmax = mxRectangle.fromRectangle(max);\n\t\t\t\t\tmax.intersect(tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tif (max != null)\n\t\t{\n\t\t\tif (this.unscaledBounds.x < max.x)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= max.x - this.unscaledBounds.x;\n\t\t\t\tthis.unscaledBounds.x = max.x;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y < max.y)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= max.y - this.unscaledBounds.y;\n\t\t\t\tthis.unscaledBounds.y = max.y;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.x + this.unscaledBounds.width > max.x + max.width)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.width -= this.unscaledBounds.x +\n\t\t\t\t\tthis.unscaledBounds.width - max.x - max.width;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.unscaledBounds.y + this.unscaledBounds.height > max.y + max.height)\n\t\t\t{\n\t\t\t\tthis.unscaledBounds.height -= this.unscaledBounds.y +\n\t\t\t\t\tthis.unscaledBounds.height - max.y - max.height;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tthis.bounds = new mxRectangle(((this.parentState != null) ? this.parentState.x : tr.x * scale) +\n\t\t(this.unscaledBounds.x) * scale, ((this.parentState != null) ? this.parentState.y : tr.y * scale) +\n\t\t(this.unscaledBounds.y) * scale, this.unscaledBounds.width * scale, this.unscaledBounds.height * scale);\n\n\tif (geo.relative && this.parentState != null)\n\t{\n\t\tthis.bounds.x += this.state.x - this.parentState.x;\n\t\tthis.bounds.y += this.state.y - this.parentState.y;\n\t}\n\n\tcos = Math.cos(alpha);\n\tsin = Math.sin(alpha);\n\t\n\tvar c2 = new mxPoint(this.bounds.getCenterX(), this.bounds.getCenterY());\n\n\tvar dx = c2.x - ct.x;\n\tvar dy = c2.y - ct.y;\n\t\n\tvar dx2 = cos * dx - sin * dy;\n\tvar dy2 = sin * dx + cos * dy;\n\t\n\tvar dx3 = dx2 - dx;\n\tvar dy3 = dy2 - dy;\n\t\n\tvar dx4 = this.bounds.x - this.state.x;\n\tvar dy4 = this.bounds.y - this.state.y;\n\t\n\tvar dx5 = cos * dx4 - sin * dy4;\n\tvar dy5 = sin * dx4 + cos * dy4;\n\t\n\tthis.bounds.x += dx3;\n\tthis.bounds.y += dy3;\n\t\n\t// Rounds unscaled bounds to int\n\tthis.unscaledBounds.x = this.roundLength(this.unscaledBounds.x + dx3 / scale);\n\tthis.unscaledBounds.y = this.roundLength(this.unscaledBounds.y + dy3 / scale);\n\tthis.unscaledBounds.width = this.roundLength(this.unscaledBounds.width);\n\tthis.unscaledBounds.height = this.roundLength(this.unscaledBounds.height);\n\t\n\t// Shifts the children according to parent offset\n\tif (!this.graph.isCellCollapsed(this.state.cell) && (dx3 != 0 || dy3 != 0))\n\t{\n\t\tthis.childOffsetX = this.state.x - this.bounds.x + dx5;\n\t\tthis.childOffsetY = this.state.y - this.bounds.y + dy5;\n\t}\n\telse\n\t{\n\t\tthis.childOffsetX = 0;\n\t\tthis.childOffsetY = 0;\n\t}\n\t\n\tif (this.livePreviewActive)\n\t{\n\t\tthis.updateLivePreview(me);\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.drawPreview();\n\t}\n};\n\n/**\n * Function: updateLivePreview\n * \n * Repaints the live preview.\n */\nmxVertexHandler.prototype.updateLivePreview = function(me)\n{\n\t// TODO: Apply child offset to children in live preview\n\tvar scale = this.graph.view.scale;\n\tvar tr = this.graph.view.translate;\n\t\n\t// Saves current state\n\tvar tempState = this.state.clone();\n\n\t// Temporarily changes size and origin\n\tthis.state.x = this.bounds.x;\n\tthis.state.y = this.bounds.y;\n\tthis.state.origin = new mxPoint(this.state.x / scale - tr.x, this.state.y / scale - tr.y);\n\tthis.state.width = this.bounds.width;\n\tthis.state.height = this.bounds.height;\n\t\n\t// Needed to force update of text bounds\n\tthis.state.unscaledWidth = null;\n\t\n\t// Redraws cell and handles\n\tvar off = this.state.absoluteOffset;\n\toff = new mxPoint(off.x, off.y);\n\n\t// Required to store and reset absolute offset for updating label position\n\tthis.state.absoluteOffset.x = 0;\n\tthis.state.absoluteOffset.y = 0;\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\t\t\t\t\n\n\tif (geo != null)\n\t{\n\t\tvar offset = geo.offset || this.EMPTY_POINT;\n\n\t\tif (offset != null && !geo.relative)\n\t\t{\n\t\t\tthis.state.absoluteOffset.x = this.state.view.scale * offset.x;\n\t\t\tthis.state.absoluteOffset.y = this.state.view.scale * offset.y;\n\t\t}\n\t\t\n\t\tthis.state.view.updateVertexLabelOffset(this.state);\n\t}\n\t\n\t// Draws the live preview\n\tthis.state.view.graph.cellRenderer.redraw(this.state, true);\n\t\n\t// Redraws connected edges TODO: Include child edges\n\tthis.state.view.invalidate(this.state.cell);\n\tthis.state.invalid = false;\n\tthis.state.view.validate();\n\tthis.redrawHandles();\n\t\n\t// Hides folding icon\n\tif (this.state.control != null && this.state.control.node != null)\n\t{\n\t\tthis.state.control.node.style.visibility = 'hidden';\n\t}\n\t\n\t// Restores current state\n\tthis.state.setState(tempState);\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by applying the changes to the geometry.\n */\nmxVertexHandler.prototype.mouseUp = function(sender, me)\n{\n\tif (this.index != null && this.state != null)\n\t{\n\t\tvar point = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\n\t\tthis.graph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tif (index <= mxEvent.CUSTOM_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].active = false;\n\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index == mxEvent.ROTATION_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.currentAlpha != null)\n\t\t\t\t{\n\t\t\t\t\tvar delta = this.currentAlpha - (this.state.style[mxConstants.STYLE_ROTATION] || 0);\n\t\t\t\t\t\n\t\t\t\t\tif (delta != 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(this.state.cell, delta);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.rotateClick();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar gridEnabled = this.graph.isGridEnabledEvent(me.getEvent());\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(-alpha);\n\t\t\t\tvar sin = Math.sin(-alpha);\n\t\t\t\t\n\t\t\t\tvar dx = point.x - this.startX;\n\t\t\t\tvar dy = point.y - this.startY;\n\t\t\t\t\n\t\t\t\t// Rotates vector for mouse gesture\n\t\t\t\tvar tx = cos * dx - sin * dy;\n\t\t\t\tvar ty = sin * dx + cos * dy;\n\t\t\t\t\n\t\t\t\tdx = tx;\n\t\t\t\tdy = ty;\n\t\t\t\t\n\t\t\t\tvar s = this.graph.view.scale;\n\t\t\t\tvar recurse = this.isRecursiveResize(this.state, me);\n\t\t\t\tthis.resizeCell(this.state.cell, this.roundLength(dx / s), this.roundLength(dy / s),\n\t\t\t\t\tindex, gridEnabled, this.isConstrainedEvent(me), recurse);\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tthis.graph.getModel().endUpdate();\n\t\t}\n\n\t\tme.consume();\n\t\tthis.reset();\n\t}\n};\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell to the given rotation.\n */\nmxVertexHandler.prototype.isRecursiveResize = function(state, me)\n{\n\treturn this.graph.isRecursiveResize(this.state);\n};\n\n/**\n * Function: rotateClick\n * \n * Hook for subclassers to implement a single click on the rotation handle.\n * This code is executed as part of the model transaction. This implementation\n * is empty.\n */\nmxVertexHandler.prototype.rotateClick = function() { };\n\n/**\n * Function: rotateCell\n * \n * Rotates the given cell and its children by the given angle in degrees.\n * \n * Parameters:\n * \n * cell - <mxCell> to be rotated.\n * angle - Angle in degrees.\n */\nmxVertexHandler.prototype.rotateCell = function(cell, angle, parent)\n{\n\tif (angle != 0)\n\t{\n\t\tvar model = this.graph.getModel();\n\n\t\tif (model.isVertex(cell) || model.isEdge(cell))\n\t\t{\n\t\t\tif (!model.isEdge(cell))\n\t\t\t{\n\t\t\t\tvar state = this.graph.view.getState(cell);\n\t\t\t\tvar style = (state != null) ? state.style : this.graph.getCellStyle(cell);\n\t\t\n\t\t\t\tif (style != null)\n\t\t\t\t{\n\t\t\t\t\tvar total = (style[mxConstants.STYLE_ROTATION] || 0) + angle;\n\t\t\t\t\tthis.graph.setCellStyles(mxConstants.STYLE_ROTATION, total, [cell]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar geo = this.graph.getCellGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar pgeo = this.graph.getCellGeometry(parent);\n\t\t\t\t\n\t\t\t\tif (pgeo != null && !model.isEdge(parent))\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\tgeo.rotate(angle, new mxPoint(pgeo.width / 2, pgeo.height / 2));\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ((model.isVertex(cell) && !geo.relative) || model.isEdge(cell))\n\t\t\t\t{\n\t\t\t\t\t// Recursive rotation\n\t\t\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < childCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.rotateCell(model.getChildAt(cell, i), angle, cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxVertexHandler.prototype.reset = function()\n{\n\tif (this.sizers != null && this.index != null && this.sizers[this.index] != null &&\n\t\tthis.sizers[this.index].node.style.display == 'none')\n\t{\n\t\tthis.sizers[this.index].node.style.display = '';\n\t}\n\n\tthis.currentAlpha = null;\n\tthis.inTolerance = null;\n\tthis.index = null;\n\n\t// TODO: Reset and redraw cell states for live preview\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\n\tif (this.livePreviewActive && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Shows folding icon\n\t\tif (this.state.control != null && this.state.control.node != null)\n\t\t{\n\t\t\tthis.state.control.node.style.visibility = '';\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tif (this.customHandles[i].active)\n\t\t\t{\n\t\t\t\tthis.customHandles[i].active = false;\n\t\t\t\tthis.customHandles[i].reset();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.customHandles[i].setVisible(true);\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Checks if handler has been destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.node.style.display = 'inline';\n\t\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\t\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y,\n\t\t\tthis.selectionBounds.width, this.selectionBounds.height);\n\t\tthis.drawPreview();\n\t}\n\n\tthis.removeHint();\n\tthis.redrawHandles();\n\tthis.edgeHandlers = null;\n\tthis.unscaledBounds = null;\n\tthis.livePreviewActive = null;\n};\n\n/**\n * Function: resizeCell\n * \n * Uses the given vector to change the bounds of the given cell\n * in the graph using <mxGraph.resizeCell>.\n */\nmxVertexHandler.prototype.resizeCell = function(cell, dx, dy, index, gridEnabled, constrained, recurse)\n{\n\tvar geo = this.graph.model.getGeometry(cell);\n\t\n\tif (geo != null)\n\t{\n\t\tif (index == mxEvent.LABEL_HANDLE)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\t\t\tdx = Math.round((this.labelShape.bounds.getCenterX() - this.startX) / scale);\n\t\t\tdy = Math.round((this.labelShape.bounds.getCenterY() - this.startY) / scale);\n\t\t\t\n\t\t\tgeo = geo.clone();\n\t\t\t\n\t\t\tif (geo.offset == null)\n\t\t\t{\n\t\t\t\tgeo.offset = new mxPoint(dx, dy);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tgeo.offset.x += dx;\n\t\t\t\tgeo.offset.y += dy;\n\t\t\t}\n\t\t\t\n\t\t\tthis.graph.model.setGeometry(cell, geo);\n\t\t}\n\t\telse if (this.unscaledBounds != null)\n\t\t{\n\t\t\tvar scale = this.graph.view.scale;\n\n\t\t\tif (this.childOffsetX != 0 || this.childOffsetY != 0)\n\t\t\t{\n\t\t\t\tthis.moveChildren(cell, Math.round(this.childOffsetX / scale), Math.round(this.childOffsetY / scale));\n\t\t\t}\n\n\t\t\tthis.graph.resizeCell(cell, this.unscaledBounds, recurse);\n\t\t}\n\t}\n};\n\n/**\n * Function: moveChildren\n * \n * Moves the children of the given cell by the given vector.\n */\nmxVertexHandler.prototype.moveChildren = function(cell, dx, dy)\n{\n\tvar model = this.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\tfor (var i = 0; i < childCount; i++)\n\t{\n\t\tvar child = model.getChildAt(cell, i);\n\t\tvar geo = this.graph.getCellGeometry(child);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.translate(dx, dy);\n\t\t\tmodel.setGeometry(child, geo);\n\t\t}\n\t}\n};\n/**\n * Function: union\n * \n * Returns the union of the given bounds and location for the specified\n * handle index.\n * \n * To override this to limit the size of vertex via a minWidth/-Height style,\n * the following code can be used.\n * \n * (code)\n * var vertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = vertexHandlerUnion.apply(this, arguments);\n *   \n *   result.width = Math.max(result.width, mxUtils.getNumber(this.state.style, 'minWidth', 0));\n *   result.height = Math.max(result.height, mxUtils.getNumber(this.state.style, 'minHeight', 0));\n *   \n *   return result;\n * };\n * (end)\n * \n * The minWidth/-Height style can then be used as follows:\n * \n * (code)\n * graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30, 'minWidth=100;minHeight=100;');\n * (end)\n * \n * To override this to update the height for a wrapped text if the width of a vertex is\n * changed, the following can be used.\n * \n * (code)\n * var mxVertexHandlerUnion = mxVertexHandler.prototype.union;\n * mxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained)\n * {\n *   var result = mxVertexHandlerUnion.apply(this, arguments);\n *   var s = this.state;\n *   \n *   if (this.graph.isHtmlLabel(s.cell) && (index == 3 || index == 4) &&\n *       s.text != null && s.style[mxConstants.STYLE_WHITE_SPACE] == 'wrap')\n *   {\n *     var label = this.graph.getLabel(s.cell);\n *     var fontSize = mxUtils.getNumber(s.style, mxConstants.STYLE_FONTSIZE, mxConstants.DEFAULT_FONTSIZE);\n *     var ww = result.width / s.view.scale - s.text.spacingRight - s.text.spacingLeft\n *     \n *     result.height = mxUtils.getSizeForString(label, fontSize, s.style[mxConstants.STYLE_FONTFAMILY], ww).height;\n *   }\n *   \n *   return result;\n * };\n * (end)\n */\nmxVertexHandler.prototype.union = function(bounds, dx, dy, index, gridEnabled, scale, tr, constrained, centered)\n{\n\tif (this.singleSizer)\n\t{\n\t\tvar x = bounds.x + bounds.width + dx;\n\t\tvar y = bounds.y + bounds.height + dy;\n\t\t\n\t\tif (gridEnabled)\n\t\t{\n\t\t\tx = this.graph.snap(x / scale) * scale;\n\t\t\ty = this.graph.snap(y / scale) * scale;\n\t\t}\n\t\t\n\t\tvar rect = new mxRectangle(bounds.x, bounds.y, 0, 0);\n\t\trect.add(new mxRectangle(x, y, 0, 0));\n\t\t\n\t\treturn rect;\n\t}\n\telse\n\t{\n\t\tvar w0 = bounds.width;\n\t\tvar h0 = bounds.height;\n\t\tvar left = bounds.x - tr.x * scale;\n\t\tvar right = left + w0;\n\t\tvar top = bounds.y - tr.y * scale;\n\t\tvar bottom = top + h0;\n\t\t\n\t\tvar cx = left + w0 / 2;\n\t\tvar cy = top + h0 / 2;\n\t\t\n\t\tif (index > 4 /* Bottom Row */)\n\t\t{\n\t\t\tbottom = bottom + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tbottom = this.graph.snap(bottom / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index < 3 /* Top Row */)\n\t\t{\n\t\t\ttop = top + dy;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\ttop = this.graph.snap(top / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (index == 0 || index == 3 || index == 5 /* Left */)\n\t\t{\n\t\t\tleft += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tleft = this.graph.snap(left / scale) * scale;\n\t\t\t}\n\t\t}\n\t\telse if (index == 2 || index == 4 || index == 7 /* Right */)\n\t\t{\n\t\t\tright += dx;\n\t\t\t\n\t\t\tif (gridEnabled)\n\t\t\t{\n\t\t\t\tright = this.graph.snap(right / scale) * scale;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar width = right - left;\n\t\tvar height = bottom - top;\n\n\t\tif (constrained)\n\t\t{\n\t\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tvar aspect = geo.width / geo.height;\n\t\t\t\t\n\t\t\t\tif (index== 1 || index== 2 || index == 7 || index == 6)\n\t\t\t\t{\n\t\t\t\t\twidth = height * aspect;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\theight = width / aspect;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (index == 0)\n\t\t\t\t{\n\t\t\t\t\tleft = right - width;\n\t\t\t\t\ttop = bottom - height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (centered)\n\t\t{\n\t\t\twidth += (width - w0);\n\t\t\theight += (height - h0);\n\t\t\t\n\t\t\tvar cdx = cx - (left + width / 2);\n\t\t\tvar cdy = cy - (top + height / 2);\n\n\t\t\tleft += cdx;\n\t\t\ttop += cdy;\n\t\t\tright += cdx;\n\t\t\tbottom += cdy;\n\t\t}\n\n\t\t// Flips over left side\n\t\tif (width < 0)\n\t\t{\n\t\t\tleft += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\t\t\n\t\t// Flips over top side\n\t\tif (height < 0)\n\t\t{\n\t\t\ttop += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tvar result = new mxRectangle(left + tr.x * scale, top + tr.y * scale, width, height);\n\t\t\n\t\tif (this.minBounds != null)\n\t\t{\n\t\t\tresult.width = Math.max(result.width, this.minBounds.x * scale + this.minBounds.width * scale +\n\t\t\t\tMath.max(0, this.x0 * scale - result.x));\n\t\t\tresult.height = Math.max(result.height, this.minBounds.y * scale + this.minBounds.height * scale +\n\t\t\t\tMath.max(0, this.y0 * scale - result.y));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: redraw\n * \n * Redraws the handles and the preview.\n */\nmxVertexHandler.prototype.redraw = function(ignoreHandles)\n{\n\tthis.selectionBounds = this.getSelectionBounds(this.state);\n\tthis.bounds = new mxRectangle(this.selectionBounds.x, this.selectionBounds.y, this.selectionBounds.width, this.selectionBounds.height);\n\tthis.drawPreview();\n\n\tif (!ignoreHandles)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Returns the padding to be used for drawing handles for the current <bounds>.\n */\nmxVertexHandler.prototype.getHandlePadding = function()\n{\n\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\tvar result = new mxPoint(0, 0);\n\tvar tol = this.tolerance;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null &&\n\t\t(this.bounds.width < 2 * this.sizers[0].bounds.width + 2 * tol ||\n\t\tthis.bounds.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t{\n\t\ttol /= 2;\n\t\t\n\t\tresult.x = this.sizers[0].bounds.width + tol;\n\t\tresult.y = this.sizers[0].bounds.height + tol;\n\t}\n\t\n\treturn result;\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles. To hide certain handles the following code can be used.\n * \n * (code)\n * mxVertexHandler.prototype.redrawHandles = function()\n * {\n *   mxVertexHandlerRedrawHandles.apply(this, arguments);\n *   \n *   if (this.sizers != null && this.sizers.length > 7)\n *   {\n *     this.sizers[1].node.style.display = 'none';\n *     this.sizers[6].node.style.display = 'none';\n *   }\n * };\n * (end)\n */\nmxVertexHandler.prototype.redrawHandles = function()\n{\n\tvar tol = this.tolerance;\n\tthis.horizontalOffset = 0;\n\tthis.verticalOffset = 0;\n\tvar s = this.bounds;\n\n\tif (this.sizers != null && this.sizers.length > 0 && this.sizers[0] != null)\n\t{\n\t\tif (this.index == null && this.manageSizers && this.sizers.length >= 8)\n\t\t{\n\t\t\t// KNOWN: Tolerance depends on event type (eg. 0 for mouse events)\n\t\t\tvar padding = this.getHandlePadding();\n\t\t\tthis.horizontalOffset = padding.x;\n\t\t\tthis.verticalOffset = padding.y;\n\t\t\t\n\t\t\tif (this.horizontalOffset != 0 || this.verticalOffset != 0)\n\t\t\t{\n\t\t\t\ts = new mxRectangle(s.x, s.y, s.width, s.height);\n\n\t\t\t\ts.x -= this.horizontalOffset / 2;\n\t\t\t\ts.width += this.horizontalOffset;\n\t\t\t\ts.y -= this.verticalOffset / 2;\n\t\t\t\ts.height += this.verticalOffset;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tif ((s.width < 2 * this.sizers[0].bounds.width + 2 * tol) ||\n\t\t\t\t\t(s.height < 2 * this.sizers[0].bounds.height + 2 * tol))\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[2].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[5].node.style.display = 'none';\n\t\t\t\t\tthis.sizers[7].node.style.display = 'none';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.sizers[0].node.style.display = '';\n\t\t\t\t\tthis.sizers[2].node.style.display = '';\n\t\t\t\t\tthis.sizers[5].node.style.display = '';\n\t\t\t\t\tthis.sizers[7].node.style.display = '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar r = s.x + s.width;\n\t\tvar b = s.y + s.height;\n\t\t\n\t\tif (this.singleSizer)\n\t\t{\n\t\t\tthis.moveSizerTo(this.sizers[0], r, b);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar cx = s.x + s.width / 2;\n\t\t\tvar cy = s.y + s.height / 2;\n\t\t\t\n\t\t\tif (this.sizers.length >= 8)\n\t\t\t{\n\t\t\t\tvar crs = ['nw-resize', 'n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize'];\n\t\t\t\t\n\t\t\t\tvar alpha = mxUtils.toRadians(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tvar cos = Math.cos(alpha);\n\t\t\t\tvar sin = Math.sin(alpha);\n\t\t\t\t\n\t\t\t\tvar da = Math.round(alpha * 4 / Math.PI);\n\t\t\t\t\n\t\t\t\tvar ct = new mxPoint(s.getCenterX(), s.getCenterY());\n\t\t\t\tvar pt = mxUtils.getRotatedPoint(new mxPoint(s.x, s.y), cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[0], pt.x, pt.y);\n\t\t\t\tthis.sizers[0].setCursor(crs[mxUtils.mod(0 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[1], pt.x, pt.y);\n\t\t\t\tthis.sizers[1].setCursor(crs[mxUtils.mod(1 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = s.y;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[2], pt.x, pt.y);\n\t\t\t\tthis.sizers[2].setCursor(crs[mxUtils.mod(2 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[3], pt.x, pt.y);\n\t\t\t\tthis.sizers[3].setCursor(crs[mxUtils.mod(7 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = cy;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[4], pt.x, pt.y);\n\t\t\t\tthis.sizers[4].setCursor(crs[mxUtils.mod(3 + da, crs.length)]);\n\n\t\t\t\tpt.x = s.x;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[5], pt.x, pt.y);\n\t\t\t\tthis.sizers[5].setCursor(crs[mxUtils.mod(6 + da, crs.length)]);\n\n\t\t\t\tpt.x = cx;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[6], pt.x, pt.y);\n\t\t\t\tthis.sizers[6].setCursor(crs[mxUtils.mod(5 + da, crs.length)]);\n\n\t\t\t\tpt.x = r;\n\t\t\t\tpt.y = b;\n\t\t\t\tpt = mxUtils.getRotatedPoint(pt, cos, sin, ct);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[7], pt.x, pt.y);\n\t\t\t\tthis.sizers[7].setCursor(crs[mxUtils.mod(4 + da, crs.length)]);\n\t\t\t\t\n\t\t\t\tthis.moveSizerTo(this.sizers[8], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse if (this.state.width >= 2 && this.state.height >= 2)\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], cx + this.state.absoluteOffset.x, cy + this.state.absoluteOffset.y);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.moveSizerTo(this.sizers[0], this.state.x, this.state.y);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.rotationShape != null)\n\t{\n\t\tvar alpha = mxUtils.toRadians((this.currentAlpha != null) ? this.currentAlpha : this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tvar cos = Math.cos(alpha);\n\t\tvar sin = Math.sin(alpha);\n\t\t\n\t\tvar ct = new mxPoint(this.state.getCenterX(), this.state.getCenterY());\n\t\tvar pt = mxUtils.getRotatedPoint(this.getRotationHandlePosition(), cos, sin, ct);\n\n\t\tif (this.rotationShape.node != null)\n\t\t{\n\t\t\tthis.moveSizerTo(this.rotationShape, pt.x, pt.y);\n\n\t\t\t// Hides rotation handle during text editing\n\t\t\tthis.rotationShape.node.style.visibility = (this.state.view.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t}\n\t\n\tif (this.edgeHandlers != null)\n\t{\t\t\n\t\tfor (var i = 0; i < this.edgeHandlers.length; i++)\n\t\t{\n\t\t\tthis.edgeHandlers[i].redraw();\n\t\t}\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tvar temp = this.customHandles[i].shape.node.style.display;\n\t\t\tthis.customHandles[i].redraw();\n\t\t\tthis.customHandles[i].shape.node.style.display = temp;\n\n\t\t\t// Hides custom handles during text editing\n\t\t\tthis.customHandles[i].shape.node.style.visibility = (this.graph.isEditing()) ? 'hidden' : '';\n\t\t}\n\t}\n\n\tthis.updateParentHighlight();\n};\n\n/**\n * Function: getRotationHandlePosition\n * \n * Returns an <mxPoint> that defines the rotation handle position.\n */\nmxVertexHandler.prototype.getRotationHandlePosition = function()\n{\n\treturn new mxPoint(this.bounds.x + this.bounds.width / 2, this.bounds.y + this.rotationHandleVSpacing)\n};\n\n/**\n * Function: updateParentHighlight\n * \n * Updates the highlight of the parent if <parentHighlightEnabled> is true.\n */\nmxVertexHandler.prototype.updateParentHighlight = function()\n{\n\t// If not destroyed\n\tif (this.selectionBorder != null)\n\t{\n\t\tif (this.parentHighlight != null)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\tvar b = this.parentHighlight.bounds;\n\t\t\t\t\n\t\t\t\tif (pstate != null && (b.x != pstate.x || b.y != pstate.y ||\n\t\t\t\t\tb.width != pstate.width || b.height != pstate.height))\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight.bounds = pstate;\n\t\t\t\t\tthis.parentHighlight.redraw();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.parentHighlight.destroy();\n\t\t\t\tthis.parentHighlight = null;\n\t\t\t}\n\t\t}\n\t\telse if (this.parentHighlightEnabled)\n\t\t{\n\t\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\t\n\t\t\tif (this.graph.model.isVertex(parent))\n\t\t\t{\n\t\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\t\n\t\t\t\tif (pstate != null)\n\t\t\t\t{\n\t\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxVertexHandler.prototype.drawPreview = function()\n{\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.bounds = this.bounds;\n\t\t\n\t\tif (this.preview.node.parentNode == this.graph.container)\n\t\t{\n\t\t\tthis.preview.bounds.width = Math.max(0, this.preview.bounds.width - 1);\n\t\t\tthis.preview.bounds.height = Math.max(0, this.preview.bounds.height - 1);\n\t\t}\n\t\n\t\tthis.preview.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\tthis.preview.redraw();\n\t}\n\t\n\tthis.selectionBorder.bounds = this.bounds;\n\tthis.selectionBorder.redraw();\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxVertexHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.preview != null)\n\t{\n\t\tthis.preview.destroy();\n\t\tthis.preview = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.selectionBorder != null)\n\t{\n\t\tthis.selectionBorder.destroy();\n\t\tthis.selectionBorder = null;\n\t}\n\t\n\tthis.labelShape = null;\n\tthis.removeHint();\n\n\tif (this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tthis.sizers[i].destroy();\n\t\t}\n\t\t\n\t\tthis.sizers = null;\n\t}\n\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].destroy();\n\t\t}\n\t\t\n\t\tthis.customHandles = null;\n\t}\n};\n\n__mxOutput.mxVertexHandler = typeof mxVertexHandler !== 'undefined' ? mxVertexHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler> for each selected edge.\n * \n * To enable adding/removing control points, the following code can be used:\n * \n * (code)\n * mxEdgeHandler.prototype.addEnabled = true;\n * mxEdgeHandler.prototype.removeEnabled = true;\n * (end)\n * \n * Note: This experimental feature is not recommended for production use.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be handled.\n */\nfunction mxEdgeHandler(state)\n{\n\tif (state != null)\n\t{\n\t\tthis.state = state;\n\t\tthis.init();\n\t\t\n\t\t// Handles escape keystrokes\n\t\tthis.escapeHandler = mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar dirty = this.index != null;\n\t\t\tthis.reset();\n\t\t\t\n\t\t\tif (dirty)\n\t\t\t{\n\t\t\t\tthis.graph.cellRenderer.redraw(this.state, false, state.view.isRendering());\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.state.view.graph.addListener(mxEvent.ESCAPE, this.escapeHandler);\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxEdgeHandler.prototype.graph = null;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState> being modified.\n */\nmxEdgeHandler.prototype.state = null;\n\n/**\n * Variable: marker\n * \n * Holds the <mxTerminalMarker> which is used for highlighting terminals.\n */\nmxEdgeHandler.prototype.marker = null;\n\n/**\n * Variable: constraintHandler\n * \n * Holds the <mxConstraintHandler> used for drawing and highlighting\n * constraints.\n */\nmxEdgeHandler.prototype.constraintHandler = null;\n\n/**\n * Variable: error\n * \n * Holds the current validation error while a connection is being changed.\n */\nmxEdgeHandler.prototype.error = null;\n\n/**\n * Variable: shape\n * \n * Holds the <mxShape> that represents the preview edge.\n */\nmxEdgeHandler.prototype.shape = null;\n\n/**\n * Variable: bends\n * \n * Holds the <mxShapes> that represent the points.\n */\nmxEdgeHandler.prototype.bends = null;\n\n/**\n * Variable: labelShape\n * \n * Holds the <mxShape> that represents the label position.\n */\nmxEdgeHandler.prototype.labelShape = null;\n\n/**\n * Variable: cloneEnabled\n * \n * Specifies if cloning by control-drag is enabled. Default is true.\n */\nmxEdgeHandler.prototype.cloneEnabled = true;\n\n/**\n * Variable: addEnabled\n * \n * Specifies if adding bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.addEnabled = false;\n\n/**\n * Variable: removeEnabled\n * \n * Specifies if removing bends by shift-click is enabled. Default is false.\n * Note: This experimental feature is not recommended for production use.\n */\nmxEdgeHandler.prototype.removeEnabled = false;\n\n/**\n * Variable: dblClickRemoveEnabled\n * \n * Specifies if removing bends by double click is enabled. Default is false.\n */\nmxEdgeHandler.prototype.dblClickRemoveEnabled = false;\n\n/**\n * Variable: mergeRemoveEnabled\n * \n * Specifies if removing bends by dropping them on other bends is enabled.\n * Default is false.\n */\nmxEdgeHandler.prototype.mergeRemoveEnabled = false;\n\n/**\n * Variable: straightRemoveEnabled\n * \n * Specifies if removing bends by creating straight segments should be enabled.\n * If enabled, this can be overridden by holding down the alt key while moving.\n * Default is false.\n */\nmxEdgeHandler.prototype.straightRemoveEnabled = false;\n\n/**\n * Variable: virtualBendsEnabled\n * \n * Specifies if virtual bends should be added in the center of each\n * segments. These bends can then be used to add new waypoints.\n * Default is false.\n */\nmxEdgeHandler.prototype.virtualBendsEnabled = false;\n\n/**\n * Variable: virtualBendOpacity\n * \n * Opacity to be used for virtual bends (see <virtualBendsEnabled>).\n * Default is 20.\n */\nmxEdgeHandler.prototype.virtualBendOpacity = 20;\n\n/**\n * Variable: parentHighlightEnabled\n * \n * Specifies if the parent should be highlighted if a child cell is selected.\n * Default is false.\n */\nmxEdgeHandler.prototype.parentHighlightEnabled = false;\n\n/**\n * Variable: preferHtml\n * \n * Specifies if bends should be added to the graph container. This is updated\n * in <init> based on whether the edge or one of its terminals has an HTML\n * label in the container.\n */\nmxEdgeHandler.prototype.preferHtml = false;\n\n/**\n * Variable: allowHandleBoundsCheck\n * \n * Specifies if the bounds of handles should be used for hit-detection in IE\n * Default is true.\n */\nmxEdgeHandler.prototype.allowHandleBoundsCheck = true;\n\n/**\n * Variable: snapToTerminals\n * \n * Specifies if waypoints should snap to the routing centers of terminals.\n * Default is false.\n */\nmxEdgeHandler.prototype.snapToTerminals = false;\n\n/**\n * Variable: handleImage\n * \n * Optional <mxImage> to be used as handles. Default is null.\n */\nmxEdgeHandler.prototype.handleImage = null;\n\n/**\n * Variable: tolerance\n * \n * Optional tolerance for hit-detection in <getHandleForEvent>. Default is 0.\n */\nmxEdgeHandler.prototype.tolerance = 0;\n\n/**\n * Variable: outlineConnect\n * \n * Specifies if connections to the outline of a highlighted target should be\n * enabled. This will allow to place the connection point along the outline of\n * the highlighted target. Default is false.\n */\nmxEdgeHandler.prototype.outlineConnect = false;\n\n/**\n * Variable: manageLabelHandle\n * \n * Specifies if the label handle should be moved if it intersects with another\n * handle. Uses <checkLabelHandle> for checking and moving. Default is false.\n */\nmxEdgeHandler.prototype.manageLabelHandle = false;\n\n/**\n * Function: init\n * \n * Initializes the shapes required for this edge handler.\n */\nmxEdgeHandler.prototype.init = function()\n{\n\tthis.graph = this.state.view.graph;\n\tthis.marker = this.createMarker();\n\tthis.constraintHandler = new mxConstraintHandler(this.graph);\n\t\n\t// Clones the original points from the cell\n\t// and makes sure at least one point exists\n\tthis.points = [];\n\t\n\t// Uses the absolute points of the state\n\t// for the initial configuration and preview\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.shape = this.createSelectionShape(this.abspoints);\n\tthis.shape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\tthis.shape.init(this.graph.getView().getOverlayPane());\n\tthis.shape.pointerEvents = false;\n\tthis.shape.setCursor(mxConstants.CURSOR_MOVABLE_EDGE);\n\tmxEvent.redirectMouseEvents(this.shape.node, this.graph, this.state);\n\n\t// Updates preferHtml\n\tthis.preferHtml = this.state.text != null &&\n\t\tthis.state.text.node.parentNode == this.graph.container;\n\t\n\tif (!this.preferHtml)\n\t{\n\t\t// Checks source terminal\n\t\tvar sourceState = this.state.getVisibleTerminalState(true);\n\t\t\n\t\tif (sourceState != null)\n\t\t{\n\t\t\tthis.preferHtml = sourceState.text != null &&\n\t\t\t\tsourceState.text.node.parentNode == this.graph.container;\n\t\t}\n\t\t\n\t\tif (!this.preferHtml)\n\t\t{\n\t\t\t// Checks target terminal\n\t\t\tvar targetState = this.state.getVisibleTerminalState(false);\n\t\t\t\n\t\t\tif (targetState != null)\n\t\t\t{\n\t\t\t\tthis.preferHtml = targetState.text != null &&\n\t\t\t\ttargetState.text.node.parentNode == this.graph.container;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Adds highlight for parent group\n\tif (this.parentHighlightEnabled)\n\t{\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pstate = this.graph.view.getState(parent);\n\t\t\t\n\t\t\tif (pstate != null)\n\t\t\t{\n\t\t\t\tthis.parentHighlight = this.createParentHighlightShape(pstate);\n\t\t\t\t// VML dialect required here for event transparency in IE\n\t\t\t\tthis.parentHighlight.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\t\t\t\tthis.parentHighlight.pointerEvents = false;\n\t\t\t\tthis.parentHighlight.rotation = Number(pstate.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\t\tthis.parentHighlight.init(this.graph.getView().getOverlayPane());\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Creates bends for the non-routed absolute points\n\t// or bends that don't correspond to points\n\tif (this.graph.getSelectionCount() < mxGraphHandler.prototype.maxCells ||\n\t\tmxGraphHandler.prototype.maxCells <= 0)\n\t{\n\t\tthis.bends = this.createBends();\n\n\t\tif (this.isVirtualBendsEnabled())\n\t\t{\n\t\t\tthis.virtualBends = this.createVirtualBends();\n\t\t}\n\t}\n\n\t// Adds a rectangular handle for the label position\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape = this.createLabelHandleShape();\n\tthis.initBend(this.labelShape);\n\tthis.labelShape.setCursor(mxConstants.CURSOR_LABEL_HANDLE);\n\t\n\tthis.customHandles = this.createCustomHandles();\n\t\n\tthis.redraw();\n};\n\n/**\n * Function: createCustomHandles\n * \n * Returns an array of custom handles. This implementation returns null.\n */\nmxEdgeHandler.prototype.createCustomHandles = function()\n{\n\treturn null;\n};\n\n/**\n * Function: isVirtualBendsEnabled\n * \n * Returns true if virtual bends should be added. This returns true if\n * <virtualBendsEnabled> is true and the current style allows and\n * renders custom waypoints.\n */\nmxEdgeHandler.prototype.isVirtualBendsEnabled = function(evt)\n{\n\treturn this.virtualBendsEnabled && (this.state.style[mxConstants.STYLE_EDGE] == null ||\n\t\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.NONE ||\n\t\t\tthis.state.style[mxConstants.STYLE_NOEDGESTYLE] == 1)  &&\n\t\t\tmxUtils.getValue(this.state.style, mxConstants.STYLE_SHAPE, null) != 'arrow';\n};\n\n/**\n * Function: isAddPointEvent\n * \n * Returns true if the given event is a trigger to add a new point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isAddPointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: isRemovePointEvent\n * \n * Returns true if the given event is a trigger to remove a point. This\n * implementation returns true if shift is pressed.\n */\nmxEdgeHandler.prototype.isRemovePointEvent = function(evt)\n{\n\treturn mxEvent.isShiftDown(evt);\n};\n\n/**\n * Function: getSelectionPoints\n * \n * Returns the list of points that defines the selection stroke.\n */\nmxEdgeHandler.prototype.getSelectionPoints = function(state)\n{\n\treturn state.absolutePoints;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createParentHighlightShape = function(bounds)\n{\n\tvar shape = new mxRectangleShape(bounds, null, this.getSelectionColor());\n\tshape.strokewidth = this.getSelectionStrokeWidth();\n\tshape.isDashed = this.isSelectionDashed();\n\t\n\treturn shape;\n};\n\n/**\n * Function: createSelectionShape\n * \n * Creates the shape used to draw the selection border.\n */\nmxEdgeHandler.prototype.createSelectionShape = function(points)\n{\n\tvar shape = new this.state.shape.constructor();\n\tshape.outline = true;\n\tshape.apply(this.state);\n\t\n\tshape.isDashed = this.isSelectionDashed();\n\tshape.stroke = this.getSelectionColor();\n\tshape.isShadow = false;\n\t\n\treturn shape;\n};\n\n/**\n * Function: getSelectionColor\n * \n * Returns <mxConstants.EDGE_SELECTION_COLOR>.\n */\nmxEdgeHandler.prototype.getSelectionColor = function()\n{\n\treturn mxConstants.EDGE_SELECTION_COLOR;\n};\n\n/**\n * Function: getSelectionStrokeWidth\n * \n * Returns <mxConstants.EDGE_SELECTION_STROKEWIDTH>.\n */\nmxEdgeHandler.prototype.getSelectionStrokeWidth = function()\n{\n\treturn mxConstants.EDGE_SELECTION_STROKEWIDTH;\n};\n\n/**\n * Function: isSelectionDashed\n * \n * Returns <mxConstants.EDGE_SELECTION_DASHED>.\n */\nmxEdgeHandler.prototype.isSelectionDashed = function()\n{\n\treturn mxConstants.EDGE_SELECTION_DASHED;\n};\n\n/**\n * Function: isConnectableCell\n * \n * Returns true if the given cell is connectable. This is a hook to\n * disable floating connections. This implementation returns true.\n */\nmxEdgeHandler.prototype.isConnectableCell = function(cell)\n{\n\treturn true;\n};\n\n/**\n * Function: getCellAt\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.getCellAt = function(x, y)\n{\n\treturn (!this.outlineConnect) ? this.graph.getCellAt(x, y) : null;\n};\n\n/**\n * Function: createMarker\n * \n * Creates and returns the <mxCellMarker> used in <marker>.\n */\nmxEdgeHandler.prototype.createMarker = function()\n{\n\tvar marker = new mxCellMarker(this.graph);\n\tvar self = this; // closure\n\n\t// Only returns edges if they are connectable and never returns\n\t// the edge that is currently being modified\n\tmarker.getCell = function(me)\n\t{\n\t\tvar cell = mxCellMarker.prototype.getCell.apply(this, arguments);\n\n\t\t// Checks for cell at preview point (with grid)\n\t\tif ((cell == self.state.cell || cell == null) && self.currentPoint != null)\n\t\t{\n\t\t\tcell = self.graph.getCellAt(self.currentPoint.x, self.currentPoint.y);\n\t\t}\n\t\t\n\t\t// Uses connectable parent vertex if one exists\n\t\tif (cell != null && !this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tvar parent = this.graph.getModel().getParent(cell);\n\t\t\t\n\t\t\tif (this.graph.getModel().isVertex(parent) && this.graph.isCellConnectable(parent))\n\t\t\t{\n\t\t\t\tcell = parent;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif ((this.graph.isSwimlane(cell) && self.currentPoint != null &&\n\t\t\tthis.graph.hitsSwimlaneContent(cell, self.currentPoint.x, self.currentPoint.y)) ||\n\t\t\t(!self.isConnectableCell(cell)) || (cell == self.state.cell ||\n\t\t\t(cell != null && !self.graph.connectableEdges && model.isEdge(cell))) ||\n\t\t\tmodel.isAncestor(self.state.cell, cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\tif (!this.graph.isCellConnectable(cell))\n\t\t{\n\t\t\tcell = null;\n\t\t}\n\t\t\n\t\treturn cell;\n\t};\n\n\t// Sets the highlight color according to validateConnection\n\tmarker.isValidState = function(state)\n\t{\n\t\tvar model = self.graph.getModel();\n\t\tvar other = self.graph.view.getTerminalPort(state,\n\t\t\tself.graph.view.getState(model.getTerminal(self.state.cell,\n\t\t\t!self.isSource)), !self.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (self.isSource) ? state.cell : otherCell;\n\t\tvar target = (self.isSource) ? otherCell : state.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tself.error = self.validateConnection(source, target);\n\n\t\treturn self.error == null;\n\t};\n\t\n\treturn marker;\n};\n\n/**\n * Function: validateConnection\n * \n * Returns the error message or an empty string if the connection for the\n * given source, target pair is not valid. Otherwise it returns null. This\n * implementation uses <mxGraph.getEdgeValidationError>.\n * \n * Parameters:\n * \n * source - <mxCell> that represents the source terminal.\n * target - <mxCell> that represents the target terminal.\n */\nmxEdgeHandler.prototype.validateConnection = function(source, target)\n{\n\treturn this.graph.getEdgeValidationError(this.state.cell, source, target);\n};\n\n/**\n * Function: createBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar bends = [];\n\n\tfor (var i = 0; i < this.abspoints.length; i++)\n\t{\n\t\tif (this.isHandleVisible(i))\n\t\t{\n\t\t\tvar source = i == 0;\n\t\t\tvar target = i == this.abspoints.length - 1;\n\t\t\tvar terminal = source || target;\n\n\t\t\tif (terminal || this.graph.isCellBendable(cell))\n\t\t\t{\n\t\t\t\t(mxUtils.bind(this, function(index)\n\t\t\t\t{\n\t\t\t\t\tvar bend = this.createHandleShape(index);\n\t\t\t\t\tthis.initBend(bend, mxUtils.bind(this, mxUtils.bind(this, function()\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.dblClickRemoveEnabled)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.removePoint(this.state, index);\n\t\t\t\t\t\t}\n\t\t\t\t\t})));\n\t\n\t\t\t\t\tif (this.isHandleEnabled(i))\n\t\t\t\t\t{\n\t\t\t\t\t\tbend.setCursor((terminal) ? mxConstants.CURSOR_TERMINAL_HANDLE : mxConstants.CURSOR_BEND_HANDLE);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbends.push(bend);\n\t\t\t\t\n\t\t\t\t\tif (!terminal)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t\t\t\t\tbend.node.style.visibility = 'hidden';\n\t\t\t\t\t}\n\t\t\t\t}))(i);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: createVirtualBends\n * \n * Creates and returns the bends used for modifying the edge. This is\n * typically an array of <mxRectangleShapes>.\n */\n mxEdgeHandler.prototype.createVirtualBends = function()\n {\n\tvar cell = this.state.cell;\n\tvar last = this.abspoints[0];\n\tvar bends = [];\n\n\tif (this.graph.isCellBendable(cell))\n\t{\n\t\tfor (var i = 1; i < this.abspoints.length; i++)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(bend)\n\t\t\t{\n\t\t\t\tthis.initBend(bend);\n\t\t\t\tbend.setCursor(mxConstants.CURSOR_VIRTUAL_BEND_HANDLE);\n\t\t\t\tbends.push(bend);\n\t\t\t}))(this.createHandleShape());\n\t\t}\n\t}\n\n\treturn bends;\n};\n\n/**\n * Function: isHandleEnabled\n * \n * Creates the shape used to display the given bend.\n */\nmxEdgeHandler.prototype.isHandleEnabled = function(index)\n{\n\treturn true;\n};\n\n/**\n * Function: isHandleVisible\n * \n * Returns true if the handle at the given index is visible.\n */\nmxEdgeHandler.prototype.isHandleVisible = function(index)\n{\n\tvar source = this.state.getVisibleTerminalState(true);\n\tvar target = this.state.getVisibleTerminalState(false);\n\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\tvar edgeStyle = (geo != null) ? this.graph.view.getEdgeStyle(this.state, geo.points, source, target) : null;\n\n\treturn edgeStyle != mxEdgeStyle.EntityRelation || index == 0 || index == this.abspoints.length - 1;\n};\n\n/**\n * Function: createHandleShape\n * \n * Creates the shape used to display the given bend. Note that the index may be\n * null for special cases, such as when called from\n * <mxElbowEdgeHandler.createVirtualBend>. Only images and rectangles should be\n * returned if support for HTML labels with not foreign objects is required.\n * Index if null for virtual handles.\n */\nmxEdgeHandler.prototype.createHandleShape = function(index)\n{\n\tif (this.handleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.handleImage.width, this.handleImage.height), this.handleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.HANDLE_SIZE;\n\t\t\n\t\tif (this.preferHtml)\n\t\t{\n\t\t\ts -= 1;\n\t\t}\n\t\t\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: createLabelHandleShape\n * \n * Creates the shape used to display the the label handle.\n */\nmxEdgeHandler.prototype.createLabelHandleShape = function()\n{\n\tif (this.labelHandleImage != null)\n\t{\n\t\tvar shape = new mxImageShape(new mxRectangle(0, 0, this.labelHandleImage.width, this.labelHandleImage.height), this.labelHandleImage.src);\n\t\t\n\t\t// Allows HTML rendering of the images\n\t\tshape.preserveImageAspect = false;\n\n\t\treturn shape;\n\t}\n\telse\n\t{\n\t\tvar s = mxConstants.LABEL_HANDLE_SIZE;\n\t\treturn new mxRectangleShape(new mxRectangle(0, 0, s, s), mxConstants.LABEL_HANDLE_FILLCOLOR, mxConstants.HANDLE_STROKECOLOR);\n\t}\n};\n\n/**\n * Function: initBend\n * \n * Helper method to initialize the given bend.\n * \n * Parameters:\n * \n * bend - <mxShape> that represents the bend to be initialized.\n */\nmxEdgeHandler.prototype.initBend = function(bend, dblClick)\n{\n\tif (this.preferHtml)\n\t{\n\t\tbend.dialect = mxConstants.DIALECT_STRICTHTML;\n\t\tbend.init(this.graph.container);\n\t}\n\telse\n\t{\n\t\tbend.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ?\n\t\t\tmxConstants.DIALECT_MIXEDHTML : mxConstants.DIALECT_SVG;\n\t\tbend.init(this.graph.getView().getOverlayPane());\n\t}\n\n\tmxEvent.redirectMouseEvents(bend.node, this.graph, this.state,\n\t\t\tnull, null, null, dblClick);\n\t\n\t// Fixes lost event tracking for images in quirks / IE8 standards\n\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t{\n\t\tmxEvent.addListener(bend.node, 'dragstart', function(evt)\n\t\t{\n\t\t\tmxEvent.consume(evt);\n\t\t\t\n\t\t\treturn false;\n\t\t});\n\t}\n\t\n\tif (mxClient.IS_TOUCH)\n\t{\n\t\tbend.node.setAttribute('pointer-events', 'none');\n\t}\n};\n\n/**\n * Function: getHandleForEvent\n * \n * Returns the index of the handle for the given event.\n */\nmxEdgeHandler.prototype.getHandleForEvent = function(me)\n{\n\t// Connection highlight may consume events before they reach sizer handle\n\tvar tol = (!mxEvent.isMouseEvent(me.getEvent())) ? this.tolerance : 1;\n\tvar hit = (this.allowHandleBoundsCheck && (mxClient.IS_IE || tol > 0)) ?\n\t\tnew mxRectangle(me.getGraphX() - tol, me.getGraphY() - tol, 2 * tol, 2 * tol) : null;\n\tvar minDistSq = null;\n\tvar result = null;\n\n\tfunction checkShape(shape)\n\t{\n\t\tif (shape != null && shape.node.style.display != 'none' && shape.node.style.visibility != 'hidden' &&\n\t\t\t(me.isSource(shape) || (hit != null && mxUtils.intersects(shape.bounds, hit))))\n\t\t{\n\t\t\tvar dx = me.getGraphX() - shape.bounds.getCenterX();\n\t\t\tvar dy = me.getGraphY() - shape.bounds.getCenterY();\n\t\t\tvar tmp = dx * dx + dy * dy;\n\t\t\t\n\t\t\tif (minDistSq == null || tmp <= minDistSq)\n\t\t\t{\n\t\t\t\tminDistSq = tmp;\n\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tif (this.customHandles != null && this.isCustomHandleEvent(me))\n\t{\n\t\t// Inverse loop order to match display order\n\t\tfor (var i = this.customHandles.length - 1; i >= 0; i--)\n\t\t{\n\t\t\tif (checkShape(this.customHandles[i].shape))\n\t\t\t{\n\t\t\t\t// LATER: Return reference to active shape\n\t\t\t\treturn mxEvent.CUSTOM_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (me.isSource(this.state.text) || checkShape(this.labelShape))\n\t{\n\t\tresult = mxEvent.LABEL_HANDLE;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.bends[i]))\n\t\t\t{\n\t\t\t\tresult = i;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null && this.isAddVirtualBendEvent(me))\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (checkShape(this.virtualBends[i]))\n\t\t\t{\n\t\t\t\tresult = mxEvent.VIRTUAL_HANDLE - i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n};\n\n/**\n * Function: isAddVirtualBendEvent\n * \n * Returns true if the given event allows virtual bends to be added. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isAddVirtualBendEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: isCustomHandleEvent\n * \n * Returns true if the given event allows custom handles to be changed. This\n * implementation returns true.\n */\nmxEdgeHandler.prototype.isCustomHandleEvent = function(me)\n{\n\treturn true;\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by checking if a special element of the handler\n * was clicked, in which case the index parameter is non-null. The\n * indices may be one of <LABEL_HANDLE> or the number of the respective\n * control point. The source and target points are used for reconnecting\n * the edge.\n */\nmxEdgeHandler.prototype.mouseDown = function(sender, me)\n{\n\tvar handle = this.getHandleForEvent(me);\n\t\n\tif (this.bends != null && this.bends[handle] != null)\n\t{\n\t\tvar b = this.bends[handle].bounds;\n\t\tthis.snapPoint = new mxPoint(b.getCenterX(), b.getCenterY());\n\t}\n\t\n\tif (this.addEnabled && handle == null && this.isAddPointEvent(me.getEvent()))\n\t{\n\t\tthis.addPoint(this.state, me.getEvent());\n\t\tme.consume();\n\t}\n\telse if (handle != null && !me.isConsumed() && this.graph.isEnabled())\n\t{\n\t\tif (this.removeEnabled && this.isRemovePointEvent(me.getEvent()))\n\t\t{\n\t\t\tthis.removePoint(this.state, handle);\n\t\t}\n\t\telse if (handle != mxEvent.LABEL_HANDLE || this.graph.isLabelMovable(me.getCell()))\n\t\t{\n\t\t\tif (handle <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.virtualBends[mxEvent.VIRTUAL_HANDLE - handle].node, 100);\n\t\t\t}\n\t\t\t\n\t\t\tthis.start(me.getX(), me.getY(), handle);\n\t\t}\n\t\t\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: start\n * \n * Starts the handling of the mouse gesture.\n */\nmxEdgeHandler.prototype.start = function(x, y, index)\n{\n\tthis.startX = x;\n\tthis.startY = y;\n\n\tthis.isSource = (this.bends == null) ? false : index == 0;\n\tthis.isTarget = (this.bends == null) ? false : index == this.bends.length - 1;\n\tthis.isLabel = index == mxEvent.LABEL_HANDLE;\n\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tvar cell = this.state.cell;\n\t\tvar terminal = this.graph.model.getTerminal(cell, this.isSource);\n\n\t\tif ((terminal == null && this.graph.isTerminalPointMovable(cell, this.isSource)) ||\n\t\t\t(terminal != null && this.graph.isCellDisconnectable(cell, terminal, this.isSource)))\n\t\t{\n\t\t\tthis.index = index;\n\t\t}\n\t}\n\telse\n\t{\n\t\tthis.index = index;\n\t}\n\t\n\t// Hides other custom handles\n\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t{\n\t\tif (this.customHandles != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t\t{\n\t\t\t\tif (i != mxEvent.CUSTOM_HANDLE - this.index)\n\t\t\t\t{\n\t\t\t\t\tthis.customHandles[i].setVisible(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: clonePreviewState\n * \n * Returns a clone of the current preview state for the given point and terminal.\n */\nmxEdgeHandler.prototype.clonePreviewState = function(point, terminal)\n{\n\treturn this.state.clone();\n};\n\n/**\n * Function: getSnapToTerminalTolerance\n * \n * Returns the tolerance for the guides. Default value is\n * gridSize * scale / 2.\n */\nmxEdgeHandler.prototype.getSnapToTerminalTolerance = function()\n{\n\treturn this.graph.gridSize * this.graph.view.scale / 2;\n};\n\n/**\n * Function: updateHint\n * \n * Hook for subclassers do show details while the handler is active.\n */\nmxEdgeHandler.prototype.updateHint = function(me, point) { };\n\n/**\n * Function: removeHint\n * \n * Hooks for subclassers to hide details when the handler gets inactive.\n */\nmxEdgeHandler.prototype.removeHint = function() { };\n\n/**\n * Function: roundLength\n * \n * Hook for rounding the unscaled width or height. This uses Math.round.\n */\nmxEdgeHandler.prototype.roundLength = function(length)\n{\n\treturn Math.round(length);\n};\n\n/**\n * Function: isSnapToTerminalsEvent\n * \n * Returns true if <snapToTerminals> is true and if alt is not pressed.\n */\nmxEdgeHandler.prototype.isSnapToTerminalsEvent = function(me)\n{\n\treturn this.snapToTerminals && !mxEvent.isAltDown(me.getEvent());\n};\n\n/**\n * Function: getPointForEvent\n * \n * Returns the point for the given event.\n */\nmxEdgeHandler.prototype.getPointForEvent = function(me)\n{\n\tvar view = this.graph.getView();\n\tvar scale = view.scale;\n\tvar point = new mxPoint(this.roundLength(me.getGraphX() / scale) * scale,\n\t\tthis.roundLength(me.getGraphY() / scale) * scale);\n\t\n\tvar tt = this.getSnapToTerminalTolerance();\n\tvar overrideX = false;\n\tvar overrideY = false;\t\t\n\t\n\tif (tt > 0 && this.isSnapToTerminalsEvent(me))\n\t{\n\t\tfunction snapToPoint(pt)\n\t\t{\n\t\t\tif (pt != null)\n\t\t\t{\n\t\t\t\tvar x = pt.x;\n\n\t\t\t\tif (Math.abs(point.x - x) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.x = x;\n\t\t\t\t\toverrideX = true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar y = pt.y;\n\n\t\t\t\tif (Math.abs(point.y - y) < tt)\n\t\t\t\t{\n\t\t\t\t\tpoint.y = y;\n\t\t\t\t\toverrideY = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Temporary function\n\t\tfunction snapToTerminal(terminal)\n\t\t{\n\t\t\tif (terminal != null)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, new mxPoint(view.getRoutingCenterX(terminal),\n\t\t\t\t\t\tview.getRoutingCenterY(terminal)));\n\t\t\t}\n\t\t};\n\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(true));\n\t\tsnapToTerminal.call(this, this.state.getVisibleTerminalState(false));\n\n\t\tif (this.state.absolutePoints != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.state.absolutePoints.length; i++)\n\t\t\t{\n\t\t\t\tsnapToPoint.call(this, this.state.absolutePoints[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.graph.isGridEnabledEvent(me.getEvent()))\n\t{\n\t\tvar tr = view.translate;\n\t\t\n\t\tif (!overrideX)\n\t\t{\n\t\t\tpoint.x = (this.graph.snap(point.x / scale - tr.x) + tr.x) * scale;\n\t\t}\n\t\t\n\t\tif (!overrideY)\n\t\t{\n\t\t\tpoint.y = (this.graph.snap(point.y / scale - tr.y) + tr.y) * scale;\n\t\t}\n\t}\n\t\n\treturn point;\n};\n\n/**\n * Function: getPreviewTerminalState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.getPreviewTerminalState = function(me)\n{\n\tthis.constraintHandler.update(me, this.isSource, true, me.isSource(this.marker.highlight.shape) ? null : this.currentPoint);\n\t\n\tif (this.constraintHandler.currentFocus != null && this.constraintHandler.currentConstraint != null)\n\t{\n\t\t// Handles special case where grid is large and connection point is at actual point in which\n\t\t// case the outline is not followed as long as we're < gridSize / 2 away from that point\n\t\tif (this.marker.highlight != null && this.marker.highlight.state != null &&\n\t\t\tthis.marker.highlight.state.cell == this.constraintHandler.currentFocus.cell)\n\t\t{\n\t\t\t// Direct repaint needed if cell already highlighted\n\t\t\tif (this.marker.highlight.shape.stroke != 'transparent')\n\t\t\t{\n\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.marker.markCell(this.constraintHandler.currentFocus.cell, 'transparent');\n\t\t}\n\t\t\n\t\tvar model = this.graph.getModel();\n\t\tvar other = this.graph.view.getTerminalPort(this.state,\n\t\t\t\tthis.graph.view.getState(model.getTerminal(this.state.cell,\n\t\t\t!this.isSource)), !this.isSource);\n\t\tvar otherCell = (other != null) ? other.cell : null;\n\t\tvar source = (this.isSource) ? this.constraintHandler.currentFocus.cell : otherCell;\n\t\tvar target = (this.isSource) ? otherCell : this.constraintHandler.currentFocus.cell;\n\t\t\n\t\t// Updates the error message of the handler\n\t\tthis.error = this.validateConnection(source, target);\n\t\tvar result = null;\n\t\t\n\t\tif (this.error == null)\n\t\t{\n\t\t\tresult = this.constraintHandler.currentFocus;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.constraintHandler.reset();\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\telse if (!this.graph.isIgnoreTerminalEvent(me.getEvent()))\n\t{\n\t\tthis.marker.process(me);\n\t\tvar state = this.marker.getValidState();\n\t\t\n\t\tif (state != null && this.graph.isCellLocked(state.cell))\n\t\t{\n\t\t\tthis.marker.reset();\n\t\t}\n\t\t\n\t\treturn this.marker.getValidState();\n\t}\n\telse\n\t{\n\t\tthis.marker.reset();\n\t\t\n\t\treturn null;\n\t}\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n * \n * Parameters:\n * \n * pt - <mxPoint> that contains the current pointer position.\n * me - Optional <mxMouseEvent> that contains the current event.\n */\nmxEdgeHandler.prototype.getPreviewPoints = function(pt, me)\n{\n\tvar geometry = this.graph.getCellGeometry(this.state.cell);\n\tvar points = (geometry.points != null) ? geometry.points.slice() : null;\n\tvar point = new mxPoint(pt.x, pt.y);\n\tvar result = null;\n\t\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tthis.convertPoint(point, false);\n\t\t\n\t\tif (points == null)\n\t\t{\n\t\t\tpoints = [point];\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Adds point from virtual bend\n\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 0, point);\n\t\t\t}\n\n\t\t\t// Removes point if dragged on terminal point\n\t\t\tif (!this.isSource && !this.isTarget)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i != this.index)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar bend = this.bends[i];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (bend != null && mxUtils.contains(bend.bounds, pt.x, pt.y))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (this.index <= mxEvent.VIRTUAL_HANDLE)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(mxEvent.VIRTUAL_HANDLE - this.index, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpoints.splice(this.index - 1, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Removes point if user tries to straighten a segment\n\t\t\t\tif (result == null && this.straightRemoveEnabled && (me == null || !mxEvent.isAltDown(me.getEvent())))\n\t\t\t\t{\n\t\t\t\t\tvar tol = this.graph.tolerance * this.graph.tolerance;\n\t\t\t\t\tvar abs = this.state.absolutePoints.slice();\n\t\t\t\t\tabs[this.index] = pt;\n\t\t\t\t\t\n\t\t\t\t\t// Handes special case where removing waypoint affects tolerance (flickering)\n\t\t\t\t\tvar src = this.state.getVisibleTerminalState(true);\n\t\t\t\t\t\n\t\t\t\t\tif (src != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, src, true);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(src, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[0] = new mxPoint(src.view.getRoutingCenterX(src), src.view.getRoutingCenterY(src));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar trg = this.state.getVisibleTerminalState(false);\n\t\t\t\t\t\n\t\t\t\t\tif (trg != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar c = this.graph.getConnectionConstraint(this.state, trg, false);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Checks if point is not fixed\n\t\t\t\t\t\tif (c == null || this.graph.getConnectionPoint(trg, c) == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tabs[abs.length - 1] = new mxPoint(trg.view.getRoutingCenterX(trg), trg.view.getRoutingCenterY(trg));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction checkRemove(idx, tmp)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (idx > 0 && idx < abs.length - 1 &&\n\t\t\t\t\t\t\tmxUtils.ptSegDistSq(abs[idx - 1].x, abs[idx - 1].y,\n\t\t\t\t\t\t\t\tabs[idx + 1].x, abs[idx + 1].y, tmp.x, tmp.y) < tol)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints.splice(idx - 1, 1);\n\t\t\t\t\t\t\tresult = points;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\t// LATER: Check if other points can be removed if a segment is made straight\n\t\t\t\t\tcheckRemove(this.index, pt);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Updates existing point\n\t\t\tif (result == null && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tpoints[this.index - 1] = point;\n\t\t\t}\n\t\t}\n\t}\n\telse if (this.graph.resetEdgesOnConnect)\n\t{\n\t\tpoints = null;\n\t}\n\t\n\treturn (result != null) ? result : points;\n};\n\n/**\n * Function: isOutlineConnectEvent\n * \n * Returns true if <outlineConnect> is true and the source of the event is the outline shape\n * or shift is pressed.\n */\nmxEdgeHandler.prototype.isOutlineConnectEvent = function(me)\n{\n\tvar offset = mxUtils.getOffset(this.graph.container);\n\tvar evt = me.getEvent();\n\t\n\tvar clientX = mxEvent.getClientX(evt);\n\tvar clientY = mxEvent.getClientY(evt);\n\t\n\tvar doc = document.documentElement;\n\tvar left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n\tvar top = (window.pageYOffset || doc.scrollTop)  - (doc.clientTop || 0);\n\t\n\tvar gridX = this.currentPoint.x - this.graph.container.scrollLeft + offset.x - left;\n\tvar gridY = this.currentPoint.y - this.graph.container.scrollTop + offset.y - top;\n\n\treturn this.outlineConnect && !mxEvent.isShiftDown(me.getEvent()) &&\n\t\t(me.isSource(this.marker.highlight.shape) ||\n\t\t(mxEvent.isAltDown(me.getEvent()) && me.getState() != null) ||\n\t\tthis.marker.highlight.isHighlightAt(clientX, clientY) ||\n\t\t((gridX != clientX || gridY != clientY) && me.getState() == null &&\n\t\tthis.marker.highlight.isHighlightAt(gridX, gridY)));\n};\n\n/**\n * Function: updatePreviewState\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeHandler.prototype.updatePreviewState = function(edge, point, terminalState, me, outline)\n{\n\t// Computes the points for the edge style and terminals\n\tvar sourceState = (this.isSource) ? terminalState : this.state.getVisibleTerminalState(true);\n\tvar targetState = (this.isTarget) ? terminalState : this.state.getVisibleTerminalState(false);\n\t\n\tvar sourceConstraint = this.graph.getConnectionConstraint(edge, sourceState, true);\n\tvar targetConstraint = this.graph.getConnectionConstraint(edge, targetState, false);\n\n\tvar constraint = this.constraintHandler.currentConstraint;\n\n\tif (constraint == null && outline)\n\t{\n\t\tif (terminalState != null)\n\t\t{\n\t\t\t// Handles special case where mouse is on outline away from actual end point\n\t\t\t// in which case the grid is ignored and mouse point is used instead\n\t\t\tif (me.isSource(this.marker.highlight.shape))\n\t\t\t{\n\t\t\t\tpoint = new mxPoint(me.getGraphX(), me.getGraphY());\n\t\t\t}\n\t\t\t\n\t\t\tconstraint = this.graph.getOutlineConstraint(point, terminalState, me);\n\t\t\tthis.constraintHandler.setFocus(me, terminalState, this.isSource);\n\t\t\tthis.constraintHandler.currentConstraint = constraint;\n\t\t\tthis.constraintHandler.currentPoint = point;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\t}\n\t\n\tif (this.outlineConnect && this.marker.highlight != null && this.marker.highlight.shape != null)\n\t{\n\t\tvar s = this.graph.view.scale;\n\t\t\n\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (outline) ? mxConstants.OUTLINE_HIGHLIGHT_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.OUTLINE_HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t\telse if (this.marker.hasValidState())\n\t\t{\n\t\t\tthis.marker.highlight.shape.stroke = (this.marker.getValidState() == me.getState()) ?\n\t\t\t\tmxConstants.DEFAULT_VALID_COLOR : 'transparent';\n\t\t\tthis.marker.highlight.shape.strokewidth = mxConstants.HIGHLIGHT_STROKEWIDTH / s / s;\n\t\t\tthis.marker.highlight.repaint();\n\t\t}\n\t}\n\t\n\tif (this.isSource)\n\t{\n\t\tsourceConstraint = constraint;\n\t}\n\telse if (this.isTarget)\n\t{\n\t\ttargetConstraint = constraint;\n\t}\n\t\n\tif (this.isSource || this.isTarget)\n\t{\n\t\tif (constraint != null && constraint.point != null)\n\t\t{\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X] = constraint.point.x;\n\t\t\tedge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y] = constraint.point.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_X : mxConstants.STYLE_ENTRY_X];\n\t\t\tdelete edge.style[(this.isSource) ? mxConstants.STYLE_EXIT_Y : mxConstants.STYLE_ENTRY_Y];\n\t\t}\n\t}\n\t\n\tedge.setVisibleTerminalState(sourceState, true);\n\tedge.setVisibleTerminalState(targetState, false);\n\t\n\tif (!this.isSource || sourceState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, sourceState, true, sourceConstraint);\n\t}\n\t\n\tif (!this.isTarget || targetState != null)\n\t{\n\t\tedge.view.updateFixedTerminalPoint(edge, targetState, false, targetConstraint);\n\t}\n\t\n\tif ((this.isSource || this.isTarget) && terminalState == null)\n\t{\n\t\tedge.setAbsoluteTerminalPoint(point, this.isSource);\n\n\t\tif (this.marker.getMarkedState() == null)\n\t\t{\n\t\t\tthis.error = (this.graph.allowDanglingEdges) ? null : '';\n\t\t}\n\t}\n\t\n\tedge.view.updatePoints(edge, this.points, sourceState, targetState);\n\tedge.view.updateFloatingTerminalPoints(edge, sourceState, targetState);\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the preview.\n */\nmxEdgeHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tthis.currentPoint = this.getPointForEvent(me);\n\t\tthis.error = null;\n\t\t\n\t\t// Uses the current point from the constraint handler if available\n\t\tif (!this.graph.isIgnoreTerminalEvent(me.getEvent()) && mxEvent.isShiftDown(me.getEvent()) && this.snapPoint != null)\n\t\t{\n\t\t\tif (Math.abs(this.snapPoint.x - this.currentPoint.x) < Math.abs(this.snapPoint.y - this.currentPoint.y))\n\t\t\t{\n\t\t\t\tthis.currentPoint.x = this.snapPoint.x;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.currentPoint.y = this.snapPoint.y;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.index <= mxEvent.CUSTOM_HANDLE && this.index > mxEvent.VIRTUAL_HANDLE)\n\t\t{\n\t\t\tif (this.customHandles != null)\n\t\t\t{\n\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - this.index].processEvent(me);\n\t\t\t}\n\t\t}\n\t\telse if (this.isLabel)\n\t\t{\n\t\t\tthis.label.x = this.currentPoint.x;\n\t\t\tthis.label.y = this.currentPoint.y;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.points = this.getPreviewPoints(this.currentPoint, me);\n\t\t\tvar terminalState = (this.isSource || this.isTarget) ? this.getPreviewTerminalState(me) : null;\n\n\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\tthis.constraintHandler.currentFocus != null &&\n\t\t\t\tthis.constraintHandler.currentPoint != null)\n\t\t\t{\n\t\t\t\tthis.currentPoint = this.constraintHandler.currentPoint.clone();\n\t\t\t}\n\t\t\telse if (this.outlineConnect)\n\t\t\t{\n\t\t\t\t// Need to check outline before cloning terminal state\n\t\t\t\tvar outline = (this.isSource || this.isTarget) ? this.isOutlineConnectEvent(me) : false\n\t\t\t\t\t\t\n\t\t\t\tif (outline)\n\t\t\t\t{\n\t\t\t\t\tterminalState = this.marker.highlight.state;\n\t\t\t\t}\n\t\t\t\telse if (terminalState != null && terminalState != me.getState() && this.marker.highlight.shape != null)\n\t\t\t\t{\n\t\t\t\t\tthis.marker.highlight.shape.stroke = 'transparent';\n\t\t\t\t\tthis.marker.highlight.repaint();\n\t\t\t\t\tterminalState = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (terminalState != null && this.graph.isCellLocked(terminalState.cell))\n\t\t\t{\n\t\t\t\tterminalState = null;\n\t\t\t\tthis.marker.reset();\n\t\t\t}\n\t\t\t\n\t\t\tvar clone = this.clonePreviewState(this.currentPoint, (terminalState != null) ? terminalState.cell : null);\n\t\t\tthis.updatePreviewState(clone, this.currentPoint, terminalState, me, outline);\n\n\t\t\t// Sets the color of the preview to valid or invalid, updates the\n\t\t\t// points of the preview and redraws\n\t\t\tvar color = (this.error == null) ? this.marker.validColor : this.marker.invalidColor;\n\t\t\tthis.setPreviewColor(color);\n\t\t\tthis.abspoints = clone.absolutePoints;\n\t\t\tthis.active = true;\n\t\t}\n\n\t\t// This should go before calling isOutlineConnectEvent above. As a workaround\n\t\t// we add an offset of gridSize to the hint to avoid problem with hit detection\n\t\t// in highlight.isHighlightAt (which uses comonentFromPoint)\n\t\tthis.updateHint(me, this.currentPoint);\n\t\tthis.drawPreview();\n\t\tmxEvent.consume(me.getEvent());\n\t\tme.consume();\n\t}\n\t// Workaround for disabling the connect highlight when over handle\n\telse if (mxClient.IS_IE && this.getHandleForEvent(me) != null)\n\t{\n\t\tme.consume(false);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event to applying the previewed changes on the edge by\n * using <moveLabel>, <connect> or <changePoints>.\n */\nmxEdgeHandler.prototype.mouseUp = function(sender, me)\n{\n\t// Workaround for wrong event source in Webkit\n\tif (this.index != null && this.marker != null)\n\t{\n\t\tvar edge = this.state.cell;\n\t\tvar index = this.index;\n\t\tthis.index = null;\n\t\t\n\t\t// Ignores event if mouse has not been moved\n\t\tif (me.getX() != this.startX || me.getY() != this.startY)\n\t\t{\n\t\t\tvar clone = !this.graph.isIgnoreTerminalEvent(me.getEvent()) && this.graph.isCloneEvent(me.getEvent()) &&\n\t\t\t\tthis.cloneEnabled && this.graph.isCellsCloneable();\n\t\t\t\n\t\t\t// Displays the reason for not carriying out the change\n\t\t\t// if there is an error message with non-zero length\n\t\t\tif (this.error != null)\n\t\t\t{\n\t\t\t\tif (this.error.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.graph.validationAlert(this.error);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (index <= mxEvent.CUSTOM_HANDLE && index > mxEvent.VIRTUAL_HANDLE)\n\t\t\t{\n\t\t\t\tif (this.customHandles != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.customHandles[mxEvent.CUSTOM_HANDLE - index].execute();\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.isLabel)\n\t\t\t{\n\t\t\t\tthis.moveLabel(this.state, this.label.x, this.label.y);\n\t\t\t}\n\t\t\telse if (this.isSource || this.isTarget)\n\t\t\t{\n\t\t\t\tvar terminal = null;\n\t\t\t\t\n\t\t\t\tif (this.constraintHandler.currentConstraint != null &&\n\t\t\t\t\tthis.constraintHandler.currentFocus != null)\n\t\t\t\t{\n\t\t\t\t\tterminal = this.constraintHandler.currentFocus.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal == null && this.marker.hasValidState() && this.marker.highlight != null &&\n\t\t\t\t\tthis.marker.highlight.shape != null &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'transparent' &&\n\t\t\t\t\tthis.marker.highlight.shape.stroke != 'white')\n\t\t\t\t{\n\t\t\t\t\tterminal = this.marker.validState.cell;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (terminal != null)\n\t\t\t\t{\n\t\t\t\t\tvar model = this.graph.getModel();\n\t\t\t\t\tvar parent = model.getParent(edge);\n\t\t\t\t\t\n\t\t\t\t\tmodel.beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// Clones and adds the cell\n\t\t\t\t\t\tif (clone)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\t\t\t\tvar clone = this.graph.cloneCell(edge);\n\t\t\t\t\t\t\tmodel.add(parent, clone, model.getChildCount(parent));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (geo != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\t\t\tmodel.setGeometry(clone, geo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar other = model.getTerminal(edge, !this.isSource);\n\t\t\t\t\t\t\tthis.graph.connectCell(clone, other, !this.isSource);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tedge = clone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tedge = this.connect(edge, terminal, this.isSource, clone, me);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel.endUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.graph.isAllowDanglingEdges())\n\t\t\t\t{\n\t\t\t\t\tvar pt = this.abspoints[(this.isSource) ? 0 : this.abspoints.length - 1];\n\t\t\t\t\tpt.x = this.roundLength(pt.x / this.graph.view.scale - this.graph.view.translate.x);\n\t\t\t\t\tpt.y = this.roundLength(pt.y / this.graph.view.scale - this.graph.view.translate.y);\n\n\t\t\t\t\tvar pstate = this.graph.getView().getState(\n\t\t\t\t\t\t\tthis.graph.getModel().getParent(edge));\n\t\t\t\t\t\t\t\n\t\t\t\t\tif (pstate != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tpt.x -= pstate.origin.x;\n\t\t\t\t\t\tpt.y -= pstate.origin.y;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tpt.x -= this.graph.panDx / this.graph.view.scale;\n\t\t\t\t\tpt.y -= this.graph.panDy / this.graph.view.scale;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t// Destroys and recreates this handler\n\t\t\t\t\tedge = this.changeTerminalPoint(edge, pt, this.isSource, clone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.active)\n\t\t\t{\n\t\t\t\tedge = this.changePoints(edge, this.points, clone);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.graph.getView().invalidate(this.state.cell);\n\t\t\t\tthis.graph.getView().validate(this.state.cell);\t\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Resets the preview color the state of the handler if this\n\t\t// handler has not been recreated\n\t\tif (this.marker != null)\n\t\t{\n\t\t\tthis.reset();\n\n\t\t\t// Updates the selection if the edge has been cloned\n\t\t\tif (edge != this.state.cell)\n\t\t\t{\n\t\t\t\tthis.graph.setSelectionCell(edge);\n\t\t\t}\n\t\t}\n\n\t\tme.consume();\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets the state of this handler.\n */\nmxEdgeHandler.prototype.reset = function()\n{\n\tif (this.active)\n\t{\n\t\tthis.refresh();\n\t}\n\t\n\tthis.error = null;\n\tthis.index = null;\n\tthis.label = null;\n\tthis.points = null;\n\tthis.snapPoint = null;\n\tthis.isLabel = false;\n\tthis.isSource = false;\n\tthis.isTarget = false;\n\tthis.active = false;\n\t\n\tif (this.livePreview && this.sizers != null)\n\t{\n\t\tfor (var i = 0; i < this.sizers.length; i++)\n\t\t{\n\t\t\tif (this.sizers[i] != null)\n\t\t\t{\n\t\t\t\tthis.sizers[i].node.style.display = '';\n\t\t\t}\n\t\t}\n\t}\n\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.reset();\n\t}\n\t\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.reset();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].reset();\n\t\t}\n\t}\n\n\tthis.setPreviewColor(mxConstants.EDGE_SELECTION_COLOR);\n\tthis.removeHint();\n\tthis.redraw();\n};\n\n/**\n * Function: setPreviewColor\n * \n * Sets the color of the preview to the given value.\n */\nmxEdgeHandler.prototype.setPreviewColor = function(color)\n{\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid. Returns the given, modified\n * point instance.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\t\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x);\n\tpoint.y = Math.round(point.y / scale - tr.y);\n\n\tvar pstate = this.graph.getView().getState(\n\t\tthis.graph.getModel().getParent(this.state.cell));\n\n\tif (pstate != null)\n\t{\n\t\tpoint.x -= pstate.origin.x;\n\t\tpoint.y -= pstate.origin.y;\n\t}\n\n\treturn point;\n};\n\n/**\n * Function: moveLabel\n * \n * Changes the coordinates for the label of the given edge.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge.\n * x - Integer that specifies the x-coordinate of the new location.\n * y - Integer that specifies the y-coordinate of the new location.\n */\nmxEdgeHandler.prototype.moveLabel = function(edgeState, x, y)\n{\n\tvar model = this.graph.getModel();\n\tvar geometry = model.getGeometry(edgeState.cell);\n\t\n\tif (geometry != null)\n\t{\n\t\tvar scale = this.graph.getView().scale;\n\t\tgeometry = geometry.clone();\n\t\t\n\t\tif (geometry.relative)\n\t\t{\n\t\t\t// Resets the relative location stored inside the geometry\n\t\t\tvar pt = this.graph.getView().getRelativePoint(edgeState, x, y);\n\t\t\tgeometry.x = Math.round(pt.x * 10000) / 10000;\n\t\t\tgeometry.y = Math.round(pt.y);\n\t\t\t\n\t\t\t// Resets the offset inside the geometry to find the offset\n\t\t\t// from the resulting point\n\t\t\tgeometry.offset = new mxPoint(0, 0);\n\t\t\tvar pt = this.graph.view.getPoint(edgeState, geometry);\n\t\t\tgeometry.offset = new mxPoint(Math.round((x - pt.x) / scale), Math.round((y - pt.y) / scale));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar points = edgeState.absolutePoints;\n\t\t\tvar p0 = points[0];\n\t\t\tvar pe = points[points.length - 1];\n\t\t\t\n\t\t\tif (p0 != null && pe != null)\n\t\t\t{\n\t\t\t\tvar cx = p0.x + (pe.x - p0.x) / 2;\n\t\t\t\tvar cy = p0.y + (pe.y - p0.y) / 2;\n\t\t\t\t\n\t\t\t\tgeometry.offset = new mxPoint(Math.round((x - cx) / scale), Math.round((y - cy) / scale));\n\t\t\t\tgeometry.x = 0;\n\t\t\t\tgeometry.y = 0;\n\t\t\t}\n\t\t}\n\n\t\tmodel.setGeometry(edgeState.cell, geometry);\n\t}\n};\n\n/**\n * Function: connect\n * \n * Changes the terminal or terminal point of the given edge in the graph\n * model.\n * \n * Parameters:\n * \n * edge - <mxCell> that represents the edge to be reconnected.\n * terminal - <mxCell> that represents the new terminal.\n * isSource - Boolean indicating if the new terminal is the source or\n * target terminal.\n * isClone - Boolean indicating if the new connection should be a clone of\n * the old edge.\n * me - <mxMouseEvent> that contains the mouse up event.\n */\nmxEdgeHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar parent = model.getParent(edge);\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvar constraint = this.constraintHandler.currentConstraint;\n\t\t\n\t\tif (constraint == null)\n\t\t{\n\t\t\tconstraint = new mxConnectionConstraint();\n\t\t}\n\n\t\tthis.graph.connectCell(edge, terminal, isSource, constraint);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changeTerminalPoint\n * \n * Changes the terminal point of the given edge.\n */\nmxEdgeHandler.prototype.changeTerminalPoint = function(edge, point, isSource, clone)\n{\n\tvar model = this.graph.getModel();\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar terminal = model.getTerminal(edge, !isSource);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, terminal, !isSource);\n\t\t}\n\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.setTerminalPoint(point, isSource);\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t\tthis.graph.connectCell(edge, null, isSource, new mxConnectionConstraint());\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: changePoints\n * \n * Changes the control points of the given edge in the graph model.\n */\nmxEdgeHandler.prototype.changePoints = function(edge, points, clone)\n{\n\tvar model = this.graph.getModel();\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (clone)\n\t\t{\n\t\t\tvar parent = model.getParent(edge);\n\t\t\tvar source = model.getTerminal(edge, true);\n\t\t\tvar target = model.getTerminal(edge, false);\n\t\t\tedge = this.graph.cloneCell(edge);\n\t\t\tmodel.add(parent, edge, model.getChildCount(parent));\n\t\t\tmodel.setTerminal(edge, source, true);\n\t\t\tmodel.setTerminal(edge, target, false);\n\t\t}\n\t\t\n\t\tvar geo = model.getGeometry(edge);\n\t\t\n\t\tif (geo != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points = points;\n\t\t\t\n\t\t\tmodel.setGeometry(edge, geo);\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: addPoint\n * \n * Adds a control point for the given state and event.\n */\nmxEdgeHandler.prototype.addPoint = function(state, evt)\n{\n\tvar pt = mxUtils.convertPoint(this.graph.container, mxEvent.getClientX(evt),\n\t\t\tmxEvent.getClientY(evt));\n\tvar gridEnabled = this.graph.isGridEnabledEvent(evt);\n\tthis.convertPoint(pt, gridEnabled);\n\tthis.addPointAt(state, pt.x, pt.y);\n\tmxEvent.consume(evt);\n};\n\n/**\n * Function: addPointAt\n * \n * Adds a control point at the given point.\n */\nmxEdgeHandler.prototype.addPointAt = function(state, x, y)\n{\n\tvar geo = this.graph.getCellGeometry(state.cell);\n\tvar pt = new mxPoint(x, y);\n\t\n\tif (geo != null)\n\t{\n\t\tgeo = geo.clone();\n\t\tvar t = this.graph.view.translate;\n\t\tvar s = this.graph.view.scale;\n\t\tvar offset = new mxPoint(t.x * s, t.y * s);\n\t\t\n\t\tvar parent = this.graph.model.getParent(this.state.cell);\n\t\t\n\t\tif (this.graph.model.isVertex(parent))\n\t\t{\n\t\t\tvar pState = this.graph.view.getState(parent);\n\t\t\toffset = new mxPoint(pState.x, pState.y);\n\t\t}\n\t\t\n\t\tvar index = mxUtils.findNearestSegment(state, pt.x * s + offset.x, pt.y * s + offset.y);\n\n\t\tif (geo.points == null)\n\t\t{\n\t\t\tgeo.points = [pt];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tgeo.points.splice(index, 0, pt);\n\t\t}\n\t\t\n\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\tthis.refresh();\t\n\t\tthis.redraw();\n\t}\n};\n\n/**\n * Function: removePoint\n * \n * Removes the control point at the given index from the given state.\n */\nmxEdgeHandler.prototype.removePoint = function(state, index)\n{\n\tif (index > 0 && index < this.abspoints.length - 1)\n\t{\n\t\tvar geo = this.graph.getCellGeometry(this.state.cell);\n\t\t\n\t\tif (geo != null && geo.points != null)\n\t\t{\n\t\t\tgeo = geo.clone();\n\t\t\tgeo.points.splice(index - 1, 1);\n\t\t\tthis.graph.getModel().setGeometry(state.cell, geo);\n\t\t\tthis.refresh();\n\t\t\tthis.redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: getHandleFillColor\n * \n * Returns the fillcolor for the handle at the given index.\n */\nmxEdgeHandler.prototype.getHandleFillColor = function(index)\n{\n\tvar isSource = index == 0;\n\tvar cell = this.state.cell;\n\tvar terminal = this.graph.getModel().getTerminal(cell, isSource);\n\tvar color = mxConstants.HANDLE_FILLCOLOR;\n\t\n\tif ((terminal != null && !this.graph.isCellDisconnectable(cell, terminal, isSource)) ||\n\t\t(terminal == null && !this.graph.isTerminalPointMovable(cell, isSource)))\n\t{\n\t\tcolor = mxConstants.LOCKED_HANDLE_FILLCOLOR;\n\t}\n\telse if (terminal != null && this.graph.isCellDisconnectable(cell, terminal, isSource))\n\t{\n\t\tcolor = mxConstants.CONNECT_HANDLE_FILLCOLOR;\n\t}\n\t\n\treturn color;\n};\n\n/**\n * Function: redraw\n * \n * Redraws the preview, and the bends- and label control points.\n */\nmxEdgeHandler.prototype.redraw = function(ignoreHandles)\n{\n\tthis.abspoints = this.state.absolutePoints.slice();\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = g.points;\n\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tif (pts != null)\n\t\t{\n\t\t\tif (this.points == null)\n\t\t\t{\n\t\t\t\tthis.points = [];\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i] != null && this.abspoints[i] != null)\n\t\t\t\t{\n\t\t\t\t\tthis.points[i - 1] = pts[i - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.drawPreview();\n\t\n\tif (!ignoreHandles)\n\t{\n\t\tthis.redrawHandles();\n\t}\n};\n\n/**\n * Function: redrawHandles\n * \n * Redraws the handles.\n */\nmxEdgeHandler.prototype.redrawHandles = function()\n{\n\tvar cell = this.state.cell;\n\n\t// Updates the handle for the label position\n\tvar b = this.labelShape.bounds;\n\tthis.label = new mxPoint(this.state.absoluteOffset.x, this.state.absoluteOffset.y);\n\tthis.labelShape.bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\n\t// Shows or hides the label handle depending on the label\n\tvar lab = this.graph.getLabel(cell);\n\tthis.labelShape.visible = (lab != null && lab.length > 0 && this.graph.isLabelMovable(cell));\n\t\n\tif (this.bends != null && this.bends.length > 0)\n\t{\n\t\tvar n = this.abspoints.length - 1;\n\t\t\n\t\tvar p0 = this.abspoints[0];\n\t\tvar x0 = p0.x;\n\t\tvar y0 = p0.y;\n\t\t\n\t\tb = this.bends[0].bounds;\n\t\tthis.bends[0].bounds = new mxRectangle(Math.floor(x0 - b.width / 2),\n\t\t\t\tMath.floor(y0 - b.height / 2), b.width, b.height);\n\t\tthis.bends[0].fill = this.getHandleFillColor(0);\n\t\tthis.bends[0].redraw();\n\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[0].bounds);\n\t\t}\n\t\t\t\t\n\t\tvar pe = this.abspoints[n];\n\t\tvar xn = pe.x;\n\t\tvar yn = pe.y;\n\t\t\n\t\tvar bn = this.bends.length - 1;\n\t\tb = this.bends[bn].bounds;\n\t\tthis.bends[bn].bounds = new mxRectangle(Math.floor(xn - b.width / 2),\n\t\t\t\tMath.floor(yn - b.height / 2), b.width, b.height);\n\t\tthis.bends[bn].fill = this.getHandleFillColor(bn);\n\t\tthis.bends[bn].redraw();\n\t\t\t\t\n\t\tif (this.manageLabelHandle)\n\t\t{\n\t\t\tthis.checkLabelHandle(this.bends[bn].bounds);\n\t\t}\n\t\t\n\t\tthis.redrawInnerBends(p0, pe);\n\t}\n\n\tif (this.abspoints != null && this.virtualBends != null && this.virtualBends.length > 0)\n\t{\n\t\tvar last = this.abspoints[0];\n\t\t\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tif (this.virtualBends[i] != null && this.abspoints[i + 1] != null)\n\t\t\t{\n\t\t\t\tvar pt = this.abspoints[i + 1];\n\t\t\t\tvar b = this.virtualBends[i];\n\t\t\t\tvar x = last.x + (pt.x - last.x) / 2;\n\t\t\t\tvar y = last.y + (pt.y - last.y) / 2;\n\t\t\t\tb.bounds = new mxRectangle(Math.floor(x - b.bounds.width / 2),\n\t\t\t\t\t\tMath.floor(y - b.bounds.height / 2), b.bounds.width, b.bounds.height);\n\t\t\t\tb.redraw();\n\t\t\t\tmxUtils.setOpacity(b.node, this.virtualBendOpacity);\n\t\t\t\tlast = pt;\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(b.bounds);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.redraw();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].redraw();\n\t\t}\n\t}\n};\n\n/**\n * Function: hideHandles\n * \n * Shortcut to <hideSizers>.\n */\nmxEdgeHandler.prototype.setHandlesVisible = function(visible)\n{\n\tif (this.bends != null)\n\t{\n\t\tfor (var i = 0; i < this.bends.length; i++)\n\t\t{\n\t\t\tthis.bends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tfor (var i = 0; i < this.virtualBends.length; i++)\n\t\t{\n\t\t\tthis.virtualBends[i].node.style.display = (visible) ? '' : 'none';\n\t\t}\n\t}\n\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.node.style.display = (visible) ? '' : 'none';\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tfor (var i = 0; i < this.customHandles.length; i++)\n\t\t{\n\t\t\tthis.customHandles[i].setVisible(visible);\n\t\t}\n\t}\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tfor (var i = 1; i < this.bends.length - 1; i++)\n\t{\n\t\tif (this.bends[i] != null)\n\t\t{\n\t\t\tif (this.abspoints[i] != null)\n\t\t\t{\n\t\t\t\tvar x = this.abspoints[i].x;\n\t\t\t\tvar y = this.abspoints[i].y;\n\t\t\t\t\n\t\t\t\tvar b = this.bends[i].bounds;\n\t\t\t\tthis.bends[i].node.style.visibility = 'visible';\n\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - b.width / 2),\n\t\t\t\t\t\tMath.round(y - b.height / 2), b.width, b.height);\n\t\t\t\t\n\t\t\t\tif (this.manageLabelHandle)\n\t\t\t\t{\n\t\t\t\t\tthis.checkLabelHandle(this.bends[i].bounds);\n\t\t\t\t}\n\t\t\t\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(this.bends[i].bounds, this.labelShape.bounds))\n\t\t\t\t{\n\t\t\t\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\t\t\t\tthis.bends[i].bounds = new mxRectangle(Math.round(x - w / 2), Math.round(y - h / 2), w, h);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.bends[i].redraw();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.bends[i].destroy();\n\t\t\t\tthis.bends[i] = null;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: checkLabelHandle\n * \n * Checks if the label handle intersects the given bounds and moves it if it\n * intersects.\n */\nmxEdgeHandler.prototype.checkLabelHandle = function(b)\n{\n\tif (this.labelShape != null)\n\t{\n\t\tvar b2 = this.labelShape.bounds;\n\t\t\n\t\tif (mxUtils.intersects(b, b2))\n\t\t{\n\t\t\tif (b.getCenterY() < b2.getCenterY())\n\t\t\t{\n\t\t\t\tb2.y = b.y + b.height;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tb2.y = b.y - b2.height;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: drawPreview\n * \n * Redraws the preview.\n */\nmxEdgeHandler.prototype.drawPreview = function()\n{\n\tif (this.isLabel)\n\t{\n\t\tvar b = this.labelShape.bounds;\n\t\tvar bounds = new mxRectangle(Math.round(this.label.x - b.width / 2),\n\t\t\t\tMath.round(this.label.y - b.height / 2), b.width, b.height);\n\t\tthis.labelShape.bounds = bounds;\n\t\tthis.labelShape.redraw();\n\t}\n\telse if (this.shape != null)\n\t{\n\t\tthis.shape.apply(this.state);\n\t\tthis.shape.points = this.abspoints;\n\t\tthis.shape.scale = this.state.view.scale;\n\t\tthis.shape.isDashed = this.isSelectionDashed();\n\t\tthis.shape.stroke = this.getSelectionColor();\n\t\tthis.shape.strokewidth = this.getSelectionStrokeWidth() / this.shape.scale / this.shape.scale;\n\t\tthis.shape.isShadow = false;\n\t\tthis.shape.redraw();\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.redraw();\n\t}\n};\n\n/**\n * Function: refresh\n * \n * Refreshes the bends of this handler.\n */\nmxEdgeHandler.prototype.refresh = function()\n{\n\tthis.abspoints = this.getSelectionPoints(this.state);\n\tthis.points = [];\n\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.points = this.abspoints;\n\t}\n\t\n\tif (this.bends != null)\n\t{\n\t\tthis.destroyBends(this.bends);\n\t\tthis.bends = this.createBends();\n\t}\n\t\n\tif (this.virtualBends != null)\n\t{\n\t\tthis.destroyBends(this.virtualBends);\n\t\tthis.virtualBends = this.createVirtualBends();\n\t}\n\t\n\tif (this.customHandles != null)\n\t{\n\t\tthis.destroyBends(this.customHandles);\n\t\tthis.customHandles = this.createCustomHandles();\n\t}\n\t\n\t// Puts label node on top of bends\n\tif (this.labelShape != null && this.labelShape.node != null && this.labelShape.node.parentNode != null)\n\t{\n\t\tthis.labelShape.node.parentNode.appendChild(this.labelShape.node);\n\t}\n};\n\n/**\n * Function: destroyBends\n * \n * Destroys all elements in <bends>.\n */\nmxEdgeHandler.prototype.destroyBends = function(bends)\n{\n\tif (bends != null)\n\t{\n\t\tfor (var i = 0; i < bends.length; i++)\n\t\t{\n\t\t\tif (bends[i] != null)\n\t\t\t{\n\t\t\t\tbends[i].destroy();\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes. This does\n * normally not need to be called as handlers are destroyed automatically\n * when the corresponding cell is deselected.\n */\nmxEdgeHandler.prototype.destroy = function()\n{\n\tif (this.escapeHandler != null)\n\t{\n\t\tthis.state.view.graph.removeListener(this.escapeHandler);\n\t\tthis.escapeHandler = null;\n\t}\n\t\n\tif (this.marker != null)\n\t{\n\t\tthis.marker.destroy();\n\t\tthis.marker = null;\n\t}\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n\t\n\tif (this.parentHighlight != null)\n\t{\n\t\tthis.parentHighlight.destroy();\n\t\tthis.parentHighlight = null;\n\t}\n\t\n\tif (this.labelShape != null)\n\t{\n\t\tthis.labelShape.destroy();\n\t\tthis.labelShape = null;\n\t}\n\n\tif (this.constraintHandler != null)\n\t{\n\t\tthis.constraintHandler.destroy();\n\t\tthis.constraintHandler = null;\n\t}\n\t\n\tthis.destroyBends(this.virtualBends);\n\tthis.virtualBends = null;\n\t\n\tthis.destroyBends(this.customHandles);\n\tthis.customHandles = null;\n\n\tthis.destroyBends(this.bends);\n\tthis.bends = null;\n\t\n\tthis.removeHint();\n};\n\n__mxOutput.mxEdgeHandler = typeof mxEdgeHandler !== 'undefined' ? mxEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxElbowEdgeHandler\n *\n * Graph event handler that reconnects edges and modifies control points and\n * the edge label location. Uses <mxTerminalMarker> for finding and\n * highlighting new source and target vertices. This handler is automatically\n * created in <mxGraph.createHandler>. It extends <mxEdgeHandler>.\n * \n * Constructor: mxEdgeHandler\n *\n * Constructs an edge handler for the specified <mxCellState>.\n * \n * Parameters:\n * \n * state - <mxCellState> of the cell to be modified.\n */\nfunction mxElbowEdgeHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxElbowEdgeHandler, mxEdgeHandler);\n\n/**\n * Specifies if a double click on the middle handle should call\n * <mxGraph.flipEdge>. Default is true.\n */\nmxElbowEdgeHandler.prototype.flipEnabled = true;\n\n/**\n * Variable: doubleClickOrientationResource\n * \n * Specifies the resource key for the tooltip to be displayed on the single\n * control point for routed edges. If the resource for this key does not\n * exist then the value is used as the error message. Default is\n * 'doubleClickOrientation'.\n */\nmxElbowEdgeHandler.prototype.doubleClickOrientationResource =\n\t(mxClient.language != 'none') ? 'doubleClickOrientation' : '';\n\n/**\n * Function: createBends\n * \n * Overrides <mxEdgeHandler.createBends> to create custom bends.\n */\n mxElbowEdgeHandler.prototype.createBends = function()\n {\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\t// Virtual\n\tbends.push(this.createVirtualBend(mxUtils.bind(this, function(evt)\n\t{\n\t\tif (!mxEvent.isConsumed(evt) && this.flipEnabled)\n\t\t{\n\t\t\tthis.graph.flipEdge(this.state.cell, evt);\n\t\t\tmxEvent.consume(evt);\n\t\t}\n\t})));\n\t\n\tthis.points.push(new mxPoint(0,0));\n\n\t// Target\n\tbend = this.createHandleShape(2);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\t\n\treturn bends;\n };\n\n/**\n * Function: createVirtualBend\n * \n * Creates a virtual bend that supports double clicking and calls\n * <mxGraph.flipEdge>.\n */\nmxElbowEdgeHandler.prototype.createVirtualBend = function(dblClickHandler)\n{\n\tvar bend = this.createHandleShape();\n\tthis.initBend(bend, dblClickHandler);\n\n\tbend.setCursor(this.getCursorForBend());\n\n\tif (!this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tbend.node.style.display = 'none';\n\t}\n\n\treturn bend;\n};\n\n/**\n * Function: getCursorForBend\n * \n * Returns the cursor to be used for the bend.\n */\nmxElbowEdgeHandler.prototype.getCursorForBend = function()\n{\n\treturn (this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.TopToBottom ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_TOPTOBOTTOM ||\n\t\t((this.state.style[mxConstants.STYLE_EDGE] == mxEdgeStyle.ElbowConnector ||\n\t\tthis.state.style[mxConstants.STYLE_EDGE] == mxConstants.EDGESTYLE_ELBOW)&&\n\t\tthis.state.style[mxConstants.STYLE_ELBOW] == mxConstants.ELBOW_VERTICAL)) ? \n\t\t'row-resize' : 'col-resize';\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns the tooltip for the given node.\n */\nmxElbowEdgeHandler.prototype.getTooltipForNode = function(node)\n{\n\tvar tip = null;\n\t\n\tif (this.bends != null && this.bends[1] != null && (node == this.bends[1].node ||\n\t\tnode.parentNode == this.bends[1].node))\n\t{\n\t\ttip = this.doubleClickOrientationResource;\n\t\ttip = mxResources.get(tip) || tip; // translate\n\t}\n\n\treturn tip;\n};\n\n/**\n * Function: convertPoint\n * \n * Converts the given point in-place from screen to unscaled, untranslated\n * graph coordinates and applies the grid.\n * \n * Parameters:\n * \n * point - <mxPoint> to be converted.\n * gridEnabled - Boolean that specifies if the grid should be applied.\n */\nmxElbowEdgeHandler.prototype.convertPoint = function(point, gridEnabled)\n{\n\tvar scale = this.graph.getView().getScale();\n\tvar tr = this.graph.getView().getTranslate();\n\tvar origin = this.state.origin;\n\t\n\tif (gridEnabled)\n\t{\n\t\tpoint.x = this.graph.snap(point.x);\n\t\tpoint.y = this.graph.snap(point.y);\n\t}\n\t\n\tpoint.x = Math.round(point.x / scale - tr.x - origin.x);\n\tpoint.y = Math.round(point.y / scale - tr.y - origin.y);\n\t\n\treturn point;\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates and redraws the inner bends.\n * \n * Parameters:\n * \n * p0 - <mxPoint> that represents the location of the first point.\n * pe - <mxPoint> that represents the location of the last point.\n */\nmxElbowEdgeHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tvar g = this.graph.getModel().getGeometry(this.state.cell);\n\tvar pts = this.state.absolutePoints;\n\tvar pt = null;\n\n\t// Keeps the virtual bend on the edge shape\n\tif (pts.length > 1)\n\t{\n\t\tp0 = pts[1];\n\t\tpe = pts[pts.length - 2];\n\t}\n\telse if (g.points != null && g.points.length > 0)\n\t{\n\t\tpt = pts[0];\n\t}\n\t\n\tif (pt == null)\n\t{\n\t\tpt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t}\n\telse\n\t{\n\t\tpt = new mxPoint(this.graph.getView().scale * (pt.x + this.graph.getView().translate.x + this.state.origin.x),\n\t\t\t\tthis.graph.getView().scale * (pt.y + this.graph.getView().translate.y + this.state.origin.y));\n\t}\n\n\t// Makes handle slightly bigger if the yellow  label handle\n\t// exists and intersects this green handle\n\tvar b = this.bends[1].bounds;\n\tvar w = b.width;\n\tvar h = b.height;\n\tvar bounds = new mxRectangle(Math.round(pt.x - w / 2), Math.round(pt.y - h / 2), w, h);\n\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(bounds);\n\t}\n\telse if (this.handleImage == null && this.labelShape.visible && mxUtils.intersects(bounds, this.labelShape.bounds))\n\t{\n\t\tw = mxConstants.HANDLE_SIZE + 3;\n\t\th = mxConstants.HANDLE_SIZE + 3;\n\t\tbounds = new mxRectangle(Math.floor(pt.x - w / 2), Math.floor(pt.y - h / 2), w, h);\n\t}\n\n\tthis.bends[1].bounds = bounds;\n\tthis.bends[1].redraw();\n\t\n\tif (this.manageLabelHandle)\n\t{\n\t\tthis.checkLabelHandle(this.bends[1].bounds);\n\t}\n};\n\n__mxOutput.mxElbowEdgeHandler = typeof mxElbowEdgeHandler !== 'undefined' ? mxElbowEdgeHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nfunction mxEdgeSegmentHandler(state)\n{\n\tmxEdgeHandler.call(this, state);\n};\n\n/**\n * Extends mxEdgeHandler.\n */\nmxUtils.extend(mxEdgeSegmentHandler, mxElbowEdgeHandler);\n\n/**\n * Function: getCurrentPoints\n * \n * Returns the current absolute points.\n */\nmxEdgeSegmentHandler.prototype.getCurrentPoints = function()\n{\n\tvar pts = this.state.absolutePoints;\n\t\n\tif (pts != null)\n\t{\n\t\t// Special case for straight edges where we add a virtual middle handle for moving the edge\n\t\tvar tol = Math.max(1, this.graph.view.scale);\n\t\t\n\t\tif (pts.length == 2 || (pts.length == 3 &&\n\t\t\t(Math.abs(pts[0].x - pts[1].x) < tol && Math.abs(pts[1].x - pts[2].x) < tol ||\n\t\t\tMath.abs(pts[0].y - pts[1].y) < tol && Math.abs(pts[1].y - pts[2].y) < tol)))\n\t\t{\n\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\n\t\t\tpts = [pts[0], new mxPoint(cx, cy), new mxPoint(cx, cy), pts[pts.length - 1]];\t\n\t\t}\n\t}\n\n\treturn pts;\n};\n\n/**\n * Function: getPreviewPoints\n * \n * Updates the given preview state taking into account the state of the constraint handler.\n */\nmxEdgeSegmentHandler.prototype.getPreviewPoints = function(point)\n{\n\tif (this.isSource || this.isTarget)\n\t{\n\t\treturn mxElbowEdgeHandler.prototype.getPreviewPoints.apply(this, arguments);\n\t}\n\telse\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\tvar last = this.convertPoint(pts[0].clone(), false);\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar result = [];\n\n\t\tfor (var i = 1; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt = this.convertPoint(pts[i].clone(), false);\n\t\t\t\n\t\t\tif (i == this.index)\n\t\t\t{\n\t\t\t\tif (Math.round(last.x - pt.x) == 0)\n\t\t \t\t{\n\t\t\t\t\tlast.x = point.x;\n\t\t\t\t\tpt.x = point.x;\n\t\t \t\t}\n\t\t \t\t\n\t\t\t\tif (Math.round(last.y - pt.y) == 0)\n\t\t \t\t{\n\t\t \t\t\tlast.y = point.y;\n\t\t \t\t\tpt.y = point.y;\n\t\t \t\t}\n\t\t\t}\n\n\t\t\tif (i < pts.length - 1)\n\t\t\t{\n\t\t\t\tresult.push(pt);\n\t\t\t}\n\n\t\t\tlast = pt;\n\t\t}\n\t\t\n\t\t// Replaces single point that intersects with source or target\n\t\tif (result.length == 1)\n\t\t{\n\t\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\t\tvar scale = this.state.view.getScale();\n\t\t\tvar tr = this.state.view.getTranslate();\n\t\t\t\n\t\t\tvar x = result[0].x * scale + tr.x;\n\t\t\tvar y = result[0].y * scale + tr.y;\n\t\t\t\n\t\t\tif ((source != null && mxUtils.contains(source, x, y)) ||\n\t\t\t\t(target != null && mxUtils.contains(target, x, y)))\n\t\t\t{\n\t\t\t\tresult = [point, point];\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\n/**\n * Function: updatePreviewState\n * \n * Overridden to perform optimization of the edge style result.\n */\nmxEdgeSegmentHandler.prototype.updatePreviewState = function(edge, point, terminalState, me)\n{\n\tmxEdgeHandler.prototype.updatePreviewState.apply(this, arguments);\n\n\t// Checks and corrects preview by running edge style again\n\tif (!this.isSource && !this.isTarget)\n\t{\n\t\tpoint = this.convertPoint(point.clone(), false);\n\t\tvar pts = edge.absolutePoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\n\t\tvar result = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t\t\n\t\tvar source = this.state.getVisibleTerminalState(true);\n\t\tvar target = this.state.getVisibleTerminalState(false);\n\t\tvar rpts = this.state.absolutePoints;\n\t\t\n\t\t// A straight line is represented by 3 handles\n\t\tif (result.length == 0 && (Math.round(pts[0].x - pts[pts.length - 1].x) == 0 ||\n\t\t\tMath.round(pts[0].y - pts[pts.length - 1].y) == 0))\n\t\t{\n\t\t\tresult = [point, point];\n\t\t}\n\t\t// Handles special case of transitions from straight vertical to routed\n\t\telse if (pts.length == 5 && result.length == 2 && source != null && target != null &&\n\t\t\t\trpts != null && Math.round(rpts[0].x - rpts[rpts.length - 1].x) == 0)\n\t\t{\n\t\t\tvar view = this.graph.getView();\n\t\t\tvar scale = view.getScale();\n\t\t\tvar tr = view.getTranslate();\n\t\t\t\n\t\t\tvar y0 = view.getRoutingCenterY(source) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar sc = this.graph.getConnectionConstraint(edge, source, true);\n\t\t\t\n\t\t\tif (sc != null)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(source, sc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\ty0 = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar ye = view.getRoutingCenterY(target) / scale - tr.y;\n\t\t\t\n\t\t\t// Use fixed connection point y-coordinate if one exists\n\t\t\tvar tc = this.graph.getConnectionConstraint(edge, target, false);\n\t\t\t\n\t\t\tif (tc)\n\t\t\t{\n\t\t\t\tvar pt = this.graph.getConnectionPoint(target, tc);\n\t\t\t\t\n\t\t\t\tif (pt != null)\n\t\t\t\t{\n\t\t\t\t\tthis.convertPoint(pt, false);\n\t\t\t\t\tye = pt.y;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tresult = [new mxPoint(point.x, y0), new mxPoint(point.x, ye)];\n\t\t}\n\n\t\tthis.points = result;\n\n\t\t// LATER: Check if points and result are different\n\t\tedge.view.updateFixedTerminalPoints(edge, source, target);\n\t\tedge.view.updatePoints(edge, this.points, source, target);\n\t\tedge.view.updateFloatingTerminalPoints(edge, source, target);\n\t}\n};\n\n/**\n * Overriden to merge edge segments.\n */\nmxEdgeSegmentHandler.prototype.connect = function(edge, terminal, isSource, isClone, me)\n{\n\tvar model = this.graph.getModel();\n\tvar geo = model.getGeometry(edge);\n\tvar result = null;\n\t\n\t// Merges adjacent edge segments\n\tif (geo != null && geo.points != null && geo.points.length > 0)\n\t{\n\t\tvar pts = this.abspoints;\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = pts[1];\n\t\tresult = [];\n\t\t\n\t\tfor (var i = 2; i < pts.length; i++)\n\t\t{\n\t\t\tvar pt2 = pts[i];\n\t\t\n\t\t\t// Merges adjacent segments only if more than 2 to allow for straight edges\n\t\t\tif ((Math.round(pt0.x - pt1.x) != 0 || Math.round(pt1.x - pt2.x) != 0) &&\n\t\t\t\t(Math.round(pt0.y - pt1.y) != 0 || Math.round(pt1.y - pt2.y) != 0))\n\t\t\t{\n\t\t\t\tresult.push(this.convertPoint(pt1.clone(), false));\n\t\t\t}\n\t\n\t\t\tpt0 = pt1;\n\t\t\tpt1 = pt2;\n\t\t}\n\t}\n\t\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tif (result != null)\n\t\t{\n\t\t\tvar geo = model.getGeometry(edge);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tgeo = geo.clone();\n\t\t\t\tgeo.points = result;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, geo);\n\t\t\t}\n\t\t}\n\t\t\n\t\tedge = mxEdgeHandler.prototype.connect.apply(this, arguments);\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\treturn edge;\n};\n\n/**\n * Function: getTooltipForNode\n * \n * Returns no tooltips.\n */\nmxEdgeSegmentHandler.prototype.getTooltipForNode = function(node)\n{\n\treturn null;\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.start = function(x, y, index)\n{\n\tmxEdgeHandler.prototype.start.apply(this, arguments);\n\t\n\tif (this.bends != null && this.bends[index] != null &&\n\t\t!this.isSource && !this.isTarget)\n\t{\n\t\tmxUtils.setOpacity(this.bends[index].node, 100);\n\t}\n};\n\n/**\n * Function: createBends\n * \n * Adds custom bends for the center of each segment.\n */\nmxEdgeSegmentHandler.prototype.createBends = function()\n{\n\tvar bends = [];\n\t\n\t// Source\n\tvar bend = this.createHandleShape(0);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\tvar pts = this.getCurrentPoints();\n\n\t// Waypoints (segment handles)\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tif (this.points == null)\n\t\t{\n\t\t\tthis.points = [];\n\t\t}\n\n\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t{\n\t\t\tbend = this.createVirtualBend();\n\t\t\tbends.push(bend);\n\t\t\tvar horizontal = Math.round(pts[i].x - pts[i + 1].x) == 0;\n\t\t\t\n\t\t\t// Special case where dy is 0 as well\n\t\t\tif (Math.round(pts[i].y - pts[i + 1].y) == 0 && i < pts.length - 2)\n\t\t\t{\n\t\t\t\thorizontal = Math.round(pts[i].x - pts[i + 2].x) == 0;\n\t\t\t}\n\t\t\t\n\t\t\tbend.setCursor((horizontal) ? 'col-resize' : 'row-resize');\n\t\t\tthis.points.push(new mxPoint(0,0));\n\t\t}\n\t}\n\n\t// Target\n\tvar bend = this.createHandleShape(pts.length);\n\tthis.initBend(bend);\n\tbend.setCursor(mxConstants.CURSOR_TERMINAL_HANDLE);\n\tbends.push(bend);\n\n\treturn bends;\n};\n\n/**\n * Function: redraw\n * \n * Overridden to invoke <refresh> before the redraw.\n */\nmxEdgeSegmentHandler.prototype.redraw = function()\n{\n\tthis.refresh();\n\tmxEdgeHandler.prototype.redraw.apply(this, arguments);\n};\n\n/**\n * Function: redrawInnerBends\n * \n * Updates the position of the custom bends.\n */\nmxEdgeSegmentHandler.prototype.redrawInnerBends = function(p0, pe)\n{\n\tif (this.graph.isCellBendable(this.state.cell))\n\t{\n\t\tvar pts = this.getCurrentPoints();\n\t\t\n\t\tif (pts != null && pts.length > 1)\n\t\t{\n\t\t\tvar straight = false;\n\t\t\t\n\t\t\t// Puts handle in the center of straight edges\n\t\t\tif (pts.length == 4 && Math.round(pts[1].x - pts[2].x) == 0 && Math.round(pts[1].y - pts[2].y) == 0)\n\t\t\t{\n\t\t\t\tstraight = true;\n\t\t\t\t\n\t\t\t\tif (Math.round(pts[0].y - pts[pts.length - 1].y) == 0)\n\t\t\t\t{\n\t\t\t\t\tvar cx = pts[0].x + (pts[pts.length - 1].x - pts[0].x) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(cx, pts[1].y);\n\t\t\t\t\tpts[2] = new mxPoint(cx, pts[2].y);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar cy = pts[0].y + (pts[pts.length - 1].y - pts[0].y) / 2;\n\t\t\t\t\tpts[1] = new mxPoint(pts[1].x, cy);\n\t\t\t\t\tpts[2] = new mxPoint(pts[2].x, cy);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < pts.length - 1; i++)\n\t\t\t{\n\t\t\t\tif (this.bends[i + 1] != null)\n\t\t\t\t{\n\t\t \t\t\tvar p0 = pts[i];\n\t \t\t\t\tvar pe = pts[i + 1];\n\t\t\t \t\tvar pt = new mxPoint(p0.x + (pe.x - p0.x) / 2, p0.y + (pe.y - p0.y) / 2);\n\t\t\t \t\tvar b = this.bends[i + 1].bounds;\n\t\t\t \t\tthis.bends[i + 1].bounds = new mxRectangle(Math.floor(pt.x - b.width / 2),\n\t\t\t \t\t\t\tMath.floor(pt.y - b.height / 2), b.width, b.height);\n\t\t\t\t \tthis.bends[i + 1].redraw();\n\t\t\t\t \t\n\t\t\t\t \tif (this.manageLabelHandle)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.checkLabelHandle(this.bends[i + 1].bounds);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (straight)\n\t\t\t{\n\t\t\t\tmxUtils.setOpacity(this.bends[1].node, this.virtualBendOpacity);\n\t\t\t\tmxUtils.setOpacity(this.bends[3].node, this.virtualBendOpacity);\n\t\t\t}\n\t\t}\n\t}\n};\n\n__mxOutput.mxEdgeSegmentHandler = typeof mxEdgeSegmentHandler !== 'undefined' ? mxEdgeSegmentHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxKeyHandler\n *\n * Event handler that listens to keystroke events. This is not a singleton,\n * however, it is normally only required once if the target is the document\n * element (default).\n * \n * This handler installs a key event listener in the topmost DOM node and\n * processes all events that originate from descandants of <mxGraph.container>\n * or from the topmost DOM node. The latter means that all unhandled keystrokes\n * are handled by this object regardless of the focused state of the <graph>.\n * \n * Example:\n * \n * The following example creates a key handler that listens to the delete key\n * (46) and deletes the selection cells if the graph is enabled.\n * \n * (code)\n * var keyHandler = new mxKeyHandler(graph);\n * keyHandler.bindKey(46, function(evt)\n * {\n *   if (graph.isEnabled())\n *   {\n *     graph.removeCells();\n *   }\n * });\n * (end)\n * \n * Keycodes:\n * \n * See http://tinyurl.com/yp8jgl or http://tinyurl.com/229yqw for a list of\n * keycodes or install a key event listener into the document element and print\n * the key codes of the respective events to the console.\n * \n * To support the Command key and the Control key on the Mac, the following\n * code can be used.\n *\n * (code)\n * keyHandler.getFunction = function(evt)\n * {\n *   if (evt != null)\n *   {\n *     return (mxEvent.isControlDown(evt) || (mxClient.IS_MAC && evt.metaKey)) ? this.controlKeys[evt.keyCode] : this.normalKeys[evt.keyCode];\n *   }\n *   \n *   return null;\n * };\n * (end)\n * \n * Constructor: mxKeyHandler\n *\n * Constructs an event handler that executes functions bound to specific\n * keystrokes.\n * \n * Parameters:\n * \n * graph - Reference to the associated <mxGraph>.\n * target - Optional reference to the event target. If null, the document\n * element is used as the event target, that is, the object where the key\n * event listener is installed.\n */\nfunction mxKeyHandler(graph, target)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.target = target || document.documentElement;\n\t\t\n\t\t// Creates the arrays to map from keycodes to functions\n\t\tthis.normalKeys = [];\n\t\tthis.shiftKeys = [];\n\t\tthis.controlKeys = [];\n\t\tthis.controlShiftKeys = [];\n\t\t\n\t\tthis.keydownHandler = mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.keyDown(evt);\n\t\t});\n\n\t\t// Installs the keystroke listener in the target\n\t\tmxEvent.addListener(this.target, 'keydown', this.keydownHandler);\n\t\t\n\t\t// Automatically deallocates memory in IE\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload',\n\t\t\t\tmxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tthis.destroy();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Variable: graph\n * \n * Reference to the <mxGraph> associated with this handler.\n */\nmxKeyHandler.prototype.graph = null;\n\n/**\n * Variable: target\n * \n * Reference to the target DOM, that is, the DOM node where the key event\n * listeners are installed.\n */\nmxKeyHandler.prototype.target = null;\n\n/**\n * Variable: normalKeys\n * \n * Maps from keycodes to functions for non-pressed control keys.\n */\nmxKeyHandler.prototype.normalKeys = null;\n\n/**\n * Variable: shiftKeys\n * \n * Maps from keycodes to functions for pressed shift keys.\n */\nmxKeyHandler.prototype.shiftKeys = null;\n\n/**\n * Variable: controlKeys\n * \n * Maps from keycodes to functions for pressed control keys.\n */\nmxKeyHandler.prototype.controlKeys = null;\n\n/**\n * Variable: controlShiftKeys\n * \n * Maps from keycodes to functions for pressed control and shift keys.\n */\nmxKeyHandler.prototype.controlShiftKeys = null;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxKeyHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation returns\n * <enabled>.\n */\nmxKeyHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling by updating <enabled>.\n * \n * Parameters:\n * \n * enabled - Boolean that specifies the new enabled state.\n */\nmxKeyHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: bindKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is not pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindKey = function(code, funct)\n{\n\tthis.normalKeys[code] = funct;\n};\n\n/**\n * Function: bindShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the shift key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindShiftKey = function(code, funct)\n{\n\tthis.shiftKeys[code] = funct;\n};\n\n/**\n * Function: bindControlKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control key is pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlKey = function(code, funct)\n{\n\tthis.controlKeys[code] = funct;\n};\n\n/**\n * Function: bindControlShiftKey\n * \n * Binds the specified keycode to the given function. This binding is used\n * if the control and shift key are pressed.\n * \n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * funct - JavaScript function that takes the key event as an argument.\n */\nmxKeyHandler.prototype.bindControlShiftKey = function(code, funct)\n{\n\tthis.controlShiftKeys[code] = funct;\n};\n\n/**\n * Function: isControlDown\n * \n * Returns true if the control key is pressed. This uses <mxEvent.isControlDown>.\n * \n * Parameters:\n * \n * evt - Key event whose control key pressed state should be returned.\n */\nmxKeyHandler.prototype.isControlDown = function(evt)\n{\n\treturn mxEvent.isControlDown(evt);\n};\n\n/**\n * Function: getFunction\n * \n * Returns the function associated with the given key event or null if no\n * function is associated with the given event.\n * \n * Parameters:\n * \n * evt - Key event whose associated function should be returned.\n */\nmxKeyHandler.prototype.getFunction = function(evt)\n{\n\tif (evt != null && !mxEvent.isAltDown(evt))\n\t{\n\t\tif (this.isControlDown(evt))\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.controlShiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.controlKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxEvent.isShiftDown(evt))\n\t\t\t{\n\t\t\t\treturn this.shiftKeys[evt.keyCode];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn this.normalKeys[evt.keyCode];\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\t\n/**\n * Function: isGraphEvent\n * \n * Returns true if the event should be processed by this handler, that is,\n * if the event source is either the target, one of its direct children, a\n * descendant of the <mxGraph.container>, or the <mxGraph.cellEditor> of the\n * <graph>.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isGraphEvent = function(evt)\n{\n\tvar source = mxEvent.getSource(evt);\n\t\n\t// Accepts events from the target object or\n\t// in-place editing inside graph\n\tif ((source == this.target || source.parentNode == this.target) ||\n\t\t(this.graph.cellEditor != null && this.graph.cellEditor.isEventSource(evt)))\n\t{\n\t\treturn true;\n\t}\n\t\n\t// Accepts events from inside the container\n\treturn mxUtils.isAncestorNode(this.graph.container, source);\n};\n\n/**\n * Function: keyDown\n * \n * Handles the event by invoking the function bound to the respective keystroke\n * if <isEnabledForEvent> returns true for the given event and if\n * <isEventIgnored> returns false, except for escape for which\n * <isEventIgnored> is not invoked.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.keyDown = function(evt)\n{\n\tif (this.isEnabledForEvent(evt))\n\t{\n\t\t// Cancels the editing if escape is pressed\n\t\tif (evt.keyCode == 27 /* Escape */)\n\t\t{\n\t\t\tthis.escape(evt);\n\t\t}\n\t\t\n\t\t// Invokes the function for the keystroke\n\t\telse if (!this.isEventIgnored(evt))\n\t\t{\n\t\t\tvar boundFunction = this.getFunction(evt);\n\t\t\t\n\t\t\tif (boundFunction != null)\n\t\t\t{\n\t\t\t\tboundFunction(evt);\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Function: isEnabledForEvent\n * \n * Returns true if the given event should be handled. <isEventIgnored> is\n * called later if the event is not an escape key stroke, in which case\n * <escape> is called. This implementation returns true if <isEnabled>\n * returns true for both, this handler and <graph>, if the event is not\n * consumed and if <isGraphEvent> returns true.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEnabledForEvent = function(evt)\n{\n\treturn (this.graph.isEnabled() && !mxEvent.isConsumed(evt) &&\n\t\tthis.isGraphEvent(evt) && this.isEnabled());\n};\n\n/**\n * Function: isEventIgnored\n * \n * Returns true if the given keystroke should be ignored. This returns\n * graph.isEditing().\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke.\n */\nmxKeyHandler.prototype.isEventIgnored = function(evt)\n{\n\treturn this.graph.isEditing();\n};\n\n/**\n * Function: escape\n * \n * Hook to process ESCAPE keystrokes. This implementation invokes\n * <mxGraph.stopEditing> to cancel the current editing, connecting\n * and/or other ongoing modifications.\n * \n * Parameters:\n * \n * evt - Key event that represents the keystroke. Possible keycode in this\n * case is 27 (ESCAPE).\n */\nmxKeyHandler.prototype.escape = function(evt)\n{\n\tif (this.graph.isEscapeEnabled())\n\t{\n\t\tthis.graph.escape(evt);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its references into the DOM. This does\n * normally not need to be called, it is called automatically when the\n * window unloads (in IE).\n */\nmxKeyHandler.prototype.destroy = function()\n{\n\tif (this.target != null && this.keydownHandler != null)\n\t{\n\t\tmxEvent.removeListener(this.target, 'keydown', this.keydownHandler);\n\t\tthis.keydownHandler = null;\n\t}\n\t\n\tthis.target = null;\n};\n\n__mxOutput.mxKeyHandler = typeof mxKeyHandler !== 'undefined' ? mxKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxTooltipHandler\n * \n * Graph event handler that displays tooltips. <mxGraph.getTooltip> is used to\n * get the tooltip for a cell or handle. This handler is built-into\n * <mxGraph.tooltipHandler> and enabled using <mxGraph.setTooltips>.\n *\n * Example:\n * \n * (code>\n * new mxTooltipHandler(graph);\n * (end)\n * \n * Constructor: mxTooltipHandler\n * \n * Constructs an event handler that displays tooltips with the specified\n * delay (in milliseconds). If no delay is specified then a default delay\n * of 500 ms (0.5 sec) is used.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * delay - Optional delay in milliseconds.\n */\nfunction mxTooltipHandler(graph, delay)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.delay = delay || 500;\n\t\tthis.graph.addMouseListener(this);\n\t}\n};\n\n/**\n * Variable: zIndex\n * \n * Specifies the zIndex for the tooltip and its shadow. Default is 10005.\n */\nmxTooltipHandler.prototype.zIndex = 10005;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxTooltipHandler.prototype.graph = null;\n\n/**\n * Variable: delay\n * \n * Delay to show the tooltip in milliseconds. Default is 500.\n */\nmxTooltipHandler.prototype.delay = null;\n\n/**\n * Variable: ignoreTouchEvents\n * \n * Specifies if touch and pen events should be ignored. Default is true.\n */\nmxTooltipHandler.prototype.ignoreTouchEvents = true;\n\n/**\n * Variable: hideOnHover\n * \n * Specifies if the tooltip should be hidden if the mouse is moved over the\n * current cell. Default is false.\n */\nmxTooltipHandler.prototype.hideOnHover = false;\n\n/**\n * Variable: destroyed\n * \n * True if this handler was destroyed using <destroy>.\n */\nmxTooltipHandler.prototype.destroyed = false;\n\n/**\n * Variable: enabled\n * \n * Specifies if events are handled. Default is true.\n */\nmxTooltipHandler.prototype.enabled = true;\n\n/**\n * Function: isEnabled\n * \n * Returns true if events are handled. This implementation\n * returns <enabled>.\n */\nmxTooltipHandler.prototype.isEnabled = function()\n{\n\treturn this.enabled;\n};\n\n/**\n * Function: setEnabled\n * \n * Enables or disables event handling. This implementation\n * updates <enabled>.\n */\nmxTooltipHandler.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * Function: isHideOnHover\n * \n * Returns <hideOnHover>.\n */\nmxTooltipHandler.prototype.isHideOnHover = function()\n{\n\treturn this.hideOnHover;\n};\n\n/**\n * Function: setHideOnHover\n * \n * Sets <hideOnHover>.\n */\nmxTooltipHandler.prototype.setHideOnHover = function(value)\n{\n\tthis.hideOnHover = value;\n};\n\n/**\n * Function: init\n * \n * Initializes the DOM nodes required for this tooltip handler.\n */\nmxTooltipHandler.prototype.init = function()\n{\n\tif (document.body != null)\n\t{\n\t\tthis.div = document.createElement('div');\n\t\tthis.div.className = 'mxTooltip';\n\t\tthis.div.style.visibility = 'hidden';\n\n\t\tdocument.body.appendChild(this.div);\n\n\t\tmxEvent.addGestureListeners(this.div, mxUtils.bind(this, function(evt)\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}));\n\t}\n};\n\n/**\n * Function: getStateForEvent\n * \n * Returns the <mxCellState> to be used for showing a tooltip for this event.\n */\nmxTooltipHandler.prototype.getStateForEvent = function(me)\n{\n\treturn me.getState();\n};\n\n/**\n * Function: mouseDown\n * \n * Handles the event by initiating a rubberband selection. By consuming the\n * event all subsequent events of the gesture are redirected to this\n * handler.\n */\nmxTooltipHandler.prototype.mouseDown = function(sender, me)\n{\n\tthis.reset(me, false);\n\tthis.hideTooltip();\n};\n\n/**\n * Function: mouseMove\n * \n * Handles the event by updating the rubberband selection.\n */\nmxTooltipHandler.prototype.mouseMove = function(sender, me)\n{\n\tif (me.getX() != this.lastX || me.getY() != this.lastY)\n\t{\n\t\tthis.reset(me, true);\n\t\tvar state = this.getStateForEvent(me);\n\t\t\n\t\tif (this.isHideOnHover() || state != this.state || (me.getSource() != this.node &&\n\t\t\t(!this.stateSource || (state != null && this.stateSource ==\n\t\t\t(me.isSource(state.shape) || !me.isSource(state.text))))))\n\t\t{\n\t\t\tthis.hideTooltip();\n\t\t}\n\t}\n\t\n\tthis.lastX = me.getX();\n\tthis.lastY = me.getY();\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by resetting the tooltip timer or hiding the existing\n * tooltip.\n */\nmxTooltipHandler.prototype.mouseUp = function(sender, me)\n{\n\tthis.reset(me, true);\n\tthis.hideTooltip();\n};\n\n\n/**\n * Function: resetTimer\n * \n * Resets the timer.\n */\nmxTooltipHandler.prototype.resetTimer = function()\n{\n\tif (this.thread != null)\n\t{\n\t\twindow.clearTimeout(this.thread);\n\t\tthis.thread = null;\n\t}\n};\n\n/**\n * Function: reset\n * \n * Resets and/or restarts the timer to trigger the display of the tooltip.\n */\nmxTooltipHandler.prototype.reset = function(me, restart, state)\n{\n\tif (!this.ignoreTouchEvents || mxEvent.isMouseEvent(me.getEvent()))\n\t{\n\t\tthis.resetTimer();\n\t\tstate = (state != null) ? state : this.getStateForEvent(me);\n\t\t\n\t\tif (restart && this.isEnabled() && state != null && (this.div == null ||\n\t\t\tthis.div.style.visibility == 'hidden'))\n\t\t{\n\t\t\tvar node = me.getSource();\n\t\t\tvar x = me.getX();\n\t\t\tvar y = me.getY();\n\t\t\tvar stateSource = me.isSource(state.shape) || me.isSource(state.text);\n\t\n\t\t\tthis.thread = window.setTimeout(mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tif (!this.graph.isEditing() && !this.graph.popupMenuHandler.isMenuShowing() && !this.graph.isMouseDown)\n\t\t\t\t{\n\t\t\t\t\t// Uses information from inside event cause using the event at\n\t\t\t\t\t// this (delayed) point in time is not possible in IE as it no\n\t\t\t\t\t// longer contains the required information (member not found)\n\t\t\t\t\tvar tip = this.graph.getTooltip(state, node, x, y);\n\t\t\t\t\tthis.show(tip, x, y);\n\t\t\t\t\tthis.state = state;\n\t\t\t\t\tthis.node = node;\n\t\t\t\t\tthis.stateSource = stateSource;\n\t\t\t\t}\n\t\t\t}), this.delay);\n\t\t}\n\t}\n};\n\n/**\n * Function: hide\n * \n * Hides the tooltip and resets the timer.\n */\nmxTooltipHandler.prototype.hide = function()\n{\n\tthis.resetTimer();\n\tthis.hideTooltip();\n};\n\n/**\n * Function: hideTooltip\n * \n * Hides the tooltip.\n */\nmxTooltipHandler.prototype.hideTooltip = function()\n{\n\tif (this.div != null)\n\t{\n\t\tthis.div.style.visibility = 'hidden';\n\t\tthis.div.innerHTML = '';\n\t}\n};\n\n/**\n * Function: show\n * \n * Shows the tooltip for the specified cell and optional index at the\n * specified location (with a vertical offset of 10 pixels).\n */\nmxTooltipHandler.prototype.show = function(tip, x, y)\n{\n\tif (!this.destroyed && tip != null && tip.length > 0)\n\t{\n\t\t// Initializes the DOM nodes if required\n\t\tif (this.div == null)\n\t\t{\n\t\t\tthis.init();\n\t\t}\n\t\t\n\t\tvar origin = mxUtils.getScrollOrigin();\n\n\t\tthis.div.style.zIndex = this.zIndex;\n\t\tthis.div.style.left = (x + origin.x) + 'px';\n\t\tthis.div.style.top = (y + mxConstants.TOOLTIP_VERTICAL_OFFSET +\n\t\t\torigin.y) + 'px';\n\n\t\tif (!mxUtils.isNode(tip))\n\t\t{\t\n\t\t\tthis.div.innerHTML = tip.replace(/\\n/g, '<br>');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.div.innerHTML = '';\n\t\t\tthis.div.appendChild(tip);\n\t\t}\n\t\t\n\t\tthis.div.style.visibility = '';\n\t\tmxUtils.fit(this.div);\n\t}\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxTooltipHandler.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxEvent.release(this.div);\n\t\t\n\t\tif (this.div != null && this.div.parentNode != null)\n\t\t{\n\t\t\tthis.div.parentNode.removeChild(this.div);\n\t\t}\n\t\t\n\t\tthis.destroyed = true;\n\t\tthis.div = null;\n\t}\n};\n\n__mxOutput.mxTooltipHandler = typeof mxTooltipHandler !== 'undefined' ? mxTooltipHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellTracker\n * \n * Event handler that highlights cells. Inherits from <mxCellMarker>.\n * \n * Example:\n * \n * (code)\n * new mxCellTracker(graph, '#00FF00');\n * (end)\n * \n * For detecting dragEnter, dragOver and dragLeave on cells, the following\n * code can be used:\n * \n * (code)\n * graph.addMouseListener(\n * {\n *   cell: null,\n *   mouseDown: function(sender, me) { },\n *   mouseMove: function(sender, me)\n *   {\n *     var tmp = me.getCell();\n *     \n *     if (tmp != this.cell)\n *     {\n *       if (this.cell != null)\n *       {\n *         this.dragLeave(me.getEvent(), this.cell);\n *       }\n *       \n *       this.cell = tmp;\n *       \n *       if (this.cell != null)\n *       {\n *         this.dragEnter(me.getEvent(), this.cell);\n *       }\n *     }\n *     \n *     if (this.cell != null)\n *     {\n *       this.dragOver(me.getEvent(), this.cell);\n *     }\n *   },\n *   mouseUp: function(sender, me) { },\n *   dragEnter: function(evt, cell)\n *   {\n *     mxLog.debug('dragEnter', cell.value);\n *   },\n *   dragOver: function(evt, cell)\n *   {\n *     mxLog.debug('dragOver', cell.value);\n *   },\n *   dragLeave: function(evt, cell)\n *   {\n *     mxLog.debug('dragLeave', cell.value);\n *   }\n * });\n * (end)\n * \n * Constructor: mxCellTracker\n * \n * Constructs an event handler that highlights cells.\n * \n * Parameters:\n * \n * graph - Reference to the enclosing <mxGraph>.\n * color - Color of the highlight. Default is blue.\n * funct - Optional JavaScript function that is used to override\n * <mxCellMarker.getCell>.\n */\nfunction mxCellTracker(graph, color, funct)\n{\n\tmxCellMarker.call(this, graph, color);\n\n\tthis.graph.addMouseListener(this);\n\t\n\tif (funct != null)\n\t{\n\t\tthis.getCell = funct;\n\t}\n\t\n\t// Automatic deallocation of memory\n\tif (mxClient.IS_IE)\n\t{\n\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.destroy();\n\t\t}));\n\t}\n};\n\n/**\n * Extends mxCellMarker.\n */\nmxUtils.extend(mxCellTracker, mxCellMarker);\n\n/**\n * Function: mouseDown\n * \n * Ignores the event. The event is not consumed.\n */\nmxCellTracker.prototype.mouseDown = function(sender, me) { };\n\n/**\n * Function: mouseMove\n * \n * Handles the event by highlighting the cell under the mousepointer if it\n * is over the hotspot region of the cell.\n */\nmxCellTracker.prototype.mouseMove = function(sender, me)\n{\n\tif (this.isEnabled())\n\t{\n\t\tthis.process(me);\n\t}\n};\n\n/**\n * Function: mouseUp\n * \n * Handles the event by reseting the highlight.\n */\nmxCellTracker.prototype.mouseUp = function(sender, me) { };\n\n/**\n * Function: destroy\n * \n * Destroys the object and all its resources and DOM nodes. This doesn't\n * normally need to be called. It is called automatically when the window\n * unloads.\n */\nmxCellTracker.prototype.destroy = function()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tthis.graph.removeMouseListener(this);\n\t\tmxCellMarker.prototype.destroy.apply(this);\n\t}\n};\n\n__mxOutput.mxCellTracker = typeof mxCellTracker !== 'undefined' ? mxCellTracker : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCellHighlight\n * \n * A helper class to highlight cells. Here is an example for a given cell.\n * \n * (code)\n * var highlight = new mxCellHighlight(graph, '#ff0000', 2);\n * highlight.highlight(graph.view.getState(cell)));\n * (end)\n * \n * Constructor: mxCellHighlight\n * \n * Constructs a cell highlight.\n */\nfunction mxCellHighlight(graph, highlightColor, strokeWidth, dashed)\n{\n\tif (graph != null)\n\t{\n\t\tthis.graph = graph;\n\t\tthis.highlightColor = (highlightColor != null) ? highlightColor : mxConstants.DEFAULT_VALID_COLOR;\n\t\tthis.strokeWidth = (strokeWidth != null) ? strokeWidth : mxConstants.HIGHLIGHT_STROKEWIDTH;\n\t\tthis.dashed = (dashed != null) ? dashed : false;\n\t\tthis.opacity = mxConstants.HIGHLIGHT_OPACITY;\n\n\t\t// Updates the marker if the graph changes\n\t\tthis.repaintHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Updates reference to state\n\t\t\tif (this.state != null)\n\t\t\t{\n\t\t\t\tvar tmp = this.graph.view.getState(this.state.cell);\n\t\t\t\t\n\t\t\t\tif (tmp == null)\n\t\t\t\t{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.state = tmp;\n\t\t\t\t\tthis.repaint();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.SCALE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getView().addListener(mxEvent.SCALE_AND_TRANSLATE, this.repaintHandler);\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, this.repaintHandler);\n\t\t\n\t\t// Hides the marker if the current root changes\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.hide();\n\t\t});\n\n\t\tthis.graph.getView().addListener(mxEvent.DOWN, this.resetHandler);\n\t\tthis.graph.getView().addListener(mxEvent.UP, this.resetHandler);\n\t}\n};\n\n/**\n * Variable: keepOnTop\n * \n * Specifies if the highlights should appear on top of everything\n * else in the overlay pane. Default is false.\n */\nmxCellHighlight.prototype.keepOnTop = false;\n\n/**\n * Variable: graph\n * \n * Reference to the enclosing <mxGraph>.\n */\nmxCellHighlight.prototype.graph = true;\n\n/**\n * Variable: state\n * \n * Reference to the <mxCellState>.\n */\nmxCellHighlight.prototype.state = null;\n\n/**\n * Variable: spacing\n * \n * Specifies the spacing between the highlight for vertices and the vertex.\n * Default is 2.\n */\nmxCellHighlight.prototype.spacing = 2;\n\n/**\n * Variable: resetHandler\n * \n * Holds the handler that automatically invokes reset if the highlight\n * should be hidden.\n */\nmxCellHighlight.prototype.resetHandler = null;\n\n/**\n * Function: setHighlightColor\n * \n * Sets the color of the rectangle used to highlight drop targets.\n * \n * Parameters:\n * \n * color - String that represents the new highlight color.\n */\nmxCellHighlight.prototype.setHighlightColor = function(color)\n{\n\tthis.highlightColor = color;\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.stroke = color;\n\t}\n};\n\n/**\n * Function: drawHighlight\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.drawHighlight = function()\n{\n\tthis.shape = this.createShape();\n\tthis.repaint();\n\n\tif (!this.keepOnTop && this.shape.node.parentNode.firstChild != this.shape.node)\n\t{\n\t\tthis.shape.node.parentNode.insertBefore(this.shape.node, this.shape.node.parentNode.firstChild);\n\t}\n};\n\n/**\n * Function: createShape\n * \n * Creates and returns the highlight shape for the given state.\n */\nmxCellHighlight.prototype.createShape = function()\n{\n\tvar shape = this.graph.cellRenderer.createShape(this.state);\n\t\n\tshape.svgStrokeTolerance = this.graph.tolerance;\n\tshape.points = this.state.absolutePoints;\n\tshape.apply(this.state);\n\tshape.stroke = this.highlightColor;\n\tshape.opacity = this.opacity;\n\tshape.isDashed = this.dashed;\n\tshape.isShadow = false;\n\t\n\tshape.dialect = (this.graph.dialect != mxConstants.DIALECT_SVG) ? mxConstants.DIALECT_VML : mxConstants.DIALECT_SVG;\n\tshape.init(this.graph.getView().getOverlayPane());\n\tmxEvent.redirectMouseEvents(shape.node, this.graph, this.state);\n\t\n\tif (this.graph.dialect != mxConstants.DIALECT_SVG)\n\t{\n\t\tshape.pointerEvents = false;\n\t}\n\telse\n\t{\n\t\tshape.svgPointerEvents = 'stroke';\n\t}\n\t\n\treturn shape;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.getStrokeWidth = function(state)\n{\n\treturn this.strokeWidth;\n};\n\n/**\n * Function: repaint\n * \n * Updates the highlight after a change of the model or view.\n */\nmxCellHighlight.prototype.repaint = function()\n{\n\tif (this.state != null && this.shape != null)\n\t{\n\t\tthis.shape.scale = this.state.view.scale;\n\t\t\n\t\tif (this.graph.model.isEdge(this.state.cell))\n\t\t{\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth();\n\t\t\tthis.shape.points = this.state.absolutePoints;\n\t\t\tthis.shape.outline = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.shape.bounds = new mxRectangle(this.state.x - this.spacing, this.state.y - this.spacing,\n\t\t\t\t\tthis.state.width + 2 * this.spacing, this.state.height + 2 * this.spacing);\n\t\t\tthis.shape.rotation = Number(this.state.style[mxConstants.STYLE_ROTATION] || '0');\n\t\t\tthis.shape.strokewidth = this.getStrokeWidth() / this.state.view.scale;\n\t\t\tthis.shape.outline = true;\n\t\t}\n\n\t\t// Uses cursor from shape in highlight\n\t\tif (this.state.shape != null)\n\t\t{\n\t\t\tthis.shape.setCursor(this.state.shape.getCursor());\n\t\t}\n\t\t\n\t\t// Workaround for event transparency in VML with transparent color\n\t\t// is to use a non-transparent color with near zero opacity\n\t\tif (mxClient.IS_QUIRKS || document.documentMode == 8)\n\t\t{\n\t\t\tif (this.shape.stroke == 'transparent')\n\t\t\t{\n\t\t\t\t// KNOWN: Quirks mode does not seem to catch events if\n\t\t\t\t// we do not force an update of the DOM via a change such\n\t\t\t\t// as mxLog.debug. Since IE6 is EOL we do not add a fix.\n\t\t\t\tthis.shape.stroke = 'white';\n\t\t\t\tthis.shape.opacity = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.shape.opacity = this.opacity;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.shape.redraw();\n\t}\n};\n\n/**\n * Function: hide\n * \n * Resets the state of the cell marker.\n */\nmxCellHighlight.prototype.hide = function()\n{\n\tthis.highlight(null);\n};\n\n/**\n * Function: mark\n * \n * Marks the <markedState> and fires a <mark> event.\n */\nmxCellHighlight.prototype.highlight = function(state)\n{\n\tif (this.state != state)\n\t{\n\t\tif (this.shape != null)\n\t\t{\n\t\t\tthis.shape.destroy();\n\t\t\tthis.shape = null;\n\t\t}\n\n\t\tthis.state = state;\n\t\t\n\t\tif (this.state != null)\n\t\t{\n\t\t\tthis.drawHighlight();\n\t\t}\n\t}\n};\n\n/**\n * Function: isHighlightAt\n * \n * Returns true if this highlight is at the given position.\n */\nmxCellHighlight.prototype.isHighlightAt = function(x, y)\n{\n\tvar hit = false;\n\t\n\t// Quirks mode is currently not supported as it used a different coordinate system\n\tif (this.shape != null && document.elementFromPoint != null && !mxClient.IS_QUIRKS)\n\t{\n\t\tvar elt = document.elementFromPoint(x, y);\n\n\t\twhile (elt != null)\n\t\t{\n\t\t\tif (elt == this.shape.node)\n\t\t\t{\n\t\t\t\thit = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\telt = elt.parentNode;\n\t\t}\n\t}\n\t\n\treturn hit;\n};\n\n/**\n * Function: destroy\n * \n * Destroys the handler and all its resources and DOM nodes.\n */\nmxCellHighlight.prototype.destroy = function()\n{\n\tthis.graph.getView().removeListener(this.resetHandler);\n\tthis.graph.getView().removeListener(this.repaintHandler);\n\tthis.graph.getModel().removeListener(this.repaintHandler);\n\t\n\tif (this.shape != null)\n\t{\n\t\tthis.shape.destroy();\n\t\tthis.shape = null;\n\t}\n};\n\n__mxOutput.mxCellHighlight = typeof mxCellHighlight !== 'undefined' ? mxCellHighlight : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultKeyHandler\n *\n * Binds keycodes to actionnames in an editor. This aggregates an internal\n * <handler> and extends the implementation of <mxKeyHandler.escape> to not\n * only cancel the editing, but also hide the properties dialog and fire an\n * <mxEditor.escape> event via <editor>. An instance of this class is created\n * by <mxEditor> and stored in <mxEditor.keyHandler>.\n * \n * Example:\n * \n * Bind the delete key to the delete action in an existing editor.\n * \n * (code)\n * var keyHandler = new mxDefaultKeyHandler(editor);\n * keyHandler.bindAction(46, 'delete');\n * (end)\n *\n * Codec:\n * \n * This class uses the <mxDefaultKeyHandlerCodec> to read configuration\n * data into an existing instance. See <mxDefaultKeyHandlerCodec> for a\n * description of the configuration format.\n * \n * Keycodes:\n * \n * See <mxKeyHandler>.\n * \n * An <mxEvent.ESCAPE> event is fired via the editor if the escape key is\n * pressed.\n * \n * Constructor: mxDefaultKeyHandler\n *\n * Constructs a new default key handler for the <mxEditor.graph> in the\n * given <mxEditor>. (The editor may be null if a prototypical instance for\n * a <mxDefaultKeyHandlerCodec> is created.)\n * \n * Parameters:\n * \n * editor - Reference to the enclosing <mxEditor>.\n */\nfunction mxDefaultKeyHandler(editor)\n{\n\tif (editor != null)\n\t{\n\t\tthis.editor = editor;\n\t\tthis.handler = new mxKeyHandler(editor.graph);\n\t\t\n\t\t// Extends the escape function of the internal key\n\t\t// handle to hide the properties dialog and fire\n\t\t// the escape event via the editor instance\n\t\tvar old = this.handler.escape;\n\t\t\n\t\tthis.handler.escape = function(evt)\n\t\t{\n\t\t\told.apply(this, arguments);\n\t\t\teditor.hideProperties();\n\t\t\teditor.fireEvent(new mxEventObject(mxEvent.ESCAPE, 'event', evt));\n\t\t};\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.editor = null;\n\n/**\n * Variable: handler\n *\n * Holds the <mxKeyHandler> for key event handling.\n */\nmxDefaultKeyHandler.prototype.handler = null;\n\n/**\n * Function: bindAction\n *\n * Binds the specified keycode to the given action in <editor>. The\n * optional control flag specifies if the control key must be pressed\n * to trigger the action.\n *\n * Parameters:\n *\n * code - Integer that specifies the keycode.\n * action - Name of the action to execute in <editor>.\n * control - Optional boolean that specifies if control must be pressed.\n * Default is false.\n */\nmxDefaultKeyHandler.prototype.bindAction = function (code, action, control)\n{\n\tvar keyHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\n\t// Binds the function to control-down keycode\n\tif (control)\n\t{\n\t\tthis.handler.bindControlKey(code, keyHandler);\n\t}\n\n\t// Binds the function to the normal keycode\n\telse\n\t{\n\t\tthis.handler.bindKey(code, keyHandler);\t\t\t\t\n\t}\n};\n\n/**\n * Function: destroy\n *\n * Destroys the <handler> associated with this object. This does normally\n * not need to be called, the <handler> is destroyed automatically when the\n * window unloads (in IE) by <mxEditor>.\n */\nmxDefaultKeyHandler.prototype.destroy = function ()\n{\n\tthis.handler.destroy();\n\tthis.handler = null;\n};\n\n__mxOutput.mxDefaultKeyHandler = typeof mxDefaultKeyHandler !== 'undefined' ? mxDefaultKeyHandler : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultPopupMenu\n *\n * Creates popupmenus for mouse events. This object holds an XML node\n * which is a description of the popup menu to be created. In\n * <createMenu>, the configuration is applied to the context and\n * the resulting menu items are added to the menu dynamically. See\n * <createMenu> for a description of the configuration format.\n * \n * This class does not create the DOM nodes required for the popup menu, it\n * only parses an XML description to invoke the respective methods on an\n * <mxPopupMenu> each time the menu is displayed.\n *\n * Codec:\n * \n * This class uses the <mxDefaultPopupMenuCodec> to read configuration\n * data into an existing instance, however, the actual parsing is done\n * by this class during program execution, so the format is described\n * below.\n * \n * Constructor: mxDefaultPopupMenu\n *\n * Constructs a new popupmenu-factory based on given configuration.\n *\n * Paramaters:\n *\n * config - XML node that contains the configuration data.\n */\nfunction mxDefaultPopupMenu(config)\n{\n\tthis.config = config;\n};\n\n/**\n * Variable: imageBasePath\n *\n * Base path for all icon attributes in the config. Default is null.\n */\nmxDefaultPopupMenu.prototype.imageBasePath = null;\n\n/**\n * Variable: config\n *\n * XML node used as the description of new menu items. This node is\n * used in <createMenu> to dynamically create the menu items if their\n * respective conditions evaluate to true for the given arguments.\n */\nmxDefaultPopupMenu.prototype.config = null;\n\n/**\n * Function: createMenu\n *\n * This function is called from <mxEditor> to add items to the\n * given menu based on <config>. The config is a sequence of\n * the following nodes and attributes.\n *\n * Child Nodes: \n *\n * add - Adds a new menu item. See below for attributes.\n * separator - Adds a separator. No attributes.\n * condition - Adds a custom condition. Name attribute.\n * \n * The add-node may have a child node that defines a function to be invoked\n * before the action is executed (or instead of an action to be executed).\n *\n * Attributes:\n *\n * as - Resource key for the label (needs entry in property file).\n * action - Name of the action to execute in enclosing editor.\n * icon - Optional icon (relative/absolute URL).\n * iconCls - Optional CSS class for the icon.\n * if - Optional name of condition that must be true (see below).\n * enabled-if - Optional name of condition that specifies if the menu item\n * should be enabled.\n * name - Name of custom condition. Only for condition nodes.\n *\n * Conditions:\n *\n * nocell - No cell under the mouse.\n * ncells - More than one cell selected.\n * notRoot - Drilling position is other than home.\n * cell - Cell under the mouse.\n * notEmpty - Exactly one cell with children under mouse.\n * expandable - Exactly one expandable cell under mouse.\n * collapsable - Exactly one collapsable cell under mouse.\n * validRoot - Exactly one cell which is a possible root under mouse.\n * swimlane - Exactly one cell which is a swimlane under mouse.\n *\n * Example:\n *\n * To add a new item for a given action to the popupmenu:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"delete\" action=\"delete\" icon=\"images/delete.gif\" if=\"cell\"/>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * To add a new item for a custom function:\n * \n * (code)\n * <mxDefaultPopupMenu as=\"popupHandler\">\n *   <add as=\"action1\"><![CDATA[\n *\t\tfunction (editor, cell, evt)\n *\t\t{\n *\t\t\teditor.execute('action1', cell, 'myArg');\n *\t\t}\n *   ]]></add>\n * </mxDefaultPopupMenu>\n * (end)\n * \n * The above example invokes action1 with an additional third argument via\n * the editor instance. The third argument is passed to the function that\n * defines action1. If the add-node has no action-attribute, then only the\n * function defined in the text content is executed, otherwise first the\n * function and then the action defined in the action-attribute is\n * executed. The function in the text content has 3 arguments, namely the\n * <mxEditor> instance, the <mxCell> instance under the mouse, and the\n * native mouse event.\n *\n * Custom Conditions:\n *\n * To add a new condition for popupmenu items:\n *  \n * (code)\n * <condition name=\"condition1\"><![CDATA[\n *   function (editor, cell, evt)\n *   {\n *     return cell != null;\n *   }\n * ]]></condition>\n * (end)\n * \n * The new condition can then be used in any item as follows:\n * \n * (code)\n * <add as=\"action1\" action=\"action1\" icon=\"action1.gif\" if=\"condition1\"/>\n * (end)\n * \n * The order in which the items and conditions appear is not significant as\n * all connditions are evaluated before any items are created.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu. \n */\nmxDefaultPopupMenu.prototype.createMenu = function(editor, menu, cell, evt)\n{\n\tif (this.config != null)\n\t{\n\t\tvar conditions = this.createConditions(editor, cell, evt);\n\t\tvar item = this.config.firstChild;\n\n\t\tthis.addItems(editor, menu, cell, evt, conditions, item, null);\n\t}\n};\n\n/**\n * Function: addItems\n * \n * Recursively adds the given items and all of its children into the given menu.\n * \n * Parameters:\n *\n * editor - Enclosing <mxEditor> instance.\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * cell - Optional <mxCell> which is under the mousepointer.\n * evt - Optional mouse event which triggered the menu.\n * conditions - Array of names boolean conditions.\n * item - XML node that represents the current menu item.\n * parent - DOM node that represents the parent menu item.\n */\nmxDefaultPopupMenu.prototype.addItems = function(editor, menu, cell, evt, conditions, item, parent)\n{\n\tvar addSeparator = false;\n\t\n\twhile (item != null)\n\t{\n\t\tif (item.nodeName == 'add')\n\t\t{\n\t\t\tvar condition = item.getAttribute('if');\n\t\t\t\n\t\t\tif (condition == null || conditions[condition])\n\t\t\t{\n\t\t\t\tvar as = item.getAttribute('as');\n\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(item));\n\t\t\t\tvar action = item.getAttribute('action');\n\t\t\t\tvar icon = item.getAttribute('icon');\n\t\t\t\tvar iconCls = item.getAttribute('iconCls');\n\t\t\t\tvar enabledCond = item.getAttribute('enabled-if');\n\t\t\t\tvar enabled = enabledCond == null || conditions[enabledCond];\n\t\t\t\t\n\t\t\t\tif (addSeparator)\n\t\t\t\t{\n\t\t\t\t\tmenu.addSeparator(parent);\n\t\t\t\t\taddSeparator = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (icon != null && this.imageBasePath)\n\t\t\t\t{\n\t\t\t\t\ticon = this.imageBasePath + icon;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar row = this.addAction(menu, editor, as, icon, funct, action, cell, parent, iconCls, enabled);\n\t\t\t\tthis.addItems(editor, menu, cell, evt, conditions, item.firstChild, row);\n\t\t\t}\n\t\t}\n\t\telse if (item.nodeName == 'separator')\n\t\t{\n\t\t\taddSeparator = true;\n\t\t}\n\t\t\n\t\titem = item.nextSibling;\n\t}\n};\n\n/**\n * Function: addAction\n *\n * Helper method to bind an action to a new menu item.\n * \n * Parameters:\n *\n * menu - <mxPopupMenu> that is used for adding items and separators.\n * editor - Enclosing <mxEditor> instance.\n * lab - String that represents the label of the menu item.\n * icon - Optional URL that represents the icon of the menu item.\n * action - Optional name of the action to execute in the given editor.\n * funct - Optional function to execute before the optional action. The\n * function takes an <mxEditor>, the <mxCell> under the mouse and the\n * mouse event that triggered the call.\n * cell - Optional <mxCell> to use as an argument for the action.\n * parent - DOM node that represents the parent menu item.\n * iconCls - Optional CSS class for the menu icon.\n * enabled - Optional boolean that specifies if the menu item is enabled.\n * Default is true.\n */\nmxDefaultPopupMenu.prototype.addAction = function(menu, editor, lab, icon, funct, action, cell, parent, iconCls, enabled)\n{\n\tvar clickHandler = function(evt)\n\t{\n\t\tif (typeof(funct) == 'function')\n\t\t{\n\t\t\tfunct.call(editor, editor, cell, evt);\n\t\t}\n\t\t\n\t\tif (action != null)\n\t\t{\n\t\t\teditor.execute(action, cell, evt);\n\t\t}\n\t};\n\t\n\treturn menu.addItem(lab, icon, clickHandler, parent, iconCls, enabled);\n};\n\n/**\n * Function: createConditions\n * \n * Evaluates the default conditions for the given context.\n */\nmxDefaultPopupMenu.prototype.createConditions = function(editor, cell, evt)\n{\n\t// Creates array with conditions\n\tvar model = editor.graph.getModel();\n\tvar childCount = model.getChildCount(cell);\n\t\n\t// Adds some frequently used conditions\n\tvar conditions = [];\n\tconditions['nocell'] = cell == null;\n\tconditions['ncells'] = editor.graph.getSelectionCount() > 1;\n\tconditions['notRoot'] = model.getRoot() !=\n\t\tmodel.getParent(editor.graph.getDefaultParent());\n\tconditions['cell'] = cell != null;\n\t\n\tvar isCell = cell != null && editor.graph.getSelectionCount() == 1;\n\tconditions['nonEmpty'] = isCell && childCount > 0;\n\tconditions['expandable'] = isCell && editor.graph.isCellFoldable(cell, false);\n\tconditions['collapsable'] = isCell && editor.graph.isCellFoldable(cell, true);\n\tconditions['validRoot'] = isCell && editor.graph.isValidRoot(cell);\n\tconditions['emptyValidRoot'] = conditions['validRoot'] && childCount == 0;\n\tconditions['swimlane'] = isCell && editor.graph.isSwimlane(cell);\n\n\t// Evaluates dynamic conditions from config file\n\tvar condNodes = this.config.getElementsByTagName('condition');\n\t\n\tfor (var i=0; i<condNodes.length; i++)\n\t{\n\t\tvar funct = mxUtils.eval(mxUtils.getTextContent(condNodes[i]));\n\t\tvar name = condNodes[i].getAttribute('name');\n\t\t\n\t\tif (name != null && typeof(funct) == 'function')\n\t\t{\n\t\t\tconditions[name] = funct(editor, cell, evt);\n\t\t}\n\t}\n\t\n\treturn conditions;\n};\n\n__mxOutput.mxDefaultPopupMenu = typeof mxDefaultPopupMenu !== 'undefined' ? mxDefaultPopupMenu : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbar\n *\n * Toolbar for the editor. This modifies the state of the graph\n * or inserts new cells upon mouse clicks.\n * \n * Example:\n * \n * Create a toolbar with a button to copy the selection into the clipboard,\n * and a combo box with one action to paste the selection from the clipboard\n * into the graph.\n * \n * (code)\n * var toolbar = new mxDefaultToolbar(container, editor);\n * toolbar.addItem('Copy', null, 'copy');\n * \n * var combo = toolbar.addActionCombo('More actions...');\n * toolbar.addActionOption(combo, 'Paste', 'paste');\n * (end) \n *\n * Codec:\n * \n * This class uses the <mxDefaultToolbarCodec> to read configuration\n * data into an existing instance. See <mxDefaultToolbarCodec> for a\n * description of the configuration format.\n * \n * Constructor: mxDefaultToolbar\n *\n * Constructs a new toolbar for the given container and editor. The\n * container and editor may be null if a prototypical instance for a\n * <mxDefaultKeyHandlerCodec> is created.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n * editor - Reference to the enclosing <mxEditor>. \n */\nfunction mxDefaultToolbar(container, editor)\n{\n\tthis.editor = editor;\n\n\tif (container != null && editor != null)\n\t{\n\t\tthis.init(container);\n\t}\n};\n\t\n/**\n * Variable: editor\n *\n * Reference to the enclosing <mxEditor>.\n */\nmxDefaultToolbar.prototype.editor = null;\n\n/**\n * Variable: toolbar\n *\n * Holds the internal <mxToolbar>.\n */\nmxDefaultToolbar.prototype.toolbar = null;\n\n/**\n * Variable: resetHandler\n *\n * Reference to the function used to reset the <toolbar>.\n */\nmxDefaultToolbar.prototype.resetHandler = null;\n\n/**\n * Variable: spacing\n *\n * Defines the spacing between existing and new vertices in\n * gridSize units when a new vertex is dropped on an existing\n * cell. Default is 4 (40 pixels).\n */\nmxDefaultToolbar.prototype.spacing = 4;\n\n/**\n * Variable: connectOnDrop\n * \n * Specifies if elements should be connected if new cells are dropped onto\n * connectable elements. Default is false.\n */\nmxDefaultToolbar.prototype.connectOnDrop = false;\n\n/**\n * Function: init\n * \n * Constructs the <toolbar> for the given container and installs a listener\n * that updates the <mxEditor.insertFunction> on <editor> if an item is\n * selected in the toolbar. This assumes that <editor> is not null.\n *\n * Parameters:\n *\n * container - DOM node that contains the toolbar.\n */\nmxDefaultToolbar.prototype.init = function(container)\n{\n\tif (container != null)\n\t{\n\t\tthis.toolbar = new mxToolbar(container);\n\t\t\n\t\t// Installs the insert function in the editor if an item is\n\t\t// selected in the toolbar\n\t\tthis.toolbar.addListener(mxEvent.SELECT, mxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar funct = evt.getProperty('function');\n\t\t\t\n\t\t\tif (funct != null)\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = mxUtils.bind(this, function()\n\t\t\t\t{\n\t\t\t\t\tfunct.apply(this, arguments);\n\t\t\t\t\tthis.toolbar.resetMode();\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.editor.insertFunction = null;\n\t\t\t}\n\t\t}));\n\t\t\n\t\t// Resets the selected tool after a doubleclick or escape keystroke\n\t\tthis.resetHandler = mxUtils.bind(this, function()\n\t\t{\n\t\t\tif (this.toolbar != null)\n\t\t\t{\n\t\t\t\tthis.toolbar.resetMode(true);\n\t\t\t}\n\t\t});\n\n\t\tthis.editor.graph.addListener(mxEvent.DOUBLE_CLICK, this.resetHandler);\n\t\tthis.editor.addListener(mxEvent.ESCAPE, this.resetHandler);\n\t}\n};\n\n/**\n * Function: addItem\n *\n * Adds a new item that executes the given action in <editor>. The title,\n * icon and pressedIcon are used to display the toolbar item.\n * \n * Parameters:\n *\n * title - String that represents the title (tooltip) for the item.\n * icon - URL of the icon to be used for displaying the item.\n * action - Name of the action to execute when the item is clicked.\n * pressed - Optional URL of the icon for the pressed state.\n */\nmxDefaultToolbar.prototype.addItem = function(title, icon, action, pressed)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tif (action != null && action.length > 0)\n\t\t{\n\t\t\tthis.editor.execute(action);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addItem(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addSeparator\n *\n * Adds a vertical separator using the optional icon.\n * \n * Parameters:\n * \n * icon - Optional URL of the icon that represents the vertical separator.\n * Default is <mxClient.imageBasePath> + '/separator.gif'.\n */\nmxDefaultToolbar.prototype.addSeparator = function(icon)\n{\n\ticon = icon || mxClient.imageBasePath + '/separator.gif';\n\tthis.toolbar.addSeparator(icon);\n};\n\t\n/**\n * Function: addCombo\n *\n * Helper method to invoke <mxToolbar.addCombo> on <toolbar> and return the\n * resulting DOM node.\n */\nmxDefaultToolbar.prototype.addCombo = function()\n{\n\treturn this.toolbar.addCombo();\n};\n\t\t\n/**\n * Function: addActionCombo\n *\n * Helper method to invoke <mxToolbar.addActionCombo> on <toolbar> using\n * the given title and return the resulting DOM node.\n * \n * Parameters:\n * \n * title - String that represents the title of the combo.\n */\nmxDefaultToolbar.prototype.addActionCombo = function(title)\n{\n\treturn this.toolbar.addActionCombo(title);\n};\n\n/**\n * Function: addActionOption\n *\n * Binds the given action to a option with the specified label in the\n * given combo. Combo is an object returned from an earlier call to\n * <addCombo> or <addActionCombo>.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * action - Name of the action to execute in <editor>.\n */\nmxDefaultToolbar.prototype.addActionOption = function(combo, title, action)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.execute(action);\n\t});\n\t\n\tthis.addOption(combo, title, clickHandler);\n};\n\n/**\n * Function: addOption\n *\n * Helper method to invoke <mxToolbar.addOption> on <toolbar> and return\n * the resulting DOM node that represents the option.\n * \n * Parameters:\n * \n * combo - DOM node that represents the combo box.\n * title - String that represents the title of the combo.\n * value - Object that represents the value of the option.\n */\nmxDefaultToolbar.prototype.addOption = function(combo, title, value)\n{\n\treturn this.toolbar.addOption(combo, title, value);\n};\n\t\n/**\n * Function: addMode\n *\n * Creates an item for selecting the given mode in the <editor>'s graph.\n * Supported modenames are select, connect and pan.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * mode - String that represents the mode name to be used in\n * <mxEditor.setMode>.\n * pressed - Optional URL of the icon that represents the pressed state.\n * funct - Optional JavaScript function that takes the <mxEditor> as the\n * first and only argument that is executed after the mode has been\n * selected.\n */\nmxDefaultToolbar.prototype.addMode = function(title, icon, mode, pressed, funct)\n{\n\tvar clickHandler = mxUtils.bind(this, function()\n\t{\n\t\tthis.editor.setMode(mode);\n\t\t\n\t\tif (funct != null)\n\t\t{\n\t\t\tfunct(this.editor);\n\t\t}\n\t});\n\t\n\treturn this.toolbar.addSwitchMode(title, icon, clickHandler, pressed);\n};\n\n/**\n * Function: addPrototype\n *\n * Creates an item for inserting a clone of the specified prototype cell into\n * the <editor>'s graph. The ptype may either be a cell or a function that\n * returns a cell.\n * \n * Parameters:\n * \n * title - String that represents the title of the item.\n * icon - URL of the icon that represents the item.\n * ptype - Function or object that represents the prototype cell. If ptype\n * is a function then it is invoked with no arguments to create new\n * instances.\n * pressed - Optional URL of the icon that represents the pressed state.\n * insert - Optional JavaScript function that handles an insert of the new\n * cell. This function takes the <mxEditor>, new cell to be inserted, mouse\n * event and optional <mxCell> under the mouse pointer as arguments.\n * toggle - Optional boolean that specifies if the item can be toggled.\n * Default is true.\n */\nmxDefaultToolbar.prototype.addPrototype = function(title, icon, ptype, pressed, insert, toggle)\n{\n\t// Creates a wrapper function that is in charge of constructing\n\t// the new cell instance to be inserted into the graph\n\tvar factory = mxUtils.bind(this, function()\n\t{\n\t\tif (typeof(ptype) == 'function')\n\t\t{\n\t\t\treturn ptype();\n\t\t}\n\t\telse if (ptype != null)\n\t\t{\n\t\t\treturn this.editor.graph.cloneCell(ptype);\n\t\t}\n\t\t\n\t\treturn null;\n\t});\n\t\n\t// Defines the function for a click event on the graph\n\t// after this item has been selected in the toolbar\n\tvar clickHandler = mxUtils.bind(this, function(evt, cell)\n\t{\n\t\tif (typeof(insert) == 'function')\n\t\t{\n\t\t\tinsert(this.editor, factory(), evt, cell);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.drop(factory(), evt, cell);\n\t\t}\n\t\t\n\t\tthis.toolbar.resetMode();\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tvar img = this.toolbar.addMode(title, icon, clickHandler, pressed, null, toggle);\n\t\t\t\t\n\t// Creates a wrapper function that calls the click handler without\n\t// the graph argument\n\tvar dropHandler = function(graph, evt, cell)\n\t{\n\t\tclickHandler(evt, cell);\n\t};\n\t\n\tthis.installDropHandler(img, dropHandler);\n\t\n\treturn img;\n};\n\n/**\n * Function: drop\n * \n * Handles a drop from a toolbar item to the graph. The given vertex\n * represents the new cell to be inserted. This invokes <insert> or\n * <connect> depending on the given target cell.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * target - Optional <mxCell> that represents the drop target.\n */\nmxDefaultToolbar.prototype.drop = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (target == null ||\n\t\tmodel.isEdge(target) ||\n\t\t!this.connectOnDrop ||\n\t\t!graph.isCellConnectable(target))\n\t{\n\t\twhile (target != null &&\n\t\t\t!graph.isValidDropTarget(target, [vertex], evt))\n\t\t{\n\t\t\ttarget = model.getParent(target);\n\t\t}\n\t\t\n\t\tthis.insert(vertex, evt, target);\n\t}\n\telse\n\t{\n\t\tthis.connect(vertex, evt, target);\n\t}\n};\n\n/**\n * Function: insert\n *\n * Handles a drop by inserting the given vertex into the given parent cell\n * or the default parent if no parent is specified.\n * \n * Parameters:\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * parent - Optional <mxCell> that represents the parent.\n */\nmxDefaultToolbar.prototype.insert = function(vertex, evt, target)\n{\n\tvar graph = this.editor.graph;\n\t\n\tif (graph.canImportCell(vertex))\n\t{\n\t\tvar x = mxEvent.getClientX(evt);\n\t\tvar y = mxEvent.getClientY(evt);\n\t\tvar pt = mxUtils.convertPoint(graph.container, x, y);\n\t\t\n\t\t// Splits the target edge or inserts into target group\n\t\tif (graph.isSplitEnabled() &&\n\t\t\tgraph.isSplitTarget(target, [vertex], evt))\n\t\t{\n\t\t\treturn graph.splitEdge(target, [vertex], null, pt.x, pt.y);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.editor.addVertex(target, vertex, pt.x, pt.y);\n\t\t}\n\t}\n\t\n\treturn null;\n};\n\n/**\n * Function: connect\n * \n * Handles a drop by connecting the given vertex to the given source cell.\n * \n * vertex - <mxCell> to be inserted.\n * evt - Mouse event that represents the drop.\n * source - Optional <mxCell> that represents the source terminal.\n */\nmxDefaultToolbar.prototype.connect = function(vertex, evt, source)\n{\n\tvar graph = this.editor.graph;\n\tvar model = graph.getModel();\n\t\n\tif (source != null &&\n\t\tgraph.isCellConnectable(vertex) &&\n\t\tgraph.isEdgeValid(null, source, vertex))\n\t{\n\t\tvar edge = null;\n\n\t\tmodel.beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tvar geo = model.getGeometry(source);\n\t\t\tvar g = model.getGeometry(vertex).clone();\n\t\t\t\n\t\t\t// Moves the vertex away from the drop target that will\n\t\t\t// be used as the source for the new connection\n\t\t\tg.x = geo.x + (geo.width - g.width) / 2;\n\t\t\tg.y = geo.y + (geo.height - g.height) / 2;\n\t\t\t\n\t\t\tvar step = this.spacing * graph.gridSize;\n\t\t\tvar dist = model.getDirectedEdgeCount(source, true) * 20;\n\t\t\t\n\t\t\tif (this.editor.horizontalFlow)\n\t\t\t{\n\t\t\t\tg.x += (g.width + geo.width) / 2 + step + dist;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tg.y += (g.height + geo.height) / 2 + step + dist;\n\t\t\t}\n\t\t\t\n\t\t\tvertex.setGeometry(g);\n\t\t\t\n\t\t\t// Fires two add-events with the code below - should be fixed\n\t\t\t// to only fire one add event for both inserts\n\t\t\tvar parent = model.getParent(source);\n\t\t\tgraph.addCell(vertex, parent);\n\t\t\tgraph.constrainChild(vertex);\n\n\t\t\t// Creates the edge using the editor instance and calls\n\t\t\t// the second function that fires an add event\n\t\t\tedge = this.editor.createEdge(source, vertex);\n\t\t\t\n\t\t\tif (model.getGeometry(edge) == null)\n\t\t\t{\n\t\t\t\tvar edgeGeometry = new mxGeometry();\n\t\t\t\tedgeGeometry.relative = true;\n\t\t\t\t\n\t\t\t\tmodel.setGeometry(edge, edgeGeometry);\n\t\t\t}\n\t\t\t\n\t\t\tgraph.addEdge(edge, parent, source, vertex);\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tmodel.endUpdate();\n\t\t}\n\t\t\n\t\tgraph.setSelectionCells([vertex, edge]);\n\t\tgraph.scrollCellToVisible(vertex);\n\t}\n};\n\n/**\n * Function: installDropHandler\n * \n * Makes the given img draggable using the given function for handling a\n * drop event.\n * \n * Parameters:\n * \n * img - DOM node that represents the image.\n * dropHandler - Function that handles a drop of the image.\n */\nmxDefaultToolbar.prototype.installDropHandler = function (img, dropHandler)\n{\n\tvar sprite = document.createElement('img');\n\tsprite.setAttribute('src', img.getAttribute('src'));\n\n\t// Handles delayed loading of the images\n\tvar loader = mxUtils.bind(this, function(evt)\n\t{\n\t\t// Preview uses the image node with double size. Later this can be\n\t\t// changed to use a separate preview and guides, but for this the\n\t\t// dropHandler must use the additional x- and y-arguments and the\n\t\t// dragsource which makeDraggable returns much be configured to\n\t\t// use guides via mxDragSource.isGuidesEnabled.\n\t\tsprite.style.width = (2 * img.offsetWidth) + 'px';\n\t\tsprite.style.height = (2 * img.offsetHeight) + 'px';\n\n\t\tmxUtils.makeDraggable(img, this.editor.graph, dropHandler,\n\t\t\tsprite);\n\t\tmxEvent.removeListener(sprite, 'load', loader);\n\t});\n\n\tif (mxClient.IS_IE)\n\t{\n\t\tloader();\n\t}\n\telse\n\t{\n\t\tmxEvent.addListener(sprite, 'load', loader);\n\t}\t\n};\n\n/**\n * Function: destroy\n * \n * Destroys the <toolbar> associated with this object and removes all\n * installed listeners. This does normally not need to be called, the\n * <toolbar> is destroyed automatically when the window unloads (in IE) by\n * <mxEditor>.\n */\nmxDefaultToolbar.prototype.destroy = function ()\n{\n\tif (this.resetHandler != null)\n\t{\n\t\tthis.editor.graph.removeListener('dblclick', this.resetHandler);\n\t\tthis.editor.removeListener('escape', this.resetHandler);\n\t\tthis.resetHandler = null;\n\t}\n\t\n\tif (this.toolbar != null)\n\t{\n\t\tthis.toolbar.destroy();\n\t\tthis.toolbar = null;\n\t}\n};\n\n__mxOutput.mxDefaultToolbar = typeof mxDefaultToolbar !== 'undefined' ? mxDefaultToolbar : undefined;\n\n/**\n * Copyright (c) 2006-2019, JGraph Ltd\n * Copyright (c) 2006-2019, draw.io AG\n */\n/**\n * Class: mxEditor\n *\n * Extends <mxEventSource> to implement a application wrapper for a graph that\n * adds <actions>, I/O using <mxCodec>, auto-layout using <mxLayoutManager>,\n * command history using <undoManager>, and standard dialogs and widgets, eg.\n * properties, help, outline, toolbar, and popupmenu. It also adds <templates>\n * to be used as cells in toolbars, auto-validation using the <validation>\n * flag, attribute cycling using <cycleAttributeValues>, higher-level events\n * such as <root>, and backend integration using <urlPost> and <urlImage>. \n * \n * Actions:\n * \n * Actions are functions stored in the <actions> array under their names. The\n * functions take the <mxEditor> as the first, and an optional <mxCell> as the\n * second argument and are invoked using <execute>. Any additional arguments\n * passed to execute are passed on to the action as-is.\n * \n * A list of built-in actions is available in the <addActions> description.\n * \n * Read/write Diagrams:\n * \n * To read a diagram from an XML string, for example from a textfield within the \n * page, the following code is used:\n * \n * (code)\n * var doc = mxUtils.parseXML(xmlString);\n * var node = doc.documentElement;\n * editor.readGraphModel(node);\n * (end)\n * \n * For reading a diagram from a remote location, use the <open> method.\n * \n * To save diagrams in XML on a server, you can set the <urlPost> variable. \n * This variable will be used in <getUrlPost> to construct a URL for the post \n * request that is issued in the <save> method. The post request contains the \n * XML representation of the diagram as returned by <writeGraphModel> in the \n * xml parameter.\n * \n * On the server side, the post request is processed using standard\n * technologies such as Java Servlets, CGI, .NET or ASP.\n * \n * Here are some examples of processing a post request in various languages.\n * \n * - Java: URLDecoder.decode(request.getParameter(\"xml\"), \"UTF-8\").replace(\"\\n\", \"&#xa;\")\n * \n * Note that the linefeeds should only be replaced if the XML is\n * processed in Java, for example when creating an image, but not\n * if the XML is passed back to the client-side.\n * \n * - .NET: HttpUtility.UrlDecode(context.Request.Params[\"xml\"])\n * - PHP: urldecode($_POST[\"xml\"])\n * \n * Creating images:\n * \n * A backend (Java, PHP or C#) is required for creating images. The\n * distribution contains an example for each backend (ImageHandler.java,\n * ImageHandler.cs and graph.php). More information about using a backend\n * to create images can be found in the readme.html files. Note that the\n * preview is implemented using VML/SVG in the browser and does not require\n * a backend. The backend is only required to creates images (bitmaps).\n * \n * Special characters:\n * \n * Note There are five characters that should always appear in XML content as\n * escapes, so that they do not interact with the syntax of the markup. These\n * are part of the language for all documents based on XML and for HTML.\n * \n * - &lt; (<)\n * - &gt; (>)\n * - &amp; (&)\n * - &quot; (\")\n * - &apos; (')\n * \n * Although it is part of the XML language, &apos; is not defined in HTML.\n * For this reason the XHTML specification recommends instead the use of\n * &#39; if text may be passed to a HTML user agent.\n * \n * If you are having problems with special characters on the server-side then\n * you may want to try the <escapePostData> flag.\n * \n * For converting decimal escape sequences inside strings, a user has provided\n * us with the following function:\n * \n * (code)\n * function html2js(text)\n * {\n *   var entitySearch = /&#[0-9]+;/;\n *   var entity;\n *   \n *   while (entity = entitySearch.exec(text))\n *   {\n *     var charCode = entity[0].substring(2, entity[0].length -1);\n *     text = text.substring(0, entity.index)\n *            + String.fromCharCode(charCode)\n *            + text.substring(entity.index + entity[0].length);\n *   }\n *   \n *   return text;\n * }\n * (end)\n * \n * Otherwise try using hex escape sequences and the built-in unescape function\n * for converting such strings.\n * \n * Local Files:\n * \n * For saving and opening local files, no standardized method exists that\n * works across all browsers. The recommended way of dealing with local files\n * is to create a backend that streams the XML data back to the browser (echo)\n * as an attachment so that a Save-dialog is displayed on the client-side and\n * the file can be saved to the local disk.\n * \n * For example, in PHP the code that does this looks as follows.\n * \n * (code)\n * $xml = stripslashes($_POST[\"xml\"]);\n * header(\"Content-Disposition: attachment; filename=\\\"diagram.xml\\\"\");\n * echo($xml);\n * (end)\n * \n * To open a local file, the file should be uploaded via a form in the browser\n * and then opened from the server in the editor.\n * \n * Cell Properties:\n * \n * The properties displayed in the properties dialog are the attributes and \n * values of the cell's user object, which is an XML node. The XML node is \n * defined in the templates section of the config file.\n * \n * The templates are stored in <mxEditor.templates> and contain cells which\n * are cloned at insertion time to create new vertices by use of drag and\n * drop from the toolbar. Each entry in the toolbar for adding a new vertex\n * must refer to an existing template.\n * \n * In the following example, the task node is a business object and only the \n * mxCell node and its mxGeometry child contain graph information:\n * \n * (code)\n * <Task label=\"Task\" description=\"\">\n *   <mxCell vertex=\"true\">\n *     <mxGeometry as=\"geometry\" width=\"72\" height=\"32\"/>\n *   </mxCell>\n * </Task> \n * (end)\n * \n * The idea is that the XML representation is inverse from the in-memory \n * representation: The outer XML node is the user object and the inner node is \n * the cell. This means the user object of the cell is the Task node with no \n * children for the above example:\n * \n * (code)\n * <Task label=\"Task\" description=\"\"/>\n * (end)\n * \n * The Task node can have any tag name, attributes and child nodes. The \n * <mxCodec> will use the XML hierarchy as the user object, while removing the \n * \"known annotations\", such as the mxCell node. At save-time the cell data \n * will be \"merged\" back into the user object. The user object is only modified \n * via the properties dialog during the lifecycle of the cell.\n * \n * In the default implementation of <createProperties>, the user object's\n * attributes are put into a form for editing. Attributes are changed using\n * the <mxCellAttributeChange> action in the model. The dialog can be replaced \n * by overriding the <createProperties> hook or by replacing the showProperties\n * action in <actions>. Alternatively, the entry in the config file's popupmenu\n * section can be modified to invoke a different action.\n * \n * If you want to displey the properties dialog on a doubleclick, you can set\n * <mxEditor.dblClickAction> to showProperties as follows:\n * \n * (code)\n * editor.dblClickAction = 'showProperties';\n * (end)\n * \n * Popupmenu and Toolbar:\n * \n * The toolbar and popupmenu are typically configured using the respective\n * sections in the config file, that is, the popupmenu is defined as follows:\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultPopupMenu as=\"popupHandler\">\n * \t\t<add as=\"cut\" action=\"cut\" icon=\"images/cut.gif\"/>\n *      ...\n * (end)\n * \n * New entries can be added to the toolbar by inserting an add-node into the\n * above configuration. Existing entries may be removed and changed by\n * modifying or removing the respective entries in the configuration.\n * The configuration is read by the <mxDefaultPopupMenuCodec>, the format of the\n * configuration is explained in <mxDefaultPopupMenu.decode>.\n * \n * The toolbar is defined in the mxDefaultToolbar section. Items can be added\n * and removed in this section.\n * \n * (code)\n * <mxEditor>\n *   <mxDefaultToolbar>\n *     <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n *     <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"/>\n *     ...\n * (end)\n * \n * The format of the configuration is described in\n * <mxDefaultToolbarCodec.decode>.\n * \n * Ids:\n * \n * For the IDs, there is an implicit behaviour in <mxCodec>: It moves the Id\n * from the cell to the user object at encoding time and vice versa at decoding\n * time. For example, if the Task node from above has an id attribute, then\n * the <mxCell.id> of the corresponding cell will have this value. If there\n * is no Id collision in the model, then the cell may be retrieved using this\n * Id with the <mxGraphModel.getCell> function. If there is a collision, a new\n * Id will be created for the cell using <mxGraphModel.createId>. At encoding\n * time, this new Id will replace the value previously stored under the id\n * attribute in the Task node.\n * \n * See <mxEditorCodec>, <mxDefaultToolbarCodec> and <mxDefaultPopupMenuCodec>\n * for information about configuring the editor and user interface.\n * \n * Programmatically inserting cells:\n * \n * For inserting a new cell, say, by clicking a button in the document,\n * the following code can be used. This requires an reference to the editor.\n * \n * (code)\n * var userObject = new Object();\n * var parent = editor.graph.getDefaultParent();\n * var model = editor.graph.model;\n * model.beginUpdate();\n * try\n * {\n *   editor.graph.insertVertex(parent, null, userObject, 20, 20, 80, 30);\n * }\n * finally\n * {\n *   model.endUpdate();\n * }\n * (end)\n * \n * If a template cell from the config file should be inserted, then a clone\n * of the template can be created as follows. The clone is then inserted using\n * the add function instead of addVertex.\n * \n * (code)\n * var template = editor.templates['task'];\n * var clone = editor.graph.model.cloneCell(template);\n * (end)\n * \n * Resources:\n *\n * resources/editor - Language resources for mxEditor\n *\n * Callback: onInit\n *\n * Called from within the constructor. In the callback,\n * \"this\" refers to the editor instance.\n *\n * Cookie: mxgraph=seen\n *\n * Set when the editor is started. Never expires. Use\n * <resetFirstTime> to reset this cookie. This cookie\n * only exists if <onInit> is implemented.\n *\n * Event: mxEvent.OPEN\n *\n * Fires after a file was opened in <open>. The <code>filename</code> property\n * contains the filename that was used. The same value is also available in\n * <filename>.\n *\n * Event: mxEvent.SAVE\n *\n * Fires after the current file was saved in <save>. The <code>url</code>\n * property contains the URL that was used for saving.\n *\n * Event: mxEvent.POST\n * \n * Fires if a successful response was received in <postDiagram>. The\n * <code>request</code> property contains the <mxXmlRequest>, the\n * <code>url</code> and <code>data</code> properties contain the URL and the\n * data that were used in the post request. \n *\n * Event: mxEvent.ROOT\n *\n * Fires when the current root has changed, or when the title of the current\n * root has changed. This event has no properties.\n *\n * Event: mxEvent.BEFORE_ADD_VERTEX\n * \n * Fires before a vertex is added in <addVertex>. The <code>vertex</code>\n * property contains the new vertex and the <code>parent</code> property\n * contains its parent.\n * \n * Event: mxEvent.ADD_VERTEX\n * \n * Fires between begin- and endUpdate in <addVertex>. The <code>vertex</code>\n * property contains the vertex that is being inserted.\n * \n * Event: mxEvent.AFTER_ADD_VERTEX\n * \n * Fires after a vertex was inserted and selected in <addVertex>. The\n * <code>vertex</code> property contains the new vertex.\n * \n * Example:\n * \n * For starting an in-place edit after a new vertex has been added to the\n * graph, the following code can be used.\n * \n * (code)\n * editor.addListener(mxEvent.AFTER_ADD_VERTEX, function(sender, evt)\n * {\n *   var vertex = evt.getProperty('vertex');\n * \n *   if (editor.graph.isCellEditable(vertex))\n *   {\n *   \teditor.graph.startEditingAtCell(vertex);\n *   }\n * });\n * (end)\n * \n * Event: mxEvent.ESCAPE\n * \n * Fires when the escape key is pressed. The <code>event</code> property\n * contains the key event.\n * \n * Constructor: mxEditor\n *\n * Constructs a new editor. This function invokes the <onInit> callback\n * upon completion.\n *\n * Example:\n *\n * (code)\n * var config = mxUtils.load('config/diagrameditor.xml').getDocumentElement();\n * var editor = new mxEditor(config);\n * (end)\n * \n * Parameters:\n * \n * config - Optional XML node that contains the configuration.\n */\nfunction mxEditor(config)\n{\n\tthis.actions = [];\n\tthis.addActions();\n\n\t// Executes the following only if a document has been instanciated.\n\t// That is, don't execute when the editorcodec is setup.\n\tif (document.body != null)\n\t{\n\t\t// Defines instance fields\n\t\tthis.cycleAttributeValues = [];\n\t\tthis.popupHandler = new mxDefaultPopupMenu();\n\t\tthis.undoManager = new mxUndoManager();\n\n\t\t// Creates the graph and toolbar without the containers\n\t\tthis.graph = this.createGraph();\n\t\tthis.toolbar = this.createToolbar();\n\n\t\t// Creates the global keyhandler (requires graph instance)\n\t\tthis.keyHandler = new mxDefaultKeyHandler(this);\n\n\t\t// Configures the editor using the URI\n\t\t// which was passed to the ctor\n\t\tthis.configure(config);\n\t\t\n\t\t// Assigns the swimlaneIndicatorColorAttribute on the graph\n\t\tthis.graph.swimlaneIndicatorColorAttribute = this.cycleAttributeName;\n\n\t\t// Checks if the <onInit> hook has been set\n\t\tif (this.onInit != null)\n\t\t{\n\t\t\t// Invokes the <onInit> hook\n\t\t\tthis.onInit();\n\t\t}\n\t\t\n\t\t// Automatic deallocation of memory\n\t\tif (mxClient.IS_IE)\n\t\t{\n\t\t\tmxEvent.addListener(window, 'unload', mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tthis.destroy();\n\t\t\t}));\n\t\t}\n\t}\n};\n\n/**\n * Installs the required language resources at class\n * loading time.\n */\nif (mxLoadResources)\n{\n\tmxResources.add(mxClient.basePath + '/resources/editor');\n}\nelse\n{\n\tmxClient.defaultBundles.push(mxClient.basePath + '/resources/editor');\n}\n\n/**\n * Extends mxEventSource.\n */\nmxEditor.prototype = new mxEventSource();\nmxEditor.prototype.constructor = mxEditor;\n\n/**\n * Group: Controls and Handlers\n */\n\t\n/**\n * Variable: askZoomResource\n * \n * Specifies the resource key for the zoom dialog. If the resource for this\n * key does not exist then the value is used as the error message. Default\n * is 'askZoom'.\n */\nmxEditor.prototype.askZoomResource = (mxClient.language != 'none') ? 'askZoom' : '';\n\t\n/**\n * Variable: lastSavedResource\n * \n * Specifies the resource key for the last saved info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'lastSaved'.\n */\nmxEditor.prototype.lastSavedResource = (mxClient.language != 'none') ? 'lastSaved' : '';\n\t\n/**\n * Variable: currentFileResource\n * \n * Specifies the resource key for the current file info. If the resource for\n * this key does not exist then the value is used as the error message.\n * Default is 'currentFile'.\n */\nmxEditor.prototype.currentFileResource = (mxClient.language != 'none') ? 'currentFile' : '';\n\t\n/**\n * Variable: propertiesResource\n * \n * Specifies the resource key for the properties window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'properties'.\n */\nmxEditor.prototype.propertiesResource = (mxClient.language != 'none') ? 'properties' : '';\n\t\n/**\n * Variable: tasksResource\n * \n * Specifies the resource key for the tasks window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'tasks'.\n */\nmxEditor.prototype.tasksResource = (mxClient.language != 'none') ? 'tasks' : '';\n\t\n/**\n * Variable: helpResource\n * \n * Specifies the resource key for the help window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'help'.\n */\nmxEditor.prototype.helpResource = (mxClient.language != 'none') ? 'help' : '';\n\t\n/**\n * Variable: outlineResource\n * \n * Specifies the resource key for the outline window title. If the\n * resource for this key does not exist then the value is used as the\n * error message. Default is 'outline'.\n */\nmxEditor.prototype.outlineResource = (mxClient.language != 'none') ? 'outline' : '';\n\t\n/**\n * Variable: outline\n * \n * Reference to the <mxWindow> that contains the outline. The <mxOutline>\n * is stored in outline.outline.\n */\nmxEditor.prototype.outline = null;\n\n/**\n * Variable: graph\n *\n * Holds a <mxGraph> for displaying the diagram. The graph\n * is created in <setGraphContainer>.\n */\nmxEditor.prototype.graph = null;\n\n/**\n * Variable: graphRenderHint\n *\n * Holds the render hint used for creating the\n * graph in <setGraphContainer>. See <mxGraph>.\n * Default is null.\n */\nmxEditor.prototype.graphRenderHint = null;\n\n/**\n * Variable: toolbar\n *\n * Holds a <mxDefaultToolbar> for displaying the toolbar. The\n * toolbar is created in <setToolbarContainer>.\n */\nmxEditor.prototype.toolbar = null;\n\n/**\n * Variable: status\n *\n * DOM container that holds the statusbar. Default is null.\n * Use <setStatusContainer> to set this value.\n */\nmxEditor.prototype.status = null;\n\n/**\n * Variable: popupHandler\n *\n * Holds a <mxDefaultPopupMenu> for displaying\n * popupmenus.\n */\nmxEditor.prototype.popupHandler = null;\n\n/**\n * Variable: undoManager\n *\n * Holds an <mxUndoManager> for the command history.\n */\nmxEditor.prototype.undoManager = null;\n\n/**\n * Variable: keyHandler\n *\n * Holds a <mxDefaultKeyHandler> for handling keyboard events.\n * The handler is created in <setGraphContainer>.\n */\nmxEditor.prototype.keyHandler = null;\n\n/**\n * Group: Actions and Options\n */\n\n/**\n * Variable: actions\n *\n * Maps from actionnames to actions, which are functions taking\n * the editor and the cell as arguments. Use <addAction>\n * to add or replace an action and <execute> to execute an action\n * by name, passing the cell to be operated upon as the second\n * argument.\n */\nmxEditor.prototype.actions = null;\n\n/**\n * Variable: dblClickAction\n *\n * Specifies the name of the action to be executed\n * when a cell is double clicked. Default is 'edit'.\n * \n * To handle a singleclick, use the following code.\n * \n * (code)\n * editor.graph.addListener(mxEvent.CLICK, function(sender, evt)\n * {\n *   var e = evt.getProperty('event');\n *   var cell = evt.getProperty('cell');\n * \n *   if (cell != null && !e.isConsumed())\n *   {\n *     // Do something useful with cell...\n *     e.consume();\n *   }\n * });\n * (end)\n */\nmxEditor.prototype.dblClickAction = 'edit';\n\n/**\n * Variable: swimlaneRequired\n * \n * Specifies if new cells must be inserted\n * into an existing swimlane. Otherwise, cells\n * that are not swimlanes can be inserted as\n * top-level cells. Default is false.\n */\nmxEditor.prototype.swimlaneRequired = false;\n\n/**\n * Variable: disableContextMenu\n *\n * Specifies if the context menu should be disabled in the graph container.\n * Default is true.\n */\nmxEditor.prototype.disableContextMenu = true;\n\n/**\n * Group: Templates\n */\n\n/**\n * Variable: insertFunction\n *\n * Specifies the function to be used for inserting new\n * cells into the graph. This is assigned from the\n * <mxDefaultToolbar> if a vertex-tool is clicked.\n */\nmxEditor.prototype.insertFunction = null;\n\n/**\n * Variable: forcedInserting\n *\n * Specifies if a new cell should be inserted on a single\n * click even using <insertFunction> if there is a cell \n * under the mousepointer, otherwise the cell under the \n * mousepointer is selected. Default is false.\n */\nmxEditor.prototype.forcedInserting = false;\n\n/**\n * Variable: templates\n * \n * Maps from names to protoype cells to be used\n * in the toolbar for inserting new cells into\n * the diagram.\n */\nmxEditor.prototype.templates = null;\n\n/**\n * Variable: defaultEdge\n * \n * Prototype edge cell that is used for creating\n * new edges.\n */\nmxEditor.prototype.defaultEdge = null;\n\n/**\n * Variable: defaultEdgeStyle\n * \n * Specifies the edge style to be returned in <getEdgeStyle>.\n * Default is null.\n */\nmxEditor.prototype.defaultEdgeStyle = null;\n\n/**\n * Variable: defaultGroup\n * \n * Prototype group cell that is used for creating\n * new groups.\n */\nmxEditor.prototype.defaultGroup = null;\n\n/**\n * Variable: groupBorderSize\n *\n * Default size for the border of new groups. If null,\n * then then <mxGraph.gridSize> is used. Default is\n * null.\n */\nmxEditor.prototype.groupBorderSize = null;\n\n/**\n * Group: Backend Integration\n */\n\n/**\n * Variable: filename\n *\n * Contains the URL of the last opened file as a string.\n * Default is null.\n */\nmxEditor.prototype.filename = null;\n\n/**\n * Variable: lineFeed\n *\n * Character to be used for encoding linefeeds in <save>. Default is '&#xa;'.\n */\nmxEditor.prototype.linefeed = '&#xa;';\n\n/**\n * Variable: postParameterName\n *\n * Specifies if the name of the post parameter that contains the diagram\n * data in a post request to the server. Default is 'xml'.\n */\nmxEditor.prototype.postParameterName = 'xml';\n\n/**\n * Variable: escapePostData\n *\n * Specifies if the data in the post request for saving a diagram\n * should be converted using encodeURIComponent. Default is true.\n */\nmxEditor.prototype.escapePostData = true;\n\n/**\n * Variable: urlPost\n *\n * Specifies the URL to be used for posting the diagram\n * to a backend in <save>.\n */\nmxEditor.prototype.urlPost = null;\n\n/**\n * Variable: urlImage\n *\n * Specifies the URL to be used for creating a bitmap of\n * the graph in the image action.\n */\nmxEditor.prototype.urlImage = null;\n\n/**\n * Group: Autolayout\n */\n\n/**\n * Variable: horizontalFlow\n *\n * Specifies the direction of the flow\n * in the diagram. This is used in the\n * layout algorithms. Default is false,\n * ie. vertical flow.\n */\nmxEditor.prototype.horizontalFlow = false;\n\n/**\n * Variable: layoutDiagram\n *\n * Specifies if the top-level elements in the\n * diagram should be layed out using a vertical\n * or horizontal stack depending on the setting\n * of <horizontalFlow>. The spacing between the\n * swimlanes is specified by <swimlaneSpacing>.\n * Default is false.\n * \n * If the top-level elements are swimlanes, then\n * the intra-swimlane layout is activated by\n * the <layoutSwimlanes> switch.\n */\nmxEditor.prototype.layoutDiagram = false;\n\n/**\n * Variable: swimlaneSpacing\n *\n * Specifies the spacing between swimlanes if\n * automatic layout is turned on in\n * <layoutDiagram>. Default is 0.\n */\nmxEditor.prototype.swimlaneSpacing = 0;\n\n/**\n * Variable: maintainSwimlanes\n * \n * Specifies if the swimlanes should be kept at the same\n * width or height depending on the setting of\n * <horizontalFlow>.  Default is false.\n * \n * For horizontal flows, all swimlanes\n * have the same height and for vertical flows, all swimlanes\n * have the same width. Furthermore, the swimlanes are\n * automatically \"stacked\" if <layoutDiagram> is true.\n */\nmxEditor.prototype.maintainSwimlanes = false;\n\n/**\n * Variable: layoutSwimlanes\n *\n * Specifies if the children of swimlanes should\n * be layed out, either vertically or horizontally\n * depending on <horizontalFlow>.\n * Default is false.\n */\nmxEditor.prototype.layoutSwimlanes = false;\n\n/**\n * Group: Attribute Cycling\n */\n \n/**\n * Variable: cycleAttributeValues\n * \n * Specifies the attribute values to be cycled when\n * inserting new swimlanes. Default is an empty\n * array.\n */\nmxEditor.prototype.cycleAttributeValues = null;\n\n/**\n * Variable: cycleAttributeIndex\n * \n * Index of the last consumed attribute index. If a new\n * swimlane is inserted, then the <cycleAttributeValues>\n * at this index will be used as the value for\n * <cycleAttributeName>. Default is 0.\n */\nmxEditor.prototype.cycleAttributeIndex = 0;\n\n/**\n * Variable: cycleAttributeName\n * \n * Name of the attribute to be assigned a <cycleAttributeValues>\n * when inserting new swimlanes. Default is 'fillColor'.\n */\nmxEditor.prototype.cycleAttributeName = 'fillColor';\n\n/**\n * Group: Windows\n */\n\n/**\n * Variable: tasks\n * \n * Holds the <mxWindow> created in <showTasks>.\n */\nmxEditor.prototype.tasks = null;\n\n/**\n * Variable: tasksWindowImage\n *\n * Icon for the tasks window.\n */\nmxEditor.prototype.tasksWindowImage = null;\n\n/**\n * Variable: tasksTop\n * \n * Specifies the top coordinate of the tasks window in pixels.\n * Default is 20.\n */\nmxEditor.prototype.tasksTop = 20;\n\n/**\n * Variable: help\n * \n * Holds the <mxWindow> created in <showHelp>.\n */\nmxEditor.prototype.help = null;\n\n/**\n * Variable: helpWindowImage\n *\n * Icon for the help window.\n */\nmxEditor.prototype.helpWindowImage = null;\n\n/**\n * Variable: urlHelp\n *\n * Specifies the URL to be used for the contents of the\n * Online Help window. This is usually specified in the\n * resources file under urlHelp for language-specific\n * online help support.\n */\nmxEditor.prototype.urlHelp = null;\n\n/**\n * Variable: helpWidth\n * \n * Specifies the width of the help window in pixels.\n * Default is 300.\n */\nmxEditor.prototype.helpWidth = 300;\n\t\n/**\n * Variable: helpHeight\n * \n * Specifies the height of the help window in pixels.\n * Default is 260.\n */\nmxEditor.prototype.helpHeight = 260;\n\n/**\n * Variable: propertiesWidth\n * \n * Specifies the width of the properties window in pixels.\n * Default is 240.\n */\nmxEditor.prototype.propertiesWidth = 240;\n\t\t\n/**\n * Variable: propertiesHeight\n * \n * Specifies the height of the properties window in pixels.\n * If no height is specified then the window will be automatically\n * sized to fit its contents. Default is null.\n */\nmxEditor.prototype.propertiesHeight = null;\n\t\t\n/**\n * Variable: movePropertiesDialog\n *\n * Specifies if the properties dialog should be automatically\n * moved near the cell it is displayed for, otherwise the\n * dialog is not moved. This value is only taken into \n * account if the dialog is already visible. Default is false.\n */\nmxEditor.prototype.movePropertiesDialog = false;\n\n/**\n * Variable: validating\n *\n * Specifies if <mxGraph.validateGraph> should automatically be invoked after\n * each change. Default is false.\n */\nmxEditor.prototype.validating = false;\n\n/**\n * Variable: modified\n *\n * True if the graph has been modified since it was last saved.\n */\nmxEditor.prototype.modified = false;\n\n/**\n * Function: isModified\n * \n * Returns <modified>.\n */\nmxEditor.prototype.isModified = function ()\n{\n\treturn this.modified;\n};\n\n/**\n * Function: setModified\n * \n * Sets <modified> to the specified boolean value.\n */\nmxEditor.prototype.setModified = function (value)\n{\n\tthis.modified = value;\n};\n\n/**\n * Function: addActions\n *\n * Adds the built-in actions to the editor instance.\n *\n * save - Saves the graph using <urlPost>.\n * print - Shows the graph in a new print preview window.\n * show - Shows the graph in a new window.\n * exportImage - Shows the graph as a bitmap image using <getUrlImage>.\n * refresh - Refreshes the graph's display.\n * cut - Copies the current selection into the clipboard\n * and removes it from the graph.\n * copy - Copies the current selection into the clipboard.\n * paste - Pastes the clipboard into the graph.\n * delete - Removes the current selection from the graph.\n * group - Puts the current selection into a new group.\n * ungroup - Removes the selected groups and selects the children.\n * undo - Undoes the last change on the graph model.\n * redo - Redoes the last change on the graph model.\n * zoom - Sets the zoom via a dialog.\n * zoomIn - Zooms into the graph.\n * zoomOut - Zooms out of the graph\n * actualSize - Resets the scale and translation on the graph.\n * fit - Changes the scale so that the graph fits into the window.\n * showProperties - Shows the properties dialog.\n * selectAll - Selects all cells.\n * selectNone - Clears the selection.\n * selectVertices - Selects all vertices.\n * selectEdges = Selects all edges.\n * edit - Starts editing the current selection cell.\n * enterGroup - Drills down into the current selection cell.\n * exitGroup - Moves up in the drilling hierachy\n * home - Moves to the topmost parent in the drilling hierarchy\n * selectPrevious - Selects the previous cell.\n * selectNext - Selects the next cell.\n * selectParent - Selects the parent of the selection cell.\n * selectChild - Selects the first child of the selection cell.\n * collapse - Collapses the currently selected cells.\n * expand - Expands the currently selected cells.\n * bold - Toggle bold text style.\n * italic - Toggle italic text style.\n * underline - Toggle underline text style.\n * alignCellsLeft - Aligns the selection cells at the left.\n * alignCellsCenter - Aligns the selection cells in the center.\n * alignCellsRight - Aligns the selection cells at the right.\n * alignCellsTop - Aligns the selection cells at the top.\n * alignCellsMiddle - Aligns the selection cells in the middle.\n * alignCellsBottom - Aligns the selection cells at the bottom.\n * alignFontLeft - Sets the horizontal text alignment to left.\n * alignFontCenter - Sets the horizontal text alignment to center.\n * alignFontRight - Sets the horizontal text alignment to right.\n * alignFontTop - Sets the vertical text alignment to top.\n * alignFontMiddle - Sets the vertical text alignment to middle.\n * alignFontBottom - Sets the vertical text alignment to bottom.\n * toggleTasks - Shows or hides the tasks window.\n * toggleHelp - Shows or hides the help window.\n * toggleOutline - Shows or hides the outline window.\n * toggleConsole - Shows or hides the console window.\n */\nmxEditor.prototype.addActions = function ()\n{\n\tthis.addAction('save', function(editor)\n\t{\n\t\teditor.save();\n\t});\n\t\n\tthis.addAction('print', function(editor)\n\t{\n\t\tvar preview = new mxPrintPreview(editor.graph, 1);\n\t\tpreview.open();\n\t});\n\t\n\tthis.addAction('show', function(editor)\n\t{\n\t\tmxUtils.show(editor.graph, null, 10, 10);\n\t});\n\n\tthis.addAction('exportImage', function(editor)\n\t{\n\t\tvar url = editor.getUrlImage();\n\t\t\n\t\tif (url == null || mxClient.IS_LOCAL)\n\t\t{\n\t\t\teditor.execute('show');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar node = mxUtils.getViewXml(editor.graph, 1);\n\t\t\tvar xml = mxUtils.getXml(node, '\\n');\n\n\t\t\tmxUtils.submit(url, editor.postParameterName + '=' +\n\t\t\t\tencodeURIComponent(xml), document, '_blank');\n\t\t}\n\t});\n\t\n\tthis.addAction('refresh', function(editor)\n\t{\n\t\teditor.graph.refresh();\n\t});\n\t\n\tthis.addAction('cut', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.cut(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('copy', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.copy(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('paste', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tmxClipboard.paste(editor.graph);\n\t\t}\n\t});\n\t\n\tthis.addAction('delete', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCells();\n\t\t}\n\t});\n\t\n\tthis.addAction('group', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCell(editor.groupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('ungroup', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setSelectionCells(editor.graph.ungroupCells());\n\t\t}\n\t});\n\t\n\tthis.addAction('removeFromParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.removeCellsFromParent();\n\t\t}\n\t});\n\t\n\tthis.addAction('undo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.undo();\n\t\t}\n\t});\n\t\n\tthis.addAction('redo', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.redo();\n\t\t}\n\t});\n\t\n\tthis.addAction('zoomIn', function(editor)\n\t{\n\t\teditor.graph.zoomIn();\n\t});\n\t\n\tthis.addAction('zoomOut', function(editor)\n\t{\n\t\teditor.graph.zoomOut();\n\t});\n\t\n\tthis.addAction('actualSize', function(editor)\n\t{\n\t\teditor.graph.zoomActual();\n\t});\n\t\n\tthis.addAction('fit', function(editor)\n\t{\n\t\teditor.graph.fit();\n\t});\n\t\n\tthis.addAction('showProperties', function(editor, cell)\n\t{\n\t\teditor.showProperties(cell);\n\t});\n\t\n\tthis.addAction('selectAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectAll();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNone', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.clearSelection();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectVertices', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectVertices();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectEdges', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectEdges();\n\t\t}\n\t});\n\t\n\tthis.addAction('edit', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled() &&\n\t\t\teditor.graph.isCellEditable(cell))\n\t\t{\n\t\t\teditor.graph.startEditingAtCell(cell);\n\t\t}\n\t});\n\t\n\tthis.addAction('toBack', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('toFront', function(editor, cell)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.orderCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('enterGroup', function(editor, cell)\n\t{\n\t\teditor.graph.enterGroup(cell);\n\t});\n\t\n\tthis.addAction('exitGroup', function(editor)\n\t{\n\t\teditor.graph.exitGroup();\n\t});\n\t\n\tthis.addAction('home', function(editor)\n\t{\n\t\teditor.graph.home();\n\t});\n\t\n\tthis.addAction('selectPrevious', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectPreviousCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectNext', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectNextCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectParent', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectParentCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('selectChild', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.selectChildCell();\n\t\t}\n\t});\n\t\n\tthis.addAction('collapse', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(true);\n\t\t}\n\t});\n\t\n\tthis.addAction('collapseAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(true, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('expand', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.foldCells(false);\n\t\t}\n\t});\n\t\n\tthis.addAction('expandAll', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\tvar cells = editor.graph.getChildVertices();\n\t\t\teditor.graph.foldCells(false, false, cells);\n\t\t}\n\t});\n\t\n\tthis.addAction('bold', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_BOLD);\n\t\t}\n\t});\n\t\n\tthis.addAction('italic', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_ITALIC);\n\t\t}\n\t});\n\t\n\tthis.addAction('underline', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.toggleCellStyleFlags(\n\t\t\t\tmxConstants.STYLE_FONTSTYLE,\n\t\t\t\tmxConstants.FONT_UNDERLINE);\n\t\t}\n\t});\n\n\tthis.addAction('alignCellsLeft', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_LEFT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignCellsBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.alignCells(mxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontLeft', function(editor)\n\t{\n\t\t\n\t\teditor.graph.setCellStyles(\n\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\tmxConstants.ALIGN_LEFT);\n\t});\n\t\n\tthis.addAction('alignFontCenter', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_CENTER);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontRight', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_ALIGN,\n\t\t\t\tmxConstants.ALIGN_RIGHT);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontTop', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_TOP);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontMiddle', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_MIDDLE);\n\t\t}\n\t});\n\t\n\tthis.addAction('alignFontBottom', function(editor)\n\t{\n\t\tif (editor.graph.isEnabled())\n\t\t{\n\t\t\teditor.graph.setCellStyles(\n\t\t\t\tmxConstants.STYLE_VERTICAL_ALIGN,\n\t\t\t\tmxConstants.ALIGN_BOTTOM);\n\t\t}\n\t});\n\t\n\tthis.addAction('zoom', function(editor)\n\t{\n\t\tvar current = editor.graph.getView().scale*100;\n\t\tvar scale = parseFloat(mxUtils.prompt(\n\t\t\tmxResources.get(editor.askZoomResource) ||\n\t\t\teditor.askZoomResource,\n\t\t\tcurrent))/100;\n\n\t\tif (!isNaN(scale))\n\t\t{\n\t\t\teditor.graph.getView().setScale(scale);\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleTasks', function(editor)\n\t{\n\t\tif (editor.tasks != null)\n\t\t{\n\t\t\teditor.tasks.setVisible(!editor.tasks.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showTasks();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleHelp', function(editor)\n\t{\n\t\tif (editor.help != null)\n\t\t{\n\t\t\teditor.help.setVisible(!editor.help.isVisible());\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.showHelp();\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleOutline', function(editor)\n\t{\n\t\tif (editor.outline == null)\n\t\t{\n\t\t\teditor.showOutline();\n\t\t}\n\t\telse\n\t\t{\n\t\t\teditor.outline.setVisible(!editor.outline.isVisible());\n\t\t}\n\t});\n\t\n\tthis.addAction('toggleConsole', function(editor)\n\t{\n\t\tmxLog.setVisible(!mxLog.isVisible());\n\t});\n};\n\n/**\n * Function: configure\n *\n * Configures the editor using the specified node. To load the\n * configuration from a given URL the following code can be used to obtain\n * the XML node.\n * \n * (code)\n * var node = mxUtils.load(url).getDocumentElement();\n * (end)\n * \n * Parameters:\n * \n * node - XML node that contains the configuration.\n */\nmxEditor.prototype.configure = function (node)\n{\n\tif (node != null)\n\t{\n\t\t// Creates a decoder for the XML data\n\t\t// and uses it to configure the editor\n\t\tvar dec = new mxCodec(node.ownerDocument);\n\t\tdec.decode(node, this);\n\t\t\n\t\t// Resets the counters, modified state and\n\t\t// command history\n\t\tthis.resetHistory();\n\t}\n};\n\n/**\n * Function: resetFirstTime\n * \n * Resets the cookie that is used to remember if the editor has already\n * been used.\n */\nmxEditor.prototype.resetFirstTime = function ()\n{\n\tdocument.cookie =\n\t\t'mxgraph=seen; expires=Fri, 27 Jul 2001 02:47:11 UTC; path=/';\n};\n\n/**\n * Function: resetHistory\n * \n * Resets the command history, modified state and counters.\n */\nmxEditor.prototype.resetHistory = function ()\n{\n\tthis.lastSnapshot = new Date().getTime();\n\tthis.undoManager.clear();\n\tthis.ignoredChanges = 0;\n\tthis.setModified(false);\n};\n\n/**\n * Function: addAction\n * \n * Binds the specified actionname to the specified function.\n * \n * Parameters:\n * \n * actionname - String that specifies the name of the action\n * to be added.\n * funct - Function that implements the new action. The first\n * argument of the function is the editor it is used\n * with, the second argument is the cell it operates\n * upon.\n * \n * Example:\n * (code)\n * editor.addAction('test', function(editor, cell)\n * {\n * \t\tmxUtils.alert(\"test \"+cell);\n * });\n * (end)\n */\nmxEditor.prototype.addAction = function (actionname, funct)\n{\n\tthis.actions[actionname] = funct;\n};\n\n/**\n * Function: execute\n * \n * Executes the function with the given name in <actions> passing the\n * editor instance and given cell as the first and second argument. All\n * additional arguments are passed to the action as well. This method\n * contains a try-catch block and displays an error message if an action\n * causes an exception. The exception is re-thrown after the error\n * message was displayed.\n * \n * Example:\n * \n * (code)\n * editor.execute(\"showProperties\", cell);\n * (end)\n */\nmxEditor.prototype.execute = function (actionname, cell, evt)\n{\n\tvar action = this.actions[actionname];\n\t\n\tif (action != null)\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Creates the array of arguments by replacing the actionname\n\t\t\t// with the editor instance in the args of this function\n\t\t\tvar args = arguments;\n\t\t\targs[0] = this;\n\t\t\t\n\t\t\t// Invokes the function on the editor using the args\n\t\t\taction.apply(this, args);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.error('Cannot execute ' + actionname +\n\t\t\t\t': ' + e.message, 280, true);\n\t\t\t\n\t\t\tthrow e;\n\t\t}\n\t}\n\telse\n\t{\n\t\tmxUtils.error('Cannot find action '+actionname, 280, true);\n\t}\n};\n\n/**\n * Function: addTemplate\n * \n * Adds the specified template under the given name in <templates>.\n */\nmxEditor.prototype.addTemplate = function (name, template)\n{\n\tthis.templates[name] = template;\n};\n\n/**\n * Function: getTemplate\n * \n * Returns the template for the given name.\n */\nmxEditor.prototype.getTemplate = function (name)\n{\n\treturn this.templates[name];\n};\n\n/**\n * Function: createGraph\n * \n * Creates the <graph> for the editor. The graph is created with no\n * container and is initialized from <setGraphContainer>.\n */\nmxEditor.prototype.createGraph = function ()\n{\n\tvar graph = new mxGraph(null, null, this.graphRenderHint);\n\t\n\t// Enables rubberband, tooltips, panning\n\tgraph.setTooltips(true);\n\tgraph.setPanning(true);\n\n\t// Overrides the dblclick method on the graph to\n\t// invoke the dblClickAction for a cell and reset\n\t// the selection tool in the toolbar\n\tthis.installDblClickHandler(graph);\n\t\n\t// Installs the command history\n\tthis.installUndoHandler(graph);\n\n\t// Installs the handlers for the root event\n\tthis.installDrillHandler(graph);\n\t\n\t// Installs the handler for validation\n\tthis.installChangeHandler(graph);\n\n\t// Installs the handler for calling the\n\t// insert function and consume the\n\t// event if an insert function is defined\n\tthis.installInsertHandler(graph);\n\n\t// Redirects the function for creating the\n\t// popupmenu items\n\tgraph.popupMenuHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(menu, cell, evt)\n\t\t{\n\t\t\treturn this.createPopupMenu(menu, cell, evt);\n\t\t});\n\n\t// Redirects the function for creating\n\t// new connections in the diagram\n\tgraph.connectionHandler.factoryMethod =\n\t\tmxUtils.bind(this, function(source, target)\n\t\t{\n\t\t\treturn this.createEdge(source, target);\n\t\t});\n\t\n\t// Maintains swimlanes and installs autolayout\n\tthis.createSwimlaneManager(graph);\n\tthis.createLayoutManager(graph);\n\t\n\treturn graph;\n};\n\n/**\n * Function: createSwimlaneManager\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.createSwimlaneManager = function (graph)\n{\n\tvar swimlaneMgr = new mxSwimlaneManager(graph, false);\n\n\tswimlaneMgr.isHorizontal = mxUtils.bind(this, function()\n\t{\n\t\treturn this.horizontalFlow;\n\t});\n\t\n\tswimlaneMgr.isEnabled = mxUtils.bind(this, function()\n\t{\n\t\treturn this.maintainSwimlanes;\n\t});\n\t\n\treturn swimlaneMgr;\n};\n\n/**\n * Function: createLayoutManager\n * \n * Creates a layout manager for the swimlane and diagram layouts, that\n * is, the locally defined inter- and intraswimlane layouts.\n */\nmxEditor.prototype.createLayoutManager = function (graph)\n{\n\tvar layoutMgr = new mxLayoutManager(graph);\n\t\n\tvar self = this; // closure\n\tlayoutMgr.getLayout = function(cell)\n\t{\n\t\tvar layout = null;\n\t\tvar model = self.graph.getModel();\n\t\t\n\t\tif (model.getParent(cell) != null)\n\t\t{\n\t\t\t// Executes the swimlane layout if a child of\n\t\t\t// a swimlane has been changed. The layout is\n\t\t\t// lazy created in createSwimlaneLayout.\n\t\t\tif (self.layoutSwimlanes &&\n\t\t\t\tgraph.isSwimlane(cell))\n\t\t\t{\n\t\t\t\tif (self.swimlaneLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.swimlaneLayout = self.createSwimlaneLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.swimlaneLayout;\n\t\t\t}\n\t\t\t\n\t\t\t// Executes the diagram layout if the modified\n\t\t\t// cell is a top-level cell. The layout is\n\t\t\t// lazy created in createDiagramLayout.\n\t\t\telse if (self.layoutDiagram &&\n\t\t\t\t(graph.isValidRoot(cell) ||\n\t\t\t\tmodel.getParent(model.getParent(cell)) == null))\n\t\t\t{\n\t\t\t\tif (self.diagramLayout == null)\n\t\t\t\t{\n\t\t\t\t\tself.diagramLayout = self.createDiagramLayout();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlayout = self.diagramLayout;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\treturn layout;\n\t};\n\t\n\treturn layoutMgr;\n};\n\n/**\n * Function: setGraphContainer\n * \n * Sets the graph's container using <mxGraph.init>.\n */\nmxEditor.prototype.setGraphContainer = function (container)\n{\n\tif (this.graph.container == null)\n\t{\n\t\t// Creates the graph instance inside the given container and render hint\n\t\t//this.graph = new mxGraph(container, null, this.graphRenderHint);\n\t\tthis.graph.init(container);\n\n\t\t// Install rubberband selection as the last\n\t\t// action handler in the chain\n\t\tthis.rubberband = new mxRubberband(this.graph);\n\n\t\t// Disables the context menu\n\t\tif (this.disableContextMenu)\n\t\t{\n\t\t\tmxEvent.disableContextMenu(container);\n\t\t}\n\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: installDblClickHandler\n * \n * Overrides <mxGraph.dblClick> to invoke <dblClickAction>\n * on a cell and reset the selection tool in the toolbar.\n */\nmxEditor.prototype.installDblClickHandler = function (graph)\n{\n\t// Installs a listener for double click events\n\tgraph.addListener(mxEvent.DOUBLE_CLICK,\n\t\tmxUtils.bind(this, function(sender, evt)\n\t\t{\n\t\t\tvar cell = evt.getProperty('cell');\n\t\t\t\n\t\t\tif (cell != null &&\n\t\t\t\tgraph.isEnabled() &&\n\t\t\t\tthis.dblClickAction != null)\n\t\t\t{\n\t\t\t\tthis.execute(this.dblClickAction, cell);\n\t\t\t\tevt.consume();\n\t\t\t}\n\t\t})\n\t);\n};\n\t\t\n/**\n * Function: installUndoHandler\n * \n * Adds the <undoManager> to the graph model and the view.\n */\nmxEditor.prototype.installUndoHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\tvar edit = evt.getProperty('edit');\n\t\tthis.undoManager.undoableEditHappened(edit);\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.UNDO, listener);\n\tgraph.getView().addListener(mxEvent.UNDO, listener);\n\n\t// Keeps the selection state in sync\n\tvar undoHandler = function(sender, evt)\n\t{\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\tgraph.setSelectionCells(graph.getSelectionCellsForChanges(changes));\n\t};\n\t\n\tthis.undoManager.addListener(mxEvent.UNDO, undoHandler);\n\tthis.undoManager.addListener(mxEvent.REDO, undoHandler);\n};\n\t\t\n/**\n * Function: installDrillHandler\n * \n * Installs listeners for dispatching the <root> event.\n */\nmxEditor.prototype.installDrillHandler = function (graph)\n{\t\t\t\t\n\tvar listener = mxUtils.bind(this, function(sender)\n\t{\n\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t});\n\t\n\tgraph.getView().addListener(mxEvent.DOWN, listener);\n\tgraph.getView().addListener(mxEvent.UP, listener);\n};\n\n/**\n * Function: installChangeHandler\n * \n * Installs the listeners required to automatically validate\n * the graph. On each change of the root, this implementation\n * fires a <root> event.\n */\nmxEditor.prototype.installChangeHandler = function (graph)\n{\n\tvar listener = mxUtils.bind(this, function(sender, evt)\n\t{\n\t\t// Updates the modified state\n\t\tthis.setModified(true);\n\n\t\t// Automatically validates the graph\n\t\t// after each change\n\t\tif (this.validating == true)\n\t\t{\n\t\t\tgraph.validateGraph();\n\t\t}\n\n\t\t// Checks if the root has been changed\n\t\tvar changes = evt.getProperty('edit').changes;\n\t\t\n\t\tfor (var i = 0; i < changes.length; i++)\n\t\t{\n\t\t\tvar change = changes[i];\n\t\t\t\n\t\t\tif (change instanceof mxRootChange ||\n\t\t\t\t(change instanceof mxValueChange &&\n\t\t\t\tchange.cell == this.graph.model.root) ||\n\t\t\t\t(change instanceof mxCellAttributeChange &&\n\t\t\t\tchange.cell == this.graph.model.root))\n\t\t\t{\n\t\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ROOT));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t});\n\t\n\tgraph.getModel().addListener(mxEvent.CHANGE, listener);\n};\n\n/**\n * Function: installInsertHandler\n * \n * Installs the handler for invoking <insertFunction> if\n * one is defined.\n */\nmxEditor.prototype.installInsertHandler = function (graph)\n{\n\tvar self = this; // closure\n\tvar insertHandler =\n\t{\n\t\tmouseDown: function(sender, me)\n\t\t{\n\t\t\tif (self.insertFunction != null &&\n\t\t\t\t!me.isPopupTrigger() &&\n\t\t\t\t(self.forcedInserting ||\n\t\t\t\tme.getState() == null))\n\t\t\t{\n\t\t\t\tself.graph.clearSelection();\n\t\t\t\tself.insertFunction(me.getEvent(), me.getCell());\n\n\t\t\t\t// Consumes the rest of the events\n\t\t\t\t// for this gesture (down, move, up)\n\t\t\t\tthis.isActive = true;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseMove: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t},\n\t\t\n\t\tmouseUp: function(sender, me)\n\t\t{\n\t\t\tif (this.isActive)\n\t\t\t{\n\t\t\t\tthis.isActive = false;\n\t\t\t\tme.consume();\n\t\t\t}\n\t\t}\n\t};\n\t\n\tgraph.addMouseListener(insertHandler);\n};\n\n/**\n * Function: createDiagramLayout\n * \n * Creates the layout instance used to layout the\n * swimlanes in the diagram.\n */\nmxEditor.prototype.createDiagramLayout = function ()\n{\n\tvar gs = this.graph.gridSize;\n\tvar layout = new mxStackLayout(this.graph, !this.horizontalFlow,\n\t\t this.swimlaneSpacing, 2*gs, 2*gs);\n\t\n\t// Overrides isIgnored to only take into account swimlanes\n\tlayout.isVertexIgnored = function(cell)\n\t{\n\t\treturn !layout.graph.isSwimlane(cell);\n\t};\n\t\n\treturn layout;\n};\n\n/**\n * Function: createSwimlaneLayout\n * \n * Creates the layout instance used to layout the\n * children of each swimlane.\n */\nmxEditor.prototype.createSwimlaneLayout = function ()\n{\n\treturn new mxCompactTreeLayout(this.graph, this.horizontalFlow);\n};\n\n/**\n * Function: createToolbar\n * \n * Creates the <toolbar> with no container.\n */\nmxEditor.prototype.createToolbar = function ()\n{\n\treturn new mxDefaultToolbar(null, this);\n};\n\n/**\n * Function: setToolbarContainer\n * \n * Initializes the toolbar for the given container.\n */\nmxEditor.prototype.setToolbarContainer = function (container)\n{\n\tthis.toolbar.init(container);\n\t\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: setStatusContainer\n * \n * Creates the <status> using the specified container.\n * \n * This implementation adds listeners in the editor to \n * display the last saved time and the current filename \n * in the status bar.\n * \n * Parameters:\n * \n * container - DOM node that will contain the statusbar.\n */\nmxEditor.prototype.setStatusContainer = function (container)\n{\n\tif (this.status == null)\n\t{\n\t\tthis.status = container;\n\t\t\n\t\t// Prints the last saved time in the status bar\n\t\t// when files are saved\n\t\tthis.addListener(mxEvent.SAVE, mxUtils.bind(this, function()\n\t\t{\n\t\t\tvar tstamp = new Date().toLocaleString();\n\t\t\tthis.setStatus((mxResources.get(this.lastSavedResource) ||\n\t\t\t\tthis.lastSavedResource)+': '+tstamp);\n\t\t}));\n\t\t\n\t\t// Updates the statusbar to display the filename\n\t\t// when new files are opened\n\t\tthis.addListener(mxEvent.OPEN, mxUtils.bind(this, function()\n\t\t{\n\t\t\tthis.setStatus((mxResources.get(this.currentFileResource) ||\n\t\t\t\tthis.currentFileResource)+': '+this.filename);\n\t\t}));\n\t\t\n\t\t// Workaround for stylesheet directives in IE\n\t\tif (mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnew mxDivResizer(container);\n\t\t}\n\t}\n};\n\n/**\n * Function: setStatus\n * \n * Display the specified message in the status bar.\n * \n * Parameters:\n * \n * message - String the specified the message to\n * be displayed.\n */\nmxEditor.prototype.setStatus = function (message)\n{\n\tif (this.status != null && message != null)\n\t{\n\t\tthis.status.innerHTML = message;\n\t}\n};\n\n/**\n * Function: setTitleContainer\n * \n * Creates a listener to update the inner HTML of the\n * specified DOM node with the value of <getTitle>.\n * \n * Parameters:\n * \n * container - DOM node that will contain the title.\n */\nmxEditor.prototype.setTitleContainer = function (container)\n{\n\tthis.addListener(mxEvent.ROOT, mxUtils.bind(this, function(sender)\n\t{\n\t\tcontainer.innerHTML = this.getTitle();\n\t}));\n\n\t// Workaround for stylesheet directives in IE\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tnew mxDivResizer(container);\n\t}\n};\n\n/**\n * Function: treeLayout\n * \n * Executes a vertical or horizontal compact tree layout\n * using the specified cell as an argument. The cell may\n * either be a group or the root of a tree.\n * \n * Parameters:\n * \n * cell - <mxCell> to use in the compact tree layout.\n * horizontal - Optional boolean to specify the tree's\n * orientation. Default is true.\n */\nmxEditor.prototype.treeLayout = function (cell, horizontal)\n{\n\tif (cell != null)\n\t{\n\t\tvar layout = new mxCompactTreeLayout(this.graph, horizontal);\n\t\tlayout.execute(cell);\n\t}\n};\n\n/**\n * Function: getTitle\n * \n * Returns the string value for the current root of the\n * diagram.\n */\nmxEditor.prototype.getTitle = function ()\n{\n\tvar title = '';\n\tvar graph = this.graph;\n\tvar cell = graph.getCurrentRoot();\n\t\n\twhile (cell != null &&\n\t\t   graph.getModel().getParent(\n\t\t\t\tgraph.getModel().getParent(cell)) != null)\n\t{\n\t\t// Append each label of a valid root\n\t\tif (graph.isValidRoot(cell))\n\t\t{\n\t\t\ttitle = ' > ' +\n\t\t\tgraph.convertValueToString(cell) + title;\n\t\t}\n\t\t\n\t\tcell = graph.getModel().getParent(cell);\n\t}\n\t\n\tvar prefix = this.getRootTitle();\n\t\n\treturn prefix + title;\n};\n\n/**\n * Function: getRootTitle\n * \n * Returns the string value of the root cell in\n * <mxGraph.model>.\n */\nmxEditor.prototype.getRootTitle = function ()\n{\n\tvar root = this.graph.getModel().getRoot();\n\treturn this.graph.convertValueToString(root);\n};\n\n/**\n * Function: undo\n * \n * Undo the last change in <graph>.\n */\nmxEditor.prototype.undo = function ()\n{\n\tthis.undoManager.undo();\n};\n\n/**\n * Function: redo\n * \n * Redo the last change in <graph>.\n */\nmxEditor.prototype.redo = function ()\n{\n\tthis.undoManager.redo();\n};\n\n/**\n * Function: groupCells\n * \n * Invokes <createGroup> to create a new group cell and the invokes\n * <mxGraph.groupCells>, using the grid size of the graph as the spacing\n * in the group's content area.\n */\nmxEditor.prototype.groupCells = function ()\n{\n\tvar border = (this.groupBorderSize != null) ?\n\t\tthis.groupBorderSize :\n\t\tthis.graph.gridSize;\n\treturn this.graph.groupCells(this.createGroup(), border);\n};\n\n/**\n * Function: createGroup\n * \n * Creates and returns a clone of <defaultGroup> to be used\n * as a new group cell in <group>.\n */\nmxEditor.prototype.createGroup = function ()\n{\n\tvar model = this.graph.getModel();\n\t\n\treturn model.cloneCell(this.defaultGroup);\n};\n\n/**\n * Function: open\n * \n * Opens the specified file synchronously and parses it using\n * <readGraphModel>. It updates <filename> and fires an <open>-event after\n * the file has been opened. Exceptions should be handled as follows:\n * \n * (code)\n * try\n * {\n *   editor.open(filename);\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot open ' + filename +\n *     ': ' + e.message, 280, true);\n * }\n * (end)\n *\n * Parameters:\n * \n * filename - URL of the file to be opened.\n */\nmxEditor.prototype.open = function (filename)\n{\n\tif (filename != null)\n\t{\n\t\tvar xml = mxUtils.load(filename).getXml();\n\t\tthis.readGraphModel(xml.documentElement);\n\t\tthis.filename = filename;\n\t\t\n\t\tthis.fireEvent(new mxEventObject(mxEvent.OPEN, 'filename', filename));\n\t}\n};\n\n/**\n * Function: readGraphModel\n * \n * Reads the specified XML node into the existing graph model and resets\n * the command history and modified state.\n */\nmxEditor.prototype.readGraphModel = function (node)\n{\n\tvar dec = new mxCodec(node.ownerDocument);\n\tdec.decode(node, this.graph.getModel());\n\tthis.resetHistory();\n};\n\n/**\n * Function: save\n * \n * Posts the string returned by <writeGraphModel> to the given URL or the\n * URL returned by <getUrlPost>. The actual posting is carried out by\n * <postDiagram>. If the URL is null then the resulting XML will be\n * displayed using <mxUtils.popup>. Exceptions should be handled as\n * follows:\n * \n * (code)\n * try\n * {\n *   editor.save();\n * }\n * catch (e)\n * {\n *   mxUtils.error('Cannot save : ' + e.message, 280, true);\n * }\n * (end)\n */\nmxEditor.prototype.save = function (url, linefeed)\n{\n\t// Gets the URL to post the data to\n\turl = url || this.getUrlPost();\n\n\t// Posts the data if the URL is not empty\n\tif (url != null && url.length > 0)\n\t{\n\t\tvar data = this.writeGraphModel(linefeed);\n\t\tthis.postDiagram(url, data);\n\t\t\n\t\t// Resets the modified flag\n\t\tthis.setModified(false);\n\t}\n\t\n\t// Dispatches a save event\n\tthis.fireEvent(new mxEventObject(mxEvent.SAVE, 'url', url));\n};\n\n/**\n * Function: postDiagram\n * \n * Hook for subclassers to override the posting of a diagram\n * represented by the given node to the given URL. This fires\n * an asynchronous <post> event if the diagram has been posted.\n * \n * Example:\n * \n * To replace the diagram with the diagram in the response, use the\n * following code.\n * \n * (code)\n * editor.addListener(mxEvent.POST, function(sender, evt)\n * {\n *   // Process response (replace diagram)\n *   var req = evt.getProperty('request');\n *   var root = req.getDocumentElement();\n *   editor.graph.readGraphModel(root)\n * });\n * (end)\n */\nmxEditor.prototype.postDiagram = function (url, data)\n{\n\tif (this.escapePostData)\n\t{\n\t\tdata = encodeURIComponent(data);\n\t}\n\n\tmxUtils.post(url, this.postParameterName+'='+data,\n\t\tmxUtils.bind(this, function(req)\n\t\t{\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.POST,\n\t\t\t\t'request', req, 'url', url, 'data', data));\n\t\t})\n\t);\n};\n\n/**\n * Function: writeGraphModel\n * \n * Hook to create the string representation of the diagram. The default\n * implementation uses an <mxCodec> to encode the graph model as\n * follows:\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(this.graph.getModel());\n * return mxUtils.getXml(node, this.linefeed);\n * (end)\n * \n * Parameters:\n * \n * linefeed - Optional character to be used as the linefeed. Default is\n * <linefeed>.\n */\nmxEditor.prototype.writeGraphModel = function (linefeed)\n{\n\tlinefeed = (linefeed != null) ? linefeed : this.linefeed;\n\tvar enc = new mxCodec();\n\tvar node = enc.encode(this.graph.getModel());\n\n\treturn mxUtils.getXml(node, linefeed);\n};\n\n/**\n * Function: getUrlPost\n * \n * Returns the URL to post the diagram to. This is used\n * in <save>. The default implementation returns <urlPost>,\n * adding <code>?draft=true</code>.\n */\nmxEditor.prototype.getUrlPost = function ()\n{\n\treturn this.urlPost;\n};\n\n/**\n * Function: getUrlImage\n * \n * Returns the URL to create the image with. This is typically\n * the URL of a backend which accepts an XML representation\n * of a graph view to create an image. The function is used\n * in the image action to create an image. This implementation\n * returns <urlImage>.\n */\nmxEditor.prototype.getUrlImage = function ()\n{\n\treturn this.urlImage;\n};\n\n/**\n * Function: swapStyles\n * \n * Swaps the styles for the given names in the graph's\n * stylesheet and refreshes the graph.\n */\nmxEditor.prototype.swapStyles = function (first, second)\n{\n\tvar style = this.graph.getStylesheet().styles[second];\n\tthis.graph.getView().getStylesheet().putCellStyle(\n\t\tsecond, this.graph.getStylesheet().styles[first]);\n\tthis.graph.getStylesheet().putCellStyle(first, style);\n\tthis.graph.refresh();\n};\n\n/**\n * Function: showProperties\n * \n * Creates and shows the properties dialog for the given\n * cell. The content area of the dialog is created using\n * <createProperties>.\n */\nmxEditor.prototype.showProperties = function (cell)\n{\n\tcell = cell || this.graph.getSelectionCell();\n\t\n\t// Uses the root node for the properties dialog\n\t// if not cell was passed in and no cell is\n\t// selected\n\tif (cell == null)\n\t{\n\t\tcell = this.graph.getCurrentRoot();\n\t\t\n\t\tif (cell == null)\n\t\t{\n\t\t\tcell = this.graph.getModel().getRoot();\n\t\t}\n\t}\n\t\n\tif (cell != null)\n\t{\n\t\t// Makes sure there is no in-place editor in the\n\t\t// graph and computes the location of the dialog\n\t\tthis.graph.stopEditing(true);\n\n\t\tvar offset = mxUtils.getOffset(this.graph.container);\n\t\tvar x = offset.x+10;\n\t\tvar y = offset.y;\n\t\t\n\t\t// Avoids moving the dialog if it is alredy open\n\t\tif (this.properties != null && !this.movePropertiesDialog)\n\t\t{\n\t\t\tx = this.properties.getX();\n\t\t\ty = this.properties.getY();\n\t\t}\n\t\t\n\t\t// Places the dialog near the cell for which it\n\t\t// displays the properties\n\t\telse\n\t\t{\n\t\t\tvar bounds = this.graph.getCellBounds(cell);\n\t\t\t\n\t\t\tif (bounds != null)\n\t\t\t{\n\t\t\t\tx += bounds.x+Math.min(200, bounds.width);\n\t\t\t\ty += bounds.y;\t\t\t\t\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\t// Hides the existing properties dialog and creates a new one with the\n\t\t// contents created in the hook method\n\t\tthis.hideProperties();\n\t\tvar node = this.createProperties(cell);\n\t\t\n\t\tif (node != null)\n\t\t{\n\t\t\t// Displays the contents in a window and stores a reference to the\n\t\t\t// window for later hiding of the window\n\t\t\tthis.properties = new mxWindow(mxResources.get(this.propertiesResource) ||\n\t\t\t\tthis.propertiesResource, node, x, y, this.propertiesWidth, this.propertiesHeight, false);\n\t\t\tthis.properties.setVisible(true);\n\t\t}\n\t}\n};\n\n/**\n * Function: isPropertiesVisible\n * \n * Returns true if the properties dialog is currently visible.\n */\nmxEditor.prototype.isPropertiesVisible = function ()\n{\n\treturn this.properties != null;\n};\n\n/**\n * Function: createProperties\n * \n * Creates and returns the DOM node that represents the contents\n * of the properties dialog for the given cell. This implementation\n * works for user objects that are XML nodes and display all the\n * node attributes in a form.\n */\nmxEditor.prototype.createProperties = function (cell)\n{\n\tvar model = this.graph.getModel();\n\tvar value = model.getValue(cell);\n\t\n\tif (mxUtils.isNode(value))\n\t{\n\t\t// Creates a form for the user object inside\n\t\t// the cell\n\t\tvar form = new mxForm('properties');\n\t\t\n\t\t// Adds a readonly field for the cell id\n\t\tvar id = form.addText('ID', cell.getId());\n\t\tid.setAttribute('readonly', 'true');\n\n\t\tvar geo = null;\n\t\tvar yField = null;\n\t\tvar xField = null;\n\t\tvar widthField = null;\n\t\tvar heightField = null;\n\n\t\t// Adds fields for the location and size\n\t\tif (model.isVertex(cell))\n\t\t{\n\t\t\tgeo = model.getGeometry(cell);\n\t\t\t\n\t\t\tif (geo != null)\n\t\t\t{\n\t\t\t\tyField = form.addText('top', geo.y);\n\t\t\t\txField = form.addText('left', geo.x);\n\t\t\t\twidthField = form.addText('width', geo.width);\n\t\t\t\theightField = form.addText('height', geo.height);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Adds a field for the cell style\t\t\t\n\t\tvar tmp = model.getStyle(cell);\n\t\tvar style = form.addText('Style', tmp || '');\n\t\t\n\t\t// Creates textareas for each attribute of the\n\t\t// user object within the cell\n\t\tvar attrs = value.attributes;\n\t\tvar texts = [];\n\t\t\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\t// Creates a textarea with more lines for\n\t\t\t// the cell label\n\t\t\tvar val = attrs[i].value;\n\t\t\ttexts[i] = form.addTextarea(attrs[i].nodeName, val,\n\t\t\t\t(attrs[i].nodeName == 'label') ? 4 : 2);\n\t\t}\n\t\t\n\t\t// Adds an OK and Cancel button to the dialog\n\t\t// contents and implements the respective\n\t\t// actions below\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// OK button is pressed in the dialog\n\t\tvar okFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t\t\n\t\t\t// Supports undo for the changes on the underlying\n\t\t\t// XML structure / XML node attribute changes.\n\t\t\tmodel.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (geo != null)\n\t\t\t\t{\n\t\t\t\t\tgeo = geo.clone();\n\t\t\t\t\t\n\t\t\t\t\tgeo.x = parseFloat(xField.value);\n\t\t\t\t\tgeo.y = parseFloat(yField.value);\n\t\t\t\t\tgeo.width = parseFloat(widthField.value);\n\t\t\t\t\tgeo.height = parseFloat(heightField.value);\n\t\t\t\t\t\n\t\t\t\t\tmodel.setGeometry(cell, geo);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Applies the style\n\t\t\t\tif (style.value.length > 0)\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, style.value);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmodel.setStyle(cell, null);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Creates an undoable change for each\n\t\t\t\t// attribute and executes it using the\n\t\t\t\t// model, which will also make the change\n\t\t\t\t// part of the current transaction\n\t\t\t\tfor (var i=0; i<attrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tvar edit = new mxCellAttributeChange(\n\t\t\t\t\t\tcell, attrs[i].nodeName,\n\t\t\t\t\t\ttexts[i].value);\n\t\t\t\t\tmodel.execute(edit);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Checks if the graph wants cells to \n\t\t\t\t// be automatically sized and updates\n\t\t\t\t// the size as an undoable step if\n\t\t\t\t// the feature is enabled\n\t\t\t\tif (this.graph.isAutoSizeCell(cell))\n\t\t\t\t{\n\t\t\t\t\tthis.graph.updateCellSize(cell);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tmodel.endUpdate();\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Defines the function to be executed when the\n\t\t// Cancel button is pressed in the dialog\n\t\tvar cancelFunction = mxUtils.bind(this, function()\n\t\t{\n\t\t\t// Hides the dialog\n\t\t\tthis.hideProperties();\n\t\t});\n\t\t\n\t\tform.addButtons(okFunction, cancelFunction);\n\t\t\n\t\treturn form.table;\n\t}\n\n\treturn null;\n};\n\n/**\n * Function: hideProperties\n * \n * Hides the properties dialog.\n */\nmxEditor.prototype.hideProperties = function ()\n{\n\tif (this.properties != null)\n\t{\n\t\tthis.properties.destroy();\n\t\tthis.properties = null;\n\t}\n};\n\n/**\n * Function: showTasks\n * \n * Shows the tasks window. The tasks window is created using <createTasks>. The\n * default width of the window is 200 pixels, the y-coordinate of the location\n * can be specifies in <tasksTop> and the x-coordinate is right aligned with a\n * 20 pixel offset from the right border. To change the location of the tasks\n * window, the following code can be used:\n * \n * (code)\n * var oldShowTasks = mxEditor.prototype.showTasks;\n * mxEditor.prototype.showTasks = function()\n * {\n *   oldShowTasks.apply(this, arguments); // \"supercall\"\n *   \n *   if (this.tasks != null)\n *   {\n *     this.tasks.setLocation(10, 10);\n *   }\n * };\n * (end)\n */\nmxEditor.prototype.showTasks = function ()\n{\n\tif (this.tasks == null)\n\t{\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.padding = '4px';\n\t\tdiv.style.paddingLeft = '20px';\n\t\tvar w = document.body.clientWidth;\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.tasksResource) ||\n\t\t\tthis.tasksResource,\n\t\t\tdiv, w - 220, this.tasksTop, 200);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\t// Installs a function to update the contents\n\t\t// of the tasks window on every change of the\n\t\t// model, selection or root.\n\t\tvar funct = mxUtils.bind(this, function(sender)\n\t\t{\n\t\t\tmxEvent.release(div);\n\t\t\tdiv.innerHTML = '';\n\t\t\tthis.createTasks(div);\n\t\t});\n\t\t\n\t\tthis.graph.getModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.getSelectionModel().addListener(mxEvent.CHANGE, funct);\n\t\tthis.graph.addListener(mxEvent.ROOT, funct);\n\t\t\n\t\t// Assigns the icon to the tasks window\n\t\tif (this.tasksWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.tasksWindowImage);\n\t\t}\n\t\t\n\t\tthis.tasks = wnd;\n\t\tthis.createTasks(div);\n\t}\n\t\n\tthis.tasks.setVisible(true);\n};\n\t\t\n/**\n * Function: refreshTasks\n * \n * Updates the contents of the tasks window using <createTasks>.\n */\nmxEditor.prototype.refreshTasks = function (div)\n{\n\tif (this.tasks != null)\n\t{\n\t\tvar div = this.tasks.content;\n\t\tmxEvent.release(div);\n\t\tdiv.innerHTML = '';\n\t\tthis.createTasks(div);\n\t}\n};\n\t\t\n/**\n * Function: createTasks\n * \n * Updates the contents of the given DOM node to\n * display the tasks associated with the current\n * editor state. This is invoked whenever there\n * is a possible change of state in the editor.\n * Default implementation is empty.\n */\nmxEditor.prototype.createTasks = function (div)\n{\n\t// override\n};\n\t\n/**\n * Function: showHelp\n * \n * Shows the help window. If the help window does not exist\n * then it is created using an iframe pointing to the resource\n * for the <code>urlHelp</code> key or <urlHelp> if the resource\n * is undefined.\n */\nmxEditor.prototype.showHelp = function (tasks)\n{\n\tif (this.help == null)\n\t{\n\t\tvar frame = document.createElement('iframe');\n\t\tframe.setAttribute('src', mxResources.get('urlHelp') || this.urlHelp);\n\t\tframe.setAttribute('height', '100%');\n\t\tframe.setAttribute('width', '100%');\n\t\tframe.setAttribute('frameBorder', '0');\n\t\tframe.style.backgroundColor = 'white';\n\t\n\t\tvar w = document.body.clientWidth;\n\t\tvar h = (document.body.clientHeight || document.documentElement.clientHeight);\n\t\t\n\t\tvar wnd = new mxWindow(mxResources.get(this.helpResource) || this.helpResource,\n\t\t\tframe, (w-this.helpWidth)/2, (h-this.helpHeight)/3, this.helpWidth, this.helpHeight);\n\t\twnd.setMaximizable(true);\n\t\twnd.setClosable(true);\n\t\twnd.destroyOnClose = false;\n\t\twnd.setResizable(true);\n\n\t\t// Assigns the icon to the help window\n\t\tif (this.helpWindowImage != null)\n\t\t{\n\t\t\twnd.setImage(this.helpWindowImage);\n\t\t}\n\t\t\n\t\t// Workaround for ignored iframe height 100% in FF\n\t\tif (mxClient.IS_NS)\n\t\t{\n\t\t\tvar handler = function(sender)\n\t\t\t{\n\t\t\t\tvar h = wnd.div.offsetHeight;\n\t\t\t\tframe.setAttribute('height', (h-26)+'px');\n\t\t\t};\n\t\t\t\n\t\t\twnd.addListener(mxEvent.RESIZE_END, handler);\n\t\t\twnd.addListener(mxEvent.MAXIMIZE, handler);\n\t\t\twnd.addListener(mxEvent.NORMALIZE, handler);\n\t\t\twnd.addListener(mxEvent.SHOW, handler);\n\t\t}\n\t\t\n\t\tthis.help = wnd;\n\t}\n\t\n\tthis.help.setVisible(true);\n};\n\n/**\n * Function: showOutline\n * \n * Shows the outline window. If the window does not exist, then it is\n * created using an <mxOutline>.\n */\nmxEditor.prototype.showOutline = function ()\n{\n\tvar create = this.outline == null;\n\t\n\tif (create)\n\t{\n\t\tvar div = document.createElement('div');\n\t\t\n\t\tdiv.style.overflow = 'hidden';\n\t\tdiv.style.position = 'relative';\n\t\tdiv.style.width = '100%';\n\t\tdiv.style.height = '100%';\n\t\tdiv.style.background = 'white';\n\t\tdiv.style.cursor = 'move';\n\t\t\n\t\tif (document.documentMode == 8)\n\t\t{\n\t\t\tdiv.style.filter = 'progid:DXImageTransform.Microsoft.alpha(opacity=100)';\n\t\t}\n\t\t\n\t\tvar wnd = new mxWindow(\n\t\t\tmxResources.get(this.outlineResource) ||\n\t\t\tthis.outlineResource,\n\t\t\tdiv, 600, 480, 200, 200, false);\n\t\t\t\t\n\t\t// Creates the outline in the specified div\n\t\t// and links it to the existing graph\n\t\tvar outline = new mxOutline(this.graph, div);\t\t\t\n\t\twnd.setClosable(true);\n\t\twnd.setResizable(true);\n\t\twnd.destroyOnClose = false;\n\t\t\n\t\twnd.addListener(mxEvent.RESIZE_END, function()\n\t\t{\n\t\t\toutline.update();\n\t\t});\n\t\t\n\t\tthis.outline = wnd;\n\t\tthis.outline.outline = outline;\n\t}\n\t\n\t// Finally shows the outline\n\tthis.outline.setVisible(true);\n\tthis.outline.outline.update(true);\n};\n\t\t\n/**\n * Function: setMode\n *\n * Puts the graph into the specified mode. The following modenames are\n * supported:\n * \n * select - Selects using the left mouse button, new connections\n * are disabled.\n * connect - Selects using the left mouse button or creates new\n * connections if mouse over cell hotspot. See <mxConnectionHandler>.\n * pan - Pans using the left mouse button, new connections are disabled.\n */\nmxEditor.prototype.setMode = function(modename)\n{\n\tif (modename == 'select')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(false);\n\t}\n\telse if (modename == 'connect')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = false;\n\t\tthis.graph.setConnectable(true);\n\t}\n\telse if (modename == 'pan')\n\t{\n\t\tthis.graph.panningHandler.useLeftButtonForPanning = true;\n\t\tthis.graph.setConnectable(false);\n\t}\n};\n\n/**\n * Function: createPopupMenu\n * \n * Uses <popupHandler> to create the menu in the graph's\n * panning handler. The redirection is setup in\n * <setToolbarContainer>.\n */\nmxEditor.prototype.createPopupMenu = function (menu, cell, evt)\n{\n\tthis.popupHandler.createMenu(this, menu, cell, evt);\n};\n\n/**\n * Function: createEdge\n * \n * Uses <defaultEdge> as the prototype for creating new edges\n * in the connection handler of the graph. The style of the\n * edge will be overridden with the value returned by\n * <getEdgeStyle>.\n */\nmxEditor.prototype.createEdge = function (source, target)\n{\n\t// Clones the defaultedge prototype\n\tvar e = null;\n\t\n\tif (this.defaultEdge != null)\n\t{\n\t\tvar model = this.graph.getModel();\n\t\te = model.cloneCell(this.defaultEdge);\n\t}\n\telse\n\t{\n\t\te = new mxCell('');\n\t\te.setEdge(true);\n\t\t\n\t\tvar geo = new mxGeometry();\n\t\tgeo.relative = true;\n\t\te.setGeometry(geo);\n\t}\n\t\n\t// Overrides the edge style\n\tvar style = this.getEdgeStyle();\n\t\n\tif (style != null)\n\t{\n\t\te.setStyle(style);\n\t}\n\t\n\treturn e;\n};\n\n/**\n * Function: getEdgeStyle\n * \n * Returns a string identifying the style of new edges.\n * The function is used in <createEdge> when new edges\n * are created in the graph.\n */\nmxEditor.prototype.getEdgeStyle = function ()\n{\n\treturn this.defaultEdgeStyle;\n};\n\n/**\n * Function: consumeCycleAttribute\n * \n * Returns the next attribute in <cycleAttributeValues>\n * or null, if not attribute should be used in the\n * specified cell.\n */\nmxEditor.prototype.consumeCycleAttribute = function (cell)\n{\n\treturn (this.cycleAttributeValues != null &&\n\t\tthis.cycleAttributeValues.length > 0 &&\n\t\tthis.graph.isSwimlane(cell)) ?\n\t\tthis.cycleAttributeValues[this.cycleAttributeIndex++ %\n\t\t\tthis.cycleAttributeValues.length] : null;\n};\n\n/**\n * Function: cycleAttribute\n * \n * Uses the returned value from <consumeCycleAttribute>\n * as the value for the <cycleAttributeName> key in\n * the given cell's style.\n */\nmxEditor.prototype.cycleAttribute = function (cell)\n{\n\tif (this.cycleAttributeName != null)\n\t{\n\t\tvar value = this.consumeCycleAttribute(cell);\n\t\t\n\t\tif (value != null)\n\t\t{\n\t\t\tcell.setStyle(cell.getStyle()+';'+\n\t\t\t\tthis.cycleAttributeName+'='+value);\n\t\t}\n\t}\n};\n\n/**\n * Function: addVertex\n * \n * Adds the given vertex as a child of parent at the specified\n * x and y coordinate and fires an <addVertex> event.\n */\nmxEditor.prototype.addVertex = function (parent, vertex, x, y)\n{\n\tvar model = this.graph.getModel();\n\t\n\twhile (parent != null && !this.graph.isValidDropTarget(parent))\n\t{\n\t\tparent = model.getParent(parent);\n\t}\n\t\n\tparent = (parent != null) ? parent : this.graph.getSwimlaneAt(x, y);\n\tvar scale = this.graph.getView().scale;\n\t\n\tvar geo = model.getGeometry(vertex);\n\tvar pgeo = model.getGeometry(parent);\n\t\n\tif (this.graph.isSwimlane(vertex) &&\n\t\t!this.graph.swimlaneNesting)\n\t{\n\t\tparent = null;\n\t}\n\telse if (parent == null && this.swimlaneRequired)\n\t{\n\t\treturn null;\n\t}\n\telse if (parent != null && pgeo != null)\n\t{\n\t\t// Keeps vertex inside parent\n\t\tvar state = this.graph.getView().getState(parent);\n\t\t\n\t\tif (state != null)\n\t\t{\t\t\t\n\t\t\tx -= state.origin.x * scale;\n\t\t\ty -= state.origin.y * scale;\n\t\t\t\n\t\t\tif (this.graph.isConstrainedMoving)\n\t\t\t{\n\t\t\t\tvar width = geo.width;\n\t\t\t\tvar height = geo.height;\t\t\t\t\n\t\t\t\tvar tmp = state.x+state.width;\n\t\t\t\t\n\t\t\t\tif (x+width > tmp)\n\t\t\t\t{\n\t\t\t\t\tx -= x+width - tmp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp = state.y+state.height;\n\t\t\t\t\n\t\t\t\tif (y+height > tmp)\n\t\t\t\t{\n\t\t\t\t\ty -= y+height - tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (pgeo != null)\n\t\t{\n\t\t\tx -= pgeo.x*scale;\n\t\t\ty -= pgeo.y*scale;\n\t\t}\n\t}\n\t\n\tgeo = geo.clone();\n\tgeo.x = this.graph.snap(x / scale -\n\t\tthis.graph.getView().translate.x -\n\t\tthis.graph.gridSize/2);\n\tgeo.y = this.graph.snap(y / scale -\n\t\tthis.graph.getView().translate.y -\n\t\tthis.graph.gridSize/2);\n\tvertex.setGeometry(geo);\n\t\n\tif (parent == null)\n\t{\n\t\tparent = this.graph.getDefaultParent();\n\t}\n\n\tthis.cycleAttribute(vertex);\n\tthis.fireEvent(new mxEventObject(mxEvent.BEFORE_ADD_VERTEX,\n\t\t\t'vertex', vertex, 'parent', parent));\n\n\tmodel.beginUpdate();\n\ttry\n\t{\n\t\tvertex = this.graph.addCell(vertex, parent);\n\t\t\n\t\tif (vertex != null)\n\t\t{\n\t\t\tthis.graph.constrainChild(vertex);\n\t\t\t\n\t\t\tthis.fireEvent(new mxEventObject(mxEvent.ADD_VERTEX, 'vertex', vertex));\n\t\t}\n\t}\n\tfinally\n\t{\n\t\tmodel.endUpdate();\n\t}\n\t\n\tif (vertex != null)\n\t{\n\t\tthis.graph.setSelectionCell(vertex);\n\t\tthis.graph.scrollCellToVisible(vertex);\n\t\tthis.fireEvent(new mxEventObject(mxEvent.AFTER_ADD_VERTEX, 'vertex', vertex));\n\t}\n\t\n\treturn vertex;\n};\n\n/**\n * Function: destroy\n * \n * Removes the editor and all its associated resources. This does not\n * normally need to be called, it is called automatically when the window\n * unloads.\n */\nmxEditor.prototype.destroy = function ()\n{\n\tif (!this.destroyed)\n\t{\n\t\tthis.destroyed = true;\n\n\t\tif (this.tasks != null)\n\t\t{\n\t\t\tthis.tasks.destroy();\n\t\t}\n\t\t\n\t\tif (this.outline != null)\n\t\t{\n\t\t\tthis.outline.destroy();\n\t\t}\n\t\t\n\t\tif (this.properties != null)\n\t\t{\n\t\t\tthis.properties.destroy();\n\t\t}\n\t\t\n\t\tif (this.keyHandler != null)\n\t\t{\n\t\t\tthis.keyHandler.destroy();\n\t\t}\n\t\t\n\t\tif (this.rubberband != null)\n\t\t{\n\t\t\tthis.rubberband.destroy();\n\t\t}\n\t\t\n\t\tif (this.toolbar != null)\n\t\t{\n\t\t\tthis.toolbar.destroy();\n\t\t}\n\t\t\n\t\tif (this.graph != null)\n\t\t{\n\t\t\tthis.graph.destroy();\n\t\t}\n\t\n\t\tthis.status = null;\n\t\tthis.templates = null;\n\t}\n};\n\n__mxOutput.mxEditor = typeof mxEditor !== 'undefined' ? mxEditor : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nvar mxCodecRegistry =\n{\n\t/**\n\t * Class: mxCodecRegistry\n\t *\n\t * Singleton class that acts as a global registry for codecs.\n\t *\n\t * Adding an <mxCodec>:\n\t *\n\t * 1. Define a default codec with a new instance of the \n\t * object to be handled.\n\t *\n\t * (code)\n\t * var codec = new mxObjectCodec(new mxGraphModel());\n\t * (end)\n\t *\n\t * 2. Define the functions required for encoding and decoding\n\t * objects.\n\t *\n\t * (code)\n\t * codec.encode = function(enc, obj) { ... }\n\t * codec.decode = function(dec, node, into) { ... }\n\t * (end)\n\t *\n\t * 3. Register the codec in the <mxCodecRegistry>.\n\t *\n\t * (code)\n\t * mxCodecRegistry.register(codec);\n\t * (end)\n\t *\n\t * <mxObjectCodec.decode> may be used to either create a new \n\t * instance of an object or to configure an existing instance, \n\t * in which case the into argument points to the existing\n\t * object. In this case, we say the codec \"configures\" the\n\t * object.\n\t * \n\t * Variable: codecs\n\t *\n\t * Maps from constructor names to codecs.\n\t */\n\tcodecs: [],\n\t\n\t/**\n\t * Variable: aliases\n\t *\n\t * Maps from classnames to codecnames.\n\t */\n\taliases: [],\n\n\t/**\n\t * Function: register\n\t *\n\t * Registers a new codec and associates the name of the template\n\t * constructor in the codec with the codec object.\n\t *\n\t * Parameters:\n\t *\n\t * codec - <mxObjectCodec> to be registered.\n\t */\n\tregister: function(codec)\n\t{\n\t\tif (codec != null)\n\t\t{\n\t\t\tvar name = codec.getName();\n\t\t\tmxCodecRegistry.codecs[name] = codec;\n\t\t\t\n\t\t\tvar classname = mxUtils.getFunctionName(codec.template.constructor);\n\n\t\t\tif (classname != name)\n\t\t\t{\n\t\t\t\tmxCodecRegistry.addAlias(classname, name);\n\t\t\t}\n\t\t}\n\n\t\treturn codec;\n\t},\n\n\t/**\n\t * Function: addAlias\n\t *\n\t * Adds an alias for mapping a classname to a codecname.\n\t */\n\taddAlias: function(classname, codecname)\n\t{\n\t\tmxCodecRegistry.aliases[classname] = codecname;\n\t},\n\n\t/**\n\t * Function: getCodec\n\t *\n\t * Returns a codec that handles objects that are constructed\n\t * using the given constructor.\n\t *\n\t * Parameters:\n\t *\n\t * ctor - JavaScript constructor function. \n\t */\n\tgetCodec: function(ctor)\n\t{\n\t\tvar codec = null;\n\t\t\n\t\tif (ctor != null)\n\t\t{\n\t\t\tvar name = mxUtils.getFunctionName(ctor);\n\t\t\tvar tmp = mxCodecRegistry.aliases[name];\n\t\t\t\n\t\t\tif (tmp != null)\n\t\t\t{\n\t\t\t\tname = tmp;\n\t\t\t}\n\t\t\t\n\t\t\tcodec = mxCodecRegistry.codecs[name];\n\t\t\t\n\t\t\t// Registers a new default codec for the given constructor\n\t\t\t// if no codec has been previously defined.\n\t\t\tif (codec == null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tcodec = new mxObjectCodec(new ctor());\n\t\t\t\t\tmxCodecRegistry.register(codec);\n\t\t\t\t}\n\t\t\t\tcatch (e)\n\t\t\t\t{\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn codec;\n\t}\n\n};\n\n__mxOutput.mxCodecRegistry = typeof mxCodecRegistry !== 'undefined' ? mxCodecRegistry : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxCodec\n *\n * XML codec for JavaScript object graphs. See <mxObjectCodec> for a\n * description of the general encoding/decoding scheme. This class uses the\n * codecs registered in <mxCodecRegistry> for encoding/decoding each object.\n * \n * References:\n * \n * In order to resolve references, especially forward references, the mxCodec\n * constructor must be given the document that contains the referenced\n * elements.\n *\n * Examples:\n *\n * The following code is used to encode a graph model.\n *\n * (code)\n * var encoder = new mxCodec();\n * var result = encoder.encode(graph.getModel());\n * var xml = mxUtils.getXml(result);\n * (end)\n * \n * Example:\n * \n * Using the code below, an XML document is decoded into an existing model. The\n * document may be obtained using one of the functions in mxUtils for loading\n * an XML file, eg. <mxUtils.get>, or using <mxUtils.parseXml> for parsing an\n * XML string.\n * \n * (code)\n * var doc = mxUtils.parseXml(xmlString);\n * var codec = new mxCodec(doc);\n * codec.decode(doc.documentElement, graph.getModel());\n * (end)\n * \n * Example:\n * \n * This example demonstrates parsing a list of isolated cells into an existing\n * graph model. Note that the cells do not have a parent reference so they can\n * be added anywhere in the cell hierarchy after parsing.\n * \n * (code)\n * var xml = '<root><mxCell id=\"2\" value=\"Hello,\" vertex=\"1\"><mxGeometry x=\"20\" y=\"20\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"3\" value=\"World!\" vertex=\"1\"><mxGeometry x=\"200\" y=\"150\" width=\"80\" height=\"30\" as=\"geometry\"/></mxCell><mxCell id=\"4\" value=\"\" edge=\"1\" source=\"2\" target=\"3\"><mxGeometry relative=\"1\" as=\"geometry\"/></mxCell></root>';\n * var doc = mxUtils.parseXml(xml);\n * var codec = new mxCodec(doc);\n * var elt = doc.documentElement.firstChild;\n * var cells = [];\n * \n * while (elt != null)\n * {\n *   cells.push(codec.decode(elt));\n *   elt = elt.nextSibling;\n * }\n * \n * graph.addCells(cells);\n * (end)\n * \n * Example:\n * \n * Using the following code, the selection cells of a graph are encoded and the\n * output is displayed in a dialog box.\n * \n * (code)\n * var enc = new mxCodec();\n * var cells = graph.getSelectionCells();\n * mxUtils.alert(mxUtils.getPrettyXml(enc.encode(cells)));\n * (end)\n * \n * Newlines in the XML can be converted to <br>, in which case a '<br>' argument\n * must be passed to <mxUtils.getXml> as the second argument.\n * \n * Debugging:\n * \n * For debugging I/O you can use the following code to get the sequence of\n * encoded objects:\n * \n * (code)\n * var oldEncode = mxCodec.prototype.encode;\n * mxCodec.prototype.encode = function(obj)\n * {\n *   mxLog.show();\n *   mxLog.debug('mxCodec.encode: obj='+mxUtils.getFunctionName(obj.constructor));\n *   \n *   return oldEncode.apply(this, arguments);\n * };\n * (end)\n * \n * Note that the I/O system adds object codecs for new object automatically. For\n * decoding those objects, the constructor should be written as follows:\n * \n * (code)\n * var MyObj = function(name)\n * {\n *   // ...\n * };\n * (end)\n * \n * Constructor: mxCodec\n *\n * Constructs an XML encoder/decoder for the specified\n * owner document.\n *\n * Parameters:\n *\n * document - Optional XML document that contains the data.\n * If no document is specified then a new document is created\n * using <mxUtils.createXmlDocument>.\n */\nfunction mxCodec(document)\n{\n\tthis.document = document || mxUtils.createXmlDocument();\n\tthis.objects = [];\n};\n\n/**\n * Variable: document\n *\n * The owner document of the codec.\n */\nmxCodec.prototype.document = null;\n\n/**\n * Variable: objects\n *\n * Maps from IDs to objects.\n */\nmxCodec.prototype.objects = null;\n\n/**\n * Variable: elements\n * \n * Lookup table for resolving IDs to elements.\n */\nmxCodec.prototype.elements = null;\n\n/**\n * Variable: encodeDefaults\n *\n * Specifies if default values should be encoded. Default is false.\n */\nmxCodec.prototype.encodeDefaults = false;\n\n\n/**\n * Function: putObject\n * \n * Assoiates the given object with the given ID and returns the given object.\n * \n * Parameters\n * \n * id - ID for the object to be associated with.\n * obj - Object to be associated with the ID.\n */\nmxCodec.prototype.putObject = function(id, obj)\n{\n\tthis.objects[id] = obj;\n\t\n\treturn obj;\n};\n\n/**\n * Function: getObject\n *\n * Returns the decoded object for the element with the specified ID in\n * <document>. If the object is not known then <lookup> is used to find an\n * object. If no object is found, then the element with the respective ID\n * from the document is parsed using <decode>.\n */\nmxCodec.prototype.getObject = function(id)\n{\n\tvar obj = null;\n\n\tif (id != null)\n\t{\n\t\tobj = this.objects[id];\n\t\t\n\t\tif (obj == null)\n\t\t{\n\t\t\tobj = this.lookup(id);\n\t\t\t\n\t\t\tif (obj == null)\n\t\t\t{\n\t\t\t\tvar node = this.getElementById(id);\n\t\t\t\t\n\t\t\t\tif (node != null)\n\t\t\t\t{\n\t\t\t\t\tobj = this.decode(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: lookup\n *\n * Hook for subclassers to implement a custom lookup mechanism for cell IDs.\n * This implementation always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.lookup = function(id)\n * {\n *   return model.getCell(id);\n * };\n * (end)\n *\n * Parameters:\n *\n * id - ID of the object to be returned.\n */\nmxCodec.prototype.lookup = function(id)\n{\n\treturn null;\n};\n\n/**\n * Function: getElementById\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.getElementById = function(id)\n{\n\tthis.updateElements();\n\t\n\treturn this.elements[id];\n};\n\n/**\n * Function: updateElements\n *\n * Returns the element with the given ID from <document>.\n *\n * Parameters:\n *\n * id - String that contains the ID.\n */\nmxCodec.prototype.updateElements = function()\n{\n\tif (this.elements == null)\n\t{\n\t\tthis.elements = new Object();\n\t\t\n\t\tif (this.document.documentElement != null)\n\t\t{\n\t\t\tthis.addElement(this.document.documentElement);\n\t\t}\n\t}\n};\n\n/**\n * Function: addElement\n *\n * Adds the given element to <elements> if it has an ID.\n */\nmxCodec.prototype.addElement = function(node)\n{\n\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tif (this.elements[id] == null)\n\t\t\t{\n\t\t\t\tthis.elements[id] = node;\n\t\t\t}\n\t\t\telse if (this.elements[id] != node)\n\t\t\t{\n\t\t\t\tthrow new Error(id + ': Duplicate ID');\n\t\t\t}\n\t\t}\n\t}\n\t\n\tnode = node.firstChild;\n\t\n\twhile (node != null)\n\t{\n\t\tthis.addElement(node);\n\t\tnode = node.nextSibling;\n\t}\n};\n\n/**\n * Function: getId\n *\n * Returns the ID of the specified object. This implementation\n * calls <reference> first and if that returns null handles\n * the object as an <mxCell> by returning their IDs using\n * <mxCell.getId>. If no ID exists for the given cell, then\n * an on-the-fly ID is generated using <mxCellPath.create>.\n *\n * Parameters:\n *\n * obj - Object to return the ID for.\n */\nmxCodec.prototype.getId = function(obj)\n{\n\tvar id = null;\n\t\n\tif (obj != null)\n\t{\n\t\tid = this.reference(obj);\n\t\t\n\t\tif (id == null && obj instanceof mxCell)\n\t\t{\n\t\t\tid = obj.getId();\n\t\t\t\n\t\t\tif (id == null)\n\t\t\t{\n\t\t\t\t// Uses an on-the-fly Id\n\t\t\t\tid = mxCellPath.create(obj);\n\t\t\t\t\n\t\t\t\tif (id.length == 0)\n\t\t\t\t{\n\t\t\t\t\tid = 'root';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Function: reference\n *\n * Hook for subclassers to implement a custom method\n * for retrieving IDs from objects. This implementation\n * always returns null.\n *\n * Example:\n *\n * (code)\n * var codec = new mxCodec();\n * codec.reference = function(obj)\n * {\n *   return obj.getCustomId();\n * };\n * (end)\n *\n * Parameters:\n *\n * obj - Object whose ID should be returned.\n */\nmxCodec.prototype.reference = function(obj)\n{\n\treturn null;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns the resulting\n * XML node.\n *\n * Parameters:\n *\n * obj - Object to be encoded. \n */\nmxCodec.prototype.encode = function(obj)\n{\n\tvar node = null;\n\t\n\tif (obj != null && obj.constructor != null)\n\t{\n\t\tvar enc = mxCodecRegistry.getCodec(obj.constructor);\n\t\t\n\t\tif (enc != null)\n\t\t{\n\t\t\tnode = enc.encode(this, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (mxUtils.isNode(obj))\n\t\t\t{\n\t\t\t\tnode = mxUtils.importNode(this.document, obj, true);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t    \t\tmxLog.warn('mxCodec.encode: No codec for ' + mxUtils.getFunctionName(obj.constructor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Decodes the given XML node. The optional \"into\"\n * argument specifies an existing object to be\n * used. If no object is given, then a new instance\n * is created using the constructor from the codec.\n *\n * The function returns the passed in object or\n * the new instance if no object was given.\n *\n * Parameters:\n *\n * node - XML node to be decoded.\n * into - Optional object to be decodec into.\n */\nmxCodec.prototype.decode = function(node, into)\n{\n\tthis.updateElements();\n\tvar obj = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\tvar ctor = null;\n\t\t\n\t\ttry\n\t\t{\n\t\t\tctor = window[node.nodeName];\n\t\t}\n\t\tcatch (err)\n\t\t{\n\t\t\t// ignore\n\t\t}\n\t\t\n\t\tvar dec = mxCodecRegistry.getCodec(ctor);\n\t\t\n\t\tif (dec != null)\n\t\t{\n\t\t\tobj = dec.decode(this, node, into);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj = node.cloneNode(true);\n\t\t\tobj.removeAttribute('as');\n\t\t}\n\t}\n\t\n\treturn obj;\n};\n\n/**\n * Function: encodeCell\n *\n * Encoding of cell hierarchies is built-into the core, but\n * is a higher-level function that needs to be explicitely\n * used by the respective object encoders (eg. <mxModelCodec>,\n * <mxChildChangeCodec> and <mxRootChangeCodec>). This\n * implementation writes the given cell and its children as a\n * (flat) sequence into the given node. The children are not\n * encoded if the optional includeChildren is false. The\n * function is in charge of adding the result into the\n * given node and has no return value.\n *\n * Parameters:\n *\n * cell - <mxCell> to be encoded.\n * node - Parent XML node to add the encoded cell into.\n * includeChildren - Optional boolean indicating if the\n * function should include all descendents. Default is true. \n */\nmxCodec.prototype.encodeCell = function(cell, node, includeChildren)\n{\n\tnode.appendChild(this.encode(cell));\n\t\n\tif (includeChildren == null || includeChildren)\n\t{\n\t\tvar childCount = cell.getChildCount();\n\t\t\n\t\tfor (var i = 0; i < childCount; i++)\n\t\t{\n\t\t\tthis.encodeCell(cell.getChildAt(i), node);\n\t\t}\n\t}\n};\n\n/**\n * Function: isCellCodec\n * \n * Returns true if the given codec is a cell codec. This uses\n * <mxCellCodec.isCellCodec> to check if the codec is of the\n * given type.\n */\nmxCodec.prototype.isCellCodec = function(codec)\n{\n\tif (codec != null && typeof(codec.isCellCodec) == 'function')\n\t{\n\t\treturn codec.isCellCodec();\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: decodeCell\n *\n * Decodes cells that have been encoded using inversion, ie.\n * where the user object is the enclosing node in the XML,\n * and restores the group and graph structure in the cells.\n * Returns a new <mxCell> instance that represents the\n * given node.\n *\n * Parameters:\n *\n * node - XML node that contains the cell data.\n * restoreStructures - Optional boolean indicating whether\n * the graph structure should be restored by calling insert\n * and insertEdge on the parent and terminals, respectively.\n * Default is true.\n */\nmxCodec.prototype.decodeCell = function(node, restoreStructures)\n{\n\trestoreStructures = (restoreStructures != null) ? restoreStructures : true;\n\tvar cell = null;\n\t\n\tif (node != null && node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t{\n\t\t// Tries to find a codec for the given node name. If that does\n\t\t// not return a codec then the node is the user object (an XML node\n\t\t// that contains the mxCell, aka inversion).\n\t\tvar decoder = mxCodecRegistry.getCodec(node.nodeName);\n\t\t\n\t\t// Tries to find the codec for the cell inside the user object.\n\t\t// This assumes all node names inside the user object are either\n\t\t// not registered or they correspond to a class for cells.\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tvar child = node.firstChild;\n\t\t\t\n\t\t\twhile (child != null && !this.isCellCodec(decoder))\n\t\t\t{\n\t\t\t\tdecoder = mxCodecRegistry.getCodec(child.nodeName);\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (!this.isCellCodec(decoder))\n\t\t{\n\t\t\tdecoder = mxCodecRegistry.getCodec(mxCell);\n\t\t}\n\n\t\tcell = decoder.decode(this, node);\n\t\t\n\t\tif (restoreStructures)\n\t\t{\n\t\t\tthis.insertIntoGraph(cell);\n\t\t}\n\t}\n\t\n\treturn cell;\n};\n\n/**\n * Function: insertIntoGraph\n *\n * Inserts the given cell into its parent and terminal cells.\n */\nmxCodec.prototype.insertIntoGraph = function(cell)\n{\n\tvar parent = cell.parent;\n\tvar source = cell.getTerminal(true);\n\tvar target = cell.getTerminal(false);\n\n\t// Fixes possible inconsistencies during insert into graph\n\tcell.setTerminal(null, false);\n\tcell.setTerminal(null, true);\n\tcell.parent = null;\n\t\n\tif (parent != null)\n\t{\n\t\tif (parent == cell)\n\t\t{\n\t\t\tthrow new Error(parent.id + ': Self Reference');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tparent.insert(cell);\n\t\t}\n\t}\n\n\tif (source != null)\n\t{\n\t\tsource.insertEdge(cell, true);\n\t}\n\n\tif (target != null)\n\t{\n\t\ttarget.insertEdge(cell, false);\n\t}\n};\n\n/**\n * Function: setAttribute\n *\n * Sets the attribute on the specified node to value. This is a\n * helper method that makes sure the attribute and value arguments\n * are not null.\n *\n * Parameters:\n *\n * node - XML node to set the attribute for.\n * attributes - Attributename to be set.\n * value - New value of the attribute.\n */\nmxCodec.prototype.setAttribute = function(node, attribute, value)\n{\n\tif (attribute != null && value != null)\n\t{\n\t\tnode.setAttribute(attribute, value);\n\t}\n};\n\n__mxOutput.mxCodec = typeof mxCodec !== 'undefined' ? mxCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxObjectCodec\n *\n * Generic codec for JavaScript objects that implements a mapping between\n * JavaScript objects and XML nodes that maps each field or element to an\n * attribute or child node, and vice versa.\n * \n * Atomic Values:\n * \n * Consider the following example.\n * \n * (code)\n * var obj = new Object();\n * obj.foo = \"Foo\";\n * obj.bar = \"Bar\";\n * (end)\n * \n * This object is encoded into an XML node using the following.\n * \n * (code)\n * var enc = new mxCodec();\n * var node = enc.encode(obj);\n * (end)\n * \n * The output of the encoding may be viewed using <mxLog> as follows.\n * \n * (code)\n * mxLog.show();\n * mxLog.debug(mxUtils.getPrettyXml(node));\n * (end)\n * \n * Finally, the result of the encoding looks as follows.\n * \n * (code)\n * <Object foo=\"Foo\" bar=\"Bar\"/>\n * (end)\n * \n * In the above output, the foo and bar fields have been mapped to attributes\n * with the same names, and the name of the constructor was used for the\n * nodename.\n * \n * Booleans:\n *\n * Since booleans are numbers in JavaScript, all boolean values are encoded\n * into 1 for true and 0 for false. The decoder also accepts the string true\n * and false for boolean values.\n * \n * Objects:\n * \n * The above scheme is applied to all atomic fields, that is, to all non-object\n * fields of an object. For object fields, a child node is created with a\n * special attribute that contains the fieldname. This special attribute is\n * called \"as\" and hence, as is a reserved word that should not be used for a\n * fieldname.\n * \n * Consider the following example where foo is an object and bar is an atomic\n * property of foo.\n * \n * (code)\n * var obj = {foo: {bar: \"Bar\"}};\n * (end)\n * \n * This will be mapped to the following XML structure by mxObjectCodec.\n * \n * (code)\n * <Object>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Object>\n * (end)\n * \n * In the above output, the inner Object node contains the as-attribute that\n * specifies the fieldname in the enclosing object. That is, the field foo was\n * mapped to a child node with an as-attribute that has the value foo.\n * \n * Arrays:\n * \n * Arrays are special objects that are either associative, in which case each\n * key, value pair is treated like a field where the key is the fieldname, or\n * they are a sequence of atomic values and objects, which is mapped to a\n * sequence of child nodes. For object elements, the above scheme is applied\n * without the use of the special as-attribute for creating each child. For\n * atomic elements, a special add-node is created with the value stored in the\n * value-attribute.\n * \n * For example, the following array contains one atomic value and one object\n * with a field called bar. Furthermore it contains two associative entries\n * called bar with an atomic value, and foo with an object value.\n * \n * (code)\n * var obj = [\"Bar\", {bar: \"Bar\"}];\n * obj[\"bar\"] = \"Bar\";\n * obj[\"foo\"] = {bar: \"Bar\"};\n * (end)\n * \n * This array is represented by the following XML nodes.\n * \n * (code)\n * <Array bar=\"Bar\">\n *   <add value=\"Bar\"/>\n *   <Object bar=\"Bar\"/>\n *   <Object bar=\"Bar\" as=\"foo\"/>\n * </Array>\n * (end)\n * \n * The Array node name is the name of the constructor. The additional\n * as-attribute in the last child contains the key of the associative entry,\n * whereas the second last child is part of the array sequence and does not\n * have an as-attribute.\n * \n * References:\n * \n * Objects may be represented as child nodes or attributes with ID values,\n * which are used to lookup the object in a table within <mxCodec>. The\n * <isReference> function is in charge of deciding if a specific field should\n * be encoded as a reference or not. Its default implementation returns true if\n * the fieldname is in <idrefs>, an array of strings that is used to configure\n * the <mxObjectCodec>.\n * \n * Using this approach, the mapping does not guarantee that the referenced\n * object itself exists in the document. The fields that are encoded as\n * references must be carefully chosen to make sure all referenced objects\n * exist in the document, or may be resolved by some other means if necessary.\n * \n * For example, in the case of the graph model all cells are stored in a tree\n * whose root is referenced by the model's root field. A tree is a structure\n * that is well suited for an XML representation, however, the additional edges\n * in the graph model have a reference to a source and target cell, which are\n * also contained in the tree. To handle this case, the source and target cell\n * of an edge are treated as references, whereas the children are treated as\n * objects. Since all cells are contained in the tree and no edge references a\n * source or target outside the tree, this setup makes sure all referenced\n * objects are contained in the document.\n * \n * In the case of a tree structure we must further avoid infinite recursion by\n * ignoring the parent reference of each child. This is done by returning true\n * in <isExcluded>, whose default implementation uses the array of excluded\n * fieldnames passed to the mxObjectCodec constructor.\n * \n * References are only used for cells in mxGraph. For defining other\n * referencable object types, the codec must be able to work out the ID of an\n * object. This is done by implementing <mxCodec.reference>. For decoding a\n * reference, the XML node with the respective id-attribute is fetched from the\n * document, decoded, and stored in a lookup table for later reference. For\n * looking up external objects, <mxCodec.lookup> may be implemented.\n * \n * Expressions:\n * \n * For decoding JavaScript expressions, the add-node may be used with a text\n * content that contains the JavaScript expression. For example, the following\n * creates a field called foo in the enclosing object and assigns it the value\n * of <mxConstants.ALIGN_LEFT>.\n * \n * (code)\n * <Object>\n *   <add as=\"foo\">mxConstants.ALIGN_LEFT</add>\n * </Object>\n * (end)\n * \n * The resulting object has a field called foo with the value \"left\". Its XML\n * representation looks as follows.\n * \n * (code)\n * <Object foo=\"left\"/>\n * (end)\n * \n * This means the expression is evaluated at decoding time and the result of\n * the evaluation is stored in the respective field. Valid expressions are all\n * JavaScript expressions, including function definitions, which are mapped to\n * functions on the resulting object.\n * \n * Expressions are only evaluated if <allowEval> is true.\n * \n * Constructor: mxObjectCodec\n *\n * Constructs a new codec for the specified template object.\n * The variables in the optional exclude array are ignored by\n * the codec. Variables in the optional idrefs array are\n * turned into references in the XML. The optional mapping\n * may be used to map from variable names to XML attributes.\n * The argument is created as follows:\n *\n * (code)\n * var mapping = new Object();\n * mapping['variableName'] = 'attribute-name';\n * (end)\n *\n * Parameters:\n *\n * template - Prototypical instance of the object to be\n * encoded/decoded.\n * exclude - Optional array of fieldnames to be ignored.\n * idrefs - Optional array of fieldnames to be converted to/from\n * references.\n * mapping - Optional mapping from field- to attributenames.\n */\nfunction mxObjectCodec(template, exclude, idrefs, mapping)\n{\n\tthis.template = template;\n\t\n\tthis.exclude = (exclude != null) ? exclude : [];\n\tthis.idrefs = (idrefs != null) ? idrefs : [];\n\tthis.mapping = (mapping != null) ? mapping : [];\n\t\n\tthis.reverse = new Object();\n\t\n\tfor (var i in this.mapping)\n\t{\n\t\tthis.reverse[this.mapping[i]] = i;\n\t}\n};\n\n/**\n * Variable: allowEval\n *\n * Static global switch that specifies if expressions in arrays are allowed.\n * Default is false. NOTE: Enabling this carries a possible security risk.\n */\nmxObjectCodec.allowEval = false;\n\n/**\n * Variable: template\n *\n * Holds the template object associated with this codec.\n */\nmxObjectCodec.prototype.template = null;\n\n/**\n * Variable: exclude\n *\n * Array containing the variable names that should be\n * ignored by the codec.\n */\nmxObjectCodec.prototype.exclude = null;\n\n/**\n * Variable: idrefs\n *\n * Array containing the variable names that should be\n * turned into or converted from references. See\n * <mxCodec.getId> and <mxCodec.getObject>.\n */\nmxObjectCodec.prototype.idrefs = null;\n\n/**\n * Variable: mapping\n *\n * Maps from from fieldnames to XML attribute names.\n */\nmxObjectCodec.prototype.mapping = null;\n\n/**\n * Variable: reverse\n *\n * Maps from from XML attribute names to fieldnames.\n */\nmxObjectCodec.prototype.reverse = null;\n\n/**\n * Function: getName\n * \n * Returns the name used for the nodenames and lookup of the codec when\n * classes are encoded and nodes are decoded. For classes to work with\n * this the codec registry automatically adds an alias for the classname\n * if that is different than what this returns. The default implementation\n * returns the classname of the template class.\n */\nmxObjectCodec.prototype.getName = function()\n{\n\treturn mxUtils.getFunctionName(this.template.constructor);\n};\n\n/**\n * Function: cloneTemplate\n * \n * Returns a new instance of the template for this codec.\n */\nmxObjectCodec.prototype.cloneTemplate = function()\n{\n\treturn new this.template.constructor();\n};\n\n/**\n * Function: getFieldName\n * \n * Returns the fieldname for the given attributename.\n * Looks up the value in the <reverse> mapping or returns\n * the input if there is no reverse mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getFieldName = function(attributename)\n{\n\tif (attributename != null)\n\t{\n\t\tvar mapped = this.reverse[attributename];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tattributename = mapped;\n\t\t}\n\t}\n\t\n\treturn attributename;\n};\n\n/**\n * Function: getAttributeName\n * \n * Returns the attributename for the given fieldname.\n * Looks up the value in the <mapping> or returns\n * the input if there is no mapping for the\n * given name.\n */\nmxObjectCodec.prototype.getAttributeName = function(fieldname)\n{\n\tif (fieldname != null)\n\t{\n\t\tvar mapped = this.mapping[fieldname];\n\t\t\n\t\tif (mapped != null)\n\t\t{\n\t\t\tfieldname = mapped;\n\t\t}\n\t}\n\t\n\treturn fieldname;\n};\n\n/**\n * Function: isExcluded\n *\n * Returns true if the given attribute is to be ignored by the codec. This\n * implementation returns true if the given fieldname is in <exclude> or\n * if the fieldname equals <mxObjectIdentity.FIELD_NAME>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field.\n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isExcluded = function(obj, attr, value, write)\n{\n\treturn attr == mxObjectIdentity.FIELD_NAME ||\n\t\tmxUtils.indexOf(this.exclude, attr) >= 0;\n};\n\n/**\n * Function: isReference\n *\n * Returns true if the given fieldname is to be treated\n * as a textual reference (ID). This implementation returns\n * true if the given fieldname is in <idrefs>.\n *\n * Parameters:\n *\n * obj - Object instance that contains the field.\n * attr - Fieldname of the field.\n * value - Value of the field. \n * write - Boolean indicating if the field is being encoded or decoded.\n * Write is true if the field is being encoded, else it is being decoded.\n */\nmxObjectCodec.prototype.isReference = function(obj, attr, value, write)\n{\n\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n};\n\n/**\n * Function: encode\n *\n * Encodes the specified object and returns a node\n * representing then given object. Calls <beforeEncode>\n * after creating the node and <afterEncode> with the \n * resulting node after processing.\n *\n * Enc is a reference to the calling encoder. It is used\n * to encode complex objects and create references.\n *\n * This implementation encodes all variables of an\n * object according to the following rules:\n *\n * - If the variable name is in <exclude> then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getId>\n * is used to replace the object with its ID.\n * - The variable name is mapped using <mapping>.\n * - If obj is an array and the variable name is numeric\n * (ie. an index) then it is not encoded.\n * - If the value is an object, then the codec is used to\n * create a child node with the variable name encoded into\n * the \"as\" attribute.\n * - Else, if <encodeDefaults> is true or the value differs\n * from the template value, then ...\n * - ... if obj is not an array, then the value is mapped to\n * an attribute.\n * - ... else if obj is an array, the value is mapped to an\n * add child with a value attribute or a text child node,\n * if the value is a function.\n *\n * If no ID exists for a variable in <idrefs> or if an object\n * cannot be encoded, a warning is issued using <mxLog.warn>.\n *\n * Returns the resulting XML node that represents the given\n * object.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n */\nmxObjectCodec.prototype.encode = function(enc, obj)\n{\n\tvar node = enc.document.createElement(this.getName());\n\t\n\tobj = this.beforeEncode(enc, obj, node);\n\tthis.encodeObject(enc, obj, node);\n\t\n\treturn this.afterEncode(enc, obj, node);\n};\n\t\n/**\n * Function: encodeObject\n *\n * Encodes the value of each member in then given obj into the given node using\n * <encodeValue>.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeObject = function(enc, obj, node)\n{\n\tenc.setAttribute(node, 'id', enc.getId(obj));\n\t\n    for (var i in obj)\n    {\n\t\tvar name = i;\n\t\tvar value = obj[name];\n\t\t\n    \tif (value != null && !this.isExcluded(obj, name, value, true))\n    \t{\n    \t\tif (mxUtils.isInteger(name))\n    \t\t{\n    \t\t\tname = null;\n    \t\t}\n    \t\t\n    \t\tthis.encodeValue(enc, obj, name, value, node);\n    \t}\n    }\n};\n\n/**\n * Function: encodeValue\n * \n * Converts the given value according to the mappings\n * and id-refs in this codec and uses <writeAttribute>\n * to write the attribute into the given node.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object whose property is going to be encoded.\n * name - XML node that contains the encoded object.\n * value - Value of the property to be encoded.\n * node - XML node that contains the encoded object.\n */\nmxObjectCodec.prototype.encodeValue = function(enc, obj, name, value, node)\n{\n\tif (value != null)\n\t{\n\t\tif (this.isReference(obj, name, value, true))\n\t\t{\n\t\t\tvar tmp = enc.getId(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.encode: No ID for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tvar defaultValue = this.template[name];\n\t\t\n\t\t// Checks if the value is a default value and\n\t\t// the name is correct\n\t\tif (name == null || enc.encodeDefaults || defaultValue != value)\n\t\t{\n\t\t\tname = this.getAttributeName(name);\n\t\t\tthis.writeAttribute(enc, obj, name, value, node);\t\n\t\t}\n\t}\n};\n\n/**\n * Function: writeAttribute\n * \n * Writes the given value into node using <writePrimitiveAttribute>\n * or <writeComplexAttribute> depending on the type of the value.\n */\nmxObjectCodec.prototype.writeAttribute = function(enc, obj, name, value, node)\n{\n\tif (typeof(value) != 'object' /* primitive type */)\n\t{\n\t\tthis.writePrimitiveAttribute(enc, obj, name, value, node);\n\t}\n\telse /* complex type */\n\t{\n\t\tthis.writeComplexAttribute(enc, obj, name, value, node);\n\t}\n};\n\n/**\n * Function: writePrimitiveAttribute\n * \n * Writes the given value as an attribute of the given node.\n */\nmxObjectCodec.prototype.writePrimitiveAttribute = function(enc, obj, name, value, node)\n{\n\tvalue = this.convertAttributeToXml(enc, obj, name, value, node);\n\t\n\tif (name == null)\n\t{\n\t\tvar child = enc.document.createElement('add');\n\t\t\n\t\tif (typeof(value) == 'function')\n\t\t{\n    \t\tchild.appendChild(enc.document.createTextNode(value));\n    \t}\n    \telse\n    \t{\n    \t\tenc.setAttribute(child, 'value', value);\n    \t}\n    \t\n\t\tnode.appendChild(child);\n\t}\n\telse if (typeof(value) != 'function')\n\t{\n    \tenc.setAttribute(node, name, value);\n\t}\t\t\n};\n\t\n/**\n * Function: writeComplexAttribute\n * \n * Writes the given value as a child node of the given node.\n */\nmxObjectCodec.prototype.writeComplexAttribute = function(enc, obj, name, value, node)\n{\n\tvar child = enc.encode(value);\n\t\n\tif (child != null)\n\t{\n\t\tif (name != null)\n\t\t{\n    \t\tchild.setAttribute('as', name);\n    \t}\n    \t\n    \tnode.appendChild(child);\n\t}\n\telse\n\t{\n\t\tmxLog.warn('mxObjectCodec.encode: No node for ' + this.getName() + '.' + name + ': ' + value);\n\t}\n};\n\n/**\n * Function: convertAttributeToXml\n * \n * Converts true to \"1\" and false to \"0\" is <isBooleanAttribute> returns true.\n * All other values are not converted.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value to be converted.\n */\nmxObjectCodec.prototype.convertAttributeToXml = function(enc, obj, name, value)\n{\n\t// Makes sure to encode boolean values as numeric values\n\tif (this.isBooleanAttribute(enc, obj, name, value))\n\t{\t\n\t\t// Checks if the value is true (do not use the value as is, because\n\t\t// this would check if the value is not null, so 0 would be true)\n\t\tvalue = (value == true) ? '1' : '0';\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isBooleanAttribute\n * \n * Returns true if the given object attribute is a boolean value.\n * \n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Objec to convert the attribute for.\n * name - Name of the attribute to be converted.\n * value - Value of the attribute to be converted.\n */\nmxObjectCodec.prototype.isBooleanAttribute = function(enc, obj, name, value)\n{\n\treturn (typeof(value.length) == 'undefined' && (value == true || value == false));\n};\n\n/**\n * Function: convertAttributeFromXml\n * \n * Converts booleans and numeric values to the respective types. Values are\n * numeric if <isNumericAttribute> returns true.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.convertAttributeFromXml = function(dec, attr, obj)\n{\n\tvar value = attr.value;\n\t\n\tif (this.isNumericAttribute(dec, attr, obj))\n\t{\n\t\tvalue = parseFloat(value);\n\t\t\n\t\tif (isNaN(value) || !isFinite(value))\n\t\t{\n\t\t\tvalue = 0;\n\t\t}\n\t}\n\t\n\treturn value;\n};\n\n/**\n * Function: isNumericAttribute\n * \n * Returns true if the given XML attribute is or should be a numeric value.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be converted.\n * obj - Objec to convert the attribute for.\n */\nmxObjectCodec.prototype.isNumericAttribute = function(dec, attr, obj)\n{\n\t// Handles known numeric attributes for generic objects\n\tvar result = (obj.constructor == mxGeometry &&\n\t\t(attr.name == 'x' || attr.name == 'y' ||\n\t\tattr.name == 'width' || attr.name == 'height')) ||\n\t\t(obj.constructor == mxPoint &&\n\t\t(attr.name == 'x' || attr.name == 'y')) ||\n\t\tmxUtils.isNumeric(attr.value);\n\t\n\treturn result;\n};\n\n/**\n * Function: beforeEncode\n *\n * Hook for subclassers to pre-process the object before\n * encoding. This returns the input object. The return\n * value of this function is used in <encode> to perform\n * the default encoding into the given node.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node to encode the object into.\n */\nmxObjectCodec.prototype.beforeEncode = function(enc, obj, node)\n{\n\treturn obj;\n};\n\n/**\n * Function: afterEncode\n *\n * Hook for subclassers to post-process the node\n * for the given object after encoding and return the\n * post-processed node. This implementation returns \n * the input node. The return value of this method\n * is returned to the encoder from <encode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * obj - Object to be encoded.\n * node - XML node that represents the default encoding.\n */\nmxObjectCodec.prototype.afterEncode = function(enc, obj, node)\n{\n\treturn node;\n};\n\n/**\n * Function: decode\n *\n * Parses the given node into the object or returns a new object\n * representing the given node.\n *\n * Dec is a reference to the calling decoder. It is used to decode\n * complex objects and resolve references.\n *\n * If a node has an id attribute then the object cache is checked for the\n * object. If the object is not yet in the cache then it is constructed\n * using the constructor of <template> and cached in <mxCodec.objects>.\n *\n * This implementation decodes all attributes and childs of a node\n * according to the following rules:\n *\n * - If the variable name is in <exclude> or if the attribute name is \"id\"\n * or \"as\" then it is ignored.\n * - If the variable name is in <idrefs> then <mxCodec.getObject> is used\n * to replace the reference with an object.\n * - The variable name is mapped using a reverse <mapping>.\n * - If the value has a child node, then the codec is used to create a\n * child object with the variable name taken from the \"as\" attribute.\n * - If the object is an array and the variable name is empty then the\n * value or child object is appended to the array.\n * - If an add child has no value or the object is not an array then\n * the child text content is evaluated using <mxUtils.eval>.\n *\n * For add nodes where the object is not an array and the variable name\n * is defined, the default mechanism is used, allowing to override/add\n * methods as follows:\n *\n * (code)\n * <Object>\n *   <add as=\"hello\"><![CDATA[\n *     function(arg1) {\n *       mxUtils.alert('Hello '+arg1);\n *     }\n *   ]]></add>\n * </Object>\n * (end) \n *\n * If no object exists for an ID in <idrefs> a warning is issued\n * using <mxLog.warn>.\n *\n * Returns the resulting object that represents the given XML node\n * or the object given to the method as the into parameter.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * into - Optional objec to encode the node into.\n */\nmxObjectCodec.prototype.decode = function(dec, node, into)\n{\n\tvar id = node.getAttribute('id');\n\tvar obj = dec.objects[id];\n\t\n\tif (obj == null)\n\t{\n\t\tobj = into || this.cloneTemplate();\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.putObject(id, obj);\n\t\t}\n\t}\n\t\n\tnode = this.beforeDecode(dec, node, obj);\n\tthis.decodeNode(dec, node, obj);\n\t\n    return this.afterDecode(dec, node, obj);\n};\t\n\n/**\n * Function: decodeNode\n * \n * Calls <decodeAttributes> and <decodeChildren> for the given node.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeNode = function(dec, node, obj)\n{\n\tif (node != null)\n\t{\n\t\tthis.decodeAttributes(dec, node, obj);\n\t\tthis.decodeChildren(dec, node, obj);\n\t}\n};\n\n/**\n * Function: decodeAttributes\n * \n * Decodes all attributes of the given node using <decodeAttribute>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeAttributes = function(dec, node, obj)\n{\n\tvar attrs = node.attributes;\n\t\n\tif (attrs != null)\n\t{\n\t\tfor (var i = 0; i < attrs.length; i++)\n\t\t{\n\t\t\tthis.decodeAttribute(dec, attrs[i], obj);\n\t\t}\n\t}\n};\n\n/**\n * Function: isIgnoredAttribute\n * \n * Returns true if the given attribute should be ignored. This implementation\n * returns true if the attribute name is \"as\" or \"id\".\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.isIgnoredAttribute = function(dec, attr, obj)\n{\n\treturn attr.nodeName == 'as' || attr.nodeName == 'id';\n};\n\n/**\n * Function: decodeAttribute\n * \n * Reads the given attribute into the specified object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * attr - XML attribute to be decoded.\n * obj - Objec to encode the attribute into.\n */\t\nmxObjectCodec.prototype.decodeAttribute = function(dec, attr, obj)\n{\n\tif (!this.isIgnoredAttribute(dec, attr, obj))\n\t{\n\t\tvar name = attr.nodeName;\n\t\t\n\t\t// Converts the string true and false to their boolean values.\n\t\t// This may require an additional check on the obj to see if\n\t\t// the existing field is a boolean value or uninitialized, in\n\t\t// which case we may want to convert true and false to a string.\n\t\tvar value = this.convertAttributeFromXml(dec, attr, obj);\n\t\tvar fieldname = this.getFieldName(name);\n\t\t\n\t\tif (this.isReference(obj, fieldname, value, false))\n\t\t{\n\t\t\tvar tmp = dec.getObject(value);\n\t\t\t\n\t\t\tif (tmp == null)\n\t\t\t{\n\t\t    \tmxLog.warn('mxObjectCodec.decode: No object for ' +\n\t\t    \t\tthis.getName() + '.' + name + '=' + value);\n\t\t    \treturn; // exit\n\t\t    }\n\t\t    \n\t\t    value = tmp;\n\t\t}\n\n\t\tif (!this.isExcluded(obj, name, value, false))\n\t\t{\n\t\t\t//mxLog.debug(mxUtils.getFunctionName(obj.constructor)+'.'+name+'='+value);\n\t\t\tobj[name] = value;\n\t\t}\n\t}\n};\n\n/**\n * Function: decodeChildren\n * \n * Decodes all children of the given node using <decodeChild>.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChildren = function(dec, node, obj)\n{\n\tvar child = node.firstChild;\n\t\n\twhile (child != null)\n\t{\n\t\tvar tmp = child.nextSibling;\n\t\t\n\t\tif (child.nodeType == mxConstants.NODETYPE_ELEMENT &&\n\t\t\t!this.processInclude(dec, child, obj))\n\t\t{\n\t\t\tthis.decodeChild(dec, child, obj);\n\t\t}\n\t\t\n\t\tchild = tmp;\n\t}\n};\n\n/**\n * Function: decodeChild\n * \n * Reads the specified child into the given object.\n * \n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * child - XML child element to be decoded.\n * obj - Objec to encode the node into.\n */\t\nmxObjectCodec.prototype.decodeChild = function(dec, child, obj)\n{\n\tvar fieldname = this.getFieldName(child.getAttribute('as'));\n\t\n\tif (fieldname == null || !this.isExcluded(obj, fieldname, child, false))\n\t{\n\t\tvar template = this.getFieldTemplate(obj, fieldname, child);\n\t\tvar value = null;\n\t\t\n\t\tif (child.nodeName == 'add')\n\t\t{\n\t\t\tvalue = child.getAttribute('value');\n\t\t\t\n\t\t\tif (value == null && mxObjectCodec.allowEval)\n\t\t\t{\n\t\t\t\tvalue = mxUtils.eval(mxUtils.getTextContent(child));\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvalue = dec.decode(child, template);\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tthis.addObjectValue(obj, fieldname, value, template);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tthrow new Error(e.message + ' for ' + child.nodeName);\n\t\t}\n\t}\n};\n\n/**\n * Function: getFieldTemplate\n * \n * Returns the template instance for the given field. This returns the\n * value of the field, null if the value is an array or an empty collection\n * if the value is a collection. The value is then used to populate the\n * field for a new instance. For strongly typed languages it may be\n * required to override this to return the correct collection instance\n * based on the encoded child.\n */\t\nmxObjectCodec.prototype.getFieldTemplate = function(obj, fieldname, child)\n{\n\tvar template = obj[fieldname];\n\t\n\t// Non-empty arrays are replaced completely\n    if (template instanceof Array && template.length > 0)\n    {\n        template = null;\n    }\n    \n    return template;\n};\n\n/**\n * Function: addObjectValue\n * \n * Sets the decoded child node as a value of the given object. If the\n * object is a map, then the value is added with the given fieldname as a\n * key. If the fieldname is not empty, then setFieldValue is called or\n * else, if the object is a collection, the value is added to the\n * collection. For strongly typed languages it may be required to\n * override this with the correct code to add an entry to an object.\n */\t\nmxObjectCodec.prototype.addObjectValue = function(obj, fieldname, value, template)\n{\n\tif (value != null && value != template)\n\t{\n\t\tif (fieldname != null && fieldname.length > 0)\n\t\t{\n\t\t\tobj[fieldname] = value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tobj.push(value);\n\t\t}\n\t\t//mxLog.debug('Decoded '+mxUtils.getFunctionName(obj.constructor)+'.'+fieldname+': '+value);\n\t}\n};\n\n/**\n * Function: processInclude\n *\n * Returns true if the given node is an include directive and\n * executes the include by decoding the XML document. Returns\n * false if the given node is not an include directive.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the encoding/decoding process.\n * node - XML node to be checked.\n * into - Optional object to pass-thru to the codec.\n */\nmxObjectCodec.prototype.processInclude = function(dec, node, into)\n{\n\tif (node.nodeName == 'include')\n\t{\n\t\tvar name = node.getAttribute('name');\n\t\t\n\t\tif (name != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar xml = mxUtils.load(name).getDocumentElement();\n\t\t\t\t\n\t\t\t\tif (xml != null)\n\t\t\t\t{\n\t\t\t\t\tdec.decode(xml, into);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t\n\treturn false;\n};\n\n/**\n * Function: beforeDecode\n *\n * Hook for subclassers to pre-process the node for\n * the specified object and return the node to be\n * used for further processing by <decode>.\n * The object is created based on the template in the \n * calling method and is never null. This implementation\n * returns the input node. The return value of this\n * function is used in <decode> to perform\n * the default decoding into the given object.\n *\n * Parameters:\n *\n * dec - <mxCodec> that controls the decoding process.\n * node - XML node to be decoded.\n * obj - Object to encode the node into.\n */\nmxObjectCodec.prototype.beforeDecode = function(dec, node, obj)\n{\n\treturn node;\n};\n\n/**\n * Function: afterDecode\n *\n * Hook for subclassers to post-process the object after\n * decoding. This implementation returns the given object\n * without any changes. The return value of this method\n * is returned to the decoder from <decode>.\n *\n * Parameters:\n *\n * enc - <mxCodec> that controls the encoding process.\n * node - XML node to be decoded.\n * obj - Object that represents the default decoding.\n */\nmxObjectCodec.prototype.afterDecode = function(dec, node, obj)\n{\n\treturn obj;\n};\n\n__mxOutput.mxObjectCodec = typeof mxObjectCodec !== 'undefined' ? mxObjectCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxCellCodec\n\t *\n\t * Codec for <mxCell>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - children\n\t * - edges\n\t * - overlays\n\t * - mxTransient\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t * - source\n\t * - target\n\t * \n\t * Transient fields can be added using the following code:\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).exclude.push('name_of_field');\n\t * \n\t * To subclass <mxCell>, replace the template and add an alias as\n\t * follows.\n\t * \n\t * (code)\n\t * function CustomCell(value, geometry, style)\n\t * {\n\t *   mxCell.apply(this, arguments);\n\t * }\n\t * \n\t * mxUtils.extend(CustomCell, mxCell);\n\t * \n\t * mxCodecRegistry.getCodec(mxCell).template = new CustomCell();\n\t * mxCodecRegistry.addAlias('CustomCell', 'mxCell');\n\t * (end)\n\t */\n\tvar codec = new mxObjectCodec(new mxCell(),\n\t\t['children', 'edges', 'overlays', 'mxTransient'],\n\t\t['parent', 'source', 'target']);\n\n\t/**\n\t * Function: isCellCodec\n\t *\n\t * Returns true since this is a cell codec.\n\t */\n\tcodec.isCellCodec = function()\n\t{\n\t\treturn true;\n\t};\n\n\t/**\n\t * Overidden to disable conversion of value to number.\n\t */\n\tcodec.isNumericAttribute = function(dec, attr, obj)\n\t{\n\t\treturn attr.nodeName !== 'value' && mxObjectCodec.prototype.isNumericAttribute.apply(this, arguments);\n\t};\n\t\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes user objects that are XML nodes.\n\t */ \n\tcodec.isExcluded = function(obj, attr, value, isWrite)\n\t{\n\t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n\t\t\t(isWrite && attr == 'value' &&\n\t\t\tvalue.nodeType == mxConstants.NODETYPE_ELEMENT);\n\t};\n\t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes an <mxCell> and wraps the XML up inside the\n\t * XML of the user object (inversion).\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (obj.value != null && obj.value.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Wraps the graphical annotation up in the user object (inversion)\n\t\t\t// by putting the result of the default encoding into a clone of the\n\t\t\t// user object (node type 1) and returning this cloned user object.\n\t\t\tvar tmp = node;\n\t\t\tnode = mxUtils.importNode(enc.document, obj.value, true);\n\t\t\tnode.appendChild(tmp);\n\t\t\t\n\t\t\t// Moves the id attribute to the outermost XML node, namely the\n\t\t\t// node which denotes the object boundaries in the file.\n\t\t\tvar id = tmp.getAttribute('id');\n\t\t\tnode.setAttribute('id', id);\n\t\t\ttmp.removeAttribute('id');\n\t\t}\n\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes an <mxCell> and uses the enclosing XML node as\n\t * the user object for the cell (inversion).\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tvar inner = node.cloneNode(true);\n\t\tvar classname = this.getName();\n\t\t\n\t\tif (node.nodeName != classname)\n\t\t{\n\t\t\t// Passes the inner graphical annotation node to the\n\t\t\t// object codec for further processing of the cell.\n\t\t\tvar tmp = node.getElementsByTagName(classname)[0];\n\t\t\t\n\t\t\tif (tmp != null && tmp.parentNode == node)\n\t\t\t{\n\t\t\t\tmxUtils.removeWhitespace(tmp, true);\n\t\t\t\tmxUtils.removeWhitespace(tmp, false);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\tinner = tmp;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinner = null;\n\t\t\t}\n\t\t\t\n\t\t\t// Creates the user object out of the XML node\n\t\t\tobj.value = node.cloneNode(true);\n\t\t\tvar id = obj.value.getAttribute('id');\n\t\t\t\n\t\t\tif (id != null)\n\t\t\t{\n\t\t\t\tobj.setId(id);\n\t\t\t\tobj.value.removeAttribute('id');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Uses ID from XML file as ID for cell in model\n\t\t\tobj.setId(node.getAttribute('id'));\n\t\t}\n\t\t\t\n\t\t// Preprocesses and removes all Id-references in order to use the\n\t\t// correct encoder (this) for the known references to cells (all).\n\t\tif (inner != null)\n\t\t{\n\t\t\tfor (var i = 0; i < this.idrefs.length; i++)\n\t\t\t{\n\t\t\t\tvar attr = this.idrefs[i];\n\t\t\t\tvar ref = inner.getAttribute(attr);\n\t\t\t\t\n\t\t\t\tif (ref != null)\n\t\t\t\t{\n\t\t\t\t\tinner.removeAttribute(attr);\n\t\t\t\t\tvar object = dec.objects[ref] || dec.lookup(ref);\n\t\t\t\t\t\n\t\t\t\t\tif (object == null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Needs to decode forward reference\n\t\t\t\t\t\tvar element = dec.getElementById(ref);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (element != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar decoder = mxCodecRegistry.codecs[element.nodeName] || this;\n\t\t\t\t\t\t\tobject = decoder.decode(dec, element);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj[attr] = object;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn inner;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxCellCodec = typeof mxCellCodec !== 'undefined' ? mxCellCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxModelCodec\n\t *\n\t * Codec for <mxGraphModel>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphModel());\n\n\t/**\n\t * Function: encodeObject\n\t *\n\t * Encodes the given <mxGraphModel> by writing a (flat) XML sequence of\n\t * cell nodes as produced by the <mxCellCodec>. The sequence is\n\t * wrapped-up in a node with the name root.\n\t */\n\tcodec.encodeObject = function(enc, obj, node)\n\t{\n\t\tvar rootNode = enc.document.createElement('root');\n\t\tenc.encodeCell(obj.getRoot(), rootNode);\n\t\tnode.appendChild(rootNode);\n\t};\n\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'root')\n\t\t{\n\t\t\tthis.decodeRoot(dec, child, obj);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Function: decodeRoot\n\t *\n\t * Reads the cells into the graph model. All cells\n\t * are children of the root element in the node.\n\t */\n\tcodec.decodeRoot = function(dec, root, model)\n\t{\n\t\tvar rootCell = null;\n\t\tvar tmp = root.firstChild;\n\t\t\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tvar cell = dec.decodeCell(tmp);\n\t\t\t\n\t\t\tif (cell != null && cell.getParent() == null)\n\t\t\t{\n\t\t\t\trootCell = cell;\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\n\n\t\t// Sets the root on the model if one has been decoded\n\t\tif (rootCell != null)\n\t\t{\n\t\t\tmodel.setRoot(rootCell);\n\t\t}\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxModelCodec = typeof mxModelCodec !== 'undefined' ? mxModelCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxRootChangeCodec\n\t *\n\t * Codec for <mxRootChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - root\n\t */\n\tvar codec = new mxObjectCodec(new mxRootChange(),\n\t\t['model', 'previous', 'root']);\n\n\t/**\n\t * Function: onEncode\n\t *\n\t * Encodes the child recursively.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tenc.encodeCell(obj.root, node);\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the optional children as cells\n\t * using the respective decoder.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.root = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.root;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxRootChangeCodec = typeof mxRootChangeCodec !== 'undefined' ? mxRootChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxChildChangeCodec\n\t *\n\t * Codec for <mxChildChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t * - previousIndex\n\t * - child\n\t *\n\t * Reference Fields:\n\t *\n\t * - parent\n\t */\n\tvar codec = new mxObjectCodec(new mxChildChange(),\n\t\t['model', 'child', 'previousIndex'],\n\t\t['parent', 'previous']);\n\n\t/**\n\t * Function: isReference\n\t *\n\t * Returns true for the child attribute if the child\n\t * cell had a previous parent or if we're reading the\n\t * child as an attribute rather than a child node, in\n\t * which case it's always a reference.\n\t */\n\tcodec.isReference = function(obj, attr, value, isWrite)\n\t{\n\t\tif (attr == 'child' && (!isWrite || obj.model.contains(obj.previous)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn mxUtils.indexOf(this.idrefs, attr) >= 0;\n\t};\n\n\t/**\n\t * Function: isExcluded\n\t *\n\t * Excludes references to parent or previous if not in the model.\n\t */\n  \tcodec.isExcluded = function(obj, attr, value, write)\n  \t{\n  \t\treturn mxObjectCodec.prototype.isExcluded.apply(this, arguments) ||\n  \t\t\t(write && value != null && (attr == 'previous' ||\n  \t\t\tattr == 'parent') && !obj.model.contains(value));\n  \t};\n  \t\n\t/**\n\t * Function: afterEncode\n\t *\n\t * Encodes the child recusively and adds the result\n\t * to the given node.\n\t */\n\tcodec.afterEncode = function(enc, obj, node)\n\t{\n\t\tif (this.isReference(obj, 'child', obj.child, true))\n\t\t{\n\t\t\t// Encodes as reference (id)\n\t\t\tnode.setAttribute('child', enc.getId(obj.child));\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// At this point, the encoder is no longer able to know which cells\n\t\t\t// are new, so we have to encode the complete cell hierarchy and\n\t\t\t// ignore the ones that are already there at decoding time. Note:\n\t\t\t// This can only be resolved by moving the notify event into the\n\t\t\t// execute of the edit.\n\t\t\tenc.encodeCell(obj.child, node);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the any child nodes as using the respective\n\t * codec from the registry.\n\t */\n\tcodec.beforeDecode = function(dec, node, obj)\n\t{\n\t\tif (node.firstChild != null &&\n\t\t\tnode.firstChild.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t{\n\t\t\t// Makes sure the original node isn't modified\n\t\t\tnode = node.cloneNode(true);\n\t\t\t\n\t\t\tvar tmp = node.firstChild;\n\t\t\tobj.child = dec.decodeCell(tmp, false);\n\n\t\t\tvar tmp2 = tmp.nextSibling;\n\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\ttmp = tmp2;\n\t\t\t\n\t\t\twhile (tmp != null)\n\t\t\t{\n\t\t\t\ttmp2 = tmp.nextSibling;\n\t\t\t\t\n\t\t\t\tif (tmp.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\t// Ignores all existing cells because those do not need to\n\t\t\t\t\t// be re-inserted into the model. Since the encoded version\n\t\t\t\t\t// of these cells contains the new parent, this would leave\n\t\t\t\t\t// to an inconsistent state on the model (ie. a parent\n\t\t\t\t\t// change without a call to parentForCellChanged).\n\t\t\t\t\tvar id = tmp.getAttribute('id');\n\t\t\t\t\t\n\t\t\t\t\tif (dec.lookup(id) == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tdec.decodeCell(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttmp.parentNode.removeChild(tmp);\n\t\t\t\ttmp = tmp2;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar childRef = node.getAttribute('child');\n\t\t\tobj.child = dec.getObject(childRef);\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\t\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores object state in the child change.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Cells are decoded here after a complete transaction so the previous\n\t\t// parent must be restored on the cell for the case where the cell was\n\t\t// added. This is needed for the local model to identify the cell as a\n\t\t// new cell and register the ID.\n        if (obj.child != null)\n        {\n            if (obj.child.parent != null && obj.previous != null &&\n                obj.child.parent != obj.previous)\n            {\n                obj.previous = obj.child.parent;\n            }\n\n            obj.child.parent = obj.previous;\n            obj.previous = obj.parent;\n            obj.previousIndex = obj.index;\n        }\n\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxChildChangeCodec = typeof mxChildChangeCodec !== 'undefined' ? mxChildChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxTerminalChangeCodec\n\t *\n\t * Codec for <mxTerminalChange>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec> and\n\t * the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - model\n\t * - previous\n\t *\n\t * Reference Fields:\n\t *\n\t * - cell\n\t * - terminal\n\t */\n\tvar codec = new mxObjectCodec(new mxTerminalChange(),\n\t\t['model', 'previous'], ['cell', 'terminal']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\tobj.previous = obj.terminal;\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxTerminalChangeCodec = typeof mxTerminalChangeCodec !== 'undefined' ? mxTerminalChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxGenericChangeCodec\n *\n * Codec for <mxValueChange>s, <mxStyleChange>s, <mxGeometryChange>s,\n * <mxCollapseChange>s and <mxVisibleChange>s. This class is created\n * and registered dynamically at load time and used implicitely\n * via <mxCodec> and the <mxCodecRegistry>.\n *\n * Transient Fields:\n *\n * - model\n * - previous\n *\n * Reference Fields:\n *\n * - cell\n * \n * Constructor: mxGenericChangeCodec\n *\n * Factory function that creates a <mxObjectCodec> for\n * the specified change and fieldname.\n *\n * Parameters:\n *\n * obj - An instance of the change object.\n * variable - The fieldname for the change data.\n */\nvar mxGenericChangeCodec = function(obj, variable)\n{\n\tvar codec = new mxObjectCodec(obj,  ['model', 'previous'], ['cell']);\n\n\t/**\n\t * Function: afterDecode\n\t *\n\t * Restores the state by assigning the previous value.\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Allows forward references in sessions. This is a workaround\n\t\t// for the sequence of edits in mxGraph.moveCells and cellsAdded.\n\t\tif (mxUtils.isNode(obj.cell))\n\t\t{\n\t\t\tobj.cell = dec.decodeCell(obj.cell, false);\n\t\t}\n\n\t\tobj.previous = obj[variable];\n\n\t\treturn obj;\n\t};\n\t\n\treturn codec;\n};\n\n// Registers the codecs\nmxCodecRegistry.register(mxGenericChangeCodec(new mxValueChange(), 'value'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxStyleChange(), 'style'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxGeometryChange(), 'geometry'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCollapseChange(), 'collapsed'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxVisibleChange(), 'visible'));\nmxCodecRegistry.register(mxGenericChangeCodec(new mxCellAttributeChange(), 'value'));\n\n__mxOutput.mxGenericChangeCodec = typeof mxGenericChangeCodec !== 'undefined' ? mxGenericChangeCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphCodec\n\t *\n\t * Codec for <mxGraph>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - graphListeners\n\t * - eventListeners\n\t * - view\n\t * - container\n\t * - cellRenderer\n\t * - editor\n\t * - selection\n\t */\n\treturn new mxObjectCodec(new mxGraph(),\n\t\t['graphListeners', 'eventListeners', 'view', 'container',\n\t\t'cellRenderer', 'editor', 'selection']);\n\n}());\n\n__mxOutput.mxGraphCodec = typeof mxGraphCodec !== 'undefined' ? mxGraphCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxGraphViewCodec\n\t *\n\t * Custom encoder for <mxGraphView>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only writes views\n\t * into a XML format that can be used to create an image for\n\t * the graph, that is, it contains absolute coordinates with\n\t * computed perimeters, edge styles and cell styles.\n\t */\n\tvar codec = new mxObjectCodec(new mxGraphView());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes the given <mxGraphView> using <encodeCell>\n\t * starting at the model's root. This returns the\n\t * top-level graph node of the recursive encoding.\n\t */\n\tcodec.encode = function(enc, view)\n\t{\n\t\treturn this.encodeCell(enc, view,\n\t\t\tview.graph.getModel().getRoot());\n\t};\n\n\t/**\n\t * Function: encodeCell\n\t *\n\t * Recursively encodes the specifed cell. Uses layer\n\t * as the default nodename. If the cell's parent is\n\t * null, then graph is used for the nodename. If\n\t * <mxGraphModel.isEdge> returns true for the cell,\n\t * then edge is used for the nodename, else if\n\t * <mxGraphModel.isVertex> returns true for the cell,\n\t * then vertex is used for the nodename.\n\t *\n\t * <mxGraph.getLabel> is used to create the label\n\t * attribute for the cell. For graph nodes and vertices\n\t * the bounds are encoded into x, y, width and height.\n\t * For edges the points are encoded into a points\n\t * attribute as a space-separated list of comma-separated\n\t * coordinate pairs (eg. x0,y0 x1,y1 ... xn,yn). All\n\t * values from the cell style are added as attribute\n\t * values to the node. \n\t */\n\tcodec.encodeCell = function(enc, view, cell)\n\t{\n\t\tvar model = view.graph.getModel();\n\t\tvar state = view.getState(cell);\n\t\tvar parent = model.getParent(cell);\n\t\t\n\t\tif (parent == null || state != null)\n\t\t{\n\t\t\tvar childCount = model.getChildCount(cell);\n\t\t\tvar geo = view.graph.getCellGeometry(cell);\n\t\t\tvar name = null;\n\t\t\t\n\t\t\tif (parent == model.getRoot())\n\t\t\t{\n\t\t\t\tname = 'layer';\n\t\t\t}\n\t\t\telse if (parent == null)\n\t\t\t{\n\t\t\t\tname = 'graph';\n\t\t\t}\n\t\t\telse if (model.isEdge(cell))\n\t\t\t{\n\t\t\t\tname = 'edge';\n\t\t\t}\n\t\t\telse if (childCount > 0 && geo != null)\n\t\t\t{\n\t\t\t\tname = 'group';\n\t\t\t}\n\t\t\telse if (model.isVertex(cell))\n\t\t\t{\n\t\t\t\tname = 'vertex';\n\t\t\t}\n\t\t\t\n\t\t\tif (name != null)\n\t\t\t{\n\t\t\t\tvar node = enc.document.createElement(name);\n\t\t\t\tvar lab = view.graph.getLabel(cell);\n\t\t\t\t\n\t\t\t\tif (lab != null)\n\t\t\t\t{\n\t\t\t\t\tnode.setAttribute('label', view.graph.getLabel(cell));\n\t\t\t\t\t\n\t\t\t\t\tif (view.graph.isHtmlLabel(cell))\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('html', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tif (parent == null)\n\t\t\t\t{\n\t\t\t\t\tvar bounds = view.getGraphBounds();\n\t\t\t\t\t\n\t\t\t\t\tif (bounds != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(bounds.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(bounds.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(bounds.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(bounds.height));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.setAttribute('scale', view.scale);\n\t\t\t\t}\n\t\t\t\telse if (state != null && geo != null)\n\t\t\t\t{\n\t\t\t\t\t// Writes each key, value in the style pair to an attribute\n\t\t\t\t    for (var i in state.style)\n\t\t\t\t    {\n\t\t\t\t    \tvar value = state.style[i];\n\t\t\n\t\t\t\t    \t// Tries to turn objects and functions into strings\n\t\t\t\t\t    if (typeof(value) == 'function' &&\n\t\t\t\t\t\t\ttypeof(value) == 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t    \tvalue = mxStyleRegistry.getName(value);\n\t\t\t\t        }\n\t\t\t\t    \t\n\t\t\t\t    \tif (value != null &&\n\t\t\t\t    \t\ttypeof(value) != 'function' &&\n\t\t\t\t\t\t\ttypeof(value) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute(i, value);\n\t\t\t\t        }\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tvar abs = state.absolutePoints;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the list of points into one attribute\n\t\t\t\t\tif (abs != null && abs.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar pts = Math.round(abs[0].x) + ',' + Math.round(abs[0].y);\n\t\t\n\t\t\t\t\t\tfor (var i=1; i<abs.length; i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpts += ' ' + Math.round(abs[i].x) + ',' +\n\t\t\t\t\t\t\t\tMath.round(abs[i].y);\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\tnode.setAttribute('points', pts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Writes the bounds into 4 attributes\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.setAttribute('x', Math.round(state.x));\n\t\t\t\t\t\tnode.setAttribute('y', Math.round(state.y));\n\t\t\t\t\t\tnode.setAttribute('width', Math.round(state.width));\n\t\t\t\t\t\tnode.setAttribute('height', Math.round(state.height));\t\t\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tvar offset = state.absoluteOffset;\n\t\t\t\t\t\n\t\t\t\t\t// Writes the offset into 2 attributes\n\t\t\t\t\tif (offset != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (offset.x != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dx', Math.round(offset.x));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (offset.y != 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnode.setAttribute('dy', Math.round(offset.y));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t\tfor (var i=0; i<childCount; i++)\n\t\t\t\t{\n\t\t\t\t\tvar childNode = this.encodeCell(enc,\n\t\t\t\t\t\t\tview, model.getChildAt(cell, i));\n\t\t\t\t\t\n\t\t\t\t\tif (childNode != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn node;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxGraphViewCodec = typeof mxGraphViewCodec !== 'undefined' ? mxGraphViewCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxStylesheetCodec\n *\n * Codec for <mxStylesheet>s. This class is created and registered\n * dynamically at load time and used implicitely via <mxCodec>\n * and the <mxCodecRegistry>.\n */\nvar mxStylesheetCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxStylesheet());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Encodes a stylesheet. See <decode> for a description of the\n\t * format.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\tvar node = enc.document.createElement(this.getName());\n\t\t\n\t\tfor (var i in obj.styles)\n\t\t{\n\t\t\tvar style = obj.styles[i];\n\t\t\tvar styleNode = enc.document.createElement('add');\n\t\t\t\n\t\t\tif (i != null)\n\t\t\t{\n\t\t\t\tstyleNode.setAttribute('as', i);\n\t\t\t\t\n\t\t\t\tfor (var j in style)\n\t\t\t\t{\n\t\t\t\t\tvar value = this.getStringValue(j, style[j]);\n\t\t\t\t\t\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar entry = enc.document.createElement('add');\n\t\t\t\t\t\tentry.setAttribute('value', value);\n\t\t\t\t\t\tentry.setAttribute('as', j);\n\t\t\t\t\t\tstyleNode.appendChild(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (styleNode.childNodes.length > 0)\n\t\t\t\t{\n\t\t\t\t\tnode.appendChild(styleNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t    return node;\n\t};\n\n\t/**\n\t * Function: getStringValue\n\t *\n\t * Returns the string for encoding the given value.\n\t */\n\tcodec.getStringValue = function(key, value)\n\t{\n\t\tvar type = typeof(value);\n\t\t\n\t\tif (type == 'function')\n\t\t{\n\t\t\tvalue = mxStyleRegistry.getName(value);\n\t\t}\n\t\telse if (type == 'object')\n\t\t{\n\t\t\tvalue = null;\n\t\t}\n\t\t\n\t\treturn value;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new style.\n\t *\n\t * Attributes:\n\t *\n\t * as - Name of the style.\n\t * extend - Name of the style to inherit from.\n\t *\n\t * Each node contains another sequence of add and remove nodes with the following\n\t * attributes:\n\t *\n\t * as - Name of the style (see <mxConstants>).\n\t * value - Value for the style.\n\t *\n\t * Instead of the value-attribute, one can put Javascript expressions into\n\t * the node as follows if <mxStylesheetCodec.allowEval> is true:\n\t * <add as=\"perimeter\">mxPerimeter.RectanglePerimeter</add>\n\t *\n\t * A remove node will remove the entry with the name given in the as-attribute\n\t * from the style.\n\t * \n\t * Example:\n\t *\n\t * (code)\n\t * <mxStylesheet as=\"stylesheet\">\n\t *   <add as=\"text\">\n\t *     <add as=\"fontSize\" value=\"12\"/>\n\t *   </add>\n\t *   <add as=\"defaultVertex\" extend=\"text\">\n\t *     <add as=\"shape\" value=\"rectangle\"/>\n\t *   </add>\n\t * </mxStylesheet>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar obj = into || new this.template.constructor();\n\t\tvar id = node.getAttribute('id');\n\t\t\n\t\tif (id != null)\n\t\t{\n\t\t\tdec.objects[id] = obj;\n\t\t}\n\t\t\n\t\tnode = node.firstChild;\n\t\t\n\t\twhile (node != null)\n\t\t{\n\t\t\tif (!this.processInclude(dec, node, obj) && node.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\n\t\t\t\tif (as != null)\n\t\t\t\t{\n\t\t\t\t\tvar extend = node.getAttribute('extend');\n\t\t\t\t\tvar style = (extend != null) ? mxUtils.clone(obj.styles[extend]) : null;\n\t\t\t\t\t\n\t\t\t\t\tif (style == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (extend != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmxLog.warn('mxStylesheetCodec.decode: stylesheet ' +\n\t\t\t\t\t\t\t\textend + ' not found to extend');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstyle = new Object();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar entry = node.firstChild;\n\t\t\t\t\t\n\t\t\t\t\twhile (entry != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entry.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t \tvar key = entry.getAttribute('as');\n\t\t\t\t\t\t \t\n\t\t\t\t\t\t \tif (entry.nodeName == 'add')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \tvar text = mxUtils.getTextContent(entry);\n\t\t\t\t\t\t\t \tvar value = null;\n\t\t\t\t\t\t\t \t\n\t\t\t\t\t\t\t \tif (text != null && text.length > 0 && mxStylesheetCodec.allowEval)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = mxUtils.eval(text);\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t \telse\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tvalue = entry.getAttribute('value');\n\t\t\t\t\t\t\t \t\t\n\t\t\t\t\t\t\t \t\tif (mxUtils.isNumeric(value))\n\t\t\t\t\t\t\t \t\t{\n\t\t\t\t\t\t\t\t\t\tvalue = parseFloat(value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t \t}\n\n\t\t\t\t\t\t\t \tif (value != null)\n\t\t\t\t\t\t\t \t{\n\t\t\t\t\t\t\t \t\tstyle[key] = value;\n\t\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t \telse if (entry.nodeName == 'remove')\n\t\t\t\t\t\t \t{\n\t\t\t\t\t\t \t\tdelete style[key];\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tentry = entry.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.putCellStyle(as, style);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\t\n\t\treturn obj;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input.\n */\nmxStylesheetCodec.allowEval = true;\n\n__mxOutput.mxStylesheetCodec = typeof mxStylesheetCodec !== 'undefined' ? mxStylesheetCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultKeyHandlerCodec\n\t *\n\t * Custom codec for configuring <mxDefaultKeyHandler>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing key handlers, it does not encode or create key handlers.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultKeyHandler());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Binds a keystroke to an actionname.\n\t *\n\t * Attributes:\n\t *\n\t * as - Keycode.\n\t * action - Actionname to execute in editor.\n\t * control - Optional boolean indicating if\n\t * \t\tthe control key must be pressed.\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <mxDefaultKeyHandler as=\"keyHandler\">\n\t *   <add as=\"88\" control=\"true\" action=\"cut\"/>\n\t *   <add as=\"67\" control=\"true\" action=\"copy\"/>\n\t *   <add as=\"86\" control=\"true\" action=\"paste\"/>\n\t * </mxDefaultKeyHandler>\n\t * (end)\n\t *\n\t * The keycodes are for the x, c and v keys.\n\t *\n\t * See also: <mxDefaultKeyHandler.bindAction>,\n\t * http://www.js-examples.com/page/tutorials__key_codes.html\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (!this.processInclude(dec, node, into) &&\n\t\t\t\t\tnode.nodeName == 'add')\n\t\t\t\t{\n\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\tvar control = node.getAttribute('control');\n\t\t\t\t\t\n\t\t\t\t\tinto.bindAction(as, action, control);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultKeyHandlerCodec = typeof mxDefaultKeyHandlerCodec !== 'undefined' ? mxDefaultKeyHandlerCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\n/**\n * Class: mxDefaultToolbarCodec\n *\n * Custom codec for configuring <mxDefaultToolbar>s. This class is created\n * and registered dynamically at load time and used implicitely via\n * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n * data for existing toolbars handlers, it does not encode or create toolbars.\n */\nvar mxDefaultToolbarCodec = mxCodecRegistry.register(function()\n{\n\tvar codec = new mxObjectCodec(new mxDefaultToolbar());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Reads a sequence of the following child nodes\n\t * and attributes:\n\t *\n\t * Child Nodes:\n\t *\n\t * add - Adds a new item to the toolbar. See below for attributes.\n\t * separator - Adds a vertical separator. No attributes.\n\t * hr - Adds a horizontal separator. No attributes.\n\t * br - Adds a linefeed. No attributes. \n\t *\n\t * Attributes:\n\t *\n\t * as - Resource key for the label.\n\t * action - Name of the action to execute in enclosing editor.\n\t * mode - Modename (see below).\n\t * template - Template name for cell insertion.\n\t * style - Optional style to override the template style.\n\t * icon - Icon (relative/absolute URL).\n\t * pressedIcon - Optional icon for pressed state (relative/absolute URL).\n\t * id - Optional ID to be used for the created DOM element.\n\t * toggle - Optional 0 or 1 to disable toggling of the element. Default is\n\t * 1 (true).\n\t *\n\t * The action, mode and template attributes are mutually exclusive. The\n\t * style can only be used with the template attribute. The add node may\n\t * contain another sequence of add nodes with as and action attributes\n\t * to create a combo box in the toolbar. If the icon is specified then\n\t * a list of the child node is expected to have its template attribute\n\t * set and the action is ignored instead.\n\t * \n\t * Nodes with a specified template may define a function to be used for\n\t * inserting the cloned template into the graph. Here is an example of such\n\t * a node:\n\t * \n\t * (code)\n\t * <add as=\"Swimlane\" template=\"swimlane\" icon=\"images/swimlane.gif\"><![CDATA[\n\t *   function (editor, cell, evt, targetCell)\n\t *   {\n\t *     var pt = mxUtils.convertPoint(\n\t *       editor.graph.container, mxEvent.getClientX(evt),\n\t *         mxEvent.getClientY(evt));\n\t *     return editor.addVertex(targetCell, cell, pt.x, pt.y);\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * In the above function, editor is the enclosing <mxEditor> instance, cell\n\t * is the clone of the template, evt is the mouse event that represents the\n\t * drop and targetCell is the cell under the mousepointer where the drop\n\t * occurred. The targetCell is retrieved using <mxGraph.getCellAt>.\n\t *\n\t * Futhermore, nodes with the mode attribute may define a function to\n\t * be executed upon selection of the respective toolbar icon. In the\n\t * example below, the default edge style is set when this specific\n\t * connect-mode is activated:\n\t *\n\t * (code)\n\t * <add as=\"connect\" mode=\"connect\"><![CDATA[\n\t *   function (editor)\n\t *   {\n\t *     if (editor.defaultEdge != null)\n\t *     {\n\t *       editor.defaultEdge.style = 'straightEdge';\n\t *     }\n\t *   }\n\t * ]]></add>\n\t * (end)\n\t * \n\t * Both functions require <mxDefaultToolbarCodec.allowEval> to be set to true.\n\t *\n\t * Modes:\n\t *\n\t * select - Left mouse button used for rubberband- & cell-selection.\n\t * connect - Allows connecting vertices by inserting new edges.\n\t * pan - Disables selection and switches to panning on the left button.\n\t *\n\t * Example:\n\t *\n\t * To add items to the toolbar:\n\t * \n\t * (code)\n\t * <mxDefaultToolbar as=\"toolbar\">\n\t *   <add as=\"save\" action=\"save\" icon=\"images/save.gif\"/>\n\t *   <br/><hr/>\n\t *   <add as=\"select\" mode=\"select\" icon=\"images/select.gif\"/>\n\t *   <add as=\"connect\" mode=\"connect\" icon=\"images/connect.gif\"/>\n\t * </mxDefaultToolbar>\n\t * (end)\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tif (into != null)\n\t\t{\n\t\t\tvar editor = into.editor;\n\t\t\tnode = node.firstChild;\n\t\t\t\n\t\t\twhile (node != null)\n\t\t\t{\n\t\t\t\tif (node.nodeType == mxConstants.NODETYPE_ELEMENT)\n\t\t\t\t{\n\t\t\t\t\tif (!this.processInclude(dec, node, into))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.nodeName == 'separator')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.addSeparator();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'br')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addBreak();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'hr')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinto.toolbar.addLine();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (node.nodeName == 'add')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar as = node.getAttribute('as');\n\t\t\t\t\t\t\tas = mxResources.get(as) || as;\n\t\t\t\t\t\t\tvar icon = node.getAttribute('icon');\n\t\t\t\t\t\t\tvar pressedIcon = node.getAttribute('pressedIcon');\n\t\t\t\t\t\t\tvar action = node.getAttribute('action');\n\t\t\t\t\t\t\tvar mode = node.getAttribute('mode');\n\t\t\t\t\t\t\tvar template = node.getAttribute('template');\n\t\t\t\t\t\t\tvar toggle = node.getAttribute('toggle') != '0';\n\t\t\t\t\t\t\tvar text = mxUtils.getTextContent(node);\n\t\t\t\t\t\t\tvar elt = null;\n\n\t\t\t\t\t\t\tif (action != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\telt = into.addItem(as, icon, action, pressedIcon);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (mode != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar funct = (mxDefaultToolbarCodec.allowEval) ? mxUtils.eval(text) : null;\n\t\t\t\t\t\t\t\telt = into.addMode(as, icon, mode, pressedIcon, funct);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (template != null || (text != null && text.length > 0))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar cell = editor.templates[template];\n\t\t\t\t\t\t\t\tvar style = node.getAttribute('style');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (cell != null && style != null)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcell = editor.graph.cloneCell(cell);\n\t\t\t\t\t\t\t\t\tcell.setStyle(style);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar insertFunction = null;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (text != null && text.length > 0 && mxDefaultToolbarCodec.allowEval)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tinsertFunction = mxUtils.eval(text);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\telt = into.addPrototype(as, icon, cell, pressedIcon, insertFunction, toggle);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar children = mxUtils.getChildNodes(node);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (children.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (icon == null)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar combo = into.addActionCombo(as);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(combo, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar act = child.getAttribute('action');\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addActionOption(combo, lab, act);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvar select = null;\n\t\t\t\t\t\t\t\t\t\tvar create = function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar template = editor.templates[select.value];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (template != null)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar clone = template.clone();\n\t\t\t\t\t\t\t\t\t\t\t\tvar style = select.options[select.selectedIndex].cellStyle;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif (style != null)\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tclone.setStyle(style);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn clone;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmxLog.warn('Template '+template+' not found');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar img = into.addPrototype(as, icon, create, null, null, toggle);\n\t\t\t\t\t\t\t\t\t\tselect = into.addCombo();\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Selects the toolbar icon if a selection change\n\t\t\t\t\t\t\t\t\t\t// is made in the corresponding combobox.\n\t\t\t\t\t\t\t\t\t\tmxEvent.addListener(select, 'change', function()\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.selectMode(img, function(evt)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar pt = mxUtils.convertPoint(editor.graph.container,\n\t\t\t\t\t\t\t\t\t\t\t\t\tmxEvent.getClientX(evt), mxEvent.getClientY(evt));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\treturn editor.addVertex(null, funct(), pt.x, pt.y);\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tinto.toolbar.noReset = false;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// Adds the entries to the combobox\n\t\t\t\t\t\t\t\t\t\tfor (var i=0; i<children.length; i++)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvar child = children[i];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tif (child.nodeName == 'separator')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tinto.addOption(select, '---');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse if (child.nodeName == 'add')\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tvar lab = child.getAttribute('as');\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = child.getAttribute('template');\n\t\t\t\t\t\t\t\t\t\t\t\tvar option = into.addOption(select, lab, tmp || template);\n\t\t\t\t\t\t\t\t\t\t\t\toption.cellStyle = child.getAttribute('style');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Assigns an ID to the created element to access it later.\n\t\t\t\t\t\t\tif (elt != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar id = node.getAttribute('id');\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (id != null && id.length > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\telt.setAttribute('id', id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n/**\n * Variable: allowEval\n * \n * Static global switch that specifies if the use of eval is allowed for\n * evaluating text content. Default is true. Set this to false if stylesheets\n * may contain user input\n */\nmxDefaultToolbarCodec.allowEval = true;\n\n__mxOutput.mxDefaultToolbarCodec = typeof mxDefaultToolbarCodec !== 'undefined' ? mxDefaultToolbarCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxDefaultPopupMenuCodec\n\t *\n\t * Custom codec for configuring <mxDefaultPopupMenu>s. This class is created\n\t * and registered dynamically at load time and used implicitely via\n\t * <mxCodec> and the <mxCodecRegistry>. This codec only reads configuration\n\t * data for existing popup menus, it does not encode or create menus. Note\n\t * that this codec only passes the configuration node to the popup menu,\n\t * which uses the config to dynamically create menus. See\n\t * <mxDefaultPopupMenu.createMenu>.\n\t */\n\tvar codec = new mxObjectCodec(new mxDefaultPopupMenu());\n\n\t/**\n\t * Function: encode\n\t *\n\t * Returns null.\n\t */\n\tcodec.encode = function(enc, obj)\n\t{\n\t\treturn null;\n\t};\n\t\n\t/**\n\t * Function: decode\n\t *\n\t * Uses the given node as the config for <mxDefaultPopupMenu>.\n\t */\n\tcodec.decode = function(dec, node, into)\n\t{\n\t\tvar inc = node.getElementsByTagName('include')[0];\n\t\t\n\t\tif (inc != null)\n\t\t{\n\t\t\tthis.processInclude(dec, inc, into);\n\t\t}\n\t\telse if (into != null)\n\t\t{\n\t\t\tinto.config = node;\n\t\t}\n\t\t\n\t\treturn into;\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxDefaultPopupMenuCodec = typeof mxDefaultPopupMenuCodec !== 'undefined' ? mxDefaultPopupMenuCodec : undefined;\n\n/**\n * Copyright (c) 2006-2015, JGraph Ltd\n * Copyright (c) 2006-2015, Gaudenz Alder\n */\nmxCodecRegistry.register(function()\n{\n\t/**\n\t * Class: mxEditorCodec\n\t *\n\t * Codec for <mxEditor>s. This class is created and registered\n\t * dynamically at load time and used implicitely via <mxCodec>\n\t * and the <mxCodecRegistry>.\n\t *\n\t * Transient Fields:\n\t *\n\t * - modified\n\t * - lastSnapshot\n\t * - ignoredChanges\n\t * - undoManager\n\t * - graphContainer\n\t * - toolbarContainer\n\t */\n\tvar codec = new mxObjectCodec(new mxEditor(),\n\t\t['modified', 'lastSnapshot', 'ignoredChanges',\n\t\t'undoManager', 'graphContainer', 'toolbarContainer']);\n\n\t/**\n\t * Function: beforeDecode\n\t *\n\t * Decodes the ui-part of the configuration node by reading\n\t * a sequence of the following child nodes and attributes\n\t * and passes the control to the default decoding mechanism:\n\t *\n\t * Child Nodes:\n\t *\n\t * stylesheet - Adds a CSS stylesheet to the document.\n\t * resource - Adds the basename of a resource bundle.\n\t * add - Creates or configures a known UI element.\n\t *\n\t * These elements may appear in any order given that the\n\t * graph UI element is added before the toolbar element\n\t * (see Known Keys).\n\t *\n\t * Attributes:\n\t *\n\t * as - Key for the UI element (see below).\n\t * element - ID for the element in the document.\n\t * style - CSS style to be used for the element or window.\n\t * x - X coordinate for the new window.\n\t * y - Y coordinate for the new window.\n\t * width - Width for the new window.\n\t * height - Optional height for the new window.\n\t * name - Name of the stylesheet (absolute/relative URL).\n\t * basename - Basename of the resource bundle (see <mxResources>).\n\t *\n\t * The x, y, width and height attributes are used to create a new\n\t * <mxWindow> if the element attribute is not specified in an add\n\t * node. The name and basename are only used in the stylesheet and\n\t * resource nodes, respectively.\n\t *\n\t * Known Keys:\n\t *\n\t * graph - Main graph element (see <mxEditor.setGraphContainer>).\n\t * title - Title element (see <mxEditor.setTitleContainer>).\n\t * toolbar - Toolbar element (see <mxEditor.setToolbarContainer>).\n\t * status - Status bar element (see <mxEditor.setStatusContainer>).\n\t *\n\t * Example:\n\t *\n\t * (code)\n\t * <ui>\n\t *   <stylesheet name=\"css/process.css\"/>\n\t *   <resource basename=\"resources/app\"/>\n\t *   <add as=\"graph\" element=\"graph\"\n\t *     style=\"left:70px;right:20px;top:20px;bottom:40px\"/>\n\t *   <add as=\"status\" element=\"status\"/>\n\t *   <add as=\"toolbar\" x=\"10\" y=\"20\" width=\"54\"/>\n\t * </ui>\n\t * (end)\n\t */\n\tcodec.afterDecode = function(dec, node, obj)\n\t{\n\t\t// Assigns the specified templates for edges\n\t\tvar defaultEdge = node.getAttribute('defaultEdge');\n\t\t\n\t\tif (defaultEdge != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultEdge');\n\t\t\tobj.defaultEdge = obj.templates[defaultEdge];\n\t\t}\n\n\t\t// Assigns the specified templates for groups\n\t\tvar defaultGroup = node.getAttribute('defaultGroup');\n\t\t\n\t\tif (defaultGroup != null)\n\t\t{\n\t\t\tnode.removeAttribute('defaultGroup');\n\t\t\tobj.defaultGroup = obj.templates[defaultGroup];\n\t\t}\n\n\t\treturn obj;\n\t};\n\t\n\t/**\n\t * Function: decodeChild\n\t * \n\t * Overrides decode child to handle special child nodes.\n\t */\t\n\tcodec.decodeChild = function(dec, child, obj)\n\t{\n\t\tif (child.nodeName == 'Array')\n\t\t{\n\t\t\tvar role = child.getAttribute('as');\n\t\t\t\n\t\t\tif (role == 'templates')\n\t\t\t{\n\t\t\t\tthis.decodeTemplates(dec, child, obj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (child.nodeName == 'ui')\n\t\t{\n\t\t\tthis.decodeUi(dec, child, obj);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tmxObjectCodec.prototype.decodeChild.apply(this, arguments);\n\t};\n\t\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeUi = function(dec, node, editor)\n\t{\n\t\tvar tmp = node.firstChild;\n\t\twhile (tmp != null)\n\t\t{\n\t\t\tif (tmp.nodeName == 'add')\n\t\t\t{\n\t\t\t\tvar as = tmp.getAttribute('as');\n\t\t\t\tvar elt = tmp.getAttribute('element');\n\t\t\t\tvar style = tmp.getAttribute('style');\n\t\t\t\tvar element = null;\n\n\t\t\t\tif (elt != null)\n\t\t\t\t{\n\t\t\t\t\telement = document.getElementById(elt);\n\t\t\t\t\t\n\t\t\t\t\tif (element != null && style != null)\n\t\t\t\t\t{\n\t\t\t\t\t\telement.style.cssText += ';' + style;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvar x = parseInt(tmp.getAttribute('x'));\n\t\t\t\t\tvar y = parseInt(tmp.getAttribute('y'));\n\t\t\t\t\tvar width = tmp.getAttribute('width');\n\t\t\t\t\tvar height = tmp.getAttribute('height');\n\n\t\t\t\t\t// Creates a new window around the element\n\t\t\t\t\telement = document.createElement('div');\n\t\t\t\t\telement.style.cssText = style;\n\t\t\t\t\t\n\t\t\t\t\tvar wnd = new mxWindow(mxResources.get(as) || as,\n\t\t\t\t\t\telement, x, y, width, height, false, true);\n\t\t\t\t\twnd.setVisible(true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// TODO: Make more generic\n\t\t\t\tif (as == 'graph')\n\t\t\t\t{\n\t\t\t\t\teditor.setGraphContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'toolbar')\n\t\t\t\t{\n\t\t\t\t\teditor.setToolbarContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'title')\n\t\t\t\t{\n\t\t\t\t\teditor.setTitleContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'status')\n\t\t\t\t{\n\t\t\t\t\teditor.setStatusContainer(element);\n\t\t\t\t}\n\t\t\t\telse if (as == 'map')\n\t\t\t\t{\n\t\t\t\t\teditor.setMapContainer(element);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'resource')\n\t\t\t{\n\t\t\t\tmxResources.add(tmp.getAttribute('basename'));\n\t\t\t}\n\t\t\telse if (tmp.nodeName == 'stylesheet')\n\t\t\t{\n\t\t\t\tmxClient.link('stylesheet', tmp.getAttribute('name'));\n\t\t\t}\n\t\t\t\n\t\t\ttmp = tmp.nextSibling;\n\t\t}\t\n\t};\n\t\n\t/**\n\t * Function: decodeTemplates\n\t *\n\t * Decodes the cells from the given node as templates.\n\t */\n\tcodec.decodeTemplates = function(dec, node, editor)\n\t{\n\t\tif (editor.templates == null)\n\t\t{\n\t\t\teditor.templates = [];\n\t\t}\n\t\t\n\t\tvar children = mxUtils.getChildNodes(node);\n\t\tfor (var j=0; j<children.length; j++)\n\t\t{\n\t\t\tvar name = children[j].getAttribute('as');\n\t\t\tvar child = children[j].firstChild;\n\t\t\t\n\t\t\twhile (child != null && child.nodeType != 1)\n\t\t\t{\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\t\n\t\t\tif (child != null)\n\t\t\t{\n\t\t\t\t// LATER: Only single cells means you need\n\t\t\t\t// to group multiple cells within another\n\t\t\t\t// cell. This should be changed to support\n\t\t\t\t// arrays of cells, or the wrapper must\n\t\t\t\t// be automatically handled in this class.\n\t\t\t\teditor.templates[name] = dec.decodeCell(child);\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// Returns the codec into the registry\n\treturn codec;\n\n}());\n\n__mxOutput.mxEditorCodec = typeof mxEditorCodec !== 'undefined' ? mxEditorCodec : undefined;\nreturn __mxOutput;\n};\n}));","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var defineProperty = require('../internals/object-define-property').f;\nvar has = require('../internals/has');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC) {\n  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {\n    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });\n  }\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.3.4',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var bind = require('../internals/bind-context');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = [].push;\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push.call(target, value); // filter\n        } else if (IS_EVERY) return false;  // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6)\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var has = require('../internals/has');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar ObjectPrototype = Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.getprototypeof\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectPrototype : null;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.github.io/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return { value: undefined, done: true };\n  }\n  if (kind == 'keys') return { value: index, done: false };\n  if (kind == 'values') return { value: target[index], done: false };\n  return { value: [index, target[index]], done: false };\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject\nIterators.Arguments = Iterators.Array;\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var redefine = require('../internals/redefine');\n\nmodule.exports = function (target, src, options) {\n  for (var key in src) redefine(target, key, src[key], options);\n  return target;\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","module.exports = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.match` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar setSpecies = require('../internals/set-species');\nvar isObject = require('../internals/is-object');\nvar aFunction = require('../internals/a-function');\nvar anInstance = require('../internals/an-instance');\nvar classof = require('../internals/classof-raw');\nvar iterate = require('../internals/iterate');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\nvar speciesConstructor = require('../internals/species-constructor');\nvar task = require('../internals/task').set;\nvar microtask = require('../internals/microtask');\nvar promiseResolve = require('../internals/promise-resolve');\nvar hostReportErrors = require('../internals/host-report-errors');\nvar newPromiseCapabilityModule = require('../internals/new-promise-capability');\nvar perform = require('../internals/perform');\nvar InternalStateModule = require('../internals/internal-state');\nvar isForced = require('../internals/is-forced');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\nvar PROMISE = 'Promise';\nvar getInternalState = InternalStateModule.get;\nvar setInternalState = InternalStateModule.set;\nvar getInternalPromiseState = InternalStateModule.getterFor(PROMISE);\nvar PromiseConstructor = NativePromise;\nvar TypeError = global.TypeError;\nvar document = global.document;\nvar process = global.process;\nvar $fetch = getBuiltIn('fetch');\nvar newPromiseCapability = newPromiseCapabilityModule.f;\nvar newGenericPromiseCapability = newPromiseCapability;\nvar IS_NODE = classof(process) == 'process';\nvar DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\nvar Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;\n\nvar FORCED = isForced(PROMISE, function () {\n  // correct subclassing with @@species support\n  var promise = PromiseConstructor.resolve(1);\n  var empty = function () { /* empty */ };\n  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {\n    exec(empty, empty);\n  };\n  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')\n    && (!IS_PURE || promise['finally'])\n    && promise.then(empty) instanceof FakePromise\n    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && V8_VERSION !== 66);\n});\n\nvar INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {\n  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });\n});\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function (promise, state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  var chain = state.reactions;\n  microtask(function () {\n    var value = state.value;\n    var ok = state.state == FULFILLED;\n    var index = 0;\n    // variable length - can't use forEach\n    while (chain.length > index) {\n      var reaction = chain[index++];\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);\n            state.rejection = HANDLED;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // can throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (error) {\n        if (domain && !exited) domain.exit();\n        reject(error);\n      }\n    }\n    state.reactions = [];\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(promise, state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (handler = global['on' + name]) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (promise, state) {\n  task.call(global, function () {\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform(function () {\n        if (IS_NODE) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (promise, state) {\n  task.call(global, function () {\n    if (IS_NODE) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind = function (fn, promise, state, unwrap) {\n  return function (value) {\n    fn(promise, state, value, unwrap);\n  };\n};\n\nvar internalReject = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(promise, state, true);\n};\n\nvar internalResolve = function (promise, state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          then.call(value,\n            bind(internalResolve, promise, wrapper, state),\n            bind(internalReject, promise, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(promise, wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(promise, state, false);\n    }\n  } catch (error) {\n    internalReject(promise, { done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance(this, PromiseConstructor, PROMISE);\n    aFunction(executor);\n    Internal.call(this);\n    var state = getInternalState(this);\n    try {\n      executor(bind(internalResolve, this, state), bind(internalReject, this, state));\n    } catch (error) {\n      internalReject(this, state, error);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    setInternalState(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: [],\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n  Internal.prototype = redefineAll(PromiseConstructor.prototype, {\n    // `Promise.prototype.then` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.then\n    then: function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      state.parent = true;\n      state.reactions.push(reaction);\n      if (state.state != PENDING) notify(this, state, false);\n      return reaction.promise;\n    },\n    // `Promise.prototype.catch` method\n    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalState(promise);\n    this.promise = promise;\n    this.resolve = bind(internalResolve, promise, state);\n    this.reject = bind(internalReject, promise, state);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n\n  if (!IS_PURE && typeof NativePromise == 'function') {\n    nativeThen = NativePromise.prototype.then;\n\n    // wrap native Promise#then for native async functions\n    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {\n      var that = this;\n      return new PromiseConstructor(function (resolve, reject) {\n        nativeThen.call(that, resolve, reject);\n      }).then(onFulfilled, onRejected);\n    // https://github.com/zloirock/core-js/issues/640\n    }, { unsafe: true });\n\n    // wrap fetch result\n    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {\n      // eslint-disable-next-line no-unused-vars\n      fetch: function fetch(input /* , init */) {\n        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));\n      }\n    });\n  }\n}\n\n$({ global: true, wrap: true, forced: FORCED }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag(PromiseConstructor, PROMISE, false, true);\nsetSpecies(PROMISE);\n\nPromiseWrapper = getBuiltIn(PROMISE);\n\n// statics\n$({ target: PROMISE, stat: true, forced: FORCED }, {\n  // `Promise.reject` method\n  // https://tc39.github.io/ecma262/#sec-promise.reject\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    capability.reject.call(undefined, r);\n    return capability.promise;\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {\n  // `Promise.resolve` method\n  // https://tc39.github.io/ecma262/#sec-promise.resolve\n  resolve: function resolve(x) {\n    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);\n  }\n});\n\n$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {\n  // `Promise.all` method\n  // https://tc39.github.io/ecma262/#sec-promise.all\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        $promiseResolve.call(C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  },\n  // `Promise.race` method\n  // https://tc39.github.io/ecma262/#sec-promise.race\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      var $promiseResolve = aFunction(C.resolve);\n      iterate(iterable, function (promise) {\n        $promiseResolve.call(C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.matchAll` well-known symbol\ndefineWellKnownSymbol('matchAll');\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar ArrayPrototype = Array.prototype;\n\n// check on default Array iterator\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);\n};\n","var anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.github.io/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;\n    setter.call(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter.call(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","var classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","exports.f = require('../internals/well-known-symbol');\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\nvar IS_CONCAT_SPREADABLE_SUPPORT = !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n"],"sourceRoot":""}